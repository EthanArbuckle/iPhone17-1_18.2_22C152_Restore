uint64_t sub_100D8CBE8(uint64_t a1, int *a2, std::string *this)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v7;
  uint64_t v8;
  int v9;
  BOOL v10;
  uint64_t *v11;
  uint64_t v12;
  long long v13;
  long long v14;
  long long v15;
  long long v16;
  long long v17;
  std::string::size_type v18;
  std::string::pointer data;

  v5 = *(void *)(a1 + 64);
  v3 = a1 + 64;
  v4 = v5;
  if (!v5) {
    return 0;
  }
  v7 = *a2;
  v8 = v3;
  do
  {
    v9 = *(_DWORD *)(v4 + 32);
    v10 = v9 < v7;
    if (v9 >= v7) {
      v11 = (uint64_t *)v4;
    }
    else {
      v11 = (uint64_t *)(v4 + 8);
    }
    if (!v10) {
      v8 = v4;
    }
    v4 = *v11;
  }
  while (*v11);
  if (v8 == v3) {
    return 0;
  }
  if (v7 < *(_DWORD *)(v8 + 32)) {
    return 0;
  }
  v12 = *(void *)(v8 + 64);
  if (!v12) {
    return 0;
  }
  std::string::operator=(this, *(const std::string **)(v8 + 64));
  std::string::operator=(this + 1, (const std::string *)(v12 + 24));
  std::string::operator=(this + 2, (const std::string *)(v12 + 48));
  v13 = *(_OWORD *)(v12 + 88);
  v14 = *(_OWORD *)(v12 + 104);
  v15 = *(_OWORD *)(v12 + 120);
  *(_OWORD *)&this[3].__r_.__value_.__l.__data_ = *(_OWORD *)(v12 + 72);
  *(_OWORD *)&this[5].__r_.__value_.__l.__data_ = v15;
  *(_OWORD *)&this[4].__r_.__value_.__r.__words[1] = v14;
  *(_OWORD *)&this[3].__r_.__value_.__r.__words[2] = v13;
  v16 = *(_OWORD *)(v12 + 152);
  v17 = *(_OWORD *)(v12 + 168);
  v18 = *(void *)(v12 + 181);
  *(_OWORD *)&this[5].__r_.__value_.__r.__words[2] = *(_OWORD *)(v12 + 136);
  *(std::string::size_type *)((char *)&this[7].__r_.__value_.__r.__words[1] + 5) = v18;
  *(_OWORD *)&this[7].__r_.__value_.__l.__data_ = v17;
  *(_OWORD *)&this[6].__r_.__value_.__r.__words[1] = v16;
  std::string::operator=(this + 8, (const std::string *)(v12 + 192));
  data = this[9].__r_.__value_.__l.__data_;
  this[9].__r_.__value_.__r.__words[0] = (std::string::size_type)*(id *)(v12 + 216);

  if ((std::string *)v12 != this) {
    sub_10027C3B4(&this[9].__r_.__value_.__s.__data_[8], *(char **)(v12 + 224), *(void *)(v12 + 232), (uint64_t)(*(void *)(v12 + 232) - *(void *)(v12 + 224)) >> 4);
  }
  memcpy(&this[10].__r_.__value_.__r.__words[1], (const void *)(v12 + 248), 0x460uLL);
  return 1;
}

uint64_t sub_100D8CD14(uint64_t a1, int *a2, long long *a3)
{
  sub_100D8E2FC(a3, &v10);
  int v9 = *a2;
  v11 = &v9;
  v5 = sub_10078BC58((uint64_t **)(a1 + 56), &v9, (uint64_t)&unk_101D0B290, &v11);
  long long v6 = v10;
  long long v10 = 0uLL;
  v7 = (std::__shared_weak_count *)v5[9];
  *((_OWORD *)v5 + 4) = v6;
  if (v7)
  {
    sub_1000DB0A0(v7);
    if (*((void *)&v10 + 1)) {
      sub_1000DB0A0(*((std::__shared_weak_count **)&v10 + 1));
    }
  }
  return 1;
}

void sub_100D8CDA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1000DB0A0(a12);
  }
  _Unwind_Resume(exception_object);
}

void sub_100D8CDC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __n128 v8 = sub_100D8EB6C((char *)v9);
  (*(void (**)(uint64_t, uint64_t, void **, uint64_t, uint64_t, void, __n128))(*(void *)a1 + 152))(a1, a2, v9, a3, a4, 0, v8);
  if (__p)
  {
    v19 = __p;
    operator delete(__p);
  }

  if (v16 < 0) {
    operator delete(v15);
  }
  if (v14 < 0) {
    operator delete(v13);
  }
  if (v12 < 0) {
    operator delete(v11);
  }
  if (v10 < 0) {
    operator delete(v9[0]);
  }
}

void sub_100D8CEA4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100488394((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100D8CEB8(uint64_t a1, unsigned int *a2, long long *a3, int a4)
{
  if (*(unsigned char *)(a1 + 108)) {
    return;
  }
  __n128 v8 = _os_activity_create((void *)&_mh_execute_header, "CL: notifyClientsWithData (Fallback)", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_IF_NONE_PRESENT);
  os_activity_scope_enter(v8, &state);

  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022F6698);
  }
  int v9 = qword_102419588;
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v10 = (void *)(a1 + 8);
    if (*(char *)(a1 + 31) < 0) {
      char v10 = (void *)*v10;
    }
    v11 = (std::__shared_weak_count *)*a2;
    *(_DWORD *)buf = 68289794;
    *(_DWORD *)&buf[4] = 0;
    *(_WORD *)&buf[8] = 2082;
    *(void *)&buf[10] = "";
    *(_WORD *)&buf[18] = 2082;
    *(void *)&buf[20] = "activity";
    __int16 v23 = 2082;
    v24 = v10;
    __int16 v25 = 2050;
    v26 = v11;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"notifyClientsWithData\", \"event\":%{public, location:escape_only}s, \"name\":%{public, location:escape_only}s, \"notification\":%{public}lld}", buf, 0x30u);
  }
  uint64_t v12 = *(void *)(a1 + 64);
  if (!v12) {
    goto LABEL_18;
  }
  int v13 = *a2;
  char v14 = (uint64_t **)(a1 + 64);
  do
  {
    int v15 = *(_DWORD *)(v12 + 32);
    BOOL v16 = v15 < v13;
    if (v15 >= v13) {
      id v17 = (uint64_t *)v12;
    }
    else {
      id v17 = (uint64_t *)(v12 + 8);
    }
    if (!v16) {
      char v14 = (uint64_t **)v12;
    }
    uint64_t v12 = *v17;
  }
  while (*v17);
  if (v14 == (uint64_t **)(a1 + 64) || v13 < *((_DWORD *)v14 + 8))
  {
LABEL_18:
    v27 = v28;
    memset(v28, 0, sizeof(v28));
    v29 = 0;
    sub_10078A4E4((uint64_t)buf, a2, (uint64_t)&v27);
    char v14 = sub_10078A368((uint64_t **)(a1 + 56), (__n128 *)buf);
    if (v26) {
      sub_1000DB0A0(v26);
    }
    sub_10078A7B0((uint64_t)&buf[8], *(char **)&buf[16]);
    if (v29) {
      sub_1000DB0A0(v29);
    }
    sub_10078A7B0((uint64_t)&v27, v28[0]);
  }
  if (!a4)
  {
    v20 = (std::__shared_weak_count *)v14[9];
    v14[8] = 0;
    v14[9] = 0;
    if (!v20) {
      goto LABEL_29;
    }
LABEL_28:
    sub_1000DB0A0(v20);
    goto LABEL_29;
  }
  sub_100D8E2FC(a3, buf);
  long long v18 = *(_OWORD *)buf;
  *(void *)buf = 0;
  *(void *)&buf[8] = 0;
  v19 = (std::__shared_weak_count *)v14[9];
  *((_OWORD *)v14 + 4) = v18;
  if (v19)
  {
    sub_1000DB0A0(v19);
    v20 = *(std::__shared_weak_count **)&buf[8];
    if (*(void *)&buf[8]) {
      goto LABEL_28;
    }
  }
LABEL_29:
  if (v14[7]) {
    sub_100D8DD30();
  }
  os_activity_scope_leave(&state);
}

void sub_100D8D488(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state, char a18)
{
}

void sub_100D8D4D4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 108))
  {
    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022F6698);
    }
    v2 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      v3 = (void *)(a1 + 8);
      if (*(char *)(a1 + 31) < 0) {
        v3 = (void *)*v3;
      }
      *(_DWORD *)buf = 136315138;
      v22 = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "%s; already shutdown; not listing clients",
        buf,
        0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419580 != -1) {
        dispatch_once(&qword_102419580, &stru_1022F6698);
      }
      v4 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLNotifier<CLFenceMonitor_Type::Notification, CLFenceMonitor_Type::NotificationData, char, std::string>::listClients() [Notification_T = CLFenceMonitor_Type::Notification, NotificationData_T = CLFenceMonitor_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = std::string]", "%s\n", v4);
      if (v4 != (char *)buf) {
        free(v4);
      }
    }
  }
  else
  {
    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022F6698);
    }
    v5 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      long long v6 = (void *)(a1 + 8);
      if (*(char *)(a1 + 31) < 0) {
        long long v6 = (void *)*v6;
      }
      uint64_t v7 = *(void *)(a1 + 96);
      *(_DWORD *)buf = 136315394;
      v22 = v6;
      __int16 v23 = 2048;
      v24[0] = v7;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "%s; listing clients, num clients: %zu",
        buf,
        0x16u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419580 != -1) {
        dispatch_once(&qword_102419580, &stru_1022F6698);
      }
      v20 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLNotifier<CLFenceMonitor_Type::Notification, CLFenceMonitor_Type::NotificationData, char, std::string>::listClients() [Notification_T = CLFenceMonitor_Type::Notification, NotificationData_T = CLFenceMonitor_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = std::string]", "%s\n", v20);
      if (v20 != (char *)buf) {
        free(v20);
      }
    }
    __n128 v8 = *(void **)(a1 + 80);
    if (v8 != (void *)(a1 + 88))
    {
      do
      {
        int v9 = (void *)v8[5];
        if (v9 != v8 + 6)
        {
          do
          {
            if (qword_102419580 != -1) {
              dispatch_once(&qword_102419580, &stru_1022F6698);
            }
            char v10 = qword_102419588;
            if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
            {
              v11 = (void *)(a1 + 8);
              if (*(char *)(a1 + 31) < 0) {
                v11 = *(void **)(a1 + 8);
              }
              int v12 = *((_DWORD *)v8 + 8);
              int v13 = *((_DWORD *)v9 + 7);
              *(_DWORD *)buf = 136315650;
              v22 = v11;
              __int16 v23 = 1024;
              LODWORD(v24[0]) = v12;
              WORD2(v24[0]) = 1024;
              *(_DWORD *)((char *)v24 + 6) = v13;
              _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "%s; clients, id: %d, notification: %d",
                buf,
                0x18u);
            }
            if (sub_10013D1A0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_102419580 != -1) {
                dispatch_once(&qword_102419580, &stru_1022F6698);
              }
              id v17 = (char *)_os_log_send_and_compose_impl();
              sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLNotifier<CLFenceMonitor_Type::Notification, CLFenceMonitor_Type::NotificationData, char, std::string>::listClients() [Notification_T = CLFenceMonitor_Type::Notification, NotificationData_T = CLFenceMonitor_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = std::string]", "%s\n", v17);
              if (v17 != (char *)buf) {
                free(v17);
              }
            }
            char v14 = (void *)v9[1];
            if (v14)
            {
              do
              {
                int v15 = v14;
                char v14 = (void *)*v14;
              }
              while (v14);
            }
            else
            {
              do
              {
                int v15 = (void *)v9[2];
                BOOL v16 = *v15 == (void)v9;
                int v9 = v15;
              }
              while (!v16);
            }
            int v9 = v15;
          }
          while (v15 != v8 + 6);
        }
        long long v18 = (void *)v8[1];
        if (v18)
        {
          do
          {
            v19 = v18;
            long long v18 = (void *)*v18;
          }
          while (v18);
        }
        else
        {
          do
          {
            v19 = (void *)v8[2];
            BOOL v16 = *v19 == (void)v8;
            __n128 v8 = v19;
          }
          while (!v16);
        }
        __n128 v8 = v19;
      }
      while (v19 != (void *)(a1 + 88));
    }
  }
}

void sub_100D8DA84(uint64_t a1)
{
  sub_100D8DB9C(a1);

  operator delete();
}

id sub_100D8DABC(uint64_t a1, int a2, void *a3)
{
  id result = sub_100D8E5AC(a3);
  if (result)
  {
    int v6 = a2;
    return (id)(*(uint64_t (**)(void, int *, id, void))(a1 + 24))(0, &v6, result, *(void *)(a1 + 32));
  }
  return result;
}

void sub_100D8DB0C(id a1)
{
  qword_102419588 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_100D8DB3C(id a1)
{
  qword_1024193C8 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeoFencing");
}

void sub_100D8DB6C(id a1)
{
  qword_1024193D8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Gnss");
}

uint64_t sub_100D8DB9C(uint64_t a1)
{
  *(void *)a1 = off_1022F6708;
  v2 = (id *)(a1 + 8);
  [*(id *)(a1 + 16) forget:*(void *)(a1 + 8)];

  [*v2 invalidate];
  id *v2 = 0;
  *(void *)(a1 + 16) = 0;
  return a1;
}

__n128 sub_100D8DC0C(uint64_t a1)
{
  v2 = (char *)operator new(0x20uLL);
  *(void *)v2 = off_1022F6810;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((void *)v2 + 3) = *(void *)(a1 + 24);
  return result;
}

__n128 sub_100D8DC60(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = off_1022F6810;
  __n128 result = *(__n128 *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_100D8DC98(void *a1, unsigned int *a2)
{
  uint64_t v2 = a1[2];
  v3 = (uint64_t (*)(void *, void))a1[1];
  v4 = (void *)(a1[3] + (v2 >> 1));
  if (v2) {
    v3 = *(uint64_t (**)(void *, void))(*v4 + v3);
  }
  return v3(v4, *a2);
}

uint64_t sub_100D8DCE4(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100D8DD24()
{
}

void sub_100D8DD30()
{
}

void sub_100D8DDF0()
{
}

void sub_100D8DE14(void *a1, int *a2, void *a3)
{
  if (!*((unsigned char *)a1 + 108))
  {
    v5 = a1 + 8;
    uint64_t v4 = a1[8];
    if (v4)
    {
      int v8 = *a2;
      int v9 = a1 + 8;
      do
      {
        int v10 = *(_DWORD *)(v4 + 32);
        BOOL v11 = v10 < v8;
        if (v10 >= v8) {
          int v12 = (uint64_t *)v4;
        }
        else {
          int v12 = (uint64_t *)(v4 + 8);
        }
        if (!v11) {
          int v9 = (void *)v4;
        }
        uint64_t v4 = *v12;
      }
      while (*v12);
      if (v9 != v5 && v8 >= *((_DWORD *)v9 + 8))
      {
        v49 = v9;
        id v13 = sub_100D8E5AC(a3);
        (*(void (**)(void *, int *, id, void *))(*a1 + 184))(a1, a2, v13, v9 + 10);
        char v14 = (void *)v9[5];
        if (v14 != v9 + 6)
        {
          int v15 = a1 + 11;
          BOOL v16 = a1 + 1;
          do
          {
            uint64_t v17 = *v15;
            if (!*v15) {
              goto LABEL_25;
            }
            int v18 = *((_DWORD *)v14 + 8);
            v19 = a1 + 11;
            do
            {
              int v20 = *(_DWORD *)(v17 + 32);
              BOOL v21 = v20 < v18;
              if (v20 >= v18) {
                v22 = (uint64_t *)v17;
              }
              else {
                v22 = (uint64_t *)(v17 + 8);
              }
              if (!v21) {
                v19 = (uint64_t *)v17;
              }
              uint64_t v17 = *v22;
            }
            while (*v22);
            if (v19 != v15 && (int v23 = *((_DWORD *)v19 + 8), v18 >= v23))
            {
              v48 = v19;
              sub_100D8E204(a1, (uint64_t)&v48, (uint64_t)&v49, a3);
              uint64_t v27 = a1[8];
              if (!v27) {
                return;
              }
              int v28 = *a2;
              v29 = v5;
              do
              {
                int v30 = *(_DWORD *)(v27 + 32);
                BOOL v31 = v30 < v28;
                if (v30 >= v28) {
                  v32 = (uint64_t *)v27;
                }
                else {
                  v32 = (uint64_t *)(v27 + 8);
                }
                if (!v31) {
                  v29 = (void *)v27;
                }
                uint64_t v27 = *v32;
              }
              while (*v32);
              if (v29 == v5 || v28 < *((_DWORD *)v29 + 8)) {
                return;
              }
              v49 = v29;
              uint64_t v34 = v29[6];
              char v14 = v29 + 6;
              uint64_t v33 = v34;
              if (v34)
              {
                v35 = v14;
                uint64_t v36 = v33;
                do
                {
                  int v37 = *(_DWORD *)(v36 + 32);
                  BOOL v38 = v37 < v23;
                  if (v37 >= v23) {
                    v39 = (uint64_t *)v36;
                  }
                  else {
                    v39 = (uint64_t *)(v36 + 8);
                  }
                  if (!v38) {
                    v35 = (void *)v36;
                  }
                  uint64_t v36 = *v39;
                }
                while (*v39);
                if (v35 == v14 || v23 < *((_DWORD *)v35 + 8))
                {
                  do
                  {
                    int v40 = *(_DWORD *)(v33 + 32);
                    BOOL v41 = v23 < v40;
                    if (v23 >= v40) {
                      v42 = (uint64_t *)(v33 + 8);
                    }
                    else {
                      v42 = (uint64_t *)v33;
                    }
                    if (v41) {
                      char v14 = (void *)v33;
                    }
                    uint64_t v33 = *v42;
                  }
                  while (*v42);
                }
                else
                {
                  v43 = (void *)v35[1];
                  if (v43)
                  {
                    do
                    {
                      char v14 = v43;
                      v43 = (void *)*v43;
                    }
                    while (v43);
                  }
                  else
                  {
                    do
                    {
                      char v14 = (void *)v35[2];
                      BOOL v44 = *v14 == (void)v35;
                      v35 = v14;
                    }
                    while (!v44);
                  }
                }
              }
            }
            else
            {
LABEL_25:
              v48 = a1 + 11;
              if (qword_102419580 != -1) {
                dispatch_once(&qword_102419580, &stru_1022F6698);
              }
              v24 = qword_102419588;
              if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_FAULT))
              {
                __int16 v25 = a1 + 1;
                if (*((char *)a1 + 31) < 0) {
                  __int16 v25 = (void *)*v16;
                }
                int v26 = *((_DWORD *)v14 + 8);
                *(_DWORD *)buf = 136446466;
                v55 = v25;
                __int16 v56 = 1026;
                int v57 = v26;
                _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_FAULT, "%{public}s; unknown client %{public}d",
                  buf,
                  0x12u);
              }
              if (sub_10013D1A0(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_102419580 != -1) {
                  dispatch_once(&qword_102419580, &stru_1022F6698);
                }
                v45 = a1 + 1;
                if (*((char *)a1 + 31) < 0) {
                  v45 = (void *)*v16;
                }
                int v46 = *((_DWORD *)v14 + 8);
                int v50 = 136446466;
                v51 = v45;
                __int16 v52 = 1026;
                int v53 = v46;
                v47 = (char *)_os_log_send_and_compose_impl();
                sub_1004BA5E4("Generic", 1, 0, 0, "void CLNotifier<CLFenceMonitor_Type::Notification, CLFenceMonitor_Type::NotificationData, char, std::string>::invokeClientsWithData(const Notification_T &, CLCppContainer *) [Notification_T = CLFenceMonitor_Type::Notification, NotificationData_T = CLFenceMonitor_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = std::string]", "%s\n", v47);
                if (v47 != (char *)buf) {
                  free(v47);
                }
              }
            }
          }
          while (v14 != v49 + 6);
        }
      }
    }
  }
}

unsigned char *sub_100D8E204(unsigned char *result, uint64_t a2, uint64_t a3, void *a4)
{
  if (!result[108])
  {
    uint64_t v7 = result;
    uint64_t v8 = *(unsigned int *)(*(void *)a2 + 32);
    LODWORD(v13) = *(_DWORD *)(*(void *)a3 + 32);
    id v9 = sub_100D8E5AC(a4);
    uint64_t v10 = *(void *)a3 + 80;
    BOOL v11 = (uint64_t **)(*(void *)a3 + 40);
    char v14 = (int *)(*(void *)a2 + 32);
    int v12 = sub_1000EAEE4(v11, v14, (uint64_t)&unk_101D0B290, &v14);
    __n128 result = (unsigned char *)(*(uint64_t (**)(unsigned char *, uint64_t, uint64_t *, id, uint64_t, uint64_t **))(*(void *)v7 + 192))(v7, v8, &v13, v9, v10, v12 + 5);
    if (result) {
      return [*(id *)(*(void *)a2 + 64) onNotification:*(unsigned int *)(*(void *)a3 + 32) withData:a4, v13];
    }
  }
  return result;
}

uint64_t sub_100D8E2FC@<X0>(long long *a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = (char *)operator new(0x570uLL);
  uint64_t result = sub_100D8E358((uint64_t)v4, a1);
  *a2 = v4 + 24;
  a2[1] = v4;
  return result;
}

void sub_100D8E344(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100D8E358(uint64_t a1, long long *a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = off_1022F68A8;
  sub_10048AEC0((char *)(a1 + 24), a2);
  memcpy((void *)(a1 + 272), (char *)a2 + 248, 0x460uLL);
  return a1;
}

void sub_100D8E3B4(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_100D8E3C8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1022F68A8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100D8E3E8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1022F68A8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_100D8E43C(uint64_t a1)
{
  sub_100D8E468((uint64_t)&v1, a1 + 24);
}

void sub_100D8E468(uint64_t a1, uint64_t a2)
{
  v3 = *(void **)(a2 + 224);
  if (v3)
  {
    *(void *)(a2 + 232) = v3;
    operator delete(v3);
  }

  if (*(char *)(a2 + 215) < 0) {
    operator delete(*(void **)(a2 + 192));
  }
  if (*(char *)(a2 + 71) < 0) {
    operator delete(*(void **)(a2 + 48));
  }
  if (*(char *)(a2 + 47) < 0) {
    operator delete(*(void **)(a2 + 24));
  }
  if (*(char *)(a2 + 23) < 0)
  {
    uint64_t v4 = *(void **)a2;
    operator delete(v4);
  }
}

uint64_t sub_100D8E4FC(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 32);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 224);
    if (v2)
    {
      *(void *)(v1 + 232) = v2;
      operator delete(v2);
    }

    if (*(char *)(v1 + 215) < 0) {
      operator delete(*(void **)(v1 + 192));
    }
    if (*(char *)(v1 + 71) < 0) {
      operator delete(*(void **)(v1 + 48));
    }
    if (*(char *)(v1 + 47) < 0) {
      operator delete(*(void **)(v1 + 24));
    }
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  return result;
}

id sub_100D8E5AC(void *a1)
{
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    return 0;
  }

  return sub_100D8E60C(a1);
}

id sub_100D8E60C(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (v2)
  {
    if (getenv("_INTERSILO_UNIT_TEST"))
    {
      if (qword_102418F90 != -1) {
        dispatch_once(&qword_102418F90, &stru_1022F68E8);
      }
      v3 = qword_102418F98;
      if (os_log_type_enabled((os_log_t)qword_102418F98, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 134218498;
        id v8 = v2;
        __int16 v9 = 2048;
        uint64_t v10 = 0;
        __int16 v11 = 2080;
        unint64_t v12 = 0x8000000101D8DC66 & 0x7FFFFFFFFFFFFFFFLL;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly", buf, 0x20u);
      }
      if (!sub_10013D1A0(115, 0)) {
        return 0;
      }
      bzero(buf, 0x65CuLL);
      if (qword_102418F90 == -1)
      {
LABEL_20:
        int v6 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLFenceMonitor_Type::NotificationData, Callback = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:228:46)]", "%s\n", v6);
        if (v6 != (char *)buf) {
          free(v6);
        }
        return 0;
      }
    }
    else
    {
      if (qword_102418F90 != -1) {
        dispatch_once(&qword_102418F90, &stru_1022F68E8);
      }
      v5 = qword_102418F98;
      if (os_log_type_enabled((os_log_t)qword_102418F98, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)buf = 134218498;
        id v8 = v2;
        __int16 v9 = 2048;
        uint64_t v10 = 0;
        __int16 v11 = 2080;
        unint64_t v12 = 0x8000000101D8DC66 & 0x7FFFFFFFFFFFFFFFLL;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly", buf, 0x20u);
      }
      if (!sub_10013D1A0(115, 0)) {
        return 0;
      }
      bzero(buf, 0x65CuLL);
      if (qword_102418F90 == -1) {
        goto LABEL_20;
      }
    }
    dispatch_once(&qword_102418F90, &stru_1022F68E8);
    goto LABEL_20;
  }

  return [a1 cppObjectPtr];
}

void sub_100D8E9CC(id a1)
{
  qword_102418F98 = (uint64_t)os_log_create("com.apple.locationd.Support", "Support");
}

void *sub_100D8E9FC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  return sub_1000DA6E8(a2, *(void *)(a1 + 32), *(void *)(a1 + 40), 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(*(void *)(a1 + 40) - *(void *)(a1 + 32)) >> 3));
}

void *sub_100D8EA2C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  id v2 = (void *)(a1 + 32);
  v2[2] = 0;
  return sub_1000DA6E8(v2, *(void *)(a2 + 32), *(void *)(a2 + 40), 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 3));
}

void sub_100D8EA5C(uint64_t a1)
{
  uint64_t v1 = (void **)(a1 + 32);
  sub_1000D7F78(&v1);
}

void sub_100D8EA88()
{
}

void sub_100D8EB48()
{
}

__n128 sub_100D8EB6C(char *a1)
{
  uint64_t v1 = a1 + 340;
  id v2 = sub_100110970(a1);
  *((void *)v2 + 31) = 0xFFFFFFFFFFFFLL;
  *((void *)v2 + 32) = 0;
  *((void *)v2 + 33) = 0;
  __asm { FMOV            V0.2D, #-1.0 }
  *((_OWORD *)v2 + 17) = xmmword_101D1C320;
  *((__n128 *)v2 + 18) = result;
  *((__n128 *)v2 + 19) = result;
  *((__n128 *)v2 + 20) = result;
  *((_DWORD *)v2 + 84) = 0;
  *(void *)uint64_t v1 = 0xBFF0000000000000;
  *(void *)(v2 + 348) = 0;
  *(void *)(v2 + 356) = 0;
  *((_DWORD *)v2 + 91) = 0;
  *((void *)v2 + 46) = 0xBFF0000000000000;
  *((_DWORD *)v2 + 94) = 0x7FFFFFFF;
  *(void *)(v2 + 388) = 0;
  *(void *)(v2 + 396) = 0;
  *(void *)(v2 + 380) = 0;
  v2[404] = 0;
  v2[412] = 0;
  *((void *)v2 + 52) = 0xBFF0000000000000;
  v2[432] = 1;
  *((void *)v2 + 55) = 0xBFF0000000000000;
  *((__n128 *)v2 + 28) = result;
  *((__n128 *)v2 + 29) = result;
  *((__n128 *)v2 + 30) = result;
  *((__n128 *)v2 + 31) = result;
  *((__n128 *)v2 + 32) = result;
  *((__n128 *)v2 + 33) = result;
  *((void *)v2 + 68) = 0xBFF0000000000000;
  *((_DWORD *)v2 + 140) = 0xFFFF;
  *(void *)(v2 + 572) = 0;
  *(void *)(v2 + 564) = 0;
  *((_OWORD *)v1 + 15) = xmmword_101D1C320;
  *((__n128 *)v1 + 16) = result;
  *((__n128 *)v1 + 17) = result;
  *((__n128 *)v1 + 18) = result;
  *((_DWORD *)v2 + 161) = 0;
  *((void *)v2 + 81) = 0xBFF0000000000000;
  *((void *)v2 + 83) = 0;
  *((void *)v2 + 82) = 0;
  *((_DWORD *)v2 + 168) = 0;
  *((void *)v1 + 42) = 0xBFF0000000000000;
  *((_DWORD *)v2 + 171) = 0x7FFFFFFF;
  v2[712] = 0;
  *((void *)v2 + 88) = 0;
  *((void *)v2 + 86) = 0;
  *((void *)v2 + 87) = 0;
  *((_DWORD *)v2 + 179) = 0xFFFF;
  *((void *)v2 + 91) = 0;
  *((void *)v2 + 90) = 0;
  *((_OWORD *)v2 + 46) = xmmword_101D1C320;
  *((__n128 *)v2 + 47) = result;
  *((__n128 *)v2 + 48) = result;
  *((__n128 *)v2 + 49) = result;
  *((_DWORD *)v2 + 200) = 0;
  *((void *)v1 + 58) = 0xBFF0000000000000;
  *(void *)(v2 + 812) = 0;
  *(void *)(v2 + 820) = 0;
  *((_DWORD *)v2 + 207) = 0;
  *((void *)v2 + 104) = 0xBFF0000000000000;
  *((_DWORD *)v2 + 210) = 0x7FFFFFFF;
  *(void *)(v2 + 844) = 0;
  *(void *)(v2 + 852) = 0;
  v2[868] = 0;
  *(void *)(v2 + 860) = 0;
  *((_DWORD *)v2 + 218) = 0xFFFF;
  *(void *)(v2 + 884) = 0;
  *(void *)(v2 + 876) = 0;
  *(_OWORD *)(v2 + 892) = xmmword_101D1C320;
  *(__n128 *)(v2 + 908) = result;
  *(__n128 *)(v2 + 924) = result;
  *(__n128 *)(v2 + 940) = result;
  *((_DWORD *)v2 + 239) = 0;
  *((void *)v2 + 120) = 0xBFF0000000000000;
  *((void *)v2 + 122) = 0;
  *((void *)v2 + 121) = 0;
  *((_DWORD *)v2 + 246) = 0;
  *((void *)v1 + 81) = 0xBFF0000000000000;
  *((_DWORD *)v2 + 249) = 0x7FFFFFFF;
  *((void *)v2 + 126) = 0;
  *((void *)v2 + 125) = 0;
  v2[1024] = 0;
  *((void *)v2 + 127) = 0;
  return result;
}

uint64_t sub_100D8ECE4(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 32);
  if (v1)
  {
    id v2 = *(void **)(v1 + 224);
    if (v2)
    {
      *(void *)(v1 + 232) = v2;
      operator delete(v2);
    }

    if (*(char *)(v1 + 215) < 0) {
      operator delete(*(void **)(v1 + 192));
    }
    if (*(char *)(v1 + 71) < 0) {
      operator delete(*(void **)(v1 + 48));
    }
    if (*(char *)(v1 + 47) < 0) {
      operator delete(*(void **)(v1 + 24));
    }
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  return result;
}

void sub_100D8ED94()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241AD20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10241AD20))
  {
    qword_10241AD08 = 0;
    qword_10241AD10 = 0;
    qword_10241AD18 = 0;
    __cxa_atexit((void (*)(void *))sub_1003BE920, &qword_10241AD08, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10241AD20);
  }
}

void sub_100D8EE14()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241ADD0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10241ADD0))
  {
    std::__shared_mutex_base::__shared_mutex_base(&stru_10241AD28);
    __cxa_atexit((void (*)(void *))sub_1003BE954, &stru_10241AD28, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10241ADD0);
  }
}

void sub_100D8EEA4(_Unwind_Exception *a1)
{
}

void sub_100D8EEBC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241ADF0, memory_order_acquire) & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_10241ADF0))
    {
      uint64_t v1 = 0x7FFFFFFF00000000;
      v0[2] = xmmword_101D8D820;
      v0[3] = unk_101D8D830;
      v0[4] = xmmword_101D8D840;
      v0[0] = xmmword_101D8D800;
      v0[1] = unk_101D8D810;
      sub_1003BFBA4((uint64_t)&unk_10241ADD8, (int *)v0, 11);
      __cxa_atexit((void (*)(void *))sub_1003BE998, &unk_10241ADD8, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_10241ADF0);
    }
  }
}

void sub_100D8EF9C(_Unwind_Exception *a1)
{
}

void sub_100D8EFB4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_102419688, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_102419688))
  {
    qword_102419670 = 0;
    qword_102419678 = 0;
    qword_102419680 = 0;
    v0 = operator new(6uLL);
    qword_102419678 = (uint64_t)(v0 + 3);
    qword_102419680 = (uint64_t)(v0 + 3);
    *(_DWORD *)v0 = 151521030;
    v0[2] = 3082;
    qword_102419670 = (uint64_t)v0;
    __cxa_atexit((void (*)(void *))sub_1001C6FD8, &qword_102419670, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_102419688);
  }
}

void sub_100D8F06C(_Unwind_Exception *a1)
{
}

void sub_100D8F084()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1024196A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1024196A8))
  {
    qword_102419690 = 0;
    qword_102419698 = 0;
    qword_1024196A0 = 0;
    v0 = operator new(2uLL);
    qword_102419690 = (uint64_t)v0;
    _WORD *v0 = 256;
    qword_102419698 = (uint64_t)(v0 + 1);
    qword_1024196A0 = (uint64_t)(v0 + 1);
    __cxa_atexit((void (*)(void *))sub_1001C700C, &qword_102419690, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1024196A8);
  }
}

void sub_100D8F12C(_Unwind_Exception *a1)
{
}

void *sub_100D8F144(void *result, uint64_t a2, uint64_t a3)
{
  *__n128 result = off_1022F6948;
  result[3] = a3;
  result[4] = a2;
  result[2] = 0;
  return result;
}

uint64_t sub_100D8F16C(uint64_t a1)
{
  *(void *)a1 = off_1022F6948;

  return a1;
}

void sub_100D8F1BC(uint64_t a1)
{
  sub_100D8F16C(a1);

  operator delete();
}

uint64_t sub_100D8F1F4(uint64_t a1, double a2)
{
  uint64_t v4 = (*(uint64_t (**)(void))(**(void **)(a1 + 32) + 80))(*(void *)(a1 + 32));
  if (v4 && !*(void *)(a1 + 16))
  {
    id v5 = [*(id *)(a1 + 24) archiveWithIdentifier:@"TraceHarvestOnDiskOnly"];
    *(void *)(a1 + 16) = v5;
    [v5 eraseAllData];
    [*(id *)(a1 + 16) setRotationInterval:-1.0];
    [*(id *)(a1 + 16) writeSecondaryObject:+[CLPMeta meta] toField:1];
    *(double *)(a1 + 8) = a2;
  }
  return v4;
}

uint64_t sub_100D8F2B4()
{
  return 0;
}

uint64_t sub_100D8F2C0(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

void sub_100D8F2D0(uint64_t a1)
{
  *(void *)(a1 + 16) = 0;
}

uint64_t sub_100D8F2FC()
{
  return 1;
}

CFStringRef sub_100D8F304()
{
  return @"On Disk";
}

void sub_100D8F310(void *a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_102481360, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_102481360))
  {
    __cxa_atexit((void (*)(void *))sub_100D8F3CC, &xmmword_102481350, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_102481360);
  }
  if (qword_102481368 != -1) {
    dispatch_once(&qword_102481368, &stru_1022F69E0);
  }
  uint64_t v2 = *((void *)&xmmword_102481350 + 1);
  *a1 = xmmword_102481350;
  a1[1] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
}

uint64_t sub_100D8F3CC(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 8);
  if (v2) {
    sub_1000DB0A0(v2);
  }
  return a1;
}

void sub_100D8F3FC(id a1)
{
  sub_100D8FC34(&v3);
  long long v1 = v3;
  long long v3 = 0uLL;
  uint64_t v2 = (std::__shared_weak_count *)*((void *)&xmmword_102481350 + 1);
  xmmword_102481350 = v1;
  if (v2)
  {
    sub_1000DB0A0(v2);
    if (*((void *)&v3 + 1)) {
      sub_1000DB0A0(*((std::__shared_weak_count **)&v3 + 1));
    }
  }
}

uint64_t sub_100D8F450(uint64_t a1)
{
  *(CFAbsoluteTime *)a1 = CFAbsoluteTimeGetCurrent();
  sub_100877B9C((void *)(a1 + 8));
  sub_100134750(v5, "CLWifiAssociatedApHarvestDatabase");
  sub_100134750(__p, "CLWifiAssociatedApWifiHarvester");
  sub_1014577F0(a1 + 24, v5, __p);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
  return a1;
}

void sub_100D8F4E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  v22 = *(std::__shared_weak_count **)(v20 + 16);
  if (v22) {
    sub_1000DB0A0(v22);
  }
  _Unwind_Resume(exception_object);
}

void sub_100D8F528(uint64_t a1)
{
  uint64_t v2 = (double *)(a1 + 24);
  BOOL v3 = sub_10064E538(*(void *)(a1 + 8));
  sub_1014577FC((uint64_t)v2, v3);
  sub_1005B1D3C(v2);
  if (!sub_10064E538(*(void *)(a1 + 8)))
  {
    sub_100877B9C(buf);
    long long v4 = *(_OWORD *)buf;
    memset(buf, 0, sizeof(buf));
    id v5 = *(std::__shared_weak_count **)(a1 + 16);
    *(_OWORD *)(a1 + 8) = v4;
    if (v5)
    {
      sub_1000DB0A0(v5);
      if (*(void *)&buf[8]) {
        sub_1000DB0A0(*(std::__shared_weak_count **)&buf[8]);
      }
    }
    if (sub_10064E538(*(void *)(a1 + 8))) {
      char v6 = "success";
    }
    else {
      char v6 = "fail";
    }
    sub_100134750(__p, v6);
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022F6A00);
    }
    uint64_t v7 = qword_1024193A8;
    if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = __p;
      if (v12 < 0) {
        id v8 = (void **)__p[0];
      }
      *(_DWORD *)buf = 136315138;
      *(void *)&uint8_t buf[4] = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "CLWifiAssociatedApWifiHarvester, re-initialize database: %s", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193A0 != -1) {
        dispatch_once(&qword_1024193A0, &stru_1022F6A00);
      }
      __int16 v9 = __p;
      if (v12 < 0) {
        __int16 v9 = (void **)__p[0];
      }
      int v13 = 136315138;
      char v14 = v9;
      uint64_t v10 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiAssociatedApWifiHarvester::reinitializeWifiAssociatedApHarvestDatabaseIfInvalid()", "%s\n", v10);
      if (v10 != (char *)buf) {
        free(v10);
      }
    }
    if (v12 < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_100D8F784(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100D8F7AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v6 = *(double *)(a2 + 76) - *(double *)a1;
  uint64_t result = (uint64_t)sub_1014122A8();
  if (v6 >= *(double *)(result + 24) && *(unsigned char *)(a2 + 180) == 0)
  {
    sub_100F66970((uint64_t)&v11, a3, (_OWORD *)a2, -1);
    v9[6] = v18;
    v9[7] = v19;
    v10[0] = v20[0];
    *(_OWORD *)((char *)v10 + 12) = *(_OWORD *)((char *)v20 + 12);
    v9[2] = v14;
    v9[3] = v15;
    v9[4] = v16;
    v9[5] = v17;
    v9[0] = v12;
    v9[1] = v13;
    uint64_t result = sub_1000E6DB4((uint64_t)v9);
    if (result)
    {
      sub_100D8F528(a1);
      uint64_t result = sub_10087A5CC(*(void *)(a1 + 8), &v11);
      *(void *)a1 = *(void *)(a2 + 76);
    }
  }
  return result;
}

void sub_100D8F898(uint64_t a1)
{
  if (qword_1024193A0 != -1) {
    dispatch_once(&qword_1024193A0, &stru_1022F6A00);
  }
  uint64_t v2 = qword_1024193A8;
  if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Clearing associated AP harvest data in WifiAssociatedApHarvestDatabase [Wifi Harvest]", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022F6A00);
    }
    BOOL v3 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiAssociatedApWifiHarvester::clearHarvest()", "%s\n", v3);
    if (v3 != (char *)buf) {
      free(v3);
    }
  }
  sub_1006509BC(*(void *)(a1 + 8));
}

void sub_100D8FA34(uint64_t a1)
{
  uint64_t v2 = sub_1014122A8();
  double v3 = sub_101412DFC(v2);
  double v6 = v3;
  if (qword_1024193A0 != -1) {
    dispatch_once(&qword_1024193A0, &stru_1022F6A00);
  }
  long long v4 = qword_1024193A8;
  if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 134283521;
    double v10 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Purging Wifi harvest samples older than %{private}.1fs in WifiAssociatedApHarvestDatabase", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022F6A00);
    }
    int v7 = 134283521;
    double v8 = v3;
    id v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiAssociatedApWifiHarvester::purgeOlderWifiHarvestSamples()", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
  sub_10064E5D0(*(void *)(a1 + 8), (uint64_t)&v6);
}

void sub_100D8FC04(id a1)
{
  qword_1024193A8 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

void *sub_100D8FC34@<X0>(void *a1@<X8>)
{
  uint64_t v2 = operator new(0x90uLL);
  uint64_t result = sub_100D8FC80(v2);
  *a1 = v2 + 3;
  a1[1] = v2;
  return result;
}

void sub_100D8FC6C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_100D8FC80(void *a1)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_1022F6A30;
  sub_100D8F450((uint64_t)(a1 + 3));
  return a1;
}

void sub_100D8FCC8(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_100D8FCDC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1022F6A30;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100D8FCFC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1022F6A30;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_100D8FD50(uint64_t a1)
{
  sub_100D8FD7C((uint64_t)&v1, a1 + 24);
}

void sub_100D8FD7C(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 24) = off_1023274E8;
  if (*(char *)(a2 + 111) < 0) {
    operator delete(*(void **)(a2 + 88));
  }
  if (*(char *)(a2 + 87) < 0) {
    operator delete(*(void **)(a2 + 64));
  }
  double v3 = *(std::__shared_weak_count **)(a2 + 16);
  if (v3)
  {
    sub_1000DB0A0(v3);
  }
}

void sub_100D8FE00()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_102419688, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_102419688))
  {
    qword_102419670 = 0;
    qword_102419678 = 0;
    qword_102419680 = 0;
    v0 = operator new(6uLL);
    qword_102419678 = (uint64_t)(v0 + 3);
    qword_102419680 = (uint64_t)(v0 + 3);
    *(_DWORD *)v0 = 151521030;
    v0[2] = 3082;
    qword_102419670 = (uint64_t)v0;
    __cxa_atexit((void (*)(void *))sub_1001C6FD8, &qword_102419670, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_102419688);
  }
}

void sub_100D8FEB8(_Unwind_Exception *a1)
{
}

void sub_100D8FED0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1024196A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1024196A8))
  {
    qword_102419690 = 0;
    qword_102419698 = 0;
    qword_1024196A0 = 0;
    v0 = operator new(2uLL);
    qword_102419690 = (uint64_t)v0;
    _WORD *v0 = 256;
    qword_102419698 = (uint64_t)(v0 + 1);
    qword_1024196A0 = (uint64_t)(v0 + 1);
    __cxa_atexit((void (*)(void *))sub_1001C700C, &qword_102419690, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1024196A8);
  }
}

void sub_100D8FF78(_Unwind_Exception *a1)
{
}

std::string::size_type *sub_100D8FF90(std::string::size_type *a1, int a2)
{
  sub_100134750(__p, "");
  sub_100D900CC((uint64_t)a1, "CyclingSessionSummary", a2, (uint64_t)__p, 1, 30.0);
  if (v7 < 0) {
    operator delete(__p[0]);
  }
  *a1 = (std::string::size_type)off_1022F6A80;
  a1[9] = (std::string::size_type)off_1022F6B38;
  sub_100F03BA0(a1 + 50, 0, 0);
  double v4 = sub_100D90578(a1 + 52);
  (*(void (**)(std::string::size_type *, double))(*a1 + 112))(a1, v4);
  return a1;
}

void sub_100D90088(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (*(char *)(v15 + 439) < 0) {
    operator delete(*v16);
  }
  sub_100D90838((void *)v15);
  _Unwind_Resume(a1);
}

uint64_t sub_100D900CC(uint64_t a1, char *a2, int a3, uint64_t a4, int a5, float a6)
{
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  long long v12 = (void *)(a1 + 8);
  *(void *)a1 = off_1022ADAD8;
  sub_1003BDF2C((void *)(a1 + 8));
  *long long v12 = off_1022ADB08;
  *(void *)a1 = off_1022F6E38;
  *(void *)(a1 + 72) = off_1022F6EE0;
  sub_1011F8748(a1 + 72, a2, a3, a1, a6, a4, a5, 0);
  *(void *)a1 = off_1022F6E38;
  *(void *)(a1 + 72) = off_1022F6EE0;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_DWORD *)(a1 + 320) = 12000;
  *(void *)(a1 + 328) = off_1022ADAD8;
  sub_1003BDF2C((void *)(a1 + 336));
  *(void *)(a1 + 336) = off_1022ADB08;
  uint64_t v13 = *(void *)(a1 + 112);
  uint64_t v17 = a1 + 112;
  (*(void (**)(uint64_t))(v13 + 16))(a1 + 112);
  __int16 v18 = 256;
  if ((a3 & 1) == 0)
  {
    if (*(char *)(a4 + 23) < 0)
    {
      sub_1000DC48C(__p, *(void **)a4, *(void *)(a4 + 8));
    }
    else
    {
      *(_OWORD *)__p = *(_OWORD *)a4;
      uint64_t v16 = *(void *)(a4 + 16);
    }
    sub_1011F8FF8(a1 + 72);
  }
  *(void *)(a1 + 248) = 0xBFF0000000000000;
  (*(void (**)(uint64_t))(*(void *)(a1 + 112) + 24))(a1 + 112);
  return a1;
}

void sub_100D904DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  sub_1019DB560((uint64_t)&a19);
  *uint64_t v27 = v30;
  sub_1003BE1F8(v31);
  sub_100D97288(v29);
  sub_1011F8AE0(v28);
  *__int16 v25 = a12;
  sub_1003BE1F8(v26);
  _Unwind_Resume(a1);
}

void sub_100D90570()
{
}

double sub_100D90578@<D0>(std::string::size_type *a1@<X8>)
{
  sub_100134750(a1, "SELECT ");
  for (uint64_t i = 0; i != 72; i += 6)
  {
    double v3 = (&off_1022F6BE8)[i];
    if (v3)
    {
      if (*((char *)a1 + 23) >= 0) {
        size_t v4 = *((unsigned __int8 *)a1 + 23);
      }
      else {
        size_t v4 = a1[1];
      }
      size_t v5 = strlen((&off_1022F6BE8)[i]);
      sub_1001110E4((uint64_t)&v20, v4 + v5);
      if ((v20.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        double v6 = &v20;
      }
      else {
        double v6 = (std::string *)v20.__r_.__value_.__r.__words[0];
      }
      if (v4)
      {
        if (*((char *)a1 + 23) >= 0) {
          char v7 = a1;
        }
        else {
          char v7 = (const void *)*a1;
        }
        memmove(v6, v7, v4);
      }
      double v8 = (char *)v6 + v4;
      if (v5) {
        memmove(v8, v3, v5);
      }
      v8[v5] = 0;
      __int16 v9 = std::string::append(&v20, ", ");
      std::string::size_type v10 = v9->__r_.__value_.__r.__words[0];
      v21[0] = v9->__r_.__value_.__l.__size_;
      *(void *)((char *)v21 + 7) = *(std::string::size_type *)((char *)&v9->__r_.__value_.__r.__words[1] + 7);
      char v11 = HIBYTE(v9->__r_.__value_.__r.__words[2]);
      v9->__r_.__value_.__l.__size_ = 0;
      v9->__r_.__value_.__r.__words[2] = 0;
      v9->__r_.__value_.__r.__words[0] = 0;
      if (*((char *)a1 + 23) < 0) {
        operator delete((void *)*a1);
      }
      *a1 = v10;
      a1[1] = v21[0];
      *(std::string::size_type *)((char *)a1 + 15) = *(void *)((char *)v21 + 7);
      *((unsigned char *)a1 + 23) = v11;
      if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v20.__r_.__value_.__l.__data_);
      }
    }
  }
  if (*((char *)a1 + 23) < 0)
  {
    uint64_t v13 = (uint64_t *)*a1;
    uint64_t v12 = a1[1] - 1;
    a1[1] = v12;
  }
  else
  {
    uint64_t v12 = *((unsigned __int8 *)a1 + 23) - 1;
    *((unsigned char *)a1 + 23) = v12 & 0x7F;
    uint64_t v13 = (uint64_t *)a1;
  }
  *((unsigned char *)v13 + v12) = 0;
  if (*((char *)a1 + 23) < 0)
  {
    uint64_t v15 = (uint64_t *)*a1;
    uint64_t v14 = a1[1] - 1;
    a1[1] = v14;
  }
  else
  {
    uint64_t v14 = *((unsigned __int8 *)a1 + 23) - 1;
    *((unsigned char *)a1 + 23) = v14 & 0x7F;
    uint64_t v15 = (uint64_t *)a1;
  }
  *((unsigned char *)v15 + v14) = 0;
  if (*((char *)a1 + 23) >= 0) {
    size_t v16 = *((unsigned __int8 *)a1 + 23);
  }
  else {
    size_t v16 = a1[1];
  }
  uint64_t v17 = &v20;
  sub_1001110E4((uint64_t)&v20, v16 + 27);
  if ((v20.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    uint64_t v17 = (std::string *)v20.__r_.__value_.__r.__words[0];
  }
  if (v16)
  {
    if (*((char *)a1 + 23) >= 0) {
      __int16 v18 = a1;
    }
    else {
      __int16 v18 = (const void *)*a1;
    }
    memmove(v17, v18, v16);
  }
  strcpy((char *)v17 + v16, " from CyclingSessionSummary");
  if (*((char *)a1 + 23) < 0) {
    operator delete((void *)*a1);
  }
  double result = *(double *)&v20.__r_.__value_.__l.__data_;
  *(std::string *)a1 = v20;
  return result;
}

void sub_100D90800(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (*(char *)(v15 + 23) < 0) {
    operator delete(*(void **)v15);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100D90838(void *a1)
{
  *a1 = off_1022F6E38;
  uint64_t v2 = (uint64_t)(a1 + 9);
  a1[9] = off_1022F6EE0;
  a1[41] = off_1022ADAD8;
  sub_1003BE1F8(a1 + 42);
  sub_100D97288(a1 + 22);
  sub_1011F8AE0(v2);
  *a1 = off_1022ADAD8;
  sub_1003BE1F8(a1 + 1);
  return a1;
}

void *sub_100D908F8(uint64_t a1)
{
  *(void *)a1 = off_1022F6A80;
  *(void *)(a1 + 72) = off_1022F6B38;
  if (*(char *)(a1 + 439) < 0) {
    operator delete(*(void **)(a1 + 416));
  }

  return sub_100D90838((void *)a1);
}

void *sub_100D9097C(uint64_t a1)
{
  return sub_100D908F8(a1 - 72);
}

void sub_100D90984(uint64_t a1)
{
  sub_100D908F8(a1);

  operator delete();
}

void sub_100D909BC(uint64_t a1)
{
  sub_100D908F8(a1 - 72);

  operator delete();
}

uint64_t sub_100D909F8(uint64_t *a1, uint64_t a2, double a3)
{
  char v7 = a1 + 14;
  uint64_t v6 = a1[14];
  v16[1] = (uint64_t)(a1 + 14);
  (*(void (**)(uint64_t *))(v6 + 16))(a1 + 14);
  __int16 v17 = 256;
  if (*(double *)(*(void *)(a2 + 8) - 16) == 1.79769313e308 && sub_100082064(a1 + 9))
  {
    sub_10002B640(a1[10]);
    sub_100082068(a1 + 50, v16);
    double v8 = (sqlite3_stmt *)sub_10014D19C(v16[0]);
    if (sub_100055D58(v8, 1, a3 - *(double *)(*(void *)(a2 + 8) - 24)))
    {
      uint64_t v9 = a1[10];
      std::string::size_type v10 = (sqlite3_stmt *)sub_10014D19C(v16[0]);
      sub_10001FEB0(v9, v10);
      uint64_t v11 = (*(int (**)(uint64_t *))(*a1 + 152))(a1);
    }
    else
    {
      uint64_t v11 = -1;
    }
    sub_100028FB4(a1[10]);
    uint64_t v12 = a1[10];
    if (*(uint64_t *)(v12 + 88) <= 0) {
      uint64_t v13 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v13 = *(void *)(v12 + 88);
    }
    sub_10003CC68(v12, v13);
    uint64_t v14 = v16[0];
    v16[0] = 0;
    if (v14) {
      (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
    }
  }
  else
  {
    uint64_t v11 = -1;
  }
  (*(void (**)(uint64_t *))(*v7 + 24))(v7);
  return v11;
}

void sub_100D90B98(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1019DB560((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100D90BCC(uint64_t *a1, uint64_t a2)
{
  double Current = CFAbsoluteTimeGetCurrent();

  return sub_100D909F8(a1, a2, Current);
}

uint64_t sub_100D90C0C(uint64_t a1, uint64_t a2)
{
  double v3 = (uint64_t *)(a1 - 72);
  double Current = CFAbsoluteTimeGetCurrent();

  return sub_100D909F8(v3, a2, Current);
}

uint64_t sub_100D90C4C(uint64_t a1)
{
  if (sub_100082064(a1 + 72)) {
    sub_10014D518(*(void *)(a1 + 80), (uint64_t)"SELECT COUNT(*) FROM CyclingSessionSummary");
  }
  return 0xFFFFFFFFLL;
}

void sub_100D90D08(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100D90D44(uint64_t a1)
{
  return sub_100D90C4C(a1 - 72);
}

uint64_t sub_100D90D50(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a1 + 112;
  uint64_t v4 = *(void *)(a1 + 112);
  uint64_t v6 = a1 + 72;
  *(void *)&v19[1] = a1 + 112;
  (*(void (**)(uint64_t))(v4 + 16))(a1 + 112);
  __int16 v20 = 256;
  v19[0] = *(double *)(a2 + 24);
  if (sub_10018360C(v6, v19))
  {
    if (sub_100082064(v6))
    {
      (*(void (**)(uint64_t, uint64_t, void))(*(void *)a1 + 80))(a1, a2, 0);
    }
    else if (!*(unsigned char *)(a1 + 128))
    {
      uint64_t v12 = (void *)(a1 + 176);
      unint64_t v13 = *(void *)(a1 + 216);
      if (v13 > *(int *)(a1 + 320))
      {
        ++*(void *)(a1 + 208);
        *(void *)(a1 + 216) = v13 - 1;
        sub_10058AB7C(a1 + 176, 1);
        if (qword_102418FD0 != -1) {
          dispatch_once(&qword_102418FD0, &stru_1022F6F20);
        }
        uint64_t v14 = qword_102418FD8;
        if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "Maximum number of entries exceeded, throwing out oldest entry.", buf, 2u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102418FD0 != -1) {
            dispatch_once(&qword_102418FD0, &stru_1022F6F20);
          }
          __int16 v18 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLActivityRecorderDb<CLCyclingSessionSummaryDbRow, CLActivityDB::ClassBDataProtectionPolicy>::addSuspectRecord(const T &) [T = CLCyclingSessionSummaryDbRow, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]", "%s\n", v18);
          if (v18 != (char *)buf) {
            free(v18);
          }
        }
      }
      if (qword_102419030 != -1) {
        dispatch_once(&qword_102419030, &stru_1022F6F40);
      }
      uint64_t v15 = qword_102419038;
      if (os_log_type_enabled((os_log_t)qword_102419038, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "Buffer was added to since db was inaccesible.", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419030 != -1) {
          dispatch_once(&qword_102419030, &stru_1022F6F40);
        }
        __int16 v17 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLActivityRecorderDb<CLCyclingSessionSummaryDbRow, CLActivityDB::ClassBDataProtectionPolicy>::addSuspectRecord(const T &) [T = CLCyclingSessionSummaryDbRow, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]", "%s\n", v17);
        if (v17 != (char *)buf) {
          free(v17);
        }
      }
      __n128 v7 = sub_100D973C0(v12, a2);
    }
  }
  else
  {
    if (qword_102418FD0 != -1) {
      dispatch_once(&qword_102418FD0, &stru_1022F6F20);
    }
    double v8 = qword_102418FD8;
    if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v9 = (void *)(a1 + 88);
      if (*(char *)(a1 + 111) < 0) {
        uint64_t v9 = (void *)*v9;
      }
      *(_DWORD *)buf = 68289538;
      int v22 = 0;
      __int16 v23 = 2082;
      v24 = "";
      __int16 v25 = 1026;
      int v26 = (int)v19[0];
      __int16 v27 = 2082;
      uint64_t v28 = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"CL database error, record contains invalid time\", \"invalid time\":%{public}d, \"name\":%{public, location:escape_only}s}", buf, 0x22u);
      if (qword_102418FD0 != -1) {
        dispatch_once(&qword_102418FD0, &stru_1022F6F20);
      }
    }
    std::string::size_type v10 = qword_102418FD8;
    if (os_signpost_enabled((os_log_t)qword_102418FD8))
    {
      uint64_t v11 = (void *)(a1 + 88);
      if (*(char *)(a1 + 111) < 0) {
        uint64_t v11 = (void *)*v11;
      }
      *(_DWORD *)buf = 68289538;
      int v22 = 0;
      __int16 v23 = 2082;
      v24 = "";
      __int16 v25 = 1026;
      int v26 = (int)v19[0];
      __int16 v27 = 2082;
      uint64_t v28 = v11;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v10, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "CL database error, record contains invalid time", "{\"msg%{public}.0s\":\"CL database error, record contains invalid time\", \"invalid time\":%{public}d, \"name\":%{public, location:escape_only}s}", buf, 0x22u);
    }
  }
  return (*(uint64_t (**)(uint64_t, __n128))(*(void *)v5 + 24))(v5, v7);
}

void sub_100D91294(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_1019DB560((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100D912C0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100082064(a1 + 72);
  if (result)
  {
    if (*(char *)(a1 + 439) >= 0) {
      size_t v5 = *(unsigned __int8 *)(a1 + 439);
    }
    else {
      size_t v5 = *(void *)(a1 + 424);
    }
    uint64_t v6 = __p;
    sub_1001110E4((uint64_t)__p, v5 + 22);
    if (v10 < 0) {
      uint64_t v6 = (void **)__p[0];
    }
    if (v5)
    {
      if (*(char *)(a1 + 439) >= 0) {
        __n128 v7 = (const void *)(a1 + 416);
      }
      else {
        __n128 v7 = *(const void **)(a1 + 416);
      }
      memmove(v6, v7, v5);
    }
    strcpy((char *)v6 + v5, "  where session_id = ?");
    if (v10 >= 0) {
      double v8 = __p;
    }
    else {
      double v8 = (void **)__p[0];
    }
    sub_10014D518(*(void *)(a1 + 80), (uint64_t)v8);
  }
  *a2 = 0;
  a2[96] = 0;
  return result;
}

void sub_100D91498(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (v15) {
    (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
  }
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100D914F4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = (sqlite3_stmt *)sub_10014D19C(*a1);
  int v5 = sqlite3_step(v4);
  if (v5 == 101) {
    return 1;
  }
  if (v5 != 100) {
    return 2;
  }
  uint64_t v6 = (sqlite3_stmt *)sub_10014D19C(*a1);
  *(void *)a2 = sqlite3_column_int64(v6, 0);
  __n128 v7 = (sqlite3_stmt *)sub_10014D19C(*a1);
  *(double *)(a2 + 24) = sqlite3_column_double(v7, 1);
  double v8 = (sqlite3_stmt *)sub_10014D19C(*a1);
  *(double *)(a2 + 32) = sqlite3_column_double(v8, 2);
  uint64_t v9 = (sqlite3_stmt *)sub_10014D19C(*a1);
  *(void *)(a2 + 40) = sqlite3_column_int(v9, 3);
  char v10 = (sqlite3_stmt *)sub_10014D19C(*a1);
  *(void *)(a2 + 48) = sqlite3_column_int(v10, 4);
  uint64_t v11 = (sqlite3_stmt *)sub_10014D19C(*a1);
  uint64_t v12 = sqlite3_column_text(v11, 5);
  uuid_parse((const char *)v12, (unsigned __int8 *)(a2 + 8));
  unint64_t v13 = (sqlite3_stmt *)sub_10014D19C(*a1);
  double v14 = sqlite3_column_double(v13, 6);
  if (v14 == 0.0 || v14 == 5.0) {
    double v14 = -1.0;
  }
  *(double *)(a2 + 56) = v14;
  size_t v16 = (sqlite3_stmt *)sub_10014D19C(*a1);
  double v17 = sqlite3_column_double(v16, 7);
  if (v17 == 0.0 || v17 == 5.0) {
    double v17 = -1.0;
  }
  *(double *)(a2 + 64) = v17;
  long long v19 = (sqlite3_stmt *)sub_10014D19C(*a1);
  float v20 = sqlite3_column_double(v19, 8);
  *(float *)(a2 + 72) = v20;
  BOOL v21 = (sqlite3_stmt *)sub_10014D19C(*a1);
  *(double *)(a2 + 80) = sqlite3_column_double(v21, 9);
  int v22 = (sqlite3_stmt *)sub_10014D19C(*a1);
  double v23 = sqlite3_column_double(v22, 10);
  uint64_t result = 0;
  *(float *)&double v23 = v23;
  *(_DWORD *)(a2 + 88) = LODWORD(v23);
  return result;
}

uint64_t sub_100D91674(uint64_t a1, void *a2)
{
  uint64_t v5 = a1 + 112;
  uint64_t v4 = *(void *)(a1 + 112);
  uint64_t v6 = a1 + 72;
  uint64_t v14 = a1 + 112;
  (*(void (**)(uint64_t))(v4 + 16))(a1 + 112);
  __int16 v15 = 256;
  if (sub_100082064(v6))
  {
    a2[1] = *a2;
    if (*(char *)(a1 + 439) >= 0) {
      size_t v7 = *(unsigned __int8 *)(a1 + 439);
    }
    else {
      size_t v7 = *(void *)(a1 + 424);
    }
    double v8 = __p;
    sub_1001110E4((uint64_t)__p, v7 + 24);
    if (v13 < 0) {
      double v8 = (void **)__p[0];
    }
    if (v7)
    {
      if (*(char *)(a1 + 439) >= 0) {
        uint64_t v9 = (const void *)(a1 + 416);
      }
      else {
        uint64_t v9 = *(const void **)(a1 + 416);
      }
      memmove(v8, v9, v7);
    }
    strcpy((char *)v8 + v7, " ORDER BY start_time ASC");
    if (v13 >= 0) {
      char v10 = __p;
    }
    else {
      char v10 = (void **)__p[0];
    }
    sub_10014D518(*(void *)(a1 + 80), (uint64_t)v10);
  }
  return (*(uint64_t (**)(uint64_t))(*(void *)v5 + 24))(v5);
}

void sub_100D91998(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17)
{
  if (a9) {
    (*(void (**)(uint64_t))(*(void *)a9 + 8))(a9);
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  sub_1019DB560((uint64_t)&a17);
  _Unwind_Resume(a1);
}

void sub_100D91A18(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = (_OWORD *)*a2;
  uint64_t v4 = (_OWORD *)a2[1];
  if ((_OWORD *)*a2 == v4) {
    goto LABEL_65;
  }
  size_t v7 = (_OWORD *)a2[1];
  while (1)
  {
    double v9 = *((double *)v5 + 3);
    double v8 = *((double *)v5 + 4);
    double v10 = *(double *)a3;
    int v11 = *(_DWORD *)(a3 + 32);
    if (v11 == 2)
    {
      BOOL v12 = *((void *)v5 + 6) == -1;
    }
    else if (v11 == 1)
    {
      char v13 = *(__int32 **)(a3 + 40);
      uint64_t v14 = *(__int32 **)(a3 + 48);
      if (v13 == v14)
      {
        BOOL v18 = *((void *)v5 + 6) == -1;
      }
      else
      {
        uint64_t v15 = *((void *)v5 + 6);
        size_t v16 = *(__int32 **)(a3 + 48);
        if (v15 == (int)v15)
        {
          double v17 = wmemchr(v13, v15, v14 - v13);
          if (v17) {
            size_t v16 = v17;
          }
          else {
            size_t v16 = v14;
          }
          uint64_t v14 = *(__int32 **)(a3 + 48);
        }
        BOOL v18 = v16 == v14;
      }
      BOOL v12 = !v18;
    }
    else
    {
      BOOL v12 = v11 == 0;
    }
    float v20 = *(void **)(a3 + 8);
    long long v19 = *(void **)(a3 + 16);
    if (v20 == v19)
    {
      BOOL v21 = 1;
    }
    else
    {
      while (*v20 != *((void *)v5 + 5))
      {
        if (++v20 == v19)
        {
          float v20 = *(void **)(a3 + 16);
          break;
        }
      }
      BOOL v21 = v20 != v19;
    }
    if (v8 - v9 < v10) {
      BOOL v12 = 0;
    }
    if (!v12 || !v21) {
      break;
    }
    v5 += 6;
    if (v5 == v4) {
      goto LABEL_66;
    }
  }
  if (v5 != v4)
  {
    double v23 = v5 + 6;
    if (v5 + 6 != v4)
    {
      size_t v7 = v5;
      do
      {
        v24 = v23;
        double v26 = *((double *)v5 + 15);
        double v25 = *((double *)v5 + 16);
        double v27 = *(double *)a3;
        int v28 = *(_DWORD *)(a3 + 32);
        if (v28 == 2)
        {
          BOOL v29 = *((void *)v5 + 18) == -1;
        }
        else if (v28 == 1)
        {
          uint64_t v30 = *(__int32 **)(a3 + 40);
          BOOL v31 = *(__int32 **)(a3 + 48);
          if (v30 == v31)
          {
            BOOL v35 = *((void *)v5 + 18) == -1;
          }
          else
          {
            uint64_t v32 = *((void *)v5 + 18);
            uint64_t v33 = *(__int32 **)(a3 + 48);
            if (v32 == (int)v32)
            {
              uint64_t v34 = wmemchr(v30, v32, v31 - v30);
              if (v34) {
                uint64_t v33 = v34;
              }
              else {
                uint64_t v33 = v31;
              }
              BOOL v31 = *(__int32 **)(a3 + 48);
            }
            BOOL v35 = v33 == v31;
          }
          BOOL v29 = !v35;
        }
        else
        {
          BOOL v29 = v28 == 0;
        }
        int v37 = *(void **)(a3 + 8);
        uint64_t v36 = *(void **)(a3 + 16);
        if (v37 == v36)
        {
          BOOL v38 = 1;
        }
        else
        {
          while (*v37 != *((void *)v5 + 17))
          {
            if (++v37 == v36)
            {
              int v37 = *(void **)(a3 + 16);
              break;
            }
          }
          BOOL v38 = v37 != v36;
        }
        if (v25 - v26 < v27) {
          BOOL v29 = 0;
        }
        if (v29 && v38)
        {
          long long v40 = v24[1];
          _OWORD *v7 = *v24;
          v7[1] = v40;
          long long v41 = v24[2];
          long long v42 = v24[3];
          long long v43 = v24[5];
          v7[4] = v24[4];
          v7[5] = v43;
          v7[2] = v41;
          v7[3] = v42;
          v7 += 6;
        }
        double v23 = v24 + 6;
        uint64_t v5 = v24;
      }
      while (v24 + 6 != v4);
      goto LABEL_66;
    }
LABEL_65:
    size_t v7 = v5;
  }
LABEL_66:
  if (v7 != (_OWORD *)a2[1]) {
    a2[1] = v7;
  }
}

uint64_t sub_100D91CB4(uint64_t a1, uint64_t a2, void *a3, double a4, double a5)
{
  a3[1] = *a3;
  if (sub_100082064(a1 + 72))
  {
    uint64_t v10 = (*(uint64_t (**)(uint64_t, void *))(*(void *)a1 + 40))(a1, a3);
    sub_100D91A18(v10, a3, a2);
    uint64_t v12 = *a3;
    uint64_t v11 = a3[1];
    if (*a3 != v11)
    {
      while (*(double *)(v12 + 32) >= a4 && *(double *)(v12 + 24) <= a5)
      {
        v12 += 96;
        if (v12 == v11) {
          return 100;
        }
      }
    }
    if (v12 != v11)
    {
      uint64_t v15 = v12 + 96;
      if (v12 + 96 != v11)
      {
        do
        {
          if (*(double *)(v15 + 32) >= a4 && *(double *)(v15 + 24) <= a5)
          {
            long long v16 = *(_OWORD *)(v15 + 16);
            *(_OWORD *)uint64_t v12 = *(_OWORD *)v15;
            *(_OWORD *)(v12 + 16) = v16;
            long long v17 = *(_OWORD *)(v15 + 32);
            long long v18 = *(_OWORD *)(v15 + 48);
            long long v19 = *(_OWORD *)(v15 + 80);
            *(_OWORD *)(v12 + 64) = *(_OWORD *)(v15 + 64);
            *(_OWORD *)(v12 + 80) = v19;
            *(_OWORD *)(v12 + 32) = v17;
            *(_OWORD *)(v12 + 48) = v18;
            v12 += 96;
          }
          v15 += 96;
        }
        while (v15 != v11);
        uint64_t v11 = a3[1];
      }
    }
    if (v12 != v11) {
      a3[1] = v12;
    }
    return 100;
  }
  else
  {
    if (qword_1024192F0 != -1) {
      dispatch_once(&qword_1024192F0, &stru_1022F6BC8);
    }
    char v13 = qword_1024192F8;
    if (os_log_type_enabled((os_log_t)qword_1024192F8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "CyclingSessionSummary, DB not accessible", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024192F0 != -1) {
        dispatch_once(&qword_1024192F0, &stru_1022F6BC8);
      }
      float v20 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "CMError CLCyclingSessionSummaryDb::queryInTimeRange(CFAbsoluteTime, CFAbsoluteTime, const CLCyclingSessionSummaryDb::QueryRules &, std::vector<CLCyclingSessionSummaryDbRow> &) const", "%s\n", v20);
      if (v20 != (char *)buf) {
        free(v20);
      }
    }
    return 109;
  }
}

uint64_t sub_100D91F6C(uint64_t *a1)
{
  uint64_t result = sub_10014C3C0(a1[10]);
  if (result)
  {
    sub_100D91FD8((uint64_t)a1);
    sub_1005F7B0C(a1[10], "CyclingSessionSummary", (const char **)&off_1022F6BE8, (const std::string::value_type **)&off_102474638, 0);
    uint64_t result = sub_100601D1C(a1[10], (uint64_t)"DELETE FROM CyclingSessionSummary WHERE start_time < ?");
    a1[50] = result;
    a1[51] = v3;
  }
  return result;
}

uint64_t sub_100D91FD8(uint64_t a1)
{
  uint64_t result = sub_1005F93E4(*(void *)(a1 + 80), "CyclingSessionSummary");
  if (result)
  {
    uint64_t v3 = "session_id";
    int v4 = 5;
    __int16 v5 = 0;
    char v6 = 0;
    char v7 = 0;
    sub_1005FEC4C(*(void *)(a1 + 80), "CyclingSessionSummary", (uint64_t)"session_id", (uint64_t)&v3);
  }
  return result;
}

void sub_100D924D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  sub_101A129A8((uint64_t)&a23);
  if (v61) {
    (*(void (**)(uint64_t))(*(void *)v61 + 8))(v61);
  }
  sub_101A129A8((uint64_t)&a61);
  _Unwind_Resume(a1);
}

uint64_t sub_100D92578(uint64_t a1)
{
  uint64_t result = sub_100082064(a1 + 72);
  if (result) {
    sub_10014D518(*(void *)(a1 + 80), (uint64_t)"DELETE FROM CyclingSessionSummary");
  }
  return result;
}

void sub_100D92628(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_101A5DB04();
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100D92640(uint64_t a1)
{
  return sub_100D92578(a1 - 72);
}

void sub_100D92650(uint64_t a1, uint64_t a2)
{
  memset(out, 0, 37);
  uuid_unparse((const unsigned __int8 *)(a2 + 8), out);
  if (sub_100082064(a1 + 72)) {
    sub_10014D518(*(void *)(a1 + 80), (uint64_t)"INSERT INTO CyclingSessionSummary (start_time, end_time, workout_type, power_meter_id, session_id, hr_max, hr_min, ftp, ftp_calculation_average_time, ftp_raw) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
  }
  if (qword_1024192F0 != -1) {
    dispatch_once(&qword_1024192F0, &stru_1022F6BC8);
  }
  int v4 = qword_1024192F8;
  if (os_log_type_enabled((os_log_t)qword_1024192F8, OS_LOG_TYPE_ERROR))
  {
    uint64_t v5 = *(void *)(a2 + 24);
    uint64_t v6 = *(void *)(a2 + 32);
    buf[0] = 134349570;
    *(void *)&buf[1] = v5;
    __int16 v9 = 2050;
    uint64_t v10 = v6;
    __int16 v11 = 2082;
    uint64_t v12 = out;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "CyclingSessionSummary, database isn't available for entry with startTime, %{public}f, endTime, %{public}f, sessionId, %{public}s", (uint8_t *)buf, 0x20u);
  }
  if (sub_10013D1A0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024192F0 != -1) {
      dispatch_once(&qword_1024192F0, &stru_1022F6BC8);
    }
    char v7 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "virtual void CLCyclingSessionSummaryDb::insertRecordUL(const CLCyclingSessionSummaryDbRow &, BOOL)", "%s\n", v7);
    if (v7 != (char *)buf) {
      free(v7);
    }
  }
}

void sub_100D92AF0(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100D92B34(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)a1 + 120))(a1, a2, 0);
}

uint64_t sub_100D92B5C()
{
  return 0;
}

uint64_t sub_100D92B64(uint64_t a1)
{
  if (sub_100082064(a1 + 72))
  {
    if (*(char *)(a1 + 439) >= 0) {
      size_t v2 = *(unsigned __int8 *)(a1 + 439);
    }
    else {
      size_t v2 = *(void *)(a1 + 424);
    }
    sub_1001110E4((uint64_t)__p, v2 + 25);
    if (v8 >= 0) {
      uint64_t v3 = __p;
    }
    else {
      uint64_t v3 = (void **)__p[0];
    }
    if (v2)
    {
      if (*(char *)(a1 + 439) >= 0) {
        int v4 = (const void *)(a1 + 416);
      }
      else {
        int v4 = *(const void **)(a1 + 416);
      }
      memmove(v3, v4, v2);
    }
    strcpy((char *)v3 + v2, " ORDER BY id DESC LIMIT 1");
    if (v8 >= 0) {
      uint64_t v5 = __p;
    }
    else {
      uint64_t v5 = (void **)__p[0];
    }
    sub_10014D518(*(void *)(a1 + 80), (uint64_t)v5);
  }
  return 2;
}

void sub_100D92CA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (v17) {
    sub_101A5DB04();
  }
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100D92CD4(uint64_t a1, void *a2)
{
  if (!sub_1005F9734(*(void *)(a1 + 80), (char *)a2))
  {
    if (qword_102418FD0 != -1) {
      dispatch_once(&qword_102418FD0, &stru_1022F6F20);
    }
    int v4 = qword_102418FD8;
    if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(buf[0].__r_.__value_.__l.__data_) = 136446210;
      *(std::string::size_type *)((char *)buf[0].__r_.__value_.__r.__words + 4) = (std::string::size_type)a2;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#Notice %{public}s needs autoincrement migration", (uint8_t *)buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418FD0 != -1) {
        dispatch_once(&qword_102418FD0, &stru_1022F6F20);
      }
      LODWORD(__p[0]) = 136446210;
      *(void **)((char *)__p + 4) = a2;
      float v20 = (std::string *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLActivityRecorderDb<CLCyclingSessionSummaryDbRow, CLActivityDB::ClassBDataProtectionPolicy>::migrateDbConstraints(const char *, const CLSqliteDatabase::ColumnInfo *, const char **) [T = CLCyclingSessionSummaryDbRow, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]", "%s\n", (const char *)v20);
      if (v20 != buf) {
        free(v20);
      }
    }
    memset(__p, 0, 24);
    sub_100134750(buf, (char *)a2);
    uint64_t v5 = std::string::append(buf, "AutoIncr");
    long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
    int64_t v22 = v5->__r_.__value_.__r.__words[2];
    *(_OWORD *)BOOL v21 = v6;
    v5->__r_.__value_.__l.__size_ = 0;
    v5->__r_.__value_.__r.__words[2] = 0;
    v5->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(buf[0].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(buf[0].__r_.__value_.__l.__data_);
    }
    sub_100134750(buf, (char *)a2);
    char v7 = std::string::append(buf, "Index");
    v7->__r_.__value_.__l.__size_ = 0;
    v7->__r_.__value_.__r.__words[2] = 0;
    v7->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(buf[0].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(buf[0].__r_.__value_.__l.__data_);
    }
    sub_10002B640(*(void *)(a1 + 80));
    if (SHIBYTE(__p[2]) >= 0) {
      size_t v8 = HIBYTE(__p[2]);
    }
    else {
      size_t v8 = (size_t)__p[1];
    }
    __int16 v9 = buf;
    sub_1001110E4((uint64_t)buf, v8 + 21);
    if ((buf[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      __int16 v9 = (std::string *)buf[0].__r_.__value_.__r.__words[0];
    }
    if (v8)
    {
      if (SHIBYTE(__p[2]) >= 0) {
        uint64_t v10 = __p;
      }
      else {
        uint64_t v10 = (void **)__p[0];
      }
      memmove(v9, v10, v8);
    }
    strcpy((char *)v9 + v8, "DROP TABLE IF EXISTS ");
    if (v22 >= 0) {
      __int16 v11 = v21;
    }
    else {
      __int16 v11 = (void **)v21[0];
    }
    if (v22 >= 0) {
      std::string::size_type v12 = HIBYTE(v22);
    }
    else {
      std::string::size_type v12 = (std::string::size_type)v21[1];
    }
    char v13 = std::string::append(buf, (const std::string::value_type *)v11, v12);
    uint64_t v14 = (void *)v13->__r_.__value_.__r.__words[0];
    v23.__r_.__value_.__r.__words[0] = v13->__r_.__value_.__l.__size_;
    *(std::string::size_type *)((char *)v23.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v13->__r_.__value_.__r.__words[1] + 7);
    char v15 = HIBYTE(v13->__r_.__value_.__r.__words[2]);
    v13->__r_.__value_.__l.__size_ = 0;
    v13->__r_.__value_.__r.__words[2] = 0;
    v13->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(__p[2]) < 0) {
      operator delete(__p[0]);
    }
    __p[0] = v14;
    __p[1] = v23.__r_.__value_.__l.__data_;
    *(void **)((char *)&__p[1] + 7) = *(void **)((char *)v23.__r_.__value_.__r.__words + 7);
    HIBYTE(__p[2]) = v15;
    if (SHIBYTE(buf[0].__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(buf[0].__r_.__value_.__l.__data_);
      char v15 = HIBYTE(__p[2]);
      uint64_t v14 = __p[0];
    }
    if (v15 >= 0) {
      long long v16 = __p;
    }
    else {
      long long v16 = (void **)v14;
    }
    sub_10014D518(*(void *)(a1 + 80), (uint64_t)v16);
  }
  uint64_t v17 = *(void *)(a1 + 80);
  if (*(uint64_t *)(v17 + 88) <= 0) {
    uint64_t v18 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    uint64_t v18 = *(void *)(v17 + 88);
  }
  sub_10003CC68(v17, v18);
  return 0;
}

void sub_100D93F00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,void *a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,void *a47,uint64_t a48,uint64_t a49,uint64_t a50,void *a51,uint64_t a52,uint64_t a53,uint64_t a54,void *a55,uint64_t a56,int a57,__int16 a58,char a59,char a60)
{
  if (a28 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a60 < 0) {
    operator delete(a55);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100D94260(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 112;
  uint64_t v5 = a1 + 72;
  (*(void (**)(uint64_t))(*(void *)(a1 + 112) + 16))(a1 + 112);
  if (sub_100082064(v5))
  {
    memset(out, 0, 37);
    uuid_unparse((const unsigned __int8 *)(a2 + 8), out);
    sub_10014D518(*(void *)(a1 + 80), (uint64_t)"UPDATE CyclingSessionSummary SET end_time = ?, hr_min = ?, hr_max = ? where session_id = ?;");
  }
  (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  return 0;
}

void sub_100D94444(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1019DB560((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100D94484()
{
}

uint64_t sub_100D9448C(uint64_t a1, const unsigned __int8 *a2)
{
  uint64_t v4 = a1 + 112;
  uint64_t v5 = a1 + 72;
  (*(void (**)(uint64_t))(*(void *)(a1 + 112) + 16))(a1 + 112);
  if (sub_100082064(v5))
  {
    memset(out, 0, 37);
    uuid_unparse(a2, out);
    sub_10014D518(*(void *)(a1 + 80), (uint64_t)"UPDATE CyclingSessionSummary SET power_meter_id = ? where session_id = ?;");
  }
  (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  return 0;
}

void sub_100D9464C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1019DB560((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100D9468C()
{
}

uint64_t sub_100D94694(uint64_t a1, const unsigned __int8 *a2)
{
  uint64_t v4 = a1 + 112;
  uint64_t v5 = a1 + 72;
  (*(void (**)(uint64_t))(*(void *)(a1 + 112) + 16))(a1 + 112);
  if (sub_100082064(v5))
  {
    memset(out, 0, 37);
    uuid_unparse(a2, out);
    sub_10014D518(*(void *)(a1 + 80), (uint64_t)"UPDATE CyclingSessionSummary SET ftp = ?, ftp_calculation_average_time = ?, ftp_raw = ? where session_id = ?;");
  }
  (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  return 0;
}

void sub_100D94894(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1019DB560((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100D948D4()
{
}

double sub_100D948DC(uint64_t a1)
{
  uint64_t v3 = a1 + 112;
  uint64_t v2 = *(void *)(a1 + 112);
  uint64_t v4 = a1 + 72;
  uint64_t v12 = a1 + 112;
  (*(void (**)(uint64_t))(v2 + 16))(a1 + 112);
  __int16 v13 = 256;
  if (sub_100082064(v4))
  {
    if (*(char *)(a1 + 439) >= 0) {
      size_t v5 = *(unsigned __int8 *)(a1 + 439);
    }
    else {
      size_t v5 = *(void *)(a1 + 424);
    }
    long long v6 = __p;
    sub_1001110E4((uint64_t)__p, v5 + 102);
    if (v11 < 0) {
      long long v6 = (void **)__p[0];
    }
    if (v5)
    {
      if (*(char *)(a1 + 439) >= 0) {
        char v7 = (const void *)(a1 + 416);
      }
      else {
        char v7 = *(const void **)(a1 + 416);
      }
      memmove(v6, v7, v5);
    }
    strcpy((char *)v6 + v5, " WHERE ftp > 0 and ftp_calculation_average_time < ? ORDER BY ftp_calculation_average_time DESC LIMIT 1");
    if (v11 >= 0) {
      size_t v8 = __p;
    }
    else {
      size_t v8 = (void **)__p[0];
    }
    sub_10014D518(*(void *)(a1 + 80), (uint64_t)v8);
  }
  (*(void (**)(uint64_t))(*(void *)v3 + 24))(v3);
  return 0.0;
}

void sub_100D94B28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (v16) {
    (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
  }
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_1019DB560((uint64_t)&a16);
  _Unwind_Resume(a1);
}

double sub_100D94BA0(uint64_t a1)
{
  uint64_t v3 = a1 + 112;
  uint64_t v2 = *(void *)(a1 + 112);
  uint64_t v4 = a1 + 72;
  uint64_t v12 = a1 + 112;
  (*(void (**)(uint64_t))(v2 + 16))(a1 + 112);
  __int16 v13 = 256;
  if (sub_100082064(v4))
  {
    if (*(char *)(a1 + 439) >= 0) {
      size_t v5 = *(unsigned __int8 *)(a1 + 439);
    }
    else {
      size_t v5 = *(void *)(a1 + 424);
    }
    long long v6 = __p;
    sub_1001110E4((uint64_t)__p, v5 + 66);
    if (v11 < 0) {
      long long v6 = (void **)__p[0];
    }
    if (v5)
    {
      if (*(char *)(a1 + 439) >= 0) {
        char v7 = (const void *)(a1 + 416);
      }
      else {
        char v7 = *(const void **)(a1 + 416);
      }
      memmove(v6, v7, v5);
    }
    strcpy((char *)v6 + v5, " WHERE ftp > 0 and start_time < ? ORDER BY start_time DESC LIMIT 1");
    if (v11 >= 0) {
      size_t v8 = __p;
    }
    else {
      size_t v8 = (void **)__p[0];
    }
    sub_10014D518(*(void *)(a1 + 80), (uint64_t)v8);
  }
  (*(void (**)(uint64_t))(*(void *)v3 + 24))(v3);
  return 0.0;
}

void sub_100D94DE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (v16) {
    (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
  }
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_1019DB560((uint64_t)&a16);
  _Unwind_Resume(a1);
}

uint64_t sub_100D94E5C(void *a1)
{
  uint64_t v2 = (*(void *(**)(void **__return_ptr))(*a1 + 64))(v11);
  if ((SHIBYTE(v12) & 0x80000000) == 0)
  {
    if (HIBYTE(v12)) {
      goto LABEL_3;
    }
LABEL_18:
    sub_101A8D0AC(v2);
    __break(1u);
  }
  __int16 v9 = v11[1];
  operator delete(v11[0]);
  if (!v9) {
    goto LABEL_18;
  }
LABEL_3:
  if (sub_100082064(a1 + 9))
  {
    sub_10010F274((uint64_t)v11);
    uint64_t v3 = sub_100132EFC(&v12, (uint64_t)"SELECT * FROM ", 14);
    (*(void (**)(void **__return_ptr, void *))(*a1 + 64))(v13, a1);
    if ((v14 & 0x80u) == 0) {
      uint64_t v4 = v13;
    }
    else {
      uint64_t v4 = (void **)v13[0];
    }
    if ((v14 & 0x80u) == 0) {
      uint64_t v5 = v14;
    }
    else {
      uint64_t v5 = (uint64_t)v13[1];
    }
    long long v6 = sub_100132EFC(v3, (uint64_t)v4, v5);
    sub_100132EFC(v6, (uint64_t)" WHERE startTime > ? and startTime <= ? ORDER BY rowid ASC", 58);
    if ((char)v14 < 0) {
      operator delete(v13[0]);
    }
    uint64_t v7 = a1[10];
    std::stringbuf::str();
    if ((v14 & 0x80u) == 0) {
      size_t v8 = v13;
    }
    else {
      size_t v8 = (void **)v13[0];
    }
    sub_10014D518(v7, (uint64_t)v8);
  }
  return 2;
}

void sub_100D952EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  if (*(char *)(v4 - 185) < 0) {
    operator delete(*(void **)(v4 - 208));
  }
  sub_101A129A8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100D95374(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 112);
  uint64_t v2 = a1 + 112;
  uint64_t v4 = v2 - 40;
  uint64_t v11 = v2;
  (*(void (**)(void))(v3 + 16))();
  if (!sub_100082064(v4)) {
    sub_100D977CC(a1);
  }
  if (qword_102418FD0 != -1) {
    dispatch_once(&qword_102418FD0, &stru_1022F6F20);
  }
  uint64_t v5 = qword_102418FD8;
  if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_DEBUG))
  {
    long long v6 = (void *)(a1 + 88);
    if (*(char *)(a1 + 111) < 0) {
      long long v6 = (void *)*v6;
    }
    *(_DWORD *)buf = 68289282;
    *(_DWORD *)__int16 v13 = 0;
    *(_WORD *)&v13[4] = 2082;
    *(void *)&v13[6] = "";
    __int16 v14 = 2082;
    char v15 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"Database is already opened.\", \"name\":%{public, location:escape_only}s}", buf, 0x1Cu);
  }
  if (*(void *)(a1 + 216))
  {
    if (qword_102418FD0 != -1) {
      dispatch_once(&qword_102418FD0, &stru_1022F6F20);
    }
    uint64_t v7 = qword_102418FD8;
    if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_FAULT))
    {
      uint64_t v8 = *(void *)(a1 + 216);
      *(_DWORD *)buf = 134349056;
      *(void *)__int16 v13 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_FAULT, "In memory buffer should have been empty! Instead it had a size of %{public}lu.", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418FD0 != -1) {
        dispatch_once(&qword_102418FD0, &stru_1022F6F20);
      }
      uint64_t v10 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "virtual BOOL CLActivityRecorderDb<CLCyclingSessionSummaryDbRow, CLActivityDB::ClassBDataProtectionPolicy>::setDatabaseAccessible() [T = CLCyclingSessionSummaryDbRow, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]", "%s\n", v10);
      if (v10 != (char *)buf) {
        free(v10);
      }
    }
  }
  (*(void (**)(uint64_t))(*(void *)v11 + 24))(v11);
  return 1;
}

void sub_100D95AFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_1019DB560((uint64_t)va);
  _Unwind_Resume(a1);
}

__n128 sub_100D95B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v3 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a3;
  *(_OWORD *)(a2 + 16) = v3;
  __n128 result = *(__n128 *)(a3 + 32);
  long long v5 = *(_OWORD *)(a3 + 48);
  long long v6 = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a3 + 64);
  *(_OWORD *)(a2 + 80) = v6;
  *(__n128 *)(a2 + 32) = result;
  *(_OWORD *)(a2 + 48) = v5;
  return result;
}

uint64_t sub_100D95B4C(uint64_t a1)
{
  return sub_100D95374(a1 - 72);
}

void sub_100D95B54(id a1)
{
  qword_1024192F8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "CyclingPower");
}

uint64_t sub_100D95B84(void *a1, void *a2)
{
  uint64_t v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64))(v13);
  if ((SHIBYTE(v14) & 0x80000000) == 0)
  {
    if (HIBYTE(v14)) {
      goto LABEL_3;
    }
LABEL_18:
    sub_101A8D21C(v4);
    __break(1u);
  }
  uint64_t v12 = v13[1];
  operator delete(v13[0]);
  if (!v12) {
    goto LABEL_18;
  }
LABEL_3:
  uint64_t result = sub_100082064(a1 + 9);
  if (result)
  {
    a2[1] = *a2;
    sub_10010F274((uint64_t)v13);
    long long v6 = sub_100132EFC(&v14, (uint64_t)"SELECT * from ", 14);
    (*(void (**)(void **__return_ptr, void *))(*a1 + 64))(v15, a1);
    if ((v16 & 0x80u) == 0) {
      uint64_t v7 = v15;
    }
    else {
      uint64_t v7 = (void **)v15[0];
    }
    if ((v16 & 0x80u) == 0) {
      uint64_t v8 = v16;
    }
    else {
      uint64_t v8 = (uint64_t)v15[1];
    }
    __int16 v9 = sub_100132EFC(v6, (uint64_t)v7, v8);
    sub_100132EFC(v9, (uint64_t)" ORDER BY id ASC", 16);
    if ((char)v16 < 0) {
      operator delete(v15[0]);
    }
    uint64_t v10 = a1[10];
    std::stringbuf::str();
    if ((v16 & 0x80u) == 0) {
      uint64_t v11 = v15;
    }
    else {
      uint64_t v11 = (void **)v15[0];
    }
    sub_10014D518(v10, (uint64_t)v11);
  }
  return result;
}

void sub_100D95FD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  sub_101A129A8((uint64_t)va);
  _Unwind_Resume(a1);
}

id *sub_100D96058(uint64_t a1, uint64_t a2, char a3)
{
  v31[0] = (id)os_transaction_create();
  v31[1] = 0;
  if (*(double *)(a1 + 248) > 0.0
    && (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 136))(a1, a1 + 224, a2))
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 72))(a1, a1 + 224, a2);
    return sub_1000E1098(v31);
  }
  if ((a3 & 1) == 0) {
    sub_10002B640(*(void *)(a1 + 80));
  }
  int v6 = (*(uint64_t (**)(uint64_t, unsigned char *))(*(void *)a1 + 104))(a1, v40);
  if (v6 == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 120))(a1, a2, 1);
  }
  else
  {
    if (v6)
    {
      if (qword_102418FD0 != -1) {
        dispatch_once(&qword_102418FD0, &stru_1022F6F20);
      }
      uint64_t v14 = qword_102418FD8;
      if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_FAULT, "Failed to insert record due to failure from reading the most recent entry.", buf, 2u);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102418FD0 != -1) {
          dispatch_once(&qword_102418FD0, &stru_1022F6F20);
        }
        LOWORD(v32) = 0;
        char v15 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "virtual void CLActivityRecorderDb<CLCyclingSessionSummaryDbRow, CLActivityDB::ClassBDataProtectionPolicy>::sanitizeAndStoreRecordUL(const T &, BOOL) [T = CLCyclingSessionSummaryDbRow, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]", "%s\n", v15);
        if (v15 != (char *)buf) {
          free(v15);
        }
      }
      goto LABEL_43;
    }
    double v7 = *(double *)(a2 + 24);
    double v8 = v41;
    double v9 = v7 - v41;
    if (v7 - v41 < 0.0) {
      double v9 = -(v7 - v41);
    }
    if (v9 > 604800.0)
    {
      if (qword_102418FD0 != -1) {
        dispatch_once(&qword_102418FD0, &stru_1022F6F20);
      }
      uint64_t v10 = qword_102418FD8;
      if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v11 = *(void *)(a2 + 24);
        *(_DWORD *)buf = 134349312;
        double v37 = v41;
        __int16 v38 = 2050;
        uint64_t v39 = v11;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "#Notice Potential CM database inconsistency, time jump %{public}lf %{public}lf", buf, 0x16u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102418FD0 != -1) {
          dispatch_once(&qword_102418FD0, &stru_1022F6F20);
        }
        uint64_t v25 = *(void *)(a2 + 24);
        int v32 = 134349312;
        double v33 = v41;
        __int16 v34 = 2050;
        uint64_t v35 = v25;
        double v26 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLActivityRecorderDb<CLCyclingSessionSummaryDbRow, CLActivityDB::ClassBDataProtectionPolicy>::sanitizeAndStoreRecordUL(const T &, BOOL) [T = CLCyclingSessionSummaryDbRow, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]", "%s\n", v26);
        if (v26 != (char *)buf) {
          free(v26);
        }
      }
      CLWriteStackshot();
      double v7 = *(double *)(a2 + 24);
      double v8 = v41;
    }
    if (v7 < v8)
    {
      if (v8 - v7 < 10.0)
      {
        if (qword_102418FD0 != -1) {
          dispatch_once(&qword_102418FD0, &stru_1022F6F20);
        }
        uint64_t v12 = qword_102418FD8;
        if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_INFO))
        {
          double v13 = *(double *)(a2 + 24);
          *(_DWORD *)buf = 134217984;
          double v37 = v13;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "Entry being recorded has a startTime in the recent past.  Deleting records after %f.", buf, 0xCu);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102418FD0 != -1) {
            dispatch_once(&qword_102418FD0, &stru_1022F6F20);
          }
          double v27 = *(double *)(a2 + 24);
          int v32 = 134217984;
          double v33 = v27;
          int v28 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLActivityRecorderDb<CLCyclingSessionSummaryDbRow, CLActivityDB::ClassBDataProtectionPolicy>::sanitizeAndStoreRecordUL(const T &, BOOL) [T = CLCyclingSessionSummaryDbRow, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]", "%s\n", v28);
          if (v28 != (char *)buf) {
            free(v28);
          }
        }
        (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 88))(a1, a2);
        goto LABEL_42;
      }
      double v16 = v7 - v8;
      double v17 = *(float *)(a1 + 136);
      if (qword_102418FD0 != -1)
      {
        double v30 = *(float *)(a1 + 136);
        dispatch_once(&qword_102418FD0, &stru_1022F6F20);
        double v17 = v30;
      }
      double v18 = v16 - v17;
      long long v19 = qword_102418FD8;
      if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 134217984;
        double v37 = v18;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, "Entry being recorded has a startTime in the substantial past.  Shift records by %f.", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102418FD0 != -1) {
          dispatch_once(&qword_102418FD0, &stru_1022F6F20);
        }
        int v32 = 134217984;
        double v33 = v18;
        BOOL v29 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLActivityRecorderDb<CLCyclingSessionSummaryDbRow, CLActivityDB::ClassBDataProtectionPolicy>::sanitizeAndStoreRecordUL(const T &, BOOL) [T = CLCyclingSessionSummaryDbRow, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]", "%s\n", v29);
        if (v29 != (char *)buf) {
          free(v29);
        }
      }
      (*(void (**)(uint64_t, double))(*(void *)a1 + 96))(a1, v18);
    }
    (*(void (**)(uint64_t, unsigned char *, uint64_t, uint64_t))(*(void *)a1 + 144))(a1, v40, a1 + 224, a2);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 120))(a1, a2, 1);
  }
LABEL_42:
  long long v20 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 240) = v20;
  long long v21 = *(_OWORD *)(a2 + 32);
  long long v22 = *(_OWORD *)(a2 + 48);
  long long v23 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 304) = v23;
  *(_OWORD *)(a1 + 256) = v21;
  *(_OWORD *)(a1 + 272) = v22;
LABEL_43:
  if ((a3 & 1) == 0) {
    sub_100028FB4(*(void *)(a1 + 80));
  }
  return sub_1000E1098(v31);
}

void sub_100D96868(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1000E1098((id *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100D96894(void *a1, uint64_t a2)
{
  uint64_t v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64))(v16);
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if (HIBYTE(v17)) {
      goto LABEL_3;
    }
LABEL_18:
    double v13 = (_Unwind_Exception *)sub_101A8D38C(v4);
    if ((char)v15 < 0) {
      operator delete(__p[0]);
    }
    sub_101A129A8((uint64_t)v16);
    _Unwind_Resume(v13);
  }
  uint64_t v12 = v16[1];
  operator delete(v16[0]);
  if (!v12) {
    goto LABEL_18;
  }
LABEL_3:
  uint64_t result = sub_100082064(a1 + 9);
  if (result)
  {
    (*(void (**)(void *, uint64_t, uint64_t))(*a1 + 120))(a1, a2, 1);
    sub_10010F274((uint64_t)v16);
    int v6 = sub_100132EFC(&v17, (uint64_t)"DELETE FROM ", 12);
    (*(void (**)(void **__return_ptr, void *))(*a1 + 64))(__p, a1);
    if ((v15 & 0x80u) == 0) {
      double v7 = __p;
    }
    else {
      double v7 = (void **)__p[0];
    }
    if ((v15 & 0x80u) == 0) {
      uint64_t v8 = v15;
    }
    else {
      uint64_t v8 = (uint64_t)__p[1];
    }
    double v9 = sub_100132EFC(v6, (uint64_t)v7, v8);
    sub_100132EFC(v9, (uint64_t)" WHERE startTime > ?", 20);
    if ((char)v15 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v10 = a1[10];
    std::stringbuf::str();
    if ((v15 & 0x80u) == 0) {
      uint64_t v11 = __p;
    }
    else {
      uint64_t v11 = (void **)__p[0];
    }
    sub_10014D518(v10, (uint64_t)v11);
  }
  return result;
}

uint64_t sub_100D96C08(void *a1)
{
  uint64_t v2 = (*(void *(**)(void **__return_ptr))(*a1 + 64))(v14);
  if ((SHIBYTE(v15) & 0x80000000) == 0)
  {
    if (HIBYTE(v15)) {
      goto LABEL_3;
    }
LABEL_18:
    uint64_t v11 = (_Unwind_Exception *)sub_101A8D4FC(v2);
    if ((char)v13 < 0) {
      operator delete(__p[0]);
    }
    sub_101A129A8((uint64_t)v14);
    _Unwind_Resume(v11);
  }
  uint64_t v10 = v14[1];
  operator delete(v14[0]);
  if (!v10) {
    goto LABEL_18;
  }
LABEL_3:
  uint64_t result = sub_100082064(a1 + 9);
  if (result)
  {
    sub_10010F274((uint64_t)v14);
    uint64_t v4 = sub_100132EFC(&v15, (uint64_t)"UPDATE ", 7);
    (*(void (**)(void **__return_ptr, void *))(*a1 + 64))(__p, a1);
    if ((v13 & 0x80u) == 0) {
      long long v5 = __p;
    }
    else {
      long long v5 = (void **)__p[0];
    }
    if ((v13 & 0x80u) == 0) {
      uint64_t v6 = v13;
    }
    else {
      uint64_t v6 = (uint64_t)__p[1];
    }
    double v7 = sub_100132EFC(v4, (uint64_t)v5, v6);
    sub_100132EFC(v7, (uint64_t)" SET startTime = startTime + ?", 30);
    if ((char)v13 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v8 = a1[10];
    std::stringbuf::str();
    if ((v13 & 0x80u) == 0) {
      double v9 = __p;
    }
    else {
      double v9 = (void **)__p[0];
    }
    sub_10014D518(v8, (uint64_t)v9);
  }
  return result;
}

uint64_t sub_100D96F34(void *a1)
{
  uint64_t v2 = (*(void *(**)(void **__return_ptr))(*a1 + 64))(v15);
  if ((SHIBYTE(v16) & 0x80000000) == 0)
  {
    if (HIBYTE(v16)) {
      goto LABEL_3;
    }
LABEL_18:
    uint64_t v11 = (_Unwind_Exception *)sub_101A8D66C(v2);
    if (v12) {
      sub_101A5DB04();
    }
    sub_101A129A8((uint64_t)v15);
    _Unwind_Resume(v11);
  }
  uint64_t v10 = v15[1];
  operator delete(v15[0]);
  if (!v10) {
    goto LABEL_18;
  }
LABEL_3:
  if (sub_100082064(a1 + 9))
  {
    sub_10010F274((uint64_t)v15);
    long long v3 = sub_100132EFC(&v16, (uint64_t)"SELECT * FROM ", 14);
    (*(void (**)(void **__return_ptr, void *))(*a1 + 64))(__p, a1);
    if ((v14 & 0x80u) == 0) {
      uint64_t v4 = __p;
    }
    else {
      uint64_t v4 = (void **)__p[0];
    }
    if ((v14 & 0x80u) == 0) {
      uint64_t v5 = v14;
    }
    else {
      uint64_t v5 = (uint64_t)__p[1];
    }
    uint64_t v6 = sub_100132EFC(v3, (uint64_t)v4, v5);
    sub_100132EFC(v6, (uint64_t)" ORDER BY ROWID DESC LIMIT 1", 28);
    if ((char)v14 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v7 = a1[10];
    std::stringbuf::str();
    if ((v14 & 0x80u) == 0) {
      uint64_t v8 = __p;
    }
    else {
      uint64_t v8 = (void **)__p[0];
    }
    sub_10014D518(v7, (uint64_t)v8);
  }
  return 2;
}

void sub_100D97258(id a1)
{
  qword_102418FD8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Motion");
}

uint64_t sub_100D97288(void *a1)
{
  uint64_t v2 = (void **)a1[1];
  long long v3 = (void **)a1[2];
  a1[5] = 0;
  unint64_t v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      long long v3 = (void **)a1[2];
      uint64_t v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      unint64_t v4 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v5 = v4 >> 3;
  if (v5 == 1)
  {
    uint64_t v6 = 21;
  }
  else
  {
    if (v5 != 2) {
      goto LABEL_9;
    }
    uint64_t v6 = 42;
  }
  a1[4] = v6;
LABEL_9:
  while (v2 != v3)
  {
    uint64_t v7 = *v2++;
    operator delete(v7);
  }

  return sub_1000D7EB4((uint64_t)a1);
}

uint64_t sub_100D97330(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = (sqlite3_stmt *)sub_10014D19C(*a2);
  int v7 = sqlite3_step(v6);
  if (v7 == 101) {
    return 1;
  }
  if (v7 != 100) {
    return 2;
  }
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)a1 + 128))(a1, a2, a3);
  return 0;
}

__n128 sub_100D973C0(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 42 * ((v4 - v5) >> 3) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_100D974B4(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }
  unint64_t v8 = *(void *)(v5 + 8 * (v7 / 0x2A)) + 96 * (v7 % 0x2A);
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)unint64_t v8 = *(_OWORD *)a2;
  *(_OWORD *)(v8 + 16) = v9;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v11 = *(_OWORD *)(a2 + 48);
  long long v12 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v8 + 80) = v12;
  *(__n128 *)(v8 + 32) = result;
  *(_OWORD *)(v8 + 48) = v11;
  ++a1[5];
  return result;
}

void sub_100D97484(id a1)
{
  qword_102419038 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Pedometer");
}

void sub_100D974B4(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x2A;
  unint64_t v4 = v2 - 42;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    unint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    long long v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      __int16 v34 = (char *)sub_1000DA54C(v5, v33);
      uint64_t v35 = &v34[8 * (v33 >> 2)];
      double v37 = &v34[8 * v36];
      __int16 v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        double v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)double v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    long long v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      long long v9 = (char *)a1[1];
    }
    unint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0xFC0uLL);
      sub_10017F0B4(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0xFC0uLL);
    sub_1002D02D8((uint64_t)a1, &v54);
    BOOL v44 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    long long v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      __int16 v34 = (char *)sub_1000DA54C((uint64_t)(a1 + 3), v46);
      uint64_t v35 = &v34[8 * (v46 >> 2)];
      double v37 = &v34[8 * v47];
      v48 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        unint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      long long v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        unint64_t v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  __int16 v56 = a1 + 3;
  *(void *)&long long v54 = sub_1000DA54C((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  int v53 = operator new(0xFC0uLL);
  sub_1000DA434(&v54, &v53);
  double v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    sub_1002D03F8((uint64_t)&v54, v27);
  }
  BOOL v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_100D97780(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_100D977CC(uint64_t a1)
{
  uint64_t v1 = a1 + 72;
  sub_100134750(&__p, "");
  sub_1011F8FF8(v1);
}

void sub_100D9784C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100D97868(uint64_t a1, uint64_t a2)
{
  int v3 = 2;
  __n128 result = (void *)sub_1007FC1E8(a1, &v3, qword_102481370, a2);
  *__n128 result = off_1022F6F70;
  return result;
}

uint64_t sub_100D978BC(uint64_t a1)
{
  if (qword_102419630 != -1) {
    dispatch_once(&qword_102419630, &stru_1022F7038);
  }
  unint64_t v2 = qword_102419638;
  if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
  {
    (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 16))(__p, a1);
    int v3 = v12 >= 0 ? __p : (void **)__p[0];
    *(_DWORD *)buf = 136315138;
    *(void *)&uint8_t buf[4] = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "TILE: clear, tile, %sd", buf, 0xCu);
    if (v12 < 0) {
      operator delete(__p[0]);
    }
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022F7038);
    }
    (*(void (**)(unsigned char *__return_ptr, uint64_t))(*(void *)a1 + 16))(buf, a1);
    if (v8 >= 0) {
      uint64_t v5 = buf;
    }
    else {
      uint64_t v5 = *(unsigned char **)buf;
    }
    int v9 = 136315138;
    uint64_t v10 = v5;
    uint64_t v6 = (char *)_os_log_send_and_compose_impl();
    if (v8 < 0) {
      operator delete(*(void **)buf);
    }
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLHRSETile::clear()", "%s\n", v6);
    if (v6 != (char *)__p) {
      free(v6);
    }
  }
  return sub_101045750(a1);
}

void sub_100D97B18(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 296) = 0;
}

void sub_100D97B44(uint64_t a1)
{
  sub_1010456D8(a1);

  operator delete();
}

uint64_t sub_100D97B7C()
{
  return 90;
}

void sub_100D97B84(id a1)
{
  qword_102419638 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

void sub_100D97BB4()
{
}

void sub_100D97C08()
{
}

void sub_100D97C2C(uint64_t a1, void *a2)
{
  int v3 = (void *)sub_100D98088(a1, "CLFenceDataDownloadManager", a2);
  void *v3 = off_1022F7068;
  v3[14] = 0;
  v3[15] = 0;
  v3[16] = 0;
  sub_10144DA50(v3 + 17);
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = a1 + 160;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 168) = a1 + 160;
  *(_WORD *)(a1 + 192) = 0;
  sub_100110970((char *)(a1 + 200));
  *(unsigned char *)(a1 + 448) = 0;
  sub_1006FC224();
}

void sub_100D97F60(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
}

uint64_t sub_100D98088(uint64_t a1, char *a2, void *a3)
{
  *(void *)a1 = off_1022F7210;
  sub_100134750((void *)(a1 + 8), a2);
  *(void *)(a1 + 32) = a3;
  *(void *)(a1 + 40) = [a3 silo];
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(unsigned char *)(a1 + 108) = 0;
  return a1;
}

void sub_100D98118(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_100D98134(uint64_t a1, int *a2, int *a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022F71C0);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    char v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLFenceDataDownloadManager::onNetworkLocationNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022F71C0);
    }
    int v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLFenceDataDownloadManager::onNetworkLocationNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_100D9C470(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100D982F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100D98310(uint64_t a1, int *a2, int *a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022F71C0);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    char v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLFenceDataDownloadManager::onStatusNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022F71C0);
    }
    int v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLFenceDataDownloadManager::onStatusNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_100D9CA84(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100D984CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100D984EC(uint64_t a1, _DWORD *a2, unsigned __int8 *a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022F71C0);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    char v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLFenceDataDownloadManager::onCompanionNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022F71C0);
    }
    int v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLFenceDataDownloadManager::onCompanionNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_100D9CF84(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100D986A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100D986C8(uint64_t a1, uint64_t a2)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a2 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022F71C0);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v7 = 1;
    unint64_t v4 = _os_activity_create((void *)&_mh_execute_header, "CL: CLFenceDataDownloadManager::onFenceDownloadTimer", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v4, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022F71C0);
    }
    uint64_t v5 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289538;
      int v9 = 0;
      __int16 v10 = 2082;
      char v11 = "";
      __int16 v12 = 2082;
      int v13 = "activity";
      __int16 v14 = 2050;
      uint64_t v15 = a2;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLFenceDataDownloadManager::onFenceDownloadTimer\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v7 = 0;
  }
  sub_100D9C698(a2, a1);
  if (v7) {
    os_activity_scope_leave(&state);
  }
}

void sub_100D9887C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100D9889C(uint64_t a1)
{
  *(void *)a1 = off_1022F7210;
  [*(id *)(a1 + 48) invalidate];

  sub_1004459BC(a1 + 80, *(void **)(a1 + 88));
  sub_100445A1C(a1 + 56, *(void **)(a1 + 64));
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

uint64_t sub_100D98924(uint64_t a1)
{
  *(void *)a1 = off_1022F7068;
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F71E0);
  }
  unint64_t v2 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Fence: delete CLFenceDataDownloadManager", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F71E0);
    }
    char v11 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual CLFenceDataDownloadManager::~CLFenceDataDownloadManager()", "%s\n", v11);
    if (v11 != (char *)buf) {
      free(v11);
    }
  }
  uint64_t v3 = *(void *)(a1 + 152);
  if (v3)
  {
    sub_1001B0AE4(v3);
    uint64_t v4 = *(void *)(a1 + 152);
    if (v4)
    {
      sub_100998C38(v4);
      operator delete();
    }
    *(void *)(a1 + 152) = 0;
  }
  uint64_t v5 = *(void **)(a1 + 424);
  if (v5)
  {
    *(void *)(a1 + 432) = v5;
    operator delete(v5);
  }

  if (*(char *)(a1 + 415) < 0) {
    operator delete(*(void **)(a1 + 392));
  }
  if (*(char *)(a1 + 271) < 0) {
    operator delete(*(void **)(a1 + 248));
  }
  if (*(char *)(a1 + 247) < 0) {
    operator delete(*(void **)(a1 + 224));
  }
  if (*(char *)(a1 + 223) < 0) {
    operator delete(*(void **)(a1 + 200));
  }
  sub_100D9F3B4((uint64_t *)(a1 + 160));
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 144);
  if (v6) {
    sub_1000DB0A0(v6);
  }
  uint64_t v7 = *(void *)(a1 + 128);
  *(void *)(a1 + 128) = 0;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  uint64_t v8 = *(void *)(a1 + 120);
  *(void *)(a1 + 120) = 0;
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
  }
  uint64_t v9 = *(void *)(a1 + 112);
  *(void *)(a1 + 112) = 0;
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
  }
  sub_100D9889C(a1);
  return a1;
}

void sub_100D98C0C(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_1001C7F8C(a1);
  }
  _Unwind_Resume(a1);
}

void sub_100D98C20(uint64_t a1)
{
  sub_100D98924(a1);

  operator delete();
}

uint64_t sub_100D98C58()
{
  return 1;
}

uint64_t sub_100D98C60()
{
  return 1;
}

void *sub_100D98C68@<X0>(_DWORD *a1@<X1>, void *a2@<X8>)
{
  snprintf(__str, 0x20uLL, "%d", *a1);
  return sub_100134750(a2, __str);
}

void sub_100D98CE4(void *a1, long long **a2)
{
  if (qword_1024193C0 != -1) {
LABEL_79:
  }
    dispatch_once(&qword_1024193C0, &stru_1022F71E0);
  uint64_t v4 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
  {
    unint64_t v5 = 0xEF7BDEF7BDEF7BDFLL * (((char *)a2[1] - (char *)*a2) >> 3);
    LODWORD(buf) = 134349056;
    *(void *)((char *)&buf + 4) = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Fence: Adding %{public}ld fences for download", (uint8_t *)&buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F71E0);
    }
    unint64_t v24 = 0xEF7BDEF7BDEF7BDFLL * (((char *)a2[1] - (char *)*a2) >> 3);
    *(_DWORD *)__dst = 134349056;
    *(void *)&__dst[4] = v24;
    unint64_t v25 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceDataDownloadManager::addFencesForDataDownload(const std::vector<CLFenceManager_Type::Fence> &)", "%s\n", v25);
    if (v25 != (char *)&buf) {
      free(v25);
    }
  }
  BOOL v29 = [[CLOSTransaction alloc] initWithDescription:"CLFenceDataDownloadManager.AddFenceForDataDownload"];
  double Current = CFAbsoluteTimeGetCurrent();
  uint64_t v27 = a1[22];
  uint64_t v8 = *a2;
  uint64_t v7 = a2[1];
  if (*a2 != v7)
  {
    a2 = (long long **)(a1 + 20);
    while (1)
    {
      sub_10048AEC0(__dst, v8);
      uint64_t v9 = v45;
      if (v46 == v45) {
        break;
      }
      if (v45) {
        goto LABEL_9;
      }
LABEL_10:

      if (v43 < 0) {
        operator delete(__p);
      }
      if (v39 < 0) {
        operator delete(v38);
      }
      if (v37 < 0) {
        operator delete(v36);
      }
      if (v35 < 0) {
        operator delete(*(void **)__dst);
      }
      uint64_t v8 = (long long *)((char *)v8 + 248);
      if (v8 == v7) {
        goto LABEL_68;
      }
    }
    if (v41 == -1)
    {
      sub_101A8D7DC(qword_1024193C0 == -1);
      abort_report_np();
      __break(1u);
      goto LABEL_79;
    }
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F71E0);
    }
    __int16 v10 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      sub_100C8C864((uint64_t)__dst);
      p_long long buf = &buf;
      if (v48 < 0) {
        p_long long buf = (long long *)buf;
      }
      *(_DWORD *)long long v30 = 136380675;
      *(void *)&v30[4] = p_buf;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "Adding fence to download, %{private}s", v30, 0xCu);
      if (v48 < 0) {
        operator delete((void *)buf);
      }
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F71E0);
      }
      sub_100C8C864((uint64_t)__dst);
      int64_t v20 = v30;
      if (v31 < 0) {
        int64_t v20 = *(unsigned char **)v30;
      }
      int v32 = 136380675;
      unint64_t v33 = v20;
      uint64_t v21 = (char *)_os_log_send_and_compose_impl();
      if (v31 < 0) {
        operator delete(*(void **)v30);
      }
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceDataDownloadManager::addFencesForDataDownload(const std::vector<CLFenceManager_Type::Fence> &)", "%s\n", v21);
      if (v21 != (char *)&buf) {
        free(v21);
      }
    }
    uint64_t v12 = a1[17];
    sub_100C8D5B4((uint64_t)__dst);
    sub_101451318(v12, &buf);
    int v13 = (void *)buf;
    if ((void)buf == *((void *)&buf + 1))
    {
      if (v40 >= 0.0)
      {
        double v40 = Current + -172800.0 + 900.0;
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F71E0);
        }
        __int16 v18 = qword_1024193C8;
        if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
        {
          sub_100C8C864((uint64_t)__dst);
          uint64_t v19 = &buf;
          if (v48 < 0) {
            uint64_t v19 = (long long *)buf;
          }
          *(_DWORD *)long long v30 = 136380675;
          *(void *)&v30[4] = v19;
          _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEBUG, "Fence: Adding fence to download, restored fence, %{private}s", v30, 0xCu);
          if (v48 < 0) {
            operator delete((void *)buf);
          }
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(&buf, 0x65CuLL);
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F71E0);
          }
          sub_100C8C864((uint64_t)__dst);
          unint64_t v22 = v30;
          if (v31 < 0) {
            unint64_t v22 = *(unsigned char **)v30;
          }
          int v32 = 136380675;
          unint64_t v33 = v22;
          uint64_t v17 = (char *)_os_log_send_and_compose_impl();
          if (v31 < 0) {
            operator delete(*(void **)v30);
          }
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceDataDownloadManager::addFencesForDataDownload(const std::vector<CLFenceManager_Type::Fence> &)", "%s\n", v17);
          goto LABEL_66;
        }
      }
    }
    else
    {
      double v40 = *(double *)(buf + 64);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F71E0);
      }
      __int16 v14 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
      {
        CFAbsoluteTime v15 = CFAbsoluteTimeGetCurrent();
        LODWORD(buf) = 134283521;
        *(double *)((char *)&buf + 4) = v15 - v40;
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "Fence: Already have fence data, download age %{private}.1f", (uint8_t *)&buf, 0xCu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F71E0);
        }
        CFAbsoluteTime v16 = CFAbsoluteTimeGetCurrent();
        *(_DWORD *)long long v30 = 134283521;
        *(double *)&v30[4] = v16 - v40;
        uint64_t v17 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceDataDownloadManager::addFencesForDataDownload(const std::vector<CLFenceManager_Type::Fence> &)", "%s\n", v17);
LABEL_66:
        if (v17 != (char *)&buf) {
          free(v17);
        }
      }
    }
    sub_100A0BCCC(a1 + 20, (uint64_t)__dst, 0);
    if (v13) {
      operator delete(v13);
    }
    uint64_t v9 = v45;
    if (!v45) {
      goto LABEL_10;
    }
LABEL_9:
    unint64_t v46 = v9;
    operator delete(v9);
    goto LABEL_10;
  }
LABEL_68:
  if (!v27 && a1[22] && a1[19])
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F71E0);
    }
    uint64_t v23 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
    {
      LOWORD(buf) = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_INFO, "Fence: first fence added, enable download timer", (uint8_t *)&buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F71E0);
      }
      *(_WORD *)__dst = 0;
      uint64_t v26 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceDataDownloadManager::addFencesForDataDownload(const std::vector<CLFenceManager_Type::Fence> &)", "%s\n", v26);
      if (v26 != (char *)&buf) {
        free(v26);
      }
    }
    sub_1001165F8(a1[19], Current + 43200.0);
  }
  sub_100D99718((uint64_t)a1);
}

void sub_100D996A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
  if (v25) {
    operator delete(v25);
  }
  sub_100488394((uint64_t)&a25);
  _Unwind_Resume(a1);
}

void sub_100D99718(uint64_t a1)
{
  if (sub_1001198CC() != 1)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F71E0);
    }
    unint64_t v5 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 67240192;
      *(_DWORD *)&uint8_t buf[4] = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Fence: avoid download check, isLocationServicesEnabled, %{public}d", buf, 8u);
    }
    if (!sub_10013D1A0(115, 2)) {
      return;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F71E0);
    }
    *(_DWORD *)v115 = 67240192;
    *(_DWORD *)&v115[4] = 0;
    uint64_t v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceDataDownloadManager::checkDownloadState()", "%s\n", v6);
LABEL_217:
    if (v6 != buf) {
      free(v6);
    }
    return;
  }
  if (!*(unsigned char *)(a1 + 193) && !*(unsigned char *)(a1 + 192) && !*(unsigned char *)(a1 + 448))
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F71E0);
    }
    v79 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v79, OS_LOG_TYPE_DEBUG, "Fence: no reachability, download not possible", buf, 2u);
    }
    if (!sub_10013D1A0(115, 2)) {
      return;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F71E0);
    }
    *(_WORD *)v115 = 0;
    uint64_t v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceDataDownloadManager::checkDownloadState()", "%s\n", v6);
    goto LABEL_217;
  }
  uint64_t v2 = a1 + 160;
  uint64_t v3 = *(void *)(a1 + 168);
  if (v3 == a1 + 160)
  {
    int v4 = 0;
  }
  else
  {
    int v4 = 0;
    do
    {
      v4 += *(_DWORD *)(v3 + 320) >= 0;
      uint64_t v3 = *(void *)(v3 + 8);
    }
    while (v3 != v2);
  }
  double Current = CFAbsoluteTimeGetCurrent();
  double v8 = Current - *(double *)(a1 + 184);
  if (v8 <= 900.0)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F71E0);
    }
    v74 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 134283521;
      *(double *)&uint8_t buf[4] = v8;
      _os_log_impl((void *)&_mh_execute_header, v74, OS_LOG_TYPE_DEBUG, "Download error too fresh, avoid new downloads, dt, %{private}.1lf", buf, 0xCu);
    }
    if (!sub_10013D1A0(115, 2)) {
      return;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F71E0);
    }
    *(_DWORD *)v115 = 134283521;
    *(double *)&v115[4] = v8;
    uint64_t v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceDataDownloadManager::checkDownloadState()", "%s\n", v6);
    goto LABEL_217;
  }
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F71E0);
  }
  uint64_t v9 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v10 = *(void *)(a1 + 176);
    int v11 = *(unsigned __int8 *)(a1 + 193);
    int v12 = *(unsigned __int8 *)(a1 + 192);
    int v13 = *(unsigned __int8 *)(a1 + 448);
    *(_DWORD *)long long buf = 67175681;
    *(_DWORD *)&uint8_t buf[4] = v4;
    *(_WORD *)&buf[8] = 2049;
    *(void *)&buf[10] = v10;
    *(_WORD *)&buf[18] = 1026;
    *(_DWORD *)v126 = v11;
    *(_WORD *)&v126[4] = 1026;
    *(_DWORD *)v127 = v12;
    *(_WORD *)&v127[4] = 1026;
    *(_DWORD *)v128 = v13;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "checkDownloadState, currentQueries, %{private}d, numCombined, %{private}lu, reachability, %{public}d,%{public}d,%{public}d", buf, 0x24u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F71E0);
    }
    uint64_t v80 = *(void *)(a1 + 176);
    int v81 = *(unsigned __int8 *)(a1 + 193);
    int v82 = *(unsigned __int8 *)(a1 + 192);
    int v83 = *(unsigned __int8 *)(a1 + 448);
    *(_DWORD *)v115 = 67175681;
    *(_DWORD *)&v115[4] = v4;
    *(_WORD *)&v115[8] = 2049;
    *(void *)&v115[10] = v80;
    *(_WORD *)&v115[18] = 1026;
    *(_DWORD *)v116 = v81;
    *(_WORD *)&v116[4] = 1026;
    *(_DWORD *)v117 = v82;
    *(_WORD *)&v117[4] = 1026;
    *(_DWORD *)v118 = v83;
    v84 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceDataDownloadManager::checkDownloadState()", "%s\n", v84);
    if (v84 != buf) {
      free(v84);
    }
  }
  CFAbsoluteTime v14 = CFAbsoluteTimeGetCurrent();
  sub_101171D90((uint64_t)v110);
  uint64_t v15 = *(void *)(a1 + 168);
  if (v15 == v2)
  {
    unint64_t v89 = 0;
    int v16 = 0;
    goto LABEL_191;
  }
  int v16 = 0;
  unint64_t v89 = 0;
  uint64_t v88 = a1 + 200;
  while ((v16 + v4) < 6)
  {
    if ((*(_DWORD *)(v15 + 320) & 0x80000000) == 0)
    {
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F71E0);
      }
      uint64_t v17 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
      {
        sub_100C8C864(v15 + 16);
        __int16 v18 = buf;
        if (v126[3] < 0) {
          __int16 v18 = *(unsigned char **)buf;
        }
        *(_DWORD *)v115 = 136380675;
        *(void *)&v115[4] = v18;
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEBUG, "already downloading fence, %{private}s", v115, 0xCu);
        if ((v126[3] & 0x80000000) != 0) {
          operator delete(*(void **)buf);
        }
      }
      if (!sub_10013D1A0(115, 2)) {
        goto LABEL_83;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F71E0);
      }
      sub_100C8C864(v15 + 16);
      uint64_t v19 = v115;
      if (v116[3] < 0) {
        uint64_t v19 = *(unsigned char **)v115;
      }
      *(_DWORD *)__p = 136380675;
      *(void *)&__p[4] = v19;
      int64_t v20 = (char *)_os_log_send_and_compose_impl();
      if ((v116[3] & 0x80000000) != 0) {
        operator delete(*(void **)v115);
      }
      goto LABEL_42;
    }
    double v21 = vabdd_f64(Current, *(double *)(v15 + 128));
    double v22 = *(double *)(v15 + 112);
    if (v22 > 400.0
      || *(unsigned char *)(v15 + 204)
      || *(_DWORD *)(v15 + 196) == 2
      || *(void *)(v15 + 248) != *(void *)(v15 + 240)
      || (*(unsigned char *)(v15 + 176) & 0x20) != 0)
    {
      if (v22 < 7000.0 && v21 >= 3600.0)
      {
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F71E0);
        }
        BOOL v29 = qword_1024193C8;
        if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
        {
          sub_100C8C864(v15 + 16);
          long long v30 = buf;
          if (v126[3] < 0) {
            long long v30 = *(unsigned char **)buf;
          }
          *(_DWORD *)v115 = 136380675;
          *(void *)&v115[4] = v30;
          _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_INFO, "Fence: request tile download, %{private}s", v115, 0xCu);
          if ((v126[3] & 0x80000000) != 0) {
            operator delete(*(void **)buf);
          }
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F71E0);
          }
          sub_100C8C864(v15 + 16);
          v64 = v115;
          if (v116[3] < 0) {
            v64 = *(unsigned char **)v115;
          }
          *(_DWORD *)__p = 136380675;
          *(void *)&__p[4] = v64;
          v65 = (char *)_os_log_send_and_compose_impl();
          if ((v116[3] & 0x80000000) != 0) {
            operator delete(*(void **)v115);
          }
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceDataDownloadManager::checkDownloadState()", "%s\n", v65);
          if (v65 != buf) {
            free(v65);
          }
        }
        id v31 = [[[*(id *)(a1 + 32) vendor] proxyForService:@"CLWifiTilesManager"];
        double v32 = *(double *)(v15 + 88);
        double v33 = *(double *)(v15 + 96);
        __int16 v100 = 0;
        char v101 = 0;
        int v102 = v113;
        char v103 = v114;
        unint64_t v104 = 0xBFF0000000000000;
        int v105 = 0;
        CFAbsoluteTime v106 = v14;
        __int16 v107 = 257;
        int v108 = v111;
        __int16 v109 = v112;
        [v31 requestTileDownloadForLat:&v100 lon:v32 details:v33];
        *(double *)(v15 + 128) = Current;
      }
      goto LABEL_83;
    }
    if (*(double *)(a1 + 296) <= 0.0 || v21 < 43200.0)
    {
      if ((*(unsigned char *)(a1 + 192) || *(unsigned char *)(a1 + 448)) && v21 < 345600.0)
      {
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F71E0);
        }
        __int16 v34 = qword_1024193C8;
        if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
        {
          sub_100C8C864(v15 + 16);
          char v35 = v115;
          if (v116[3] < 0) {
            char v35 = *(unsigned char **)v115;
          }
          int v36 = *(unsigned __int8 *)(a1 + 193);
          int v37 = *(unsigned __int8 *)(a1 + 192);
          int v38 = *(unsigned __int8 *)(a1 + 448);
          *(_DWORD *)long long buf = 136381955;
          *(void *)&uint8_t buf[4] = v35;
          *(_WORD *)&unsigned char buf[12] = 1026;
          *(_DWORD *)&buf[14] = v36;
          *(_WORD *)&buf[18] = 1026;
          *(_DWORD *)v126 = v37;
          *(_WORD *)&v126[4] = 1026;
          *(_DWORD *)v127 = v38;
          *(_WORD *)&v127[4] = 2050;
          *(double *)v128 = v21;
          *(_WORD *)&v128[8] = 2050;
          *(void *)&v128[10] = 0x4115180000000000;
          _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEBUG, "fence, %{private}s, is fresh for reachability, %{public}d,%{public}d,%{public}d, age, %{public}.1lf, thresh, %{public}.1lf", buf, 0x32u);
          if ((v116[3] & 0x80000000) != 0) {
            operator delete(*(void **)v115);
          }
        }
        if (!sub_10013D1A0(115, 2)) {
          goto LABEL_83;
        }
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F71E0);
        }
        sub_100C8C864(v15 + 16);
        char v39 = __p;
        if (v124 < 0) {
          char v39 = *(unsigned char **)__p;
        }
        int v40 = *(unsigned __int8 *)(a1 + 193);
        int v41 = *(unsigned __int8 *)(a1 + 192);
        int v42 = *(unsigned __int8 *)(a1 + 448);
        *(_DWORD *)v115 = 136381955;
        *(void *)&v115[4] = v39;
        *(_WORD *)&v115[12] = 1026;
        *(_DWORD *)&v115[14] = v40;
        *(_WORD *)&v115[18] = 1026;
        *(_DWORD *)v116 = v41;
        *(_WORD *)&v116[4] = 1026;
        *(_DWORD *)v117 = v42;
        *(_WORD *)&v117[4] = 2050;
        *(double *)v118 = v21;
        *(_WORD *)&v118[8] = 2050;
        *(void *)&v118[10] = 0x4115180000000000;
        int64_t v20 = (char *)_os_log_send_and_compose_impl();
        if (v124 < 0) {
          operator delete(*(void **)__p);
        }
        goto LABEL_42;
      }
      if (*(unsigned char *)(a1 + 193) && v21 < 172800.0)
      {
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F71E0);
        }
        char v43 = qword_1024193C8;
        if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
        {
          sub_100C8C864(v15 + 16);
          id v44 = v115;
          if (v116[3] < 0) {
            id v44 = *(unsigned char **)v115;
          }
          int v45 = *(unsigned __int8 *)(a1 + 193);
          int v46 = *(unsigned __int8 *)(a1 + 192);
          int v47 = *(unsigned __int8 *)(a1 + 448);
          *(_DWORD *)long long buf = 136381955;
          *(void *)&uint8_t buf[4] = v44;
          *(_WORD *)&unsigned char buf[12] = 1026;
          *(_DWORD *)&buf[14] = v45;
          *(_WORD *)&buf[18] = 1026;
          *(_DWORD *)v126 = v46;
          *(_WORD *)&v126[4] = 1026;
          *(_DWORD *)v127 = v47;
          *(_WORD *)&v127[4] = 2050;
          *(double *)v128 = v21;
          *(_WORD *)&v128[8] = 2050;
          *(void *)&v128[10] = 0x4105180000000000;
          _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEBUG, "fence, %{private}s, is fresh for reachability, %{public}d,%{public}d,%{public}d, age, %{public}.1lf, thresh, %{public}.1lf", buf, 0x32u);
          if ((v116[3] & 0x80000000) != 0) {
            operator delete(*(void **)v115);
          }
        }
        if (!sub_10013D1A0(115, 2)) {
          goto LABEL_83;
        }
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F71E0);
        }
        sub_100C8C864(v15 + 16);
        char v48 = __p;
        if (v124 < 0) {
          char v48 = *(unsigned char **)__p;
        }
        int v49 = *(unsigned __int8 *)(a1 + 193);
        int v50 = *(unsigned __int8 *)(a1 + 192);
        int v51 = *(unsigned __int8 *)(a1 + 448);
        *(_DWORD *)v115 = 136381955;
        *(void *)&v115[4] = v48;
        *(_WORD *)&v115[12] = 1026;
        *(_DWORD *)&v115[14] = v49;
        *(_WORD *)&v115[18] = 1026;
        *(_DWORD *)v116 = v50;
        *(_WORD *)&v116[4] = 1026;
        *(_DWORD *)v117 = v51;
        *(_WORD *)&v117[4] = 2050;
        *(double *)v118 = v21;
        *(_WORD *)&v118[8] = 2050;
        *(void *)&v118[10] = 0x4105180000000000;
        int64_t v20 = (char *)_os_log_send_and_compose_impl();
        if (v124 < 0) {
          operator delete(*(void **)__p);
        }
LABEL_42:
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceDataDownloadManager::checkDownloadState()", "%s\n", v20);
LABEL_43:
        if (v20 != buf) {
          free(v20);
        }
        goto LABEL_83;
      }
    }
    else
    {
      double v23 = sub_1000F1648(v110, *(double *)(a1 + 272), *(double *)(a1 + 280), *(double *)(v15 + 88), *(double *)(v15 + 96), 0.0);
      double v24 = *(double *)(a1 + 296);
      if (v24 <= 400.0
        && !*(unsigned char *)(a1 + 388)
        && *(_DWORD *)(a1 + 380) != 2
        && *(void *)(a1 + 432) == *(void *)(a1 + 424)
        && (*(unsigned char *)(a1 + 360) & 0x20) == 0
        && v23 - *(double *)(v15 + 112) - v24 <= 0.0)
      {
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F71E0);
        }
        unint64_t v25 = qword_1024193C8;
        if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
        {
          sub_100C8C864(v88);
          uint64_t v26 = buf;
          if (v126[3] < 0) {
            uint64_t v26 = *(unsigned char **)buf;
          }
          *(_DWORD *)v115 = 136380675;
          *(void *)&v115[4] = v26;
          _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_INFO, "Fence: Urgent refresh, %{private}s", v115, 0xCu);
          if ((v126[3] & 0x80000000) != 0) {
            operator delete(*(void **)buf);
          }
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F71E0);
          }
          sub_100C8C864(v88);
          v72 = v115;
          if (v116[3] < 0) {
            v72 = *(unsigned char **)v115;
          }
          *(_DWORD *)__p = 136380675;
          *(void *)&__p[4] = v72;
          v73 = (char *)_os_log_send_and_compose_impl();
          if ((v116[3] & 0x80000000) != 0) {
            operator delete(*(void **)v115);
          }
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceDataDownloadManager::checkDownloadState()", "%s\n", v73);
          if (v73 != buf) {
            free(v73);
          }
        }
        *(void *)(a1 + 296) = 0xBFF0000000000000;
        if (v21 < 345600.0) {
          int v27 = HIDWORD(v89) + 1;
        }
        else {
          int v27 = HIDWORD(v89) + 2;
        }
        unsigned int v28 = v89;
        if (v21 >= 172800.0) {
          unsigned int v28 = v89 + 1;
        }
        unint64_t v89 = __PAIR64__(v27, v28);
        int v87 = 1;
        goto LABEL_134;
      }
    }
    if (v21 < 172800.0) {
      int v52 = v89;
    }
    else {
      int v52 = v89 + 1;
    }
    if (v21 < 345600.0) {
      int v53 = HIDWORD(v89);
    }
    else {
      int v53 = HIDWORD(v89) + 1;
    }
    if (v21 >= 345600.0 && ((++HIDWORD(v89), *(unsigned char *)(a1 + 192)) || *(unsigned char *)(a1 + 193) || *(unsigned char *)(a1 + 448)))
    {
      int v87 = 0;
      LODWORD(v89) = v52;
    }
    else
    {
      if (v21 < 172800.0 || (LODWORD(v89) = v89 + 1, !*(unsigned char *)(a1 + 193)))
      {
        HIDWORD(v89) = v53;
        goto LABEL_83;
      }
      int v87 = 0;
      HIDWORD(v89) = v53;
    }
LABEL_134:
    *(_DWORD *)(v15 + 320) = sub_100D9BAFC(a1, v15 + 16);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F71E0);
    }
    uint64_t v54 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
    {
      log = v54;
      int v55 = *(_DWORD *)(v15 + 320);
      sub_100C8C864(v15 + 16);
      __int16 v56 = v115;
      if (v116[3] < 0) {
        __int16 v56 = *(unsigned char **)v115;
      }
      int v57 = *(unsigned __int8 *)(a1 + 193);
      int v58 = *(unsigned __int8 *)(a1 + 192);
      int v59 = *(unsigned __int8 *)(a1 + 448);
      *(_DWORD *)long long buf = 67242243;
      *(_DWORD *)&uint8_t buf[4] = v55;
      *(_WORD *)&buf[8] = 2081;
      *(void *)&buf[10] = v56;
      *(_WORD *)&buf[18] = 1026;
      *(_DWORD *)v126 = v57;
      *(_WORD *)&v126[4] = 1026;
      *(_DWORD *)v127 = v58;
      *(_WORD *)&v127[4] = 1026;
      *(_DWORD *)v128 = v59;
      *(_WORD *)&v128[4] = 2050;
      *(double *)&v128[6] = v21;
      *(_WORD *)&v128[14] = 1026;
      *(_DWORD *)&v128[16] = HIDWORD(v89);
      __int16 v129 = 1026;
      int v130 = v89;
      __int16 v131 = 1026;
      int v132 = v87;
      _os_log_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_INFO, "Fence: request ALS/tile download, tag, %{public}d, %{private}s, need refresh, %{public}d,%{public}d,%{public}d, age, %{public}.1lf, num %{public}d, %{public}d, isUrgentDownload, %{public}d", buf, 0x40u);
      if ((v116[3] & 0x80000000) != 0) {
        operator delete(*(void **)v115);
      }
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F71E0);
      }
      int v66 = *(_DWORD *)(v15 + 320);
      sub_100C8C864(v15 + 16);
      v67 = __p;
      if (v124 < 0) {
        v67 = *(unsigned char **)__p;
      }
      int v68 = *(unsigned __int8 *)(a1 + 193);
      int v69 = *(unsigned __int8 *)(a1 + 192);
      int v70 = *(unsigned __int8 *)(a1 + 448);
      *(_DWORD *)v115 = 67242243;
      *(_DWORD *)&v115[4] = v66;
      *(_WORD *)&v115[8] = 2081;
      *(void *)&v115[10] = v67;
      *(_WORD *)&v115[18] = 1026;
      *(_DWORD *)v116 = v68;
      *(_WORD *)&v116[4] = 1026;
      *(_DWORD *)v117 = v69;
      *(_WORD *)&v117[4] = 1026;
      *(_DWORD *)v118 = v70;
      *(_WORD *)&v118[4] = 2050;
      *(double *)&v118[6] = v21;
      *(_WORD *)&v118[14] = 1026;
      *(_DWORD *)&v118[16] = HIDWORD(v89);
      __int16 v119 = 1026;
      int v120 = v89;
      __int16 v121 = 1026;
      int v122 = v87;
      v71 = (char *)_os_log_send_and_compose_impl();
      if (v124 < 0) {
        operator delete(*(void **)__p);
      }
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceDataDownloadManager::checkDownloadState()", "%s\n", v71);
      if (v71 != buf) {
        free(v71);
      }
    }
    if ((*(_DWORD *)(v15 + 320) & 0x80000000) != 0)
    {
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F71E0);
      }
      v63 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v63, OS_LOG_TYPE_INFO, "#Warning Fence: can't start query", buf, 2u);
      }
      if (!sub_10013D1A0(115, 2)) {
        goto LABEL_83;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F71E0);
      }
      *(_WORD *)v115 = 0;
      int64_t v20 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceDataDownloadManager::checkDownloadState()", "%s\n", v20);
      goto LABEL_43;
    }
    id v60 = [[objc_msgSend(*(id *)(a1 + 32), "vendor") proxyForService:@"CLWifiTilesManager"];
    double v61 = *(double *)(v15 + 88);
    double v62 = *(double *)(v15 + 96);
    __int16 v90 = 0;
    char v91 = 0;
    int v92 = v113;
    char v93 = v114;
    unint64_t v94 = 0xBFF0000000000000;
    int v95 = 0;
    CFAbsoluteTime v96 = v14;
    __int16 v97 = 257;
    int v98 = v111;
    __int16 v99 = v112;
    [v60 requestTileDownloadForLat:&v90 lon:v61 details:v62];
    ++v16;
LABEL_83:
    uint64_t v15 = *(void *)(v15 + 8);
    if (v15 == v2) {
      goto LABEL_191;
    }
  }
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F71E0);
  }
  v75 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)long long buf = 67174913;
    *(_DWORD *)&uint8_t buf[4] = v16 + v4;
    *(_WORD *)&buf[8] = 1025;
    *(_DWORD *)&buf[10] = 5;
    _os_log_impl((void *)&_mh_execute_header, v75, OS_LOG_TYPE_DEBUG, "avoiding more concurrent downloads, %{private}d, max, %{private}d", buf, 0xEu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F71E0);
    }
    *(_DWORD *)v115 = 67174913;
    *(_DWORD *)&v115[4] = v16 + v4;
    *(_WORD *)&v115[8] = 1025;
    *(_DWORD *)&v115[10] = 5;
    v85 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceDataDownloadManager::checkDownloadState()", "%s\n", v85);
    if (v85 != buf) {
      free(v85);
    }
  }
LABEL_191:
  uint64_t v76 = *(void *)(a1 + 168);
  if (v76 == v2)
  {
    int v77 = 0;
  }
  else
  {
    int v77 = 0;
    do
    {
      v77 += *(_DWORD *)(v76 + 320) >= 0;
      uint64_t v76 = *(void *)(v76 + 8);
    }
    while (v76 != v2);
  }
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F71E0);
  }
  v78 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)long long buf = 67241216;
    *(_DWORD *)&uint8_t buf[4] = v4;
    *(_WORD *)&buf[8] = 1026;
    *(_DWORD *)&buf[10] = v77;
    *(_WORD *)&buf[14] = 1026;
    *(_DWORD *)&uint8_t buf[16] = v16;
    *(_WORD *)v126 = 1026;
    *(_DWORD *)&v126[2] = HIDWORD(v89);
    *(_WORD *)v127 = 1026;
    *(_DWORD *)&v127[2] = v89;
    _os_log_impl((void *)&_mh_execute_header, v78, OS_LOG_TYPE_DEBUG, "checkDownloadState, currentNumOfQueries, %{public}d, newNumOfQueries, %{public}d, numOfStartedQueries, %{public}d, nSmall, %{public}d, nLarge, %{public}d", buf, 0x20u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F71E0);
    }
    *(_DWORD *)v115 = 67241216;
    *(_DWORD *)&v115[4] = v4;
    *(_WORD *)&v115[8] = 1026;
    *(_DWORD *)&v115[10] = v77;
    *(_WORD *)&v115[14] = 1026;
    *(_DWORD *)&v115[16] = v16;
    *(_WORD *)v116 = 1026;
    *(_DWORD *)&v116[2] = HIDWORD(v89);
    *(_WORD *)v117 = 1026;
    *(_DWORD *)&v117[2] = v89;
    uint64_t v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceDataDownloadManager::checkDownloadState()", "%s\n", v6);
    goto LABEL_217;
  }
}

void sub_100D9B0B8(uint64_t *a1, uint64_t *a2)
{
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F71E0);
  }
  int v4 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
  {
    unint64_t v5 = 0xEF7BDEF7BDEF7BDFLL * ((a2[1] - *a2) >> 3);
    *(_DWORD *)long long buf = 134349056;
    __int16 v18 = (void *)v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Fence: Removing %{public}ld fences for download", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F71E0);
    }
    CFAbsoluteTime v14 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceDataDownloadManager::removeFencesForDataDownload(const std::vector<CLFenceManager_Type::Fence> &)", "%s\n", v14);
    if (v14 != (char *)buf) {
      free(v14);
    }
  }
  uint64_t v16 = a1[22];
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  if (*a2 != v7)
  {
    do
    {
      if (*(void *)(v6 + 232) == *(void *)(v6 + 224))
      {
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F71E0);
        }
        double v8 = qword_1024193C8;
        if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v9 = (void *)(v6 + 48);
          if (*(char *)(v6 + 71) < 0) {
            uint64_t v9 = (void *)*v9;
          }
          uint64_t v10 = v6;
          if (*(char *)(v6 + 23) < 0) {
            uint64_t v10 = *(void *)v6;
          }
          int v11 = (void *)(v6 + 24);
          if (*(char *)(v6 + 47) < 0) {
            int v11 = (void *)*v11;
          }
          *(_DWORD *)long long buf = 136381187;
          __int16 v18 = v9;
          __int16 v19 = 2081;
          uint64_t v20 = v10;
          __int16 v21 = 2081;
          double v22 = v11;
          _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "Removing fence from download, [%{private}s]/%{private}s/%{private}s", buf, 0x20u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F71E0);
          }
          int v12 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceDataDownloadManager::removeFencesForDataDownload(const std::vector<CLFenceManager_Type::Fence> &)", "%s\n", v12);
          if (v12 != (char *)buf) {
            free(v12);
          }
        }
        sub_100A0B348(a1 + 20, v6, v6 + 24);
      }
      v6 += 248;
    }
    while (v6 != v7);
  }
  if (v16 && !a1[22] && a1[19])
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F71E0);
    }
    int v13 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "Fence: last fence removed, disabled download timer", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F71E0);
      }
      uint64_t v15 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceDataDownloadManager::removeFencesForDataDownload(const std::vector<CLFenceManager_Type::Fence> &)", "%s\n", v15);
      if (v15 != (char *)buf) {
        free(v15);
      }
    }
    sub_1001165F8(a1[19], 1.79769313e308);
  }
  sub_100D99718((uint64_t)a1);
}

void sub_100D9B620(uint64_t a1, uint64_t a2)
{
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F71E0);
  }
  int v4 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
  {
    sub_100C8C864(a2);
    unint64_t v5 = v22 >= 0 ? __p : (void **)__p[0];
    *(_DWORD *)long long buf = 136380675;
    *(void *)&uint8_t buf[4] = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Fence: refreshDataForFence, %{private}s", buf, 0xCu);
    if (v22 < 0) {
      operator delete(__p[0]);
    }
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F71E0);
    }
    sub_100C8C864(a2);
    if (v18 >= 0) {
      uint64_t v15 = buf;
    }
    else {
      uint64_t v15 = *(unsigned char **)buf;
    }
    int v19 = 136380675;
    uint64_t v20 = v15;
    uint64_t v16 = (char *)_os_log_send_and_compose_impl();
    if (v18 < 0) {
      operator delete(*(void **)buf);
    }
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceDataDownloadManager::refreshDataForFence(const CLFenceManager_Type::Fence &)", "%s\n", v16);
    if (v16 != (char *)__p) {
      free(v16);
    }
  }
  BOOL v7 = *(double *)(a2 + 96) > 400.0 || *(unsigned char *)(a2 + 188) != 0 || *(_DWORD *)(a2 + 180) == 2;
  if (!v7 && *(void *)(a2 + 232) == *(void *)(a2 + 224) && (*(unsigned char *)(a2 + 160) & 0x20) == 0)
  {
    std::string::operator=((std::string *)(a1 + 200), (const std::string *)a2);
    std::string::operator=((std::string *)(a1 + 224), (const std::string *)(a2 + 24));
    std::string::operator=((std::string *)(a1 + 248), (const std::string *)(a2 + 48));
    long long v8 = *(_OWORD *)(a2 + 72);
    long long v9 = *(_OWORD *)(a2 + 88);
    long long v10 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 320) = v10;
    *(_OWORD *)(a1 + 272) = v8;
    *(_OWORD *)(a1 + 288) = v9;
    long long v11 = *(_OWORD *)(a2 + 136);
    long long v12 = *(_OWORD *)(a2 + 152);
    long long v13 = *(_OWORD *)(a2 + 168);
    *(void *)(a1 + 381) = *(void *)(a2 + 181);
    *(_OWORD *)(a1 + 352) = v12;
    *(_OWORD *)(a1 + 368) = v13;
    *(_OWORD *)(a1 + 336) = v11;
    std::string::operator=((std::string *)(a1 + 392), (const std::string *)(a2 + 192));
    CFAbsoluteTime v14 = *(void **)(a1 + 416);
    *(void *)(a1 + 416) = *(id *)(a2 + 216);

    if (a1 + 200 != a2) {
      sub_10027C3B4((char *)(a1 + 424), *(char **)(a2 + 224), *(void *)(a2 + 232), (uint64_t)(*(void *)(a2 + 232) - *(void *)(a2 + 224)) >> 4);
    }
    sub_100D99718(a1);
  }
}

void sub_100D9B924(void *a1)
{
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F71E0);
  }
  uint64_t v2 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = a1[22];
    *(_DWORD *)long long buf = 134349056;
    uint64_t v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Fence: Removing all fences for download, fences, %{public}lu", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F71E0);
    }
    unint64_t v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceDataDownloadManager::removeAllFencesForDataDownload()", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
  sub_100D9F3B4(a1 + 20);
  uint64_t v4 = a1[19];
  if (v4) {
    sub_1001165F8(v4, 1.79769313e308);
  }
  sub_100D99718((uint64_t)a1);
}

uint64_t sub_100D9BAFC(uint64_t a1, uint64_t a2)
{
  int v17 = 0xFFFF;
  __asm { FMOV            V0.2D, #-1.0 }
  long long v20 = xmmword_101D1C570;
  long long v21 = _Q0;
  long long v22 = _Q0;
  unint64_t v23 = 0xBFF0000000000000;
  int v24 = 0;
  uint64_t v27 = 0;
  unint64_t v25 = 0xBFF0000000000000;
  uint64_t v26 = 0;
  unint64_t v29 = 0xBFF0000000000000;
  int v28 = 0;
  int v30 = 0x7FFFFFFF;
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v31 = 0;
  char v34 = 0;
  long long v18 = *(_OWORD *)(a2 + 72);
  double v19 = *(double *)(a2 + 96) + 200.0;
  if (sub_1001198CC() != 1) {
    return 0xFFFFFFFFLL;
  }
  uint64_t v16 = 0;
  int v9 = sub_100C8D5B4(a2);
  long long v10 = sub_10017EA34((uint64_t)&v16, 1uLL);
  *long long v10 = v9;
  __p = v10;
  uint64_t v15 = v10 + 1;
  uint64_t v16 = &v10[v11];
  uint64_t v15 = v10 + 1;
  id v12 = [objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "vendor"), "proxyForService:", @"CLNetworkLocationProvider") syncgetQueryNearbys:&v17 forFenceKeys:&__p];
  if (__p)
  {
    uint64_t v15 = __p;
    operator delete(__p);
  }
  return (uint64_t)v12;
}

void sub_100D9BC4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100D9BC6C(uint64_t a1, int a2, int a3, int a4, int a5)
{
  double Current = CFAbsoluteTimeGetCurrent();
  uint64_t v9 = a1 + 160;
  uint64_t v10 = *(void *)(a1 + 168);
  if (v10 == a1 + 160)
  {
LABEL_5:
    int v12 = 0;
    int v13 = 0;
  }
  else
  {
    double v11 = Current;
    while (*(_DWORD *)(v10 + 320) != a2)
    {
      uint64_t v10 = *(void *)(v10 + 8);
      if (v10 == v9) {
        goto LABEL_5;
      }
    }
    *(_DWORD *)(v10 + 320) = -1;
    int v45 = 0;
    uint64_t v46 = 0;
    id v44 = (uint64_t *)&v45;
    CFAbsoluteTime v14 = *(void **)(v10 + 264);
    if (v14 != (void *)(v10 + 272))
    {
      do
      {
        sub_100110970((char *)&v75);
        std::string::operator=(&v75, (const std::string *)(v14 + 4));
        uint64_t v15 = v14 + 7;
        std::string::operator=(&v76, (const std::string *)(v14 + 7));
        std::string::operator=(&v77, (const std::string *)(v14 + 10));
        long long v16 = *(_OWORD *)(v14 + 23);
        long long v82 = *(_OWORD *)(v14 + 21);
        long long v83 = v16;
        *(_OWORD *)v84 = *(_OWORD *)(v14 + 25);
        *(void *)&v84[13] = *(void *)((char *)v14 + 213);
        long long v17 = *(_OWORD *)(v14 + 15);
        long long v78 = *(_OWORD *)(v14 + 13);
        long long v79 = v17;
        long long v18 = *(_OWORD *)(v14 + 19);
        long long v80 = *(_OWORD *)(v14 + 17);
        long long v81 = v18;
        std::string::operator=(&v85, (const std::string *)(v14 + 28));
        id v19 = v86;
        id v86 = (id)v14[31];

        if (&v75 != (std::string *)(v14 + 4)) {
          sub_10027C3B4((char *)__p, (char *)v14[32], v14[33], (uint64_t)(v14[33] - v14[32]) >> 4);
        }
        BOOL v88 = *(double *)(v10 + 128) < 0.0;
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F71E0);
        }
        long long v20 = qword_1024193C8;
        if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
        {
          int v21 = sub_100C8D5B4((uint64_t)(v14 + 4));
          long long v22 = v14 + 7;
          if (*((char *)v14 + 79) < 0) {
            long long v22 = (void *)*v15;
          }
          int v23 = *((_DWORD *)v14 + 54);
          *(_DWORD *)long long buf = 67241731;
          int v62 = a2;
          __int16 v63 = 1026;
          int v64 = a3;
          __int16 v65 = 1026;
          int v66 = a4;
          __int16 v67 = 1026;
          int v68 = a5;
          __int16 v69 = 1026;
          int v70 = v21;
          __int16 v71 = 1026;
          int v72 = v23;
          __int16 v73 = 2081;
          v74 = v22;
          _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "Fence: networkQueryDone,tag,%{public}d,isSuccess,%{public}d,numOfAps,%{public}d,numOfCells,%{public}d,key,%{public}d,%{public}d,%{private}s", buf, 0x30u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F71E0);
          }
          int v27 = sub_100C8D5B4((uint64_t)(v14 + 4));
          if (*((char *)v14 + 79) < 0) {
            uint64_t v15 = (void *)*v15;
          }
          int v28 = *((_DWORD *)v14 + 54);
          int v47 = 67241731;
          int v48 = a2;
          __int16 v49 = 1026;
          int v50 = a3;
          __int16 v51 = 1026;
          int v52 = a4;
          __int16 v53 = 1026;
          int v54 = a5;
          __int16 v55 = 1026;
          int v56 = v27;
          __int16 v57 = 1026;
          int v58 = v28;
          __int16 v59 = 2081;
          id v60 = v15;
          unint64_t v29 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceDataDownloadManager::networkQueryDone(int, BOOL, int, int)", "%s\n", v29);
          if (v29 != (char *)buf) {
            free(v29);
          }
        }
        if (a3)
        {
          *(double *)(v10 + 128) = v11;
          *((double *)&v80 + 1) = v11;
          if (v11 < 0.0) {
            *(void *)(v10 + 128) = 0;
          }
          sub_100A0D884(&v44, (unsigned __int8 *)&v75, (long long *)&v75);
          *(_DWORD *)long long buf = 0;
          (*(void (**)(uint64_t, uint8_t *, std::string *, void, uint64_t, void))(*(void *)a1 + 152))(a1, buf, &v75, 0, 0xFFFFFFFFLL, 0);
        }
        else
        {
          *(_DWORD *)long long buf = 1;
          (*(void (**)(uint64_t, uint8_t *, std::string *, void, uint64_t, void))(*(void *)a1 + 152))(a1, buf, &v75, 0, 0xFFFFFFFFLL, 0);
        }
        if (__p[0])
        {
          __p[1] = __p[0];
          operator delete(__p[0]);
        }

        if (SHIBYTE(v85.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v85.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v77.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v77.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v76.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v75.__r_.__value_.__l.__data_);
        }
        int v24 = (void *)v14[1];
        if (v24)
        {
          do
          {
            unint64_t v25 = v24;
            int v24 = (void *)*v24;
          }
          while (v24);
        }
        else
        {
          do
          {
            unint64_t v25 = (void *)v14[2];
            BOOL v26 = *v25 == (void)v14;
            CFAbsoluteTime v14 = v25;
          }
          while (!v26);
        }
        CFAbsoluteTime v14 = v25;
      }
      while (v25 != (void *)(v10 + 272));
      if (v46)
      {
        int v30 = v44;
        if (v44 == (uint64_t *)&v45)
        {
          char v34 = (unsigned __int8 *)&v45;
          uint64_t v31 = (uint64_t *)(v10 + 264);
        }
        else
        {
          uint64_t v31 = (uint64_t *)(v10 + 264);
          do
          {
            sub_100A0D828((uint64_t **)(v10 + 264), (unsigned __int8 *)v30 + 32);
            uint64_t v32 = (uint64_t *)v30[1];
            if (v32)
            {
              do
              {
                uint64_t v33 = v32;
                uint64_t v32 = (uint64_t *)*v32;
              }
              while (v32);
            }
            else
            {
              do
              {
                uint64_t v33 = (uint64_t *)v30[2];
                BOOL v26 = *v33 == (void)v30;
                int v30 = v33;
              }
              while (!v26);
            }
            int v30 = v33;
          }
          while (v33 != (uint64_t *)&v45);
          char v34 = (unsigned __int8 *)v44;
        }
        sub_100A0D4A8(v31, v34, (unsigned __int8 *)&v45);
      }
    }
    sub_100A0D280((uint64_t)&v44, v45);
    double v35 = 0.0;
    if (!a3) {
      double v35 = v11;
    }
    int v12 = a3 ^ 1;
    *(double *)(a1 + 184) = v35;
    int v13 = 1;
  }
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F71E0);
  }
  int v36 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v37 = *(void *)(a1 + 168);
    if (v37 == v9)
    {
      int v38 = 0;
    }
    else
    {
      int v38 = 0;
      do
      {
        v38 += *(_DWORD *)(v37 + 320) >= 0;
        uint64_t v37 = *(void *)(v37 + 8);
      }
      while (v37 != v9);
    }
    *(_DWORD *)long long buf = 67240704;
    int v62 = v38;
    __int16 v63 = 1026;
    int v64 = v12;
    __int16 v65 = 1026;
    int v66 = v13;
    _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEBUG, "networkQueryDone, newNumOfQueries, %{public}u, isAvoidUpcomingFenceDownloads, %{public}d, doesTagBelongToFence, %{public}d", buf, 0x14u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F71E0);
    }
    uint64_t v39 = *(void *)(a1 + 168);
    if (v39 == v9)
    {
      int v40 = 0;
    }
    else
    {
      int v40 = 0;
      do
      {
        v40 += *(_DWORD *)(v39 + 320) >= 0;
        uint64_t v39 = *(void *)(v39 + 8);
      }
      while (v39 != v9);
    }
    LODWORD(v75.__r_.__value_.__l.__data_) = 67240704;
    HIDWORD(v75.__r_.__value_.__r.__words[0]) = v40;
    LOWORD(v75.__r_.__value_.__r.__words[1]) = 1026;
    *(_DWORD *)((char *)&v75.__r_.__value_.__r.__words[1] + 2) = v12;
    HIWORD(v75.__r_.__value_.__r.__words[1]) = 1026;
    LODWORD(v75.__r_.__value_.__r.__words[2]) = v13;
    int v41 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceDataDownloadManager::networkQueryDone(int, BOOL, int, int)", "%s\n", v41);
    if (v41 != (char *)buf) {
      free(v41);
    }
  }
  sub_100D99718(a1);
}

void sub_100D9C414(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,void *a23)
{
}

void sub_100D9C470(uint64_t a1, uint64_t a2, int *a3, int *a4)
{
  int v4 = *a3;
  if (*a3 == 3)
  {
    int v5 = 0;
    int v6 = 0;
    goto LABEL_5;
  }
  if (v4 == 2)
  {
    int v6 = a4[1];
    int v5 = a4[2];
LABEL_5:
    int v7 = *a4;
    sub_100D9BC6C(a1, v7, v4 != 3, v6, v5);
    return;
  }
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F71E0);
  }
  uint64_t v9 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
  {
    int v10 = *a3;
    *(_DWORD *)long long buf = 67240192;
    int v13 = v10;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "#Warning Got unknown notification %{public}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F71E0);
    }
    double v11 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceDataDownloadManager::onNetworkLocationNotification(int, const CLNetworkLocationProvider_Type::Notification &, const CLNetworkLocationProvider_Type::NotificationData &)", "%s\n", v11);
    if (v11 != (char *)buf) {
      free(v11);
    }
  }
}

void sub_100D9C698(uint64_t a1, uint64_t a2)
{
  if (a2 && *(void *)(a1 + 152) == a2)
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_102481380, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_102481380))
    {
      qword_102481378 = CFAbsoluteTimeGetCurrent();
      __cxa_guard_release(&qword_102481380);
    }
    double Current = CFAbsoluteTimeGetCurrent();
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F71E0);
    }
    int v6 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 134283521;
      double v9 = Current - *(double *)&qword_102481378;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Fence: onFenceDownloadTimer, since last, %{private}.1lf", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F71E0);
      }
      int v7 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceDataDownloadManager::onFenceDownloadTimer(CLPersistentTimer *)", "%s\n", v7);
      if (v7 != (char *)buf) {
        free(v7);
      }
    }
    sub_100D9CA14(a1);
    sub_100D99718(a1);
    qword_102481378 = *(void *)&Current;
  }
  else
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F71E0);
    }
    uint64_t v3 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Fence: ignore onFenceDownloadTimer, shutdown?", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F71E0);
      }
      int v4 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceDataDownloadManager::onFenceDownloadTimer(CLPersistentTimer *)", "%s\n", v4);
      if (v4 != (char *)buf) {
        free(v4);
      }
    }
  }
}

void sub_100D9C9F4(_Unwind_Exception *a1)
{
}

id sub_100D9CA14(uint64_t a1)
{
  id result = (id)sub_1001198CC();
  if (*(void *)(a1 + 152))
  {
    int v3 = (int)result;
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    uint64_t v5 = *(void *)(a1 + 152);
    double v6 = Current + 43200.0;
    if (v3 != 1) {
      double v6 = 1.79769313e308;
    }
    return sub_1001165F8(v5, v6);
  }
  return result;
}

void sub_100D9CA84(uint64_t a1, uint64_t a2, int *a3, int *a4)
{
  if (*a3 != 9)
  {
    if (*a3 != 6) {
      return;
    }
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F71E0);
    }
    int v7 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      int v8 = *a3;
      int v9 = *a4;
      int v10 = a4[1];
      *(_DWORD *)long long buf = 67175169;
      int v18 = v8;
      __int16 v19 = 1025;
      int v20 = v9;
      __int16 v21 = 1025;
      int v22 = v10;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Fence: kNotificationReachability, notification, %{private}d, reachability, from, %{private}d, to, %{private}d", buf, 0x14u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F71E0);
      }
      uint64_t v15 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceDataDownloadManager::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v15);
      if (v15 != (char *)buf) {
        free(v15);
      }
    }
    int v11 = a4[1];
    if (v11 == 2)
    {
      if (*(unsigned char *)(a1 + 193)) {
        return;
      }
      *(_WORD *)(a1 + 192) = 256;
    }
    else
    {
      if (v11 != 1)
      {
        if (v11)
        {
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F71E0);
          }
          int v13 = qword_1024193C8;
          if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_ERROR))
          {
            *(_WORD *)long long buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "Unhandled reachability notification", buf, 2u);
          }
          if (sub_10013D1A0(115, 0))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1024193C0 != -1) {
              dispatch_once(&qword_1024193C0, &stru_1022F71E0);
            }
            CFAbsoluteTime v14 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 0, "void CLFenceDataDownloadManager::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v14);
            if (v14 != (char *)buf) {
              free(v14);
            }
          }
        }
        else
        {
          *(_WORD *)(a1 + 192) = 0;
        }
        return;
      }
      if (*(unsigned char *)(a1 + 192)) {
        return;
      }
      *(_WORD *)(a1 + 192) = 1;
      if (*a4 != 1000) {
        return;
      }
    }
    sub_100D99718(a1);
    return;
  }
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F71E0);
  }
  int v12 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "Fence: kNotificationMigration", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F71E0);
    }
    long long v16 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceDataDownloadManager::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v16);
    if (v16 != (char *)buf) {
      free(v16);
    }
  }
  sub_100D99718(a1);
  *(_DWORD *)long long buf = 2;
  (*(void (**)(uint64_t, uint8_t *, void, uint64_t))(*(void *)a1 + 144))(a1, buf, 0, 0xFFFFFFFFLL);
}

void sub_100D9CF84(uint64_t a1, uint64_t a2, _DWORD *a3, unsigned __int8 *a4)
{
  if (*a3 == 5)
  {
    sub_100103240();
    if (sub_10010145C())
    {
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F71E0);
      }
      double v6 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
      {
        int v7 = *(unsigned __int8 *)(a1 + 448);
        int v8 = *a4;
        *(_DWORD *)long long buf = 67240448;
        int v12 = v7;
        __int16 v13 = 1026;
        int v14 = v8;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Fence: kNotificationCompanionConnectionUpdate, isNearby, from, %{public}d, to, %{public}d", buf, 0xEu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F71E0);
        }
        int v10 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceDataDownloadManager::onCompanionNotification(int, const CLCompanionNotifier_Type::Notification &, const CLCompanionNotifier_Type::NotificationData &)", "%s\n", v10);
        if (v10 != (char *)buf) {
          free(v10);
        }
      }
      int v9 = *a4;
      *(unsigned char *)(a1 + 448) = v9;
      if (v9) {
        sub_100D99718(a1);
      }
    }
  }
}

void sub_100D9D188()
{
}

void sub_100D9D218()
{
}

uint64_t sub_100D9D23C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  *(void *)a1 = &off_1022F7360;
  *(void *)(a1 + 8) = [[CLNotifierClientAdapter alloc] initWithClient:a1];
  *(void *)(a1 + 24) = a4;
  *(void *)(a1 + 32) = a5;
  [a3 silo];
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 80))(a2);
  __int16 v19 = &OBJC_PROTOCOL___CLIntersiloServiceProtocol;
  [+[CLIntersiloInterface sharedInterface](CLIntersiloInterface, "sharedInterface") extendSelectorInfoWithProtocol:&OBJC_PROTOCOL___CLNotifierServiceProtocol bases:+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v19, 1)];
  int v18 = &OBJC_PROTOCOL___CLIntersiloClientProtocol;
  [+[CLIntersiloInterface sharedInterface](CLIntersiloInterface, "sharedInterface") extendSelectorInfoWithProtocol:&OBJC_PROTOCOL___CLNotifierServiceClientProtocol bases:+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v18, 1)];
  id v11 = [a3 silo];
  if (*(char *)(a2 + 31) < 0)
  {
    sub_1000DC48C(__p, *(void **)(a2 + 8), *(void *)(a2 + 16));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)(a2 + 8);
    uint64_t v17 = *(void *)(a2 + 24);
  }
  if (v17 >= 0) {
    int v12 = __p;
  }
  else {
    int v12 = (void **)__p[0];
  }
  id v13 = +[CLIntersiloProxy proxyForRecipientObject:inSilo:recipientName:](CLIntersiloProxy, "proxyForRecipientObject:inSilo:recipientName:", v10, v11, +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12, __p[0], __p[1], v17));
  *(void *)(a1 + 16) = v13;
  if (SHIBYTE(v17) < 0)
  {
    operator delete(__p[0]);
    id v13 = *(id *)(a1 + 16);
  }
  id v14 = v13;
  [*(id *)(a1 + 16) registerDelegate:*(void *)(a1 + 8) inSilo:[a3 silo]];
  return a1;
}

void sub_100D9D460(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100D9D484(uint64_t a1, uint64_t a2)
{
  v14[0] = a2;
  if (!*(unsigned char *)(a1 + 108))
  {
    uint64_t v4 = *(void *)(a1 + 88);
    if (!v4) {
      goto LABEL_12;
    }
    uint64_t v5 = a1 + 80;
    uint64_t v6 = a1 + 88;
    do
    {
      int v7 = *(_DWORD *)(v4 + 32);
      BOOL v8 = v7 < (int)a2;
      if (v7 >= (int)a2) {
        int v9 = (uint64_t *)v4;
      }
      else {
        int v9 = (uint64_t *)(v4 + 8);
      }
      if (!v8) {
        uint64_t v6 = v4;
      }
      uint64_t v4 = *v9;
    }
    while (*v9);
    if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= (int)a2)
    {
      while (*(void *)(v6 + 56))
      {
        *(_DWORD *)long long buf = *(_DWORD *)(*(void *)(v6 + 40) + 28);
        (*(void (**)(uint64_t, uint64_t, uint8_t *))(*(void *)a1 + 112))(a1, a2, buf);
      }
      sub_10006DA64(v5, v14);
    }
    else
    {
LABEL_12:
      if (qword_102419580 != -1) {
        dispatch_once(&qword_102419580, &stru_1022F71C0);
      }
      uint64_t v10 = qword_102419588;
      if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_FAULT))
      {
        id v11 = (void *)(a1 + 8);
        if (*(char *)(a1 + 31) < 0) {
          id v11 = (void *)*v11;
        }
        *(_DWORD *)long long buf = 136446466;
        __int16 v19 = v11;
        __int16 v20 = 1026;
        int v21 = a2;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_FAULT, "%{public}s; client %{public}d does not exist",
          buf,
          0x12u);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419580 != -1) {
          dispatch_once(&qword_102419580, &stru_1022F71C0);
        }
        int v12 = (void *)(a1 + 8);
        if (*(char *)(a1 + 31) < 0) {
          int v12 = (void *)*v12;
        }
        v14[1] = 136446466;
        uint64_t v15 = v12;
        __int16 v16 = 1026;
        int v17 = a2;
        id v13 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "virtual void CLNotifier<CLFenceDataDownloadManager_Type::Notification, CLFenceDataDownloadManager_Type::NotificationData, char, char>::removeClient(int) [Notification_T = CLFenceDataDownloadManager_Type::Notification, NotificationData_T = CLFenceDataDownloadManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v13);
        if (v13 != (char *)buf) {
          free(v13);
        }
      }
    }
  }
}

uint64_t sub_100D9D714(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  id v7 = sub_10005C4C4(a4);
  if (v7)
  {
    int v10 = a3;
    return (*(uint64_t (**)(uint64_t, uint64_t, int *, id))(*(void *)a1 + 96))(a1, a2, &v10, v7);
  }
  else
  {
    int v9 = a3;
    return (*(uint64_t (**)(uint64_t, uint64_t, int *))(*(void *)a1 + 88))(a1, a2, &v9);
  }
}

uint64_t sub_100D9D7C8(uint64_t a1, uint64_t a2, int a3)
{
  int v4 = a3;
  return (*(uint64_t (**)(uint64_t, uint64_t, int *))(*(void *)a1 + 104))(a1, a2, &v4);
}

uint64_t sub_100D9D810(uint64_t a1, uint64_t a2, int a3)
{
  int v4 = a3;
  return (*(uint64_t (**)(uint64_t, uint64_t, int *))(*(void *)a1 + 112))(a1, a2, &v4);
}

uint64_t sub_100D9D858(uint64_t a1, int a2)
{
  int v3 = a2;
  return (*(uint64_t (**)(uint64_t, int *))(*(void *)a1 + 120))(a1, &v3);
}

uint64_t sub_100D9D8A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *))(*(void *)a1 + 96))(a1, a2, a3, &unk_102474648);
}

BOOL sub_100D9D8CC(uint64_t a1, int a2, int *a3, char *a4)
{
  int v40 = a2;
  if (*(unsigned char *)(a1 + 108)) {
    return 0;
  }
  uint64_t v7 = *(void *)(a1 + 88);
  if (v7)
  {
    uint64_t v10 = a1 + 88;
    do
    {
      int v11 = *(_DWORD *)(v7 + 32);
      BOOL v12 = v11 < a2;
      if (v11 >= a2) {
        id v13 = (uint64_t *)v7;
      }
      else {
        id v13 = (uint64_t *)(v7 + 8);
      }
      if (!v12) {
        uint64_t v10 = v7;
      }
      uint64_t v7 = *v13;
    }
    while (*v13);
    if (v10 != a1 + 88 && *(_DWORD *)(v10 + 32) <= a2)
    {
      uint64_t v39 = v10;
      int v16 = *a3;
      uint64_t v19 = *(void *)(v10 + 48);
      uint64_t v18 = v10 + 48;
      uint64_t v17 = v19;
      if (!v19) {
        goto LABEL_31;
      }
      uint64_t v20 = v18;
      do
      {
        int v21 = *(_DWORD *)(v17 + 28);
        BOOL v22 = v21 < v16;
        if (v21 >= v16) {
          int v23 = (uint64_t *)v17;
        }
        else {
          int v23 = (uint64_t *)(v17 + 8);
        }
        if (!v22) {
          uint64_t v20 = v17;
        }
        uint64_t v17 = *v23;
      }
      while (*v23);
      if (v20 == v18 || v16 < *(_DWORD *)(v20 + 28)) {
LABEL_31:
      }
        uint64_t v20 = v18;
      uint64_t v24 = *(void *)(a1 + 64);
      if (!v24) {
        goto LABEL_42;
      }
      uint64_t v25 = a1 + 64;
      do
      {
        int v26 = *(_DWORD *)(v24 + 32);
        BOOL v27 = v26 < v16;
        if (v26 >= v16) {
          int v28 = (uint64_t *)v24;
        }
        else {
          int v28 = (uint64_t *)(v24 + 8);
        }
        if (!v27) {
          uint64_t v25 = v24;
        }
        uint64_t v24 = *v28;
      }
      while (*v28);
      if (v25 != a1 + 64 && v16 >= *(_DWORD *)(v25 + 32))
      {
        *(void *)int v41 = v25;
        uint64_t v34 = *(void *)(v25 + 56);
        char v35 = *a4;
        *(void *)long long buf = &v40;
        *((unsigned char *)sub_1000EB1B8((uint64_t **)(v25 + 40), &v40, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 32) = v35;
        sub_100110970(buf);
        char v57 = 0;
        if (v20 == v18
          && (*(unsigned int (**)(uint64_t, int *, unsigned char *))(*(void *)a1 + 128))(a1, a3, buf))
        {
          sub_100DA0188();
        }
        if (v55)
        {
          int v56 = v55;
          operator delete(v55);
        }

        if (v53 < 0) {
          operator delete(v52);
        }
        if (v51 < 0) {
          operator delete(__p);
        }
        if (v49 < 0) {
          operator delete(v48);
        }
        if (v47 < 0) {
          operator delete(*(void **)buf);
        }
        if (v34) {
          goto LABEL_46;
        }
      }
      else
      {
LABEL_42:
        *(void *)int v41 = a1 + 64;
        char v29 = byte_102474649;
        int v38 = v16;
        *(void *)long long buf = &v38;
        *((unsigned char *)sub_10044715C((uint64_t **)(a1 + 56), &v38, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 80) = v29;
        int v38 = *a3;
        *(void *)long long buf = &v38;
        int v30 = sub_10044715C((uint64_t **)(a1 + 56), &v38, (uint64_t)&unk_101D0B290, (_DWORD **)buf);
        uint64_t v31 = (std::__shared_weak_count *)v30[9];
        v30[8] = 0;
        v30[9] = 0;
        if (v31) {
          sub_1000DB0A0(v31);
        }
        char v32 = *a4;
        int v38 = *a3;
        *(void *)long long buf = &v38;
        uint64_t v33 = sub_10044715C((uint64_t **)(a1 + 56), &v38, (uint64_t)&unk_101D0B290, (_DWORD **)buf);
        *(void *)long long buf = &v40;
        *((unsigned char *)sub_1000EB1B8(v33 + 5, &v40, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 32) = v32;
      }
      (*(void (**)(uint64_t, int *))(*(void *)a1 + 168))(a1, a3);
LABEL_46:
      if (v20 == v18)
      {
        *(_DWORD *)long long buf = *a3;
        sub_1000EDED4((uint64_t **)(v39 + 40), (int *)buf, buf);
      }
      return 1;
    }
  }
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022F71C0);
  }
  id v14 = qword_102419588;
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_FAULT))
  {
    uint64_t v15 = (void *)(a1 + 8);
    if (*(char *)(a1 + 31) < 0) {
      uint64_t v15 = (void *)*v15;
    }
    *(_DWORD *)long long buf = 136446466;
    *(void *)&uint8_t buf[4] = v15;
    __int16 v45 = 1026;
    int v46 = a2;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_FAULT, "%{public}s; client %{public}d does not exist",
      buf,
      0x12u);
  }
  BOOL result = sub_10013D1A0(115, 0);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022F71C0);
    }
    int v36 = (void *)(a1 + 8);
    if (*(char *)(a1 + 31) < 0) {
      int v36 = (void *)*v36;
    }
    *(_DWORD *)int v41 = 136446466;
    *(void *)&v41[4] = v36;
    __int16 v42 = 1026;
    int v43 = v40;
    uint64_t v37 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "virtual BOOL CLNotifier<CLFenceDataDownloadManager_Type::Notification, CLFenceDataDownloadManager_Type::NotificationData, char, char>::registerForNotification(int, const Notification_T &, const RegistrationInfo_T &) [Notification_T = CLFenceDataDownloadManager_Type::Notification, NotificationData_T = CLFenceDataDownloadManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v37);
    if (v37 != buf) {
      free(v37);
    }
    return 0;
  }
  return result;
}

void sub_100D9DDD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  sub_100488394((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_100D9DE08(uint64_t a1, int a2, int *a3)
{
  uint64_t v5 = *(void *)(a1 + 88);
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v6 = a1 + 88;
  do
  {
    int v7 = *(_DWORD *)(v5 + 32);
    BOOL v8 = v7 < a2;
    if (v7 >= a2) {
      int v9 = (uint64_t *)v5;
    }
    else {
      int v9 = (uint64_t *)(v5 + 8);
    }
    if (!v8) {
      uint64_t v6 = v5;
    }
    uint64_t v5 = *v9;
  }
  while (*v9);
  if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= a2)
  {
    uint64_t v16 = *(void *)(v6 + 48);
    uint64_t v14 = v6 + 48;
    uint64_t v15 = v16;
    if (!v16) {
      goto LABEL_29;
    }
    int v17 = *a3;
    uint64_t v18 = v14;
    do
    {
      int v19 = *(_DWORD *)(v15 + 28);
      BOOL v20 = v19 < v17;
      if (v19 >= v17) {
        int v21 = (uint64_t *)v15;
      }
      else {
        int v21 = (uint64_t *)(v15 + 8);
      }
      if (!v20) {
        uint64_t v18 = v15;
      }
      uint64_t v15 = *v21;
    }
    while (*v21);
    if (v18 == v14 || v17 < *(_DWORD *)(v18 + 28)) {
LABEL_29:
    }
      uint64_t v18 = v14;
    return v18 != v14;
  }
  else
  {
LABEL_11:
    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022F71C0);
    }
    uint64_t v10 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_FAULT))
    {
      int v11 = (void *)(a1 + 8);
      if (*(char *)(a1 + 31) < 0) {
        int v11 = (void *)*v11;
      }
      *(_DWORD *)long long buf = 136446466;
      uint64_t v24 = v11;
      __int16 v25 = 1026;
      int v26 = a2;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_FAULT, "%{public}s; client %{public}d does not exist",
        buf,
        0x12u);
    }
    BOOL v12 = sub_10013D1A0(115, 0);
    BOOL result = 0;
    if (v12)
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419580 != -1) {
        dispatch_once(&qword_102419580, &stru_1022F71C0);
      }
      BOOL v22 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "virtual BOOL CLNotifier<CLFenceDataDownloadManager_Type::Notification, CLFenceDataDownloadManager_Type::NotificationData, char, char>::clientRegistered(int, const Notification_T &) [Notification_T = CLFenceDataDownloadManager_Type::Notification, NotificationData_T = CLFenceDataDownloadManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v22);
      if (v22 != (char *)buf) {
        free(v22);
      }
      return 0;
    }
  }
  return result;
}

BOOL sub_100D9E08C(char *a1, int a2, int *a3)
{
  int v32 = a2;
  int v3 = a1[108];
  if (!a1[108])
  {
    uint64_t v6 = *((void *)a1 + 11);
    if (v6)
    {
      BOOL v8 = a1 + 88;
      do
      {
        int v9 = *(_DWORD *)(v6 + 32);
        BOOL v10 = v9 < a2;
        if (v9 >= a2) {
          int v11 = (uint64_t *)v6;
        }
        else {
          int v11 = (uint64_t *)(v6 + 8);
        }
        if (!v10) {
          BOOL v8 = (char *)v6;
        }
        uint64_t v6 = *v11;
      }
      while (*v11);
      if (v8 != a1 + 88 && *((_DWORD *)v8 + 8) <= a2)
      {
        uint64_t v14 = (char *)*((void *)v8 + 6);
        BOOL v12 = v8 + 48;
        id v13 = v14;
        if (v14)
        {
          int v15 = *a3;
          uint64_t v16 = v12;
          do
          {
            int v17 = *((_DWORD *)v13 + 7);
            BOOL v18 = v17 < v15;
            if (v17 >= v15) {
              int v19 = (char **)v13;
            }
            else {
              int v19 = (char **)(v13 + 8);
            }
            if (!v18) {
              uint64_t v16 = v13;
            }
            id v13 = *v19;
          }
          while (*v19);
          if (v16 != v12 && v15 >= *((_DWORD *)v16 + 7))
          {
            LODWORD(__p[0]) = *a3;
            sub_1000ED9F4((uint64_t)(v12 - 8), (int *)__p);
            uint64_t v20 = *((void *)a1 + 8);
            if (!v20) {
              goto LABEL_33;
            }
            int v21 = *a3;
            BOOL v22 = a1 + 64;
            do
            {
              int v23 = *(_DWORD *)(v20 + 32);
              BOOL v24 = v23 < v21;
              if (v23 >= v21) {
                __int16 v25 = (uint64_t *)v20;
              }
              else {
                __int16 v25 = (uint64_t *)(v20 + 8);
              }
              if (!v24) {
                BOOL v22 = (char *)v20;
              }
              uint64_t v20 = *v25;
            }
            while (*v25);
            if (v22 != a1 + 64 && v21 >= *((_DWORD *)v22 + 8))
            {
              sub_1000ED9F4((uint64_t)(v22 + 40), &v32);
              if (!*((void *)v22 + 7)) {
                (*(void (**)(char *, int *))(*(void *)a1 + 176))(a1, a3);
              }
            }
            else
            {
LABEL_33:
              if (qword_102419580 != -1) {
                dispatch_once(&qword_102419580, &stru_1022F71C0);
              }
              int v26 = qword_102419588;
              if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_FAULT))
              {
                BOOL v27 = a1 + 8;
                if (a1[31] < 0) {
                  BOOL v27 = (void *)*v27;
                }
                (*(void (**)(void **__return_ptr, char *, int *))(*(void *)a1 + 160))(__p, a1, a3);
                if (v42 >= 0) {
                  int v28 = __p;
                }
                else {
                  int v28 = (void **)__p[0];
                }
                *(_DWORD *)long long buf = 136446466;
                *(void *)&uint8_t buf[4] = v27;
                __int16 v34 = 2082;
                char v35 = v28;
                _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_FAULT, "%{public}s; notification %{public}s not found",
                  buf,
                  0x16u);
                if (v42 < 0) {
                  operator delete(__p[0]);
                }
              }
              if (sub_10013D1A0(115, 0))
              {
                bzero(__p, 0x65CuLL);
                if (qword_102419580 != -1) {
                  dispatch_once(&qword_102419580, &stru_1022F71C0);
                }
                char v29 = a1 + 8;
                if (a1[31] < 0) {
                  char v29 = (void *)*v29;
                }
                (*(void (**)(unsigned char *__return_ptr, char *, int *))(*(void *)a1 + 160))(buf, a1, a3);
                if (v36 >= 0) {
                  int v30 = buf;
                }
                else {
                  int v30 = *(unsigned char **)buf;
                }
                int v37 = 136446466;
                int v38 = v29;
                __int16 v39 = 2082;
                int v40 = v30;
                uint64_t v31 = (char *)_os_log_send_and_compose_impl();
                if (v36 < 0) {
                  operator delete(*(void **)buf);
                }
                sub_1004BA5E4("Generic", 1, 0, 0, "virtual BOOL CLNotifier<CLFenceDataDownloadManager_Type::Notification, CLFenceDataDownloadManager_Type::NotificationData, char, char>::unregisterForNotification(int, const Notification_T &) [Notification_T = CLFenceDataDownloadManager_Type::Notification, NotificationData_T = CLFenceDataDownloadManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v31);
                if (v31 != (char *)__p) {
                  free(v31);
                }
              }
            }
          }
        }
      }
    }
  }
  return v3 == 0;
}

uint64_t sub_100D9E460(uint64_t a1, int *a2, std::string *this)
{
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v3 = a1 + 64;
  uint64_t v4 = v5;
  if (!v5) {
    return 0;
  }
  int v7 = *a2;
  uint64_t v8 = v3;
  do
  {
    int v9 = *(_DWORD *)(v4 + 32);
    BOOL v10 = v9 < v7;
    if (v9 >= v7) {
      int v11 = (uint64_t *)v4;
    }
    else {
      int v11 = (uint64_t *)(v4 + 8);
    }
    if (!v10) {
      uint64_t v8 = v4;
    }
    uint64_t v4 = *v11;
  }
  while (*v11);
  if (v8 == v3) {
    return 0;
  }
  if (v7 < *(_DWORD *)(v8 + 32)) {
    return 0;
  }
  uint64_t v12 = *(void *)(v8 + 64);
  if (!v12) {
    return 0;
  }
  std::string::operator=(this, *(const std::string **)(v8 + 64));
  std::string::operator=(this + 1, (const std::string *)(v12 + 24));
  std::string::operator=(this + 2, (const std::string *)(v12 + 48));
  long long v13 = *(_OWORD *)(v12 + 88);
  long long v14 = *(_OWORD *)(v12 + 104);
  long long v15 = *(_OWORD *)(v12 + 120);
  *(_OWORD *)&this[3].__r_.__value_.__l.__data_ = *(_OWORD *)(v12 + 72);
  *(_OWORD *)&this[5].__r_.__value_.__l.__data_ = v15;
  *(_OWORD *)&this[4].__r_.__value_.__r.__words[1] = v14;
  *(_OWORD *)&this[3].__r_.__value_.__r.__words[2] = v13;
  long long v16 = *(_OWORD *)(v12 + 152);
  long long v17 = *(_OWORD *)(v12 + 168);
  std::string::size_type v18 = *(void *)(v12 + 181);
  *(_OWORD *)&this[5].__r_.__value_.__r.__words[2] = *(_OWORD *)(v12 + 136);
  *(std::string::size_type *)((char *)&this[7].__r_.__value_.__r.__words[1] + 5) = v18;
  *(_OWORD *)&this[7].__r_.__value_.__l.__data_ = v17;
  *(_OWORD *)&this[6].__r_.__value_.__r.__words[1] = v16;
  std::string::operator=(this + 8, (const std::string *)(v12 + 192));
  std::string::pointer data = this[9].__r_.__value_.__l.__data_;
  this[9].__r_.__value_.__r.__words[0] = (std::string::size_type)*(id *)(v12 + 216);

  if ((std::string *)v12 != this) {
    sub_10027C3B4(&this[9].__r_.__value_.__s.__data_[8], *(char **)(v12 + 224), *(void *)(v12 + 232), (uint64_t)(*(void *)(v12 + 232) - *(void *)(v12 + 224)) >> 4);
  }
  this[10].__r_.__value_.__s.__data_[8] = *(unsigned char *)(v12 + 248);
  return 1;
}

uint64_t sub_100D9E584(uint64_t a1, int *a2, uint64_t a3)
{
  sub_100D9FA20(a3, &v10);
  int v9 = *a2;
  int v11 = &v9;
  uint64_t v5 = sub_10044715C((uint64_t **)(a1 + 56), &v9, (uint64_t)&unk_101D0B290, &v11);
  long long v6 = v10;
  long long v10 = 0uLL;
  int v7 = (std::__shared_weak_count *)v5[9];
  *((_OWORD *)v5 + 4) = v6;
  if (v7)
  {
    sub_1000DB0A0(v7);
    if (*((void *)&v10 + 1)) {
      sub_1000DB0A0(*((std::__shared_weak_count **)&v10 + 1));
    }
  }
  return 1;
}

void sub_100D9E618(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1000DB0A0(a12);
  }
  _Unwind_Resume(exception_object);
}

void sub_100D9E630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100110970((char *)v8);
  char v19 = 0;
  (*(void (**)(uint64_t, uint64_t, void **, uint64_t, uint64_t, void))(*(void *)a1 + 152))(a1, a2, v8, a3, a4, 0);
  if (__p)
  {
    std::string::size_type v18 = __p;
    operator delete(__p);
  }

  if (v15 < 0) {
    operator delete(v14);
  }
  if (v13 < 0) {
    operator delete(v12);
  }
  if (v11 < 0) {
    operator delete(v10);
  }
  if (v9 < 0) {
    operator delete(v8[0]);
  }
}

void sub_100D9E718(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100D9E72C(uint64_t a1, unsigned int *a2, uint64_t a3, int a4)
{
  if (*(unsigned char *)(a1 + 108)) {
    return;
  }
  uint64_t v8 = _os_activity_create((void *)&_mh_execute_header, "CL: notifyClientsWithData (Fallback)", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_IF_NONE_PRESENT);
  os_activity_scope_enter(v8, &state);

  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022F71C0);
  }
  char v9 = qword_102419588;
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    long long v10 = (void *)(a1 + 8);
    if (*(char *)(a1 + 31) < 0) {
      long long v10 = (void *)*v10;
    }
    char v11 = (std::__shared_weak_count *)*a2;
    *(_DWORD *)long long buf = 68289794;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&buf[8] = 2082;
    *(void *)&buf[10] = "";
    *(_WORD *)&buf[18] = 2082;
    *(void *)&unsigned char buf[20] = "activity";
    __int16 v23 = 2082;
    BOOL v24 = v10;
    __int16 v25 = 2050;
    int v26 = v11;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"notifyClientsWithData\", \"event\":%{public, location:escape_only}s, \"name\":%{public, location:escape_only}s, \"notification\":%{public}lld}", buf, 0x30u);
  }
  uint64_t v12 = *(void *)(a1 + 64);
  if (!v12) {
    goto LABEL_18;
  }
  int v13 = *a2;
  long long v14 = (uint64_t **)(a1 + 64);
  do
  {
    int v15 = *(_DWORD *)(v12 + 32);
    BOOL v16 = v15 < v13;
    if (v15 >= v13) {
      long long v17 = (uint64_t *)v12;
    }
    else {
      long long v17 = (uint64_t *)(v12 + 8);
    }
    if (!v16) {
      long long v14 = (uint64_t **)v12;
    }
    uint64_t v12 = *v17;
  }
  while (*v17);
  if (v14 == (uint64_t **)(a1 + 64) || v13 < *((_DWORD *)v14 + 8))
  {
LABEL_18:
    BOOL v27 = v28;
    memset(v28, 0, sizeof(v28));
    char v29 = 0;
    sub_1004481D0((uint64_t)buf, a2, (uint64_t)&v27);
    long long v14 = sub_100448098((uint64_t **)(a1 + 56), (__n128 *)buf);
    if (v26) {
      sub_1000DB0A0(v26);
    }
    sub_1000F5BB0((uint64_t)&buf[8], *(void **)&buf[16]);
    if (v29) {
      sub_1000DB0A0(v29);
    }
    sub_1000F5BB0((uint64_t)&v27, v28[0]);
  }
  if (!a4)
  {
    uint64_t v20 = (std::__shared_weak_count *)v14[9];
    v14[8] = 0;
    v14[9] = 0;
    if (!v20) {
      goto LABEL_29;
    }
LABEL_28:
    sub_1000DB0A0(v20);
    goto LABEL_29;
  }
  sub_100D9FA20(a3, buf);
  long long v18 = *(_OWORD *)buf;
  *(void *)long long buf = 0;
  *(void *)&buf[8] = 0;
  char v19 = (std::__shared_weak_count *)v14[9];
  *((_OWORD *)v14 + 4) = v18;
  if (v19)
  {
    sub_1000DB0A0(v19);
    uint64_t v20 = *(std::__shared_weak_count **)&buf[8];
    if (*(void *)&buf[8]) {
      goto LABEL_28;
    }
  }
LABEL_29:
  if (v14[7]) {
    sub_100D9F458();
  }
  os_activity_scope_leave(&state);
}

void sub_100D9ECFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state, char a18)
{
}

void sub_100D9ED48(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 108))
  {
    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022F71C0);
    }
    uint64_t v2 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v3 = (void *)(a1 + 8);
      if (*(char *)(a1 + 31) < 0) {
        uint64_t v3 = (void *)*v3;
      }
      *(_DWORD *)long long buf = 136315138;
      BOOL v22 = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "%s; already shutdown; not listing clients",
        buf,
        0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419580 != -1) {
        dispatch_once(&qword_102419580, &stru_1022F71C0);
      }
      uint64_t v4 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLNotifier<CLFenceDataDownloadManager_Type::Notification, CLFenceDataDownloadManager_Type::NotificationData, char, char>::listClients() [Notification_T = CLFenceDataDownloadManager_Type::Notification, NotificationData_T = CLFenceDataDownloadManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v4);
      if (v4 != (char *)buf) {
        free(v4);
      }
    }
  }
  else
  {
    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022F71C0);
    }
    uint64_t v5 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      long long v6 = (void *)(a1 + 8);
      if (*(char *)(a1 + 31) < 0) {
        long long v6 = (void *)*v6;
      }
      uint64_t v7 = *(void *)(a1 + 96);
      *(_DWORD *)long long buf = 136315394;
      BOOL v22 = v6;
      __int16 v23 = 2048;
      v24[0] = v7;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "%s; listing clients, num clients: %zu",
        buf,
        0x16u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419580 != -1) {
        dispatch_once(&qword_102419580, &stru_1022F71C0);
      }
      uint64_t v20 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLNotifier<CLFenceDataDownloadManager_Type::Notification, CLFenceDataDownloadManager_Type::NotificationData, char, char>::listClients() [Notification_T = CLFenceDataDownloadManager_Type::Notification, NotificationData_T = CLFenceDataDownloadManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v20);
      if (v20 != (char *)buf) {
        free(v20);
      }
    }
    uint64_t v8 = *(void **)(a1 + 80);
    if (v8 != (void *)(a1 + 88))
    {
      do
      {
        char v9 = (void *)v8[5];
        if (v9 != v8 + 6)
        {
          do
          {
            if (qword_102419580 != -1) {
              dispatch_once(&qword_102419580, &stru_1022F71C0);
            }
            long long v10 = qword_102419588;
            if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
            {
              char v11 = (void *)(a1 + 8);
              if (*(char *)(a1 + 31) < 0) {
                char v11 = *(void **)(a1 + 8);
              }
              int v12 = *((_DWORD *)v8 + 8);
              int v13 = *((_DWORD *)v9 + 7);
              *(_DWORD *)long long buf = 136315650;
              BOOL v22 = v11;
              __int16 v23 = 1024;
              LODWORD(v24[0]) = v12;
              WORD2(v24[0]) = 1024;
              *(_DWORD *)((char *)v24 + 6) = v13;
              _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "%s; clients, id: %d, notification: %d",
                buf,
                0x18u);
            }
            if (sub_10013D1A0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_102419580 != -1) {
                dispatch_once(&qword_102419580, &stru_1022F71C0);
              }
              long long v17 = (char *)_os_log_send_and_compose_impl();
              sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLNotifier<CLFenceDataDownloadManager_Type::Notification, CLFenceDataDownloadManager_Type::NotificationData, char, char>::listClients() [Notification_T = CLFenceDataDownloadManager_Type::Notification, NotificationData_T = CLFenceDataDownloadManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v17);
              if (v17 != (char *)buf) {
                free(v17);
              }
            }
            long long v14 = (void *)v9[1];
            if (v14)
            {
              do
              {
                int v15 = v14;
                long long v14 = (void *)*v14;
              }
              while (v14);
            }
            else
            {
              do
              {
                int v15 = (void *)v9[2];
                BOOL v16 = *v15 == (void)v9;
                char v9 = v15;
              }
              while (!v16);
            }
            char v9 = v15;
          }
          while (v15 != v8 + 6);
        }
        long long v18 = (void *)v8[1];
        if (v18)
        {
          do
          {
            char v19 = v18;
            long long v18 = (void *)*v18;
          }
          while (v18);
        }
        else
        {
          do
          {
            char v19 = (void *)v8[2];
            BOOL v16 = *v19 == (void)v8;
            uint64_t v8 = v19;
          }
          while (!v16);
        }
        uint64_t v8 = v19;
      }
      while (v19 != (void *)(a1 + 88));
    }
  }
}

void sub_100D9F2FC(uint64_t a1)
{
  sub_100DA0118(a1);

  operator delete();
}

id sub_100D9F334(uint64_t a1, int a2, void *a3)
{
  id result = sub_100D9FCC8(a3);
  if (result)
  {
    int v6 = a2;
    return (id)(*(uint64_t (**)(void, int *, id, void))(a1 + 24))(0, &v6, result, *(void *)(a1 + 32));
  }
  return result;
}

void sub_100D9F384(id a1)
{
  qword_102419588 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_100D9F3B4(uint64_t *a1)
{
  if (a1[2])
  {
    uint64_t v2 = *a1;
    uint64_t v3 = (uint64_t *)a1[1];
    uint64_t v4 = *v3;
    *(void *)(v4 + 8) = *(void *)(*a1 + 8);
    **(void **)(v2 + 8) = v4;
    a1[2] = 0;
    if (v3 != a1)
    {
      do
      {
        uint64_t v5 = (uint64_t *)v3[1];
        sub_100A0D1F4((uint64_t)(v3 + 2));
        operator delete(v3);
        uint64_t v3 = v5;
      }
      while (v5 != a1);
    }
  }
}

void sub_100D9F428(id a1)
{
  qword_1024193C8 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeoFencing");
}

void sub_100D9F458()
{
}

void sub_100D9F510()
{
}

void sub_100D9F534(void *a1, int *a2, void *a3)
{
  if (!*((unsigned char *)a1 + 108))
  {
    uint64_t v5 = a1 + 8;
    uint64_t v4 = a1[8];
    if (v4)
    {
      int v8 = *a2;
      char v9 = a1 + 8;
      do
      {
        int v10 = *(_DWORD *)(v4 + 32);
        BOOL v11 = v10 < v8;
        if (v10 >= v8) {
          int v12 = (uint64_t *)v4;
        }
        else {
          int v12 = (uint64_t *)(v4 + 8);
        }
        if (!v11) {
          char v9 = (void *)v4;
        }
        uint64_t v4 = *v12;
      }
      while (*v12);
      if (v9 != v5 && v8 >= *((_DWORD *)v9 + 8))
      {
        char v49 = v9;
        id v13 = sub_100D9FCC8(a3);
        (*(void (**)(void *, int *, id, void *))(*a1 + 184))(a1, a2, v13, v9 + 10);
        long long v14 = (void *)v9[5];
        if (v14 != v9 + 6)
        {
          int v15 = a1 + 11;
          BOOL v16 = a1 + 1;
          do
          {
            uint64_t v17 = *v15;
            if (!*v15) {
              goto LABEL_25;
            }
            int v18 = *((_DWORD *)v14 + 7);
            char v19 = a1 + 11;
            do
            {
              int v20 = *(_DWORD *)(v17 + 32);
              BOOL v21 = v20 < v18;
              if (v20 >= v18) {
                BOOL v22 = (uint64_t *)v17;
              }
              else {
                BOOL v22 = (uint64_t *)(v17 + 8);
              }
              if (!v21) {
                char v19 = (uint64_t *)v17;
              }
              uint64_t v17 = *v22;
            }
            while (*v22);
            if (v19 != v15 && (int v23 = *((_DWORD *)v19 + 8), v18 >= v23))
            {
              int v48 = v19;
              sub_100D9F928(a1, (uint64_t)&v48, (uint64_t)&v49, a3);
              uint64_t v27 = a1[8];
              if (!v27) {
                return;
              }
              int v28 = *a2;
              char v29 = v5;
              do
              {
                int v30 = *(_DWORD *)(v27 + 32);
                BOOL v31 = v30 < v28;
                if (v30 >= v28) {
                  int v32 = (uint64_t *)v27;
                }
                else {
                  int v32 = (uint64_t *)(v27 + 8);
                }
                if (!v31) {
                  char v29 = (void *)v27;
                }
                uint64_t v27 = *v32;
              }
              while (*v32);
              if (v29 == v5 || v28 < *((_DWORD *)v29 + 8)) {
                return;
              }
              char v49 = v29;
              uint64_t v34 = v29[6];
              long long v14 = v29 + 6;
              uint64_t v33 = v34;
              if (v34)
              {
                char v35 = v14;
                uint64_t v36 = v33;
                do
                {
                  int v37 = *(_DWORD *)(v36 + 28);
                  BOOL v38 = v37 < v23;
                  if (v37 >= v23) {
                    __int16 v39 = (uint64_t *)v36;
                  }
                  else {
                    __int16 v39 = (uint64_t *)(v36 + 8);
                  }
                  if (!v38) {
                    char v35 = (void *)v36;
                  }
                  uint64_t v36 = *v39;
                }
                while (*v39);
                if (v35 == v14 || v23 < *((_DWORD *)v35 + 7))
                {
                  do
                  {
                    int v40 = *(_DWORD *)(v33 + 28);
                    BOOL v41 = v23 < v40;
                    if (v23 >= v40) {
                      char v42 = (uint64_t *)(v33 + 8);
                    }
                    else {
                      char v42 = (uint64_t *)v33;
                    }
                    if (v41) {
                      long long v14 = (void *)v33;
                    }
                    uint64_t v33 = *v42;
                  }
                  while (*v42);
                }
                else
                {
                  int v43 = (void *)v35[1];
                  if (v43)
                  {
                    do
                    {
                      long long v14 = v43;
                      int v43 = (void *)*v43;
                    }
                    while (v43);
                  }
                  else
                  {
                    do
                    {
                      long long v14 = (void *)v35[2];
                      BOOL v44 = *v14 == (void)v35;
                      char v35 = v14;
                    }
                    while (!v44);
                  }
                }
              }
            }
            else
            {
LABEL_25:
              int v48 = a1 + 11;
              if (qword_102419580 != -1) {
                dispatch_once(&qword_102419580, &stru_1022F71C0);
              }
              BOOL v24 = qword_102419588;
              if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_FAULT))
              {
                __int16 v25 = a1 + 1;
                if (*((char *)a1 + 31) < 0) {
                  __int16 v25 = (void *)*v16;
                }
                int v26 = *((_DWORD *)v14 + 7);
                *(_DWORD *)long long buf = 136446466;
                __int16 v55 = v25;
                __int16 v56 = 1026;
                int v57 = v26;
                _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_FAULT, "%{public}s; unknown client %{public}d",
                  buf,
                  0x12u);
              }
              if (sub_10013D1A0(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_102419580 != -1) {
                  dispatch_once(&qword_102419580, &stru_1022F71C0);
                }
                __int16 v45 = a1 + 1;
                if (*((char *)a1 + 31) < 0) {
                  __int16 v45 = (void *)*v16;
                }
                int v46 = *((_DWORD *)v14 + 7);
                int v50 = 136446466;
                char v51 = v45;
                __int16 v52 = 1026;
                int v53 = v46;
                char v47 = (char *)_os_log_send_and_compose_impl();
                sub_1004BA5E4("Generic", 1, 0, 0, "void CLNotifier<CLFenceDataDownloadManager_Type::Notification, CLFenceDataDownloadManager_Type::NotificationData, char, char>::invokeClientsWithData(const Notification_T &, CLCppContainer *) [Notification_T = CLFenceDataDownloadManager_Type::Notification, NotificationData_T = CLFenceDataDownloadManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v47);
                if (v47 != (char *)buf) {
                  free(v47);
                }
              }
            }
          }
          while (v14 != v49 + 6);
        }
      }
    }
  }
}

unsigned char *sub_100D9F928(unsigned char *result, uint64_t a2, uint64_t a3, void *a4)
{
  if (!result[108])
  {
    uint64_t v7 = result;
    uint64_t v8 = *(unsigned int *)(*(void *)a2 + 32);
    LODWORD(v13) = *(_DWORD *)(*(void *)a3 + 32);
    id v9 = sub_100D9FCC8(a4);
    uint64_t v10 = *(void *)a3 + 80;
    BOOL v11 = (uint64_t **)(*(void *)a3 + 40);
    long long v14 = (int *)(*(void *)a2 + 32);
    int v12 = sub_1000EB1B8(v11, v14, (uint64_t)&unk_101D0B290, &v14);
    id result = (unsigned char *)(*(uint64_t (**)(unsigned char *, uint64_t, uint64_t *, id, uint64_t, uint64_t **))(*(void *)v7 + 192))(v7, v8, &v13, v9, v10, v12 + 4);
    if (result) {
      return [*(id *)(*(void *)a2 + 64) onNotification:*(unsigned int *)(*(void *)a3 + 32) withData:a4, v13];
    }
  }
  return result;
}

uint64_t sub_100D9FA20@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = (char *)operator new(0x118uLL);
  uint64_t result = sub_100D9FA7C((uint64_t)v4, a1);
  *a2 = v4 + 24;
  a2[1] = v4;
  return result;
}

void sub_100D9FA68(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100D9FA7C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = off_1022F72F0;
  sub_10048AEC0((char *)(a1 + 24), (long long *)a2);
  *(unsigned char *)(a1 + 272) = *(unsigned char *)(a2 + 248);
  return a1;
}

void sub_100D9FAD0(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_100D9FAE4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1022F72F0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100D9FB04(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1022F72F0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_100D9FB58(uint64_t a1)
{
  sub_100D9FB84((uint64_t)&v1, a1 + 24);
}

void sub_100D9FB84(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a2 + 224);
  if (v3)
  {
    *(void *)(a2 + 232) = v3;
    operator delete(v3);
  }

  if (*(char *)(a2 + 215) < 0) {
    operator delete(*(void **)(a2 + 192));
  }
  if (*(char *)(a2 + 71) < 0) {
    operator delete(*(void **)(a2 + 48));
  }
  if (*(char *)(a2 + 47) < 0) {
    operator delete(*(void **)(a2 + 24));
  }
  if (*(char *)(a2 + 23) < 0)
  {
    uint64_t v4 = *(void **)a2;
    operator delete(v4);
  }
}

uint64_t sub_100D9FC18(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 32);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 224);
    if (v2)
    {
      *(void *)(v1 + 232) = v2;
      operator delete(v2);
    }

    if (*(char *)(v1 + 215) < 0) {
      operator delete(*(void **)(v1 + 192));
    }
    if (*(char *)(v1 + 71) < 0) {
      operator delete(*(void **)(v1 + 48));
    }
    if (*(char *)(v1 + 47) < 0) {
      operator delete(*(void **)(v1 + 24));
    }
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  return result;
}

id sub_100D9FCC8(void *a1)
{
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    return 0;
  }

  return sub_100D9FD28(a1);
}

id sub_100D9FD28(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (v2)
  {
    if (getenv("_INTERSILO_UNIT_TEST"))
    {
      if (qword_102418F90 != -1) {
        dispatch_once(&qword_102418F90, &stru_1022F7330);
      }
      uint64_t v3 = qword_102418F98;
      if (os_log_type_enabled((os_log_t)qword_102418F98, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)long long buf = 134218498;
        id v8 = v2;
        __int16 v9 = 2048;
        uint64_t v10 = 0;
        __int16 v11 = 2080;
        unint64_t v12 = 0x8000000101D8DF39 & 0x7FFFFFFFFFFFFFFFLL;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly", buf, 0x20u);
      }
      if (!sub_10013D1A0(115, 0)) {
        return 0;
      }
      bzero(buf, 0x65CuLL);
      if (qword_102418F90 == -1)
      {
LABEL_20:
        int v6 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLFenceDataDownloadManager_Type::NotificationData, Callback = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:228:46)]", "%s\n", v6);
        if (v6 != (char *)buf) {
          free(v6);
        }
        return 0;
      }
    }
    else
    {
      if (qword_102418F90 != -1) {
        dispatch_once(&qword_102418F90, &stru_1022F7330);
      }
      uint64_t v5 = qword_102418F98;
      if (os_log_type_enabled((os_log_t)qword_102418F98, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)long long buf = 134218498;
        id v8 = v2;
        __int16 v9 = 2048;
        uint64_t v10 = 0;
        __int16 v11 = 2080;
        unint64_t v12 = 0x8000000101D8DF39 & 0x7FFFFFFFFFFFFFFFLL;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly", buf, 0x20u);
      }
      if (!sub_10013D1A0(115, 0)) {
        return 0;
      }
      bzero(buf, 0x65CuLL);
      if (qword_102418F90 == -1) {
        goto LABEL_20;
      }
    }
    dispatch_once(&qword_102418F90, &stru_1022F7330);
    goto LABEL_20;
  }

  return [a1 cppObjectPtr];
}

void sub_100DA00E8(id a1)
{
  qword_102418F98 = (uint64_t)os_log_create("com.apple.locationd.Support", "Support");
}

uint64_t sub_100DA0118(uint64_t a1)
{
  *(void *)a1 = &off_1022F7360;
  id v2 = (id *)(a1 + 8);
  [*(id *)(a1 + 16) forget:*(void *)(a1 + 8)];

  [*v2 invalidate];
  id *v2 = 0;
  *(void *)(a1 + 16) = 0;
  return a1;
}

void sub_100DA0188()
{
}

void sub_100DA0240()
{
}

uint64_t sub_100DA0264(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 32);
  if (v1)
  {
    id v2 = *(void **)(v1 + 224);
    if (v2)
    {
      *(void *)(v1 + 232) = v2;
      operator delete(v2);
    }

    if (*(char *)(v1 + 215) < 0) {
      operator delete(*(void **)(v1 + 192));
    }
    if (*(char *)(v1 + 71) < 0) {
      operator delete(*(void **)(v1 + 48));
    }
    if (*(char *)(v1 + 47) < 0) {
      operator delete(*(void **)(v1 + 24));
    }
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  return result;
}

void sub_100DA0314()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241AD20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10241AD20))
  {
    qword_10241AD08 = 0;
    qword_10241AD10 = 0;
    qword_10241AD18 = 0;
    __cxa_atexit((void (*)(void *))sub_1003BE920, &qword_10241AD08, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10241AD20);
  }
}

void sub_100DA0394()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241ADD0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10241ADD0))
  {
    std::__shared_mutex_base::__shared_mutex_base(&stru_10241AD28);
    __cxa_atexit((void (*)(void *))sub_1003BE954, &stru_10241AD28, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10241ADD0);
  }
}

void sub_100DA0424(_Unwind_Exception *a1)
{
}

void sub_100DA04EC(id a1)
{
  qword_1024814A8 = (uint64_t)[objc_alloc((Class)CLDispatchSilo) initWithIdentifier:@"CLPressureStatsCollectorSilo"];
}

void sub_100DA0564(id a1)
{
  if ((sub_10074157C() & 0x10) != 0)
  {
    sub_100103240();
    char v1 = sub_10010145C();
  }
  else
  {
    char v1 = 0;
  }
  byte_1024814B8 = v1;
}

void sub_100DA0A04()
{
}

id sub_100DA0A28(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return _[a4 onDaemonStatus:a2 data:a3];
}

id sub_100DA0A38(uint64_t a1, void *a2)
{
  return _[a2 onPressureData:a1];
}

void sub_100DA13EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,void *__p,uint64_t a54,uint64_t a55,void *a56,uint64_t a57)
{
  if (v58 < 0) {
    operator delete(v57);
  }
  sub_10041F48C(&a47);
  if (__p)
  {
    a54 = (uint64_t)__p;
    operator delete(__p);
  }
  if (a56)
  {
    a57 = (uint64_t)a56;
    operator delete(a56);
  }
  _Unwind_Resume(a1);
}

float sub_100DA14A4(uint64_t a1)
{
  uint64_t v7 = 0;
  id v8 = 0;
  uint64_t v9 = 0;
  sub_10010F834(&v7, *(const void **)a1, *(void *)(a1 + 8), (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 2);
  unint64_t v1 = v8 - v7;
  if (v8 != v7)
  {
    if (v1 <= 1) {
      uint64_t v2 = 1;
    }
    else {
      uint64_t v2 = v8 - v7;
    }
    float v3 = 0.0;
    uint64_t v4 = v7;
    do
    {
      float v5 = *v4++;
      float v3 = v3 + v5;
      --v2;
    }
    while (v2);
    goto LABEL_9;
  }
  float v3 = 0.0;
  if (v7)
  {
LABEL_9:
    id v8 = v7;
    operator delete(v7);
  }
  return v3 / (float)v1;
}

void sub_100DA2478(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DA2CD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  sub_100DA3188((uint64_t)&a27);
  if (*(char *)(v27 - 161) < 0) {
    operator delete(*(void **)(v27 - 184));
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100DA3024(uint64_t a1)
{
  return *(void *)(a1 + 32);
}

void sub_100DA3158(id a1)
{
  qword_1024190D8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Pressure");
}

uint64_t sub_100DA3188(uint64_t a1)
{
  uint64_t v10 = (void **)(a1 + 208);
  sub_1000A7B4C(&v10);
  uint64_t v2 = *(void **)(a1 + 184);
  if (v2)
  {
    *(void *)(a1 + 192) = v2;
    operator delete(v2);
  }
  float v3 = *(void **)(a1 + 160);
  if (v3)
  {
    *(void *)(a1 + 168) = v3;
    operator delete(v3);
  }
  uint64_t v4 = *(void **)(a1 + 136);
  if (v4)
  {
    *(void *)(a1 + 144) = v4;
    operator delete(v4);
  }
  float v5 = *(void **)(a1 + 112);
  if (v5)
  {
    *(void *)(a1 + 120) = v5;
    operator delete(v5);
  }
  int v6 = *(void **)(a1 + 88);
  if (v6)
  {
    *(void *)(a1 + 96) = v6;
    operator delete(v6);
  }
  uint64_t v7 = *(void **)(a1 + 64);
  if (v7)
  {
    *(void *)(a1 + 72) = v7;
    operator delete(v7);
  }
  id v8 = *(void **)(a1 + 40);
  if (v8)
  {
    *(void *)(a1 + 48) = v8;
    operator delete(v8);
  }
  if (*(char *)(a1 + 39) < 0) {
    operator delete(*(void **)(a1 + 16));
  }
  return a1;
}

void sub_100DA3244(id a1)
{
  qword_102418FD8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Motion");
}

unsigned __int8 *sub_100DA3274(unsigned __int8 *a1, const char *a2, void *a3, unsigned __int8 a4)
{
  *a1 = 0;
  *((void *)a1 + 1) = *a3;
  int v6 = a1 + 8;
  a1[16] = a4;
  uint64_t v7 = sub_1000D3E78();
  sub_10006B564(v7, buf);
  *a1 = sub_1004D0EA0(*(uint64_t *)buf, a2, v6);
  if (*(void *)&buf[8]) {
    sub_1000DB0A0(*(std::__shared_weak_count **)&buf[8]);
  }
  sub_10010F274((uint64_t)v28);
  std::ostream::operator<<();
  if (!a1[16])
  {
    if (*a1)
    {
      if (qword_102418FD0 != -1) {
        dispatch_once(&qword_102418FD0, &stru_1022F73D8);
      }
      uint64_t v10 = qword_102418FD8;
      if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_DEFAULT))
      {
        int v11 = *a1;
        std::stringbuf::str();
        unint64_t v12 = SBYTE3(v34) >= 0 ? __p : *(unsigned char **)__p;
        *(_DWORD *)long long buf = 136315650;
        *(void *)&uint8_t buf[4] = a2;
        *(_WORD *)&unsigned char buf[12] = 1024;
        *(_DWORD *)&buf[14] = v11;
        __int16 v36 = 2080;
        int v37 = v12;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "motion default,%s,set,%d,value,%s", buf, 0x1Cu);
        if (SBYTE3(v34) < 0) {
          operator delete(*(void **)__p);
        }
      }
      if (!sub_10013D1A0(115, 2)) {
        goto LABEL_47;
      }
      bzero(buf, 0x65CuLL);
      if (qword_102418FD0 != -1) {
        dispatch_once(&qword_102418FD0, &stru_1022F73D8);
      }
      int v13 = *a1;
      std::stringbuf::str();
      if (v27 >= 0) {
        long long v14 = v26;
      }
      else {
        long long v14 = (void **)v26[0];
      }
      *(_DWORD *)__p = 136315650;
      *(void *)&__p[4] = a2;
      __int16 v31 = 1024;
      int v32 = v13;
      __int16 v33 = 2080;
      uint64_t v34 = v14;
      int v15 = (char *)_os_log_send_and_compose_impl();
      if (v27 < 0) {
        operator delete(v26[0]);
      }
    }
    else
    {
      if (qword_102418FD0 != -1) {
        dispatch_once(&qword_102418FD0, &stru_1022F73D8);
      }
      char v19 = qword_102418FD8;
      if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_INFO))
      {
        int v20 = *a1;
        std::stringbuf::str();
        BOOL v21 = SBYTE3(v34) >= 0 ? __p : *(unsigned char **)__p;
        *(_DWORD *)long long buf = 136315650;
        *(void *)&uint8_t buf[4] = a2;
        *(_WORD *)&unsigned char buf[12] = 1024;
        *(_DWORD *)&buf[14] = v20;
        __int16 v36 = 2080;
        int v37 = v21;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, "motion default,%s,set,%d,value,%s", buf, 0x1Cu);
        if (SBYTE3(v34) < 0) {
          operator delete(*(void **)__p);
        }
      }
      if (!sub_10013D1A0(115, 2)) {
        goto LABEL_47;
      }
      bzero(buf, 0x65CuLL);
      if (qword_102418FD0 != -1) {
        dispatch_once(&qword_102418FD0, &stru_1022F73D8);
      }
      int v24 = *a1;
      std::stringbuf::str();
      if (v27 >= 0) {
        __int16 v25 = v26;
      }
      else {
        __int16 v25 = (void **)v26[0];
      }
      *(_DWORD *)__p = 136315650;
      *(void *)&__p[4] = a2;
      __int16 v31 = 1024;
      int v32 = v24;
      __int16 v33 = 2080;
      uint64_t v34 = v25;
      int v15 = (char *)_os_log_send_and_compose_impl();
      if (v27 < 0) {
        operator delete(v26[0]);
      }
    }
    sub_1004BA5E4("Generic", 1, 0, 2, "CLMotionDefaultsWrite<long>::CLMotionDefaultsWrite(const char *, const T &, const BOOL) [T = long]", "%s\n", v15);
    if (v15 == buf) {
      goto LABEL_47;
    }
    goto LABEL_58;
  }
  if (*a1)
  {
    if (qword_102418FD0 != -1) {
      dispatch_once(&qword_102418FD0, &stru_1022F73D8);
    }
    id v8 = qword_102418FD8;
    if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_DEFAULT))
    {
      int v9 = *a1;
      *(_DWORD *)long long buf = 136315394;
      *(void *)&uint8_t buf[4] = a2;
      *(_WORD *)&unsigned char buf[12] = 1024;
      *(_DWORD *)&buf[14] = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "motion default,%s,set,%d", buf, 0x12u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418FD0 == -1)
      {
LABEL_36:
        int v18 = *a1;
        *(_DWORD *)__p = 136315394;
        *(void *)&__p[4] = a2;
        __int16 v31 = 1024;
        int v32 = v18;
        int v15 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "CLMotionDefaultsWrite<long>::CLMotionDefaultsWrite(const char *, const T &, const BOOL) [T = long]", "%s\n", v15);
        if (v15 == buf) {
          goto LABEL_47;
        }
LABEL_58:
        free(v15);
        goto LABEL_47;
      }
LABEL_59:
      dispatch_once(&qword_102418FD0, &stru_1022F73D8);
      goto LABEL_36;
    }
  }
  else
  {
    if (qword_102418FD0 != -1) {
      dispatch_once(&qword_102418FD0, &stru_1022F73D8);
    }
    BOOL v16 = qword_102418FD8;
    if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_INFO))
    {
      int v17 = *a1;
      *(_DWORD *)long long buf = 136315394;
      *(void *)&uint8_t buf[4] = a2;
      *(_WORD *)&unsigned char buf[12] = 1024;
      *(_DWORD *)&buf[14] = v17;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_INFO, "motion default,%s,set,%d", buf, 0x12u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418FD0 == -1) {
        goto LABEL_36;
      }
      goto LABEL_59;
    }
  }
LABEL_47:
  *(void *)((char *)v28
  v28[2] = v22;
  if (v29 < 0) {
    operator delete((void *)v28[11]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  std::ios::~ios();
  return a1;
}

void sub_100DA3ACC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_101A129A8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100DA3B1C()
{
  sub_100134750(&qword_102481388, "CLPressureStatsCollector");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_102481388, (void *)&_mh_execute_header);
  if (byte_10248139F >= 0) {
    size_t v0 = byte_10248139F;
  }
  else {
    size_t v0 = qword_102481390;
  }
  uint64_t v1 = sub_1001110E4((uint64_t)&qword_1024813A0, v0 + 11);
  if (*(char *)(v1 + 23) >= 0) {
    uint64_t v2 = (void *)v1;
  }
  else {
    uint64_t v2 = *(void **)v1;
  }
  if (v0)
  {
    if (byte_10248139F >= 0) {
      float v3 = &qword_102481388;
    }
    else {
      float v3 = (uint64_t *)qword_102481388;
    }
    memmove(v2, v3, v0);
  }
  strcpy((char *)v2 + v0, "_LastUpdate");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1024813A0, (void *)&_mh_execute_header);
  if (byte_10248139F >= 0) {
    size_t v4 = byte_10248139F;
  }
  else {
    size_t v4 = qword_102481390;
  }
  uint64_t v5 = sub_1001110E4((uint64_t)&qword_1024813B8, v4 + 12);
  if (*(char *)(v5 + 23) >= 0) {
    int v6 = (void *)v5;
  }
  else {
    int v6 = *(void **)v5;
  }
  if (v4)
  {
    if (byte_10248139F >= 0) {
      uint64_t v7 = &qword_102481388;
    }
    else {
      uint64_t v7 = (uint64_t *)qword_102481388;
    }
    memmove(v6, v7, v4);
  }
  strcpy((char *)v6 + v4, "_MeanAbsPErr");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1024813B8, (void *)&_mh_execute_header);
  if (byte_10248139F >= 0) {
    size_t v8 = byte_10248139F;
  }
  else {
    size_t v8 = qword_102481390;
  }
  uint64_t v9 = sub_1001110E4((uint64_t)&qword_1024813D0, v8 + 8);
  if (*(char *)(v9 + 23) >= 0) {
    uint64_t v10 = (void *)v9;
  }
  else {
    uint64_t v10 = *(void **)v9;
  }
  if (v8)
  {
    if (byte_10248139F >= 0) {
      int v11 = &qword_102481388;
    }
    else {
      int v11 = (uint64_t *)qword_102481388;
    }
    memmove(v10, v11, v8);
  }
  strcpy((char *)v10 + v8, "_VarPErr");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1024813D0, (void *)&_mh_execute_header);
  if (byte_10248139F >= 0) {
    size_t v12 = byte_10248139F;
  }
  else {
    size_t v12 = qword_102481390;
  }
  uint64_t v13 = sub_1001110E4((uint64_t)&qword_1024813E8, v12 + 14);
  if (*(char *)(v13 + 23) >= 0) {
    long long v14 = (void *)v13;
  }
  else {
    long long v14 = *(void **)v13;
  }
  if (v12)
  {
    if (byte_10248139F >= 0) {
      int v15 = &qword_102481388;
    }
    else {
      int v15 = (uint64_t *)qword_102481388;
    }
    memmove(v14, v15, v12);
  }
  strcpy((char *)v14 + v12, "_DeltaPressure");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_1024813E8, (void *)&_mh_execute_header);
  if (byte_10248139F >= 0) {
    size_t v16 = byte_10248139F;
  }
  else {
    size_t v16 = qword_102481390;
  }
  uint64_t v17 = sub_1001110E4((uint64_t)&qword_102481400, v16 + 17);
  if (*(char *)(v17 + 23) >= 0) {
    int v18 = (void *)v17;
  }
  else {
    int v18 = *(void **)v17;
  }
  if (v16)
  {
    if (byte_10248139F >= 0) {
      char v19 = &qword_102481388;
    }
    else {
      char v19 = (uint64_t *)qword_102481388;
    }
    memmove(v18, v19, v16);
  }
  strcpy((char *)v18 + v16, "_DeltaTemperature");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_102481400, (void *)&_mh_execute_header);
  if (byte_10248139F >= 0) {
    size_t v20 = byte_10248139F;
  }
  else {
    size_t v20 = qword_102481390;
  }
  uint64_t v21 = sub_1001110E4((uint64_t)&qword_102481418, v20 + 4);
  if (*(char *)(v21 + 23) >= 0) {
    uint64_t v22 = (void *)v21;
  }
  else {
    uint64_t v22 = *(void **)v21;
  }
  if (v20)
  {
    if (byte_10248139F >= 0) {
      int v23 = &qword_102481388;
    }
    else {
      int v23 = (uint64_t *)qword_102481388;
    }
    memmove(v22, v23, v20);
  }
  strcpy((char *)v22 + v20, "_TCO");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_102481418, (void *)&_mh_execute_header);
  if (byte_10248139F >= 0) {
    size_t v24 = byte_10248139F;
  }
  else {
    size_t v24 = qword_102481390;
  }
  uint64_t v25 = sub_1001110E4((uint64_t)&qword_102481430, v24 + 18);
  if (*(char *)(v25 + 23) >= 0) {
    int v26 = (void *)v25;
  }
  else {
    int v26 = *(void **)v25;
  }
  if (v24)
  {
    if (byte_10248139F >= 0) {
      char v27 = &qword_102481388;
    }
    else {
      char v27 = (uint64_t *)qword_102481388;
    }
    memmove(v26, v27, v24);
  }
  strcpy((char *)v26 + v24, "_MedianAbsDevOfTCO");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_102481430, (void *)&_mh_execute_header);
  if (byte_10248139F >= 0) {
    size_t v28 = byte_10248139F;
  }
  else {
    size_t v28 = qword_102481390;
  }
  uint64_t v29 = sub_1001110E4((uint64_t)&qword_102481448, v28 + 15);
  if (*(char *)(v29 + 23) >= 0) {
    int v30 = (void *)v29;
  }
  else {
    int v30 = *(void **)v29;
  }
  if (v28)
  {
    if (byte_10248139F >= 0) {
      __int16 v31 = &qword_102481388;
    }
    else {
      __int16 v31 = (uint64_t *)qword_102481388;
    }
    memmove(v30, v31, v28);
  }
  strcpy((char *)v30 + v28, "_FlightOfStairs");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_102481448, (void *)&_mh_execute_header);
  if (byte_10248139F >= 0) {
    size_t v32 = byte_10248139F;
  }
  else {
    size_t v32 = qword_102481390;
  }
  uint64_t v33 = sub_1001110E4((uint64_t)&qword_102481460, v32 + 12);
  if (*(char *)(v33 + 23) >= 0) {
    uint64_t v34 = (void *)v33;
  }
  else {
    uint64_t v34 = *(void **)v33;
  }
  if (v32)
  {
    if (byte_10248139F >= 0) {
      char v35 = &qword_102481388;
    }
    else {
      char v35 = (uint64_t *)qword_102481388;
    }
    memmove(v34, v35, v32);
  }
  strcpy((char *)v34 + v32, "_FactoryTime");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_102481460, (void *)&_mh_execute_header);
  if (byte_10248139F >= 0) {
    size_t v36 = byte_10248139F;
  }
  else {
    size_t v36 = qword_102481390;
  }
  uint64_t v37 = sub_1001110E4((uint64_t)&qword_102481478, v36 + 18);
  if (*(char *)(v37 + 23) >= 0) {
    BOOL v38 = (void *)v37;
  }
  else {
    BOOL v38 = *(void **)v37;
  }
  if (v36)
  {
    if (byte_10248139F >= 0) {
      __int16 v39 = &qword_102481388;
    }
    else {
      __int16 v39 = (uint64_t *)qword_102481388;
    }
    memmove(v38, v39, v36);
  }
  strcpy((char *)v38 + v36, "_LastAwdSubmission");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_102481478, (void *)&_mh_execute_header);
  if (byte_10248139F >= 0) {
    size_t v40 = byte_10248139F;
  }
  else {
    size_t v40 = qword_102481390;
  }
  uint64_t v41 = sub_1001110E4((uint64_t)&qword_102481490, v40 + 19);
  if (*(char *)(v41 + 23) >= 0) {
    char v42 = (void *)v41;
  }
  else {
    char v42 = *(void **)v41;
  }
  if (v40)
  {
    if (byte_10248139F >= 0) {
      int v43 = &qword_102481388;
    }
    else {
      int v43 = (uint64_t *)qword_102481388;
    }
    memmove(v42, v43, v40);
  }
  strcpy((char *)v42 + v40, "_CAEnabledTimestamp");
  return __cxa_atexit((void (*)(void *))&std::string::~string, &qword_102481490, (void *)&_mh_execute_header);
}

void sub_100DA4238(uint64_t a1, void *a2)
{
  float v3 = (void *)sub_100DA4794(a1, "FenceAuthorizationManager", a2);
  void *v3 = off_1022F7408;
  v3[14] = 0;
  sub_10144DA50(v3 + 15);
  *(_OWORD *)(a1 + 144) = 0u;
  *(unsigned char *)(a1 + 136) = 0;
  *(void *)(a1 + 176) = 0;
  *(_OWORD *)(a1 + 160) = 0u;
  *(void *)(a1 + 184) = [objc_msgSend(*(id *)(a1 + 32), "vendor") proxyForService:@"CLClientAuthorizationCache" forClient:@"CLFenceManager"];
  *(void *)(a1 + 192) = objc_alloc_init((Class)NSMutableDictionary);
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = off_1022B6DB8;
  size_t v4 = operator new(0x20uLL);
  v4[1] = 0;
  v4[2] = 0;
  *((_DWORD *)v4 + 6) = 31337;
  void *v4 = off_1022B6DF0;
  *(void *)(a1 + 216) = v4 + 3;
  *(void *)(a1 + 224) = v4;
  sub_1007E0344();
}

void sub_100DA4650(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_10012E38C(v17);
  sub_10048B098(v16);
  uint64_t v20 = v15[21];
  v15[21] = 0;
  if (v20) {
    (*(void (**)(uint64_t))(*(void *)v20 + 8))(v20);
  }
  uint64_t v21 = v15[20];
  v15[20] = 0;
  if (v21) {
    (*(void (**)(uint64_t))(*(void *)v21 + 8))(v21);
  }
  uint64_t v22 = v15[19];
  v15[19] = 0;
  if (v22) {
    (*(void (**)(uint64_t))(*(void *)v22 + 8))(v22);
  }
  uint64_t v23 = *v18;
  *int v18 = 0;
  if (v23) {
    (*(void (**)(uint64_t))(*(void *)v23 + 8))(v23);
  }
  size_t v24 = (std::__shared_weak_count *)v15[16];
  if (v24) {
    sub_1000DB0A0(v24);
  }
  sub_100DA54EC((uint64_t)v15);
  _Unwind_Resume(a1);
}

uint64_t sub_100DA4794(uint64_t a1, char *a2, void *a3)
{
  *(void *)a1 = off_1022F7650;
  sub_100134750((void *)(a1 + 8), a2);
  *(void *)(a1 + 32) = a3;
  *(void *)(a1 + 40) = [a3 silo];
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(unsigned char *)(a1 + 108) = 0;
  return a1;
}

void sub_100DA4824(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DA4840(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022F75C0);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v10 = 1;
    uint64_t v7 = _os_activity_create((void *)&_mh_execute_header, "CL: CLFenceAuthorizationManager::onStatusNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v7, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022F75C0);
    }
    size_t v8 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 68289538;
      int v12 = 0;
      __int16 v13 = 2082;
      long long v14 = "";
      __int16 v15 = 2082;
      size_t v16 = "activity";
      __int16 v17 = 2050;
      uint64_t v18 = a4;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLFenceAuthorizationManager::onStatusNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v10 = 0;
  }
  sub_100DA57A8(a4, v6, a2);
  if (v10) {
    os_activity_scope_leave(&state);
  }
}

void sub_100DA49F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DA4A14(uint64_t a1, _DWORD *a2, int *a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022F75C0);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    size_t v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLFenceAuthorizationManager::onDataProtectionNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022F75C0);
    }
    uint64_t v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      __int16 v15 = "";
      __int16 v16 = 2082;
      __int16 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLFenceAuthorizationManager::onDataProtectionNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_100DA7BAC(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100DA4BD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DA4BF0(uint64_t a1, _DWORD *a2, long long *a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022F75C0);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    size_t v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLFenceAuthorizationManager::onFenceManagerNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022F75C0);
    }
    uint64_t v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      __int16 v15 = "";
      __int16 v16 = 2082;
      __int16 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLFenceAuthorizationManager::onFenceManagerNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_100DA6BE4(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100DA4DAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DA4DCC(uint64_t a1, uint64_t a2)
{
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F75E0);
  }
  size_t v4 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v5 = *(void *)(a1 + 112);
    int v6 = *(unsigned __int8 *)(a1 + 136);
    *(_DWORD *)long long buf = 134284035;
    uint64_t v9 = v5;
    __int16 v10 = 1026;
    int v11 = v6;
    __int16 v12 = 2082;
    uint64_t v13 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Fence: createFenceDatabase, fFenceDatabase, %{private}p, fWasUnlockedSinceBoot, %{public}d, reason, %{public}s", buf, 0x1Cu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    uint64_t v7 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceAuthorizationManager::createFenceDatabase(const char *)", "%s\n", v7);
    if (v7 != (char *)buf) {
      free(v7);
    }
  }
  if (!*(void *)(a1 + 112))
  {
    if (*(unsigned char *)(a1 + 136)) {
      operator new();
    }
  }
}

void sub_100DA5014()
{
}

void sub_100DA5040(uint64_t a1)
{
  if (&NRPairedDeviceRegistryDeviceDidBecomeInactive) {
    BOOL v1 = &NRPairedDeviceRegistryDeviceDidBecomeActive == 0;
  }
  else {
    BOOL v1 = 1;
  }
  if (!v1 && &NRPairedDeviceRegistryDeviceDidUnpairNotification != 0)
  {
    memset(v5, 0, sizeof(v5));
    sub_100DAD608();
    if (*(unsigned char *)(a1 + 136)) {
      sub_1009594EC(*(void *)(a1 + 112), v5);
    }
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    size_t v4 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v7 = 2082;
      size_t v8 = "";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"Fence: #FenceHandoff initHandoffFenceMonitoring, no region monitoring before the first unlock\"}", buf, 0x12u);
    }
    *(void *)long long buf = v5;
    sub_100DB0AFC((void ***)buf);
  }
}

void sub_100DA5484(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, std::__shared_weak_count *a17, char a18, uint64_t a19, uint64_t a20,char *a21)
{
  if (a17) {
    std::__shared_weak_count::__release_weak(a17);
  }
  if (v21) {
    std::__shared_weak_count::__release_weak(v21);
  }
  a21 = &a18;
  sub_100DB0AFC((void ***)&a21);
  _Unwind_Resume(a1);
}

uint64_t sub_100DA54EC(uint64_t a1)
{
  *(void *)a1 = off_1022F7650;
  [*(id *)(a1 + 48) invalidate];

  sub_1004459BC(a1 + 80, *(void **)(a1 + 88));
  sub_100445A1C(a1 + 56, *(void **)(a1 + 64));
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

uint64_t sub_100DA5574(uint64_t a1)
{
  *(void *)a1 = off_1022F7408;

  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = 0;
  [+[NSNotificationCenter defaultCenter] removeObserver:*(void *)(a1 + 200)];

  *(void *)(a1 + 200) = 0;
  sub_10012E38C((void *)(a1 + 208));

  uint64_t v2 = *(void *)(a1 + 168);
  *(void *)(a1 + 168) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(void *)(a1 + 160);
  *(void *)(a1 + 160) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  uint64_t v4 = *(void *)(a1 + 152);
  *(void *)(a1 + 152) = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  uint64_t v5 = *(void *)(a1 + 144);
  *(void *)(a1 + 144) = 0;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  int v6 = *(std::__shared_weak_count **)(a1 + 128);
  if (v6) {
    sub_1000DB0A0(v6);
  }

  return sub_100DA54EC(a1);
}

void sub_100DA56E4(uint64_t a1)
{
  sub_100DA5574(a1);

  operator delete();
}

uint64_t sub_100DA571C()
{
  return 1;
}

uint64_t sub_100DA5724()
{
  return 1;
}

void *sub_100DA572C@<X0>(_DWORD *a1@<X1>, void *a2@<X8>)
{
  snprintf(__str, 0x20uLL, "%d", *a1);
  return sub_100134750(a2, __str);
}

void sub_100DA57A8(uint64_t a1, uint64_t a2, int *a3)
{
  if (*a3 == 9)
  {
    if (*(void *)(a1 + 112)) {
      goto LABEL_9;
    }
    uint64_t v4 = (uint8_t *)&qword_102419000;
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    uint64_t v5 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)long long buf = 136446210;
      __int16 v14 = "kNotificationMigration";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "Fence: sMessage, %{public}s, fFenceDatabase is NULL", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F75E0);
      }
      uint64_t v4 = buf;
      __int16 v12 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "void CLFenceAuthorizationManager::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v12);
      if (v12 != (char *)buf) {
        free(v12);
      }
    }
    if (*(void *)(a1 + 112))
    {
LABEL_9:
      uint64_t v4 = (uint8_t *)&qword_102419000;
      if (qword_1024193C0 == -1)
      {
LABEL_10:
        int v6 = qword_1024193C8;
        if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Fence: Got kNotificationMigration", buf, 2u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (*((void *)v4 + 120) != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F75E0);
          }
          int v11 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceAuthorizationManager::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v11);
          if (v11 != (char *)buf) {
            free(v11);
          }
        }
        sub_100DA5C14(a1);
        return;
      }
    }
    else
    {
      sub_101A8D984();
    }
    dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    goto LABEL_10;
  }
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F75E0);
  }
  size_t v8 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
  {
    int v9 = *a3;
    *(_DWORD *)long long buf = 67240192;
    LODWORD(v14) = v9;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#Warning Fence: unknown notification, %{public}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    __int16 v10 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceAuthorizationManager::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v10);
    if (v10 != (char *)buf) {
      free(v10);
    }
  }
}

void sub_100DA5C14(uint64_t a1)
{
  if (*(void *)(a1 + 112))
  {
    int v2 = sub_1001198CC();
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    uint64_t v3 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 67240192;
      *(_DWORD *)&uint8_t buf[4] = v2 == 1;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Fence: updateAuthorizedClients, locationServicesEnabled, %{public}d", buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F75E0);
      }
      uint64_t v5 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceAuthorizationManager::updateAuthorizedClients()", "%s\n", v5);
      if (v5 != (char *)buf) {
        free(v5);
      }
    }
    sub_100955238(*(void *)(a1 + 112));
  }
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F75E0);
  }
  uint64_t v4 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_FAULT))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_FAULT, "Fence: updateAuthorizedClients, can't add fence before the first unlock", buf, 2u);
  }
  if (sub_10013D1A0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    int v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "void CLFenceAuthorizationManager::updateAuthorizedClients()", "%s\n", v6);
    if (v6 != (char *)buf) {
      free(v6);
    }
  }
}

void sub_100DA6108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, void **a19)
{
  a19 = (void **)&a15;
  sub_1000A7B4C(&a19);
  _Unwind_Resume(a1);
}

void sub_100DA6134(uint64_t a1)
{
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F75E0);
  }
  int v2 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v6 = 2082;
    __int16 v7 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"CLFenceAuthorizationManager::reinitFenceMonitoring\"}", buf, 0x12u);
  }
  if (*(void *)(a1 + 112))
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    uint64_t v3 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Fetching all fences for reinit", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F75E0);
      }
      uint64_t v4 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceAuthorizationManager::reinitFenceMonitoring()", "%s\n", v4);
      if (v4 != (char *)buf) {
        free(v4);
      }
    }
    sub_10094BFA0(*(void *)(a1 + 112));
  }
}

void sub_100DA66BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,void **a25)
{
  a25 = (void **)&a22;
  sub_10008DF5C(&a25);
  _Unwind_Resume(a1);
}

uint64_t sub_100DA671C(uint64_t a1, uint64_t a2)
{
  if (!sub_100DA9BD8(a1, (uint64_t *)a2)) {
    goto LABEL_27;
  }
  int v4 = sub_100DA7A50(a1, (uint64_t *)(a2 + 48));
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F75E0);
  }
  uint64_t v5 = qword_1024193C8;
  if (!os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    if (v4) {
      goto LABEL_8;
    }
LABEL_27:
    uint64_t v6 = 0;
    goto LABEL_28;
  }
  int v18 = 68289282;
  int v19 = 0;
  __int16 v20 = 2082;
  uint64_t v21 = "";
  __int16 v22 = 1026;
  LODWORD(v23) = v4;
  _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#FenceHandoff isOnBehalfBundleAuthorized\", \"isAuthorized\":%{public}hhd}", (uint8_t *)&v18, 0x18u);
  uint64_t v6 = 0;
  if ((v4 & 1) == 0) {
    goto LABEL_28;
  }
LABEL_8:
  __int16 v7 = *(void **)(a2 + 216);
  if (!v7) {
    goto LABEL_33;
  }
  uint64_t v6 = (uint64_t)[v7 isEqual:*(void *)(a1 + 176)];
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F75E0);
  }
  size_t v8 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    id v9 = [[[*(id *)(a2 + 216) UUIDString] UTF8String];
    id v10 = [[objc_msgSend(*(id *)(a1 + 176), "UUIDString") UTF8String];
    int v18 = 68289538;
    int v19 = 0;
    __int16 v20 = 2082;
    uint64_t v21 = "";
    __int16 v22 = 2082;
    id v23 = v9;
    __int16 v24 = 2082;
    id v25 = v10;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#FenceHandoff deviceId\", \"fenceDeviceId\":%{public, location:escape_only}s, \"fActiveDeviceId\":%{public, location:escape_only}s}", (uint8_t *)&v18, 0x26u);
  }
  if (!v6) {
    goto LABEL_28;
  }
  uint64_t v11 = *(unsigned __int8 *)(a2 + 215);
  if ((v11 & 0x80u) != 0) {
    uint64_t v11 = *(void *)(a2 + 200);
  }
  if (!v11)
  {
LABEL_33:
    uint64_t v6 = 1;
    goto LABEL_28;
  }
  id v12 = [*(id *)(a1 + 192) objectForKeyedSubscript:*(void *)(a2 + 216)];
  if (*(char *)(a2 + 215) >= 0) {
    uint64_t v13 = a2 + 192;
  }
  else {
    uint64_t v13 = *(void *)(a2 + 192);
  }
  uint64_t v6 = (uint64_t)[v12 objectForKeyedSubscript:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v13)].BOOLValue;
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F75E0);
  }
  __int16 v14 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    if (*(char *)(a2 + 215) >= 0) {
      __int16 v15 = (void *)(a2 + 192);
    }
    else {
      __int16 v15 = *(void **)(a2 + 192);
    }
    int v18 = 68289538;
    int v19 = 0;
    __int16 v20 = 2082;
    uint64_t v21 = "";
    __int16 v22 = 2082;
    id v23 = v15;
    __int16 v24 = 1026;
    LODWORD(v25) = v6;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#FenceHandoff handoffTag\", \"fenceHandoffTag\":%{public, location:escape_only}s, \"dictHandoffTagValue\":%{public}hhd}", (uint8_t *)&v18, 0x22u);
LABEL_28:
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
  }
  __int16 v16 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    int v18 = 68289282;
    int v19 = 0;
    __int16 v20 = 2082;
    uint64_t v21 = "";
    __int16 v22 = 1026;
    LODWORD(v23) = v6;
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"Fence: isFenceAuthorized\", \"isAuthorized\":%{public}hhd}", (uint8_t *)&v18, 0x18u);
  }
  return v6;
}

void sub_100DA6AAC(uint64_t a1, long long *a2, char a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000DC48C(&__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long __dst = *a2;
    uint64_t v11 = *((void *)a2 + 2);
  }
  uint64_t v5 = *(void **)(a1 + 40);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3321888768;
  v6[2] = sub_100DAD358;
  v6[3] = &unk_1022F74D8;
  v6[4] = a1;
  if (SHIBYTE(v11) < 0)
  {
    sub_1000DC48C(&__p, (void *)__dst, *((unint64_t *)&__dst + 1));
  }
  else
  {
    long long __p = __dst;
    uint64_t v8 = v11;
  }
  char v9 = a3;
  [v5 async:v6];
  if (SHIBYTE(v8) < 0) {
    operator delete((void *)__p);
  }
  if (SHIBYTE(v11) < 0) {
    operator delete((void *)__dst);
  }
}

void sub_100DA6BB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (*(char *)(v20 - 41) < 0) {
    operator delete(*(void **)(v20 - 64));
  }
  _Unwind_Resume(exception_object);
}

void sub_100DA6BE4(uint64_t a1, uint64_t a2, _DWORD *a3, long long *a4)
{
  if (*a3 == 10)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    uint64_t v6 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      sub_100C8C864((uint64_t)a4);
      __int16 v7 = v17 >= 0 ? __p : *(unsigned char **)__p;
      *(_DWORD *)long long buf = 136315138;
      *(void *)&uint8_t buf[4] = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Received notification to remove failed fence, %s", buf, 0xCu);
      if (v17 < 0) {
        operator delete(*(void **)__p);
      }
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F75E0);
      }
      sub_100C8C864((uint64_t)a4);
      if (v13 >= 0) {
        char v9 = buf;
      }
      else {
        char v9 = *(unsigned char **)buf;
      }
      int v14 = 136315138;
      __int16 v15 = v9;
      id v10 = (char *)_os_log_send_and_compose_impl();
      if (v13 < 0) {
        operator delete(*(void **)buf);
      }
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceAuthorizationManager::onFenceManagerNotification(int, const CLFenceManager_Type::Notification &, const CLFenceManager_Type::NotificationData &)", "%s\n", v10);
      if (v10 != __p) {
        free(v10);
      }
    }
    if ((sub_100DA6F70(a1, a4) & 1) == 0)
    {
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F75E0);
      }
      uint64_t v8 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long __p = 136315138;
        *(void *)&__p[4] = "onFenceManagerNotification";
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%s, failed to remove fence without centroid", __p, 0xCu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(__p, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F75E0);
        }
        *(_DWORD *)long long buf = 136315138;
        *(void *)&uint8_t buf[4] = "onFenceManagerNotification";
        uint64_t v11 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceAuthorizationManager::onFenceManagerNotification(int, const CLFenceManager_Type::Notification &, const CLFenceManager_Type::NotificationData &)", "%s\n", v11);
        if (v11 != __p) {
          free(v11);
        }
      }
    }
  }
}

uint64_t sub_100DA6F70(uint64_t a1, long long *a2)
{
  if (*(void *)(a1 + 112))
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    int v4 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      if (*((char *)a2 + 23) >= 0) {
        uint64_t v5 = a2;
      }
      else {
        uint64_t v5 = *(long long **)a2;
      }
      if (*((char *)a2 + 47) >= 0) {
        uint64_t v6 = (uint64_t *)a2 + 3;
      }
      else {
        uint64_t v6 = (uint64_t *)*((void *)a2 + 3);
      }
      *(_DWORD *)long long buf = 136446467;
      *(void *)&uint8_t buf[4] = v5;
      __int16 v12 = 2081;
      char v13 = v6;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Removing fence %{public}s/%{private}s", buf, 0x16u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F75E0);
      }
      char v9 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLFenceAuthorizationManager::removeFence(const CLFenceManager_Type::Fence &)", "%s\n", v9);
      if (v9 != buf) {
        free(v9);
      }
    }
    sub_10048AEC0(buf, a2);
    int v14 = sub_100110EA0((uint64_t)buf);
    sub_10094A304(*(void *)(a1 + 112), (uint64_t *)buf);
  }
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F75E0);
  }
  __int16 v7 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_FAULT))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_FAULT, "Fence: removeFence, can't remove fence before the first unlock", buf, 2u);
  }
  if (sub_10013D1A0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    id v10 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "BOOL CLFenceAuthorizationManager::removeFence(const CLFenceManager_Type::Fence &)", "%s\n", v10);
    if (v10 != buf) {
      free(v10);
    }
  }
  return 0;
}

void sub_100DA73D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  if (a2) {
    sub_1001C7F8C(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DA7430(uint64_t a1, uint64_t a2)
{
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F75E0);
  }
  int v4 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
  {
    LODWORD(buf) = 136315138;
    *(void *)((char *)&buf + 4) = "removeFences";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s", (uint8_t *)&buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    char v9 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLFenceAuthorizationManager::removeFences(const std::string &)", "%s\n", v9);
    if (v9 != (char *)&buf) {
      free(v9);
    }
  }
  if (*(void *)(a1 + 112))
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    uint64_t v5 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      if (*(char *)(a2 + 23) >= 0) {
        uint64_t v6 = a2;
      }
      else {
        uint64_t v6 = *(void *)a2;
      }
      LODWORD(buf) = 136446210;
      *(void *)((char *)&buf + 4) = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Removing all fences for %{public}s", (uint8_t *)&buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F75E0);
      }
      id v10 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLFenceAuthorizationManager::removeFences(const std::string &)", "%s\n", v10);
      if (v10 != (char *)&buf) {
        free(v10);
      }
    }
    long long buf = 0uLL;
    __int16 v14 = 0;
    uint64_t v13 = 0;
    sub_100131C3C(*(void *)(a1 + 112), a2, (uint64_t *)&buf);
  }
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F75E0);
  }
  __int16 v7 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_FAULT))
  {
    LOWORD(buf) = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_FAULT, "Fence: removeFences, can't remove fence before the first unlock", (uint8_t *)&buf, 2u);
  }
  if (sub_10013D1A0(115, 0))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    uint64_t v11 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "BOOL CLFenceAuthorizationManager::removeFences(const std::string &)", "%s\n", v11);
    if (v11 != (char *)&buf) {
      free(v11);
    }
  }
  return 0;
}

void sub_100DA7A08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char *__p, char *a12, uint64_t a13, uint64_t a14, char a15)
{
  if (__p)
  {
    a12 = __p;
    operator delete(__p);
  }
  long long __p = &a15;
  sub_10008DF5C((void ***)&__p);
  _Unwind_Resume(a1);
}

uint64_t sub_100DA7A50(uint64_t a1, uint64_t *a2)
{
  if ((*((char *)a2 + 23) & 0x80000000) == 0)
  {
    uint64_t v3 = a2;
    if (!*((unsigned char *)a2 + 23)) {
      goto LABEL_7;
    }
LABEL_6:
    uint64_t v4 = (uint64_t)[objc_msgSend(*(id *)(a1 + 184), "syncgetAuthorizationContextIfClientIsNonZonal:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v3)) isAuthorizedForServiceType:14];
    goto LABEL_8;
  }
  if (a2[1])
  {
    uint64_t v3 = (uint64_t *)*a2;
    goto LABEL_6;
  }
LABEL_7:
  uint64_t v4 = 1;
LABEL_8:
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F75E0);
  }
  uint64_t v5 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    if (*((char *)a2 + 23) >= 0) {
      uint64_t v6 = a2;
    }
    else {
      uint64_t v6 = (uint64_t *)*a2;
    }
    v8[0] = 68289538;
    v8[1] = 0;
    __int16 v9 = 2082;
    id v10 = "";
    __int16 v11 = 2082;
    __int16 v12 = v6;
    __int16 v13 = 1026;
    int v14 = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"Fence: isOnBehalfBundleAuthorized\", \"key\":%{public, location:escape_only}s, \"authorized\":%{public}hhd}", (uint8_t *)v8, 0x22u);
  }
  return v4;
}

void sub_100DA7BAC(uint64_t a1, uint64_t a2, _DWORD *a3, int *a4)
{
  if (!*a3)
  {
    int v6 = *a4;
    if (*(void *)(a1 + 112)) {
      BOOL v7 = 0;
    }
    else {
      BOOL v7 = v6 == 1;
    }
    int v8 = v7;
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    __int16 v9 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      int v10 = *a4;
      int v11 = *(unsigned __int8 *)(a1 + 136);
      *(_DWORD *)long long buf = 67240960;
      *(_DWORD *)&uint8_t buf[4] = v10;
      LOWORD(v25) = 1026;
      *(_DWORD *)((char *)&v25 + 2) = v11;
      HIWORD(v25) = 1026;
      LODWORD(v26[0]) = v6 == 1;
      WORD2(v26[0]) = 1026;
      *(_DWORD *)((char *)v26 + 6) = v8;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "Fence: notification, kNotificationEncryptedDataAvailability, data.availability, %{public}d, unlockedSinceBoot, from, %{public}d, to, %{public}d, isStartMonitoring, %{public}d", buf, 0x1Au);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F75E0);
      }
      int v14 = *a4;
      int v15 = *(unsigned __int8 *)(a1 + 136);
      LODWORD(v17) = 67240960;
      HIDWORD(v17) = v14;
      __int16 v18 = 1026;
      int v19 = v15;
      __int16 v20 = 1026;
      BOOL v21 = v6 == 1;
      __int16 v22 = 1026;
      int v23 = v8;
      __int16 v16 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceAuthorizationManager::onDataProtectionNotification(int, const CLDataProtectionManager_Type::Notification &, const CLDataProtectionManager_Type::NotificationData &)", "%s\n", v16);
      if (v16 != (char *)buf) {
        free(v16);
      }
    }
    if (*(unsigned char *)(a1 + 136)) {
      BOOL v12 = 1;
    }
    else {
      BOOL v12 = v6 == 1;
    }
    int v13 = v12;
    *(unsigned char *)(a1 + 136) = v13;
    if (!*(void *)(a1 + 112) && v13) {
      sub_100DA4DCC(a1, (uint64_t)"kNotificationEncryptedDataAvailability");
    }
    if (v8)
    {
      *(void *)long long buf = 0;
      uint64_t v25 = 0;
      memset(v26, 0, 10);
      BYTE1(v26[1]) = sub_1001198CC() == 1;
      LODWORD(v17) = 3;
      (*(void (**)(uint64_t, uint8_t **, uint8_t *, void, uint64_t, void))(*(void *)a1 + 152))(a1, &v17, buf, 0, 0xFFFFFFFFLL, 0);
      sub_100DA5C14(a1);
      char v17 = buf;
      sub_10008DF5C((void ***)&v17);
    }
  }
}

void sub_100DA7E84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void **a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  a11 = (void **)&a15;
  sub_10008DF5C(&a11);
  _Unwind_Resume(a1);
}

void sub_100DA7EAC(uint64_t a1, void *a2)
{
  id v3 = [a2 userInfo];
  id v4 = [v3 valueForKey:NRPairedDeviceRegistryDevice];
  id v5 = [v4 valueForProperty:_NRDevicePropertyBluetoothIdentifier];
  if (v5)
  {
    int v6 = v5;
    if ([v5 isEqual:*(void *)(a1 + 176)]) {
      sub_100DA800C(a1);
    }
    sub_100DA8050(a1, v6);
  }
  else
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    BOOL v7 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      v8[0] = 68289026;
      v8[1] = 0;
      __int16 v9 = 2082;
      int v10 = "";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"Fence: #FenceHandoff #Warning deviceId is null in unpair notification\"}", (uint8_t *)v8, 0x12u);
    }
  }
}

void sub_100DA800C(uint64_t a1)
{
  BOOL v1 = *(void **)(a1 + 176);
  *(void *)(a1 + 176) = 0;
}

void sub_100DA8040(_Unwind_Exception *exception_object)
{
}

BOOL sub_100DA8050(uint64_t a1, void *a2)
{
  if (!a2)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    id v5 = qword_1024193C8;
    BOOL v6 = os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT);
    BOOL result = 0;
    if (!v6) {
      return result;
    }
    int v16 = 68289026;
    int v17 = 0;
    __int16 v18 = 2082;
    int v19 = "";
    BOOL v7 = "{\"msg%{public}.0s\":\"Fence: #FenceHandoff null deviceId\"}";
LABEL_14:
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, v7, (uint8_t *)&v16, 0x12u);
    return 0;
  }
  if (!*(unsigned char *)(a1 + 136))
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    id v5 = qword_1024193C8;
    BOOL v8 = os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT);
    BOOL result = 0;
    if (!v8) {
      return result;
    }
    int v16 = 68289026;
    int v17 = 0;
    __int16 v18 = 2082;
    int v19 = "";
    BOOL v7 = "{\"msg%{public}.0s\":\"Fence: #FenceHandoff removeFencesFromDeviceId, no region monitoring before the first unlock\"}";
    goto LABEL_14;
  }
  if (sub_100DA845C(a1, a2, 1))
  {
    if (sub_10094B3B8(*(void *)(a1 + 112), (uint64_t)a2)) {
      return 1;
    }
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    int v14 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_FAULT))
    {
      int v16 = 68289282;
      int v17 = 0;
      __int16 v18 = 2082;
      int v19 = "";
      __int16 v20 = 2082;
      id v21 = [[objc_msgSend(a2, "UUIDString") UTF8String];
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"Fence: #FenceHandoff unable remove fences from deviceId\", \"deviceId\":%{public, location:escape_only}s}", (uint8_t *)&v16, 0x1Cu);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F75E0);
      }
    }
    int v10 = qword_1024193C8;
    BOOL result = os_signpost_enabled((os_log_t)qword_1024193C8);
    if (result)
    {
      id v15 = [[objc_msgSend(a2, "UUIDString") UTF8String];
      int v16 = 68289282;
      int v17 = 0;
      __int16 v18 = 2082;
      int v19 = "";
      __int16 v20 = 2082;
      id v21 = v15;
      BOOL v12 = "Fence: #FenceHandoff unable remove fences from deviceId";
      int v13 = "{\"msg%{public}.0s\":\"Fence: #FenceHandoff unable remove fences from deviceId\", \"deviceId\":%{public, loc"
            "ation:escape_only}s}";
      goto LABEL_29;
    }
  }
  else
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    __int16 v9 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_FAULT))
    {
      int v16 = 68289282;
      int v17 = 0;
      __int16 v18 = 2082;
      int v19 = "";
      __int16 v20 = 2082;
      id v21 = [[[a2 UUIDString] UTF8String];
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"Fence: #FenceHandoff unable to stop monitoring fences for deviceId\", \"deviceId\":%{public, location:escape_only}s}", (uint8_t *)&v16, 0x1Cu);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F75E0);
      }
    }
    int v10 = qword_1024193C8;
    BOOL result = os_signpost_enabled((os_log_t)qword_1024193C8);
    if (result)
    {
      id v11 = [[[a2 UUIDString] UTF8String];
      int v16 = 68289282;
      int v17 = 0;
      __int16 v18 = 2082;
      int v19 = "";
      __int16 v20 = 2082;
      id v21 = v11;
      BOOL v12 = "Fence: #FenceHandoff unable to stop monitoring fences for deviceId";
      int v13 = "{\"msg%{public}.0s\":\"Fence: #FenceHandoff unable to stop monitoring fences for deviceId\", \"deviceId\":%{"
            "public, location:escape_only}s}";
LABEL_29:
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v10, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, v12, v13, (uint8_t *)&v16, 0x1Cu);
      return 0;
    }
  }
  return result;
}

uint64_t sub_100DA845C(uint64_t a1, void *a2, char a3)
{
  if (a2)
  {
    if (objc_msgSend(objc_msgSend(a2, "UUIDString"), "isEqual:", objc_msgSend(*(id *)(a1 + 176), "UUIDString")))
    {
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F75E0);
      }
      BOOL v6 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 68289282;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)__int16 v22 = 2082;
        *(void *)&v22[2] = "";
        *(_WORD *)&v22[10] = 2082;
        *(void *)&v22[12] = [objc_msgSend(a2, "UUIDString") UTF8String];
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"Fence: #FenceHandoff clearing currently active device\", \"activeDeviceId\":%{public, location:escape_only}s}", buf, 0x1Cu);
      }
      sub_100DA800C(a1);
    }
    if (*(unsigned char *)(a1 + 136))
    {
      uint64_t v7 = *(void *)(a1 + 112);
      if (v7)
      {
        *(void *)long long buf = 0;
        memset(v22, 0, 18);
        uint64_t v8 = sub_1009504D4(v7, (uint64_t)a2, (uint64_t)buf);
        if (v8)
        {
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F75E0);
          }
          __int16 v9 = qword_1024193C8;
          if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v16 = 68289282;
            __int16 v17 = 2082;
            __int16 v18 = "";
            __int16 v19 = 2082;
            id v20 = [[[a2 UUIDString] UTF8String];
            _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"Fence: #FenceHandoff stopped monitoring fences from device\", \"deviceId\":%{public, location:escape_only}s}", (uint8_t *)&v16, 0x1Cu);
          }
          if (*(void *)v22 != *(void *)buf)
          {
            sub_100954B9C(*(void *)(a1 + 112), a2);
            v22[16] = a3;
            LODWORD(v16) = 1;
            (*(void (**)(uint64_t, uint64_t *, uint8_t *, void, uint64_t, void))(*(void *)a1 + 152))(a1, &v16, buf, 0, 0xFFFFFFFFLL, 0);
            sub_100DA6AAC(a1, *(long long **)buf, 0);
          }
        }
        else
        {
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F75E0);
          }
          BOOL v12 = qword_1024193C8;
          if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_FAULT))
          {
            uint64_t v16 = 68289282;
            __int16 v17 = 2082;
            __int16 v18 = "";
            __int16 v19 = 2082;
            id v20 = [[objc_msgSend(a2, "UUIDString") UTF8String];
            _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"Fence: #FenceHandoff unable get Fences from deviceId\", \"deviceId\":%{public, location:escape_only}s}", (uint8_t *)&v16, 0x1Cu);
            if (qword_1024193C0 != -1) {
              dispatch_once(&qword_1024193C0, &stru_1022F75E0);
            }
          }
          int v13 = qword_1024193C8;
          if (os_signpost_enabled((os_log_t)qword_1024193C8))
          {
            id v14 = [[[a2 UUIDString] UTF8String];
            uint64_t v16 = 68289282;
            __int16 v17 = 2082;
            __int16 v18 = "";
            __int16 v19 = 2082;
            id v20 = v14;
            _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v13, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Fence: #FenceHandoff unable get Fences from deviceId", "{\"msg%{public}.0s\":\"Fence: #FenceHandoff unable get Fences from deviceId\", \"deviceId\":%{public, location:escape_only}s}", (uint8_t *)&v16, 0x1Cu);
          }
        }
        uint64_t v16 = (uint64_t)buf;
        sub_10008DF5C((void ***)&v16);
        return v8;
      }
    }
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    int v10 = qword_1024193C8;
    uint64_t v8 = 0;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)__int16 v22 = 2082;
      *(void *)&v22[2] = "";
      id v11 = "{\"msg%{public}.0s\":\"Fence: #FenceHandoff stopMonitoringFencesFromDeviceId, no region monitoring before th"
            "e first unlock\"}";
LABEL_25:
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, v11, buf, 0x12u);
      return 0;
    }
  }
  else
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    int v10 = qword_1024193C8;
    uint64_t v8 = 0;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)__int16 v22 = 2082;
      *(void *)&v22[2] = "";
      id v11 = "{\"msg%{public}.0s\":\"Fence: #FenceHandoff null deviceId\"}";
      goto LABEL_25;
    }
  }
  return v8;
}

void sub_100DA892C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  a9 = (void **)&a13;
  sub_10008DF5C(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_100DA8960(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100DAD5C4(a1, a2);
    if (*(unsigned char *)(a1 + 136))
    {
      uint64_t v4 = *(void *)(a1 + 112);
      if (v4)
      {
        *(void *)long long buf = 0;
        long long v28 = 0uLL;
        __int16 v29 = 0;
        __int16 v19 = 0;
        id v20 = 0;
        uint64_t v21 = 0;
        uint64_t v5 = sub_1009504D4(v4, (uint64_t)a2, (uint64_t)&v19);
        if (v5)
        {
          BOOL v6 = v19;
          uint64_t v7 = v20;
          while (v6 != v7)
          {
            if (sub_100DA671C(a1, (uint64_t)v6))
            {
              uint64_t v8 = v28;
              if ((unint64_t)v28 >= *((void *)&v28 + 1))
              {
                uint64_t v9 = sub_100920FEC((uint64_t *)buf, v6);
              }
              else
              {
                sub_10048AEC0((char *)v28, v6);
                uint64_t v9 = v8 + 248;
              }
              *(void *)&long long v28 = v9;
            }
            BOOL v6 = (long long *)((char *)v6 + 248);
          }
          if ((void)v28 != *(void *)buf)
          {
            *(_DWORD *)__int16 v22 = 0;
            (*(void (**)(uint64_t, uint8_t *, uint8_t *, void, uint64_t, void))(*(void *)a1 + 152))(a1, v22, buf, 0, 0xFFFFFFFFLL, 0);
            sub_100DA6AAC(a1, *(long long **)buf, 1);
            if (qword_1024193C0 != -1) {
              dispatch_once(&qword_1024193C0, &stru_1022F75E0);
            }
            uint64_t v16 = qword_1024193C8;
            if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
            {
              id v17 = [[[a2 UUIDString] UTF8String];
              *(_DWORD *)__int16 v22 = 68289282;
              *(_DWORD *)&v22[4] = 0;
              __int16 v23 = 2082;
              __int16 v24 = "";
              __int16 v25 = 2082;
              id v26 = v17;
              _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"Fence: #FenceHandoff monitoring fences from device\", \"deviceId\":%{public, location:escape_only}s}", v22, 0x1Cu);
            }
          }
        }
        else
        {
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F75E0);
          }
          BOOL v12 = qword_1024193C8;
          if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_FAULT))
          {
            id v13 = [[objc_msgSend(a2, "UUIDString") UTF8String];
            *(_DWORD *)__int16 v22 = 68289282;
            *(_DWORD *)&v22[4] = 0;
            __int16 v23 = 2082;
            __int16 v24 = "";
            __int16 v25 = 2082;
            id v26 = v13;
            _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"Fence: #FenceHandoff unable retrieve Fences from database\", \"deviceId\":%{public, location:escape_only}s}", v22, 0x1Cu);
            if (qword_1024193C0 != -1) {
              dispatch_once(&qword_1024193C0, &stru_1022F75E0);
            }
          }
          id v14 = qword_1024193C8;
          if (os_signpost_enabled((os_log_t)qword_1024193C8))
          {
            id v15 = [[objc_msgSend(a2, "UUIDString") UTF8String];
            *(_DWORD *)__int16 v22 = 68289282;
            *(_DWORD *)&v22[4] = 0;
            __int16 v23 = 2082;
            __int16 v24 = "";
            __int16 v25 = 2082;
            id v26 = v15;
            _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v14, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Fence: #FenceHandoff unable retrieve Fences from database", "{\"msg%{public}.0s\":\"Fence: #FenceHandoff unable retrieve Fences from database\", \"deviceId\":%{public, location:escape_only}s}", v22, 0x1Cu);
          }
        }
        *(void *)__int16 v22 = &v19;
        sub_10008DF5C((void ***)v22);
        *(void *)__int16 v22 = buf;
        sub_10008DF5C((void ***)v22);
        return v5;
      }
    }
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    int v10 = qword_1024193C8;
    uint64_t v5 = 0;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      LOWORD(v28) = 2082;
      *(void *)((char *)&v28 + 2) = "";
      id v11 = "{\"msg%{public}.0s\":\"Fence: #FenceHandoff startMonitoringFencesFromDeviceId, no region monitoring before t"
            "he first unlock\"}";
LABEL_21:
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, v11, buf, 0x12u);
      return 0;
    }
  }
  else
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    int v10 = qword_1024193C8;
    uint64_t v5 = 0;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      LOWORD(v28) = 2082;
      *(void *)((char *)&v28 + 2) = "";
      id v11 = "{\"msg%{public}.0s\":\"Fence: #FenceHandoff null deviceId\"}";
      goto LABEL_21;
    }
  }
  return v5;
}

void sub_100DA8DCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void **a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  a13 = (void **)&a10;
  sub_10008DF5C(&a13);
  a13 = (void **)&a17;
  sub_10008DF5C(&a13);
  _Unwind_Resume(a1);
}

void sub_100DA8E18(uint64_t *a1)
{
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F75E0);
  }
  int v2 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
  {
    buf[0] = 136315138;
    *(void *)&buf[1] = "cleanUpFenceDatabaseOnReinit";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "%s", (uint8_t *)buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    LODWORD(v15[0]) = 136315138;
    *(void *)((char *)v15 + 4) = "cleanUpFenceDatabaseOnReinit";
    uint64_t v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLFenceAuthorizationManager::cleanUpFenceDatabaseOnReinit()", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  sub_100DA9580((uint64_t)a1, (uint64_t *)&v8);
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F75E0);
  }
  id v3 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
  {
    buf[0] = 136315394;
    *(void *)&buf[1] = "cleanUpFenceDatabaseOnReinit";
    __int16 v18 = 2048;
    unint64_t v19 = 0xEF7BDEF7BDEF7BDFLL * ((v9 - (char *)v8) >> 3);
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%s, found %lu authorized fences without centroids", (uint8_t *)buf, 0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    LODWORD(v15[0]) = 136315394;
    *(void *)((char *)v15 + 4) = "cleanUpFenceDatabaseOnReinit";
    WORD2(v15[1]) = 2048;
    *(void *)((char *)&v15[1] + 6) = 0xEF7BDEF7BDEF7BDFLL * ((v9 - (char *)v8) >> 3);
    BOOL v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLFenceAuthorizationManager::cleanUpFenceDatabaseOnReinit()", "%s\n", v6);
    if (v6 != (char *)buf) {
      free(v6);
    }
  }
  memset(v15, 0, sizeof(v15));
  __int16 v16 = 0;
  sub_100DB0790((uint64_t)v15, v8, (long long *)v9, 0xEF7BDEF7BDEF7BDFLL * ((v9 - (char *)v8) >> 3));
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F75E0);
  }
  uint64_t v4 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
  {
    buf[0] = 136315394;
    *(void *)&buf[1] = "cleanUpFenceDatabaseOnReinit";
    __int16 v18 = 2048;
    unint64_t v19 = 0xEF7BDEF7BDEF7BDFLL * ((v9 - (char *)v8) >> 3);
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s, placed %lu authorized fences without centroids in notification", (uint8_t *)buf, 0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    int v11 = 136315394;
    BOOL v12 = "cleanUpFenceDatabaseOnReinit";
    __int16 v13 = 2048;
    unint64_t v14 = 0xEF7BDEF7BDEF7BDFLL * ((v9 - (char *)v8) >> 3);
    uint64_t v7 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLFenceAuthorizationManager::cleanUpFenceDatabaseOnReinit()", "%s\n", v7);
    if (v7 != (char *)buf) {
      free(v7);
    }
  }
  buf[0] = 4;
  (*(void (**)(uint64_t *, _DWORD *, void *, void, uint64_t, void))(*a1 + 152))(a1, buf, v15, 0, 0xFFFFFFFFLL, 0);
  sub_100951680(a1[14]);
}

void sub_100DA9530(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,void **a23)
{
  a23 = (void **)&a19;
  sub_10008DF5C(&a23);
  a23 = (void **)&a12;
  sub_10008DF5C(&a23);
  _Unwind_Resume(a1);
}

uint64_t sub_100DA9580(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = *a2;
  uint64_t v4 = a2[1];
  if (v4 != *a2)
  {
    do
    {
      v4 -= 248;
      sub_10091F570((uint64_t)(a2 + 2), v4);
    }
    while (v4 != v5);
  }
  a2[1] = v5;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  if ((sub_100DA99C0(a1, &v17) & 1) == 0)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    BOOL v6 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136315138;
      *(void *)&uint8_t buf[4] = "getCurrentlyMonitoredInvalidFences";
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%s, Failed to retrieve fences without centroids", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F75E0);
      }
      int v20 = 136315138;
      uint64_t v21 = "getCurrentlyMonitoredInvalidFences";
      id v15 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "BOOL CLFenceAuthorizationManager::getCurrentlyMonitoredInvalidFences(std::vector<CLFenceManager_Type::Fence> &)", "%s\n", v15);
      if (v15 != buf) {
        free(v15);
      }
    }
  }
  uint64_t v7 = v17;
  if (v18 != v17)
  {
    uint64_t v8 = 0;
    unint64_t v9 = 0;
    do
    {
      if (sub_100DA9BD8(a1, (uint64_t *)(v7 + v8)))
      {
        uint64_t v10 = (long long *)(v17 + v8);
        unint64_t v11 = a2[1];
        if (v11 >= a2[2])
        {
          uint64_t v12 = sub_100920FEC(a2, v10);
        }
        else
        {
          sub_10048AEC0((char *)a2[1], v10);
          uint64_t v12 = v11 + 248;
          a2[1] = v11 + 248;
        }
        a2[1] = v12;
      }
      ++v9;
      uint64_t v7 = v17;
      v8 += 248;
    }
    while (0xEF7BDEF7BDEF7BDFLL * ((v18 - v17) >> 3) > v9);
  }
  if (a2[1] == *a2)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    __int16 v13 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 136315138;
      *(void *)&uint8_t buf[4] = "getCurrentlyMonitoredInvalidFences";
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "%s no authorized fences without centroids", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F75E0);
      }
      int v20 = 136315138;
      uint64_t v21 = "getCurrentlyMonitoredInvalidFences";
      __int16 v16 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLFenceAuthorizationManager::getCurrentlyMonitoredInvalidFences(std::vector<CLFenceManager_Type::Fence> &)", "%s\n", v16);
      if (v16 != buf) {
        free(v16);
      }
    }
  }
  *(void *)long long buf = &v17;
  sub_10008DF5C((void ***)buf);
  return 1;
}

void sub_100DA998C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void **a17)
{
  a17 = (void **)&a12;
  sub_10008DF5C(&a17);
  _Unwind_Resume(a1);
}

uint64_t sub_100DA99C0(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = *a2;
  uint64_t v4 = a2[1];
  if (v4 != *a2)
  {
    do
    {
      v4 -= 248;
      sub_10091F570((uint64_t)(a2 + 2), v4);
    }
    while (v4 != v5);
  }
  a2[1] = v5;
  uint64_t v6 = *(void *)(a1 + 112);
  if (v6)
  {
    sub_100951A34(v6, a2);
  }
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F75E0);
  }
  uint64_t v7 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_FAULT))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_FAULT, "Fence: getAllFencesWithoutCentroids, can't fetch fences before the first unlock", buf, 2u);
  }
  if (sub_10013D1A0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    unint64_t v9 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "BOOL CLFenceAuthorizationManager::getAllFencesWithoutCentroids(std::vector<CLFenceManager_Type::Fence> &)", "%s\n", v9);
    if (v9 != (char *)buf) {
      free(v9);
    }
  }
  return 0;
}

id sub_100DA9BD8(uint64_t a1, uint64_t *a2)
{
  if (*((char *)a2 + 23) >= 0) {
    id v3 = a2;
  }
  else {
    id v3 = (uint64_t *)*a2;
  }
  id v4 = [[objc_msgSend(*(id *)(a1 + 184), "syncgetAuthorizationContextIfClientIsNonZonal:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v3)) isAuthorizedForServiceType:1];
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F75E0);
  }
  uint64_t v5 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    if (*((char *)a2 + 23) >= 0) {
      uint64_t v6 = a2;
    }
    else {
      uint64_t v6 = (uint64_t *)*a2;
    }
    v8[0] = 68289538;
    v8[1] = 0;
    __int16 v9 = 2082;
    uint64_t v10 = "";
    __int16 v11 = 2082;
    uint64_t v12 = v6;
    __int16 v13 = 1026;
    int v14 = (int)v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"Fence: isClientAuthorized\", \"key\":%{public, location:escape_only}s, \"authorized\":%{public}hhd}", (uint8_t *)v8, 0x22u);
  }
  return v4;
}

uint64_t sub_100DA9D1C(uint64_t *a1, uint64_t a2)
{
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F75E0);
  }
  id v4 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 136315138;
    *(void *)&uint8_t buf[4] = "addFence";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    *(_DWORD *)long long __dst = 136315138;
    *(void *)&__dst[4] = "addFence";
    uint64_t v17 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLFenceAuthorizationManager::addFence(const CLFenceManager_Type::Fence &)", "%s\n", v17);
    if (v17 != buf) {
      free(v17);
    }
  }
  if (a1[14])
  {
    if (*(void *)(a2 + 232) == *(void *)(a2 + 224))
    {
      if (qword_102419650 != -1) {
        dispatch_once(&qword_102419650, &stru_1022F7600);
      }
      uint64_t v5 = qword_102419658;
      if (os_log_type_enabled((os_log_t)qword_102419658, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v6 = *(void *)(a2 + 72);
        uint64_t v7 = *(void *)(a2 + 80);
        uint64_t v8 = *(void *)(a2 + 96);
        if (*(char *)(a2 + 23) >= 0) {
          uint64_t v9 = a2;
        }
        else {
          uint64_t v9 = *(void *)a2;
        }
        if (*(char *)(a2 + 47) >= 0) {
          uint64_t v10 = a2 + 24;
        }
        else {
          uint64_t v10 = *(void *)(a2 + 24);
        }
        *(_DWORD *)long long buf = 136316674;
        *(void *)&uint8_t buf[4] = "Fence";
        *(_WORD *)&unsigned char buf[12] = 1024;
        *(_DWORD *)&buf[14] = 1;
        *(_WORD *)&unsigned char buf[18] = 2048;
        *(void *)&unsigned char buf[20] = v6;
        __int16 v49 = 2048;
        uint64_t v50 = v7;
        __int16 v51 = 2048;
        uint64_t v52 = v8;
        __int16 v53 = 2080;
        uint64_t v54 = v9;
        __int16 v55 = 2080;
        uint64_t v56 = v10;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,Add,1,BundleId,%s,Name,%s,", buf, 0x44u);
      }
      if (sub_10013D1A0(117, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419650 != -1) {
          dispatch_once(&qword_102419650, &stru_1022F7600);
        }
        uint64_t v21 = *(void *)(a2 + 72);
        uint64_t v22 = *(void *)(a2 + 80);
        uint64_t v23 = *(void *)(a2 + 96);
        if (*(char *)(a2 + 23) >= 0) {
          uint64_t v24 = a2;
        }
        else {
          uint64_t v24 = *(void *)a2;
        }
        if (*(char *)(a2 + 47) >= 0) {
          uint64_t v25 = a2 + 24;
        }
        else {
          uint64_t v25 = *(void *)(a2 + 24);
        }
        *(_DWORD *)long long __dst = 136316674;
        *(void *)&__dst[4] = "Fence";
        __int16 v32 = 1024;
        int v33 = 1;
        __int16 v34 = 2048;
        *(void *)char v35 = v21;
        *(_WORD *)&v35[8] = 2048;
        *(void *)&v35[10] = v22;
        __int16 v36 = 2048;
        uint64_t v37 = v23;
        *(_WORD *)long long __p = 2080;
        *(void *)&__p[2] = v24;
        __int16 v39 = 2080;
        uint64_t v40 = v25;
        id v26 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("LOCATION", 1, 0, 2, "BOOL CLFenceAuthorizationManager::addFence(const CLFenceManager_Type::Fence &)", "%s\n", v26);
        if (v26 != buf) {
          free(v26);
        }
      }
    }
    int v11 = sub_100110EA0(a2);
    uint64_t v12 = sub_100949054(a1[14], a2, v11);
    if (v12)
    {
      sub_10048AEC0(__dst, (long long *)a2);
      int v42 = v11;
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F75E0);
      }
      __int16 v13 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
      {
        sub_100C8C864(a2);
        int v14 = buf[23] >= 0 ? buf : *(unsigned char **)buf;
        *(_DWORD *)char v27 = 136380675;
        *(void *)&v27[4] = v14;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "Adding fence to db, %{private}s", v27, 0xCu);
        if ((buf[23] & 0x80000000) != 0) {
          operator delete(*(void **)buf);
        }
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F75E0);
        }
        sub_100C8C864(a2);
        if (v28 >= 0) {
          uint64_t v19 = v27;
        }
        else {
          uint64_t v19 = *(unsigned char **)v27;
        }
        int v29 = 136380675;
        int v30 = v19;
        int v20 = (char *)_os_log_send_and_compose_impl();
        if (v28 < 0) {
          operator delete(*(void **)v27);
        }
        sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLFenceAuthorizationManager::addFence(const CLFenceManager_Type::Fence &)", "%s\n", v20);
        if (v20 != buf) {
          free(v20);
        }
      }
      memset(buf, 0, 26);
      *(void *)&uint8_t buf[8] = sub_100920FEC((uint64_t *)buf, (long long *)__dst);
      buf[25] = sub_1001198CC() == 1;
      *(_DWORD *)char v27 = 0;
      (*(void (**)(uint64_t *, unsigned char *, unsigned char *, void, uint64_t, void))(*a1 + 152))(a1, v27, buf, 0, 0xFFFFFFFFLL, 0);
      sub_100DA6AAC((uint64_t)a1, (long long *)a2, 1);
      *(void *)char v27 = buf;
      sub_10008DF5C((void ***)v27);
      if (v46)
      {
        char v47 = v46;
        operator delete(v46);
      }

      if (v44 < 0) {
        operator delete(v43);
      }
      if (v41 < 0) {
        operator delete(*(void **)__p);
      }
      if (SHIBYTE(v37) < 0) {
        operator delete(*(void **)&v35[4]);
      }
      if ((v35[3] & 0x80000000) != 0) {
        operator delete(*(void **)__dst);
      }
    }
  }
  else
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    id v15 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_FAULT, "Fence: addFence, can't add fence before the first unlock", buf, 2u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F75E0);
      }
      *(_WORD *)long long __dst = 0;
      uint64_t v18 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "BOOL CLFenceAuthorizationManager::addFence(const CLFenceManager_Type::Fence &)", "%s\n", v18);
      if (v18 != buf) {
        free(v18);
      }
    }
    return 0;
  }
  return v12;
}

void sub_100DAA530(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  sub_100488394((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100DAA584(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 112);
  if (v1)
  {
    sub_10094D180(v1);
  }
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F75E0);
  }
  int v2 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_FAULT))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_FAULT, "Fence: getFence, can't add/remove fence before the first unlock", buf, 2u);
  }
  if (sub_10013D1A0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    id v4 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "BOOL CLFenceAuthorizationManager::getFence(const std::string &, const std::string &, const std::string &, CLFenceManager_Type::Fence &)", "%s\n", v4);
    if (v4 != (char *)buf) {
      free(v4);
    }
  }
  return 0;
}

void sub_100DAA764(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 112);
  if (!v2)
  {
    id v3 = (uint8_t *)&qword_102419000;
    if (qword_1024193C0 != -1) {
      goto LABEL_9;
    }
    while (1)
    {
      id v4 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)long long buf = 136446210;
        uint64_t v7 = "numFences";
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_FAULT, "Fence: sMessage, %{public}s, fFenceDatabase is NULL", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (*((void *)v3 + 120) != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F75E0);
        }
        id v3 = buf;
        uint64_t v5 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "int CLFenceAuthorizationManager::numFences(const std::string &, BOOL)", "%s\n", v5);
        if (v5 != (char *)buf) {
          free(v5);
        }
      }
      uint64_t v2 = *(void *)(a1 + 112);
      if (v2) {
        break;
      }
      sub_101A8E494();
LABEL_9:
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
  }
  sub_100953164(v2);
}

void sub_100DAA940(uint64_t *a1, uint64_t *a2)
{
  uint64_t v5 = *a2;
  uint64_t v4 = a2[1];
  if (v4 != *a2)
  {
    do
    {
      v4 -= 248;
      sub_10091F570((uint64_t)(a2 + 2), v4);
    }
    while (v4 != v5);
  }
  a2[1] = v5;
  if (a1[14])
  {
    if (sub_1001198CC() == 1) {
      sub_100DA8E18(a1);
    }
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    uint64_t v7 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Location services are disabled; no monitored fences",
        buf,
        2u);
    }
    if (!sub_10013D1A0(115, 2)) {
      return;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
LABEL_22:
    uint64_t v8 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceAuthorizationManager::getAuthorizedFences(std::vector<CLFenceManager_Type::Fence> &, BOOL)", "%s\n", v8);
    if (v8 != (char *)buf) {
      free(v8);
    }
    return;
  }
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F75E0);
  }
  uint64_t v6 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Fence: getAuthorizedFences, no region monitoring before the first unlock", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    goto LABEL_22;
  }
}

void sub_100DAB07C(uint64_t a1)
{
}

void sub_100DAB084(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v7 = *a3;
  uint64_t v6 = a3[1];
  if (v6 != *a3)
  {
    do
    {
      v6 -= 248;
      sub_10091F570((uint64_t)(a3 + 2), v6);
    }
    while (v6 != v7);
  }
  a3[1] = v7;
  uint64_t v8 = *(void *)(a1 + 112);
  if (v8)
  {
    sub_10094F284(v8, a2, a3);
  }
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F75E0);
  }
  uint64_t v9 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "Fence: getFencesForBundle, no region monitoring before the first unlock", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    uint64_t v10 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceAuthorizationManager::getFencesForBundle(const std::string &, std::vector<CLFenceManager_Type::Fence> &)", "%s\n", v10);
    if (v10 != (char *)buf) {
      free(v10);
    }
  }
}

uint64_t sub_100DAB2AC(uint64_t a1)
{
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F75E0);
  }
  uint64_t v2 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
  {
    int v6 = 68289026;
    int v7 = 0;
    __int16 v8 = 2082;
    uint64_t v9 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"Fence: getCountOfAllFencesForBundle\"}", (uint8_t *)&v6, 0x12u);
  }
  uint64_t v3 = *(void *)(a1 + 112);
  if (v3) {
    sub_100953600(v3);
  }
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F75E0);
  }
  uint64_t v4 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    int v6 = 68289026;
    int v7 = 0;
    __int16 v8 = 2082;
    uint64_t v9 = "";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"Fence: getCountOfAllFencesForBundle, no region monitoring before the first unlock\"}", (uint8_t *)&v6, 0x12u);
  }
  return 0x7FFFFFFFLL;
}

void sub_100DAB434(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F75E0);
  }
  int v6 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 136315138;
    int v14 = "getAllFencesForBundle";
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%s", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    int v11 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceAuthorizationManager::getAllFencesForBundle(const std::string &, std::vector<CLFenceManager_Type::Fence> &)", "%s\n", v11);
    if (v11 != (char *)buf) {
      free(v11);
    }
  }
  uint64_t v8 = *a3;
  uint64_t v7 = a3[1];
  if (v7 != *a3)
  {
    do
    {
      v7 -= 248;
      sub_10091F570((uint64_t)(a3 + 2), v7);
    }
    while (v7 != v8);
  }
  a3[1] = v8;
  uint64_t v9 = *(void *)(a1 + 112);
  if (v9) {
    sub_100131C3C(v9, a2, a3);
  }
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F75E0);
  }
  uint64_t v10 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "Fence: getAllFencesForBundle, no region monitoring before the first unlock", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    uint64_t v12 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceAuthorizationManager::getAllFencesForBundle(const std::string &, std::vector<CLFenceManager_Type::Fence> &)", "%s\n", v12);
    if (v12 != (char *)buf) {
      free(v12);
    }
  }
}

void sub_100DAB778(uint64_t a1, uint64_t a2, unsigned char *a3, unsigned char *a4)
{
  uint64_t v4 = *(void *)(a1 + 112);
  if (v4)
  {
    *a3 = 0;
    *a4 = 0;
    sub_1009527EC(v4);
  }
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F75E0);
  }
  uint64_t v5 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Fence: isFenceRegisteredAndAuthorized, no region monitoring before the first unlock", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    int v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceAuthorizationManager::isFenceRegisteredAndAuthorized(const CLFenceManager_Type::Fence &, BOOL &, BOOL &)", "%s\n", v6);
    if (v6 != (char *)buf) {
      free(v6);
    }
  }
}

void sub_100DABB18(uint64_t a1, void *a2, void *a3)
{
  if (*(void *)(a1 + 112))
  {
    if (a3)
    {
      int v6 = *(void **)(a1 + 176);
      id v7 = [a3 UUIDString];
      if ([a2 objectForKeyedSubscript:v7]
        && objc_msgSend(objc_msgSend(a2, "objectForKeyedSubscript:", v7), "isEqualToString:", @"inactive"))
      {
        if (qword_102419530 != -1) {
          dispatch_once(&qword_102419530, &stru_1022F7620);
        }
        uint64_t v8 = qword_102419538;
        if (os_log_type_enabled((os_log_t)qword_102419538, OS_LOG_TYPE_DEFAULT))
        {
          int v14 = 68289282;
          int v15 = 0;
          __int16 v16 = 2082;
          uint64_t v17 = "";
          __int16 v18 = 2082;
          id v19 = [v7 UTF8String];
          _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#FenceHandoff stop monitoring from inactive device\", \"deviceId\":%{public, location:escape_only}s}", (uint8_t *)&v14, 0x1Cu);
        }
        sub_100DA845C(a1, a3, 1);
        [*(id *)(a1 + 192) setObject:0 forKeyedSubscript:a3];
      }
      else
      {
        if ([[v6 UUIDString] isEqualToString:[a3 UUIDString]] & 1)sub_100DA845C(a1, v6, 1); {
        if ([*(id *)(a1 + 192) objectForKeyedSubscript:a3])
        }
        {
          if (qword_102419530 != -1) {
            dispatch_once(&qword_102419530, &stru_1022F7620);
          }
          uint64_t v10 = qword_102419538;
          if (os_log_type_enabled((os_log_t)qword_102419538, OS_LOG_TYPE_DEFAULT))
          {
            int v14 = 68289282;
            int v15 = 0;
            __int16 v16 = 2082;
            uint64_t v17 = "";
            __int16 v18 = 2082;
            id v19 = [[[v6 UUIDString] UTF8String];
            _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#FenceHandoff appending handoff dictionary\", \"deviceId\":%{public, location:escape_only}s}", (uint8_t *)&v14, 0x1Cu);
          }
          [objc_msgSend(*(id *)(a1 + 192), "objectForKeyedSubscript:", a3) addEntriesFromDictionary:a2];
          sub_100DABFE8(a1);
        }
        else
        {
          if (qword_102419530 != -1) {
            dispatch_once(&qword_102419530, &stru_1022F7620);
          }
          __int16 v13 = qword_102419538;
          if (os_log_type_enabled((os_log_t)qword_102419538, OS_LOG_TYPE_DEFAULT))
          {
            int v14 = 68289282;
            int v15 = 0;
            __int16 v16 = 2082;
            uint64_t v17 = "";
            __int16 v18 = 2082;
            id v19 = [[objc_msgSend(a3, "UUIDString") UTF8String];
            _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#FenceHandoff adding handoff dictionary\", \"deviceId\":%{public, location:escape_only}s}", (uint8_t *)&v14, 0x1Cu);
          }
          [*(id *)(a1 + 192) setObject:+[NSMutableDictionary dictionaryWithDictionary:](NSMutableDictionary, "dictionaryWithDictionary:", a2) forKeyedSubscript:a3];
          sub_100DA8960(a1, a3);
        }
      }
    }
    else
    {
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F75E0);
      }
      int v11 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_FAULT))
      {
        int v14 = 68289026;
        int v15 = 0;
        __int16 v16 = 2082;
        uint64_t v17 = "";
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"#FenceHandoff deviceId is nil\"}", (uint8_t *)&v14, 0x12u);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F75E0);
        }
      }
      uint64_t v12 = qword_1024193C8;
      if (os_signpost_enabled((os_log_t)qword_1024193C8))
      {
        int v14 = 68289026;
        int v15 = 0;
        __int16 v16 = 2082;
        uint64_t v17 = "";
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v12, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "#FenceHandoff deviceId is nil", "{\"msg%{public}.0s\":\"#FenceHandoff deviceId is nil\"}", (uint8_t *)&v14, 0x12u);
      }
    }
  }
  else
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    uint64_t v9 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      int v14 = 68289026;
      int v15 = 0;
      __int16 v16 = 2082;
      uint64_t v17 = "";
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#Warn #FenceHandoff: handleChangeFencesStateMatchingHandoffTags, no region monitoring before the first unlock\"}", (uint8_t *)&v14, 0x12u);
    }
  }
}

uint64_t sub_100DABFE8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 136) && (uint64_t v2 = *(void *)(a1 + 112)) != 0)
  {
    id v26 = 0;
    char v27 = 0;
    __int16 v29 = 0;
    unint64_t v28 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    __int16 v25 = 0;
    unint64_t v24 = 0;
    uint64_t v3 = *(void **)(a1 + 176);
    id v19 = 0;
    int v20 = 0;
    uint64_t v21 = 0;
    uint64_t v4 = sub_1009504D4(v2, (uint64_t)v3, (uint64_t)&v19);
    if (v4)
    {
      uint64_t v5 = v19;
      int v6 = v20;
      while (v5 != v6)
      {
        if (!sub_100DA671C(a1, (uint64_t)v5))
        {
          uint64_t v9 = v23;
          if ((unint64_t)v23 >= v24)
          {
            uint64_t v10 = (char *)sub_100920FEC((uint64_t *)&v22, v5);
          }
          else
          {
            sub_10048AEC0(v23, v5);
            uint64_t v10 = v9 + 248;
          }
          uint64_t v23 = v10;
          sub_100954544(*(void *)(a1 + 112), (uint64_t *)v5);
        }
        id v7 = v27;
        if ((unint64_t)v27 >= v28)
        {
          uint64_t v8 = (char *)sub_100920FEC((uint64_t *)&v26, v5);
        }
        else
        {
          sub_10048AEC0(v27, v5);
          uint64_t v8 = v7 + 248;
        }
        char v27 = v8;
        sub_100DA6AAC(a1, v5, 1);
        uint64_t v5 = (long long *)((char *)v5 + 248);
      }
      if (v27 != v26)
      {
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F75E0);
        }
        int v14 = qword_1024193C8;
        if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)long long buf = 134349056;
          *(void *)&uint8_t buf[4] = 0xEF7BDEF7BDEF7BDFLL * ((v27 - v26) >> 3);
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "#FenceHandoff: sending notification for adding fences: %{public}lu", buf, 0xCu);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F75E0);
          }
          int v30 = 134349056;
          unint64_t v31 = 0xEF7BDEF7BDEF7BDFLL * ((v27 - v26) >> 3);
          uint64_t v17 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLFenceAuthorizationManager::reconcileMonitoredHandoffFencesForActiveDeviceId(NSDictionary *)", "%s\n", v17);
          if (v17 != buf) {
            free(v17);
          }
        }
        *(_DWORD *)long long buf = 0;
        (*(void (**)(uint64_t, unsigned char *, char **, void, uint64_t, void))(*(void *)a1 + 152))(a1, buf, &v26, 0, 0xFFFFFFFFLL, 0);
      }
      if (v23 != v22)
      {
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F75E0);
        }
        int v15 = qword_1024193C8;
        if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)long long buf = 134349056;
          *(void *)&uint8_t buf[4] = 0xEF7BDEF7BDEF7BDFLL * ((v23 - v22) >> 3);
          _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "#FenceHandoff: sending notification for removing fences: %{public}lu", buf, 0xCu);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F75E0);
          }
          int v30 = 134349056;
          unint64_t v31 = 0xEF7BDEF7BDEF7BDFLL * ((v23 - v22) >> 3);
          __int16 v18 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLFenceAuthorizationManager::reconcileMonitoredHandoffFencesForActiveDeviceId(NSDictionary *)", "%s\n", v18);
          if (v18 != buf) {
            free(v18);
          }
        }
        *(_DWORD *)long long buf = 1;
        (*(void (**)(uint64_t, unsigned char *, char **, void, uint64_t, void))(*(void *)a1 + 152))(a1, buf, &v22, 0, 0xFFFFFFFFLL, 0);
      }
    }
    else
    {
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F75E0);
      }
      uint64_t v12 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
      {
        id v13 = [[[v3 UUIDString] UTF8String];
        *(_DWORD *)long long buf = 68289282;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        __int16 v33 = 2082;
        id v34 = v13;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#Warn #FenceHandoff: unable retrieve Fences from database\", \"deviceId\":%{public, location:escape_only}s}", buf, 0x1Cu);
      }
    }
    *(void *)long long buf = &v19;
    sub_10008DF5C((void ***)buf);
    *(void *)long long buf = &v22;
    sub_10008DF5C((void ***)buf);
    *(void *)long long buf = &v26;
    sub_10008DF5C((void ***)buf);
  }
  else
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    int v11 = qword_1024193C8;
    uint64_t v4 = 0;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"Fence: #FenceHandoff reconcileMonitoredHandoffFencesForActiveDeviceId, no region monitoring before the first unlock\"}", buf, 0x12u);
      return 0;
    }
  }
  return v4;
}

void sub_100DAC660(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void **a25)
{
  a25 = (void **)&a12;
  sub_10008DF5C(&a25);
  a25 = (void **)&a15;
  sub_10008DF5C(&a25);
  a25 = (void **)&a19;
  sub_10008DF5C(&a25);
  _Unwind_Resume(a1);
}

void sub_100DAC6CC(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, double *a5)
{
  uint64_t v5 = *(void *)(a1 + 112);
  if (v5)
  {
    double v6 = *a5;
    sub_1009539F4(v5, a2, a3, a4, v6);
  }
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F75E0);
  }
  id v7 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Fence: lastDownloadTimeChanged, no region monitoring before the first unlock", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    uint64_t v8 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceAuthorizationManager::lastDownloadTimeChanged(const std::string &, const std::string &, const std::string &, const double &)", "%s\n", v8);
    if (v8 != (char *)buf) {
      free(v8);
    }
  }
}

void sub_100DAC89C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 112);
  if (v1)
  {
    sub_10095416C(v1);
  }
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F75E0);
  }
  uint64_t v2 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Fence: markDataDownloadInvalid, no region monitoring before the first unlock", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    uint64_t v3 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceAuthorizationManager::markDataDownloadInvalid()", "%s\n", v3);
    if (v3 != (char *)buf) {
      free(v3);
    }
  }
}

uint64_t sub_100DACA68(uint64_t a1)
{
  if (*(void *)(a1 + 112)) {
    sub_100DAA764(a1);
  }
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F75E0);
  }
  uint64_t v1 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEBUG, "Fence: hasMonitoredFences, no region monitoring before the first unlock", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    uint64_t v3 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLFenceAuthorizationManager::hasMonitoredFences(const std::string &)", "%s\n", v3);
    if (v3 != (char *)buf) {
      free(v3);
    }
  }
  return 0;
}

void sub_100DACDD4(uint64_t a1, std::string *a2, int a3)
{
  sub_10000FF54(a2, (uint64_t)&v17);
  int v6 = sub_100DACA68(a1);
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F75E0);
  }
  id v7 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v8 = a2;
    }
    else {
      uint64_t v8 = (std::string *)a2->__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)long long buf = 136446722;
    __int16 v25 = v8;
    __int16 v26 = 1026;
    int v27 = v6;
    __int16 v28 = 1026;
    int v29 = a3;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "%{public}s: hasMonitoredFences %{public}d, monitoringAdded %{public}d", buf, 0x18u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v14 = a2;
    }
    else {
      int v14 = (std::string *)a2->__r_.__value_.__r.__words[0];
    }
    int v18 = 136446722;
    id v19 = v14;
    __int16 v20 = 1026;
    int v21 = v6;
    __int16 v22 = 1026;
    int v23 = a3;
    int v15 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceAuthorizationManager::checkClientStatusInternal(const std::string &, BOOL)", "%s\n", v15);
    if (v15 != (char *)buf) {
      free(v15);
    }
  }
  if (v6)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    uint64_t v9 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v10 = a2;
      }
      else {
        uint64_t v10 = (std::string *)a2->__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)long long buf = 136446210;
      __int16 v25 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "%{public}s is now a fence client", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F75E0);
      }
      if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v11 = a2;
      }
      else {
        int v11 = (std::string *)a2->__r_.__value_.__r.__words[0];
      }
LABEL_44:
      int v18 = 136446210;
      id v19 = v11;
      __int16 v16 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceAuthorizationManager::checkClientStatusInternal(const std::string &, BOOL)", "%s\n", v16);
      if (v16 != (char *)buf) {
        free(v16);
      }
    }
  }
  else
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F75E0);
    }
    uint64_t v12 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        id v13 = a2;
      }
      else {
        id v13 = (std::string *)a2->__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)long long buf = 136446210;
      __int16 v25 = v13;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "%{public}s is no longer a fence client", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F75E0);
      }
      if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v11 = a2;
      }
      else {
        int v11 = (std::string *)a2->__r_.__value_.__r.__words[0];
      }
      goto LABEL_44;
    }
  }
  sub_1007D0F6C();
}

void sub_100DAD330(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_1000064D0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100DAD358(uint64_t a1)
{
}

uint64_t sub_100DAD36C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 112);
  if (result)
  {
    memset(v2, 0, sizeof(v2));
    sub_1009594EC(result, v2);
  }
  return result;
}

void sub_100DAD57C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, void **a15)
{
  a15 = (void **)&a12;
  sub_100DB0AFC(&a15);
  _Unwind_Resume(a1);
}

void sub_100DAD5C4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void **)(a1 + 176);
  *(void *)(a1 + 176) = v3;
}

void sub_100DAD5F8(_Unwind_Exception *exception_object)
{
}

id sub_100DAD608()
{
  id v0 = [+[NRPairedDeviceRegistry sharedInstance] getPairedDevices];
  id v1 = objc_alloc_init((Class)NSMutableSet);
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = [v0 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v9;
    uint64_t v5 = _NRDevicePropertyBluetoothIdentifier;
    do
    {
      int v6 = 0;
      do
      {
        if (*(void *)v9 != v4) {
          objc_enumerationMutation(v0);
        }
        [v1 addObject:[objc_msgSend(*(id *)(*((void *)&v8 + 1) + 8 * (void)v6), "valueForProperty:", v5), "UUIDString"]];
        int v6 = (char *)v6 + 1;
      }
      while (v3 != v6);
      id v3 = [v0 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v3);
  }
  return v1;
}

void sub_100DAD73C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 48);
  if (v4)
  {
    if (*(void *)(v4 + 8) != -1) {
      sub_100DA7EAC(v3, a2);
    }
  }
}

void sub_100DAD7C0(uint64_t a1)
{
}

void sub_100DAD7CC()
{
}

void sub_100DAD85C()
{
}

uint64_t sub_100DAD880(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  *(void *)a1 = &off_1022F77A0;
  *(void *)(a1 + 8) = [[CLNotifierClientAdapter alloc] initWithClient:a1];
  *(void *)(a1 + 24) = a4;
  *(void *)(a1 + 32) = a5;
  [a3 silo];
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 80))(a2);
  id v19 = &OBJC_PROTOCOL___CLIntersiloServiceProtocol;
  [+[CLIntersiloInterface sharedInterface](CLIntersiloInterface, "sharedInterface") extendSelectorInfoWithProtocol:&OBJC_PROTOCOL___CLNotifierServiceProtocol bases:+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v19, 1)];
  int v18 = &OBJC_PROTOCOL___CLIntersiloClientProtocol;
  [+[CLIntersiloInterface sharedInterface](CLIntersiloInterface, "sharedInterface") extendSelectorInfoWithProtocol:&OBJC_PROTOCOL___CLNotifierServiceClientProtocol bases:+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v18, 1)];
  id v11 = [a3 silo];
  if (*(char *)(a2 + 31) < 0)
  {
    sub_1000DC48C(__p, *(void **)(a2 + 8), *(void *)(a2 + 16));
  }
  else
  {
    *(_OWORD *)long long __p = *(_OWORD *)(a2 + 8);
    uint64_t v17 = *(void *)(a2 + 24);
  }
  if (v17 >= 0) {
    uint64_t v12 = __p;
  }
  else {
    uint64_t v12 = (void **)__p[0];
  }
  id v13 = +[CLIntersiloProxy proxyForRecipientObject:inSilo:recipientName:](CLIntersiloProxy, "proxyForRecipientObject:inSilo:recipientName:", v10, v11, +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12, __p[0], __p[1], v17));
  *(void *)(a1 + 16) = v13;
  if (SHIBYTE(v17) < 0)
  {
    operator delete(__p[0]);
    id v13 = *(id *)(a1 + 16);
  }
  id v14 = v13;
  [*(id *)(a1 + 16) registerDelegate:*(void *)(a1 + 8) inSilo:[a3 silo]];
  return a1;
}

void sub_100DADAA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DADAC8(uint64_t a1, uint64_t a2)
{
  v14[0] = a2;
  if (!*(unsigned char *)(a1 + 108))
  {
    uint64_t v4 = *(void *)(a1 + 88);
    if (!v4) {
      goto LABEL_12;
    }
    uint64_t v5 = a1 + 80;
    uint64_t v6 = a1 + 88;
    do
    {
      int v7 = *(_DWORD *)(v4 + 32);
      BOOL v8 = v7 < (int)a2;
      if (v7 >= (int)a2) {
        long long v9 = (uint64_t *)v4;
      }
      else {
        long long v9 = (uint64_t *)(v4 + 8);
      }
      if (!v8) {
        uint64_t v6 = v4;
      }
      uint64_t v4 = *v9;
    }
    while (*v9);
    if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= (int)a2)
    {
      while (*(void *)(v6 + 56))
      {
        *(_DWORD *)long long buf = *(_DWORD *)(*(void *)(v6 + 40) + 28);
        (*(void (**)(uint64_t, uint64_t, uint8_t *))(*(void *)a1 + 112))(a1, a2, buf);
      }
      sub_10006DA64(v5, v14);
    }
    else
    {
LABEL_12:
      if (qword_102419580 != -1) {
        dispatch_once(&qword_102419580, &stru_1022F75C0);
      }
      uint64_t v10 = qword_102419588;
      if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_FAULT))
      {
        id v11 = (void *)(a1 + 8);
        if (*(char *)(a1 + 31) < 0) {
          id v11 = (void *)*v11;
        }
        *(_DWORD *)long long buf = 136446466;
        id v19 = v11;
        __int16 v20 = 1026;
        int v21 = a2;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_FAULT, "%{public}s; client %{public}d does not exist",
          buf,
          0x12u);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419580 != -1) {
          dispatch_once(&qword_102419580, &stru_1022F75C0);
        }
        uint64_t v12 = (void *)(a1 + 8);
        if (*(char *)(a1 + 31) < 0) {
          uint64_t v12 = (void *)*v12;
        }
        v14[1] = 136446466;
        int v15 = v12;
        __int16 v16 = 1026;
        int v17 = a2;
        id v13 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "virtual void CLNotifier<CLFenceAuthorizationManager_Type::Notification, CLFenceAuthorizationManager_Type::NotificationData>::removeClient(int) [Notification_T = CLFenceAuthorizationManager_Type::Notification, NotificationData_T = CLFenceAuthorizationManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v13);
        if (v13 != (char *)buf) {
          free(v13);
        }
      }
    }
  }
}

uint64_t sub_100DADD58(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  id v7 = sub_10005C4C4(a4);
  if (v7)
  {
    int v10 = a3;
    return (*(uint64_t (**)(uint64_t, uint64_t, int *, id))(*(void *)a1 + 96))(a1, a2, &v10, v7);
  }
  else
  {
    int v9 = a3;
    return (*(uint64_t (**)(uint64_t, uint64_t, int *))(*(void *)a1 + 88))(a1, a2, &v9);
  }
}

uint64_t sub_100DADE0C(uint64_t a1, uint64_t a2, int a3)
{
  int v4 = a3;
  return (*(uint64_t (**)(uint64_t, uint64_t, int *))(*(void *)a1 + 104))(a1, a2, &v4);
}

uint64_t sub_100DADE54(uint64_t a1, uint64_t a2, int a3)
{
  int v4 = a3;
  return (*(uint64_t (**)(uint64_t, uint64_t, int *))(*(void *)a1 + 112))(a1, a2, &v4);
}

uint64_t sub_100DADE9C(uint64_t a1, int a2)
{
  int v3 = a2;
  return (*(uint64_t (**)(uint64_t, int *))(*(void *)a1 + 120))(a1, &v3);
}

uint64_t sub_100DADEE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *))(*(void *)a1 + 96))(a1, a2, a3, &unk_102474710);
}

BOOL sub_100DADF10(uint64_t a1, int a2, int *a3, char *a4)
{
  int v39 = a2;
  if (*(unsigned char *)(a1 + 108)) {
    return 0;
  }
  uint64_t v7 = *(void *)(a1 + 88);
  if (v7)
  {
    uint64_t v10 = a1 + 88;
    do
    {
      int v11 = *(_DWORD *)(v7 + 32);
      BOOL v12 = v11 < a2;
      if (v11 >= a2) {
        id v13 = (uint64_t *)v7;
      }
      else {
        id v13 = (uint64_t *)(v7 + 8);
      }
      if (!v12) {
        uint64_t v10 = v7;
      }
      uint64_t v7 = *v13;
    }
    while (*v13);
    if (v10 != a1 + 88 && *(_DWORD *)(v10 + 32) <= a2)
    {
      uint64_t v38 = v10;
      int v16 = *a3;
      uint64_t v19 = *(void *)(v10 + 48);
      uint64_t v18 = v10 + 48;
      uint64_t v17 = v19;
      if (!v19) {
        goto LABEL_31;
      }
      uint64_t v20 = v18;
      do
      {
        int v21 = *(_DWORD *)(v17 + 28);
        BOOL v22 = v21 < v16;
        if (v21 >= v16) {
          int v23 = (uint64_t *)v17;
        }
        else {
          int v23 = (uint64_t *)(v17 + 8);
        }
        if (!v22) {
          uint64_t v20 = v17;
        }
        uint64_t v17 = *v23;
      }
      while (*v23);
      if (v20 == v18 || v16 < *(_DWORD *)(v20 + 28)) {
LABEL_31:
      }
        uint64_t v20 = v18;
      uint64_t v24 = *(void *)(a1 + 64);
      if (!v24) {
        goto LABEL_42;
      }
      uint64_t v25 = a1 + 64;
      do
      {
        int v26 = *(_DWORD *)(v24 + 32);
        BOOL v27 = v26 < v16;
        if (v26 >= v16) {
          __int16 v28 = (uint64_t *)v24;
        }
        else {
          __int16 v28 = (uint64_t *)(v24 + 8);
        }
        if (!v27) {
          uint64_t v25 = v24;
        }
        uint64_t v24 = *v28;
      }
      while (*v28);
      if (v25 != a1 + 64 && v16 >= *(_DWORD *)(v25 + 32))
      {
        uint64_t v34 = *(void *)(v25 + 56);
        char v35 = *a4;
        *(void *)long long buf = &v39;
        *((unsigned char *)sub_1000EB1B8((uint64_t **)(v25 + 40), &v39, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 32) = v35;
        memset(buf, 0, sizeof(buf));
        __int16 v44 = 0;
        if (v20 == v18
          && (*(unsigned int (**)(uint64_t, int *, uint8_t *))(*(void *)a1 + 128))(a1, a3, buf))
        {
          sub_100DB0BC0();
        }
        *(void *)uint64_t v40 = buf;
        sub_10008DF5C((void ***)v40);
        if (v34) {
          goto LABEL_46;
        }
      }
      else
      {
LABEL_42:
        char v29 = byte_102474711;
        *(_DWORD *)uint64_t v40 = *a3;
        *(void *)long long buf = v40;
        *((unsigned char *)sub_10044715C((uint64_t **)(a1 + 56), (int *)v40, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 80) = v29;
        *(_DWORD *)uint64_t v40 = *a3;
        *(void *)long long buf = v40;
        int v30 = sub_10044715C((uint64_t **)(a1 + 56), (int *)v40, (uint64_t)&unk_101D0B290, (_DWORD **)buf);
        unint64_t v31 = (std::__shared_weak_count *)v30[9];
        v30[8] = 0;
        v30[9] = 0;
        if (v31) {
          sub_1000DB0A0(v31);
        }
        char v32 = *a4;
        *(_DWORD *)uint64_t v40 = *a3;
        *(void *)long long buf = v40;
        __int16 v33 = sub_10044715C((uint64_t **)(a1 + 56), (int *)v40, (uint64_t)&unk_101D0B290, (_DWORD **)buf);
        *(void *)long long buf = &v39;
        *((unsigned char *)sub_1000EB1B8(v33 + 5, &v39, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 32) = v32;
      }
      (*(void (**)(uint64_t, int *))(*(void *)a1 + 168))(a1, a3);
LABEL_46:
      if (v20 == v18)
      {
        *(_DWORD *)long long buf = *a3;
        sub_1000EDED4((uint64_t **)(v38 + 40), (int *)buf, buf);
      }
      return 1;
    }
  }
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022F75C0);
  }
  id v14 = qword_102419588;
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_FAULT))
  {
    int v15 = (void *)(a1 + 8);
    if (*(char *)(a1 + 31) < 0) {
      int v15 = (void *)*v15;
    }
    *(_DWORD *)long long buf = 136446466;
    *(void *)&uint8_t buf[4] = v15;
    *(_WORD *)&unsigned char buf[12] = 1026;
    *(_DWORD *)&buf[14] = a2;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_FAULT, "%{public}s; client %{public}d does not exist",
      buf,
      0x12u);
  }
  BOOL result = sub_10013D1A0(115, 0);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022F75C0);
    }
    __int16 v36 = (void *)(a1 + 8);
    if (*(char *)(a1 + 31) < 0) {
      __int16 v36 = (void *)*v36;
    }
    *(_DWORD *)uint64_t v40 = 136446466;
    *(void *)&v40[4] = v36;
    __int16 v41 = 1026;
    int v42 = a2;
    uint64_t v37 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "virtual BOOL CLNotifier<CLFenceAuthorizationManager_Type::Notification, CLFenceAuthorizationManager_Type::NotificationData>::registerForNotification(int, const Notification_T &, const RegistrationInfo_T &) [Notification_T = CLFenceAuthorizationManager_Type::Notification, NotificationData_T = CLFenceAuthorizationManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v37);
    if (v37 != (char *)buf) {
      free(v37);
    }
    return 0;
  }
  return result;
}

void sub_100DAE3CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void **a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  a15 = (void **)&a19;
  sub_10008DF5C(&a15);
  _Unwind_Resume(a1);
}

BOOL sub_100DAE3F4(uint64_t a1, int a2, int *a3)
{
  uint64_t v5 = *(void *)(a1 + 88);
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v6 = a1 + 88;
  do
  {
    int v7 = *(_DWORD *)(v5 + 32);
    BOOL v8 = v7 < a2;
    if (v7 >= a2) {
      int v9 = (uint64_t *)v5;
    }
    else {
      int v9 = (uint64_t *)(v5 + 8);
    }
    if (!v8) {
      uint64_t v6 = v5;
    }
    uint64_t v5 = *v9;
  }
  while (*v9);
  if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= a2)
  {
    uint64_t v16 = *(void *)(v6 + 48);
    uint64_t v14 = v6 + 48;
    uint64_t v15 = v16;
    if (!v16) {
      goto LABEL_29;
    }
    int v17 = *a3;
    uint64_t v18 = v14;
    do
    {
      int v19 = *(_DWORD *)(v15 + 28);
      BOOL v20 = v19 < v17;
      if (v19 >= v17) {
        int v21 = (uint64_t *)v15;
      }
      else {
        int v21 = (uint64_t *)(v15 + 8);
      }
      if (!v20) {
        uint64_t v18 = v15;
      }
      uint64_t v15 = *v21;
    }
    while (*v21);
    if (v18 == v14 || v17 < *(_DWORD *)(v18 + 28)) {
LABEL_29:
    }
      uint64_t v18 = v14;
    return v18 != v14;
  }
  else
  {
LABEL_11:
    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022F75C0);
    }
    uint64_t v10 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_FAULT))
    {
      int v11 = (void *)(a1 + 8);
      if (*(char *)(a1 + 31) < 0) {
        int v11 = (void *)*v11;
      }
      *(_DWORD *)long long buf = 136446466;
      uint64_t v24 = v11;
      __int16 v25 = 1026;
      int v26 = a2;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_FAULT, "%{public}s; client %{public}d does not exist",
        buf,
        0x12u);
    }
    BOOL v12 = sub_10013D1A0(115, 0);
    BOOL result = 0;
    if (v12)
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419580 != -1) {
        dispatch_once(&qword_102419580, &stru_1022F75C0);
      }
      BOOL v22 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "virtual BOOL CLNotifier<CLFenceAuthorizationManager_Type::Notification, CLFenceAuthorizationManager_Type::NotificationData>::clientRegistered(int, const Notification_T &) [Notification_T = CLFenceAuthorizationManager_Type::Notification, NotificationData_T = CLFenceAuthorizationManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v22);
      if (v22 != (char *)buf) {
        free(v22);
      }
      return 0;
    }
  }
  return result;
}

BOOL sub_100DAE678(char *a1, int a2, int *a3)
{
  int v32 = a2;
  int v3 = a1[108];
  if (!a1[108])
  {
    uint64_t v6 = *((void *)a1 + 11);
    if (v6)
    {
      BOOL v8 = a1 + 88;
      do
      {
        int v9 = *(_DWORD *)(v6 + 32);
        BOOL v10 = v9 < a2;
        if (v9 >= a2) {
          int v11 = (uint64_t *)v6;
        }
        else {
          int v11 = (uint64_t *)(v6 + 8);
        }
        if (!v10) {
          BOOL v8 = (char *)v6;
        }
        uint64_t v6 = *v11;
      }
      while (*v11);
      if (v8 != a1 + 88 && *((_DWORD *)v8 + 8) <= a2)
      {
        uint64_t v14 = (char *)*((void *)v8 + 6);
        BOOL v12 = v8 + 48;
        id v13 = v14;
        if (v14)
        {
          int v15 = *a3;
          uint64_t v16 = v12;
          do
          {
            int v17 = *((_DWORD *)v13 + 7);
            BOOL v18 = v17 < v15;
            if (v17 >= v15) {
              int v19 = (char **)v13;
            }
            else {
              int v19 = (char **)(v13 + 8);
            }
            if (!v18) {
              uint64_t v16 = v13;
            }
            id v13 = *v19;
          }
          while (*v19);
          if (v16 != v12 && v15 >= *((_DWORD *)v16 + 7))
          {
            LODWORD(__p[0]) = *a3;
            sub_1000ED9F4((uint64_t)(v12 - 8), (int *)__p);
            uint64_t v20 = *((void *)a1 + 8);
            if (!v20) {
              goto LABEL_33;
            }
            int v21 = *a3;
            BOOL v22 = a1 + 64;
            do
            {
              int v23 = *(_DWORD *)(v20 + 32);
              BOOL v24 = v23 < v21;
              if (v23 >= v21) {
                __int16 v25 = (uint64_t *)v20;
              }
              else {
                __int16 v25 = (uint64_t *)(v20 + 8);
              }
              if (!v24) {
                BOOL v22 = (char *)v20;
              }
              uint64_t v20 = *v25;
            }
            while (*v25);
            if (v22 != a1 + 64 && v21 >= *((_DWORD *)v22 + 8))
            {
              sub_1000ED9F4((uint64_t)(v22 + 40), &v32);
              if (!*((void *)v22 + 7)) {
                (*(void (**)(char *, int *))(*(void *)a1 + 176))(a1, a3);
              }
            }
            else
            {
LABEL_33:
              if (qword_102419580 != -1) {
                dispatch_once(&qword_102419580, &stru_1022F75C0);
              }
              int v26 = qword_102419588;
              if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_FAULT))
              {
                BOOL v27 = a1 + 8;
                if (a1[31] < 0) {
                  BOOL v27 = (void *)*v27;
                }
                (*(void (**)(void **__return_ptr, char *, int *))(*(void *)a1 + 160))(__p, a1, a3);
                if (v42 >= 0) {
                  __int16 v28 = __p;
                }
                else {
                  __int16 v28 = (void **)__p[0];
                }
                *(_DWORD *)long long buf = 136446466;
                *(void *)&uint8_t buf[4] = v27;
                __int16 v34 = 2082;
                char v35 = v28;
                _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_FAULT, "%{public}s; notification %{public}s not found",
                  buf,
                  0x16u);
                if (v42 < 0) {
                  operator delete(__p[0]);
                }
              }
              if (sub_10013D1A0(115, 0))
              {
                bzero(__p, 0x65CuLL);
                if (qword_102419580 != -1) {
                  dispatch_once(&qword_102419580, &stru_1022F75C0);
                }
                char v29 = a1 + 8;
                if (a1[31] < 0) {
                  char v29 = (void *)*v29;
                }
                (*(void (**)(unsigned char *__return_ptr, char *, int *))(*(void *)a1 + 160))(buf, a1, a3);
                if (v36 >= 0) {
                  int v30 = buf;
                }
                else {
                  int v30 = *(unsigned char **)buf;
                }
                int v37 = 136446466;
                uint64_t v38 = v29;
                __int16 v39 = 2082;
                uint64_t v40 = v30;
                unint64_t v31 = (char *)_os_log_send_and_compose_impl();
                if (v36 < 0) {
                  operator delete(*(void **)buf);
                }
                sub_1004BA5E4("Generic", 1, 0, 0, "virtual BOOL CLNotifier<CLFenceAuthorizationManager_Type::Notification, CLFenceAuthorizationManager_Type::NotificationData>::unregisterForNotification(int, const Notification_T &) [Notification_T = CLFenceAuthorizationManager_Type::Notification, NotificationData_T = CLFenceAuthorizationManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v31);
                if (v31 != (char *)__p) {
                  free(v31);
                }
              }
            }
          }
        }
      }
    }
  }
  return v3 == 0;
}

uint64_t sub_100DAEA4C(uint64_t a1, int *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v3 = a1 + 64;
  uint64_t v4 = v5;
  if (!v5) {
    return 0;
  }
  int v7 = *a2;
  uint64_t v8 = v3;
  do
  {
    int v9 = *(_DWORD *)(v4 + 32);
    BOOL v10 = v9 < v7;
    if (v9 >= v7) {
      int v11 = (uint64_t *)v4;
    }
    else {
      int v11 = (uint64_t *)(v4 + 8);
    }
    if (!v10) {
      uint64_t v8 = v4;
    }
    uint64_t v4 = *v11;
  }
  while (*v11);
  if (v8 == v3) {
    return 0;
  }
  if (v7 < *(_DWORD *)(v8 + 32)) {
    return 0;
  }
  uint64_t v12 = *(void *)(v8 + 64);
  if (!v12) {
    return 0;
  }
  if (v12 != a3) {
    sub_100DB0790(a3, *(std::string **)v12, *(long long **)(v12 + 8), 0xEF7BDEF7BDEF7BDFLL * ((uint64_t)(*(void *)(v12 + 8) - *(void *)v12) >> 3));
  }
  *(_WORD *)(a3 + 24) = *(_WORD *)(v12 + 24);
  return 1;
}

uint64_t sub_100DAEAF8(uint64_t a1, int *a2, uint64_t a3)
{
  sub_100DAFF30(a3, &v10);
  int v9 = *a2;
  int v11 = &v9;
  uint64_t v5 = sub_10044715C((uint64_t **)(a1 + 56), &v9, (uint64_t)&unk_101D0B290, &v11);
  long long v6 = v10;
  long long v10 = 0uLL;
  int v7 = (std::__shared_weak_count *)v5[9];
  *((_OWORD *)v5 + 4) = v6;
  if (v7)
  {
    sub_1000DB0A0(v7);
    if (*((void *)&v10 + 1)) {
      sub_1000DB0A0(*((std::__shared_weak_count **)&v10 + 1));
    }
  }
  return 1;
}

void sub_100DAEB8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1000DB0A0(a12);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DAEBA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  memset(v4, 0, sizeof(v4));
  __int16 v5 = 0;
  (*(void (**)(uint64_t, uint64_t, void *, uint64_t, uint64_t, void))(*(void *)a1 + 152))(a1, a2, v4, a3, a4, 0);
  long long v6 = (void **)v4;
  sub_10008DF5C(&v6);
}

void sub_100DAEC18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  *(void *)(v10 - 24) = &a10;
  sub_10008DF5C((void ***)(v10 - 24));
  _Unwind_Resume(a1);
}

void sub_100DAEC34(uint64_t a1, unsigned int *a2, uint64_t a3, int a4)
{
  if (*(unsigned char *)(a1 + 108)) {
    return;
  }
  uint64_t v8 = _os_activity_create((void *)&_mh_execute_header, "CL: notifyClientsWithData (Fallback)", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_IF_NONE_PRESENT);
  os_activity_scope_enter(v8, &state);

  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022F75C0);
  }
  int v9 = qword_102419588;
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v10 = (void *)(a1 + 8);
    if (*(char *)(a1 + 31) < 0) {
      uint64_t v10 = (void *)*v10;
    }
    int v11 = (std::__shared_weak_count *)*a2;
    *(_DWORD *)long long buf = 68289794;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    *(_WORD *)&unsigned char buf[18] = 2082;
    *(void *)&unsigned char buf[20] = "activity";
    __int16 v23 = 2082;
    BOOL v24 = v10;
    __int16 v25 = 2050;
    int v26 = v11;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"notifyClientsWithData\", \"event\":%{public, location:escape_only}s, \"name\":%{public, location:escape_only}s, \"notification\":%{public}lld}", buf, 0x30u);
  }
  uint64_t v12 = *(void *)(a1 + 64);
  if (!v12) {
    goto LABEL_18;
  }
  int v13 = *a2;
  uint64_t v14 = (uint64_t **)(a1 + 64);
  do
  {
    int v15 = *(_DWORD *)(v12 + 32);
    BOOL v16 = v15 < v13;
    if (v15 >= v13) {
      int v17 = (uint64_t *)v12;
    }
    else {
      int v17 = (uint64_t *)(v12 + 8);
    }
    if (!v16) {
      uint64_t v14 = (uint64_t **)v12;
    }
    uint64_t v12 = *v17;
  }
  while (*v17);
  if (v14 == (uint64_t **)(a1 + 64) || v13 < *((_DWORD *)v14 + 8))
  {
LABEL_18:
    BOOL v27 = v28;
    memset(v28, 0, sizeof(v28));
    char v29 = 0;
    sub_1004481D0((uint64_t)buf, a2, (uint64_t)&v27);
    uint64_t v14 = sub_100448098((uint64_t **)(a1 + 56), (__n128 *)buf);
    if (v26) {
      sub_1000DB0A0(v26);
    }
    sub_1000F5BB0((uint64_t)&buf[8], *(void **)&buf[16]);
    if (v29) {
      sub_1000DB0A0(v29);
    }
    sub_1000F5BB0((uint64_t)&v27, v28[0]);
  }
  if (!a4)
  {
    uint64_t v20 = (std::__shared_weak_count *)v14[9];
    v14[8] = 0;
    v14[9] = 0;
    if (!v20) {
      goto LABEL_29;
    }
LABEL_28:
    sub_1000DB0A0(v20);
    goto LABEL_29;
  }
  sub_100DAFF30(a3, buf);
  long long v18 = *(_OWORD *)buf;
  *(void *)long long buf = 0;
  *(void *)&uint8_t buf[8] = 0;
  int v19 = (std::__shared_weak_count *)v14[9];
  *((_OWORD *)v14 + 4) = v18;
  if (v19)
  {
    sub_1000DB0A0(v19);
    uint64_t v20 = *(std::__shared_weak_count **)&buf[8];
    if (*(void *)&buf[8]) {
      goto LABEL_28;
    }
  }
LABEL_29:
  if (v14[7]) {
    sub_100DAF948();
  }
  os_activity_scope_leave(&state);
}

void sub_100DAF204(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state, char a18)
{
}

void sub_100DAF250(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 108))
  {
    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022F75C0);
    }
    id v2 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v3 = (void *)(a1 + 8);
      if (*(char *)(a1 + 31) < 0) {
        uint64_t v3 = (void *)*v3;
      }
      *(_DWORD *)long long buf = 136315138;
      BOOL v22 = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "%s; already shutdown; not listing clients",
        buf,
        0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419580 != -1) {
        dispatch_once(&qword_102419580, &stru_1022F75C0);
      }
      uint64_t v4 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLNotifier<CLFenceAuthorizationManager_Type::Notification, CLFenceAuthorizationManager_Type::NotificationData>::listClients() [Notification_T = CLFenceAuthorizationManager_Type::Notification, NotificationData_T = CLFenceAuthorizationManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v4);
      if (v4 != (char *)buf) {
        free(v4);
      }
    }
  }
  else
  {
    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022F75C0);
    }
    __int16 v5 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      long long v6 = (void *)(a1 + 8);
      if (*(char *)(a1 + 31) < 0) {
        long long v6 = (void *)*v6;
      }
      uint64_t v7 = *(void *)(a1 + 96);
      *(_DWORD *)long long buf = 136315394;
      BOOL v22 = v6;
      __int16 v23 = 2048;
      v24[0] = v7;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "%s; listing clients, num clients: %zu",
        buf,
        0x16u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419580 != -1) {
        dispatch_once(&qword_102419580, &stru_1022F75C0);
      }
      uint64_t v20 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLNotifier<CLFenceAuthorizationManager_Type::Notification, CLFenceAuthorizationManager_Type::NotificationData>::listClients() [Notification_T = CLFenceAuthorizationManager_Type::Notification, NotificationData_T = CLFenceAuthorizationManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v20);
      if (v20 != (char *)buf) {
        free(v20);
      }
    }
    uint64_t v8 = *(void **)(a1 + 80);
    if (v8 != (void *)(a1 + 88))
    {
      do
      {
        int v9 = (void *)v8[5];
        if (v9 != v8 + 6)
        {
          do
          {
            if (qword_102419580 != -1) {
              dispatch_once(&qword_102419580, &stru_1022F75C0);
            }
            uint64_t v10 = qword_102419588;
            if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
            {
              int v11 = (void *)(a1 + 8);
              if (*(char *)(a1 + 31) < 0) {
                int v11 = *(void **)(a1 + 8);
              }
              int v12 = *((_DWORD *)v8 + 8);
              int v13 = *((_DWORD *)v9 + 7);
              *(_DWORD *)long long buf = 136315650;
              BOOL v22 = v11;
              __int16 v23 = 1024;
              LODWORD(v24[0]) = v12;
              WORD2(v24[0]) = 1024;
              *(_DWORD *)((char *)v24 + 6) = v13;
              _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "%s; clients, id: %d, notification: %d",
                buf,
                0x18u);
            }
            if (sub_10013D1A0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_102419580 != -1) {
                dispatch_once(&qword_102419580, &stru_1022F75C0);
              }
              int v17 = (char *)_os_log_send_and_compose_impl();
              sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLNotifier<CLFenceAuthorizationManager_Type::Notification, CLFenceAuthorizationManager_Type::NotificationData>::listClients() [Notification_T = CLFenceAuthorizationManager_Type::Notification, NotificationData_T = CLFenceAuthorizationManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v17);
              if (v17 != (char *)buf) {
                free(v17);
              }
            }
            uint64_t v14 = (void *)v9[1];
            if (v14)
            {
              do
              {
                int v15 = v14;
                uint64_t v14 = (void *)*v14;
              }
              while (v14);
            }
            else
            {
              do
              {
                int v15 = (void *)v9[2];
                BOOL v16 = *v15 == (void)v9;
                int v9 = v15;
              }
              while (!v16);
            }
            int v9 = v15;
          }
          while (v15 != v8 + 6);
        }
        long long v18 = (void *)v8[1];
        if (v18)
        {
          do
          {
            int v19 = v18;
            long long v18 = (void *)*v18;
          }
          while (v18);
        }
        else
        {
          do
          {
            int v19 = (void *)v8[2];
            BOOL v16 = *v19 == (void)v8;
            uint64_t v8 = v19;
          }
          while (!v16);
        }
        uint64_t v8 = v19;
      }
      while (v19 != (void *)(a1 + 88));
    }
  }
}

void sub_100DAF800(uint64_t a1)
{
  sub_100DB0B50(a1);

  operator delete();
}

id sub_100DAF838(uint64_t a1, int a2, void *a3)
{
  id result = sub_100DB0118(a3);
  if (result)
  {
    int v6 = a2;
    return (id)(*(uint64_t (**)(void, int *, id, void))(a1 + 24))(0, &v6, result, *(void *)(a1 + 32));
  }
  return result;
}

void sub_100DAF888(id a1)
{
  qword_102419588 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_100DAF8B8(id a1)
{
  qword_1024193C8 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeoFencing");
}

void sub_100DAF8E8(id a1)
{
  qword_102419658 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Location_deprecated");
}

void sub_100DAF918(id a1)
{
  qword_102419538 = (uint64_t)os_log_create("com.apple.locationd.Core", "Core");
}

void sub_100DAF948()
{
}

void sub_100DAFA24()
{
}

void sub_100DAFA48(void *a1, int *a2, void *a3)
{
  if (!*((unsigned char *)a1 + 108))
  {
    __int16 v5 = a1 + 8;
    uint64_t v4 = a1[8];
    if (v4)
    {
      int v8 = *a2;
      int v9 = a1 + 8;
      do
      {
        int v10 = *(_DWORD *)(v4 + 32);
        BOOL v11 = v10 < v8;
        if (v10 >= v8) {
          int v12 = (uint64_t *)v4;
        }
        else {
          int v12 = (uint64_t *)(v4 + 8);
        }
        if (!v11) {
          int v9 = (void *)v4;
        }
        uint64_t v4 = *v12;
      }
      while (*v12);
      if (v9 != v5 && v8 >= *((_DWORD *)v9 + 8))
      {
        __int16 v49 = v9;
        id v13 = sub_100DB0118(a3);
        (*(void (**)(void *, int *, id, void *))(*a1 + 184))(a1, a2, v13, v9 + 10);
        uint64_t v14 = (void *)v9[5];
        if (v14 != v9 + 6)
        {
          int v15 = a1 + 11;
          BOOL v16 = a1 + 1;
          do
          {
            uint64_t v17 = *v15;
            if (!*v15) {
              goto LABEL_25;
            }
            int v18 = *((_DWORD *)v14 + 7);
            int v19 = a1 + 11;
            do
            {
              int v20 = *(_DWORD *)(v17 + 32);
              BOOL v21 = v20 < v18;
              if (v20 >= v18) {
                BOOL v22 = (uint64_t *)v17;
              }
              else {
                BOOL v22 = (uint64_t *)(v17 + 8);
              }
              if (!v21) {
                int v19 = (uint64_t *)v17;
              }
              uint64_t v17 = *v22;
            }
            while (*v22);
            if (v19 != v15 && (int v23 = *((_DWORD *)v19 + 8), v18 >= v23))
            {
              int v48 = v19;
              sub_100DAFE38(a1, (uint64_t)&v48, (uint64_t)&v49, a3);
              uint64_t v27 = a1[8];
              if (!v27) {
                return;
              }
              int v28 = *a2;
              char v29 = v5;
              do
              {
                int v30 = *(_DWORD *)(v27 + 32);
                BOOL v31 = v30 < v28;
                if (v30 >= v28) {
                  int v32 = (uint64_t *)v27;
                }
                else {
                  int v32 = (uint64_t *)(v27 + 8);
                }
                if (!v31) {
                  char v29 = (void *)v27;
                }
                uint64_t v27 = *v32;
              }
              while (*v32);
              if (v29 == v5 || v28 < *((_DWORD *)v29 + 8)) {
                return;
              }
              __int16 v49 = v29;
              uint64_t v34 = v29[6];
              uint64_t v14 = v29 + 6;
              uint64_t v33 = v34;
              if (v34)
              {
                char v35 = v14;
                uint64_t v36 = v33;
                do
                {
                  int v37 = *(_DWORD *)(v36 + 28);
                  BOOL v38 = v37 < v23;
                  if (v37 >= v23) {
                    __int16 v39 = (uint64_t *)v36;
                  }
                  else {
                    __int16 v39 = (uint64_t *)(v36 + 8);
                  }
                  if (!v38) {
                    char v35 = (void *)v36;
                  }
                  uint64_t v36 = *v39;
                }
                while (*v39);
                if (v35 == v14 || v23 < *((_DWORD *)v35 + 7))
                {
                  do
                  {
                    int v40 = *(_DWORD *)(v33 + 28);
                    BOOL v41 = v23 < v40;
                    if (v23 >= v40) {
                      char v42 = (uint64_t *)(v33 + 8);
                    }
                    else {
                      char v42 = (uint64_t *)v33;
                    }
                    if (v41) {
                      uint64_t v14 = (void *)v33;
                    }
                    uint64_t v33 = *v42;
                  }
                  while (*v42);
                }
                else
                {
                  int v43 = (void *)v35[1];
                  if (v43)
                  {
                    do
                    {
                      uint64_t v14 = v43;
                      int v43 = (void *)*v43;
                    }
                    while (v43);
                  }
                  else
                  {
                    do
                    {
                      uint64_t v14 = (void *)v35[2];
                      BOOL v44 = *v14 == (void)v35;
                      char v35 = v14;
                    }
                    while (!v44);
                  }
                }
              }
            }
            else
            {
LABEL_25:
              int v48 = a1 + 11;
              if (qword_102419580 != -1) {
                dispatch_once(&qword_102419580, &stru_1022F75C0);
              }
              BOOL v24 = qword_102419588;
              if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_FAULT))
              {
                __int16 v25 = a1 + 1;
                if (*((char *)a1 + 31) < 0) {
                  __int16 v25 = (void *)*v16;
                }
                int v26 = *((_DWORD *)v14 + 7);
                *(_DWORD *)long long buf = 136446466;
                __int16 v55 = v25;
                __int16 v56 = 1026;
                int v57 = v26;
                _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_FAULT, "%{public}s; unknown client %{public}d",
                  buf,
                  0x12u);
              }
              if (sub_10013D1A0(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_102419580 != -1) {
                  dispatch_once(&qword_102419580, &stru_1022F75C0);
                }
                id v45 = a1 + 1;
                if (*((char *)a1 + 31) < 0) {
                  id v45 = (void *)*v16;
                }
                int v46 = *((_DWORD *)v14 + 7);
                int v50 = 136446466;
                __int16 v51 = v45;
                __int16 v52 = 1026;
                int v53 = v46;
                char v47 = (char *)_os_log_send_and_compose_impl();
                sub_1004BA5E4("Generic", 1, 0, 0, "void CLNotifier<CLFenceAuthorizationManager_Type::Notification, CLFenceAuthorizationManager_Type::NotificationData>::invokeClientsWithData(const Notification_T &, CLCppContainer *) [Notification_T = CLFenceAuthorizationManager_Type::Notification, NotificationData_T = CLFenceAuthorizationManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v47);
                if (v47 != (char *)buf) {
                  free(v47);
                }
              }
            }
          }
          while (v14 != v49 + 6);
        }
      }
    }
  }
}

unsigned char *sub_100DAFE38(unsigned char *result, uint64_t a2, uint64_t a3, void *a4)
{
  if (!result[108])
  {
    uint64_t v7 = result;
    uint64_t v8 = *(unsigned int *)(*(void *)a2 + 32);
    LODWORD(v13) = *(_DWORD *)(*(void *)a3 + 32);
    id v9 = sub_100DB0118(a4);
    uint64_t v10 = *(void *)a3 + 80;
    BOOL v11 = (uint64_t **)(*(void *)a3 + 40);
    uint64_t v14 = (int *)(*(void *)a2 + 32);
    int v12 = sub_1000EB1B8(v11, v14, (uint64_t)&unk_101D0B290, &v14);
    id result = (unsigned char *)(*(uint64_t (**)(unsigned char *, uint64_t, uint64_t *, id, uint64_t, uint64_t **))(*(void *)v7 + 192))(v7, v8, &v13, v9, v10, v12 + 4);
    if (result) {
      return [*(id *)(*(void *)a2 + 64) onNotification:*(unsigned int *)(*(void *)a3 + 32) withData:a4 v13];
    }
  }
  return result;
}

uint64_t sub_100DAFF30@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = (char *)operator new(0x38uLL);
  uint64_t result = sub_100DAFF8C((uint64_t)v4, a1);
  *a2 = v4 + 24;
  a2[1] = v4;
  return result;
}

void sub_100DAFF78(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100DAFF8C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 8) = 0u;
  *(void *)a1 = off_1022F7730;
  *(_OWORD *)(a1 + 32) = 0u;
  *(void *)(a1 + 24) = 0;
  sub_1009203E4((char *)(a1 + 24), *(long long **)a2, *(long long **)(a2 + 8), 0xEF7BDEF7BDEF7BDFLL * ((uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 3));
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 24);
  return a1;
}

void sub_100DB0010(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_100DB0024(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1022F7730;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100DB0044(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1022F7730;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_100DB0098(uint64_t a1)
{
  id v1 = (void **)(a1 + 24);
  sub_10008DF5C(&v1);
}

uint64_t sub_100DB00C8(uint64_t result)
{
  if (*(void *)(result + 32))
  {
    id v1 = *(void ***)(result + 32);
    sub_10008DF5C(&v1);
    operator delete();
  }
  return result;
}

id sub_100DB0118(void *a1)
{
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    return 0;
  }

  return sub_100DB0178(a1);
}

id sub_100DB0178(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (v2)
  {
    if (getenv("_INTERSILO_UNIT_TEST"))
    {
      if (qword_102418F90 != -1) {
        dispatch_once(&qword_102418F90, &stru_1022F7770);
      }
      uint64_t v3 = qword_102418F98;
      if (!os_log_type_enabled((os_log_t)qword_102418F98, OS_LOG_TYPE_ERROR)) {
        return 0;
      }
      int v8 = 134218498;
      id v9 = v2;
      __int16 v10 = 2048;
      uint64_t v11 = 0;
      __int16 v12 = 2080;
      unint64_t v13 = 0x8000000101D8E122 & 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v4 = v3;
      os_log_type_t v5 = OS_LOG_TYPE_ERROR;
    }
    else
    {
      if (qword_102418F90 != -1) {
        dispatch_once(&qword_102418F90, &stru_1022F7770);
      }
      uint64_t v7 = qword_102418F98;
      if (!os_log_type_enabled((os_log_t)qword_102418F98, OS_LOG_TYPE_FAULT)) {
        return 0;
      }
      int v8 = 134218498;
      id v9 = v2;
      __int16 v10 = 2048;
      uint64_t v11 = 0;
      __int16 v12 = 2080;
      unint64_t v13 = 0x8000000101D8E122 & 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v4 = v7;
      os_log_type_t v5 = OS_LOG_TYPE_FAULT;
    }
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly", (uint8_t *)&v8, 0x20u);
    return 0;
  }

  return [a1 cppObjectPtr];
}

void sub_100DB0360(id a1)
{
  qword_102418F98 = (uint64_t)os_log_create("com.apple.locationd.Support", "Support");
}

void sub_100DB0390(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100DB0390(a1, *a2);
    sub_100DB0390(a1, a2[1]);
    sub_1002E4FF4((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

uint64_t sub_100DB03EC(uint64_t a1, const void **a2)
{
  id v2 = *(const void ***)(a1 + 8);
  if (v2)
  {
    uint64_t v4 = a1 + 16;
    uint64_t v5 = 1;
    do
    {
      if ((sub_100DB046C(v4, a2, v2 + 4) & 1) == 0)
      {
        if (!sub_100DB046C(v4, v2 + 4, a2)) {
          return v5;
        }
        ++v2;
      }
      id v2 = (const void **)*v2;
    }
    while (v2);
  }
  return 0;
}

uint64_t sub_100DB046C(uint64_t a1, const void **a2, const void **a3)
{
  int v5 = *((char *)a3 + 23);
  int v6 = *((char *)a2 + 23);
  if (v6 >= 0) {
    size_t v7 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v7 = (size_t)a2[1];
  }
  if (v6 >= 0) {
    int v8 = a2;
  }
  else {
    int v8 = *a2;
  }
  if (v5 >= 0) {
    size_t v9 = *((unsigned __int8 *)a3 + 23);
  }
  else {
    size_t v9 = (size_t)a3[1];
  }
  if (v5 >= 0) {
    __int16 v10 = a3;
  }
  else {
    __int16 v10 = *a3;
  }
  if (v9 >= v7) {
    size_t v11 = v7;
  }
  else {
    size_t v11 = v9;
  }
  int v12 = memcmp(v8, v10, v11);
  BOOL v13 = v7 < v9;
  if (v12) {
    BOOL v13 = v12 < 0;
  }
  if (v13) {
    return 1;
  }
  int v15 = memcmp(v10, v8, v11);
  BOOL v16 = v9 < v7;
  if (v15) {
    BOOL v16 = v15 < 0;
  }
  if (v16) {
    return 0;
  }
  int v19 = (const void **)a3[3];
  int v18 = a3 + 3;
  uint64_t v17 = v19;
  int v20 = *((char *)v18 + 23);
  int v23 = (const void **)a2[3];
  BOOL v22 = a2 + 3;
  BOOL v21 = v23;
  int v24 = *((char *)v22 + 23);
  if (v24 >= 0) {
    size_t v25 = *((unsigned __int8 *)v22 + 23);
  }
  else {
    size_t v25 = (size_t)v22[1];
  }
  if (v24 >= 0) {
    int v26 = v22;
  }
  else {
    int v26 = v21;
  }
  if (v20 >= 0) {
    size_t v27 = *((unsigned __int8 *)v18 + 23);
  }
  else {
    size_t v27 = (size_t)v18[1];
  }
  if (v20 >= 0) {
    int v28 = v18;
  }
  else {
    int v28 = v17;
  }
  if (v27 >= v25) {
    size_t v29 = v25;
  }
  else {
    size_t v29 = v27;
  }
  int v30 = memcmp(v26, v28, v29);
  if (v30) {
    return v30 < 0;
  }
  else {
    return v25 < v27;
  }
}

uint64_t *sub_100DB0598(uint64_t **a1, const void **a2, long long *a3)
{
  int v5 = (uint64_t **)sub_100DB062C((uint64_t)a1, &v10, a2);
  int v6 = *v5;
  if (!*v5)
  {
    size_t v7 = v5;
    sub_100DB06CC((uint64_t)a1, a3, (uint64_t)v9);
    sub_1000EDF90(a1, v10, v7, v9[0]);
    int v6 = v9[0];
    v9[0] = 0;
    sub_100DB0738((uint64_t)v9, 0);
  }
  return v6;
}

void *sub_100DB062C(uint64_t a1, void *a2, const void **a3)
{
  int v5 = (void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    uint64_t v7 = a1 + 16;
    do
    {
      while (1)
      {
        int v8 = (void *)v4;
        size_t v9 = (const void **)(v4 + 32);
        if (!sub_100DB046C(v7, a3, (const void **)(v4 + 32))) {
          break;
        }
        uint64_t v4 = *v8;
        int v5 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (!sub_100DB046C(v7, v9, a3)) {
        break;
      }
      int v5 = v8 + 1;
      uint64_t v4 = v8[1];
    }
    while (v4);
  }
  else
  {
    int v8 = (void *)(a1 + 8);
  }
LABEL_10:
  *a2 = v8;
  return v5;
}

char *sub_100DB06CC@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  int v6 = (char *)operator new(0x50uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = sub_1003413EC(v6 + 32, a2);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_100DB0720(_Unwind_Exception *a1)
{
  sub_100DB0738(v1, 0);
  _Unwind_Resume(a1);
}

void sub_100DB0738(uint64_t a1, uint64_t a2)
{
  id v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_1002E4FF4((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

void sub_100DB0790(uint64_t a1, std::string *__str, long long *a3, unint64_t a4)
{
  uint64_t v8 = a1 + 16;
  size_t v9 = *(std::string **)a1;
  if (0xEF7BDEF7BDEF7BDFLL * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3) < a4)
  {
    sub_100DB0934((void **)a1);
    if (a4 > 0x108421084210842) {
      sub_1001D7FD4();
    }
    unint64_t v10 = 0xDEF7BDEF7BDEF7BELL * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3);
    if (v10 <= a4) {
      unint64_t v10 = a4;
    }
    if (0xEF7BDEF7BDEF7BDFLL * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3) >= 0x84210842108421) {
      unint64_t v11 = 0x108421084210842;
    }
    else {
      unint64_t v11 = v10;
    }
    sub_10092046C((void *)a1, v11);
    int v12 = sub_100920510(v8, (long long *)__str, a3, *(char **)(a1 + 8));
    goto LABEL_11;
  }
  if (0xEF7BDEF7BDEF7BDFLL * ((uint64_t)(*(void *)(a1 + 8) - (void)v9) >> 3) < a4)
  {
    BOOL v13 = (std::string *)((char *)__str + 8 * ((uint64_t)(*(void *)(a1 + 8) - (void)v9) >> 3));
    sub_100DB09A4((int)&v17, __str, v13, v9);
    int v12 = sub_100920510(v8, (long long *)v13, a3, *(char **)(a1 + 8));
LABEL_11:
    *(void *)(a1 + 8) = v12;
    return;
  }
  sub_100DB09A4((int)&v18, __str, (std::string *)a3, v9);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16 != v14)
  {
    do
    {
      v16 -= 248;
      sub_10091F570(v8, v16);
    }
    while (v16 != v15);
  }
  *(void *)(a1 + 8) = v15;
}

void sub_100DB0924(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_100DB092C(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_100DB0934(void **a1)
{
  uint64_t v1 = *a1;
  if (*a1)
  {
    uint64_t v3 = (uint64_t)a1[1];
    uint64_t v4 = *a1;
    if ((void *)v3 != v1)
    {
      do
      {
        v3 -= 248;
        sub_10091F570((uint64_t)(a1 + 2), v3);
      }
      while ((void *)v3 != v1);
      uint64_t v4 = *a1;
    }
    a1[1] = v1;
    operator delete(v4);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

std::string *sub_100DB09A4(int a1, std::string *__str, std::string *a3, std::string *this)
{
  uint64_t v5 = __str;
  if (__str == a3) {
    return __str;
  }
  int v6 = a3;
  do
  {
    std::string::operator=(this, v5);
    std::string::operator=(this + 1, v5 + 1);
    std::string::operator=(this + 2, v5 + 2);
    long long v7 = *(_OWORD *)&v5[3].__r_.__value_.__r.__words[2];
    long long v8 = *(_OWORD *)&v5[4].__r_.__value_.__r.__words[1];
    long long v9 = *(_OWORD *)&v5[5].__r_.__value_.__l.__data_;
    *(_OWORD *)&this[3].__r_.__value_.__l.__data_ = *(_OWORD *)&v5[3].__r_.__value_.__l.__data_;
    *(_OWORD *)&this[5].__r_.__value_.__l.__data_ = v9;
    *(_OWORD *)&this[4].__r_.__value_.__r.__words[1] = v8;
    *(_OWORD *)&this[3].__r_.__value_.__r.__words[2] = v7;
    long long v10 = *(_OWORD *)&v5[6].__r_.__value_.__r.__words[1];
    long long v11 = *(_OWORD *)&v5[7].__r_.__value_.__l.__data_;
    std::string::size_type v12 = *(std::string::size_type *)((char *)&v5[7].__r_.__value_.__r.__words[1] + 5);
    *(_OWORD *)&this[5].__r_.__value_.__r.__words[2] = *(_OWORD *)&v5[5].__r_.__value_.__r.__words[2];
    *(std::string::size_type *)((char *)&this[7].__r_.__value_.__r.__words[1] + 5) = v12;
    *(_OWORD *)&this[7].__r_.__value_.__l.__data_ = v11;
    *(_OWORD *)&this[6].__r_.__value_.__r.__words[1] = v10;
    std::string::operator=(this + 8, v5 + 8);
    std::string::pointer data = this[9].__r_.__value_.__l.__data_;
    this[9].__r_.__value_.__r.__words[0] = (std::string::size_type)v5[9].__r_.__value_.__l.__data_;

    if (this != v5) {
      sub_10027C3B4(&this[9].__r_.__value_.__s.__data_[8], (char *)v5[9].__r_.__value_.__l.__size_, v5[9].__r_.__value_.__r.__words[2], (uint64_t)(v5[9].__r_.__value_.__r.__words[2] - v5[9].__r_.__value_.__l.__size_) >> 4);
    }
    this = (std::string *)((char *)this + 248);
    uint64_t v5 = (std::string *)((char *)v5 + 248);
  }
  while (v5 != v6);
  return v6;
}

long long *sub_100DB0A9C(long long *a1, long long *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  if (a1 != a2)
  {
    do
    {
      sub_1001AC054(a3, v4);
      uint64_t v4 = (long long *)((char *)v4 + 248);
      a3 += 248;
    }
    while (v4 != a2);
    return a2;
  }
  return v4;
}

void sub_100DB0AFC(void ***a1)
{
  uint64_t v2 = (uint64_t *)*a1;
  if (*v2)
  {
    sub_100959F1C((uint64_t)v2, *v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

uint64_t sub_100DB0B50(uint64_t a1)
{
  *(void *)a1 = &off_1022F77A0;
  uint64_t v2 = (id *)(a1 + 8);
  [*(id *)(a1 + 16) forget:*(void *)(a1 + 8)];

  [*v2 invalidate];
  id *v2 = 0;
  *(void *)(a1 + 16) = 0;
  return a1;
}

void sub_100DB0BC0()
{
}

void sub_100DB0C9C()
{
}

uint64_t sub_100DB0CC0(uint64_t result)
{
  if (*(void *)(result + 32))
  {
    uint64_t v1 = *(void ***)(result + 32);
    sub_10008DF5C(&v1);
    operator delete();
  }
  return result;
}

BOOL sub_100DB0D1C()
{
  uint64_t v1 = qword_1024193C8;
  return os_log_type_enabled(v1, OS_LOG_TYPE_FAULT);
}

BOOL sub_100DB0D3C()
{
  uint64_t v2 = *(NSObject **)(v0 + 968);
  return os_log_type_enabled(v2, OS_LOG_TYPE_INFO);
}

BOOL sub_100DB0D58()
{
  uint64_t v2 = *(NSObject **)(v0 + 968);
  return os_signpost_enabled(v2);
}

uint64_t sub_100DB0D70()
{
  sub_100134750(qword_1024814C8, "FenceAuthorizationManager");

  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_1024814C8, (void *)&_mh_execute_header);
}

void sub_100DB101C(id a1)
{
  qword_102419298 = (uint64_t)os_log_create("com.apple.locationd.Motion", "RunningForm");
}

void *sub_100DB104C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_10065AA18((uint64_t)v12, a3);
  sub_10065AB34((uint64_t)v11, a4);
  sub_10065AC50((uint64_t)v10, a5);
  sub_100DD5888((uint64_t)a1, a2, @"Geofence", 0, 1, (uint64_t)v12, (uint64_t)v11, (uint64_t)v10);
  sub_10065ACE8(v10);
  sub_10065ABCC(v11);
  sub_10065AAB0(v12);
  *a1 = off_1022F77E8;
  sub_1000E9354(a1 + 17);
  return a1;
}

void sub_100DB1140(_Unwind_Exception *a1)
{
  sub_100DD5960(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100DB1190(void *a1)
{
  *a1 = off_1022F77E8;
  sub_10013F3C4(a1 + 17);

  return sub_100DD5960((uint64_t)a1);
}

void sub_100DB11E4(void *a1)
{
  *a1 = off_1022F77E8;
  sub_10013F3C4(a1 + 17);
  sub_100DD5960((uint64_t)a1);

  operator delete();
}

uint64_t sub_100DB124C(uint64_t a1)
{
  if (qword_102419600 != -1) {
    dispatch_once(&qword_102419600, &stru_1022F7888);
  }
  uint64_t v2 = qword_102419608;
  if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [*(id *)(a1 + 16) UTF8String];
    *(_DWORD *)long long buf = 136446210;
    id v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#CLConfig,%{public}s,clearOutAssetData", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F7888);
    }
    [*(id *)(a1 + 16) UTF8String];
    uint64_t v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLGeofenceConfigAsset::clearOutAssetData()", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
  sub_1000E9354(buf);
  sub_1004CE798(a1 + 136, (uint64_t)buf);
  return sub_10013F3C4(buf);
}

void sub_100DB1428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_10013F3C4(va);
  _Unwind_Resume(a1);
}

void sub_100DB1444(uint64_t a1)
{
  if (qword_102419600 != -1) {
    dispatch_once(&qword_102419600, &stru_1022F7888);
  }
  uint64_t v2 = qword_102419608;
  if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [*(id *)(a1 + 16) UTF8String];
    int v4 = sub_1007E72D8(*(void **)(a1 + 128));
    int v5 = sub_1007E7290(*(void **)(a1 + 128));
    LODWORD(buf[0].__r_.__value_.__l.__data_) = 136446722;
    *(std::string::size_type *)((char *)buf[0].__r_.__value_.__r.__words + 4) = (std::string::size_type)v3;
    WORD2(buf[0].__r_.__value_.__r.__words[1]) = 1026;
    *(_DWORD *)((char *)&buf[0].__r_.__value_.__r.__words[1] + 6) = v4;
    WORD1(buf[0].__r_.__value_.__r.__words[2]) = 1026;
    HIDWORD(buf[0].__r_.__value_.__r.__words[2]) = v5;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#CLConfig,%{public}s,sending kNotificationGeofenceSettings for asset,compatibilityVersion,%{public}d,contentVersion,%{public}d", (uint8_t *)buf, 0x18u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F7888);
    }
    id v15 = [*(id *)(a1 + 16) UTF8String];
    int v16 = sub_1007E72D8(*(void **)(a1 + 128));
    int v17 = sub_1007E7290(*(void **)(a1 + 128));
    LODWORD(v25.__r_.__value_.__l.__data_) = 136446722;
    *(std::string::size_type *)((char *)v25.__r_.__value_.__r.__words + 4) = (std::string::size_type)v15;
    WORD2(v25.__r_.__value_.__r.__words[1]) = 1026;
    *(_DWORD *)((char *)&v25.__r_.__value_.__r.__words[1] + 6) = v16;
    WORD1(v25.__r_.__value_.__r.__words[2]) = 1026;
    HIDWORD(v25.__r_.__value_.__r.__words[2]) = v17;
    char v18 = (std::string *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLGeofenceConfigAsset::sendNotifications()", "%s\n", (const char *)v18);
    if (v18 != buf) {
      free(v18);
    }
  }
  sub_100134750(&v25, "#CLConfig,");
  int v6 = std::string::append(&v25, (const std::string::value_type *)[*(id *)(a1 + 16) UTF8String]);
  long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  buf[0].__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  sub_100134750(__p, ",kNotificationGeofenceSettings,");
  if ((v23 & 0x80u) == 0) {
    long long v8 = __p;
  }
  else {
    long long v8 = (void **)__p[0];
  }
  if ((v23 & 0x80u) == 0) {
    std::string::size_type v9 = v23;
  }
  else {
    std::string::size_type v9 = (std::string::size_type)__p[1];
  }
  long long v10 = std::string::append(buf, (const std::string::value_type *)v8, v9);
  long long v11 = (void *)v10->__r_.__value_.__r.__words[0];
  unint64_t size = v10->__r_.__value_.__l.__size_;
  v24[0] = v10->__r_.__value_.__r.__words[2];
  *(_DWORD *)((char *)v24 + 3) = *(_DWORD *)((char *)&v10->__r_.__value_.__r.__words[2] + 3);
  int v13 = SHIBYTE(v10->__r_.__value_.__r.__words[2]);
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  if ((char)v23 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(buf[0].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(buf[0].__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v25.__r_.__value_.__l.__data_);
    if ((v13 & 0x80000000) == 0) {
      goto LABEL_18;
    }
  }
  else if ((v13 & 0x80000000) == 0)
  {
LABEL_18:
    *(void *)&long long __dst = v11;
    *((void *)&__dst + 1) = size;
    *(_DWORD *)int v20 = v24[0];
    *(_DWORD *)&_OWORD v20[3] = *(_DWORD *)((char *)v24 + 3);
    char v21 = v13;
    goto LABEL_21;
  }
  sub_1000DC48C(&__dst, v11, size);
LABEL_21:
  uint64_t v14 = (void *)sub_1000E9358(a1 + 136);
  sub_1007E7320(&__dst, v14);
  if (v21 < 0) {
    operator delete((void *)__dst);
  }
  sub_100DD8718(a1, 5, a1 + 136);
  if (v13 < 0) {
    operator delete(v11);
  }
}

void sub_100DB17A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  if (a37 < 0) {
    operator delete(a32);
  }
  if (a30 < 0) {
    operator delete(a25);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DB181C(uint64_t a1)
{
  sub_100DD6DC0(a1, @"settings.plist", a1 + 136);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 120);

  return v2(a1);
}

void sub_100DB1880(id a1)
{
  qword_102419608 = (uint64_t)os_log_create("com.apple.locationd.Utility", "Utility");
}

uint64_t sub_100DB2020(uint64_t a1, long long *a2, uint64_t *a3, void *a4)
{
  uint64_t v6 = sub_10064DE4C(a1, a3, a4);
  *(void *)uint64_t v6 = off_1022F78B8;
  long long v8 = (char *)(v6 + 232);
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000DC48C((unsigned char *)(v6 + 232), *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v9 = *a2;
    *(void *)(v6 + 248) = *((void *)a2 + 2);
    *(_OWORD *)long long v8 = v9;
  }
  nullsub_41(a1 + 256, v7);
  *(unsigned char *)(a1 + 257) = 0;
  if (sub_10014C3C0(a1 + 64))
  {
    long long v10 = v8;
    if (*(char *)(a1 + 255) < 0) {
      long long v10 = *(char **)v8;
    }
    sub_1005F7B0C(a1 + 64, v10, (const char **)&qword_1024814F8, 0, 0);
    sub_10064DFA4(a1);
  }
  else
  {
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022F78F8);
    }
    long long v11 = qword_1024193A8;
    if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "#Warning CLWifiAssociatedApCentroidDatabase is not valid, not initializing. Please re-initialize if needed", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193A0 != -1) {
        dispatch_once(&qword_1024193A0, &stru_1022F78F8);
      }
      int v13 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "CLWifiAssociatedApCentroidDatabase::CLWifiAssociatedApCentroidDatabase(const std::string &, const CLSqliteDatabase::SqliteProperties &, const CFTimeInterval &)", "%s\n", v13);
      if (v13 != (char *)buf) {
        free(v13);
      }
    }
  }
  return a1;
}

void sub_100DB2260(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 255) < 0) {
    operator delete(*v2);
  }
  sub_10064DF48(v1);
  _Unwind_Resume(a1);
}

char *sub_100DB2290@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0x100000002;
  *(_WORD *)(a2 + 8) = 256;
  uint64_t v3 = a2 + 16;
  if (result[23] < 0)
  {
    uint64_t result = (char *)sub_1000DC48C((unsigned char *)v3, *(void **)result, *((void *)result + 1));
  }
  else
  {
    *(_OWORD *)uint64_t v3 = *(_OWORD *)result;
    *(void *)(v3 + 16) = *((void *)result + 2);
  }
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_100DB22F4(uint64_t a1, char *a2)
{
  sub_100DB2290(a2, (uint64_t)v5);
  unint64_t v4 = 0xBFF0000000000000;
  sub_100DB2020(a1, &xmmword_1024814E0, v5, &v4);
  if (v6 < 0) {
    operator delete((void *)v5[2]);
  }
  return a1;
}

void sub_100DB235C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DB2378(uint64_t a1)
{
  if (sub_10064E538(a1))
  {
    sub_10010F274((uint64_t)&v44);
    uint64_t v2 = sub_100132EFC(&v45, (uint64_t)"INSERT OR REPLACE INTO ", 23);
    int v3 = *(char *)(a1 + 255);
    if (v3 >= 0) {
      uint64_t v4 = a1 + 232;
    }
    else {
      uint64_t v4 = *(void *)(a1 + 232);
    }
    if (v3 >= 0) {
      uint64_t v5 = *(unsigned __int8 *)(a1 + 255);
    }
    else {
      uint64_t v5 = *(void *)(a1 + 240);
    }
    char v6 = sub_100132EFC(v2, v4, v5);
    uint64_t v7 = sub_100132EFC(v6, (uint64_t)"(", 3);
    long long v8 = sub_100132EFC(v7, (uint64_t)"MAC", 3);
    long long v9 = sub_100132EFC(v8, (uint64_t)",", 1);
    size_t v10 = strlen("Latitude");
    long long v11 = sub_100132EFC(v9, (uint64_t)"Latitude", v10);
    std::string::size_type v12 = sub_100132EFC(v11, (uint64_t)",", 1);
    size_t v13 = strlen("Longitude");
    uint64_t v14 = sub_100132EFC(v12, (uint64_t)"Longitude", v13);
    id v15 = sub_100132EFC(v14, (uint64_t)",", 1);
    size_t v16 = strlen("HorizontalAccuracy");
    int v17 = sub_100132EFC(v15, (uint64_t)"HorizontalAccuracy", v16);
    char v18 = sub_100132EFC(v17, (uint64_t)",", 1);
    size_t v19 = strlen("Altitude");
    int v20 = sub_100132EFC(v18, (uint64_t)"Altitude", v19);
    char v21 = sub_100132EFC(v20, (uint64_t)",", 1);
    size_t v22 = strlen("VerticalAccuracy");
    unsigned __int8 v23 = sub_100132EFC(v21, (uint64_t)"VerticalAccuracy", v22);
    int v24 = sub_100132EFC(v23, (uint64_t)",", 1);
    size_t v25 = strlen("Reach");
    int v26 = sub_100132EFC(v24, (uint64_t)"Reach", v25);
    size_t v27 = sub_100132EFC(v26, (uint64_t)",", 1);
    int v28 = sub_100132EFC(v27, (uint64_t)"LastUpdatedTimestamp", 20);
    size_t v29 = sub_100132EFC(v28, (uint64_t)",", 1);
    int v30 = sub_100132EFC(v29, (uint64_t)"StationaryTimeInSeconds", 23);
    BOOL v31 = sub_100132EFC(v30, (uint64_t)",", 1);
    int v32 = sub_100132EFC(v31, (uint64_t)"LoiType", 7);
    uint64_t v33 = sub_100132EFC(v32, (uint64_t)",", 1);
    uint64_t v34 = sub_100132EFC(v33, (uint64_t)"CKRecordName", 12);
    char v35 = sub_100132EFC(v34, (uint64_t)",", 1);
    uint64_t v36 = sub_100132EFC(v35, (uint64_t)"CKSystemFields", 14);
    int v37 = sub_100132EFC(v36, (uint64_t)") VALUES ", 9);
    sub_100132EFC(v37, (uint64_t)"(?,?,?,?,?,?,?,?,?,?,?,?);", 26);
    std::stringbuf::str();
    if (v43 >= 0) {
      BOOL v38 = &v42;
    }
    else {
      BOOL v38 = v42;
    }
    sub_10014D518(a1 + 64, (uint64_t)v38);
  }
  if (qword_1024193A0 != -1) {
    dispatch_once(&qword_1024193A0, &stru_1022F78F8);
  }
  __int16 v39 = qword_1024193A8;
  if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEBUG, "#Warning Attempt to call insertOrReplace() without a backing database in CLWifiAssociatedApCentroidDatabase!", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022F78F8);
    }
    LOWORD(v44) = 0;
    BOOL v41 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLWifiAssociatedApCentroidDatabase::insertOrReplace(const CLWifiAssociatedApCentroidDatabaseEntry &)", "%s\n", v41);
    if (v41 != (char *)buf) {
      free(v41);
    }
  }
  return 0;
}

void sub_100DB2EB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,char a25)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a18) {
    (*(void (**)(uint64_t))(*(void *)a18 + 8))(a18);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  sub_101A129A8((uint64_t)&a25);
  _Unwind_Resume(a1);
}

void sub_100DB2F58(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (sub_10064E538(a1))
  {
    sub_10010F274((uint64_t)&v21);
    char v6 = sub_100132EFC(&v22, (uint64_t)"SELECT * FROM ", 14);
    int v7 = *(char *)(a1 + 255);
    if (v7 >= 0) {
      uint64_t v8 = a1 + 232;
    }
    else {
      uint64_t v8 = *(void *)(a1 + 232);
    }
    if (v7 >= 0) {
      uint64_t v9 = *(unsigned __int8 *)(a1 + 255);
    }
    else {
      uint64_t v9 = *(void *)(a1 + 240);
    }
    sub_100132EFC(v6, v8, v9);
    if (*(unsigned char *)a2)
    {
      size_t v10 = sub_100DB62AC((int *)(a2 + 8));
      {
        long long v11 = sub_100132EFC(&v22, (uint64_t)" WHERE ", 7);
        std::string::size_type v12 = "MAC";
        uint64_t v13 = 3;
      }
      else
      {
        if (!*(unsigned char *)a2) {
          goto LABEL_21;
        }
        id v15 = sub_100DB62AC((int *)(a2 + 8));
          goto LABEL_21;
        long long v11 = sub_100132EFC(&v22, (uint64_t)" WHERE ", 7);
        std::string::size_type v12 = "CKRecordName";
        uint64_t v13 = 12;
      }
      size_t v16 = sub_100132EFC(v11, (uint64_t)v12, v13);
      sub_100132EFC(v16, (uint64_t)" = ?", 4);
    }
LABEL_21:
    std::stringbuf::str();
    if (v20 >= 0) {
      int v17 = &v19;
    }
    else {
      int v17 = v19;
    }
    sub_10014D518(a1 + 64, (uint64_t)v17);
  }
  if (qword_1024193A0 != -1) {
    dispatch_once(&qword_1024193A0, &stru_1022F78F8);
  }
  uint64_t v14 = qword_1024193A8;
  if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "#Warning Attempt to call getAllEntries() without a backing database in CLWifiAssociatedApCentroidDatabase!", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022F78F8);
    }
    LOWORD(v21) = 0;
    char v18 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "std::vector<CLWifiAssociatedApCentroidDatabaseEntry> CLWifiAssociatedApCentroidDatabase::getEntries(OptionalQueryParam) const", "%s\n", v18);
    if (v18 != (char *)buf) {
      free(v18);
    }
  }
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
}

void sub_100DB3858(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  sub_100946620((void ***)&a70);
  if (a23) {
    (*(void (**)(uint64_t))(*(void *)a23 + 8))(a23);
  }
  if (a29 < 0) {
    operator delete(__p);
  }
  sub_101A129A8((uint64_t)&a30);
  _Unwind_Resume(a1);
}

unsigned char *sub_100DB3950(unsigned char *a1)
{
  if (!*a1)
  {
    std::logic_error::logic_error(&v2, "Attempted to access the value of an uninitialized optional object.");
    v2.__vftable = (std::logic_error_vtbl *)&off_1022F7A00;
    sub_100DB63A4(&v2);
  }
  return a1 + 8;
}

void sub_100DB39BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::logic_error a9)
{
}

void sub_100DB39D0(uint64_t a1@<X0>, void *a2@<X8>)
{
  v2[0] = 0;
  sub_100DB2F58(a1, (uint64_t)v2, a2);
  if (v2[0]) {
    sub_100DB7318((uint64_t)&v3);
  }
}

void sub_100DB3A40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, char a9, uint64_t a10)
{
  if (a9) {
    sub_100DB7318((uint64_t)&a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DB3A60(uint64_t a1@<X0>, void ****a2@<X1>, unsigned char *a3@<X8>)
{
  std::string::size_type v12 = *a2;
  LODWORD(v11) = 0;
  char v13 = 0;
  sub_100DB7370((uint64_t)v14, (uint64_t)&v11);
  char v13 = 1;
  sub_100DB7318((uint64_t)&v11);
  v9[0] = 0;
  if (v13)
  {
    sub_100DB616C(v10, (uint64_t)v14);
    v9[0] = 1;
  }
  sub_100DB2F58(a1, (uint64_t)v9, &v11);
  if (v9[0])
  {
    sub_100DB7318((uint64_t)v10);
    v9[0] = 0;
  }
  char v6 = v11;
  int v7 = v12;
  while (1)
  {
    if (v6 == v7)
    {
      uint64_t v8 = (void **)&v11;
      sub_100946620(&v8);
      *a3 = 0;
      a3[112] = 0;
      goto LABEL_11;
    }
    uint64_t v8 = *v6;
    if (sub_100B39178(&v8, a2)) {
      break;
    }
    v6 += 14;
  }
  sub_1008B5818(a3, v6);
  a3[112] = 1;
  uint64_t v8 = (void **)&v11;
  sub_100946620(&v8);
LABEL_11:
  if (v13) {
    sub_100DB7318((uint64_t)v14);
  }
}

void sub_100DB3BC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  a9 = (void **)&a15;
  sub_100946620(&a9);
  if (a19) {
    sub_100DB7318(v19);
  }
  _Unwind_Resume(a1);
}

void sub_100DB3C20(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  sub_100134750(v18, (char *)[objc_msgSend(objc_msgSend(a2, "recordName"), "UTF8String")]);
  if (SHIBYTE(v19) < 0)
  {
    sub_1000DC48C(&v23, v18[0], (unint64_t)v18[1]);
  }
  else
  {
    long long v23 = *(_OWORD *)v18;
    uint64_t v24 = v19;
  }
  LODWORD(v22) = 1;
  char v25 = 0;
  sub_100DB7370((uint64_t)v26, (uint64_t)&v22);
  char v25 = 1;
  sub_100DB7318((uint64_t)&v22);
  v20[0] = 0;
  if (v25)
  {
    sub_100DB616C(v21, (uint64_t)v26);
    v20[0] = 1;
  }
  sub_100DB2F58(a1, (uint64_t)v20, &v22);
  if (v20[0])
  {
    sub_100DB7318((uint64_t)v21);
    v20[0] = 0;
  }
  uint64_t v5 = v22;
  uint64_t v6 = v23;
  if (v22 == (void)v23)
  {
LABEL_35:
    __p[0] = &v22;
    sub_100946620((void ***)__p);
    *a3 = 0;
    a3[112] = 0;
    goto LABEL_37;
  }
  while (1)
  {
    if (*(char *)(v5 + 103) < 0)
    {
      sub_1000DC48C(__p, *(void **)(v5 + 80), *(void *)(v5 + 88));
    }
    else
    {
      *(_OWORD *)long long __p = *(_OWORD *)(v5 + 80);
      uint64_t v17 = *(void *)(v5 + 96);
    }
    if (v17 >= 0) {
      int v7 = (void *)HIBYTE(v17);
    }
    else {
      int v7 = __p[1];
    }
    uint64_t v8 = (void *)HIBYTE(v19);
    if (v19 < 0) {
      uint64_t v8 = v18[1];
    }
    if (v7 != v8)
    {
      if (v17 < 0) {
        operator delete(__p[0]);
      }
      goto LABEL_34;
    }
    uint64_t v9 = v19 >= 0 ? v18 : (void **)v18[0];
    if ((v17 & 0x8000000000000000) == 0) {
      break;
    }
    uint64_t v14 = __p[0];
    int v15 = memcmp(__p[0], v9, (size_t)__p[1]);
    operator delete(v14);
    if (!v15) {
      goto LABEL_36;
    }
LABEL_34:
    v5 += 112;
    if (v5 == v6) {
      goto LABEL_35;
    }
  }
  if (HIBYTE(v17))
  {
    uint64_t v10 = 0;
    do
    {
      int v11 = *((unsigned __int8 *)__p + v10);
      int v12 = *((unsigned __int8 *)v9 + v10);
    }
    while (v11 == v12 && HIBYTE(v17) - 1 != v10++);
    if (v11 != v12) {
      goto LABEL_34;
    }
  }
LABEL_36:
  sub_1008B5818(a3, v5);
  a3[112] = 1;
  __p[0] = &v22;
  sub_100946620((void ***)__p);
LABEL_37:
  if (v25) {
    sub_100DB7318((uint64_t)v26);
  }
  if (SHIBYTE(v19) < 0) {
    operator delete(v18[0]);
  }
}

void sub_100DB3E9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, char *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  a9 = &a24;
  sub_100946620((void ***)&a9);
  if (a28) {
    sub_100DB7318(v28);
  }
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100DB3F14(uint64_t a1)
{
  if (sub_10064E538(a1))
  {
    sub_10010F274((uint64_t)buf);
    std::logic_error v2 = sub_100132EFC(&v16, (uint64_t)"DELETE FROM ", 12);
    int v3 = *(char *)(a1 + 255);
    if (v3 >= 0) {
      uint64_t v4 = a1 + 232;
    }
    else {
      uint64_t v4 = *(void *)(a1 + 232);
    }
    if (v3 >= 0) {
      uint64_t v5 = *(unsigned __int8 *)(a1 + 255);
    }
    else {
      uint64_t v5 = *(void *)(a1 + 240);
    }
    uint64_t v6 = sub_100132EFC(v2, v4, v5);
    int v7 = sub_100132EFC(v6, (uint64_t)" WHERE ", 7);
    uint64_t v8 = sub_100132EFC(v7, (uint64_t)"MAC", 3);
    sub_100132EFC(v8, (uint64_t)" = ?;", 5);
    std::stringbuf::str();
    if (v14 >= 0) {
      p_p = &__p;
    }
    else {
      p_p = __p;
    }
    sub_10014D518(a1 + 64, (uint64_t)p_p);
  }
  if (qword_1024193A0 != -1) {
    dispatch_once(&qword_1024193A0, &stru_1022F78F8);
  }
  uint64_t v10 = qword_1024193A8;
  if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "#Warning Attempt to call deleteByMac() without a backing database in CLWifiAssociatedApCentroidDatabase!", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022F78F8);
    }
    LOWORD(__p) = 0;
    int v12 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLWifiAssociatedApCentroidDatabase::deleteByMac(const CLMacAddress &)", "%s\n", v12);
    if (v12 != (char *)buf) {
      free(v12);
    }
  }
  return 0;
}

void sub_100DB4324(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, char a20)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  sub_101A129A8((uint64_t)&a20);
  _Unwind_Resume(a1);
}

uint64_t sub_100DB4370(uint64_t a1)
{
  if (sub_10064E538(a1))
  {
    sub_10010F274((uint64_t)buf);
    std::logic_error v2 = sub_100132EFC(&v16, (uint64_t)"DELETE FROM ", 12);
    int v3 = *(char *)(a1 + 255);
    if (v3 >= 0) {
      uint64_t v4 = a1 + 232;
    }
    else {
      uint64_t v4 = *(void *)(a1 + 232);
    }
    if (v3 >= 0) {
      uint64_t v5 = *(unsigned __int8 *)(a1 + 255);
    }
    else {
      uint64_t v5 = *(void *)(a1 + 240);
    }
    uint64_t v6 = sub_100132EFC(v2, v4, v5);
    int v7 = sub_100132EFC(v6, (uint64_t)" WHERE ", 7);
    uint64_t v8 = sub_100132EFC(v7, (uint64_t)"CKRecordName", 12);
    sub_100132EFC(v8, (uint64_t)" = ?;", 5);
    std::stringbuf::str();
    if (v14 >= 0) {
      uint64_t v9 = &v13;
    }
    else {
      uint64_t v9 = v13;
    }
    sub_10014D518(a1 + 64, (uint64_t)v9);
  }
  if (qword_1024193A0 != -1) {
    dispatch_once(&qword_1024193A0, &stru_1022F78F8);
  }
  uint64_t v10 = qword_1024193A8;
  if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "#Warning Attempt to call deleteByCKRecordID() without a backing database in CLWifiAssociatedApCentroidDatabase!", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022F78F8);
    }
    LOWORD(v13) = 0;
    int v12 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLWifiAssociatedApCentroidDatabase::deleteByCKRecordID(CKRecordID *)", "%s\n", v12);
    if (v12 != (char *)buf) {
      free(v12);
    }
  }
  return 0;
}

void sub_100DB47A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,char a25)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  sub_101A129A8((uint64_t)&a25);
  _Unwind_Resume(a1);
}

uint64_t sub_100DB4828(uint64_t a1)
{
  if (sub_10064E538(a1))
  {
    sub_10010F274((uint64_t)buf);
    std::logic_error v2 = sub_100132EFC(&v14, (uint64_t)"DELETE FROM ", 12);
    int v3 = *(char *)(a1 + 255);
    if (v3 >= 0) {
      uint64_t v4 = a1 + 232;
    }
    else {
      uint64_t v4 = *(void *)(a1 + 232);
    }
    if (v3 >= 0) {
      uint64_t v5 = *(unsigned __int8 *)(a1 + 255);
    }
    else {
      uint64_t v5 = *(void *)(a1 + 240);
    }
    uint64_t v6 = sub_100132EFC(v2, v4, v5);
    sub_100132EFC(v6, (uint64_t)";", 1);
    std::stringbuf::str();
    if (v12 >= 0) {
      p_p = &__p;
    }
    else {
      p_p = __p;
    }
    sub_10014D518(a1 + 64, (uint64_t)p_p);
  }
  if (qword_1024193A0 != -1) {
    dispatch_once(&qword_1024193A0, &stru_1022F78F8);
  }
  uint64_t v8 = qword_1024193A8;
  if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "#Warning Attempt to call deleteAllRecords() without a backing database in CLWifiAssociatedApCentroidDatabase!", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022F78F8);
    }
    LOWORD(__p) = 0;
    uint64_t v10 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLWifiAssociatedApCentroidDatabase::deleteAllRecords()", "%s\n", v10);
    if (v10 != (char *)buf) {
      free(v10);
    }
  }
  return 0;
}

void sub_100DB4BE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, char a20)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  sub_101A129A8((uint64_t)&a20);
  _Unwind_Resume(a1);
}

id sub_100DB4C2C(uint64_t a1, void *a2)
{
  sub_100DB3C20(a1, a2, v11);
  if (v12)
  {
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022F78F8);
    }
    int v3 = qword_1024193A8;
    if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEBUG))
    {
      sub_1008B61F4((uint64_t)v11);
      uint64_t v4 = v22 >= 0 ? __p : *(unsigned char **)__p;
      *(_DWORD *)long long buf = 136380931;
      *(void *)&uint8_t buf[4] = v4;
      __int16 v14 = 2113;
      int v15 = a2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "CLWifiAssociatedApCentroidDatabase, found entry %{private}s for record ID %{private}@", buf, 0x16u);
      if (v22 < 0) {
        operator delete(*(void **)__p);
      }
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_1024193A0 != -1) {
        dispatch_once(&qword_1024193A0, &stru_1022F78F8);
      }
      sub_1008B61F4((uint64_t)v11);
      if (v16 >= 0) {
        uint64_t v8 = buf;
      }
      else {
        uint64_t v8 = *(unsigned char **)buf;
      }
      int v17 = 136380931;
      char v18 = v8;
      __int16 v19 = 2113;
      char v20 = a2;
      uint64_t v9 = (char *)_os_log_send_and_compose_impl();
      if (v16 < 0) {
        operator delete(*(void **)buf);
      }
      sub_1004BA5E4("Generic", 1, 0, 2, "CKRecord *CLWifiAssociatedApCentroidDatabase::ckRecordForRecordID(CKRecordID *) const", "%s\n", v9);
      if (v9 != __p) {
        free(v9);
      }
    }
    id v5 = sub_1008B5A74((uint64_t)v11);
  }
  else
  {
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022F78F8);
    }
    uint64_t v6 = qword_1024193A8;
    if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long __p = 138477827;
      *(void *)&__p[4] = a2;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "CLWifiAssociatedApCentroidDatabase, warning, entry is not found, no CKRecord is provided for record ID %{private}@", __p, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_1024193A0 != -1) {
        dispatch_once(&qword_1024193A0, &stru_1022F78F8);
      }
      *(_DWORD *)long long buf = 138477827;
      *(void *)&uint8_t buf[4] = a2;
      uint64_t v10 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "CKRecord *CLWifiAssociatedApCentroidDatabase::ckRecordForRecordID(CKRecordID *) const", "%s\n", v10);
      if (v10 != __p) {
        free(v10);
      }
    }
    id v5 = 0;
  }
  if (v12) {
    sub_1008B5A70(v11);
  }
  return v5;
}

void sub_100DB4FD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  if (a26) {
    sub_1008B5A70(&a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DB5008(uint64_t a1, void *a2, void *a3)
{
  sub_100DB3C20(a1, a2, v7);
  if (!v8) {
    return 0;
  }
  sub_1008B6180(v7, a3);
  if (!v8) {
    sub_10020D700();
  }
  uint64_t v5 = sub_100DB2378(a1);
  if (v8) {
    sub_1008B5A70(v7);
  }
  return v5;
}

void sub_100DB508C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  if (a24) {
    sub_1008B5A70(&a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DB50A8(uint64_t a1)
{
  if (sub_10064E538(a1))
  {
    sub_10010F274((uint64_t)&v13);
    std::logic_error v2 = sub_100132EFC(&v14, (uint64_t)"SELECT COUNT(*) FROM ", 21);
    int v3 = *(char *)(a1 + 255);
    if (v3 >= 0) {
      uint64_t v4 = a1 + 232;
    }
    else {
      uint64_t v4 = *(void *)(a1 + 232);
    }
    if (v3 >= 0) {
      uint64_t v5 = *(unsigned __int8 *)(a1 + 255);
    }
    else {
      uint64_t v5 = *(void *)(a1 + 240);
    }
    uint64_t v6 = sub_100132EFC(v2, v4, v5);
    sub_100132EFC(v6, (uint64_t)";", 1);
    std::stringbuf::str();
    if (v12 >= 0) {
      p_p = &__p;
    }
    else {
      p_p = __p;
    }
    sub_10014D518(a1 + 64, (uint64_t)p_p);
  }
  if (qword_1024193A0 != -1) {
    dispatch_once(&qword_1024193A0, &stru_1022F78F8);
  }
  char v8 = qword_1024193A8;
  if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "#Warning Attempt to call count() without a backing database in CLWifiAssociatedApCentroidDatabase!", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022F78F8);
    }
    LOWORD(v13) = 0;
    uint64_t v10 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "uint32_t CLWifiAssociatedApCentroidDatabase::count() const", "%s\n", v10);
    if (v10 != (char *)buf) {
      free(v10);
    }
  }
  return 0;
}

void sub_100DB5590(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18)
{
  if (v18) {
    (*(void (**)(uint64_t))(*(void *)v18 + 8))(v18);
  }
  if (a17 < 0) {
    operator delete(__p);
  }
  sub_101A129A8((uint64_t)&a18);
  _Unwind_Resume(a1);
}

void sub_100DB5600(uint64_t a1@<X0>, double *a2@<X1>, double *a3@<X2>, uint64_t *a4@<X8>)
{
  sub_100DB39D0(a1, v7);
  sub_100B8F034(v8, (uint64_t *)v7);
  uint64_t v9 = v7;
  sub_100946620((void ***)&v9);
  sub_100B8F338(v8, a2, a3, a4);
  v7[0] = (void **)v8;
  sub_100946620(v7);
}

void sub_100DB5680(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100946620((void ***)va);
  _Unwind_Resume(a1);
}

void sub_100DB56A8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>, double a4@<D0>)
{
  sub_100DB39D0(a1, v7);
  sub_100B8F034(v8, (uint64_t *)v7);
  uint64_t v9 = v7;
  sub_100946620((void ***)&v9);
  sub_100B8F408(v8, a2, a3, a4);
  v7[0] = (void **)v8;
  sub_100946620(v7);
}

void sub_100DB5730(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100946620((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100DB5758(uint64_t a1, uint64_t a2)
{
  if (!*(unsigned char *)(a1 + 257)) {
    return 0;
  }
  uint64_t result = sub_10064E538(a1);
  if (result)
  {
    uint64_t result = sub_1000E6DB4(a2);
    if (result)
    {
      double v5 = *((double *)sub_1014122A8() + 10);
      sub_100DB56A8(a1, a2, (uint64_t *)&v26, v5);
      if (qword_1024193A0 != -1) {
        dispatch_once(&qword_1024193A0, &stru_1022F78F8);
      }
      uint64_t v6 = qword_1024193A8;
      if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v8 = (uint64_t)v26;
        int v7 = v27;
        sub_100BCE3E8();
        uint64_t v9 = v35 >= 0 ? __p : *(unsigned char **)__p;
        *(_DWORD *)long long buf = 134349571;
        *(void *)&uint8_t buf[4] = 0x6DB6DB6DB6DB6DB7 * (((uint64_t)v7 - v8) >> 4);
        __int16 v38 = 2081;
        __int16 v39 = v9;
        __int16 v40 = 2050;
        double v41 = v5;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "CLWifiAssociatedApCentroidDatabase, purging %{public}lu records with location %{private}s and threshold %{public}.1f", buf, 0x20u);
        if (SHIBYTE(v35) < 0) {
          operator delete(*(void **)__p);
        }
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193A0 != -1) {
          dispatch_once(&qword_1024193A0, &stru_1022F78F8);
        }
        uint64_t v23 = (uint64_t)v26;
        char v22 = v27;
        sub_100BCE3E8();
        if (v31 >= 0) {
          uint64_t v24 = v28;
        }
        else {
          uint64_t v24 = *(unsigned char **)v28;
        }
        *(_DWORD *)long long __p = 134349571;
        *(void *)&__p[4] = 0x6DB6DB6DB6DB6DB7 * (((uint64_t)v22 - v23) >> 4);
        __int16 v33 = 2081;
        uint64_t v34 = v24;
        __int16 v35 = 2050;
        double v36 = v5;
        char v25 = (char *)_os_log_send_and_compose_impl();
        if (v31 < 0) {
          operator delete(*(void **)v28);
        }
        sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLWifiAssociatedApCentroidDatabase::purgeRecordsWithDistanceLargerThanThreshold(const CLDaemonLocation &)", "%s\n", v25);
        if (v25 != buf) {
          free(v25);
        }
      }
      uint64_t v10 = v26;
      for (uint64_t i = v27; v10 != i; v10 += 14)
      {
        if (qword_1024193A0 != -1) {
          dispatch_once(&qword_1024193A0, &stru_1022F78F8);
        }
        char v12 = qword_1024193A8;
        if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEBUG))
        {
          sub_1008B61F4((uint64_t)v10);
          int v13 = SHIBYTE(v40);
          uint64_t v14 = *(unsigned char **)buf;
          sub_1008B6958((uint64_t)v10, a2);
          *(_DWORD *)long long __p = 136380931;
          char v16 = buf;
          if (v13 < 0) {
            char v16 = v14;
          }
          *(void *)&__p[4] = v16;
          __int16 v33 = 2050;
          uint64_t v34 = v15;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "CLWifiAssociatedApCentroidDatabase, purging record %{private}s with distance %{public}.1f", __p, 0x16u);
          if (SHIBYTE(v40) < 0) {
            operator delete(*(void **)buf);
          }
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024193A0 != -1) {
            dispatch_once(&qword_1024193A0, &stru_1022F78F8);
          }
          sub_1008B61F4((uint64_t)v10);
          int v17 = SHIBYTE(v35);
          uint64_t v18 = *(unsigned char **)__p;
          sub_1008B6958((uint64_t)v10, a2);
          *(_DWORD *)uint64_t v28 = 136380931;
          char v20 = __p;
          if (v17 < 0) {
            char v20 = v18;
          }
          *(void *)&v28[4] = v20;
          __int16 v29 = 2050;
          uint64_t v30 = v19;
          uint64_t v21 = (char *)_os_log_send_and_compose_impl();
          if (SHIBYTE(v35) < 0) {
            operator delete(*(void **)__p);
          }
          sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLWifiAssociatedApCentroidDatabase::purgeRecordsWithDistanceLargerThanThreshold(const CLDaemonLocation &)", "%s\n", v21);
          if (v21 != buf) {
            free(v21);
          }
        }
        *(void *)long long buf = *v10;
        sub_100DB3F14(a1);
      }
      *(unsigned char *)(a1 + 257) = 0;
      *(void *)long long buf = &v26;
      sub_100946620((void ***)buf);
      return 1;
    }
  }
  return result;
}

void sub_100DB5C58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,char *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  a28 = &a14;
  sub_100946620((void ***)&a28);
  _Unwind_Resume(a1);
}

void sub_100DB5CC8(uint64_t a1)
{
  sub_100DB39D0(a1, v1);
  sub_100B8F034(v2, (uint64_t *)v1);
  int v3 = v1;
  sub_100946620((void ***)&v3);
  sub_100B8F654(v2);
  v1[0] = (void **)v2;
  sub_100946620(v1);
}

void sub_100DB5D30(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100946620((void ***)va);
  _Unwind_Resume(a1);
}

void sub_100DB5D58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 256;
  if (sub_10134E1FC())
  {
    sub_100DB39D0(a1, __p);
    sub_100B8F034(v13, (uint64_t *)__p);
    *(void *)long long buf = __p;
    sub_100946620((void ***)buf);
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022F78F8);
    }
    double v5 = qword_1024193A8;
    if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEBUG))
    {
      sub_100B8F654(v13);
      uint64_t v6 = v19 >= 0 ? __p : (void **)__p[0];
      *(_DWORD *)long long buf = 136380675;
      *(void *)&uint8_t buf[4] = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "CLWifiAssociatedApCentroidDatabase, metrics, %{private}s", buf, 0xCu);
      if (v19 < 0) {
        operator delete(__p[0]);
      }
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_1024193A0 != -1) {
        dispatch_once(&qword_1024193A0, &stru_1022F78F8);
      }
      sub_100B8F654(v13);
      if (v15 >= 0) {
        int v11 = buf;
      }
      else {
        int v11 = *(unsigned char **)buf;
      }
      int v16 = 136380675;
      int v17 = v11;
      char v12 = (char *)_os_log_send_and_compose_impl();
      if (v15 < 0) {
        operator delete(*(void **)buf);
      }
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiAssociatedApCentroidDatabase::submitMetricsIfPossible(const BOOL)", "%s\n", v12);
      if (v12 != (char *)__p) {
        free(v12);
      }
    }
    uint64_t v7 = sub_100B8F9D4(v13);
    sub_100B8F088((uint64_t *)v13);
    double v9 = v8;
    double v10 = sub_100B8F124((uint64_t *)v13);
    sub_10134E23C(v9, v10, v4, v7, a2);
    __p[0] = v13;
    sub_100946620((void ***)__p);
  }
}

void sub_100DB5FFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void **a22)
{
  a22 = (void **)&a12;
  sub_100946620(&a22);
  _Unwind_Resume(a1);
}

char *sub_100DB603C@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  if (result[255] < 0) {
    return (char *)sub_1000DC48C((unsigned char *)a2, *((void **)result + 29), *((void *)result + 30));
  }
  *(_OWORD *)a2 = *(_OWORD *)(result + 232);
  *(void *)(a2 + 16) = *((void *)result + 31);
  return result;
}

uint64_t sub_100DB6068(uint64_t a1)
{
  *(void *)a1 = off_1022F78B8;
  if (*(char *)(a1 + 255) < 0) {
    operator delete(*(void **)(a1 + 232));
  }

  return sub_10064DF48(a1);
}

void sub_100DB60C8(uint64_t a1)
{
  *(void *)a1 = off_1022F78B8;
  if (*(char *)(a1 + 255) < 0) {
    operator delete(*(void **)(a1 + 232));
  }
  sub_10064DF48(a1);

  operator delete();
}

void sub_100DB613C(id a1)
{
  qword_1024193A8 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

int *sub_100DB616C(int *a1, uint64_t a2)
{
  std::logic_error v2 = (void *)(a2 + 8);
  double v5 = a1 + 2;
  switch(*(_DWORD *)a2 ^ (*(int *)a2 >> 31))
  {
    case 0:
      *(void *)double v5 = *v2;
      break;
    case 1:
      if (*(char *)(a2 + 31) < 0)
      {
        sub_1000DC48C(v5, *(void **)(a2 + 8), *(void *)(a2 + 16));
      }
      else
      {
        long long v6 = *(_OWORD *)v2;
        *((void *)v5 + 2) = *(void *)(a2 + 24);
        *(_OWORD *)double v5 = v6;
      }
      break;
    default:
      sub_10050EA98();
  }
  *a1 = *(_DWORD *)a2 ^ (*(int *)a2 >> 31);
  return a1;
}

_UNKNOWN **sub_100DB62AC(int *a1)
{
  int v1 = *a1 ^ (*a1 >> 31);
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      break;
    default:
      sub_10050EA98();
  }
  return result;
}

void sub_100DB63A4(const std::logic_error *a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_100DB6404((uint64_t)exception, a1);
}

void sub_100DB63EC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100DB6404(uint64_t a1, const std::logic_error *a2)
{
  *(void *)a1 = &off_10229E6D0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), a2);
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = -1;
  *(void *)a1 = &off_1022F7988;
  *(void *)(a1 + 8) = off_1022F79B8;
  *(void *)(a1 + 24) = off_1022F79E0;
  return a1;
}

uint64_t sub_100DB64B0(uint64_t a1)
{
  *(void *)(a1 + 24) = &off_10229E700;
  sub_1001E79C0((uint64_t *)(a1 + 32));
  std::logic_error::~logic_error((std::logic_error *)(a1 + 8));
  return a1;
}

void sub_100DB6504()
{
}

void sub_100DB66D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_1001E79C0(&a9);
  sub_1001E79C0(&a10);
  (*(void (**)(uint64_t))(*(void *)v10 + 24))(v10);
  _Unwind_Resume(a1);
}

void sub_100DB6748(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_100DB69F0((uint64_t)exception, a1);
}

void sub_100DB6790(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100DB67A4(uint64_t a1)
{
  *(void *)(a1 + 24) = &off_10229E700;
  sub_1001E79C0((uint64_t *)(a1 + 32));
  std::logic_error::~logic_error((std::logic_error *)(a1 + 8));

  operator delete();
}

void sub_100DB6818(uint64_t a1)
{
  *(void *)(a1 + 16) = &off_10229E700;
  sub_1001E79C0((uint64_t *)(a1 + 24));

  std::logic_error::~logic_error((std::logic_error *)a1);
}

void sub_100DB6874(uint64_t a1)
{
  *(void *)(a1 + 16) = &off_10229E700;
  sub_1001E79C0((uint64_t *)(a1 + 24));
  std::logic_error::~logic_error((std::logic_error *)a1);

  operator delete();
}

void sub_100DB68EC(void *a1)
{
  *a1 = &off_10229E700;
  sub_1001E79C0(a1 + 1);

  std::logic_error::~logic_error((std::logic_error *)a1 - 1);
}

void sub_100DB6944(void *a1)
{
  *a1 = &off_10229E700;
  sub_1001E79C0(a1 + 1);
  std::logic_error::~logic_error((std::logic_error *)a1 - 1);

  operator delete();
}

void sub_100DB69B8(std::logic_error *a1)
{
  std::logic_error::~logic_error(a1);

  operator delete();
}

uint64_t sub_100DB69F0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_10229E6D0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), (const std::logic_error *)(a2 + 8));
  *(void *)(a1 + 8) = &off_1022F7A00;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = &off_10229E700;
  *(void *)(a1 + 32) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(void *)a1 = &off_1022F7988;
  *(void *)(a1 + 8) = off_1022F79B8;
  *(void *)(a1 + 24) = off_1022F79E0;
  return a1;
}

void sub_100DB6B18(_Unwind_Exception *a1)
{
  std::logic_error::~logic_error(v1);
  _Unwind_Resume(a1);
}

void sub_100DB6B2C()
{
  exception = __cxa_allocate_exception(0x38uLL);
  sub_100DB6C74((uint64_t)exception);
}

void sub_100DB6B74(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_DWORD *sub_100DB6B88(int *a1)
{
  int v2 = *a1;
  uint64_t result = a1 + 2;
  switch(v2 ^ (v2 >> 31))
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 0;
      break;
    default:
      sub_10050EA98();
  }
  return result;
}

uint64_t sub_100DB6C74(uint64_t result)
{
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = -1;
  *(void *)uint64_t result = &off_1022F7A88;
  *(void *)(result + 8) = off_1022F7AB8;
  *(void *)(result + 16) = off_1022F7AE0;
  return result;
}

void sub_100DB6CE4()
{
}

void sub_100DB6EA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_1001E79C0(&a9);
  sub_1001E79C0(&a10);
  (*(void (**)(uint64_t))(*(void *)v10 + 24))(v10);
  _Unwind_Resume(a1);
}

void sub_100DB6F1C(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x38uLL);
  sub_100DB6F84((uint64_t)exception, a1);
}

void sub_100DB6F64(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

const char *sub_100DB6F78()
{
  return "boost::bad_get: failed value get using boost::get";
}

uint64_t sub_100DB6F84(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_10229E6D0;
  *(void *)(a1 + 8) = &off_1022F7B00;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_10229E700;
  *(void *)(a1 + 24) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)a1 = &off_1022F7A88;
  *(void *)(a1 + 8) = off_1022F7AB8;
  *(void *)(a1 + 16) = off_1022F7AE0;
  return a1;
}

void sub_100DB70A0(_Unwind_Exception *a1)
{
  std::exception::~exception(v1);
  _Unwind_Resume(a1);
}

_DWORD *sub_100DB70B4(int *a1)
{
  int v1 = 0;
  switch(*a1 ^ (*a1 >> 31))
  {
    case 0:
      return v1;
    case 1:
      int v1 = a1 + 2;
      break;
    default:
      sub_10050EA98();
  }
  return v1;
}

uint64_t sub_100DB71A8(uint64_t *a1, void *a2, uint64_t a3, int *a4, double *a5, double *a6, uint64_t *a7, const std::string *a8, uint64_t *a9)
{
  uint64_t v10 = *a1;
  uint64_t v11 = 0x6DB6DB6DB6DB6DB7 * ((a1[1] - *a1) >> 4);
  unint64_t v12 = v11 + 1;
  if ((unint64_t)(v11 + 1) > 0x249249249249249) {
    sub_1001D7FD4();
  }
  uint64_t v20 = (uint64_t)(a1 + 2);
  unint64_t v21 = 0x6DB6DB6DB6DB6DB7 * ((a1[2] - v10) >> 4);
  if (2 * v21 > v12) {
    unint64_t v12 = 2 * v21;
  }
  if (v21 >= 0x124924924924924) {
    unint64_t v22 = 0x249249249249249;
  }
  else {
    unint64_t v22 = v12;
  }
  uint64_t v30 = a1 + 2;
  if (v22) {
    uint64_t v23 = (char *)sub_100227C5C(v20, v22);
  }
  else {
    uint64_t v23 = 0;
  }
  int v26 = v23;
  size_t v27 = &v23[112 * v11];
  uint64_t v28 = (uint64_t)v27;
  __int16 v29 = &v23[112 * v22];
  sub_1008B4E60((uint64_t)v27, a2, a3, *a4, *a7, a8, *a9, *a5, *a6);
  uint64_t v28 = (uint64_t)(v27 + 112);
  sub_100B8FC24(a1, &v26);
  uint64_t v24 = a1[1];
  sub_100B8FCAC((uint64_t)&v26);
  return v24;
}

void sub_100DB7304(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100B8FCAC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100DB7318(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 ^ (*(int *)a1 >> 31);
  if (v1)
  {
    if (v1 != 1) {
      sub_10050EA98();
    }
    if (*(char *)(a1 + 31) < 0)
    {
      int v2 = *(void **)(a1 + 8);
      operator delete(v2);
    }
  }
}

uint64_t sub_100DB7370(uint64_t result, uint64_t a2)
{
  int v2 = (_OWORD *)(result + 8);
  int v3 = (long long *)(a2 + 8);
  int v4 = *(_DWORD *)a2 ^ (*(int *)a2 >> 31);
  if (v4 == 1)
  {
    long long v5 = *v3;
    *(void *)(result + 24) = *(void *)(a2 + 24);
    _OWORD *v2 = v5;
    *(void *)(a2 + 16) = 0;
    *(void *)(a2 + 24) = 0;
    *(void *)int v3 = 0;
    int v4 = *(_DWORD *)a2 ^ (*(int *)a2 >> 31);
  }
  else
  {
    if (v4) {
      sub_10050EA98();
    }
    *(void *)int v2 = *(void *)v3;
  }
  *(_DWORD *)uint64_t result = v4;
  return result;
}

void sub_100DB73DC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_102419688, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_102419688))
  {
    qword_102419670 = 0;
    qword_102419678 = 0;
    qword_102419680 = 0;
    uint64_t v0 = operator new(6uLL);
    qword_102419678 = (uint64_t)(v0 + 3);
    qword_102419680 = (uint64_t)(v0 + 3);
    *(_DWORD *)uint64_t v0 = 151521030;
    v0[2] = 3082;
    qword_102419670 = (uint64_t)v0;
    __cxa_atexit((void (*)(void *))sub_1001C6FD8, &qword_102419670, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_102419688);
  }
}

void sub_100DB7494(_Unwind_Exception *a1)
{
}

void sub_100DB74AC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1024196A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1024196A8))
  {
    qword_102419690 = 0;
    qword_102419698 = 0;
    qword_1024196A0 = 0;
    uint64_t v0 = operator new(2uLL);
    qword_102419690 = (uint64_t)v0;
    _WORD *v0 = 256;
    qword_102419698 = (uint64_t)(v0 + 1);
    qword_1024196A0 = (uint64_t)(v0 + 1);
    __cxa_atexit((void (*)(void *))sub_1001C700C, &qword_102419690, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1024196A8);
  }
}

void sub_100DB7554(_Unwind_Exception *a1)
{
}

uint64_t sub_100DB756C()
{
  sub_100134750(&xmmword_1024814E0, "WifiAssociatedApCentroidTable");
  uint64_t result = __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_1024814E0, (void *)&_mh_execute_header);
  qword_1024814F8 = (uint64_t)"MAC";
  dword_102481500 = 1;
  word_102481504 = 1;
  byte_102481508 = 0;
  byte_102481520 = 0;
  qword_102481528 = (uint64_t)"Latitude";
  dword_102481530 = 2;
  word_102481534 = 0;
  byte_102481538 = 0;
  byte_102481550 = 0;
  qword_102481558 = (uint64_t)"Longitude";
  dword_102481560 = 2;
  word_102481564 = 0;
  byte_102481568 = 0;
  byte_102481580 = 0;
  qword_102481588 = (uint64_t)"HorizontalAccuracy";
  dword_102481590 = 2;
  word_102481594 = 0;
  byte_102481598 = 0;
  byte_1024815B0 = 0;
  qword_1024815B8 = (uint64_t)"Altitude";
  dword_1024815C0 = 2;
  word_1024815C4 = 0;
  byte_1024815C8 = 0;
  byte_1024815E0 = 0;
  qword_1024815E8 = (uint64_t)"VerticalAccuracy";
  dword_1024815F0 = 2;
  word_1024815F4 = 0;
  byte_1024815F8 = 0;
  byte_102481610 = 0;
  qword_102481618 = (uint64_t)"Reach";
  dword_102481620 = 1;
  word_102481624 = 0;
  byte_102481628 = 0;
  byte_102481640 = 0;
  qword_102481648 = (uint64_t)"LastUpdatedTimestamp";
  dword_102481650 = 2;
  word_102481654 = 0;
  byte_102481658 = 0;
  byte_102481670 = 0;
  qword_102481678 = (uint64_t)"StationaryTimeInSeconds";
  dword_102481680 = 2;
  word_102481684 = 0;
  byte_102481688 = 0;
  byte_1024816A0 = 0;
  qword_1024816A8 = (uint64_t)"LoiType";
  dword_1024816B0 = 1;
  word_1024816B4 = 0;
  byte_1024816B8 = 0;
  byte_1024816D0 = 0;
  qword_1024816D8 = (uint64_t)"CKRecordName";
  dword_1024816E0 = 3;
  word_1024816E4 = 0;
  byte_1024816E8 = 0;
  byte_102481700 = 0;
  qword_102481708 = (uint64_t)"CKSystemFields";
  dword_102481710 = 4;
  word_102481714 = 0;
  byte_102481718 = 0;
  byte_102481730 = 0;
  qword_102481738 = 0;
  dword_102481740 = 5;
  word_102481744 = 0;
  byte_102481748 = 0;
  byte_102481760 = 0;
  return result;
}

uint64_t sub_100DB7754(uint64_t a1, uint64_t a2, int a3)
{
  *(void *)a1 = off_1022F7B28;
  uint64_t v6 = a1 + 48;
  sub_101171D90(a1 + 8);
  LODWORD(v93) = *((_DWORD *)sub_10016363C() + 13);
  *((void *)&v93 + 1) = *((void *)sub_10016363C() + 7);
  uint64_t v94 = *((void *)sub_10016363C() + 8);
  sub_1009C5254(v6, &v93);
  *(_OWORD *)(a1 + 144) = 0u;
  *(_DWORD *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0xBFF0000000000000;
  *(void *)(a1 + 248) = 0;
  *(void *)(a1 + 240) = a1 + 248;
  *(void *)(a1 + 256) = 0;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(void *)(a1 + 272) = 0;
  *(void *)(a1 + 264) = a1 + 272;
  *(void *)(a1 + 280) = 0;
  *(_DWORD *)(a1 + 288) = 0xFFFF;
  *(void *)(a1 + 300) = 0;
  *(void *)(a1 + 292) = 0;
  __asm { FMOV            V1.2D, #-1.0 }
  *(_OWORD *)(a1 + 308) = xmmword_101D1C320;
  *(_OWORD *)(a1 + 324) = _Q1;
  *(_OWORD *)(a1 + 340) = _Q1;
  *(_OWORD *)(a1 + 356) = _Q1;
  *(_DWORD *)(a1 + 372) = 0;
  *(_DWORD *)(a1 + 400) = 0;
  *(void *)(a1 + 376) = 0xBFF0000000000000;
  *(void *)(a1 + 384) = 0;
  *(void *)(a1 + 392) = 0;
  *(void *)(a1 + 404) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 412) = 0x7FFFFFFF;
  *(void *)(a1 + 424) = 0;
  *(void *)(a1 + 432) = 0;
  *(void *)(a1 + 416) = 0;
  *(unsigned char *)(a1 + 440) = 0;
  *(void *)(a1 + 444) = 0xFFFF00000000;
  *(void *)(a1 + 452) = 0;
  *(void *)(a1 + 460) = 0;
  *(_OWORD *)(a1 + 468) = xmmword_101D1C320;
  *(_OWORD *)(a1 + 484) = _Q1;
  *(_OWORD *)(a1 + 500) = _Q1;
  *(_OWORD *)(a1 + 516) = _Q1;
  long long v92 = _Q1;
  *(_DWORD *)(a1 + 532) = 0;
  *(_DWORD *)(a1 + 560) = 0;
  *(void *)(a1 + 536) = 0xBFF0000000000000;
  *(void *)(a1 + 544) = 0;
  *(void *)(a1 + 552) = 0;
  *(void *)(a1 + 564) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 572) = 0x7FFFFFFF;
  *(unsigned char *)(a1 + 600) = 0;
  *(void *)(a1 + 576) = 0;
  *(void *)(a1 + 584) = 0;
  *(void *)(a1 + 592) = 0;
  *(void *)(a1 + 604) = 0;
  *(unsigned char *)(a1 + 612) = sub_1001198CC() == 1;
  *(_WORD *)(a1 + 613) = 0;
  unint64_t v12 = (unsigned __int8 *)(a1 + 615);
  *(_DWORD *)(a1 + 615) = 16843009;
  *(unsigned char *)(a1 + 619) = sub_100044B44()[2];
  *(unsigned char *)(a1 + 620) = 1;
  sub_100103240();
  *(unsigned char *)(a1 + 621) = sub_10010145C() ^ 1;
  int v13 = (uint64_t *)(a1 + 712);
  *(void *)(a1 + 680) = 0;
  *(_DWORD *)(a1 + 688) = 0;
  *(void *)(a1 + 696) = 0;
  *(_OWORD *)(a1 + 622) = 0u;
  *(_DWORD *)(a1 + 637) = 0;
  *(void *)(a1 + 648) = 0;
  *(_OWORD *)(a1 + 656) = 0u;
  *(void *)(a1 + 704) = 0x300000000;
  *(_OWORD *)(a1 + 712) = xmmword_101D8E230;
  *(_DWORD *)(a1 + 728) = 0;
  *(_OWORD *)(a1 + 736) = 0u;
  *(_WORD *)(a1 + 752) = 257;
  *(_OWORD *)(a1 + 760) = xmmword_101D8E240;
  *(void *)(a1 + 776) = 0;
  *(unsigned char *)(a1 + 784) = 0;
  *(void *)(a1 + 808) = 0;
  *(void *)(a1 + 800) = 0;
  *(void *)(a1 + 792) = a1 + 800;
  *(void *)(a1 + 832) = 0;
  *(void *)(a1 + 824) = 0;
  *(void *)(a1 + 816) = a1 + 824;
  *(_OWORD *)(a1 + 840) = 0u;
  *(_OWORD *)(a1 + 856) = 0u;
  *(_OWORD *)(a1 + 872) = 0u;
  *(_OWORD *)(a1 + 888) = 0u;
  sub_100103240();
  unsigned int v14 = sub_1001073D0();
  sub_100DD9CE0(a1 + 904, a1, (v14 >> 15) & 1);
  sub_100F5E6A0(a1 + 1312);
  *(unsigned char *)(a1 + 1648) = 1;
  *(void *)(a1 + 1656) = 0xBFF0000000000000;
  *(_OWORD *)(a1 + 1664) = v92;
  *(_OWORD *)(a1 + 1680) = v92;
  *(_OWORD *)(a1 + 1696) = v92;
  *(_OWORD *)(a1 + 1712) = v92;
  *(_OWORD *)(a1 + 1728) = v92;
  *(_OWORD *)(a1 + 1744) = v92;
  *(void *)(a1 + 1760) = 0xBFF0000000000000;
  *(void *)(a1 + 1768) = a2;
  sub_101171D90(a1 + 1776);
  *(_DWORD *)(a1 + 1816) = a3;
  *(void *)(a1 + 1824) = 0;
  *(_WORD *)(a1 + 1872) = 0;
  *(_OWORD *)(a1 + 1888) = 0u;
  *(void *)(a1 + 1880) = a1 + 1888;
  *(_OWORD *)(a1 + 1912) = 0u;
  *(void *)(a1 + 1904) = a1 + 1912;
  *(_OWORD *)(a1 + 1928) = 0u;
  sub_1000C7F88(buf);
  int v15 = sub_1000D2988(*(uint64_t *)&buf[0], "FenceUseCellPositioning", (BOOL *)(a1 + 615));
  if (*((void *)&buf[0] + 1)) {
    sub_1000DB0A0(*((std::__shared_weak_count **)&buf[0] + 1));
  }
  if (v15)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    int v16 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      int v17 = *v12;
      LODWORD(buf[0]) = 67174657;
      DWORD1(buf[0]) = v17;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "Fence: Overriding cell positioning usage to %{private}d", (uint8_t *)buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      int v66 = *v12;
      int v95 = 67174657;
      LODWORD(v96) = v66;
      __int16 v67 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "CLFenceMonitor::CLFenceMonitor(CLFenceMonitorClientProtocol *, CLFenceMonitor::DatabaseType)", "%s\n", v67);
      if (v67 != (char *)buf) {
        free(v67);
      }
    }
  }
  sub_1000C7F88(buf);
  uint64_t v18 = (unsigned __int8 *)(a1 + 616);
  int v19 = sub_1000D2988(*(uint64_t *)&buf[0], "FenceUseWifiPositioning", (BOOL *)(a1 + 616));
  if (*((void *)&buf[0] + 1)) {
    sub_1000DB0A0(*((std::__shared_weak_count **)&buf[0] + 1));
  }
  if (v19)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    uint64_t v20 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      int v21 = *v18;
      LODWORD(buf[0]) = 67174657;
      DWORD1(buf[0]) = v21;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "Fence: Overriding WiFi positioning usage to %{private}d", (uint8_t *)buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      int v68 = *v18;
      int v95 = 67174657;
      LODWORD(v96) = v68;
      __int16 v69 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "CLFenceMonitor::CLFenceMonitor(CLFenceMonitorClientProtocol *, CLFenceMonitor::DatabaseType)", "%s\n", v69);
      if (v69 != (char *)buf) {
        free(v69);
      }
    }
  }
  sub_1000C7F88(buf);
  unint64_t v22 = (unsigned __int8 *)(a1 + 617);
  int v23 = sub_1000D2988(*(uint64_t *)&buf[0], "FenceUseGpsPositioning", (BOOL *)(a1 + 617));
  if (*((void *)&buf[0] + 1)) {
    sub_1000DB0A0(*((std::__shared_weak_count **)&buf[0] + 1));
  }
  if (v23)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    uint64_t v24 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      int v25 = *v22;
      LODWORD(buf[0]) = 67174657;
      DWORD1(buf[0]) = v25;
      _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "Fence: Overriding GPS positioning usage to %{private}d", (uint8_t *)buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      int v70 = *v22;
      int v95 = 67174657;
      LODWORD(v96) = v70;
      __int16 v71 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "CLFenceMonitor::CLFenceMonitor(CLFenceMonitorClientProtocol *, CLFenceMonitor::DatabaseType)", "%s\n", v71);
      if (v71 != (char *)buf) {
        free(v71);
      }
    }
  }
  sub_1000C7F88(buf);
  int v26 = (unsigned __int8 *)(a1 + 618);
  int v27 = sub_1000D2988(*(uint64_t *)&buf[0], "FenceUsePipelinePositioning", (BOOL *)(a1 + 618));
  if (*((void *)&buf[0] + 1)) {
    sub_1000DB0A0(*((std::__shared_weak_count **)&buf[0] + 1));
  }
  if (v27)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    uint64_t v28 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      int v29 = *v26;
      LODWORD(buf[0]) = 67174657;
      DWORD1(buf[0]) = v29;
      _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "Fence: Overriding Pipeline positioning usage to %{private}d", (uint8_t *)buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      int v72 = *v26;
      int v95 = 67174657;
      LODWORD(v96) = v72;
      __int16 v73 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "CLFenceMonitor::CLFenceMonitor(CLFenceMonitorClientProtocol *, CLFenceMonitor::DatabaseType)", "%s\n", v73);
      if (v73 != (char *)buf) {
        free(v73);
      }
    }
  }
  sub_1000C7F88(buf);
  uint64_t v30 = (unsigned __int8 *)(a1 + 619);
  int v31 = sub_1000D2988(*(uint64_t *)&buf[0], "FenceUseVisitEventsForSignificantMonitoring", (BOOL *)(a1 + 619));
  if (*((void *)&buf[0] + 1)) {
    sub_1000DB0A0(*((std::__shared_weak_count **)&buf[0] + 1));
  }
  if (v31)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    int v32 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      int v33 = *v30;
      LODWORD(buf[0]) = 67174657;
      DWORD1(buf[0]) = v33;
      _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "Fence: Overriding Visit event usage to %{private}d", (uint8_t *)buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      int v74 = *v30;
      int v95 = 67174657;
      LODWORD(v96) = v74;
      std::string v75 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "CLFenceMonitor::CLFenceMonitor(CLFenceMonitorClientProtocol *, CLFenceMonitor::DatabaseType)", "%s\n", v75);
      if (v75 != (char *)buf) {
        free(v75);
      }
    }
  }
  sub_1000C7F88(buf);
  uint64_t v34 = (unsigned __int8 *)(a1 + 620);
  int v35 = sub_1000D2988(*(uint64_t *)&buf[0], "FenceIssueDelayedTriggers", (BOOL *)(a1 + 620));
  if (*((void *)&buf[0] + 1)) {
    sub_1000DB0A0(*((std::__shared_weak_count **)&buf[0] + 1));
  }
  if (v35)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    double v36 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      int v37 = *v34;
      LODWORD(buf[0]) = 67174657;
      DWORD1(buf[0]) = v37;
      _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEFAULT, "Fence: Overriding FenceIssueDelayedTriggers to %{private}d", (uint8_t *)buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      int v76 = *v34;
      int v95 = 67174657;
      LODWORD(v96) = v76;
      std::string v77 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "CLFenceMonitor::CLFenceMonitor(CLFenceMonitorClientProtocol *, CLFenceMonitor::DatabaseType)", "%s\n", v77);
      if (v77 != (char *)buf) {
        free(v77);
      }
    }
  }
  sub_1000C7F88(buf);
  __int16 v38 = (uint64_t *)(a1 + 720);
  int v39 = sub_1000A699C(*(uint64_t *)&buf[0], "FenceContinousTrackingInterval", (void *)(a1 + 720));
  if (*((void *)&buf[0] + 1)) {
    sub_1000DB0A0(*((std::__shared_weak_count **)&buf[0] + 1));
  }
  if (v39)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    __int16 v40 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v41 = *v38;
      LODWORD(buf[0]) = 134283521;
      *(void *)((char *)buf + 4) = v41;
      _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_DEFAULT, "Fence: Overriding fWakeIntervalSeconds, %{private}.1lf", (uint8_t *)buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      uint64_t v78 = *v38;
      int v95 = 134283521;
      uint64_t v96 = v78;
      long long v79 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "CLFenceMonitor::CLFenceMonitor(CLFenceMonitorClientProtocol *, CLFenceMonitor::DatabaseType)", "%s\n", v79);
      if (v79 != (char *)buf) {
        free(v79);
      }
    }
  }
  sub_1000C7F88(buf);
  char v42 = (int *)(a1 + 708);
  int v43 = sub_10006EF84(*(uint64_t *)&buf[0], "FenceMonitorDelayedTriggerCountMax", (_DWORD *)(a1 + 708));
  if (*((void *)&buf[0] + 1)) {
    sub_1000DB0A0(*((std::__shared_weak_count **)&buf[0] + 1));
  }
  if (v43)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    uint64_t v44 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      int v45 = *v42;
      LODWORD(buf[0]) = 67174657;
      DWORD1(buf[0]) = v45;
      _os_log_impl((void *)&_mh_execute_header, v44, OS_LOG_TYPE_DEFAULT, "Fence: Overriding fDelayedTriggerCountMax, %{private}d", (uint8_t *)buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      int v80 = *v42;
      int v95 = 67174657;
      LODWORD(v96) = v80;
      long long v81 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "CLFenceMonitor::CLFenceMonitor(CLFenceMonitorClientProtocol *, CLFenceMonitor::DatabaseType)", "%s\n", v81);
      if (v81 != (char *)buf) {
        free(v81);
      }
    }
  }
  sub_1000C7F88(buf);
  int v46 = sub_1000A699C(*(uint64_t *)&buf[0], "FenceMonitorDelayedTriggerIntervalSeconds", (void *)(a1 + 712));
  if (*((void *)&buf[0] + 1)) {
    sub_1000DB0A0(*((std::__shared_weak_count **)&buf[0] + 1));
  }
  if (v46)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    char v47 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v48 = *v13;
      LODWORD(buf[0]) = 134283521;
      *(void *)((char *)buf + 4) = v48;
      _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_DEFAULT, "Fence: Overriding fDelayedTriggerIntervalSeconds, %{private}.1lf", (uint8_t *)buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      uint64_t v82 = *v13;
      int v95 = 134283521;
      uint64_t v96 = v82;
      long long v83 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "CLFenceMonitor::CLFenceMonitor(CLFenceMonitorClientProtocol *, CLFenceMonitor::DatabaseType)", "%s\n", v83);
      if (v83 != (char *)buf) {
        free(v83);
      }
    }
  }
  sub_1000C7F88(buf);
  __int16 v49 = (uint64_t *)(a1 + 768);
  int v50 = sub_1000A699C(*(uint64_t *)&buf[0], "FenceMonitorConsolidatedTriggersTimeInterval", (void *)(a1 + 768));
  if (*((void *)&buf[0] + 1)) {
    sub_1000DB0A0(*((std::__shared_weak_count **)&buf[0] + 1));
  }
  if (v50)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    __int16 v51 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v52 = *v49;
      LODWORD(buf[0]) = 134283521;
      *(void *)((char *)buf + 4) = v52;
      _os_log_impl((void *)&_mh_execute_header, v51, OS_LOG_TYPE_DEFAULT, "Fence: Overriding fConsolidatedTriggersTimeInterval, %{private}.1lf", (uint8_t *)buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      uint64_t v84 = *v49;
      int v95 = 134283521;
      uint64_t v96 = v84;
      std::string v85 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "CLFenceMonitor::CLFenceMonitor(CLFenceMonitorClientProtocol *, CLFenceMonitor::DatabaseType)", "%s\n", v85);
      if (v85 != (char *)buf) {
        free(v85);
      }
    }
  }
  sub_1000C7F88(buf);
  int v53 = (unsigned __int8 *)(a1 + 752);
  int v54 = sub_1000D2988(*(uint64_t *)&buf[0], "FenceMonitorIsScheduleContTrackingWakes", (BOOL *)(a1 + 752));
  if (*((void *)&buf[0] + 1)) {
    sub_1000DB0A0(*((std::__shared_weak_count **)&buf[0] + 1));
  }
  if (v54)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    __int16 v55 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      int v56 = *v53;
      LODWORD(buf[0]) = 67174657;
      DWORD1(buf[0]) = v56;
      _os_log_impl((void *)&_mh_execute_header, v55, OS_LOG_TYPE_DEFAULT, "Fence: Overriding fIsScheduleContTrackingWakes, %{private}d", (uint8_t *)buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      int v86 = *v53;
      int v95 = 67174657;
      LODWORD(v96) = v86;
      int v87 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "CLFenceMonitor::CLFenceMonitor(CLFenceMonitorClientProtocol *, CLFenceMonitor::DatabaseType)", "%s\n", v87);
      if (v87 != (char *)buf) {
        free(v87);
      }
    }
  }
  sub_1000C7F88(buf);
  int v57 = (unsigned __int8 *)(a1 + 753);
  int v58 = sub_1000D2988(*(uint64_t *)&buf[0], "FenceMonitorIsTriggerOnTether", (BOOL *)(a1 + 753));
  if (*((void *)&buf[0] + 1)) {
    sub_1000DB0A0(*((std::__shared_weak_count **)&buf[0] + 1));
  }
  if (v58)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    __int16 v59 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      int v60 = *v57;
      LODWORD(buf[0]) = 67174657;
      DWORD1(buf[0]) = v60;
      _os_log_impl((void *)&_mh_execute_header, v59, OS_LOG_TYPE_DEFAULT, "Fence: Overriding fIsTriggerOnTether, %{private}d", (uint8_t *)buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      int v88 = *v57;
      int v95 = 67174657;
      LODWORD(v96) = v88;
      unint64_t v89 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "CLFenceMonitor::CLFenceMonitor(CLFenceMonitorClientProtocol *, CLFenceMonitor::DatabaseType)", "%s\n", v89);
      if (v89 != (char *)buf) {
        free(v89);
      }
    }
  }
  sub_1000C7F88(buf);
  double v61 = (unsigned __int8 *)(a1 + 621);
  int v62 = sub_1000D2988(*(uint64_t *)&buf[0], "FenceWiFiScanOnWake", (BOOL *)(a1 + 621));
  if (*((void *)&buf[0] + 1)) {
    sub_1000DB0A0(*((std::__shared_weak_count **)&buf[0] + 1));
  }
  if (v62)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    __int16 v63 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      int v64 = *v61;
      LODWORD(buf[0]) = 67174657;
      DWORD1(buf[0]) = v64;
      _os_log_impl((void *)&_mh_execute_header, v63, OS_LOG_TYPE_DEFAULT, "WIFI_LOC: Overriding fPerformScanOnWake = %{private}d", (uint8_t *)buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      int v90 = *v61;
      int v95 = 67174657;
      LODWORD(v96) = v90;
      char v91 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "CLFenceMonitor::CLFenceMonitor(CLFenceMonitorClientProtocol *, CLFenceMonitor::DatabaseType)", "%s\n", v91);
      if (v91 != (char *)buf) {
        free(v91);
      }
    }
  }
  sub_100DB9018(a1);
  sub_100DD9EDC(a1 + 904, *(unsigned __int8 *)(a1 + 612));
  *(void *)(a1 + 1832) = objc_alloc_init((Class)GEOLocationShifter);
  return a1;
}

void sub_100DB8E98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12, void **a13, uint64_t a14, void **a15)
{
  sub_100DCE174(a11, *v18);
  sub_100DCE084(v15 + 1880, *a15);
  sub_100789C70((uint64_t *)(v15 + 1824), 0);
  sub_100DD9ED8(v17);
  sub_100DCDF98(v15 + 816, *a12);
  sub_100DCDE9C(v15 + 792, *a13);
  sub_100A0D280(v16, *(void **)(v15 + 272));
  sub_100DCDDAC(a14, *(void **)(v15 + 248));
  int v21 = *(void **)(v15 + 216);
  if (v21)
  {
    *(void *)(v15 + 224) = v21;
    operator delete(v21);
  }
  sub_1000D801C((void *)(v19 + 24));
  unint64_t v22 = *(void **)v19;
  if (*(void *)v19)
  {
    *(void *)(v15 + 152) = v22;
    operator delete(v22);
  }
  sub_1000DAF68((void *)(v15 + 72));
  _Unwind_Resume(a1);
}

uint64_t sub_100DB9018(uint64_t a1)
{
  if (sub_100044B44()[377])
  {
    sub_100103240();
    char v2 = sub_10073E30C();
  }
  else
  {
    char v2 = 0;
  }
  char v3 = _os_feature_enabled_impl();
  BOOL v4 = 1;
  if ((v3 & 1) == 0 && (v2 & 1) == 0) {
    BOOL v4 = sub_100044B44()[378] != 0;
  }
  *(unsigned char *)(a1 + 1874) = v4;
  sub_100103240();
  char v5 = sub_1007414F8();
  uint64_t result = (uint64_t)sub_100044B44();
  if (*(unsigned char *)(result + 376))
  {
    char v7 = 1;
  }
  else
  {
    uint64_t result = _os_feature_enabled_impl();
    char v7 = result | v5 ^ 1;
  }
  *(unsigned char *)(a1 + 1875) = v7;
  return result;
}

uint64_t sub_100DB90D0(uint64_t a1)
{
  *(void *)a1 = off_1022F7B28;

  sub_100DCE174(a1 + 1904, *(void **)(a1 + 1912));
  sub_100DCE084(a1 + 1880, *(void **)(a1 + 1888));
  sub_100789C70((uint64_t *)(a1 + 1824), 0);
  sub_100DD9ED8(a1 + 904);
  sub_100DCDF98(a1 + 816, *(void **)(a1 + 824));
  sub_100DCDE9C(a1 + 792, *(void **)(a1 + 800));
  sub_100A0D280(a1 + 264, *(void **)(a1 + 272));
  sub_100DCDDAC(a1 + 240, *(void **)(a1 + 248));
  char v2 = *(void **)(a1 + 216);
  if (v2)
  {
    *(void *)(a1 + 224) = v2;
    operator delete(v2);
  }
  sub_1000D801C((void *)(a1 + 168));
  char v3 = *(void **)(a1 + 144);
  if (v3)
  {
    *(void *)(a1 + 152) = v3;
    operator delete(v3);
  }
  sub_1000DAF68((void *)(a1 + 72));
  return a1;
}

void sub_100DB91AC(uint64_t a1)
{
  sub_100DB90D0(a1);

  operator delete();
}

uint64_t sub_100DB91E4(uint64_t result, char a2, int a3, int a4, int a5, double a6, double a7)
{
  *(double *)uint64_t result = a6;
  *(double *)(result + 8) = a7;
  *(unsigned char *)(result + 16) = a2;
  *(_DWORD *)(result + 20) = a3;
  *(_DWORD *)(result + 24) = a4;
  *(_DWORD *)(result + 28) = a5;
  return result;
}

BOOL sub_100DB91F8(double *a1, double a2)
{
  double v3 = *a1;
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  double v4 = vabdd_f64(a2, v3);
  char v5 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)long long buf = 134283521;
    double v9 = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Fence: MiLo, miLoEventAge, %{private}.1f", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    char v7 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLFenceMonitor::MicroLocationEvent::isMicroLocationEventRecent(const CFAbsoluteTime) const", "%s\n", v7);
    if (v7 != (char *)buf) {
      free(v7);
    }
  }
  return v4 <= *((double *)sub_100044B44() + 48);
}

void sub_100DB93BC(uint64_t a1, uint64_t a2)
{
  char v2 = a2;
  *(_DWORD *)(a1 + 288) = 0xFFFF;
  *(void *)(a1 + 300) = 0;
  *(void *)(a1 + 292) = 0;
  __asm { FMOV            V1.2D, #-1.0 }
  *(_OWORD *)(a1 + 308) = xmmword_101D1C320;
  *(_OWORD *)(a1 + 324) = _Q1;
  *(_OWORD *)(a1 + 340) = _Q1;
  *(_OWORD *)(a1 + 356) = _Q1;
  *(_DWORD *)(a1 + 372) = 0;
  *(void *)(a1 + 384) = 0;
  *(void *)(a1 + 392) = 0;
  *(void *)(a1 + 376) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 400) = 0;
  *(void *)(a1 + 404) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 412) = 0x7FFFFFFF;
  *(void *)(a1 + 424) = 0;
  *(void *)(a1 + 432) = 0;
  *(void *)(a1 + 416) = 0;
  *(unsigned char *)(a1 + 440) = 0;
  *(_DWORD *)(a1 + 448) = 0xFFFF;
  *(void *)(a1 + 460) = 0;
  *(void *)(a1 + 452) = 0;
  *(_OWORD *)(a1 + 468) = xmmword_101D1C320;
  *(_OWORD *)(a1 + 484) = _Q1;
  *(_OWORD *)(a1 + 500) = _Q1;
  *(_OWORD *)(a1 + 516) = _Q1;
  *(_DWORD *)(a1 + 532) = 0;
  *(void *)(a1 + 536) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 560) = 0;
  *(void *)(a1 + 544) = 0;
  *(void *)(a1 + 552) = 0;
  *(void *)(a1 + 564) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 572) = 0x7FFFFFFF;
  *(void *)(a1 + 592) = 0;
  *(void *)(a1 + 576) = 0;
  *(void *)(a1 + 584) = 0;
  *(unsigned char *)(a1 + 600) = 0;
  nullsub_41(a1 + 1312, a2);
  *(void *)(a1 + 152) = *(void *)(a1 + 144);
  if ((v2 & 1) == 0)
  {
    uint64_t v9 = *(void *)(a1 + 1824);
    if (v9)
    {
      sub_100616558(v9);
    }
    else
    {
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      uint64_t v10 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Fence: Warning data can't be cleared yet", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F7C40);
        }
        uint64_t v11 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::clearLocationData(BOOL)", "%s\n", v11);
        if (v11 != (char *)buf) {
          free(v11);
        }
      }
      *(unsigned char *)(a1 + 614) = 1;
    }
  }
}

void sub_100DB9658(uint64_t a1, int a2)
{
  if (*(unsigned __int8 *)(a1 + 612) != a2)
  {
    *(unsigned char *)(a1 + 612) = a2;
    sub_100DD9EDC(a1 + 904, a2);
    sub_100DB96B0(a1);
  }
}

void sub_100DB96B0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 612) && *(unsigned char *)(a1 + 613))
  {
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    unint64_t v11 = 0;
    char v2 = *(void **)(a1 + 240);
    double v3 = (void *)(a1 + 248);
    if (v2 != (void *)(a1 + 248))
    {
      double v4 = 0;
      do
      {
        char v5 = (long long *)(v2 + 4);
        if ((unint64_t)v4 >= v11)
        {
          double v4 = (char *)sub_100920FEC(&v9, v5);
        }
        else
        {
          sub_10048AEC0(v4, v5);
          v4 += 248;
        }
        uint64_t v10 = v4;
        uint64_t v6 = (void *)v2[1];
        if (v6)
        {
          do
          {
            char v7 = v6;
            uint64_t v6 = (void *)*v6;
          }
          while (v6);
        }
        else
        {
          do
          {
            char v7 = (void *)v2[2];
            BOOL v8 = *v7 == (void)v2;
            char v2 = v7;
          }
          while (!v8);
        }
        char v2 = v7;
      }
      while (v7 != v3);
    }
    (*(void (**)(void, uint64_t *))(**(void **)(a1 + 1768) + 408))(*(void *)(a1 + 1768), &v9);
    unint64_t v12 = (void **)&v9;
    sub_10008DF5C(&v12);
  }
}

void sub_100DB97B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12)
{
  a12 = (void **)&a9;
  sub_10008DF5C(&a12);
  _Unwind_Resume(a1);
}

uint64_t sub_100DB97E4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 1313) = a2;
  return result;
}

void sub_100DB97EC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6 = sub_10001A4C4(a1 + 240, (unsigned __int8 *)a2);
  if (a1 + 248 == v6)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    uint64_t v10 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v11 = a2 + 24;
      if (*(char *)(a2 + 47) < 0) {
        uint64_t v11 = *(void *)(a2 + 24);
      }
      *(_DWORD *)long long buf = 136380675;
      uint64_t v14 = v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "#Warning didn't find fence for location type, %{private}s", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 == -1) {
        goto LABEL_21;
      }
      goto LABEL_23;
    }
  }
  else
  {
    uint64_t v7 = *(int *)(v6 + 204);
    if (v7 != a3)
    {
      *(_DWORD *)(v6 + 204) = a3;
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      BOOL v8 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v9 = a2 + 24;
        if (*(char *)(a2 + 47) < 0) {
          uint64_t v9 = *(void *)(a2 + 24);
        }
        *(_DWORD *)long long buf = 134284035;
        uint64_t v14 = v7;
        __int16 v15 = 2049;
        uint64_t v16 = a3;
        __int16 v17 = 2081;
        uint64_t v18 = v9;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "Setting fence location type from %{private}lu to %{private}lu for %{private}s", buf, 0x20u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 == -1)
        {
LABEL_21:
          unint64_t v12 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::setFenceLocationTypeForFence(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, const CLFenceManager_Type::FenceLocationType)", "%s\n", v12);
          if (v12 != (char *)buf) {
            free(v12);
          }
          return;
        }
LABEL_23:
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
        goto LABEL_21;
      }
    }
  }
}

void sub_100DB9B3C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6 = sub_10001A4C4(a1 + 240, (unsigned __int8 *)a2);
  if (a1 + 248 == v6)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    uint64_t v7 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v8 = a2 + 24;
      if (*(char *)(a2 + 47) < 0) {
        uint64_t v8 = *(void *)(a2 + 24);
      }
      *(_DWORD *)long long buf = 136380675;
      uint64_t v11 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "#Warning didn't find fence for environment type, %{private}s", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      uint64_t v9 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::setEnvironmentTypeForFence(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, CLFenceManager_Type::FenceEnvironmentType)", "%s\n", v9);
      if (v9 != (char *)buf) {
        free(v9);
      }
    }
  }
  else
  {
    *(_DWORD *)(v6 + 200) = a3;
  }
}

void sub_100DB9D30(uint64_t a1, uint64_t *a2, double a3)
{
  sub_1001ABED0((uint64_t)v16);
  uint64_t v6 = (uint64_t)&qword_102419000;
  if (qword_1024193C0 != -1) {
    goto LABEL_15;
  }
  while (1)
  {
    uint64_t v7 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v9 = *a2;
      uint64_t v8 = a2[1];
      sub_100BA8710(v16);
      uint64_t v10 = v26 >= 0 ? __p : (void **)__p[0];
      *(_DWORD *)long long buf = 134349315;
      *(void *)&uint8_t buf[4] = 0xEF7BDEF7BDEF7BDFLL * ((v8 - v9) >> 3);
      __int16 v18 = 2081;
      uint64_t v19 = v10;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Fence: startMonitoringFences, fences, %{public}lu, status, %{private}s", buf, 0x16u);
      if (v26 < 0) {
        operator delete(__p[0]);
      }
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (*(void *)(v6 + 960) != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      uint64_t v13 = *a2;
      uint64_t v12 = a2[1];
      sub_100BA8710(v16);
      if (v20 >= 0) {
        uint64_t v14 = buf;
      }
      else {
        uint64_t v14 = *(unsigned char **)buf;
      }
      int v21 = 134349315;
      unint64_t v22 = 0xEF7BDEF7BDEF7BDFLL * ((v12 - v13) >> 3);
      __int16 v23 = 2081;
      uint64_t v24 = v14;
      __int16 v15 = (char *)_os_log_send_and_compose_impl();
      if (v20 < 0) {
        operator delete(*(void **)buf);
      }
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::startMonitoringFences(const CFAbsoluteTime, const std::vector<CLFenceManager_Type::Fence> &)", "%s\n", v15);
      if (v15 != (char *)__p) {
        free(v15);
      }
    }
    uint64_t v11 = *a2;
    a2 = (uint64_t *)a2[1];
    if ((uint64_t *)v11 == a2) {
      break;
    }
    uint64_t v6 = 0xFFFFFFFFLL;
    while (*(_DWORD *)(v11 + 184) != -1)
    {
      sub_100DBA014(a1, v11, (uint64_t)v16, a3);
      v11 += 248;
      if ((uint64_t *)v11 == a2) {
        return;
      }
    }
    sub_101A8E77C();
    __break(1u);
LABEL_15:
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
}

uint64_t sub_100DBA014(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  uint64_t v8 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    sub_100C8C864(a2);
    uint64_t v9 = v19 >= 0 ? __p : (void **)__p[0];
    *(_DWORD *)long long buf = 136380675;
    *(void *)&uint8_t buf[4] = v9;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "Fence: startMonitoring, fence, %{private}s", buf, 0xCu);
    if (v19 < 0) {
      operator delete(__p[0]);
    }
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    sub_100C8C864(a2);
    if (v15 >= 0) {
      uint64_t v12 = buf;
    }
    else {
      uint64_t v12 = *(unsigned char **)buf;
    }
    int v16 = 136380675;
    __int16 v17 = v12;
    uint64_t v13 = (char *)_os_log_send_and_compose_impl();
    if (v15 < 0) {
      operator delete(*(void **)buf);
    }
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::startMonitoring(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, const CLFenceMonitorLogic::FenceMonitoringStatus &, BOOL)", "%s\n", v13);
    if (v13 != (char *)__p) {
      free(v13);
    }
  }
  if (*(_DWORD *)(a2 + 184) == -1)
  {
    sub_101A8E8E8();
    __break(1u);
  }
  uint64_t v10 = *(void *)(a1 + 256);
  sub_100DC521C(a1, a2, a3, a4);
  return (*(uint64_t (**)(void, uint64_t, void))(**(void **)(a1 + 1768) + 104))(*(void *)(a1 + 1768), v10, *(void *)(a1 + 256));
}

void sub_100DBA2B0(uint64_t a1, unsigned __int8 **a2, int a3, double a4)
{
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  uint64_t v8 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    unint64_t v9 = 0xEF7BDEF7BDEF7BDFLL * ((a2[1] - *a2) >> 3);
    *(_DWORD *)long long buf = 134349056;
    unint64_t v16 = v9;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "Fence: stopMonitoringFences, fences, %{public}lu", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    uint64_t v14 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::stopMonitoringFences(const CFAbsoluteTime, const std::vector<CLFenceManager_Type::Fence> &, BOOL)", "%s\n", v14);
    if (v14 != (char *)buf) {
      free(v14);
    }
  }
  uint64_t v10 = *a2;
  uint64_t v11 = a2[1];
  if (*a2 != v11)
  {
    do
    {
      uint64_t v12 = sub_10001A4C4(a1 + 240, v10);
      if (a1 + 248 == v12)
      {
        if (a3)
        {
          uint64_t v13 = *(void *)(a1 + 1824);
          if (v13) {
            sub_100617268(v13, (uint64_t)v10);
          }
        }
      }
      else
      {
        sub_100DBA530((uint64_t **)a1, (unsigned __int8 *)(v12 + 32), a3, a4);
      }
      v10 += 248;
    }
    while (v10 != v11);
    if (a2[1] != *a2) {
      sub_1001BA5A0(a1, a4);
    }
  }
}

uint64_t sub_100DBA530(uint64_t **a1, unsigned __int8 *a2, int a3, double a4)
{
  if ((a2[160] & 0x80) != 0) {
    sub_100DC7194(a1, a2, a4);
  }
  sub_100DC755C((uint64_t)a1, (uint64_t)a2, a3, a4);
  uint64_t v8 = *(uint64_t (**)(void))(*a1[221] + 104);

  return v8();
}

void sub_100DBA5D8(uint64_t a1, double a2)
{
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  unint64_t v13 = 0;
  double v4 = *(void **)(a1 + 240);
  char v5 = (void *)(a1 + 248);
  if (v4 != (void *)(a1 + 248))
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t v7 = (long long *)(v4 + 4);
      if ((unint64_t)v6 >= v13)
      {
        uint64_t v6 = (char *)sub_100920FEC((uint64_t *)&v11, v7);
      }
      else
      {
        sub_10048AEC0(v6, v7);
        v6 += 248;
      }
      uint64_t v12 = v6;
      uint64_t v8 = (void *)v4[1];
      if (v8)
      {
        do
        {
          unint64_t v9 = v8;
          uint64_t v8 = (void *)*v8;
        }
        while (v8);
      }
      else
      {
        do
        {
          unint64_t v9 = (void *)v4[2];
          BOOL v10 = *v9 == (void)v4;
          double v4 = v9;
        }
        while (!v10);
      }
      double v4 = v9;
    }
    while (v9 != v5);
  }
  sub_100DBA2B0(a1, &v11, 1, a2);
  uint64_t v14 = &v11;
  sub_10008DF5C((void ***)&v14);
}

void sub_100DBA6BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12)
{
  a12 = (void **)&a9;
  sub_10008DF5C(&a12);
  _Unwind_Resume(a1);
}

BOOL sub_100DBA6E8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 1824);
  if (v2)
  {
    return sub_100617C1C(v2, a2);
  }
  else
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    double v4 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#Warning Fence: state scrub prior unlock", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      char v5 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLFenceMonitor::scrubFenceStates(const std::vector<CLFenceManager_Type::Fence> &)", "%s\n", v5);
      if (v5 != (char *)buf) {
        free(v5);
      }
    }
    return 0;
  }
}

uint64_t sub_100DBA8B8(uint64_t a1, uint64_t a2, int a3)
{
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  uint64_t v6 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
  {
    if (*(char *)(a2 + 23) >= 0) {
      uint64_t v7 = a2;
    }
    else {
      uint64_t v7 = *(void *)a2;
    }
    if (*(char *)(a2 + 47) >= 0) {
      uint64_t v8 = a2 + 24;
    }
    else {
      uint64_t v8 = *(void *)(a2 + 24);
    }
    *(_DWORD *)long long buf = 136380931;
    uint64_t v19 = v7;
    __int16 v20 = 2081;
    uint64_t v21 = v8;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Fence: requestRegionState, %{private}s/%{private}s", buf, 0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    unint64_t v16 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "CLFenceManager_Type::FenceStatus CLFenceMonitor::getCurrentFenceState(const CLFenceManager_Type::Fence &, const BOOL)", "%s\n", v16);
    if (v16 != (char *)buf) {
      free(v16);
    }
  }
  uint64_t v9 = sub_10001A4C4(a1 + 240, (unsigned __int8 *)a2);
  if (a1 + 248 != v9) {
    return *(unsigned int *)(v9 + 280);
  }
  uint64_t v11 = *(void *)(a1 + 1824);
  if (v11 && a3 && (!*(unsigned char *)(a1 + 730) || *(unsigned char *)(a1 + 731))) {
    return sub_10061830C(v11, a2);
  }
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  uint64_t v12 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
  {
    if (*(char *)(a2 + 23) >= 0) {
      uint64_t v13 = a2;
    }
    else {
      uint64_t v13 = *(void *)a2;
    }
    uint64_t v14 = a2 + 24;
    if (*(char *)(a2 + 47) < 0) {
      uint64_t v14 = *(void *)(a2 + 24);
    }
    BOOL v15 = *(void *)(a1 + 1824) != 0;
    *(_DWORD *)long long buf = 136446978;
    uint64_t v19 = v13;
    __int16 v20 = 2082;
    uint64_t v21 = v14;
    __int16 v22 = 1026;
    BOOL v23 = v15;
    __int16 v24 = 1026;
    int v25 = a3;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "#Warning Fence: requestRegionState, %{public}s/%{public}s, NOT FOUND, %{public}d, %{public}d", buf, 0x22u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    __int16 v17 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "CLFenceManager_Type::FenceStatus CLFenceMonitor::getCurrentFenceState(const CLFenceManager_Type::Fence &, const BOOL)", "%s\n", v17);
    if (v17 != (char *)buf) {
      free(v17);
    }
  }
  return 0xFFFFFFFFLL;
}

uint64_t sub_100DBACFC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 730);
}

uint64_t sub_100DBAD04(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 613);
}

uint64_t sub_100DBAD0C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 612);
}

uint64_t sub_100DBAD14(uint64_t a1)
{
  int v1 = *(void **)(a1 + 240);
  uint64_t v2 = (void *)(a1 + 248);
  if (v1 == (void *)(a1 + 248)) {
    return 0;
  }
  do
  {
    unint64_t v3 = v1[24];
    uint64_t result = (v3 >> 4) & 1;
    if ((v3 & 0x10) != 0) {
      break;
    }
    char v5 = (void *)v1[1];
    if (v5)
    {
      do
      {
        uint64_t v6 = v5;
        char v5 = (void *)*v5;
      }
      while (v5);
    }
    else
    {
      do
      {
        uint64_t v6 = (void *)v1[2];
        BOOL v7 = *v6 == (void)v1;
        int v1 = v6;
      }
      while (!v7);
    }
    int v1 = v6;
  }
  while (v6 != v2);
  return result;
}

uint64_t sub_100DBAD74(uint64_t result, int a2, double a3)
{
  if (*(unsigned __int8 *)(result + 730) != a2)
  {
    uint64_t v5 = result;
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    uint64_t v6 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
    {
      int v7 = *(unsigned __int8 *)(v5 + 730);
      *(_DWORD *)long long buf = 68289538;
      int v11 = 0;
      __int16 v12 = 2082;
      uint64_t v13 = "";
      __int16 v14 = 1026;
      int v15 = v7;
      __int16 v16 = 1026;
      int v17 = a2;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"Connected state of watch changed\", \"from\":%{public}hhd, \"to\":%{public}hhd}", buf, 0x1Eu);
    }
    *(unsigned char *)(v5 + 730) = a2;
    sub_100DD9EF0(v5 + 904, a2);
    if (*(unsigned char *)(v5 + 730) && !*(unsigned char *)(v5 + 731))
    {
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      uint64_t v8 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Stop monitoring, nearby", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F7C40);
        }
        uint64_t v9 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::updateCompanionConnectedState(const CFAbsoluteTime, BOOL)", "%s\n", v9);
        if (v9 != (char *)buf) {
          free(v9);
        }
      }
      (*(void (**)(void))(**(void **)(v5 + 1768) + 344))(*(void *)(v5 + 1768));
      (*(void (**)(void))(**(void **)(v5 + 1768) + 280))();
      *(double *)(v5 + 624) = (*(double (**)(void))(**(void **)(v5 + 1768) + 144))(*(void *)(v5 + 1768));
      (*(void (**)(void))(**(void **)(v5 + 1768) + 216))(*(void *)(v5 + 1768));
      (*(void (**)(void))(**(void **)(v5 + 1768) + 288))();
      (*(void (**)(void))(**(void **)(v5 + 1768) + 328))();
      return sub_100DBB158(v5);
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, const char *, uint64_t, double))(*(void *)v5 + 96))(v5, "kNotificationCompanionConnectionUpdate", 1, a3);
    }
  }
  return result;
}

uint64_t sub_100DBB158(uint64_t result)
{
  int v1 = *(void **)(result + 240);
  if (v1 != (void *)(result + 248))
  {
    do
    {
      v1[40] = 0xBFF0000000000000;
      *((_DWORD *)v1 + 82) = 0;
      uint64_t v2 = (void *)v1[1];
      if (v2)
      {
        do
        {
          unint64_t v3 = v2;
          uint64_t v2 = (void *)*v2;
        }
        while (v2);
      }
      else
      {
        do
        {
          unint64_t v3 = (void *)v1[2];
          BOOL v4 = *v3 == (void)v1;
          int v1 = v3;
        }
        while (!v4);
      }
      int v1 = v3;
    }
    while (v3 != (void *)(result + 248));
  }
  return result;
}

void sub_100DBB1B0(unsigned char *a1, int a2, double a3)
{
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  uint64_t v6 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)long long buf = 67240192;
    int v9 = a2;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Fence: Got kNotificationAirplaneMode, airplaneMode, %{public}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    int v7 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::updateAirplaneMode(const CFAbsoluteTime, BOOL)", "%s\n", v7);
    if (v7 != (char *)buf) {
      free(v7);
    }
  }
  a1[728] = a2;
  sub_100F5FA94((uint64_t)(a1 + 1312), a2);
  sub_100DDA2D4((uint64_t)(a1 + 904), a1[728]);
  sub_1001BA5A0((uint64_t)a1, a3);
  if ((a2 & 1) == 0) {
    (*(void (**)(unsigned char *, const char *, uint64_t, double))(*(void *)a1 + 96))(a1, "kNotificationAirplaneMode", 1, a3);
  }
}

void sub_100DBB3D0(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t *a4)
{
  *(void *)long long buf = a2;
  uint64_t v8 = sub_100DCE264((uint64_t **)(a1 + 240), (unsigned __int8 *)a2, (uint64_t)&unk_101D0B290, (long long **)buf);
  int v9 = v8;
  int v10 = *((_DWORD *)v8 + 70);
  if (*a3 != -1) {
    *((_DWORD *)v8 + 70) = *a3;
  }
  *((_DWORD *)v8 + 87) = 1;
  sub_100D8EB6C((char *)&v17);
  std::string::operator=(&v17, (const std::string *)a2);
  std::string::operator=(&v18, (const std::string *)(a2 + 24));
  std::string::operator=(&v19, (const std::string *)(a2 + 48));
  long long v24 = *(_OWORD *)(a2 + 136);
  long long v25 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)char v26 = *(_OWORD *)(a2 + 168);
  *(void *)&v26[13] = *(void *)(a2 + 181);
  long long v11 = *(_OWORD *)(a2 + 88);
  long long v20 = *(_OWORD *)(a2 + 72);
  long long v21 = v11;
  long long v12 = *(_OWORD *)(a2 + 120);
  long long v22 = *(_OWORD *)(a2 + 104);
  long long v23 = v12;
  std::string::operator=(&v27, (const std::string *)(a2 + 192));
  id v13 = v28;
  id v28 = *(id *)(a2 + 216);

  if (&v17 != (std::string *)a2) {
    sub_10027C3B4((char *)__p, *(char **)(a2 + 224), *(void *)(a2 + 232), (uint64_t)(*(void *)(a2 + 232) - *(void *)(a2 + 224)) >> 4);
  }
  int v30 = *((_DWORD *)v9 + 70);
  int v31 = v10;
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  __int16 v14 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
  {
    int v15 = a4;
    if (*((char *)a4 + 23) < 0) {
      int v15 = (uint64_t *)*a4;
    }
    *(_DWORD *)long long buf = 136380675;
    *(void *)&uint8_t buf[4] = v15;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "#significantRegion: notify state, reason, %{private}s", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    if (*((char *)a4 + 23) < 0) {
      a4 = (uint64_t *)*a4;
    }
    int v32 = 136380675;
    int v33 = a4;
    __int16 v16 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::notifySignificantRegionState(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, const CLFenceManager_Type::FenceStatus &, const std::string)", "%s\n", v16);
    if (v16 != buf) {
      free(v16);
    }
  }
  *(_DWORD *)long long buf = 1;
  sub_100DBB74C(a1, buf, (uint64_t)&v17);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }

  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v27.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v19.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v18.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v17.__r_.__value_.__l.__data_);
  }
}

void sub_100DBB718(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_100488394((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100DBB74C(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  if (*a2)
  {
    if (!*(_DWORD *)(a3 + 248)) {
      goto LABEL_8;
    }
LABEL_6:
    sub_100F5FCEC(a1 + 1312);
    goto LABEL_11;
  }
  int v6 = *(_DWORD *)(a3 + 136);
  if (*(_DWORD *)(a3 + 248))
  {
    if ((v6 & 0x2000) == 0) {
      goto LABEL_6;
    }
    sub_100F5FD0C(a1 + 1312);
  }
  else
  {
    if ((v6 & 0x2000) == 0)
    {
LABEL_8:
      sub_100F5FCDC(a1 + 1312);
      goto LABEL_11;
    }
    sub_100F5FCFC(a1 + 1312);
  }
LABEL_11:
  (*(void (**)(void, _DWORD *, uint64_t))(**(void **)(a1 + 1768) + 96))(*(void *)(a1 + 1768), a2, a3);
  uint64_t v7 = *(void *)(a1 + 1824);
  if (v7)
  {
    unsigned int v8 = *(_DWORD *)(a3 + 248);
    sub_100616924(v7, a3, v8);
  }
  else
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    int v9 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "#Warning Fence: state changed before first unlock", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      int v10 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::notifyClientsWithFenceEvent(const CLFenceMonitor_Type::Notification &, const CLFenceMonitor_Type::NotificationData &)", "%s\n", v10);
      if (v10 != (char *)buf) {
        free(v10);
      }
    }
  }
}

void sub_100DBB9B0(uint64_t a1)
{
  double v1 = __chkstk_darwin(a1);
  unint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = (uint64_t)v8;
  double v10 = v1;
  uint64_t v12 = v11;
  *(void *)long long buf = v8;
  id v13 = sub_100DCE264((uint64_t **)(v11 + 240), v8, (uint64_t)&unk_101D0B290, (long long **)buf);
  if (!*v7)
  {
    if (sub_10018252C((void *)(v12 + 48)))
    {
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      __int16 v14 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "converging state, declaring entry during attempt", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F7C40);
        }
        LOWORD(v54.__r_.__value_.__l.__data_) = 0;
        int v53 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::notifySignificantRegionTransition(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, const CLFenceManager_Type::FenceStatus &, const CLDaemonLocation &, const std::string)", "%s\n", v53);
        if (v53 != (char *)buf) {
          free(v53);
        }
      }
      sub_100182574((void *)(v12 + 48), buf);
      *(unsigned char *)(*(void *)buf + 56) = 1;
      char v15 = (*(uint64_t (**)(void))(**(void **)(v12 + 1768) + 176))(*(void *)(v12 + 1768));
      *(unsigned char *)(*(void *)buf + 160) = v15;
      (*(void (**)(void, uint64_t, double))(**(void **)(v12 + 1768) + 208))(*(void *)(v12 + 1768), 2, v10);
      if (*(void *)&buf[8]) {
        sub_1000DB0A0(*(std::__shared_weak_count **)&buf[8]);
      }
    }
    if (!*v7)
    {
      (*(void (**)(void, uint64_t, double))(**(void **)(v12 + 1768) + 208))(*(void *)(v12 + 1768), 7, v10);
      if (sub_1009C527C((int *)(v12 + 48)) && !sub_10018252C((void *)(v12 + 48))) {
        (*(void (**)(void, uint64_t, double))(**(void **)(v12 + 1768) + 208))(*(void *)(v12 + 1768), 6, v10);
      }
    }
  }
  double v16 = sub_1001ABE80((double *)(v5 + 4), v9, (double *)(v12 + 1776));
  __asm { FMOV            V0.2D, #-1.0 }
  __src[1] = _Q0;
  __src[2] = _Q0;
  __src[3] = _Q0;
  __src[4] = _Q0;
  __src[5] = _Q0;
  __src[6] = _Q0;
  __src[7] = _Q0;
  *(void *)((char *)&__src[9] + 4) = 0;
  *(void *)((char *)&__src[8] + 12) = 0;
  *(_OWORD *)((char *)&__src[9] + 12) = xmmword_101D1C320;
  *(_OWORD *)((char *)&__src[10] + 12) = _Q0;
  *(_OWORD *)((char *)&__src[11] + 12) = _Q0;
  *(_OWORD *)((char *)&__src[12] + 12) = _Q0;
  DWORD2(__src[8]) = 0xFFFF;
  HIDWORD(__src[13]) = 0;
  *(void *)&__src[14] = 0xBFF0000000000000;
  __src[20] = xmmword_101D1C570;
  __src[21] = _Q0;
  long long v22 = *(_OWORD *)(v12 + 288);
  long long v23 = *(_OWORD *)(v12 + 304);
  __src[22] = _Q0;
  *(_OWORD *)((char *)&__src[17] + 4) = *(_OWORD *)(v5 + 140);
  *(_OWORD *)((char *)&__src[16] + 8) = *(_OWORD *)(v5 + 128);
  long long v24 = *(_OWORD *)(v5 + 96);
  *(_OWORD *)((char *)&__src[15] + 8) = *(_OWORD *)(v5 + 112);
  *(_OWORD *)((char *)&__src[14] + 8) = v24;
  long long v25 = *(_OWORD *)(v5 + 48);
  *(_OWORD *)((char *)&__src[10] + 8) = *(_OWORD *)(v5 + 32);
  *(_OWORD *)((char *)&__src[11] + 8) = v25;
  long long v26 = *(_OWORD *)(v5 + 80);
  *(_OWORD *)((char *)&__src[12] + 8) = *(_OWORD *)(v5 + 64);
  long long v27 = *(_OWORD *)v5;
  *(_OWORD *)((char *)&__src[9] + 8) = *(_OWORD *)(v5 + 16);
  DWORD1(__src[18]) = 0xFFFF;
  *(void *)&__src[19] = 0;
  *((void *)&__src[18] + 1) = 0;
  *((void *)&__src[19] + 1) = 0xBFF0000000000000;
  *(_OWORD *)((char *)&__src[8] + 8) = v27;
  *(_OWORD *)((char *)&__src[13] + 8) = v26;
  long long v28 = *(_OWORD *)(v12 + 560);
  *(_OWORD *)((char *)&__src[24] + 4) = *(_OWORD *)(v12 + 544);
  *(_OWORD *)((char *)&__src[25] + 4) = v28;
  *(_OWORD *)((char *)&__src[26] + 4) = *(_OWORD *)(v12 + 576);
  long long v29 = *(_OWORD *)(v12 + 496);
  *(_OWORD *)((char *)&__src[20] + 4) = *(_OWORD *)(v12 + 480);
  *(_OWORD *)((char *)&__src[21] + 4) = v29;
  long long v30 = *(_OWORD *)(v12 + 528);
  *(_OWORD *)((char *)&__src[22] + 4) = *(_OWORD *)(v12 + 512);
  *(_OWORD *)((char *)&__src[23] + 4) = v30;
  long long v31 = *(_OWORD *)(v12 + 464);
  *(_OWORD *)((char *)&__src[18] + 4) = *(_OWORD *)(v12 + 448);
  *(_OWORD *)((char *)&__src[19] + 4) = v31;
  *(_OWORD *)((char *)&__src[36] + 12) = *(_OWORD *)(v12 + 428);
  long long v32 = *(_OWORD *)(v12 + 400);
  __src[34] = *(_OWORD *)(v12 + 384);
  __src[35] = v32;
  __src[36] = *(_OWORD *)(v12 + 416);
  long long v33 = *(_OWORD *)(v12 + 336);
  __src[30] = *(_OWORD *)(v12 + 320);
  __src[31] = v33;
  long long v34 = *(_OWORD *)(v12 + 368);
  __src[32] = *(_OWORD *)(v12 + 352);
  __src[33] = v34;
  BYTE8(__src[0]) = 1;
  *(double *)&__src[8] = v10;
  __src[28] = v22;
  __src[27] = *(_OWORD *)(v12 + 588);
  __src[29] = v23;
  DWORD1(__src[38]) = *(_DWORD *)(v12 + 604);
  (*(void (**)(uint8_t *__return_ptr))(**(void **)(v12 + 1768) + 128))(buf);
  __src[48] = v87;
  __src[49] = v88;
  *(void *)&__src[50] = v89;
  __src[44] = v83;
  __src[45] = v84;
  __src[47] = v86;
  __src[46] = v85;
  __src[43] = v82;
  __src[42] = *(_OWORD *)buf;
  (*(void (**)(uint8_t *__return_ptr))(**(void **)(v12 + 1768) + 136))(buf);
  *(_OWORD *)((char *)&__src[56] + 8) = v87;
  *(_OWORD *)((char *)&__src[57] + 8) = v88;
  *(_OWORD *)((char *)&__src[52] + 8) = v83;
  *(_OWORD *)((char *)&__src[53] + 8) = v84;
  *(_OWORD *)((char *)&__src[54] + 8) = v85;
  *(_OWORD *)((char *)&__src[55] + 8) = v86;
  *(_OWORD *)((char *)&__src[50] + 8) = *(_OWORD *)buf;
  *(_OWORD *)((char *)&__src[51] + 8) = v82;
  *((void *)&__src[58] + 1) = v89;
  __n128 v35 = sub_1000DBC34(buf);
  int v36 = (*(uint64_t (**)(__n128))(**(void **)(v12 + 1768) + 16))(v35);
  int v37 = (int *)(v13 + 35);
  sub_100043084(v5, v16, (uint64_t)buf, v9, (int *)v13 + 70, v36, (uint64_t)__src);
  if (v92) {
    sub_1000DB0A0(v92);
  }
  int v38 = *v37;
  if (*v7 != -1) {
    *int v37 = *v7;
  }
  *((_DWORD *)v13 + 87) = 1;
  sub_100D8EB6C((char *)&v54);
  std::string::operator=(&v54, (const std::string *)v9);
  std::string::operator=(&v55, (const std::string *)(v9 + 24));
  std::string::operator=(&v56, (const std::string *)(v9 + 48));
  long long v61 = *(_OWORD *)(v9 + 136);
  long long v62 = *(_OWORD *)(v9 + 152);
  *(_OWORD *)__int16 v63 = *(_OWORD *)(v9 + 168);
  *(void *)&v63[13] = *(void *)(v9 + 181);
  long long v57 = *(_OWORD *)(v9 + 72);
  long long v58 = *(_OWORD *)(v9 + 88);
  long long v59 = *(_OWORD *)(v9 + 104);
  long long v60 = *(_OWORD *)(v9 + 120);
  std::string::operator=(&v64, (const std::string *)(v9 + 192));
  id v39 = v65;
  id v65 = *(id *)(v9 + 216);

  if (&v54 != (std::string *)v9) {
    sub_10027C3B4((char *)v66, *(char **)(v9 + 224), *(void *)(v9 + 232), (uint64_t)(*(void *)(v9 + 232) - *(void *)(v9 + 224)) >> 4);
  }
  *((void *)&v60 + 1) = v13[40];
  memcpy(v78, __src, sizeof(v78));
  int v40 = *((_DWORD *)v13 + 70);
  *(_OWORD *)&v76[12] = *(_OWORD *)(v5 + 140);
  long long v41 = *(_OWORD *)(v5 + 128);
  long long v75 = *(_OWORD *)(v5 + 112);
  *(_OWORD *)int v76 = v41;
  long long v42 = *(_OWORD *)(v5 + 96);
  long long v73 = *(_OWORD *)(v5 + 80);
  long long v74 = v42;
  long long v43 = *(_OWORD *)(v5 + 64);
  long long v71 = *(_OWORD *)(v5 + 48);
  long long v72 = v43;
  long long v44 = *(_OWORD *)(v5 + 32);
  long long v45 = *(_OWORD *)v5;
  long long v69 = *(_OWORD *)(v5 + 16);
  long long v70 = v44;
  long long v68 = v45;
  int v67 = v40;
  int v77 = v38;
  *(void *)&long long v41 = v13[42];
  double v46 = v10 - *(double *)&v41;
  BOOL v47 = *(double *)&v41 <= 0.0;
  double v48 = -1.0;
  if (!v47) {
    double v48 = v46;
  }
  *(double *)&long long v62 = v48;
  DWORD2(v61) = sub_100DDAF8C(v12 + 904, (unsigned __int8 *)v9);
  DWORD1(v61) = sub_100DDAFCC(v12 + 904);
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  __int16 v49 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
  {
    int v50 = v3;
    if (*((char *)v3 + 23) < 0) {
      int v50 = (uint64_t *)*v3;
    }
    *(_DWORD *)long long buf = 136380675;
    *(void *)&uint8_t buf[4] = v50;
    _os_log_impl((void *)&_mh_execute_header, v49, OS_LOG_TYPE_DEFAULT, "#significantRegion: notify event, reason, %{private}s", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    if (*((char *)v3 + 23) < 0) {
      unint64_t v3 = (uint64_t *)*v3;
    }
    v80.type = 136380675;
    *(void *)&v80.confidence = v3;
    uint64_t v52 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::notifySignificantRegionTransition(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, const CLFenceManager_Type::FenceStatus &, const CLDaemonLocation &, const std::string)", "%s\n", v52);
    if (v52 != (char *)buf) {
      free(v52);
    }
  }
  *(_DWORD *)long long buf = 0;
  sub_100DBB74C(v12, buf, (uint64_t)&v54);
  *(_DWORD *)long long buf = 6;
  sub_100DBB74C(v12, buf, (uint64_t)&v54);
  if (sub_100F5E718((unsigned char *)(v12 + 1312)))
  {
    (*(void (**)(CLMotionActivity *__return_ptr))(**(void **)(v12 + 1768) + 128))(&v80);
    char v51 = (*(uint64_t (**)(void))(**(void **)(v12 + 1768) + 16))(*(void *)(v12 + 1768));
    sub_100F608A4((uint64_t)buf, (uint64_t)&v54, (double *)v13 + 35, (long long *)(v12 + 1648), &v80, v5, v12 + 144, v51, v10, *(unsigned char *)(v12 + 613), *(unsigned char *)(v12 + 728));
    sub_100F608B8((uint64_t)buf);
    if (__p)
    {
      char v91 = __p;
      operator delete(__p);
    }
    if (SHIBYTE(v82) < 0) {
      operator delete(*(void **)&buf[8]);
    }
  }
  *((double *)v13 + 42) = v10;
  *((_DWORD *)v13 + 86) = *(_DWORD *)(v5 + 96);
  if (v66[0])
  {
    v66[1] = v66[0];
    operator delete(v66[0]);
  }

  if (SHIBYTE(v64.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v64.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v56.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v55.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v54.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v54.__r_.__value_.__l.__data_);
  }
}

void sub_100DBC398(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_100488394((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100DBC408(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 240);
  if (v2)
  {
    *(void *)(a1 + 248) = v2;
    operator delete(v2);
  }
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

void sub_100DBC44C(uint64_t a1, double a2)
{
  uint64_t v4 = *(void *)(a1 + 256);
  double v5 = vabdd_f64(a2, *(double *)(a1 + 744));
  double v6 = *(double *)(a1 + 736) + v5 * -45.0;
  if (v5 >= 855.0) {
    double v6 = 0.0;
  }
  if (v6 > 0.0) {
    double v7 = v6;
  }
  else {
    double v7 = 0.0;
  }
  double v8 = *(double *)(a1 + 720);
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  uint64_t v9 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
  {
    int v10 = (*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 16))(*(void *)(a1 + 1768));
    int v11 = *(unsigned __int8 *)(a1 + 612);
    int v12 = *(unsigned __int8 *)(a1 + 728);
    int v13 = *(unsigned __int8 *)(a1 + 730);
    int v14 = *(unsigned __int8 *)(a1 + 640);
    uint64_t v15 = *(void *)(a1 + 736);
    *(_DWORD *)long long buf = 67242241;
    *(_DWORD *)long long v25 = v10;
    *(_WORD *)&v25[4] = 1026;
    *(_DWORD *)&v25[6] = v11;
    __int16 v26 = 2050;
    uint64_t v27 = v4;
    __int16 v28 = 1026;
    int v29 = v12;
    __int16 v30 = 1025;
    int v31 = v13;
    __int16 v32 = 1025;
    int v33 = v14;
    __int16 v34 = 2049;
    uint64_t v35 = v15;
    __int16 v36 = 2049;
    double v37 = v7;
    __int16 v38 = 2049;
    double v39 = v7 + v8 * -45.0;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "Fence: triggerReceivedNow, isWifiPowered, %{public}d, isLocationEnabled, %{public}d, numOfFences, %{public}lu, airplane, %{public}d, connected, %{private}d, watchdogNeeded, %{private}d, minDist, %{private}.1lf, %{private}.1lf, minDistNextWake, %{private}.1lf", buf, 0x48u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    (*(void (**)(void))(**(void **)(a1 + 1768) + 16))(*(void *)(a1 + 1768));
    long long v20 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::triggerReceivedNow(const CFAbsoluteTime)", "%s\n", v20);
    if (v20 != (char *)buf) {
      free(v20);
    }
  }
  if (v7 + v8 * -45.0 > 0.0 || !*(unsigned char *)(a1 + 612) || *(unsigned char *)(a1 + 730) && !*(unsigned char *)(a1 + 731) || !v4) {
    goto LABEL_32;
  }
  double v16 = *(double *)(a1 + 648);
  if ((*(unsigned int (**)(void))(**(void **)(a1 + 1768) + 16))(*(void *)(a1 + 1768)))
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    std::string v17 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 134283521;
      *(double *)long long v25 = v7;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEBUG, "Fence: Trigger received; performing WiFi scan, minDistanceToFence, %{private}.1lf",
        buf,
        0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      long long v22 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::triggerReceivedNow(const CFAbsoluteTime)", "%s\n", v22);
      if (v22 != (char *)buf) {
        free(v22);
      }
    }
    sub_100DBCC34(a1, a2);
    return;
  }
  if (+[CLGnssProviderAdapter isSupported]
    && ((*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 400))(*(void *)(a1 + 1768)) & 1) == 0
    && vabdd_f64(a2, v16) > 756.0)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    std::string v18 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 134283521;
      *(double *)long long v25 = v7;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEBUG, "Fence: Trigger received; schedule watchdog for GPS, minDistanceToFence, %{private}.1lf",
        buf,
        0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      long long v23 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::triggerReceivedNow(const CFAbsoluteTime)", "%s\n", v23);
      if (v23 != (char *)buf) {
        free(v23);
      }
    }
    *(double *)(a1 + 648) = a2;
    *(void *)(a1 + 684) = 0x300000001;
    (*(void (**)(void, void *))(**(void **)(a1 + 1768) + 240))(*(void *)(a1 + 1768), &unk_101D8E2D8);
  }
  else
  {
LABEL_32:
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    std::string v19 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEBUG, "Fence: ignoring trigger event", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      long long v21 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::triggerReceivedNow(const CFAbsoluteTime)", "%s\n", v21);
      if (v21 != (char *)buf) {
        free(v21);
      }
    }
    if (sub_1001AF7CC(a1 + 904, a2)) {
      sub_100F5F9BC(a1 + 1312);
    }
  }
}

void sub_100DBCC34(uint64_t a1, double a2)
{
  if (*(void *)(a1 + 256))
  {
    if (*(unsigned char *)(a1 + 730)) {
      BOOL v4 = *(unsigned char *)(a1 + 731) != 0;
    }
    else {
      BOOL v4 = 1;
    }
  }
  else
  {
    BOOL v4 = 0;
  }
  double v5 = *(double *)(a1 + 632);
  double v6 = vabdd_f64(a2, *(double *)(a1 + 696));
  uint64_t v7 = 0x403E000000000000;
  uint64_t v19 = 0x403E000000000000;
  if (v6 <= *(double *)(a1 + 720) * 1.5)
  {
    uint64_t v7 = 0x4034000000000000;
    uint64_t v19 = 0x4034000000000000;
  }
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  double v8 = a2 - v5;
  uint64_t v9 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
  {
    int v10 = *(_DWORD *)(a1 + 684);
    int v11 = *(_DWORD *)(a1 + 688);
    int v12 = *(unsigned __int8 *)(a1 + 640);
    *(_DWORD *)long long buf = 67241473;
    int v33 = v10;
    __int16 v34 = 1026;
    int v35 = v11;
    __int16 v36 = 2049;
    double v37 = v8;
    __int16 v38 = 2049;
    double v39 = v6;
    __int16 v40 = 2049;
    uint64_t v41 = v7;
    __int16 v42 = 1026;
    int v43 = v12;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "Fence: need a scan, count, %{public}d, %{public}d, dt_scan, %{private}.1lf, dt_watchdog, %{private}.1lf, interval, %{private}.1lf, needWatchdog, %{public}d", buf, 0x32u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    int v14 = *(_DWORD *)(a1 + 684);
    int v15 = *(_DWORD *)(a1 + 688);
    int v16 = *(unsigned __int8 *)(a1 + 640);
    int v20 = 67241473;
    int v21 = v14;
    __int16 v22 = 1026;
    int v23 = v15;
    __int16 v24 = 2049;
    double v25 = v8;
    __int16 v26 = 2049;
    double v27 = v6;
    __int16 v28 = 2049;
    uint64_t v29 = v7;
    __int16 v30 = 1026;
    int v31 = v16;
    std::string v17 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::requestScan(const CFAbsoluteTime)", "%s\n", v17);
    if (v17 != (char *)buf) {
      free(v17);
    }
  }
  if (v4)
  {
    if ((*(unsigned int (**)(void))(**(void **)(a1 + 1768) + 16))(*(void *)(a1 + 1768))
      && (*(int *)(a1 + 684) < 1 || v8 >= 180.0))
    {
      (*(void (**)(void, const char *))(**(void **)(a1 + 1768) + 304))(*(void *)(a1 + 1768), "requestScan");
      *(double *)(a1 + 632) = a2;
      if (*(unsigned char *)(a1 + 640)
        && ((*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 232))(*(void *)(a1 + 1768)) & 1) == 0
        && sub_1001BAE50(a1))
      {
        (*(void (**)(void, uint64_t *))(**(void **)(a1 + 1768) + 240))(*(void *)(a1 + 1768), &v19);
        *(void *)(a1 + 684) = 1;
      }
      *(unsigned char *)(a1 + 640) = 0;
    }
    else if (v8 >= 10.0 && *(int *)(a1 + 684) >= 1 && *(int *)(a1 + 688) >= 2)
    {
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      int v13 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "Fence: startScan, requesting a receovery scan", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F7C40);
        }
        LOWORD(v20) = 0;
        std::string v18 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::requestScan(const CFAbsoluteTime)", "%s\n", v18);
        if (v18 != (char *)buf) {
          free(v18);
        }
      }
      *(double *)(a1 + 632) = a2;
      (*(void (**)(void, const char *))(**(void **)(a1 + 1768) + 304))(*(void *)(a1 + 1768), "requestScan.recovery");
    }
  }
}

void sub_100DBD164(uint64_t a1, double a2)
{
}

void sub_100DBD16C(uint64_t a1, int *a2, uint64_t a3, double a4)
{
  double v20 = a4;
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  double v8 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
  {
    int v9 = *a2;
    *(_DWORD *)long long buf = 67174657;
    *(_DWORD *)&uint8_t buf[4] = v9;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Fence: Got bluetooth notification, %{private}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    int v17 = *a2;
    int v21 = 67174657;
    int v22 = v17;
    std::string v18 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::handleBluetoothNotification(const CFAbsoluteTime, const CLBluetoothService_Type::Notification &, const CLBluetoothService_Type::NotificationData &)", "%s\n", v18);
    if (v18 != (char *)buf) {
      free(v18);
    }
  }
  if ((*a2 & 0xFFFFFFFE) == 4)
  {
    int v10 = *(_DWORD *)(a3 + 92);
    if (v10 == 22 || v10 == 17)
    {
      *(double *)(a1 + 840) = a4;
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      int v11 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "Fence: Got kNotificationTriggerReceived from Bluetooth", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F7C40);
        }
        LOWORD(v21) = 0;
        uint64_t v19 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::handleBluetoothNotification(const CFAbsoluteTime, const CLBluetoothService_Type::Notification &, const CLBluetoothService_Type::NotificationData &)", "%s\n", v19);
        if (v19 != (char *)buf) {
          free(v19);
        }
      }
      sub_100DBD644(a1, (uint64_t)"kNotificationConnect / kNotificationDisconnect", 1, &v20);
      sub_100182574((void *)(a1 + 48), buf);
      if (*(void *)buf) {
        ++*(_DWORD *)(*(void *)buf + 164);
      }
      if (*a2 == 5)
      {
        int v12 = (double *)(a1 + 1696);
      }
      else
      {
        if (*a2 != 4) {
          goto LABEL_30;
        }
        int v12 = (double *)(a1 + 1688);
      }
      *int v12 = a4;
LABEL_30:
      if (v24) {
        sub_1000DB0A0(v24);
      }
      return;
    }
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    int v13 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      int v14 = *(_DWORD *)(a3 + 92);
      *(_DWORD *)long long buf = 67109120;
      *(_DWORD *)&uint8_t buf[4] = v14;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "not a car bluetooth device (%d)", buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      int v15 = *(_DWORD *)(a3 + 92);
      int v21 = 67109120;
      int v22 = v15;
      int v16 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::handleBluetoothNotification(const CFAbsoluteTime, const CLBluetoothService_Type::Notification &, const CLBluetoothService_Type::NotificationData &)", "%s\n", v16);
      if (v16 != (char *)buf) {
        free(v16);
      }
    }
  }
}

void sub_100DBD644(uint64_t a1, uint64_t a2, int a3, double *a4)
{
  if (*(unsigned char *)(a1 + 620))
  {
    double v6 = vabdd_f64(*a4, *(double *)(a1 + 744));
    double v7 = *(double *)(a1 + 736) + v6 * -45.0;
    if (v6 >= 855.0) {
      double v7 = 0.0;
    }
    if (v7 > 0.0) {
      double v8 = v7;
    }
    else {
      double v8 = 0.0;
    }
    uint64_t v9 = *(void *)(a1 + 256);
    BOOL v10 = v8 + -13500.0 > 0.0 || v9 == 0;
    if (v10 || *(unsigned char *)(a1 + 730) && !*(unsigned char *)(a1 + 731) || !*(unsigned char *)(a1 + 612))
    {
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      int v15 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
      {
        int v16 = *(unsigned __int8 *)(a1 + 728);
        int v17 = *(unsigned __int8 *)(a1 + 730);
        int v18 = *(unsigned __int8 *)(a1 + 612);
        *(_DWORD *)long long buf = 134350081;
        uint64_t v24 = v9;
        __int16 v25 = 1026;
        *(_DWORD *)__int16 v26 = v16;
        *(_WORD *)&v26[4] = 1026;
        *(_DWORD *)&v26[6] = v17;
        *(_WORD *)double v27 = 1026;
        *(_DWORD *)&v27[2] = v18;
        *(_WORD *)__int16 v28 = 2049;
        *(double *)&v28[2] = v8;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "Fence: ignore delayed trigger, numOfFences, %{public}zu, airplane, %{public}d, cConnected, %{public}d, location services, %{public}d, minDistanceToFence, %{private}.1lf", buf, 0x28u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 == -1) {
          goto LABEL_44;
        }
        goto LABEL_50;
      }
    }
    else
    {
      if (a3) {
        *(_DWORD *)(a1 + 704) = 0;
      }
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      int v11 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v12 = *(void *)(a1 + 712);
        int v13 = *(_DWORD *)(a1 + 704);
        int v14 = *(_DWORD *)(a1 + 708);
        *(_DWORD *)long long buf = 134284803;
        uint64_t v24 = v12;
        __int16 v25 = 2081;
        *(void *)__int16 v26 = a2;
        *(_WORD *)&v26[8] = 1026;
        *(_DWORD *)double v27 = v13;
        *(_WORD *)&v27[4] = 1026;
        *(_DWORD *)__int16 v28 = v14;
        *(_WORD *)&v28[4] = 2049;
        *(double *)&v28[6] = v8;
        __int16 v29 = 2049;
        double v30 = v8 + -13500.0;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "Fence: scheduleNextTriggerWake in, %{private}.1lf, reason, %{private}s, count, %{public}d, %{public}d, minDistanceToFence, %{private}.1lf, minDistanceToFencesOnNextWake, %{private}.1lf", buf, 0x36u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F7C40);
        }
        int v22 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::scheduleNextTriggerWake(const char *, BOOL, const CFTimeInterval &)", "%s\n", v22);
        if (v22 != (char *)buf) {
          free(v22);
        }
      }
      if (*(_DWORD *)(a1 + 704) < *(_DWORD *)(a1 + 708))
      {
        (*(void (**)(void, uint64_t))(**(void **)(a1 + 1768) + 224))(*(void *)(a1 + 1768), a1 + 712);
        return;
      }
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      double v20 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "Fence: scheduleNextTriggerWake, no more delayed triggers", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 == -1)
        {
LABEL_44:
          int v21 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::scheduleNextTriggerWake(const char *, BOOL, const CFTimeInterval &)", "%s\n", v21);
          if (v21 != (char *)buf) {
            free(v21);
          }
          return;
        }
LABEL_50:
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
        goto LABEL_44;
      }
    }
  }
  else
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    uint64_t v19 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 136380675;
      uint64_t v24 = a2;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEBUG, "Fence: avoid scheduleNextTriggerWake, reason, %{private}s", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 == -1) {
        goto LABEL_44;
      }
      goto LABEL_50;
    }
  }
}

void sub_100DBDCA0(uint64_t a1, long long *a2)
{
  (*(void (**)(void))(**(void **)(a1 + 1768) + 264))(*(void *)(a1 + 1768));
  long long v4 = *a2;
  *(_OWORD *)(a1 + 1856) = a2[1];
  *(_OWORD *)(a1 + 1840) = v4;
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  double v5 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 1840);
    int v7 = *(unsigned __int8 *)(a1 + 1856);
    int v8 = *(_DWORD *)(a1 + 1860);
    int v9 = *(_DWORD *)(a1 + 1864);
    int v10 = *(_DWORD *)(a1 + 1868);
    uint64_t v11 = *(void *)(a1 + 1848);
    *(_DWORD *)long long buf = 134284801;
    uint64_t v14 = v6;
    __int16 v15 = 1025;
    int v16 = v7;
    __int16 v17 = 1025;
    int v18 = v8;
    __int16 v19 = 1025;
    int v20 = v9;
    __int16 v21 = 1025;
    int v22 = v10;
    __int16 v23 = 2049;
    uint64_t v24 = v11;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Fence: MiLo, MicroLocation event updated at CLFenceMonitor, timestamp, %{private}.1f, isModelStable, %{private}d, numWifiAPs, %{private}u, numBleDevices, %{private}u, numUwbDevices, %{private}u, homeLoiProbability, %{private}.2f", buf, 0x2Eu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    uint64_t v12 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::handleMicroLocationEventUpdate(const CFAbsoluteTime, const MicroLocationEvent &)", "%s\n", v12);
    if (v12 != (char *)buf) {
      free(v12);
    }
  }
  sub_100DBDF38(a1, 1);
}

void sub_100DBDF38(uint64_t a1, int a2)
{
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  long long v4 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    int v5 = *(unsigned __int8 *)(a1 + 1872);
    uint64_t v6 = *(void *)(a1 + 1896);
    *(_DWORD *)long long buf = 67175169;
    *(_DWORD *)int v18 = v5;
    *(_WORD *)&v18[4] = 1025;
    *(_DWORD *)&v18[6] = v6;
    LOWORD(v19[0]) = 1025;
    *(_DWORD *)((char *)v19 + 2) = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Fence: MiLo, handleFencesPendingMiLoEventUpdate, fIsPendingMicroLocationEventUpdate, %{private}d, numFences, %{private}d, useMiLoEvent, %{private}d", buf, 0x14u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    int v16 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::handleFencesPendingMiLoEventUpdate(const CFAbsoluteTime, const BOOL)", "%s\n", v16);
    if (v16 != (char *)buf) {
      free(v16);
    }
  }
  if (*(unsigned char *)(a1 + 1872))
  {
    int v7 = (uint64_t **)(a1 + 1880);
    int v8 = *(unsigned __int8 **)(a1 + 1880);
    if (v8 != (unsigned __int8 *)(a1 + 1888))
    {
      do
      {
        uint64_t v9 = sub_10001A4C4(a1 + 240, v8 + 32);
        if (a1 + 248 != v9)
        {
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F7C40);
          }
          int v10 = qword_1024193C8;
          if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v11 = (void *)(v9 + 56);
            if (*(char *)(v9 + 79) < 0) {
              uint64_t v11 = (void *)*v11;
            }
            *(_DWORD *)long long buf = 136380931;
            *(void *)int v18 = v11;
            *(_WORD *)&v18[8] = 1025;
            v19[0] = a2;
            _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "Fence: MiLo, Processing fencePendingMiLo, %{private}s, useMiLoEvent, %{private}d", buf, 0x12u);
          }
          if (sub_10013D1A0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1024193C0 != -1) {
              dispatch_once(&qword_1024193C0, &stru_1022F7C40);
            }
            __int16 v15 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::handleFencesPendingMiLoEventUpdate(const CFAbsoluteTime, const BOOL)", "%s\n", v15);
            if (v15 != (char *)buf) {
              free(v15);
            }
          }
          sub_1000DBC34(buf);
          sub_100013C58(a1);
          if (v20) {
            sub_1000DB0A0(v20);
          }
        }
        uint64_t v12 = (unsigned __int8 *)*((void *)v8 + 1);
        if (v12)
        {
          do
          {
            int v13 = v12;
            uint64_t v12 = *(unsigned __int8 **)v12;
          }
          while (v12);
        }
        else
        {
          do
          {
            int v13 = (unsigned __int8 *)*((void *)v8 + 2);
            BOOL v14 = *(void *)v13 == (void)v8;
            int v8 = v13;
          }
          while (!v14);
        }
        int v8 = v13;
      }
      while (v13 != (unsigned __int8 *)(a1 + 1888));
      int v7 = (uint64_t **)(a1 + 1880);
      int v8 = *(unsigned __int8 **)(a1 + 1880);
    }
    *(unsigned char *)(a1 + 1872) = 0;
    sub_100DCE44C(v7, (uint64_t *)v8, (uint64_t *)(a1 + 1888));
  }
}

void sub_100DBE39C(_Unwind_Exception *a1)
{
  if (STACK[0x260]) {
    sub_1000DB0A0((std::__shared_weak_count *)STACK[0x260]);
  }
  _Unwind_Resume(a1);
}

void sub_100DBE3BC(uint64_t a1, int *a2, double *a3, double a4)
{
  int v8 = *a2;
  if (*a2 == 11)
  {
    sub_100DDCB48(a1 + 904, *((unsigned __int8 *)a3 + 137));
  }
  else if (v8 == 7)
  {
    *(double *)(a1 + 1760) = a4;
    sub_100DDCCFC(a1 + 904, a4);
  }
  else if (v8 == 1)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    uint64_t v9 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
    {
      int v10 = *(unsigned __int8 *)a3;
      *(_DWORD *)long long buf = 67240192;
      *(_DWORD *)long long v44 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "Fence: Got kNotificationPower, isWifiPowered, %{public}d", buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      int v35 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::handleWifiNotification(const CFAbsoluteTime, const CLWifiService_Type::Notification &, const CLWifiService_Type::NotificationData &)", "%s\n", v35);
      if (v35 != (char *)buf) {
        free(v35);
      }
    }
    if (!*(unsigned char *)a3)
    {
      sub_100F5FA84(a1 + 1312, 0);
      *(void *)(a1 + 684) = 0;
      (*(void (**)(void))(**(void **)(a1 + 1768) + 280))();
    }
  }
  if (*(unsigned char *)(a1 + 612))
  {
    uint64_t v11 = *(void *)(a1 + 256);
    switch(*a2)
    {
      case 1:
        sub_100DDC7B8((unsigned char *)(a1 + 904), *(unsigned __int8 *)a3, a4);
        return;
      case 3:
        __int16 v15 = a3 + 13;
        sub_100DDDA3C(a1 + 904, a3 + 13, a4);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F7C40);
        }
        int v16 = qword_1024193C8;
        if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v17 = 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(*((void *)a3 + 15) - *((void *)a3 + 14)) >> 3);
          double v18 = a3[13];
          int v19 = *(_DWORD *)(a1 + 684);
          int v20 = *(_DWORD *)(a1 + 688);
          *(_DWORD *)long long buf = 134284801;
          *(void *)long long v44 = v17;
          *(_WORD *)&v44[8] = 2049;
          *(double *)long long v45 = v18;
          *(_WORD *)&v45[8] = 2049;
          double v46 = a4 - v18;
          __int16 v47 = 2050;
          uint64_t v48 = v11;
          __int16 v49 = 1026;
          int v50 = v19;
          __int16 v51 = 1026;
          int v52 = v20;
          _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEBUG, "Fence: monitor, got kNotificationScan, result, %{private}lu, time, %{private}.1lf, age, %{private}.1lf, numFences, %{public}lu, locationCount, %{public}d, %{public}d", buf, 0x36u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F7C40);
          }
          double v37 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::handleWifiNotification(const CFAbsoluteTime, const CLWifiService_Type::Notification &, const CLWifiService_Type::NotificationData &)", "%s\n", v37);
          if (v37 != (char *)buf) {
            free(v37);
          }
        }
        if (((a4 - *v15 >= 15.0) & ~(*(unsigned int (**)(void))(**(void **)(a1 + 1768) + 24))(*(void *)(a1 + 1768))) != 0) {
          goto LABEL_28;
        }
        return;
      case 4:
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F7C40);
        }
        uint64_t v12 = qword_1024193C8;
        if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
        {
          int v13 = *(_DWORD *)(a1 + 684);
          int v14 = *(_DWORD *)(a1 + 688);
          *(_DWORD *)long long buf = 67240448;
          *(_DWORD *)long long v44 = v13;
          *(_WORD *)&v44[4] = 1026;
          *(_DWORD *)&v44[6] = v14;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "scan result, count, wait, %{public}d, retry, %{public}d, error", buf, 0xEu);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F7C40);
          }
          __int16 v36 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::handleWifiNotification(const CFAbsoluteTime, const CLWifiService_Type::Notification &, const CLWifiService_Type::NotificationData &)", "%s\n", v36);
          if (v36 != (char *)buf) {
            free(v36);
          }
        }
LABEL_28:
        if (!v11) {
          return;
        }
        if (!(*(unsigned int (**)(void))(**(void **)(a1 + 1768) + 16))(*(void *)(a1 + 1768))) {
          return;
        }
        int v21 = *(_DWORD *)(a1 + 684);
        if (v21 < 1 || !sub_1001BAE50(a1)) {
          return;
        }
        if (!*(_DWORD *)(a1 + 444))
        {
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F7C40);
          }
          double v27 = qword_1024193C8;
          if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)long long buf = 134349056;
            *(void *)long long v44 = 0x4014000000000000;
            _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEBUG, "Fence: no reachability, expedite watchdog, %{public}.1lf", buf, 0xCu);
          }
          if (sub_10013D1A0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1024193C0 != -1) {
              dispatch_once(&qword_1024193C0, &stru_1022F7C40);
            }
            __int16 v40 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::handleWifiNotification(const CFAbsoluteTime, const CLWifiService_Type::Notification &, const CLWifiService_Type::NotificationData &)", "%s\n", v40);
            if (v40 != (char *)buf) {
              free(v40);
            }
          }
          *(_DWORD *)(a1 + 688) = 2;
          if (((*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 400))(*(void *)(a1 + 1768)) & 1) != 0
            || *(_DWORD *)(a1 + 684) != 1)
          {
            if (qword_1024193C0 != -1) {
              dispatch_once(&qword_1024193C0, &stru_1022F7C40);
            }
            __int16 v28 = qword_1024193C8;
            if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
            {
              int v29 = *(_DWORD *)(a1 + 684);
              int v30 = *(_DWORD *)(a1 + 688);
              int v31 = (*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 400))(*(void *)(a1 + 1768));
              *(_DWORD *)long long buf = 67240704;
              *(_DWORD *)long long v44 = v29;
              *(_WORD *)&v44[4] = 1026;
              *(_DWORD *)&v44[6] = v30;
              *(_WORD *)long long v45 = 1026;
              *(_DWORD *)&v45[2] = v31;
              _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEBUG, "Fence: skip urgent, watchdog already active, %{public}d,%{public}d, %{public}d", buf, 0x14u);
            }
            if (sub_10013D1A0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1024193C0 != -1) {
                dispatch_once(&qword_1024193C0, &stru_1022F7C40);
              }
              (*(void (**)(void))(**(void **)(a1 + 1768) + 400))(*(void *)(a1 + 1768));
              __int16 v32 = (char *)_os_log_send_and_compose_impl();
              sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::handleWifiNotification(const CFAbsoluteTime, const CLWifiService_Type::Notification &, const CLWifiService_Type::NotificationData &)", "%s\n", v32);
              if (v32 != (char *)buf) {
                free(v32);
              }
            }
            goto LABEL_79;
          }
          goto LABEL_78;
        }
        int v22 = *(_DWORD *)(a1 + 688);
        if (v22 <= 1)
        {
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F7C40);
          }
          __int16 v23 = qword_1024193C8;
          if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
          {
            int v24 = *(_DWORD *)(a1 + 688);
            *(_DWORD *)long long buf = 67240192;
            *(_DWORD *)long long v44 = v24;
            _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEBUG, "Fence: startScan, requesting a scan due to an error / empty scan, fScanRetryCounter, %{public}d", buf, 8u);
          }
          if (sub_10013D1A0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1024193C0 != -1) {
              dispatch_once(&qword_1024193C0, &stru_1022F7C40);
            }
            uint64_t v41 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::handleWifiNotification(const CFAbsoluteTime, const CLWifiService_Type::Notification &, const CLWifiService_Type::NotificationData &)", "%s\n", v41);
            if (v41 != (char *)buf) {
              free(v41);
            }
          }
          (*(void (**)(void, const char *))(**(void **)(a1 + 1768) + 304))(*(void *)(a1 + 1768), "onWifiNotification");
          goto LABEL_79;
        }
        if (v21 == 1
          && v22 == 2
          && ((*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 400))(*(void *)(a1 + 1768)) & 1) == 0)
        {
          sub_100103240();
          if ((sub_10010145C() & 1) == 0)
          {
            if (qword_1024193C0 != -1) {
              dispatch_once(&qword_1024193C0, &stru_1022F7C40);
            }
            int v33 = qword_1024193C8;
            if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
            {
              int v34 = *(_DWORD *)(a1 + 688);
              *(_DWORD *)long long buf = 67240704;
              *(_DWORD *)long long v44 = v34;
              *(_WORD *)&v44[4] = 1026;
              *(_DWORD *)&v44[6] = 2;
              *(_WORD *)long long v45 = 2050;
              *(void *)&v45[2] = 0x4014000000000000;
              _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEBUG, "Fence: expedite location watchdog due to empty / error scan , %{public}d, %{public}d, kUrgentWatchdogActivation, %{public}.1lf", buf, 0x18u);
            }
            if (sub_10013D1A0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1024193C0 != -1) {
                dispatch_once(&qword_1024193C0, &stru_1022F7C40);
              }
              __int16 v42 = (char *)_os_log_send_and_compose_impl();
              sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::handleWifiNotification(const CFAbsoluteTime, const CLWifiService_Type::Notification &, const CLWifiService_Type::NotificationData &)", "%s\n", v42);
              if (v42 != (char *)buf) {
                free(v42);
              }
            }
LABEL_78:
            (*(void (**)(void, void *))(**(void **)(a1 + 1768) + 240))(*(void *)(a1 + 1768), &unk_101D8E2D8);
LABEL_79:
            ++*(_DWORD *)(a1 + 688);
            return;
          }
        }
        break;
      case 8:
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F7C40);
        }
        __int16 v25 = qword_1024193C8;
        if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEBUG, "Fence: monitor, got kNotificationBackgroundEntry", buf, 2u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F7C40);
          }
          __int16 v38 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::handleWifiNotification(const CFAbsoluteTime, const CLWifiService_Type::Notification &, const CLWifiService_Type::NotificationData &)", "%s\n", v38);
          if (v38 != (char *)buf) {
            free(v38);
          }
        }
        sub_100DDD62C(a1 + 904, a4);
        return;
      case 9:
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F7C40);
        }
        __int16 v26 = qword_1024193C8;
        if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEBUG, "Fence: monitor, got kNotificationBackgroundExit", buf, 2u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F7C40);
          }
          double v39 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::handleWifiNotification(const CFAbsoluteTime, const CLWifiService_Type::Notification &, const CLWifiService_Type::NotificationData &)", "%s\n", v39);
          if (v39 != (char *)buf) {
            free(v39);
          }
        }
        sub_100DDCD04(a1 + 904, a4);
        return;
      default:
        return;
    }
  }
}

void sub_100DBF474(uint64_t a1, __int32 *a2, unsigned __int8 *a3, double a4)
{
  double v52 = a4;
  switch(*a2)
  {
    case 2:
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      int v8 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "Fence: Device is about to go to sleep", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F7C40);
        }
        v53[0].i16[0] = 0;
        double v39 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::handleStatusNotification(const CFAbsoluteTime, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v39);
        if (v39 != buf) {
          free(v39);
        }
      }
      *(unsigned char *)(a1 + 622) = 1;
      *(double *)(a1 + 1664) = a4;
      *(unsigned char *)(a1 + 1648) = 1;
      *(void *)(a1 + 152) = *(void *)(a1 + 144);
      break;
    case 3:
      if (*(unsigned char *)(a1 + 621) && *(unsigned char *)(a1 + 622))
      {
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F7C40);
        }
        uint64_t v9 = qword_1024193C8;
        if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "Fence: Device woke; sending trigger",
            buf,
            2u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F7C40);
          }
          v53[0].i16[0] = 0;
          uint64_t v48 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::handleStatusNotification(const CFAbsoluteTime, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v48);
          if (v48 != buf) {
            free(v48);
          }
        }
        (*(void (**)(uint64_t, const char *, uint64_t, double))(*(void *)a1 + 96))(a1, "wake", 1, a4);
      }
      sub_100F5F9EC(a1 + 1312);
      *(unsigned char *)(a1 + 622) = 0;
      *(double *)(a1 + 1656) = a4;
      break;
    case 6:
      *(_DWORD *)(a1 + 444) = *((_DWORD *)a3 + 1);
      sub_100DDDE28((double *)(a1 + 904), (int *)a3, a4);
      int v14 = *((_DWORD *)a3 + 1);
      if (*(_DWORD *)a3 != 2 || v14 == 2)
      {
        if (*(_DWORD *)a3 != 2 && v14 == 2) {
          *(double *)(a1 + 1672) = a4;
        }
      }
      else
      {
        *(double *)(a1 + 1680) = a4;
      }
      break;
    case 7:
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      uint64_t v17 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
      {
        uint64_t v18 = *(void *)a3;
        int v19 = a3[8];
        int v20 = a3[9];
        int v21 = a3[16];
        *(_DWORD *)long long buf = 134284289;
        *(void *)&uint8_t buf[4] = v18;
        *(_WORD *)&unsigned char buf[12] = 1025;
        *(_DWORD *)&buf[14] = v19;
        __int16 v58 = 1025;
        *(_DWORD *)long long v59 = v20;
        *(_WORD *)&v59[4] = 1025;
        *(_DWORD *)&v59[6] = v21;
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_INFO, "Fence: Got kNotificationBattery, level, %{private}lf, charged, %{private}d, connected, %{private}d, wasConnected, %{private}d", buf, 0x1Eu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F7C40);
        }
        uint64_t v40 = *(void *)a3;
        __int32 v41 = a3[8];
        __int32 v42 = a3[9];
        __int32 v43 = a3[16];
        v53[0].i32[0] = 134284289;
        *(uint64_t *)((char *)v53[0].i64 + 4) = v40;
        v53[0].i16[6] = 1025;
        *(__int32 *)((char *)&v53[0].i32[3] + 2) = v41;
        v53[1].i16[1] = 1025;
        v53[1].i32[1] = v42;
        v53[1].i16[4] = 1025;
        *(__int32 *)((char *)&v53[1].i32[2] + 2) = v43;
        long long v44 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::handleStatusNotification(const CFAbsoluteTime, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v44);
        if (v44 != buf) {
          free(v44);
        }
      }
      *(unsigned char *)(a1 + 1873) = a3[9];
      if (*(unsigned char *)(a1 + 753))
      {
        if (a3[16] != a3[9])
        {
          *(double *)(a1 + 872) = a4;
          (*(void (**)(uint64_t, const char *, uint64_t, double))(*(void *)a1 + 96))(a1, "kNotificationBattery", 1, a4);
          sub_100DBD644(a1, (uint64_t)"kNotificationBattery", 1, &v52);
          sub_100182574((void *)(a1 + 48), buf);
          if (*(void *)buf) {
            ++*(_DWORD *)(*(void *)buf + 172);
          }
          uint64_t v22 = 1704;
          if (!*(unsigned char *)(a1 + 1873)) {
            uint64_t v22 = 1712;
          }
          *(double *)(a1 + v22) = a4;
          if (*(void *)&buf[8]) {
            sub_1000DB0A0(*(std::__shared_weak_count **)&buf[8]);
          }
        }
      }
      else
      {
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F7C40);
        }
        __int16 v38 = qword_1024193C8;
        if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEBUG, "Fence: tether triggers are disabled", buf, 2u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F7C40);
          }
          v53[0].i16[0] = 0;
          int v13 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::handleStatusNotification(const CFAbsoluteTime, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v13);
          goto LABEL_98;
        }
      }
      break;
    case 8:
      int v23 = *a3;
      sub_100DBB1B0((unsigned char *)a1, v23, a4);
      break;
    case 15:
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      int v24 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
      {
        int v25 = *(unsigned __int8 *)(a1 + 729);
        int v26 = *a3;
        *(_DWORD *)long long buf = 67109376;
        *(_DWORD *)&uint8_t buf[4] = v25;
        *(_WORD *)&uint8_t buf[8] = 1024;
        *(_DWORD *)&buf[10] = v26;
        _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "Fence: got kNotificationBatterySaverMode, wasEnabled, %d, isEnabled, %d", buf, 0xEu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F7C40);
        }
        __int32 v45 = *(unsigned __int8 *)(a1 + 729);
        __int32 v46 = *a3;
        v53[0].i32[0] = 67109376;
        v53[0].i32[1] = v45;
        v53[0].i16[4] = 1024;
        *(__int32 *)((char *)&v53[0].i32[2] + 2) = v46;
        __int16 v47 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::handleStatusNotification(const CFAbsoluteTime, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v47);
        if (v47 != buf) {
          free(v47);
        }
      }
      *(unsigned char *)(a1 + 729) = *a3;
      break;
    case 16:
      double v27 = (unsigned char *)(a1 + 1312);
      char v28 = *(unsigned char *)(a1 + 612);
      char v29 = (*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 16))(*(void *)(a1 + 1768));
      sub_100F5EC90((unsigned char *)(a1 + 1312), v28, v29, *(unsigned char *)(a1 + 728), (void *)(a1 + 240));
      if (*(unsigned char *)(a1 + 1874))
      {
        uint64_t v55 = 0;
        long long v54 = 0u;
        memset(v53, 0, sizeof(v53));
        int v56 = -1;
        sub_100F5FD98(a1 + 1312, (uint64_t)v53);
        sub_100F5FDB4(a1 + 1312);
        uint64_t v30 = v53[0].i64[1] + v53[0].i64[0];
        if (v53[0].i64[1] + v53[0].i64[0])
        {
          *(double *)&uint64_t v31 = (double)v53[0].u64[0] * 100.0;
          float64x2_t v32 = vdivq_f64((float64x2_t)vdupq_lane_s64(v31, 0), vcvtq_f64_u64(v53[1]));
          double v33 = *(double *)&v31 / (double)(unint64_t)v30;
          double v34 = *(double *)&v31 / (double)(unint64_t)v54;
          if (qword_1024193C0 != -1)
          {
            double v51 = v34;
            float64x2_t v49 = v32;
            dispatch_once(&qword_1024193C0, &stru_1022F7C40);
            float64x2_t v32 = v49;
            double v34 = v51;
          }
          uint64x2_t v50 = vcvtq_u64_f64(v32);
          unint64_t v35 = (unint64_t)v34;
          __int16 v36 = qword_1024193C8;
          if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)long long buf = 68291587;
            *(_DWORD *)&uint8_t buf[4] = 0;
            *(_WORD *)&uint8_t buf[8] = 2082;
            *(void *)&buf[10] = "";
            __int16 v58 = 2049;
            *(void *)long long v59 = v53[0].i64[0];
            *(_WORD *)&v59[8] = 2049;
            uint64_t v60 = v53[0].i64[1];
            __int16 v61 = 2049;
            uint64_t v62 = v54;
            __int16 v63 = 2049;
            uint64_t v64 = v53[1].i64[0];
            __int16 v65 = 2049;
            uint64_t v66 = v53[1].i64[1];
            __int16 v67 = 2049;
            uint64_t v68 = v30;
            __int16 v69 = 2049;
            unint64_t v70 = v35;
            __int16 v71 = 2049;
            uint64_t v72 = v50.i64[0];
            __int16 v73 = 2049;
            uint64_t v74 = v50.i64[1];
            __int16 v75 = 2049;
            unint64_t v76 = (unint64_t)v33;
            _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"FenceMetric, heartbeat, MiLo,\", \"homeLoiExitsRejectedByMiLo\":%{private}lld, \"homeLoiExitsNotRejectedByMiLo\":%{private}lld, \"totalFenceExits\":%{private}lld, \"totalHomeLoiExits\":%{private}lld, \"totalHomeLoiExitsWithWifiFix\":%{private}lld, \"totalHomeLoiExitsWithMiLo\":%{private}lld, \"homeLoiExitsRejectedByMiLoToAllFenceExitsPercentage\":%{private}lld, \"homeLoiExitsRejectedByMiLoToAllHomeLoiExitsPercentage\":%{private}lld, \"homeLoiExitsRejectedByMiLoToAllHomeLoiExitsWithWifiFixPercentage\":%{private}lld, \"homeLoiExitsRejectedByMiLoToAllHomeLoiExitsWithMiLoEventPercentage\":%{private}lld}", buf, 0x76u);
          }
          if (sub_100F5E718(v27)) {
            AnalyticsSendEventLazy();
          }
        }
        if (v53[1].i64[0] && sub_100F5E718(v27))
        {
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F7C40);
          }
          double v37 = qword_1024193C8;
          if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)long long buf = 68289283;
            *(_DWORD *)&uint8_t buf[4] = 0;
            *(_WORD *)&uint8_t buf[8] = 2082;
            *(void *)&buf[10] = "";
            __int16 v58 = 1025;
            *(_DWORD *)long long v59 = v30 != 0;
            _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"FenceMetric, heartbeat, MiLo,\", \"isMiLoUsedInHomeLoiExit\":%{private}hhd}", buf, 0x18u);
          }
          AnalyticsSendEventLazy();
        }
      }
      break;
    default:
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      int v10 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
      {
        __int32 v11 = *a2;
        *(_DWORD *)long long buf = 67240192;
        *(_DWORD *)&uint8_t buf[4] = v11;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "#Warning Fence: unknown notification, %{public}d", buf, 8u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F7C40);
        }
        __int32 v12 = *a2;
        v53[0].i32[0] = 67240192;
        v53[0].i32[1] = v12;
        int v13 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::handleStatusNotification(const CFAbsoluteTime, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v13);
LABEL_98:
        if (v13 != buf) {
          free(v13);
        }
      }
      break;
  }
}

NSDictionary *sub_100DC0284(void *a1)
{
  v3[0] = @"homeLoiExitsRejectedByMiLo";
  v4[0] = +[NSNumber numberWithUnsignedLongLong:a1[4]];
  v3[1] = @"homeLoiExitsNotRejectedByMiLo";
  v4[1] = +[NSNumber numberWithUnsignedLongLong:a1[5]];
  v3[2] = @"totalFenceExits";
  v4[2] = +[NSNumber numberWithUnsignedLongLong:a1[8]];
  v3[3] = @"totalHomeLoiExits";
  void v4[3] = +[NSNumber numberWithUnsignedLongLong:a1[6]];
  v3[4] = @"totalHomeLoiExitsWithWifiFix";
  v4[4] = +[NSNumber numberWithUnsignedLongLong:a1[7]];
  v3[5] = @"totalHomeLoiExitsWithMiLo";
  v4[5] = +[NSNumber numberWithUnsignedLongLong:a1[12]];
  v3[6] = @"homeLoiExitsRejectedByMiLoToAllFenceExitsPercentage";
  v4[6] = +[NSNumber numberWithUnsignedLongLong:a1[13]];
  v3[7] = @"homeLoiExitsRejectedByMiLoToAllHomeLoiExitsPercentage";
  v4[7] = +[NSNumber numberWithUnsignedLongLong:a1[14]];
  v3[8] = @"homeLoiExitsRejectedByMiLoToAllHomeLoiExitsWithWifiFixPercentage";
  v4[8] = +[NSNumber numberWithUnsignedLongLong:a1[15]];
  v3[9] = @"homeLoiExitsRejectedByMiLoToAllHomeLoiExitsWithMiLoEventPercentage";
  v4[9] = +[NSNumber numberWithUnsignedLongLong:a1[16]];
  return +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:10];
}

NSDictionary *sub_100DC040C(uint64_t a1)
{
  CFStringRef v2 = @"isMiLoUsedInHomeLoiExit";
  unint64_t v3 = +[NSNumber numberWithInt:*(unsigned __int8 *)(a1 + 32)];
  return +[NSDictionary dictionaryWithObjects:&v3 forKeys:&v2 count:1];
}

void sub_100DC0490(uint64_t a1, _DWORD *a2, int *a3)
{
  if (!*a2)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    int v5 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      unsigned int v6 = *a3 - 1;
      int v7 = v6 > 5 ? "Unavailable" : off_1022F7E50[v6];
      sub_100134750(__p, v7);
      int v8 = v23 >= 0 ? __p : (void **)__p[0];
      *(_DWORD *)long long buf = 136380675;
      *(void *)&uint8_t buf[4] = v8;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Signal environment %{private}s", buf, 0xCu);
      if (v23 < 0) {
        operator delete(__p[0]);
      }
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      sub_100DC0794(*a3, buf);
      if (v19 >= 0) {
        int v16 = buf;
      }
      else {
        int v16 = *(unsigned char **)buf;
      }
      int v20 = 136380675;
      int v21 = v16;
      uint64_t v17 = (char *)_os_log_send_and_compose_impl();
      if (v19 < 0) {
        operator delete(*(void **)buf);
      }
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::handleSignalEnvironmentNotification(const CFAbsoluteTime, const CLSignalEnvironmentProvider_Type::Notification &, const CLSignalEnvironmentProvider_Type::NotificationData &)", "%s\n", v17);
      if (v17 != (char *)__p) {
        free(v17);
      }
    }
    int v9 = *a3 - 1;
    if v9 <= 5 && ((0x2Fu >> v9))
    {
      int v10 = dword_101D8E7A4[v9];
      *(_DWORD *)(a1 + 608) = v10;
      __int32 v11 = *(void **)(a1 + 240);
      if (v11 != (void *)(a1 + 248))
      {
        do
        {
          if (v11[33] == v11[32])
          {
            double v12 = sub_100044A78((uint64_t)(v11 + 4));
            if (v12 <= *((double *)sub_100044B44() + 6)) {
              sub_100DB9B3C(a1, (uint64_t)(v11 + 4), v10);
            }
          }
          int v13 = (void *)v11[1];
          if (v13)
          {
            do
            {
              int v14 = v13;
              int v13 = (void *)*v13;
            }
            while (v13);
          }
          else
          {
            do
            {
              int v14 = (void *)v11[2];
              BOOL v15 = *v14 == (void)v11;
              __int32 v11 = v14;
            }
            while (!v15);
          }
          __int32 v11 = v14;
        }
        while (v14 != (void *)(a1 + 248));
      }
    }
  }
}

void *sub_100DC0794@<X0>(int a1@<W0>, void *a2@<X8>)
{
  if ((a1 - 1) > 5) {
    CFStringRef v2 = "Unavailable";
  }
  else {
    CFStringRef v2 = off_1022F7E50[a1 - 1];
  }
  return sub_100134750(a2, v2);
}

void sub_100DC07C4(uint64_t a1, double a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_102481770, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_102481770))
  {
    qword_102481768 = *(void *)&a2;
    __cxa_guard_release(&qword_102481770);
  }
  *(double *)(a1 + 856) = a2;
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  long long v4 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
  {
    int v5 = *(_DWORD *)(a1 + 684);
    int v6 = *(_DWORD *)(a1 + 688);
    *(_DWORD *)long long buf = 67240448;
    *(_DWORD *)uint64_t v48 = v5;
    *(_WORD *)&v48[4] = 1026;
    *(_DWORD *)&v48[6] = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "loc watchdog expired, count, %{public}d, %{public}d", buf, 0xEu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    int v20 = *(_DWORD *)(a1 + 684);
    int v21 = *(_DWORD *)(a1 + 688);
    int v32 = 67240448;
    *(_DWORD *)double v33 = v20;
    *(_WORD *)&v33[4] = 1026;
    *(_DWORD *)&v33[6] = v21;
    uint64_t v22 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::handleLocationWatchdogExpired(const CFAbsoluteTime)", "%s\n", v22);
    if (v22 != (char *)buf) {
      free(v22);
    }
  }
  sub_100F5FA58(a1 + 1312, a2 - *(double *)&qword_102481768);
  double v7 = a2 - *(double *)(a1 + 864);
  double v8 = a2 - *(double *)(a1 + 848);
  double v30 = v8;
  double v31 = v7;
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  int v9 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    int v10 = *(unsigned __int8 *)(a1 + 612);
    uint64_t v11 = *(void *)(a1 + 632);
    int v12 = *(_DWORD *)(a1 + 684);
    uint64_t v13 = *(void *)(a1 + 760);
    int v14 = *(_DWORD *)(a1 + 688);
    *(_DWORD *)long long buf = 134285569;
    *(double *)uint64_t v48 = a2 - *(double *)&qword_102481768;
    *(_WORD *)&v48[8] = 1026;
    *(_DWORD *)float64x2_t v49 = v10;
    *(_WORD *)&v49[4] = 2049;
    *(void *)&v49[6] = v11;
    __int16 v50 = 1026;
    int v51 = v12;
    __int16 v52 = 2049;
    double v53 = v31;
    __int16 v54 = 2049;
    uint64_t v55 = 0x4087A00000000000;
    __int16 v56 = 2049;
    double v57 = v8;
    __int16 v58 = 2049;
    uint64_t v59 = v13;
    __int16 v60 = 1026;
    int v61 = v14;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "Fence: onLocationWatchdogExpired, since last, %{private}.1lf, isLocationEnabled, %{public}d, last scan, %{private}.1lf, fIsWaitingForLocationCount, %{public}d, sinceLastGpsSession, %{private}.1lf, %{private}.1lf, sinceLastContTimer, %{private}.1lf, %{private}.1lf, fScanRetryCounter, %{public}d", buf, 0x50u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    int v23 = *(unsigned __int8 *)(a1 + 612);
    uint64_t v24 = *(void *)(a1 + 632);
    int v25 = *(_DWORD *)(a1 + 684);
    uint64_t v26 = *(void *)(a1 + 760);
    int v27 = *(_DWORD *)(a1 + 688);
    int v32 = 134285569;
    *(double *)double v33 = a2 - *(double *)&qword_102481768;
    *(_WORD *)&v33[8] = 1026;
    *(_DWORD *)double v34 = v23;
    *(_WORD *)&v34[4] = 2049;
    *(void *)&v34[6] = v24;
    __int16 v35 = 1026;
    int v36 = v25;
    __int16 v37 = 2049;
    double v38 = v31;
    __int16 v39 = 2049;
    uint64_t v40 = 0x4087A00000000000;
    __int16 v41 = 2049;
    double v42 = v8;
    __int16 v43 = 2049;
    uint64_t v44 = v26;
    __int16 v45 = 1026;
    int v46 = v27;
    char v28 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::handleLocationWatchdogExpired(const CFAbsoluteTime)", "%s\n", v28);
    if (v28 != (char *)buf) {
      free(v28);
    }
  }
  if (sub_1000FC450())
  {
    sub_1000E9354(buf);
    int v32 = *(_DWORD *)(a1 + 684);
    sub_1000EA838((uint64_t)buf, "onLocationWatchdogExpired", &v32);
    sub_10016332C((uint64_t)buf, "sinceLastGpsSession", &v31);
    sub_10016332C((uint64_t)buf, "kSecondsBetweenGPSSessions", &unk_101D8E2E0);
    sub_10016332C((uint64_t)buf, "sinceLastContTimer", &v30);
    sub_1000FC45C((uint64_t)buf, (uint64_t)"locationd");
    sub_10013F3C4(buf);
  }
  if (*(unsigned char *)(a1 + 612) && *(_DWORD *)(a1 + 684) == 1)
  {
    uint64_t v29 = 0x403E000000000000;
    double v15 = sub_100DC0FC8(a1, a2, v31, v30);
    if (v15 > 0.0 && v15 < 30.0) {
      uint64_t v29 = *(void *)&v15;
    }
    BOOL v16 = v15 > 0.0;
    *(double *)(a1 + 696) = a2;
    (*(void (**)(void, uint64_t *))(**(void **)(a1 + 1768) + 240))(*(void *)(a1 + 1768), &v29);
    (*(void (**)(void, const char *))(**(void **)(a1 + 1768) + 304))(*(void *)(a1 + 1768), "onLocationWatchdogExpired");
    if (v16)
    {
      *(double *)(a1 + 864) = (*(double (**)(void, void, void))(**(void **)(a1 + 1768) + 384))(*(void *)(a1 + 1768), *(unsigned int *)(a1 + 684), *(unsigned int *)(a1 + 688));
    }
    else
    {
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      uint64_t v18 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)long long buf = 134283777;
        *(double *)uint64_t v48 = v31;
        *(_WORD *)&v48[8] = 2049;
        *(void *)float64x2_t v49 = 0x4087A00000000000;
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEBUG, "Fence: onLocationWatchdogExpired, not starting GPS, sinceLastGpsSession, %{private}.1lf, %{private}.1lf", buf, 0x16u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F7C40);
        }
        int v32 = 134283777;
        *(double *)double v33 = v31;
        *(_WORD *)&v33[8] = 2049;
        *(void *)double v34 = 0x4087A00000000000;
        char v19 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::handleLocationWatchdogExpired(const CFAbsoluteTime)", "%s\n", v19);
        if (v19 != (char *)buf) {
          free(v19);
        }
      }
    }
  }
  else
  {
    (*(void (**)(void))(**(void **)(a1 + 1768) + 280))(*(void *)(a1 + 1768));
  }
  int v17 = *(_DWORD *)(a1 + 684);
  if (v17 == 1)
  {
    *(void *)(a1 + 684) = 2;
  }
  else if (v17 == 2 && *(unsigned char *)(a1 + 612))
  {
    *(void *)(a1 + 684) = 0;
    sub_100DC1300(a1, a2);
    sub_100DC151C((void *)a1, a2, v31);
  }
  qword_102481768 = *(void *)&a2;
}

void sub_100DC0FA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  sub_10013F3C4(va);
  _Unwind_Resume(a1);
}

double sub_100DC0FC8(uint64_t a1, double a2, double a3, double a4)
{
  double v4 = 0.0;
  if (!dword_102474718
    || ((*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 400))(*(void *)(a1 + 1768)) & 1) != 0)
  {
    return v4;
  }
  sub_100103240();
  if (!sub_10010145C())
  {
    double v4 = 30.0;
    if (a3 >= 756.0 || *(double *)(a1 + 760) >= a4) {
      goto LABEL_27;
    }
    goto LABEL_26;
  }
  uint64_t v9 = *(void *)(a1 + 216);
  uint64_t v10 = *(void *)(a1 + 224);
  if (v10 == v9)
  {
    double v11 = 0.0;
  }
  else
  {
    double v11 = 0.0;
    uint64_t v12 = *(void *)(a1 + 224);
    uint64_t v13 = v12;
    do
    {
      double v14 = *(double *)(v13 - 16);
      v13 -= 16;
      if (v14 < a2 + -86400.0) {
        break;
      }
      double v11 = v11 + *(double *)(v12 - 8);
      uint64_t v12 = v13;
    }
    while (v13 != v9);
  }
  double v15 = *(double *)(a1 + 656);
  if (v15 <= 0.0 || vabdd_f64(a2, v15) >= 300.0 || v11 >= 720.0)
  {
    if (a3 < 756.0)
    {
LABEL_26:
      sub_100F5FA1C(a1 + 1312);
      double v4 = 0.0;
      goto LABEL_27;
    }
    double v18 = 720.0;
  }
  else
  {
    if (v10 == v9)
    {
      double v11 = 0.0;
    }
    else
    {
      double v11 = 0.0;
      uint64_t v16 = *(void *)(a1 + 224);
      do
      {
        double v17 = *(double *)(v16 - 16);
        v16 -= 16;
        if (v17 < a2 + -14400.0) {
          break;
        }
        double v11 = v11 + *(double *)(v10 - 8);
        uint64_t v10 = v16;
      }
      while (v16 != v9);
    }
    double v18 = 240.0;
  }
  double v4 = v18 - v11;
  if (v18 - v11 < 10.0) {
    goto LABEL_26;
  }
LABEL_27:
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  char v19 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)long long buf = 134283521;
    double v23 = v4;
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEBUG, "Fence: allowed gps time %{private}.1lf", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    int v21 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "CFTimeInterval CLFenceMonitor::shouldStartGps(const CFAbsoluteTime, const CFTimeInterval, const CFTimeInterval)", "%s\n", v21);
    if (v21 != (char *)buf) {
      free(v21);
    }
  }
  return v4;
}

void sub_100DC1300(uint64_t a1, double a2)
{
  BOOL v4 = sub_1001AF7CC(a1 + 904, a2);
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  int v5 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v6 = *(void *)(a1 + 736);
    uint64_t v7 = *(void *)(a1 + 744);
    *(_DWORD *)long long buf = 67240705;
    BOOL v10 = v4;
    __int16 v11 = 2049;
    uint64_t v12 = v6;
    __int16 v13 = 2049;
    uint64_t v14 = v7;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Fence: handleNoWifiApsArea, recalculated, %{public}d, fMinDistanceToFence, %{private}.1lf, fMinDistanceToFenceTimestamp, %{private}.1lf", buf, 0x1Cu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    double v8 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::handleNoWifiApsArea(const CFAbsoluteTime)", "%s\n", v8);
    if (v8 != (char *)buf) {
      free(v8);
    }
  }
  if (v4) {
    sub_100F5F9BC(a1 + 1312);
  }
  *(_OWORD *)(a1 + 736) = 0u;
  sub_1001BA5A0(a1, a2);
}

void sub_100DC151C(void *a1, double a2, double a3)
{
  unint64_t v3 = (void *)a1[30];
  BOOL v4 = a1 + 31;
  if (v3 != a1 + 31)
  {
    do
    {
      sub_10048AEC0((char *)&__str, (long long *)v3 + 2);
      if ((BYTE8(v39) & 0x10) != 0)
      {
        double v8 = *((double *)v3 + 40);
        if (v8 > 0.0)
        {
          double v9 = a2 - v8;
          if (a2 - v8 > 420.0 && *((double *)v3 + 37) + v9 * -45.0 < 0.0)
          {
            sub_100D8EB6C((char *)&v17);
            std::string::operator=(&v17, &__str);
            std::string::operator=(&v18, &v32);
            std::string::operator=(&v19, &v33);
            long long v24 = v38;
            long long v25 = v39;
            *(_OWORD *)uint64_t v26 = *(_OWORD *)v40;
            *(void *)&v26[13] = *(void *)&v40[13];
            long long v20 = v34;
            long long v21 = v35;
            long long v22 = v36;
            long long v23 = v37;
            std::string::operator=(&v27, &v41);
            id v10 = v28;
            id v28 = v42;

            sub_10027C3B4((char *)__p, (char *)__src, (uint64_t)v44, (v44 - (unsigned char *)__src) >> 4);
            double v30 = v9;
            if (qword_1024193C0 != -1) {
              dispatch_once(&qword_1024193C0, &stru_1022F7C40);
            }
            __int16 v11 = qword_1024193C8;
            if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)long long buf = 134283777;
              double v50 = v30;
              __int16 v51 = 2049;
              double v52 = a3;
              _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "#Warning Fence: watchdog fired: %{private}.1lf, %{private}.1lf", buf, 0x16u);
            }
            if (sub_10013D1A0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1024193C0 != -1) {
                dispatch_once(&qword_1024193C0, &stru_1022F7C40);
              }
              int v45 = 134283777;
              double v46 = v30;
              __int16 v47 = 2049;
              double v48 = a3;
              uint64_t v16 = (char *)_os_log_send_and_compose_impl();
              sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::handleNoLocationForExtendedDuration(const CFAbsoluteTime, const CFTimeInterval)", "%s\n", v16);
              if (v16 != (char *)buf) {
                free(v16);
              }
            }
            uint64_t v12 = a1[221];
            *(_DWORD *)long long buf = 5;
            (*(void (**)(uint64_t, uint8_t *, std::string *))(*(void *)v12 + 96))(v12, buf, &v17);
            if (__p[0])
            {
              __p[1] = __p[0];
              operator delete(__p[0]);
            }

            if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v27.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v19.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v18.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v17.__r_.__value_.__l.__data_);
            }
          }
        }
      }
      if (__src)
      {
        uint64_t v44 = __src;
        operator delete(__src);
      }

      if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v41.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v33.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v32.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__str.__r_.__value_.__l.__data_);
      }
      __int16 v13 = (void *)v3[1];
      if (v13)
      {
        do
        {
          uint64_t v14 = v13;
          __int16 v13 = (void *)*v13;
        }
        while (v13);
      }
      else
      {
        do
        {
          uint64_t v14 = (void *)v3[2];
          BOOL v15 = *v14 == (void)v3;
          unint64_t v3 = v14;
        }
        while (!v15);
      }
      unint64_t v3 = v14;
    }
    while (v14 != v4);
  }
}

void sub_100DC1968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  sub_100488394((uint64_t)va);
  sub_100488394((uint64_t)&STACK[0x598]);
  _Unwind_Resume(a1);
}

void sub_100DC19B0(uint64_t a1)
{
}

void sub_100DC19B8(uint64_t a1, double a2)
{
  if ((*(unsigned int (**)(void))(**(void **)(a1 + 1768) + 176))(*(void *)(a1 + 1768)))
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    BOOL v4 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "converging state, timer expired, cancelling gnss session", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      uint64_t v6 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::handleConvergingStateTimerFired(const CFAbsoluteTime)", "%s\n", v6);
      if (v6 != (char *)buf) {
        free(v6);
      }
    }
    (*(void (**)(void))(**(void **)(a1 + 1768) + 192))(*(void *)(a1 + 1768));
    sub_100182574((void *)(a1 + 48), buf);
    if (*(void *)buf) {
      sub_1009C5070(*(uint64_t *)buf, a2);
    }
    if (v9) {
      sub_1000DB0A0(v9);
    }
  }
  else
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    int v5 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "converging state, timer expired, requesting location", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      uint64_t v7 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::handleConvergingStateTimerFired(const CFAbsoluteTime)", "%s\n", v7);
      if (v7 != (char *)buf) {
        free(v7);
      }
    }
    (*(void (**)(void, const char *))(**(void **)(a1 + 1768) + 304))(*(void *)(a1 + 1768), "ConvergingState");
  }
}

void sub_100DC1D34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  if (a14) {
    sub_1000DB0A0(a14);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DC1D54(uint64_t a1, double a2)
{
  double v14 = a2;
  if (*(unsigned char *)(a1 + 612))
  {
    double v4 = *(double *)(a1 + 776);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    double v5 = a2 - v4;
    uint64_t v6 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      int v7 = *(unsigned __int8 *)(a1 + 612);
      int v8 = *(_DWORD *)(a1 + 704);
      int v9 = *(_DWORD *)(a1 + 708);
      *(_DWORD *)long long buf = 67240961;
      int v24 = v7;
      __int16 v25 = 1026;
      int v26 = v8;
      __int16 v27 = 1026;
      int v28 = v9;
      __int16 v29 = 2049;
      double v30 = v5;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Fence: onDeAssTriggerTimer, isLocationEnabled, %{public}d, count, %{public}d, %{public}d, sinceLastTrigger, %{private}.1lf", buf, 0x1Eu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      int v10 = *(unsigned __int8 *)(a1 + 612);
      int v11 = *(_DWORD *)(a1 + 704);
      int v12 = *(_DWORD *)(a1 + 708);
      int v15 = 67240961;
      int v16 = v10;
      __int16 v17 = 1026;
      int v18 = v11;
      __int16 v19 = 1026;
      int v20 = v12;
      __int16 v21 = 2049;
      double v22 = v5;
      __int16 v13 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::handleDeAssTriggerTimer(const CFAbsoluteTime)", "%s\n", v13);
      if (v13 != (char *)buf) {
        free(v13);
      }
    }
    if (v5 >= 20.0) {
      (*(void (**)(uint64_t, const char *, uint64_t, double))(*(void *)a1 + 96))(a1, "handleDeAssTriggerTimer", 1, a2);
    }
    sub_100DBD644(a1, (uint64_t)"onDeAssTriggerTimer", 1, &v14);
    *(double *)(a1 + 1752) = a2;
    if (fabs(sub_100DCDB7C(a1 + 1648, &v14, (double *)(a1 + 1656))) < 2.0) {
      *(unsigned char *)(a1 + 1648) = 0;
    }
    ++*(_DWORD *)(a1 + 704);
  }
}

void sub_100DC200C(uint64_t a1, double a2)
{
  double v14 = a2;
  if (*(unsigned char *)(a1 + 612))
  {
    double v4 = *(double *)(a1 + 776);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    double v5 = a2 - v4;
    uint64_t v6 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      int v7 = *(unsigned __int8 *)(a1 + 612);
      int v8 = *(_DWORD *)(a1 + 704);
      int v9 = *(_DWORD *)(a1 + 708);
      *(_DWORD *)long long buf = 67240961;
      int v24 = v7;
      __int16 v25 = 1026;
      int v26 = v8;
      __int16 v27 = 1026;
      int v28 = v9;
      __int16 v29 = 2049;
      double v30 = v5;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Fence: onDelayedTriggerTimer, isLocationEnabled, %{public}d, count, %{public}d, %{public}d, sinceLastTrigger, %{private}.1lf", buf, 0x1Eu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      int v10 = *(unsigned __int8 *)(a1 + 612);
      int v11 = *(_DWORD *)(a1 + 704);
      int v12 = *(_DWORD *)(a1 + 708);
      int v15 = 67240961;
      int v16 = v10;
      __int16 v17 = 1026;
      int v18 = v11;
      __int16 v19 = 1026;
      int v20 = v12;
      __int16 v21 = 2049;
      double v22 = v5;
      __int16 v13 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::handleDelayedTriggerTimer(const CFAbsoluteTime)", "%s\n", v13);
      if (v13 != (char *)buf) {
        free(v13);
      }
    }
    if (v5 >= 20.0) {
      (*(void (**)(uint64_t, const char *, uint64_t, double))(*(void *)a1 + 96))(a1, "handleDelayedTriggerTimer", 1, a2);
    }
    ++*(_DWORD *)(a1 + 704);
    sub_100DBD644(a1, (uint64_t)"onDelayedTriggerTimer", 0, &v14);
    *(double *)(a1 + 1752) = a2;
    if (fabs(sub_100DCDB7C(a1 + 1648, &v14, (double *)(a1 + 1656))) < 2.0) {
      *(unsigned char *)(a1 + 1648) = 0;
    }
  }
}

void sub_100DC22C4(uint64_t a1, double a2)
{
  double v10 = a2;
  double v4 = *(double *)(a1 + 776);
  *(double *)(a1 + 848) = a2;
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  double v5 = a2 - v4;
  uint64_t v6 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    int v7 = *(unsigned __int8 *)(a1 + 612);
    *(_DWORD *)long long buf = 67240449;
    int v16 = v7;
    __int16 v17 = 2049;
    double v18 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Fence: onContinousTrackingTimer, isLocationEnabled, %{public}d, sinceLastTrigger, %{private}.1lf", buf, 0x12u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    int v8 = *(unsigned __int8 *)(a1 + 612);
    int v11 = 67240449;
    int v12 = v8;
    __int16 v13 = 2049;
    double v14 = v5;
    int v9 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::handleContinousTrackingTimer(const CFAbsoluteTime)", "%s\n", v9);
    if (v9 != (char *)buf) {
      free(v9);
    }
  }
  if (*(unsigned char *)(a1 + 612))
  {
    if (v5 >= 20.0) {
      (*(void (**)(uint64_t, const char *, uint64_t, double))(*(void *)a1 + 96))(a1, "handleContinousTrackingTimer", 1, a2);
    }
    sub_100DC2530(a1, a2);
    *(double *)(a1 + 1752) = a2;
    if (fabs(sub_100DCDB7C(a1 + 1648, &v10, (double *)(a1 + 1656))) < 2.0) {
      *(unsigned char *)(a1 + 1648) = 0;
    }
  }
}

void sub_100DC2530(uint64_t a1, double a2)
{
  if (*(unsigned char *)(a1 + 752))
  {
    if (*(unsigned char *)(a1 + 612) && (!*(unsigned char *)(a1 + 730) || *(unsigned char *)(a1 + 731)))
    {
      if (sub_1001BAE50(a1))
      {
        if (*(unsigned char *)(a1 + 623))
        {
          double v4 = vabdd_f64(a2, *(double *)(a1 + 744));
          double v5 = *(double *)(a1 + 736) - v4 * 45.0;
          if (v4 >= 1800.0) {
            double v5 = 0.0;
          }
          if (v5 > 0.0) {
            double v6 = v5;
          }
          else {
            double v6 = 0.0;
          }
          double v7 = fmin(fmax(v6 / 45.0 * 0.5, *(double *)(a1 + 720)), 3600.0);
          double v23 = v7;
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F7C40);
          }
          int v8 = qword_1024193C8;
          if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v9 = *(void *)(a1 + 736);
            *(_DWORD *)long long buf = 134284033;
            *(double *)double v30 = v7;
            *(_WORD *)&v30[8] = 2049;
            uint64_t v31 = v9;
            __int16 v32 = 2049;
            double v33 = v6;
            _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "scheduleNextTrackingWake, next wake in, %{private}.1lf, seconds, fMinDistanceToFence, %{private}.1lf, minDistanceToFence, %{private}.1lf", buf, 0x20u);
          }
          if (sub_10013D1A0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1024193C0 != -1) {
              dispatch_once(&qword_1024193C0, &stru_1022F7C40);
            }
            uint64_t v21 = *(void *)(a1 + 736);
            int v24 = 134284033;
            *(double *)__int16 v25 = v7;
            *(_WORD *)&v25[8] = 2049;
            uint64_t v26 = v21;
            __int16 v27 = 2049;
            double v28 = v6;
            double v22 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::scheduleNextTrackingWake(const CFAbsoluteTime)", "%s\n", v22);
            if (v22 != (char *)buf) {
              free(v22);
            }
          }
          double v10 = vabdd_f64(v7 + a2, *(double *)(a1 + 624));
          if (v10 >= 30.0)
          {
            *(double *)(a1 + 624) = (*(double (**)(void, double *))(**(void **)(a1 + 1768) + 152))(*(void *)(a1 + 1768), &v23);
            sub_100F5FA0C(a1 + 1312);
            return;
          }
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F7C40);
          }
          int v11 = qword_1024193C8;
          if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)long long buf = 134283521;
            *(double *)double v30 = v10;
            _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "scheduleNextTrackingWake, intervalSinceLastDate is too low, %{private}.1lf", buf, 0xCu);
          }
          if (sub_10013D1A0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1024193C0 != -1) {
              dispatch_once(&qword_1024193C0, &stru_1022F7C40);
            }
            int v24 = 134283521;
            *(double *)__int16 v25 = v10;
LABEL_58:
            int v20 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::scheduleNextTrackingWake(const CFAbsoluteTime)", "%s\n", v20);
            if (v20 != (char *)buf) {
              free(v20);
            }
          }
        }
        else
        {
          *(double *)(a1 + 624) = (*(double (**)(void))(**(void **)(a1 + 1768) + 144))(*(void *)(a1 + 1768));
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F7C40);
          }
          __int16 v19 = qword_1024193C8;
          if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
          {
            *(_WORD *)long long buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEBUG, "Fence: scheduleNextTrackingWake, continous tracking is disabled", buf, 2u);
          }
          if (sub_10013D1A0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1024193C0 != -1) {
              dispatch_once(&qword_1024193C0, &stru_1022F7C40);
            }
            LOWORD(v24) = 0;
            goto LABEL_58;
          }
        }
      }
      else
      {
        *(double *)(a1 + 624) = (*(double (**)(void))(**(void **)(a1 + 1768) + 144))(*(void *)(a1 + 1768));
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F7C40);
        }
        double v18 = qword_1024193C8;
        if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEBUG, "Fence: scheduleNextTrackingWake, all fences are low power ones", buf, 2u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F7C40);
          }
          LOWORD(v24) = 0;
          goto LABEL_58;
        }
      }
    }
    else
    {
      *(double *)(a1 + 624) = (*(double (**)(void))(**(void **)(a1 + 1768) + 144))(*(void *)(a1 + 1768));
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      __int16 v13 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
      {
        int v14 = *(unsigned __int8 *)(a1 + 728);
        int v15 = *(unsigned __int8 *)(a1 + 730);
        *(_DWORD *)long long buf = 67240448;
        *(_DWORD *)double v30 = v14;
        *(_WORD *)&v30[4] = 1026;
        *(_DWORD *)&v30[6] = v15;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "Fence: scheduleNextTrackingWake, location services not enabled, airplane, %{public}d, cConnected, %{public}d", buf, 0xEu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F7C40);
        }
        int v16 = *(unsigned __int8 *)(a1 + 728);
        int v17 = *(unsigned __int8 *)(a1 + 730);
        int v24 = 67240448;
        *(_DWORD *)__int16 v25 = v16;
        *(_WORD *)&v25[4] = 1026;
        *(_DWORD *)&v25[6] = v17;
        goto LABEL_58;
      }
    }
  }
  else
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    int v12 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "Fence: scheduleNextTrackingWake - disabled", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      LOWORD(v24) = 0;
      goto LABEL_58;
    }
  }
}

uint64_t sub_100DC2D50(uint64_t a1, uint64_t a2)
{
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  double v4 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    if (*(char *)(a2 + 23) >= 0) {
      uint64_t v5 = a2;
    }
    else {
      uint64_t v5 = *(void *)a2;
    }
    if (*(char *)(a2 + 47) >= 0) {
      uint64_t v6 = a2 + 24;
    }
    else {
      uint64_t v6 = *(void *)(a2 + 24);
    }
    *(_DWORD *)long long buf = 136380931;
    uint64_t v10 = v5;
    __int16 v11 = 2081;
    uint64_t v12 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Fence: Got monitoring data changed for %{private}s/%{private}s", buf, 0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    int v8 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::handleMonitoringDataChanged(const CLFenceManager_Type::Fence &)", "%s\n", v8);
    if (v8 != (char *)buf) {
      free(v8);
    }
  }
  return sub_100DDABA8((unsigned char *)(a1 + 904), (uint64_t *)a2);
}

uint64_t sub_100DC2F6C(uint64_t result)
{
  double v1 = *(void **)(result + 240);
  CFStringRef v2 = (void *)(result + 248);
  if (v1 != (void *)(result + 248))
  {
    uint64_t v3 = result;
    do
    {
      if ((v1[24] & 0x80) != 0) {
        uint64_t result = (*(uint64_t (**)(void, void *, void))(**(void **)(v3 + 1768) + 416))(*(void *)(v3 + 1768), v1 + 4, 0);
      }
      double v4 = (void *)v1[1];
      if (v4)
      {
        do
        {
          uint64_t v5 = v4;
          double v4 = (void *)*v4;
        }
        while (v4);
      }
      else
      {
        do
        {
          uint64_t v5 = (void *)v1[2];
          BOOL v6 = *v5 == (void)v1;
          double v1 = v5;
        }
        while (!v6);
      }
      double v1 = v5;
    }
    while (v5 != v2);
  }
  return result;
}

void sub_100DC301C(uint64_t a1, double a2)
{
  double v4 = a2;
  (*(void (**)(uint64_t, const char *, uint64_t))(*(void *)a1 + 96))(a1, "activityAlarmHandler", 1);
  *(double *)(a1 + 1736) = a2;
  if (fabs(sub_100DCDB7C(a1 + 1648, &v4, (double *)(a1 + 1656))) < 2.0) {
    *(unsigned char *)(a1 + 1648) = 0;
  }
}

void sub_100DC30B0(uint64_t a1)
{
  *(_DWORD *)(a1 + 604) = 2;
  uint64_t v1 = a1 + 448;
  if (*(double *)(a1 + 468) > 0.0)
  {
    uint64_t v3 = *(void **)(a1 + 240);
    double v4 = (void *)(a1 + 248);
    if (v3 != (void *)(a1 + 248))
    {
      uint64_t v5 = &qword_102419000;
      do
      {
        if (*((unsigned char *)v3 + 285))
        {
          if (!*(unsigned char *)(a1 + 730)) {
            goto LABEL_11;
          }
          if (v3[33] == v3[32])
          {
            if (_os_feature_enabled_impl()) {
              goto LABEL_40;
            }
            uint64_t v6 = 64;
          }
          else
          {
            uint64_t v6 = 8;
          }
          if ((v3[24] & v6) != 0)
          {
LABEL_11:
            if (v5[120] != -1) {
              dispatch_once(&qword_1024193C0, &stru_1022F7C40);
            }
            double v7 = qword_1024193C8;
            if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
            {
              if (*((char *)v3 + 55) >= 0) {
                size_t v8 = *((unsigned __int8 *)v3 + 55);
              }
              else {
                size_t v8 = v3[5];
              }
              sub_1001110E4((uint64_t)&v28, v8 + 1);
              uint64_t v9 = v5;
              if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                uint64_t v10 = &v28;
              }
              else {
                uint64_t v10 = (std::string *)v28.__r_.__value_.__r.__words[0];
              }
              if (v8)
              {
                if (*((char *)v3 + 55) >= 0) {
                  __int16 v11 = v3 + 4;
                }
                else {
                  __int16 v11 = (const void *)v3[4];
                }
                memmove(v10, v11, v8);
              }
              *(_WORD *)((char *)&v10->__r_.__value_.__l.__data_ + v8) = 47;
              int v12 = *((char *)v3 + 79);
              if (v12 >= 0) {
                __int16 v13 = (const std::string::value_type *)(v3 + 7);
              }
              else {
                __int16 v13 = (const std::string::value_type *)v3[7];
              }
              if (v12 >= 0) {
                std::string::size_type v14 = *((unsigned __int8 *)v3 + 79);
              }
              else {
                std::string::size_type v14 = v3[8];
              }
              int v15 = std::string::append(&v28, v13, v14);
              long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
              *(void *)&v30[16] = *((void *)&v15->__r_.__value_.__l + 2);
              *(_OWORD *)double v30 = v16;
              v15->__r_.__value_.__l.__size_ = 0;
              v15->__r_.__value_.__r.__words[2] = 0;
              v15->__r_.__value_.__r.__words[0] = 0;
              uint64_t v5 = v9;
              if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(v28.__r_.__value_.__l.__data_);
              }
              int v17 = v30;
              if (v30[23] < 0) {
                int v17 = *(unsigned char **)v30;
              }
              int v18 = *((unsigned __int8 *)v3 + 284);
              int v19 = *((unsigned __int8 *)v3 + 285);
              LODWORD(v28.__r_.__value_.__l.__data_) = 136381187;
              *(std::string::size_type *)((char *)v28.__r_.__value_.__r.__words + 4) = (std::string::size_type)v17;
              WORD2(v28.__r_.__value_.__r.__words[1]) = 1026;
              *(_DWORD *)((char *)&v28.__r_.__value_.__r.__words[1] + 6) = v18;
              WORD1(v28.__r_.__value_.__r.__words[2]) = 1026;
              HIDWORD(v28.__r_.__value_.__r.__words[2]) = v19;
              _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Fence: dispatch, handleSettled, fence, %{private}s, monitoringStarted, %{public}d, monitoringSettled, %{public}d", (uint8_t *)&v28, 0x18u);
              if ((v30[23] & 0x80000000) != 0) {
                operator delete(*(void **)v30);
              }
            }
            if (sub_10013D1A0(115, 2))
            {
              bzero(&v28, 0x65CuLL);
              if (v5[120] != -1) {
                dispatch_once(&qword_1024193C0, &stru_1022F7C40);
              }
              sub_100918454((const void **)v3 + 4, &__p);
              p_p = &__p;
              if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
              }
              int v24 = *((unsigned __int8 *)v3 + 284);
              int v25 = *((unsigned __int8 *)v3 + 285);
              *(_DWORD *)double v30 = 136381187;
              *(void *)&v30[4] = p_p;
              *(_WORD *)&unsigned char v30[12] = 1026;
              *(_DWORD *)&v30[14] = v24;
              *(_WORD *)&v30[18] = 1026;
              *(_DWORD *)&v30[20] = v25;
              uint64_t v26 = (std::string *)_os_log_send_and_compose_impl();
              if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(__p.__r_.__value_.__l.__data_);
              }
              sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::handleSettled(const CFAbsoluteTime)", "%s\n", (const char *)v26);
              if (v26 != &v28) {
                free(v26);
              }
            }
            sub_1000DBC34(&v28);
            sub_1001BCE30(a1, v1, (uint64_t)&v28, (unsigned __int8 *)v3 + 32);
            if (v29) {
              sub_1000DB0A0(v29);
            }
          }
        }
LABEL_40:
        int v20 = (void *)v3[1];
        if (v20)
        {
          do
          {
            uint64_t v21 = v20;
            int v20 = (void *)*v20;
          }
          while (v20);
        }
        else
        {
          do
          {
            uint64_t v21 = (void *)v3[2];
            BOOL v22 = *v21 == (void)v3;
            uint64_t v3 = v21;
          }
          while (!v22);
        }
        uint64_t v3 = v21;
      }
      while (v21 != v4);
    }
  }
}

void sub_100DC34AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_100DC34E4(uint64_t a1, int a2)
{
  if (a2)
  {
    *(unsigned char *)(a1 + 613) = 1;
    sub_100DC3534((void *)a1);
    sub_100DC2F6C(a1);
    sub_100DB96B0(a1);
  }
}

void sub_100DC3534(void *a1)
{
  sub_100DC4D80((uint64_t)a1, (uint64_t)"kNotificationDeviceUnlockedSinceBoot");
  if (a1[32])
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    unint64_t v10 = 0;
    CFStringRef v2 = (void *)a1[30];
    if (v2 != a1 + 31)
    {
      uint64_t v3 = 0;
      do
      {
        double v4 = (long long *)(v2 + 4);
        if ((unint64_t)v3 >= v10)
        {
          uint64_t v3 = (char *)sub_100920FEC(&v8, v4);
        }
        else
        {
          sub_10048AEC0(v3, v4);
          v3 += 248;
        }
        uint64_t v9 = v3;
        uint64_t v5 = (void *)v2[1];
        if (v5)
        {
          do
          {
            uint64_t v6 = v5;
            uint64_t v5 = (void *)*v5;
          }
          while (v5);
        }
        else
        {
          do
          {
            uint64_t v6 = (void *)v2[2];
            BOOL v7 = *v6 == (void)v2;
            CFStringRef v2 = v6;
          }
          while (!v7);
        }
        CFStringRef v2 = v6;
      }
      while (v6 != a1 + 31);
    }
    sub_100617C1C(a1[228], &v8);
    __int16 v11 = (void **)&v8;
    sub_10008DF5C(&v11);
  }
}

void sub_100DC3618(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12)
{
  a12 = (void **)&a9;
  sub_10008DF5C(&a12);
  _Unwind_Resume(a1);
}

double sub_100DC3644(uint64_t a1)
{
  uint64_t v2 = a1 + 1312;
  char v3 = *(unsigned char *)(a1 + 612);
  char v4 = (*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 16))(*(void *)(a1 + 1768));
  char v5 = *(unsigned char *)(a1 + 728);

  *(void *)&double result = sub_100F5F2D4(v2, v3, v4, v5, (void *)(a1 + 240)).n128_u64[0];
  return result;
}

uint64_t sub_100DC36C0(uint64_t a1, double a2)
{
  uint64_t v6 = *(double **)(a1 + 216);
  char v4 = *(double **)(a1 + 224);
  char v5 = (void **)(a1 + 216);
  while (v6 != v4)
  {
    if (vabdd_f64(a2, *v6) <= 86400.0)
    {
      v6 += 2;
    }
    else
    {
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      BOOL v7 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
      {
        double v8 = *v6;
        *(_DWORD *)long long buf = 134349056;
        double v30 = v8;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Fence: discarding old gps session, %{public}.1lf", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F7C40);
        }
        __int16 v11 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::stopGps(const CFAbsoluteTime)", "%s\n", v11);
        if (v11 != (char *)buf) {
          free(v11);
        }
      }
      uint64_t v9 = *(char **)(a1 + 224);
      int64_t v10 = v9 - (char *)(v6 + 2);
      if (v9 != (char *)(v6 + 2)) {
        memmove(v6, v6 + 2, v9 - (char *)(v6 + 2));
      }
      char v4 = (double *)((char *)v6 + v10);
      *(void *)(a1 + 224) = (char *)v6 + v10;
    }
  }
  if ((*(unsigned int (**)(void))(**(void **)(a1 + 1768) + 400))(*(void *)(a1 + 1768)))
  {
    double v13 = *(double *)(a1 + 864);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    double v14 = a2 - v13;
    int v15 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 134349056;
      double v30 = v14;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "Fence: adding gps session, %{public}.1lf", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      std::string v28 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::stopGps(const CFAbsoluteTime)", "%s\n", v28);
      if (v28 != (char *)buf) {
        free(v28);
      }
    }
    unint64_t v16 = *(void *)(a1 + 232);
    int v17 = *(double **)(a1 + 224);
    if ((unint64_t)v17 >= v16)
    {
      int v19 = (double *)*v5;
      uint64_t v20 = ((char *)v17 - (unsigned char *)*v5) >> 4;
      unint64_t v21 = v20 + 1;
      if ((unint64_t)(v20 + 1) >> 60) {
        sub_1001D7FD4();
      }
      uint64_t v22 = v16 - (void)v19;
      if (v22 >> 3 > v21) {
        unint64_t v21 = v22 >> 3;
      }
      if ((unint64_t)v22 >= 0x7FFFFFFFFFFFFFF0) {
        unint64_t v23 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v23 = v21;
      }
      if (v23)
      {
        int v24 = (char *)sub_1000C571C(a1 + 232, v23);
        int v19 = *(double **)(a1 + 216);
        int v17 = *(double **)(a1 + 224);
      }
      else
      {
        int v24 = 0;
      }
      int v25 = (double *)&v24[16 * v20];
      uint64_t v26 = &v24[16 * v23];
      *int v25 = a2;
      v25[1] = v14;
      int v18 = v25 + 2;
      if (v17 != v19)
      {
        do
        {
          *((_OWORD *)v25 - 1) = *((_OWORD *)v17 - 1);
          v25 -= 2;
          v17 -= 2;
        }
        while (v17 != v19);
        int v19 = (double *)*v5;
      }
      *(void *)(a1 + 216) = v25;
      *(void *)(a1 + 224) = v18;
      *(void *)(a1 + 232) = v26;
      if (v19) {
        operator delete(v19);
      }
    }
    else
    {
      *int v17 = a2;
      v17[1] = v14;
      int v18 = v17 + 2;
    }
    *(void *)(a1 + 224) = v18;
    v12.n128_f64[0] = sub_100F5FA2C(a1 + 1312, v14);
  }
  return (*(uint64_t (**)(void, __n128))(**(void **)(a1 + 1768) + 392))(*(void *)(a1 + 1768), v12);
}

uint64_t sub_100DC3B80(uint64_t a1)
{
  return sub_100F5FA48(a1 + 1312);
}

uint64_t sub_100DC3B88(uint64_t a1)
{
  return sub_1002D384C(a1 + 1312);
}

uint64_t sub_100DC3B90(uint64_t a1)
{
  return sub_100F5F9FC(a1 + 1312);
}

uint64_t sub_100DC3B98(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 16))();
}

uint64_t sub_100DC3BC0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 24))();
}

uint64_t sub_100DC3BE8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 32))();
}

uint64_t sub_100DC3C10(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 40))();
}

void sub_100DC3C38(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v4 = *(void *)(a1 + 1768);
  memset(v6, 0, sizeof(v6));
  sub_1000DA6E8(v6, *a2, a2[1], 0x2E8BA2E8BA2E8BA3 * ((a2[1] - *a2) >> 3));
  memset(v5, 0, sizeof(v5));
  sub_1000DA6E8(v5, *a3, a3[1], 0x2E8BA2E8BA2E8BA3 * ((a3[1] - *a3) >> 3));
  (*(void (**)(uint64_t, void *, void *))(*(void *)v4 + 48))(v4, v6, v5);
  BOOL v7 = (void **)v5;
  sub_1000D7F78(&v7);
  BOOL v7 = (void **)v6;
  sub_1000D7F78(&v7);
}

void sub_100DC3D10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  *(void *)(v14 - 40) = v13;
  sub_1000D7F78((void ***)(v14 - 40));
  *(void *)(v14 - 40) = &a13;
  sub_1000D7F78((void ***)(v14 - 40));
  _Unwind_Resume(a1);
}

uint64_t sub_100DC3D40(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 56))();
}

uint64_t sub_100DC3D68(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 64))();
}

uint64_t sub_100DC3D90(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 72))();
}

uint64_t sub_100DC3DB8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 88))();
}

void sub_100DC3DE0(uint64_t a1, uint64_t a2, char a3, double a4)
{
  *(unsigned char *)(a1 + 640) |= a3;
  *(double *)(a1 + 776) = a4;
  if (sub_1001BAE50(a1))
  {
    sub_100182574((void *)(a1 + 48), &v7);
    if (v7) {
      ++*(_DWORD *)(v7 + 116);
    }
    (*(void (**)(void, uint64_t, double))(**(void **)(a1 + 1768) + 112))(*(void *)(a1 + 1768), a2, *(double *)(a1 + 768));
    *(double *)(a1 + 1744) = a4;
    if (v8) {
      sub_1000DB0A0(v8);
    }
  }
}

void sub_100DC3E90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1000DB0A0(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DC3EA8(uint64_t a1, double a2)
{
  double v5 = a2;
  sub_100F5F9CC(a1 + 1312);
  *(double *)(a1 + 1720) = a2;
  if (fabs(sub_100DCDB7C(a1 + 1648, &v5, (double *)(a1 + 1656))) < 2.0) {
    *(unsigned char *)(a1 + 1648) = 0;
  }
  return (*(uint64_t (**)(uint64_t, const char *, uint64_t, double))(*(void *)a1 + 96))(a1, "epnoEntry", 1, v5);
}

uint64_t sub_100DC3F4C(uint64_t a1, double a2)
{
  double v7 = a2;
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  uint64_t v4 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Fence: setting EPNO exit trigger time", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    uint64_t v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLFenceMonitor::triggerEpnoExitReceived(const CFAbsoluteTime)", "%s\n", v6);
    if (v6 != (char *)buf) {
      free(v6);
    }
  }
  *(double *)(a1 + 656) = a2;
  sub_100F5F9DC(a1 + 1312);
  *(double *)(a1 + 1728) = a2;
  if (fabs(sub_100DCDB7C(a1 + 1648, &v7, (double *)(a1 + 1656))) < 2.0) {
    *(unsigned char *)(a1 + 1648) = 0;
  }
  return (*(uint64_t (**)(uint64_t, const char *, uint64_t, double))(*(void *)a1 + 96))(a1, "epnoExit", 1, v7);
}

void sub_100DC4160(uint64_t a1, double a2)
{
  double v5 = a2;
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  char v3 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Fence: Got kNotificationDelayTriggerReceived from WIFI", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    uint64_t v4 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLFenceMonitor::delayTriggerReceived(const CFAbsoluteTime)", "%s\n", v4);
    if (v4 != (char *)buf) {
      free(v4);
    }
  }
  sub_100DC4330(a1, &v5);
  sub_100182574((void *)(a1 + 48), buf);
  if (*(void *)buf) {
    ++*(_DWORD *)(*(void *)buf + 168);
  }
  if (v7) {
    sub_1000DB0A0(v7);
  }
}

void sub_100DC4330(uint64_t a1, double *a2)
{
  if (*(unsigned char *)(a1 + 620))
  {
    double v3 = vabdd_f64(*a2, *(double *)(a1 + 744));
    double v4 = *(double *)(a1 + 736) + v3 * -45.0;
    if (v3 >= 855.0) {
      double v4 = 0.0;
    }
    if (v4 > 0.0) {
      double v5 = v4;
    }
    else {
      double v5 = 0.0;
    }
    uint64_t v6 = *(void *)(a1 + 256);
    BOOL v7 = v5 + -13500.0 > 0.0 || v6 == 0;
    if (!v7 && (!*(unsigned char *)(a1 + 730) || *(unsigned char *)(a1 + 731)) && *(unsigned char *)(a1 + 612))
    {
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      double v8 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v9 = *(void *)(a1 + 712);
        int v10 = *(_DWORD *)(a1 + 704);
        int v11 = *(_DWORD *)(a1 + 708);
        int v12 = *(unsigned __int8 *)(a1 + 728);
        int v13 = *(unsigned __int8 *)(a1 + 730);
        *(_DWORD *)long long buf = 134284545;
        uint64_t v22 = v9;
        __int16 v23 = 1026;
        int v24 = v10;
        __int16 v25 = 1026;
        int v26 = v11;
        __int16 v27 = 1026;
        int v28 = v12;
        __int16 v29 = 1026;
        LODWORD(v30) = v13;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "Fence: scheduleNextDeassociationDelayedTrigger in, %{private}.1lf, count, %{public}d, %{public}d, airplane, %{public}d, cConnected, %{public}d", buf, 0x24u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F7C40);
        }
        uint64_t v20 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::scheduleNextDeassociationDelayedTrigger(const CFAbsoluteTime &)", "%s\n", v20);
        if (v20 != (char *)buf) {
          free(v20);
        }
      }
      if (!*(unsigned char *)(a1 + 730) || *(unsigned char *)(a1 + 731)) {
        (*(void (**)(void, uint64_t))(**(void **)(a1 + 1768) + 296))(*(void *)(a1 + 1768), a1 + 712);
      }
      return;
    }
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    uint64_t v14 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      int v15 = *(unsigned __int8 *)(a1 + 728);
      int v16 = *(unsigned __int8 *)(a1 + 730);
      int v17 = *(unsigned __int8 *)(a1 + 612);
      *(_DWORD *)long long buf = 134350081;
      uint64_t v22 = v6;
      __int16 v23 = 1026;
      int v24 = v15;
      __int16 v25 = 1026;
      int v26 = v16;
      __int16 v27 = 1026;
      int v28 = v17;
      __int16 v29 = 2049;
      double v30 = v5;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "Fence: ignore de association trigger, numOfFences, %{public}zu, airplane, %{public}d, cConnected, %{public}d, location services, %{public}d, minDistanceToFence, %{private}.1lf", buf, 0x28u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 == -1)
      {
LABEL_36:
        int v19 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::scheduleNextDeassociationDelayedTrigger(const CFAbsoluteTime &)", "%s\n", v19);
        if (v19 != (char *)buf) {
          free(v19);
        }
        return;
      }
LABEL_42:
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      goto LABEL_36;
    }
  }
  else
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    int v18 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEBUG, "Fence: avoid scheduleNextDeassociationDelayedTrigger", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 == -1) {
        goto LABEL_36;
      }
      goto LABEL_42;
    }
  }
}

uint64_t sub_100DC4894(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 288))();
}

void sub_100DC48C4(uint64_t a1, double a2)
{
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  double v4 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Fence: Got kNotificationReCheckContinuousEngagement", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    double v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLFenceMonitor::reCheckContinuousEngagment(const CFAbsoluteTime)", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
  sub_1001BA5A0(a1, a2);
}

void sub_100DC4A70(uint64_t a1, uint64_t a2)
{
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  double v4 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(buf.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Fence: Got kNotificationFenceDownloadRequest", (uint8_t *)&buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    LOWORD(v8[0]) = 0;
    BOOL v7 = (std::string *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLFenceMonitor::fenceDownloadRequest(const CLFenceManager_Type::Fence &)", "%s\n", (const char *)v7);
    if (v7 != &buf) {
      free(v7);
    }
  }
  sub_100D8EB6C((char *)&buf);
  std::string::operator=(&buf, (const std::string *)a2);
  std::string::operator=(&v10, (const std::string *)(a2 + 24));
  std::string::operator=(&v11, (const std::string *)(a2 + 48));
  long long v16 = *(_OWORD *)(a2 + 136);
  long long v17 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)int v18 = *(_OWORD *)(a2 + 168);
  *(void *)&v18[13] = *(void *)(a2 + 181);
  long long v12 = *(_OWORD *)(a2 + 72);
  long long v13 = *(_OWORD *)(a2 + 88);
  long long v14 = *(_OWORD *)(a2 + 104);
  long long v15 = *(_OWORD *)(a2 + 120);
  std::string::operator=(&v19, (const std::string *)(a2 + 192));
  id v5 = v20;
  id v20 = *(id *)(a2 + 216);

  if (&buf != (std::string *)a2) {
    sub_10027C3B4((char *)__p, *(char **)(a2 + 224), *(void *)(a2 + 232), (uint64_t)(*(void *)(a2 + 232) - *(void *)(a2 + 224)) >> 4);
  }
  uint64_t v6 = *(void *)(a1 + 1768);
  v8[0] = 4;
  (*(void (**)(uint64_t, int *, std::string *))(*(void *)v6 + 96))(v6, v8, &buf);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }

  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v19.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v11.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v10.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(buf.__r_.__value_.__l.__data_);
  }
}

void sub_100DC4D50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  if (a2) {
    sub_1001C7F8C(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DC4D80(uint64_t a1, uint64_t a2)
{
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  double v4 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v5 = *(void *)(a1 + 1824);
    int v6 = *(unsigned __int8 *)(a1 + 613);
    *(_DWORD *)std::string buf = 134284035;
    *(void *)&uint8_t buf[4] = v5;
    __int16 v14 = 1026;
    *(_DWORD *)long long v15 = v6;
    *(_WORD *)&v15[4] = 2082;
    *(void *)&v15[6] = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Fence: createStateDatabase, fStateDatabase, %{private}p, fDeviceUnlockedSinceBoot, %{public}d, reason, %{public}s", buf, 0x1Cu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    uint64_t v8 = *(void *)(a1 + 1824);
    int v9 = *(unsigned __int8 *)(a1 + 613);
    *(_DWORD *)std::string __p = 134284035;
    *(void *)&__p[4] = v8;
    *(_WORD *)&unsigned char __p[12] = 1026;
    *(_DWORD *)&__p[14] = v9;
    *(_WORD *)&__p[18] = 2082;
    *(void *)&__p[20] = a2;
    std::string v10 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::createStateDatabase(const char *)", "%s\n", v10);
    if (v10 != buf) {
      free(v10);
    }
  }
  if (!*(void *)(a1 + 1824) && *(unsigned char *)(a1 + 613))
  {
    if (*(_DWORD *)(a1 + 1816) == 1)
    {
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      BOOL v7 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Fence: createStateDatabase in memory", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F7C40);
        }
        *(_WORD *)std::string __p = 0;
        std::string v11 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::createStateDatabase(const char *)", "%s\n", v11);
        if (v11 != buf) {
          free(v11);
        }
      }
      sub_100134750(__p, "");
      *(void *)std::string buf = 3;
      *(_WORD *)&uint8_t buf[8] = 0;
      if ((__p[23] & 0x80000000) != 0)
      {
        sub_1000DC48C(&v15[2], *(void **)__p, *(unint64_t *)&__p[8]);
        uint64_t v17 = 0;
        if ((__p[23] & 0x80000000) != 0) {
          operator delete(*(void **)__p);
        }
      }
      else
      {
        *(_OWORD *)&v15[2] = *(_OWORD *)__p;
        uint64_t v16 = *(void *)&__p[16];
        uint64_t v17 = 0;
      }
      operator new();
    }
    operator new();
  }
}

void sub_100DC51A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DC521C(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  std::string v10 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    if (*(char *)(a2 + 23) >= 0) {
      size_t v11 = *(unsigned __int8 *)(a2 + 23);
    }
    else {
      size_t v11 = *(void *)(a2 + 8);
    }
    long long v12 = &v147;
    sub_1001110E4((uint64_t)&v147, v11 + 1);
    if ((v147.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      long long v12 = (std::string *)v147.__r_.__value_.__r.__words[0];
    }
    if (v11)
    {
      if (*(char *)(a2 + 23) >= 0) {
        long long v13 = (const void *)a2;
      }
      else {
        long long v13 = *(const void **)a2;
      }
      memmove(v12, v13, v11);
    }
    *(_WORD *)((char *)&v12->__r_.__value_.__l.__data_ + v11) = 47;
    int v14 = *(char *)(a2 + 47);
    if (v14 >= 0) {
      long long v15 = (const std::string::value_type *)(a2 + 24);
    }
    else {
      long long v15 = *(const std::string::value_type **)(a2 + 24);
    }
    if (v14 >= 0) {
      std::string::size_type v16 = *(unsigned __int8 *)(a2 + 47);
    }
    else {
      std::string::size_type v16 = *(void *)(a2 + 32);
    }
    uint64_t v17 = std::string::append(&v147, v15, v16);
    long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
    __p.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v18;
    v17->__r_.__value_.__l.__size_ = 0;
    v17->__r_.__value_.__r.__words[2] = 0;
    v17->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v147.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v147.__r_.__value_.__l.__data_);
    }
    double v4 = (std::string *)SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    sub_100BA8710((_DWORD *)a3);
    p_p = &__p;
    if ((int)v4 < 0) {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((v147.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      id v20 = &v147;
    }
    else {
      id v20 = (std::string *)v147.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)std::string buf = 136380931;
    *(void *)&uint8_t buf[4] = p_p;
    __int16 v140 = 2081;
    v141 = v20;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "Fence: startMonitoringNow, fence, %{private}s, status, %{private}s", buf, 0x16u);
    if (SHIBYTE(v147.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v147.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&v147, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    sub_100918454((const void **)a2, &__p);
    double v4 = (std::string *)SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    std::string::size_type v101 = __p.__r_.__value_.__r.__words[0];
    sub_100BA8710((_DWORD *)a3);
    int v102 = &__p;
    if ((int)v4 < 0) {
      int v102 = (std::string *)v101;
    }
    if (v142 >= 0) {
      char v103 = buf;
    }
    else {
      char v103 = *(unsigned char **)buf;
    }
    int v143 = 136380931;
    v144 = v102;
    __int16 v145 = 2081;
    v146 = v103;
    std::string v10 = _os_log_send_and_compose_impl();
    if (v142 < 0) {
      operator delete(*(void **)buf);
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::startMonitoringNow(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, const CLFenceMonitorLogic::FenceMonitoringStatus &)", "%s\n", (const char *)v10);
    if (v10 != &v147) {
      free(v10);
    }
  }
  if (*(_DWORD *)(a2 + 184) == -1)
  {
    sub_101A8EBE8();
    __break(1u);
    goto LABEL_256;
  }
  std::string v10 = (a1 + 240);
  double v4 = &v147;
  uint64_t v5 = a1 + 248;
  if (a1 + 248 != sub_10001A4C4(a1 + 240, (unsigned __int8 *)a2))
  {
    if (qword_1024193C0 == -1)
    {
LABEL_35:
      unint64_t v21 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
      {
        if (*(char *)(a2 + 23) >= 0) {
          size_t v22 = *(unsigned __int8 *)(a2 + 23);
        }
        else {
          size_t v22 = *(void *)(a2 + 8);
        }
        __int16 v23 = &v147;
        sub_1001110E4((uint64_t)&v147, v22 + 1);
        if ((v147.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          __int16 v23 = (std::string *)v147.__r_.__value_.__r.__words[0];
        }
        if (v22)
        {
          if (*(char *)(a2 + 23) >= 0) {
            int v24 = (const void *)a2;
          }
          else {
            int v24 = *(const void **)a2;
          }
          memmove(v23, v24, v22);
        }
        *(_WORD *)((char *)&v23->__r_.__value_.__l.__data_ + v22) = 47;
        int v25 = *(char *)(a2 + 47);
        if (v25 >= 0) {
          int v26 = (const std::string::value_type *)(a2 + 24);
        }
        else {
          int v26 = *(const std::string::value_type **)(a2 + 24);
        }
        if (v25 >= 0) {
          std::string::size_type v27 = *(unsigned __int8 *)(a2 + 47);
        }
        else {
          std::string::size_type v27 = *(void *)(a2 + 32);
        }
        int v28 = std::string::append(&v147, v26, v27);
        long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
        __p.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
        *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v29;
        v28->__r_.__value_.__l.__size_ = 0;
        v28->__r_.__value_.__r.__words[2] = 0;
        v28->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(v147.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v147.__r_.__value_.__l.__data_);
        }
        double v30 = &__p;
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          double v30 = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        LODWORD(v147.__r_.__value_.__l.__data_) = 136380675;
        *(std::string::size_type *)((char *)v4->__r_.__value_.__r.__words + 4) = (std::string::size_type)v30;
        _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEBUG, "Fence: startMonitoringNow, fence, %{private}s, is already in fMonitoredFences", (uint8_t *)&v147, 0xCu);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(&v147, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F7C40);
        }
        sub_100918454((const void **)a2, &__p);
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          uint64_t v31 = &__p;
        }
        else {
          uint64_t v31 = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        *(_DWORD *)std::string buf = 136380675;
        *(void *)&uint8_t buf[4] = v31;
        __int16 v32 = (std::string *)_os_log_send_and_compose_impl();
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::startMonitoringNow(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, const CLFenceMonitorLogic::FenceMonitoringStatus &)", "%s\n", (const char *)v32);
        if (v32 != &v147) {
          free(v32);
        }
      }
      goto LABEL_74;
    }
LABEL_256:
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    goto LABEL_35;
  }
  v147.__r_.__value_.__r.__words[0] = a2;
  double v33 = sub_100DCE264((uint64_t **)(a1 + 240), (unsigned __int8 *)a2, (uint64_t)&unk_101D0B290, (long long **)&v147);
  long long v34 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v33 + 35) = *(_OWORD *)a3;
  *(_OWORD *)(v33 + 37) = v34;
  long long v35 = *(_OWORD *)(a3 + 32);
  long long v36 = *(_OWORD *)(a3 + 48);
  long long v37 = *(_OWORD *)(a3 + 64);
  v33[45] = *(void *)(a3 + 80);
  *(_OWORD *)(v33 + 41) = v36;
  *(_OWORD *)(v33 + 43) = v37;
  *(_OWORD *)(v33 + 39) = v35;
  if (*(void *)(a2 + 232) == *(void *)(a2 + 224))
  {
    if (_os_feature_enabled_impl()) {
      goto LABEL_74;
    }
    uint64_t v38 = 64;
  }
  else
  {
    uint64_t v38 = 8;
  }
  if ((*(void *)(a2 + 160) & v38) != 0)
  {
    *(unsigned char *)(a1 + 731) = 1;
    sub_100A0D884((uint64_t **)(a1 + 264), (unsigned __int8 *)a2, (long long *)a2);
  }
LABEL_74:
  uint64_t v127 = sub_10001A4C4((uint64_t)v10, (unsigned __int8 *)a2);
  uint64_t v39 = v127;
  if (v5 == v127)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    double v52 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_FAULT))
    {
      LOWORD(v147.__r_.__value_.__l.__data_) = 0;
      _os_log_impl((void *)&_mh_execute_header, v52, OS_LOG_TYPE_FAULT, "Fence: crirital error!", (uint8_t *)&v147, 2u);
    }
    if (!sub_10013D1A0(115, 0)) {
      return;
    }
    bzero(&v147, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    LOWORD(__p.__r_.__value_.__l.__data_) = 0;
    __int16 v51 = (std::string *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "void CLFenceMonitor::startMonitoringNow(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, const CLFenceMonitorLogic::FenceMonitoringStatus &)", "%s\n", (const char *)v51);
LABEL_264:
    if (v51 == &v147) {
      return;
    }
    goto LABEL_265;
  }
  if (*(unsigned char *)(a1 + 612))
  {
    if ((*(unsigned char *)(a2 + 160) & 0x80) != 0)
    {
      sub_100DC6F24(a1, a2);
      uint64_t v39 = v127;
    }
    v126 = (const void **)(v39 + 32);
    *(_OWORD *)(v39 + 304) = xmmword_101D8E250;
    if (*(unsigned char *)(v39 + 284))
    {
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      uint64_t v40 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
      {
        if (*(char *)(v39 + 55) >= 0) {
          size_t v41 = *(unsigned __int8 *)(v39 + 55);
        }
        else {
          size_t v41 = *(void *)(v39 + 40);
        }
        sub_1001110E4((uint64_t)&v147, v41 + 1);
        if ((v147.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          id v42 = &v147;
        }
        else {
          id v42 = (std::string *)v147.__r_.__value_.__r.__words[0];
        }
        if (v41)
        {
          if (*(char *)(v127 + 55) >= 0) {
            __int16 v43 = (const void *)(v39 + 32);
          }
          else {
            __int16 v43 = *(const void **)(v127 + 32);
          }
          memmove(v42, v43, v41);
        }
        *(_WORD *)((char *)&v42->__r_.__value_.__l.__data_ + v41) = 47;
        int v44 = *(char *)(v127 + 79);
        if (v44 >= 0) {
          int v45 = (const std::string::value_type *)(v127 + 56);
        }
        else {
          int v45 = *(const std::string::value_type **)(v127 + 56);
        }
        if (v44 >= 0) {
          std::string::size_type v46 = *(unsigned __int8 *)(v127 + 79);
        }
        else {
          std::string::size_type v46 = *(void *)(v127 + 64);
        }
        __int16 v47 = std::string::append(&v147, v45, v46);
        long long v48 = *(_OWORD *)&v47->__r_.__value_.__l.__data_;
        __p.__r_.__value_.__r.__words[2] = v47->__r_.__value_.__r.__words[2];
        *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v48;
        v47->__r_.__value_.__l.__size_ = 0;
        v47->__r_.__value_.__r.__words[2] = 0;
        v47->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(v147.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v147.__r_.__value_.__l.__data_);
        }
        float64x2_t v49 = &__p;
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          float64x2_t v49 = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        LODWORD(v147.__r_.__value_.__l.__data_) = 136380675;
        *(std::string::size_type *)((char *)v4->__r_.__value_.__r.__words + 4) = (std::string::size_type)v49;
        _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_DEBUG, "Fence: fence is already monitored, %{private}s", (uint8_t *)&v147, 0xCu);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
      }
      if (!sub_10013D1A0(115, 2)) {
        return;
      }
      bzero(&v147, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      sub_100918454(v126, &__p);
      double v50 = (__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
          ? &__p
          : (std::string *)__p.__r_.__value_.__r.__words[0];
      *(_DWORD *)std::string buf = 136380675;
      *(void *)&uint8_t buf[4] = v50;
      __int16 v51 = (std::string *)_os_log_send_and_compose_impl();
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::startMonitoringNow(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, const CLFenceMonitorLogic::FenceMonitoringStatus &)", "%s\n", (const char *)v51);
      if (v51 == &v147) {
        return;
      }
LABEL_265:
      free(v51);
      return;
    }
    *(unsigned char *)(v39 + 284) = 1;
    sub_100DB9B3C(a1, a2, *(_DWORD *)(a1 + 608));
    sub_100F5FAA4((int64x2_t *)(a1 + 1312), (uint64_t)v126);
    __int16 v56 = (int *)(v127 + 280);
    uint64_t v57 = *(void *)(a1 + 1824);
    if (v57)
    {
      *__int16 v56 = sub_10061830C(v57, a2);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      __int16 v58 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
      {
        int v59 = *v56;
        LODWORD(v147.__r_.__value_.__l.__data_) = 67174657;
        HIDWORD(v147.__r_.__value_.__r.__words[0]) = v59;
        _os_log_impl((void *)&_mh_execute_header, v58, OS_LOG_TYPE_DEBUG, "Fence: state, retrieved %{private}d", (uint8_t *)&v147, 8u);
      }
      BOOL v60 = sub_10013D1A0(115, 2);
      uint64_t v61 = v127;
      if (!v60)
      {
LABEL_150:
        *(_DWORD *)(v61 + 348) = 0;
        if ((*(unsigned char *)(v61 + 192) & 0x10) != 0) {
          double v65 = 30.0;
        }
        else {
          double v65 = 300.0;
        }
        if (*(void *)(a1 + 256) >= 2uLL
          && (uint64_t v66 = (double *)(a1 + 308), *(double *)(a1 + 308) >= 0.0)
          && vabdd_f64(a4, *(double *)(a1 + 364)) <= v65)
        {
          sub_1001B1B04(a1 + 288);
          double v95 = vabdd_f64(a4, *(double *)(a1 + 364));
          double v96 = *v66;
          if (*v66 >= 0.0 && v95 <= v65)
          {
            if (qword_1024193C0 != -1) {
              dispatch_once(&qword_1024193C0, &stru_1022F7C40);
            }
            __int16 v97 = qword_1024193C8;
            if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
            {
              sub_1000AB340(a1 + 288);
              int v98 = (v147.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
                  ? &v147
                  : (std::string *)v147.__r_.__value_.__r.__words[0];
              LODWORD(__p.__r_.__value_.__l.__data_) = 136380675;
              *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + 4) = (std::string::size_type)v98;
              _os_log_impl((void *)&_mh_execute_header, v97, OS_LOG_TYPE_DEBUG, "Fence: filtered fLastLocation, %{private}s", (uint8_t *)&__p, 0xCu);
              if (SHIBYTE(v147.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(v147.__r_.__value_.__l.__data_);
              }
            }
            if (sub_10013D1A0(115, 2))
            {
              bzero(&v147, 0x65CuLL);
              if (qword_1024193C0 != -1) {
                dispatch_once(&qword_1024193C0, &stru_1022F7C40);
              }
              sub_1000AB340(a1 + 288);
              if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                v123 = &__p;
              }
              else {
                v123 = (std::string *)__p.__r_.__value_.__r.__words[0];
              }
              *(_DWORD *)std::string buf = 136380675;
              *(void *)&uint8_t buf[4] = v123;
              char v124 = (std::string *)_os_log_send_and_compose_impl();
              if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(__p.__r_.__value_.__l.__data_);
              }
              sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::startMonitoringNow(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, const CLFenceMonitorLogic::FenceMonitoringStatus &)", "%s\n", (const char *)v124);
              if (v124 != &v147) {
                free(v124);
              }
            }
            sub_100DC7120(a1, v126, a1 + 288, v56, 0, a4);
            sub_1000DBC34(&v147);
            sub_100013C58(a1);
            if (v158) {
              sub_1000DB0A0(v158);
            }
            double v96 = *v66;
          }
          if (v96 >= 0.0 && !sub_1001ABF10(a1 + 288) && v95 <= v65) {
            goto LABEL_163;
          }
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F7C40);
          }
          __int16 v99 = qword_1024193C8;
          if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
          {
            sub_1000AB340(a1 + 288);
            __int16 v100 = (v147.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
                 ? &v147
                 : (std::string *)v147.__r_.__value_.__r.__words[0];
            LODWORD(__p.__r_.__value_.__l.__data_) = 136380675;
            *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + 4) = (std::string::size_type)v100;
            _os_log_impl((void *)&_mh_execute_header, v99, OS_LOG_TYPE_DEBUG, "Fence: request scan, current location, %{private}s", (uint8_t *)&__p, 0xCu);
            if (SHIBYTE(v147.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v147.__r_.__value_.__l.__data_);
            }
          }
          if (!sub_10013D1A0(115, 2)) {
            goto LABEL_161;
          }
          bzero(&v147, 0x65CuLL);
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F7C40);
          }
          sub_1000AB340(a1 + 288);
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            int v122 = &__p;
          }
          else {
            int v122 = (std::string *)__p.__r_.__value_.__r.__words[0];
          }
          *(_DWORD *)std::string buf = 136380675;
          *(void *)&uint8_t buf[4] = v122;
          v115 = (std::string *)_os_log_send_and_compose_impl();
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::startMonitoringNow(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, const CLFenceMonitorLogic::FenceMonitoringStatus &)", "%s\n", (const char *)v115);
          if (v115 == &v147)
          {
LABEL_161:
            sub_100DBCC34(a1, a4);
            if ((*(unsigned char *)(v127 + 192) & 0x10) != 0) {
              (*(void (**)(void))(**(void **)(a1 + 1768) + 336))(*(void *)(a1 + 1768));
            }
LABEL_163:
            sub_1001BA5A0(a1, a4);
            if (qword_1024193C0 != -1) {
              dispatch_once(&qword_1024193C0, &stru_1022F7C40);
            }
            uint64_t v68 = qword_1024193C8;
            if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
            {
              sub_100C8C864((uint64_t)v126);
              int v69 = SHIBYTE(v147.__r_.__value_.__r.__words[2]);
              std::string::size_type v70 = v147.__r_.__value_.__r.__words[0];
              sub_100BA8710(v56);
              __int16 v71 = &v147;
              if (v69 < 0) {
                __int16 v71 = (std::string *)v70;
              }
              if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                uint64_t v72 = &__p;
              }
              else {
                uint64_t v72 = (std::string *)__p.__r_.__value_.__r.__words[0];
              }
              *(_DWORD *)std::string buf = 136380931;
              *(void *)&uint8_t buf[4] = v71;
              __int16 v140 = 2081;
              v141 = v72;
              _os_log_impl((void *)&_mh_execute_header, v68, OS_LOG_TYPE_DEBUG, "Started monitoring, %{private}s, monitoringStatus, %{private}s", buf, 0x16u);
              if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(__p.__r_.__value_.__l.__data_);
              }
              if (SHIBYTE(v147.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(v147.__r_.__value_.__l.__data_);
              }
            }
            if (sub_10013D1A0(115, 2))
            {
              bzero(&v147, 0x65CuLL);
              if (qword_1024193C0 != -1) {
                dispatch_once(&qword_1024193C0, &stru_1022F7C40);
              }
              sub_100C8C864((uint64_t)v126);
              int v106 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
              std::string::size_type v107 = __p.__r_.__value_.__r.__words[0];
              sub_100BA8710(v56);
              int v108 = &__p;
              if (v106 < 0) {
                int v108 = (std::string *)v107;
              }
              if (v142 >= 0) {
                __int16 v109 = buf;
              }
              else {
                __int16 v109 = *(unsigned char **)buf;
              }
              int v143 = 136380931;
              v144 = v108;
              __int16 v145 = 2081;
              v146 = v109;
              v110 = (std::string *)_os_log_send_and_compose_impl();
              if (v142 < 0) {
                operator delete(*(void **)buf);
              }
              if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(__p.__r_.__value_.__l.__data_);
              }
              sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::startMonitoringNow(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, const CLFenceMonitorLogic::FenceMonitoringStatus &)", "%s\n", (const char *)v110);
              if (v110 != &v147) {
                free(v110);
              }
            }
            if (qword_1024193C0 != -1) {
              dispatch_once(&qword_1024193C0, &stru_1022F7C40);
            }
            __int16 v73 = qword_1024193C8;
            if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v74 = (const void *)(v39 + 32);
              if (*(char *)(v127 + 55) < 0) {
                uint64_t v74 = *v126;
              }
              __int16 v75 = (void *)(v127 + 56);
              if (*(char *)(v127 + 79) < 0) {
                __int16 v75 = (void *)*v75;
              }
              if (*(void *)(v127 + 264) == *(void *)(v127 + 256))
              {
                unint64_t v76 = *(void *)(v127 + 104);
                unint64_t v77 = *(void *)(v127 + 112);
              }
              else
              {
                unint64_t v76 = 0xBFF0000000000000;
                unint64_t v77 = 0xBFF0000000000000;
              }
              double v78 = sub_100044A78((uint64_t)v126);
              int v79 = *(_DWORD *)(v127 + 288);
              uint64_t v80 = *(void *)(a1 + 256);
              int v81 = *(unsigned __int8 *)(a1 + 613);
              LODWORD(v147.__r_.__value_.__l.__data_) = 136448003;
              *(std::string::size_type *)((char *)v147.__r_.__value_.__r.__words + 4) = (std::string::size_type)v74;
              WORD2(v147.__r_.__value_.__r.__words[1]) = 2081;
              *(std::string::size_type *)((char *)&v147.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v75;
              HIWORD(v147.__r_.__value_.__r.__words[2]) = 2049;
              unint64_t v148 = v76;
              *(_WORD *)v149 = 2049;
              *(void *)&v149[2] = v77;
              __int16 v150 = 2050;
              double v151 = v78;
              __int16 v152 = 1025;
              int v153 = v79;
              __int16 v154 = 2050;
              uint64_t v155 = v80;
              __int16 v156 = 1026;
              int v157 = v81;
              _os_log_impl((void *)&_mh_execute_header, v73, OS_LOG_TYPE_DEFAULT, "Fence:Start Started monitoring fence %{public}s/%{private}s (<%{private}+.8f,%{private}+.8f>, radius %{public}.3f, active tech %{private}d), numFences, %{public}zu, unlocked, %{public}d", (uint8_t *)&v147, 0x4Au);
            }
            if (sub_10013D1A0(115, 2))
            {
              bzero(&v147, 0x65CuLL);
              if (qword_1024193C0 != -1) {
                dispatch_once(&qword_1024193C0, &stru_1022F7C40);
              }
              int v111 = v126;
              if (*(char *)(v127 + 55) < 0) {
                int v111 = (void *)*v126;
              }
              __int16 v112 = (void *)(v127 + 56);
              if (*(char *)(v127 + 79) < 0) {
                __int16 v112 = (void *)*v112;
              }
              if (*(void *)(v127 + 264) == *(void *)(v127 + 256))
              {
                unint64_t v113 = *(void *)(v127 + 104);
                unint64_t v114 = *(void *)(v127 + 112);
              }
              else
              {
                unint64_t v113 = 0xBFF0000000000000;
                unint64_t v114 = 0xBFF0000000000000;
              }
              double v117 = sub_100044A78((uint64_t)v126);
              int v118 = *(_DWORD *)(v127 + 288);
              uint64_t v119 = *(void *)(a1 + 256);
              int v120 = *(unsigned __int8 *)(a1 + 613);
              LODWORD(__p.__r_.__value_.__l.__data_) = 136448003;
              *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + 4) = (std::string::size_type)v111;
              WORD2(__p.__r_.__value_.__r.__words[1]) = 2081;
              *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v112;
              HIWORD(__p.__r_.__value_.__r.__words[2]) = 2049;
              unint64_t v129 = v113;
              *(_WORD *)int v130 = 2049;
              *(void *)&v130[2] = v114;
              __int16 v131 = 2050;
              double v132 = v117;
              __int16 v133 = 1025;
              int v134 = v118;
              __int16 v135 = 2050;
              uint64_t v136 = v119;
              __int16 v137 = 1026;
              int v138 = v120;
              __int16 v121 = (std::string *)_os_log_send_and_compose_impl();
              sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::startMonitoringNow(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, const CLFenceMonitorLogic::FenceMonitoringStatus &)", "%s\n", (const char *)v121);
              if (v121 != &v147) {
                free(v121);
              }
            }
            unint64_t v82 = *(void *)(v127 + 264) - *(void *)(v127 + 256);
            if (v82)
            {
              unint64_t v125 = v82 >> 4;
              if ((int)(v82 >> 4) >= -8)
              {
                int v83 = 0;
                int v84 = ((int)v125 - 1) / 10;
                long long v85 = (std::string::size_type *)(v127 + 56);
                int v86 = -1;
                int v87 = v82 >> 4;
                do
                {
                  if (v83 >= v84) {
                    int v88 = v87;
                  }
                  else {
                    int v88 = 10;
                  }
                  if (qword_1024193C0 != -1) {
                    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
                  }
                  ++v83;
                  uint64_t v89 = qword_1024193C8;
                  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
                  {
                    std::string::size_type v90 = v127 + 56;
                    if (*(char *)(v127 + 79) < 0) {
                      std::string::size_type v90 = *v85;
                    }
                    sub_100C8D16C((uint64_t)v126, v86 + 1, v88 + v86);
                    char v91 = &__p;
                    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                      char v91 = (std::string *)__p.__r_.__value_.__r.__words[0];
                    }
                    LODWORD(v147.__r_.__value_.__l.__data_) = 136447235;
                    *(std::string::size_type *)((char *)v147.__r_.__value_.__r.__words + 4) = v90;
                    WORD2(v147.__r_.__value_.__r.__words[1]) = 1026;
                    *(_DWORD *)((char *)&v147.__r_.__value_.__r.__words[1] + 6) = v125;
                    WORD1(v147.__r_.__value_.__r.__words[2]) = 1026;
                    HIDWORD(v147.__r_.__value_.__r.__words[2]) = v83;
                    LOWORD(v148) = 1024;
                    *(_DWORD *)((char *)&v148 + 2) = v84 + 1;
                    HIWORD(v148) = 2081;
                    *(void *)v149 = v91;
                    _os_log_impl((void *)&_mh_execute_header, v89, OS_LOG_TYPE_DEFAULT, "Fence:Poly, %{public}s, %{public}d, %{public}d, %{publice}d, %{private}s", (uint8_t *)&v147, 0x28u);
                    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
                      operator delete(__p.__r_.__value_.__l.__data_);
                    }
                  }
                  if (sub_10013D1A0(115, 2))
                  {
                    bzero(&v147, 0x65CuLL);
                    if (qword_1024193C0 != -1) {
                      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
                    }
                    std::string::size_type v92 = v127 + 56;
                    if (*(char *)(v127 + 79) < 0) {
                      std::string::size_type v92 = *v85;
                    }
                    sub_100C8D16C((uint64_t)v126, v86 + 1, v88 + v86);
                    long long v93 = buf;
                    if (v142 < 0) {
                      long long v93 = *(unsigned char **)buf;
                    }
                    LODWORD(__p.__r_.__value_.__l.__data_) = 136447235;
                    *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + 4) = v92;
                    WORD2(__p.__r_.__value_.__r.__words[1]) = 1026;
                    *(_DWORD *)((char *)&__p.__r_.__value_.__r.__words[1] + 6) = v125;
                    WORD1(__p.__r_.__value_.__r.__words[2]) = 1026;
                    HIDWORD(__p.__r_.__value_.__r.__words[2]) = v83;
                    LOWORD(v129) = 1024;
                    *(_DWORD *)((char *)&v129 + 2) = v84 + 1;
                    HIWORD(v129) = 2081;
                    *(void *)int v130 = v93;
                    uint64_t v94 = (std::string *)_os_log_send_and_compose_impl();
                    if (v142 < 0) {
                      operator delete(*(void **)buf);
                    }
                    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::startMonitoringNow(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, const CLFenceMonitorLogic::FenceMonitoringStatus &)", "%s\n", (const char *)v94);
                    if (v94 != &v147) {
                      free(v94);
                    }
                  }
                  v86 += 10;
                  v87 -= 10;
                }
                while ((v84 & ~(v84 >> 31)) + 1 != v83);
              }
            }
            return;
          }
        }
        else
        {
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F7C40);
          }
          __int16 v67 = qword_1024193C8;
          if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
          {
            LOWORD(v147.__r_.__value_.__l.__data_) = 0;
            _os_log_impl((void *)&_mh_execute_header, v67, OS_LOG_TYPE_DEBUG, "Fence: request scan, no current location", (uint8_t *)&v147, 2u);
          }
          if (!sub_10013D1A0(115, 2)) {
            goto LABEL_161;
          }
          bzero(&v147, 0x65CuLL);
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F7C40);
          }
          LOWORD(__p.__r_.__value_.__l.__data_) = 0;
          v115 = (std::string *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::startMonitoringNow(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, const CLFenceMonitorLogic::FenceMonitoringStatus &)", "%s\n", (const char *)v115);
          if (v115 == &v147) {
            goto LABEL_161;
          }
        }
        free(v115);
        goto LABEL_161;
      }
      bzero(&v147, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      int v62 = *v56;
      LODWORD(__p.__r_.__value_.__l.__data_) = 67174657;
      HIDWORD(__p.__r_.__value_.__r.__words[0]) = v62;
      __int16 v63 = (std::string *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::startMonitoringNow(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, const CLFenceMonitorLogic::FenceMonitoringStatus &)", "%s\n", (const char *)v63);
      if (v63 != &v147) {
        free(v63);
      }
    }
    else
    {
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      uint64_t v64 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(v147.__r_.__value_.__l.__data_) = 0;
        _os_log_impl((void *)&_mh_execute_header, v64, OS_LOG_TYPE_DEFAULT, "#Warning Fence: state startMonitoringNow, before first unlock", (uint8_t *)&v147, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(&v147, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F7C40);
        }
        LOWORD(__p.__r_.__value_.__l.__data_) = 0;
        v116 = (std::string *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::startMonitoringNow(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, const CLFenceMonitorLogic::FenceMonitoringStatus &)", "%s\n", (const char *)v116);
        if (v116 != &v147) {
          free(v116);
        }
      }
      *__int16 v56 = -1;
    }
    uint64_t v61 = v127;
    goto LABEL_150;
  }
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  double v53 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
  {
    __int16 v54 = (void *)(v127 + 32);
    if (*(char *)(v127 + 55) < 0) {
      __int16 v54 = (void *)*v54;
    }
    uint64_t v55 = (void *)(v127 + 56);
    if (*(char *)(v127 + 79) < 0) {
      uint64_t v55 = (void *)*v55;
    }
    LODWORD(v147.__r_.__value_.__l.__data_) = 136380931;
    *(std::string::size_type *)((char *)v147.__r_.__value_.__r.__words + 4) = (std::string::size_type)v54;
    WORD2(v147.__r_.__value_.__r.__words[1]) = 2081;
    *(std::string::size_type *)((char *)&v147.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v55;
    _os_log_impl((void *)&_mh_execute_header, v53, OS_LOG_TYPE_DEFAULT, "Fence: Location services is disabled; not starting monitoring for %{private}s/%{private}s",
      (uint8_t *)&v147,
      0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&v147, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    unint64_t v104 = (void *)(v127 + 32);
    if (*(char *)(v127 + 55) < 0) {
      unint64_t v104 = (void *)*v104;
    }
    int v105 = (void *)(v127 + 56);
    if (*(char *)(v127 + 79) < 0) {
      int v105 = (void *)*v105;
    }
    LODWORD(__p.__r_.__value_.__l.__data_) = 136380931;
    *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + 4) = (std::string::size_type)v104;
    WORD2(__p.__r_.__value_.__r.__words[1]) = 2081;
    *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v105;
    __int16 v51 = (std::string *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::startMonitoringNow(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, const CLFenceMonitorLogic::FenceMonitoringStatus &)", "%s\n", (const char *)v51);
    goto LABEL_264;
  }
}

void sub_100DC6EC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_100DC6F24(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(a2 + 160) & 0x80) != 0)
  {
    double v3 = *(void (**)(void))(**(void **)(a1 + 1768) + 416);
    v3();
  }
  else
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    uint64_t v2 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_FAULT, "#ignificantRegion: Attempt to start loi monitoring", buf, 2u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      double v4 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "void CLFenceMonitor::startMonitoringLoiIfNeeded(const CLFenceManager_Type::Fence &)", "%s\n", v4);
      if (v4 != (char *)buf) {
        free(v4);
      }
    }
  }
}

void sub_100DC7120(uint64_t a1, const void **a2, uint64_t a3, _DWORD *a4, int a5, double a6)
{
  int v11 = sub_100DC8898(a1, (uint64_t)a2, a4, a3);

  sub_100DC7C50(a1, a2, a4, v11, a5, a6);
}

void sub_100DC7194(uint64_t **a1, unsigned __int8 *a2, double a3)
{
  if ((a2[160] & 0x80) == 0)
  {
    sub_101A8ED54();
    __break(1u);
LABEL_32:
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    goto LABEL_4;
  }
  double v4 = a2;
  double v7 = a3;
  double v3 = a1;
  sub_100110970((char *)v16);
  int v5 = sub_100DC9174((uint64_t)v3, v4, (uint64_t)v16);
  if (!v5) {
    goto LABEL_18;
  }
  int v6 = &qword_102419000;
  if (qword_1024193C0 != -1) {
    goto LABEL_32;
  }
LABEL_4:
  uint64_t v8 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
  {
    int v9 = v18;
    if (v19 < 0) {
      int v9 = (void **)v18[0];
    }
    if ((v4[23] & 0x80u) == 0) {
      std::string v10 = (uint64_t *)v4;
    }
    else {
      std::string v10 = *(uint64_t **)v4;
    }
    int v11 = v4 + 24;
    if ((v4[47] & 0x80u) != 0) {
      int v11 = (void *)*((void *)v4 + 3);
    }
    *(_DWORD *)std::string buf = 136381187;
    *(void *)&uint8_t buf[4] = v9;
    __int16 v34 = 2081;
    long long v35 = v10;
    __int16 v36 = 2081;
    std::string __p = v11;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#significantRegion: helper fence stop, %{private}s for [%{private}s/%{private}s", buf, 0x20u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (v6[120] != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    long long v12 = v18;
    if (v19 < 0) {
      long long v12 = (void **)v18[0];
    }
    if ((v4[23] & 0x80u) == 0) {
      long long v13 = (uint64_t *)v4;
    }
    else {
      long long v13 = *(uint64_t **)v4;
    }
    int v14 = (uint64_t *)(v4 + 24);
    if ((v4[47] & 0x80u) != 0) {
      int v14 = (uint64_t *)*((void *)v4 + 3);
    }
    int v27 = 136381187;
    int v28 = v12;
    __int16 v29 = 2081;
    double v30 = v13;
    __int16 v31 = 2081;
    __int16 v32 = v14;
    long long v15 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::stopMonitoringLoiIfNeeded(const CFAbsoluteTime, const CLFenceManager_Type::Fence &)", "%s\n", v15);
    if (v15 != buf) {
      free(v15);
    }
  }
  sub_100DC755C((uint64_t)v3, (uint64_t)v16, 1, v7);
  sub_100340A70(buf, (long long *)v18, (long long *)v16);
  sub_100DCF5F4(v3 + 99, (const void **)buf);
  if (v38 < 0) {
    operator delete(__p);
  }
  if (SHIBYTE(v36) < 0) {
    operator delete(*(void **)buf);
  }
LABEL_18:
  sub_100DCF650(v3 + 102, v4);
  if (v5) {
    (*(void (**)(uint64_t *))(*v3[221] + 440))(v3[221]);
  }
  if (v25)
  {
    int v26 = v25;
    operator delete(v25);
  }

  if (v23 < 0) {
    operator delete(v22);
  }
  if (v21 < 0) {
    operator delete(v20);
  }
  if (v19 < 0) {
    operator delete(v18[0]);
  }
  if (v17 < 0) {
    operator delete(v16[0]);
  }
}

void sub_100DC7518(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_100488394((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100DC755C(uint64_t a1, uint64_t a2, int a3, double a4)
{
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  uint64_t v8 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
  {
    if (*(char *)(a2 + 23) >= 0) {
      std::string::size_type v9 = a2;
    }
    else {
      std::string::size_type v9 = *(void *)a2;
    }
    if (*(char *)(a2 + 47) >= 0) {
      std::string::size_type v10 = a2 + 24;
    }
    else {
      std::string::size_type v10 = *(void *)(a2 + 24);
    }
    LODWORD(buf[0].__r_.__value_.__l.__data_) = 136446467;
    *(std::string::size_type *)((char *)buf[0].__r_.__value_.__r.__words + 4) = v9;
    WORD2(buf[0].__r_.__value_.__r.__words[1]) = 2081;
    *(std::string::size_type *)((char *)&buf[0].__r_.__value_.__r.__words[1] + 6) = v10;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Fence:Stop stopMonitoringNow, fence, %{public}s/%{private}s", (uint8_t *)buf, 0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    if (*(char *)(a2 + 23) >= 0) {
      std::string::size_type v27 = a2;
    }
    else {
      std::string::size_type v27 = *(void *)a2;
    }
    if (*(char *)(a2 + 47) >= 0) {
      std::string::size_type v28 = a2 + 24;
    }
    else {
      std::string::size_type v28 = *(void *)(a2 + 24);
    }
    LODWORD(__p.__r_.__value_.__l.__data_) = 136446467;
    *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + 4) = v27;
    WORD2(__p.__r_.__value_.__r.__words[1]) = 2081;
    *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 6) = v28;
    __int16 v29 = (std::string *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::stopMonitoringAFenceNow(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, BOOL)", "%s\n", (const char *)v29);
    if (v29 != buf) {
      free(v29);
    }
  }
  uint64_t v11 = sub_10001A4C4(a1 + 240, (unsigned __int8 *)a2);
  if (a1 + 248 != v11)
  {
    sub_100F5FB34(a1 + 1312);
    sub_100DC7C50(a1, (const void **)(v11 + 32), (_DWORD *)(v11 + 280), 0, 0, a4);
    if (*(void *)(v11 + 264) == *(void *)(v11 + 256))
    {
      if (_os_feature_enabled_impl()) {
        goto LABEL_52;
      }
      uint64_t v12 = 64;
    }
    else
    {
      uint64_t v12 = 8;
    }
    if ((*(void *)(v11 + 192) & v12) != 0)
    {
      id v24 = (uint64_t *)sub_10001A4C4(a1 + 264, (unsigned __int8 *)a2);
      if ((uint64_t *)(a1 + 272) == v24)
      {
        sub_101A8EEC0();
        __break(1u);
        goto LABEL_74;
      }
      sub_1000F0A30((uint64_t **)(a1 + 264), v24);
      sub_100A0D2DC((uint64_t)(v24 + 4));
      operator delete(v24);
    }
LABEL_52:
    if (!*(void *)(a1 + 280)) {
      *(unsigned char *)(a1 + 731) = 0;
    }
    *(_WORD *)(v11 + 284) = 0;
    if (!a3) {
      goto LABEL_61;
    }
    uint64_t v25 = *(void *)(a1 + 1824);
    if (v25)
    {
      sub_100617268(v25, a2);
LABEL_61:
      sub_1001ABED0(v11 + 280);
      sub_1000F0A30((uint64_t **)(a1 + 240), (uint64_t *)v11);
      sub_100DCDE08(v11 + 32);
      operator delete((void *)v11);
      return;
    }
    if (qword_1024193C0 == -1)
    {
LABEL_58:
      int v26 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_ERROR))
      {
        LOWORD(buf[0].__r_.__value_.__l.__data_) = 0;
        _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_ERROR, "Fence: state stopMonitoringAFenceNow, before first unlock", (uint8_t *)buf, 2u);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F7C40);
        }
        LOWORD(__p.__r_.__value_.__l.__data_) = 0;
        double v30 = (std::string *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "void CLFenceMonitor::stopMonitoringAFenceNow(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, BOOL)", "%s\n", (const char *)v30);
        if (v30 != buf) {
          free(v30);
        }
      }
      goto LABEL_61;
    }
LABEL_74:
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    goto LABEL_58;
  }
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  long long v13 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
  {
    if (*(char *)(a2 + 23) >= 0) {
      size_t v14 = *(unsigned __int8 *)(a2 + 23);
    }
    else {
      size_t v14 = *(void *)(a2 + 8);
    }
    long long v15 = buf;
    sub_1001110E4((uint64_t)buf, v14 + 1);
    if ((buf[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      long long v15 = (std::string *)buf[0].__r_.__value_.__r.__words[0];
    }
    if (v14)
    {
      if (*(char *)(a2 + 23) >= 0) {
        std::string::size_type v16 = (const void *)a2;
      }
      else {
        std::string::size_type v16 = *(const void **)a2;
      }
      memmove(v15, v16, v14);
    }
    *(_WORD *)((char *)&v15->__r_.__value_.__l.__data_ + v14) = 47;
    int v17 = *(char *)(a2 + 47);
    if (v17 >= 0) {
      long long v18 = (const std::string::value_type *)(a2 + 24);
    }
    else {
      long long v18 = *(const std::string::value_type **)(a2 + 24);
    }
    if (v17 >= 0) {
      std::string::size_type v19 = *(unsigned __int8 *)(a2 + 47);
    }
    else {
      std::string::size_type v19 = *(void *)(a2 + 32);
    }
    id v20 = std::string::append(buf, v18, v19);
    long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    __p.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v21;
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(buf[0].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(buf[0].__r_.__value_.__l.__data_);
    }
    p_p = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    LODWORD(buf[0].__r_.__value_.__l.__data_) = 136380675;
    *(std::string::size_type *)((char *)buf[0].__r_.__value_.__r.__words + 4) = (std::string::size_type)p_p;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "Fence: stopMonitoringNow, no such fence, %{private}s", (uint8_t *)buf, 0xCu);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    sub_100918454((const void **)a2, &__p);
    char v23 = (std::string *)_os_log_send_and_compose_impl();
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::stopMonitoringAFenceNow(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, BOOL)", "%s\n", (const char *)v23);
    if (v23 != buf) {
      free(v23);
    }
  }
}

void sub_100DC7C2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DC7C50(uint64_t a1, const void **a2, _DWORD *a3, int a4, int a5, double a6)
{
  int v11 = sub_100DC8DBC(a1);
  char v12 = v11;
  int v13 = v11 & a4;
  size_t v14 = &qword_102419000;
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  long long v15 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    if (*((char *)a2 + 23) >= 0) {
      size_t v16 = *((unsigned __int8 *)a2 + 23);
    }
    else {
      size_t v16 = (size_t)a2[1];
    }
    int v17 = &v79;
    sub_1001110E4((uint64_t)&v79, v16 + 1);
    if ((v79.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v17 = (std::string *)v79.__r_.__value_.__r.__words[0];
    }
    if (v16)
    {
      if (*((char *)a2 + 23) >= 0) {
        long long v18 = a2;
      }
      else {
        long long v18 = *a2;
      }
      memmove(v17, v18, v16);
    }
    *(_WORD *)((char *)&v17->__r_.__value_.__l.__data_ + v16) = 47;
    int v19 = *((char *)a2 + 47);
    if (v19 >= 0) {
      id v20 = (const std::string::value_type *)(a2 + 3);
    }
    else {
      id v20 = (const std::string::value_type *)a2[3];
    }
    if (v19 >= 0) {
      std::string::size_type v21 = *((unsigned __int8 *)a2 + 47);
    }
    else {
      std::string::size_type v21 = (std::string::size_type)a2[4];
    }
    size_t v22 = std::string::append(&v79, v20, v21);
    long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
    v78.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v78.__r_.__value_.__l.__data_ = v23;
    v22->__r_.__value_.__l.__size_ = 0;
    v22->__r_.__value_.__r.__words[2] = 0;
    v22->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v79.__r_.__value_.__l.__data_);
    }
    int v24 = a5;
    if ((v78.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v25 = &v78;
    }
    else {
      uint64_t v25 = (std::string *)v78.__r_.__value_.__r.__words[0];
    }
    sub_10002931C(v13, &v79);
    int v26 = SHIBYTE(v79.__r_.__value_.__r.__words[2]);
    std::string::size_type v27 = v79.__r_.__value_.__r.__words[0];
    sub_10002931C(v12, &__p);
    std::string::size_type v28 = &v79;
    if (v26 < 0) {
      std::string::size_type v28 = (std::string *)v27;
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)std::string buf = 136381443;
    *(void *)int v83 = v25;
    *(_WORD *)&v83[8] = 2081;
    *(void *)int v84 = v28;
    *(_WORD *)&v84[8] = 2081;
    *(void *)long long v85 = p_p;
    *(_WORD *)&v85[8] = 1025;
    a5 = v24;
    int v86 = v24;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "adjustTechLevel, fence, %{private}s, newOptions, %{private}s, availableTech, %{private}s, statusChanged, %{private}d", buf, 0x26u);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    size_t v14 = &qword_102419000;
    if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v79.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v78.__r_.__value_.__l.__data_);
    }
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    sub_100918454(a2, &v78);
    int v54 = a5;
    if ((v78.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v55 = &v78;
    }
    else {
      uint64_t v55 = (std::string *)v78.__r_.__value_.__r.__words[0];
    }
    sub_10002931C(v13, &__p);
    int v56 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    std::string::size_type v57 = __p.__r_.__value_.__r.__words[0];
    sub_10002931C(v12, &v76);
    __int16 v58 = &__p;
    if (v56 < 0) {
      __int16 v58 = (std::string *)v57;
    }
    if ((v76.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v59 = &v76;
    }
    else {
      int v59 = (std::string *)v76.__r_.__value_.__r.__words[0];
    }
    LODWORD(v79.__r_.__value_.__l.__data_) = 136381443;
    *(std::string::size_type *)((char *)v79.__r_.__value_.__r.__words + 4) = (std::string::size_type)v55;
    WORD2(v79.__r_.__value_.__r.__words[1]) = 2081;
    *(std::string::size_type *)((char *)&v79.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v58;
    HIWORD(v79.__r_.__value_.__r.__words[2]) = 2081;
    *(void *)uint64_t v80 = v59;
    *(_WORD *)&v80[8] = 1025;
    int v81 = v54;
    BOOL v60 = (char *)_os_log_send_and_compose_impl();
    if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v76.__r_.__value_.__l.__data_);
    }
    size_t v14 = &qword_102419000;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v78.__r_.__value_.__l.__data_);
    }
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::adjustTechLevel(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, CLFenceMonitorLogic::FenceMonitoringStatus &, MonitoringTechOptions, BOOL)", "%s\n", v60);
    LOBYTE(a5) = v54;
    if (v60 != (char *)buf) {
      free(v60);
    }
  }
  int v30 = a3[2] & ~v13;
  if (v30)
  {
    if (v14[120] != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    __int16 v31 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      int v32 = a3[2];
      if (*((char *)a2 + 23) >= 0) {
        double v33 = a2;
      }
      else {
        double v33 = (void *)*a2;
      }
      if (*((char *)a2 + 47) >= 0) {
        __int16 v34 = a2 + 3;
      }
      else {
        __int16 v34 = (const void **)a2[3];
      }
      *(_DWORD *)std::string buf = 67175427;
      *(_DWORD *)int v83 = v30;
      *(_WORD *)&v83[4] = 1025;
      *(_DWORD *)&v83[6] = v32;
      *(_WORD *)int v84 = 2082;
      *(void *)&v84[2] = v33;
      *(_WORD *)long long v85 = 2081;
      *(void *)&v85[2] = v34;
      _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEBUG, "Stopping tech 0x%{private}x (active is 0x%{private}x) for %{public}s/%{private}s", buf, 0x22u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (v14[120] != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      int v67 = a3[2];
      if (*((char *)a2 + 23) >= 0) {
        uint64_t v68 = a2;
      }
      else {
        uint64_t v68 = (void *)*a2;
      }
      if (*((char *)a2 + 47) >= 0) {
        int v69 = a2 + 3;
      }
      else {
        int v69 = (const void **)a2[3];
      }
      LODWORD(v79.__r_.__value_.__l.__data_) = 67175427;
      HIDWORD(v79.__r_.__value_.__r.__words[0]) = v30;
      LOWORD(v79.__r_.__value_.__r.__words[1]) = 1025;
      *(_DWORD *)((char *)&v79.__r_.__value_.__r.__words[1] + 2) = v67;
      HIWORD(v79.__r_.__value_.__r.__words[1]) = 2082;
      v79.__r_.__value_.__r.__words[2] = (std::string::size_type)v68;
      *(_WORD *)uint64_t v80 = 2081;
      *(void *)&v80[2] = v69;
      std::string::size_type v70 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::adjustTechLevel(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, CLFenceMonitorLogic::FenceMonitoringStatus &, MonitoringTechOptions, BOOL)", "%s\n", v70);
      if (v70 != (char *)buf) {
        free(v70);
      }
    }
    if ((v30 & 4) != 0)
    {
      sub_100DDA968(a1 + 904, (unsigned __int8 *)a2, a6);
      sub_100F5F9BC(a1 + 1312);
    }
    if ((v30 & 0x10) != 0) {
      sub_100DC8FB0(a1, (unsigned __int8 *)a2);
    }
  }
  if ((a5 & ((v13 & 4) >> 2)) != 0) {
    unsigned int v35 = v13 & ~a3[2] | 4;
  }
  else {
    unsigned int v35 = v13 & ~a3[2];
  }
  if (v35)
  {
    if (v14[120] != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    __int16 v36 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      int v37 = a3[2];
      if (*((char *)a2 + 23) >= 0) {
        char v38 = a2;
      }
      else {
        char v38 = (void *)*a2;
      }
      if (*((char *)a2 + 47) >= 0) {
        uint64_t v39 = a2 + 3;
      }
      else {
        uint64_t v39 = (const void **)a2[3];
      }
      *(_DWORD *)std::string buf = 67175427;
      *(_DWORD *)int v83 = v35;
      *(_WORD *)&v83[4] = 1025;
      *(_DWORD *)&v83[6] = v37;
      *(_WORD *)int v84 = 2082;
      *(void *)&v84[2] = v38;
      *(_WORD *)long long v85 = 2081;
      *(void *)&v85[2] = v39;
      _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEBUG, "Starting tech 0x%{private}x (active is 0x%{private}x) for %{public}s/%{private}s", buf, 0x22u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (v14[120] != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      int v71 = a3[2];
      if (*((char *)a2 + 23) >= 0) {
        uint64_t v72 = a2;
      }
      else {
        uint64_t v72 = (void *)*a2;
      }
      if (*((char *)a2 + 47) >= 0) {
        __int16 v73 = a2 + 3;
      }
      else {
        __int16 v73 = (const void **)a2[3];
      }
      LODWORD(v79.__r_.__value_.__l.__data_) = 67175427;
      HIDWORD(v79.__r_.__value_.__r.__words[0]) = v35;
      LOWORD(v79.__r_.__value_.__r.__words[1]) = 1025;
      *(_DWORD *)((char *)&v79.__r_.__value_.__r.__words[1] + 2) = v71;
      HIWORD(v79.__r_.__value_.__r.__words[1]) = 2082;
      v79.__r_.__value_.__r.__words[2] = (std::string::size_type)v72;
      *(_WORD *)uint64_t v80 = 2081;
      *(void *)&v80[2] = v73;
      uint64_t v74 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::adjustTechLevel(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, CLFenceMonitorLogic::FenceMonitoringStatus &, MonitoringTechOptions, BOOL)", "%s\n", v74);
      if (v74 != (char *)buf) {
        free(v74);
      }
    }
    if ((v35 & 4) != 0)
    {
      sub_100DDA4BC(a1 + 904, (uint64_t *)a2, *a3 != 0, a6);
      sub_100F5F9BC(a1 + 1312);
    }
    if (v35 >= 0x10) {
      sub_100DC9064(a1, (unsigned __int8 *)a2);
    }
  }
  if (v14[120] != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  uint64_t v40 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    if (*((char *)a2 + 23) >= 0) {
      size_t v41 = *((unsigned __int8 *)a2 + 23);
    }
    else {
      size_t v41 = (size_t)a2[1];
    }
    id v42 = &v79;
    sub_1001110E4((uint64_t)&v79, v41 + 1);
    if ((v79.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      id v42 = (std::string *)v79.__r_.__value_.__r.__words[0];
    }
    if (v41)
    {
      if (*((char *)a2 + 23) >= 0) {
        __int16 v43 = a2;
      }
      else {
        __int16 v43 = *a2;
      }
      memmove(v42, v43, v41);
    }
    *(_WORD *)((char *)&v42->__r_.__value_.__l.__data_ + v41) = 47;
    int v44 = *((char *)a2 + 47);
    if (v44 >= 0) {
      int v45 = (const std::string::value_type *)(a2 + 3);
    }
    else {
      int v45 = (const std::string::value_type *)a2[3];
    }
    if (v44 >= 0) {
      std::string::size_type v46 = *((unsigned __int8 *)a2 + 47);
    }
    else {
      std::string::size_type v46 = (std::string::size_type)a2[4];
    }
    __int16 v47 = std::string::append(&v79, v45, v46);
    long long v48 = *(_OWORD *)&v47->__r_.__value_.__l.__data_;
    v78.__r_.__value_.__r.__words[2] = v47->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v78.__r_.__value_.__l.__data_ = v48;
    v47->__r_.__value_.__l.__size_ = 0;
    v47->__r_.__value_.__r.__words[2] = 0;
    v47->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v79.__r_.__value_.__l.__data_);
    }
    if ((v78.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      float64x2_t v49 = &v78;
    }
    else {
      float64x2_t v49 = (std::string *)v78.__r_.__value_.__r.__words[0];
    }
    sub_10002931C(v13, &v79);
    int v50 = SHIBYTE(v79.__r_.__value_.__r.__words[2]);
    std::string::size_type v51 = v79.__r_.__value_.__r.__words[0];
    sub_100BA8710(a3);
    double v52 = &v79;
    if (v50 < 0) {
      double v52 = (std::string *)v51;
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      double v53 = &__p;
    }
    else {
      double v53 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)std::string buf = 136381187;
    *(void *)int v83 = v49;
    *(_WORD *)&v83[8] = 2081;
    *(void *)int v84 = v52;
    *(_WORD *)&v84[8] = 2081;
    *(void *)long long v85 = v53;
    _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_DEBUG, "Fence: fence, %{private}s, newTech, %{private}s, status, %{private}s", buf, 0x20u);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v79.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v78.__r_.__value_.__l.__data_);
    }
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (v14[120] != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    sub_100918454(a2, &v78);
    if ((v78.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v61 = &v78;
    }
    else {
      uint64_t v61 = (std::string *)v78.__r_.__value_.__r.__words[0];
    }
    sub_10002931C(v13, &__p);
    int v62 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    std::string::size_type v63 = __p.__r_.__value_.__r.__words[0];
    sub_100BA8710(a3);
    uint64_t v64 = &__p;
    if (v62 < 0) {
      uint64_t v64 = (std::string *)v63;
    }
    if ((v76.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      double v65 = &v76;
    }
    else {
      double v65 = (std::string *)v76.__r_.__value_.__r.__words[0];
    }
    LODWORD(v79.__r_.__value_.__l.__data_) = 136381187;
    *(std::string::size_type *)((char *)v79.__r_.__value_.__r.__words + 4) = (std::string::size_type)v61;
    WORD2(v79.__r_.__value_.__r.__words[1]) = 2081;
    *(std::string::size_type *)((char *)&v79.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v64;
    HIWORD(v79.__r_.__value_.__r.__words[2]) = 2081;
    *(void *)uint64_t v80 = v65;
    uint64_t v66 = (char *)_os_log_send_and_compose_impl();
    if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v76.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v78.__r_.__value_.__l.__data_);
    }
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::adjustTechLevel(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, CLFenceMonitorLogic::FenceMonitoringStatus &, MonitoringTechOptions, BOOL)", "%s\n", v66);
    if (v66 != (char *)buf) {
      free(v66);
    }
  }
  a3[2] = v13;
}

void sub_100DC881C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DC8898(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  char v8 = sub_100DC8DBC(a1);
  char v9 = (*(unsigned char *)(a2 + 160) & 0x80) != 0 && a1 + 824 != sub_10001A4C4(a1 + 816, (unsigned __int8 *)a2);
  v47[0] = off_1022F7C90;
  v47[1] = a1;
  v47[3] = v47;
  v46[0] = off_1022F7D20;
  v46[1] = a1;
  v46[3] = v46;
  v45[0] = off_1022F7DA0;
  v45[3] = v45;
  uint64_t v10 = sub_100BA8B94(a2, a3, a4, v8, (uint64_t)v47, (uint64_t)v46, (uint64_t)v45, v9);
  sub_100DCE594(v45);
  sub_100DCE594(v46);
  sub_100DCE594(v47);
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  int v11 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    if (*(char *)(a2 + 23) >= 0) {
      size_t v12 = *(unsigned __int8 *)(a2 + 23);
    }
    else {
      size_t v12 = *(void *)(a2 + 8);
    }
    int v13 = &v33;
    sub_1001110E4((uint64_t)&v33, v12 + 1);
    if ((v33.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v13 = (std::string *)v33.__r_.__value_.__r.__words[0];
    }
    if (v12)
    {
      if (*(char *)(a2 + 23) >= 0) {
        size_t v14 = (const void *)a2;
      }
      else {
        size_t v14 = *(const void **)a2;
      }
      memmove(v13, v14, v12);
    }
    *(_WORD *)((char *)&v13->__r_.__value_.__l.__data_ + v12) = 47;
    int v15 = *(char *)(a2 + 47);
    if (v15 >= 0) {
      size_t v16 = (const std::string::value_type *)(a2 + 24);
    }
    else {
      size_t v16 = *(const std::string::value_type **)(a2 + 24);
    }
    if (v15 >= 0) {
      std::string::size_type v17 = *(unsigned __int8 *)(a2 + 47);
    }
    else {
      std::string::size_type v17 = *(void *)(a2 + 32);
    }
    long long v18 = std::string::append(&v33, v16, v17);
    long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    __p.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v19;
    v18->__r_.__value_.__l.__size_ = 0;
    v18->__r_.__value_.__r.__words[2] = 0;
    v18->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v33.__r_.__value_.__l.__data_);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    sub_10002931C(v10, &v33);
    BOOL v21 = 0;
    if ((v33.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      size_t v22 = &v33;
    }
    else {
      size_t v22 = (std::string *)v33.__r_.__value_.__r.__words[0];
    }
    double v23 = *(double *)(a2 + 96);
    if (v23 <= 400.0 && !*(unsigned char *)(a2 + 188) && *(_DWORD *)(a2 + 180) != 2) {
      BOOL v21 = *(void *)(a2 + 232) == *(void *)(a2 + 224) && (*(unsigned char *)(a2 + 160) & 0x20) == 0;
    }
    *(_DWORD *)std::string buf = 136381443;
    char v38 = p_p;
    __int16 v39 = 2081;
    uint64_t v40 = v22;
    __int16 v41 = 1025;
    BOOL v42 = v21;
    __int16 v43 = 1025;
    BOOL v44 = v23 >= 7000.0;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "fence, %{private}s, requiredTech, %{private}s, fine, %{private}d, large, %{private}d", buf, 0x22u);
    if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v33.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    sub_100918454((const void **)a2, &__p);
    int v25 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    int v26 = (std::string *)__p.__r_.__value_.__r.__words[0];
    std::string::size_type v27 = &v31;
    sub_10002931C(v10, &v31);
    if (v25 >= 0) {
      int v26 = &__p;
    }
    if ((v31.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type v27 = (std::string *)v31.__r_.__value_.__r.__words[0];
    }
    BOOL v28 = sub_100489D88(a2);
    BOOL v29 = *(double *)(a2 + 96) >= 7000.0;
    LODWORD(v33.__r_.__value_.__l.__data_) = 136381443;
    *(std::string::size_type *)((char *)v33.__r_.__value_.__r.__words + 4) = (std::string::size_type)v26;
    WORD2(v33.__r_.__value_.__r.__words[1]) = 2081;
    *(std::string::size_type *)((char *)&v33.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v27;
    HIWORD(v33.__r_.__value_.__r.__words[2]) = 1025;
    BOOL v34 = v28;
    __int16 v35 = 1025;
    BOOL v36 = v29;
    int v30 = (char *)_os_log_send_and_compose_impl();
    if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v31.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    sub_1004BA5E4("Generic", 1, 0, 2, "MonitoringTechOptions CLFenceMonitor::getRequiredTechLevel(const CLFenceManager_Type::Fence &, const CLFenceMonitorLogic::FenceMonitoringStatus &, const CLDaemonLocation &)", "%s\n", v30);
    if (v30 != (char *)buf) {
      free(v30);
    }
  }
  return v10;
}

void sub_100DC8D60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DC8DBC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 612))
  {
    sub_100103240();
    int v2 = sub_1001073D0();
    if ((~v2 & 0x10001) != 0) {
      int v3 = 8;
    }
    else {
      int v3 = 11;
    }
    if ((v2 & 2) != 0)
    {
      if ((*(unsigned int (**)(void))(**(void **)(a1 + 1768) + 16))(*(void *)(a1 + 1768))) {
        v3 |= 4u;
      }
    }
    return v3 | 0x10u;
  }
  else
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    int v5 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Fence: location services is disabled, no tech available", buf, 2u);
    }
    uint64_t result = sub_10013D1A0(115, 2);
    if (result)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      int v6 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "MonitoringTechOptions CLFenceMonitor::getAvailableTech()", "%s\n", v6);
      if (v6 != (char *)buf) {
        free(v6);
      }
      return 0;
    }
  }
  return result;
}

BOOL sub_100DC8FB0(uint64_t a1, unsigned __int8 *a2)
{
  int v3 = (void *)(a1 + 240);
  uint64_t v4 = sub_10001A4C4(a1 + 240, a2);
  int v5 = (void *)(a1 + 248);
  if (a1 + 248 != v4) {
    *(unsigned char *)(v4 + 285) = 0;
  }
  int v6 = (void *)*v3;
  if ((void *)*v3 == v5)
  {
    char v7 = 0;
  }
  else
  {
    char v7 = 0;
    do
    {
      BOOL v8 = *((unsigned char *)v6 + 285) != 0;
      char v9 = (void *)v6[1];
      if (v9)
      {
        do
        {
          uint64_t v10 = v9;
          char v9 = (void *)*v9;
        }
        while (v9);
      }
      else
      {
        do
        {
          uint64_t v10 = (void *)v6[2];
          BOOL v11 = *v10 == (void)v6;
          int v6 = v10;
        }
        while (!v11);
      }
      v7 |= v8;
      int v6 = v10;
    }
    while (v10 != v5);
  }
  BOOL v12 = v5 != (void *)v4;
  sub_100DCA6E8(a1, v7 & 1);
  return v12;
}

BOOL sub_100DC9064(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v3 = sub_10001A4C4(a1 + 240, a2);
  if (a1 + 248 != v3)
  {
    sub_100DCA6E8(a1, 1);
    *(unsigned char *)(v3 + 285) = 1;
  }
  return a1 + 248 != v3;
}

uint64_t sub_100DC90C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(_DWORD *)(a2 + 180) != 2) {
    return 1;
  }
  double v5 = *(double *)(a3 + 4);
  double v6 = *(double *)(a3 + 12);
  uint64_t result = (uint64_t)+[GEOLocationShifter isLocationShiftRequiredForCoordinate:](GEOLocationShifter, "isLocationShiftRequiredForCoordinate:", v5, v6);
  if (!result) {
    return result;
  }
  uint64_t v8 = 0;
  if (*(_DWORD *)(a3 + 132) != 2
    && (objc_msgSend(*(id *)(a1 + 1832), "shiftCoordinate:accuracy:shiftedCoordinate:shiftedAccuracy:", &v9, &v8, v5, v6, *(double *)(a3 + 20)) & 1) != 0)
  {
    *(_OWORD *)(a3 + 4) = v9;
    *(void *)(a3 + 20) = v8;
    *(_DWORD *)(a3 + 132) = 2;
    return 1;
  }
  return 0;
}

uint64_t sub_100DC9174(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_10001A4C4(a1 + 816, a2);
  if (a1 + 824 == v6) {
    return 0;
  }
  char v7 = (long long *)(v6 + 280);
  if (*(char *)(v6 + 303) < 0)
  {
    sub_1000DC48C(__dst, *(void **)(v6 + 280), *(void *)(v6 + 288));
  }
  else
  {
    *(_OWORD *)long long __dst = *v7;
    uint64_t v24 = *(void *)(v6 + 296);
  }
  sub_100340A70((char *)v19, v7, (long long *)a2);
  uint64_t v8 = sub_100DCF224(a1 + 792, (const void **)v19);
  uint64_t v9 = v8;
  if (a1 + 800 == v8)
  {
    if (v22 < 0) {
      operator delete(__p);
    }
    if (v20 < 0) {
      operator delete(v19[0]);
    }
    if (SHIBYTE(v24) < 0) {
      operator delete(__dst[0]);
    }
    return 0;
  }
  uint64_t v10 = v8 + 80;
  std::string::operator=((std::string *)a3, (const std::string *)(v8 + 80));
  std::string::operator=((std::string *)(a3 + 24), (const std::string *)(v9 + 104));
  std::string::operator=((std::string *)(a3 + 48), (const std::string *)(v9 + 128));
  long long v11 = *(_OWORD *)(v9 + 152);
  long long v12 = *(_OWORD *)(v9 + 168);
  long long v13 = *(_OWORD *)(v9 + 184);
  *(_OWORD *)(a3 + 120) = *(_OWORD *)(v9 + 200);
  *(_OWORD *)(a3 + 104) = v13;
  *(_OWORD *)(a3 + 88) = v12;
  *(_OWORD *)(a3 + 72) = v11;
  long long v14 = *(_OWORD *)(v9 + 216);
  long long v15 = *(_OWORD *)(v9 + 232);
  long long v16 = *(_OWORD *)(v9 + 248);
  *(void *)(a3 + 181) = *(void *)(v9 + 261);
  *(_OWORD *)(a3 + 168) = v16;
  *(_OWORD *)(a3 + 152) = v15;
  *(_OWORD *)(a3 + 136) = v14;
  std::string::operator=((std::string *)(a3 + 192), (const std::string *)(v9 + 272));
  std::string::size_type v17 = *(void **)(a3 + 216);
  *(void *)(a3 + 216) = *(id *)(v9 + 296);

  if (v10 != a3) {
    sub_10027C3B4((char *)(a3 + 224), *(char **)(v9 + 304), *(void *)(v9 + 312), (uint64_t)(*(void *)(v9 + 312) - *(void *)(v9 + 304)) >> 4);
  }
  if (v22 < 0) {
    operator delete(__p);
  }
  if (v20 < 0) {
    operator delete(v19[0]);
  }
  if (SHIBYTE(v24) < 0) {
    operator delete(__dst[0]);
  }
  return 1;
}

void sub_100DC932C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

NSDictionary *sub_100DC9358(uint64_t a1)
{
  uint64_t v1 = sub_100AC2480((double *)(*(void *)(a1 + 32) + 48));
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  int v2 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::string buf = 138412290;
    uint64_t v6 = v1;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "converging state, submitting metric, %@", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    uint64_t v4 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::evaluateConvergingState(const CFAbsoluteTime)_block_invoke", "%s\n", v4);
    if (v4 != (char *)buf) {
      free(v4);
    }
  }
  return v1;
}

uint64_t sub_100DC9514(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(result + 32) = *(void *)(a2 + 32);
  *(void *)(result + 40) = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_100DC9530(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 40);
  if (v1) {
    sub_1000DB0A0(v1);
  }
}

void sub_100DC9540(uint64_t a1, int a2, double a3, double a4)
{
  int v25 = a2;
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  char v7 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    sub_100777704(&v25, __p);
    uint64_t v8 = v31 >= 0 ? __p : *(unsigned char **)__p;
    LODWORD(buf) = 136380675;
    *(void *)((char *)&buf + 4) = v8;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "converging state change, setting timer for proximity state, %{private}s", (uint8_t *)&buf, 0xCu);
    if (v31 < 0) {
      operator delete(*(void **)__p);
    }
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    sub_100777704(&v25, &buf);
    if (v27 >= 0) {
      p_long long buf = &buf;
    }
    else {
      p_long long buf = (long long *)buf;
    }
    int v28 = 136380675;
    double v29 = *(double *)&p_buf;
    char v22 = (char *)_os_log_send_and_compose_impl();
    if (v27 < 0) {
      operator delete((void *)buf);
    }
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::setNextConvergingStateChangeTimer(CFAbsoluteTime, CLFenceProximityState, double)", "%s\n", v22);
    if (v22 != __p) {
      free(v22);
    }
  }
  sub_100182574((void *)(a1 + 48), &buf);
  uint64_t v9 = sub_10016363C();
  uint64_t v10 = sub_10016363C();
  switch(v25)
  {
    case 0:
    case 1:
    case 4:
      (*(void (**)(void))(**(void **)(a1 + 1768) + 168))(*(void *)(a1 + 1768));
      goto LABEL_34;
    case 2:
      double v15 = *((double *)v10 + 1);
      if (v15 >= a4 / 15.0) {
        double v15 = a4 / 15.0;
      }
      if (a4 / 15.0 >= *((double *)v9 + 2)) {
        v11.n128_f64[0] = v15;
      }
      else {
        v11.n128_u64[0] = *((void *)v9 + 2);
      }
      (*(void (**)(void, __n128))(**(void **)(a1 + 1768) + 160))(*(void *)(a1 + 1768), v11);
      goto LABEL_34;
    case 3:
      if ((void)buf && (double v12 = sub_1009C5230(buf, a3), v12 < *((double *)sub_10016363C() + 9)))
      {
        if ((*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 176))(*(void *)(a1 + 1768)))
        {
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F7C40);
          }
          long long v13 = qword_1024193C8;
          if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
          {
            *(_WORD *)std::string __p = 0;
            _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "converging state, GNSS already initialized", __p, 2u);
          }
          if (sub_10013D1A0(115, 2))
          {
            bzero(__p, 0x65CuLL);
            if (qword_1024193C0 != -1) {
              dispatch_once(&qword_1024193C0, &stru_1022F7C40);
            }
            LOWORD(v28) = 0;
            long long v14 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::setNextConvergingStateChangeTimer(CFAbsoluteTime, CLFenceProximityState, double)", "%s\n", v14);
LABEL_55:
            if (v14 != __p) {
              free(v14);
            }
          }
        }
        else
        {
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F7C40);
          }
          long long v18 = qword_1024193C8;
          if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)std::string __p = 0;
            _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "converging state, GNSS not yet initialized, initializing", __p, 2u);
          }
          if (sub_10013D1A0(115, 2))
          {
            bzero(__p, 0x65CuLL);
            if (qword_1024193C0 != -1) {
              dispatch_once(&qword_1024193C0, &stru_1022F7C40);
            }
            LOWORD(v28) = 0;
            uint64_t v24 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::setNextConvergingStateChangeTimer(CFAbsoluteTime, CLFenceProximityState, double)", "%s\n", v24);
            if (v24 != __p) {
              free(v24);
            }
          }
          double v19 = *((double *)sub_10016363C() + 9);
          double v20 = sub_1009C5230(buf, a3);
          (*(void (**)(void, double))(**(void **)(a1 + 1768) + 160))(*(void *)(a1 + 1768), v19 - v20);
          (*(void (**)(void))(**(void **)(a1 + 1768) + 184))(*(void *)(a1 + 1768));
          sub_1009C5060(buf, a3);
        }
      }
      else
      {
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F7C40);
        }
        long long v16 = qword_1024193C8;
        if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
        {
          double v17 = sub_1009C5230(buf, a3);
          *(_DWORD *)std::string __p = 134217984;
          *(double *)&__p[4] = v17;
          _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "converging state, not starting GNSS, exceeded max duration, %f", __p, 0xCu);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(__p, 0x65CuLL);
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F7C40);
          }
          double v23 = sub_1009C5230(buf, a3);
          int v28 = 134217984;
          double v29 = v23;
          long long v14 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::setNextConvergingStateChangeTimer(CFAbsoluteTime, CLFenceProximityState, double)", "%s\n", v14);
          goto LABEL_55;
        }
      }
LABEL_34:
      if (*((void *)&buf + 1)) {
        sub_1000DB0A0(*((std::__shared_weak_count **)&buf + 1));
      }
      return;
    default:
      goto LABEL_34;
  }
}

void sub_100DC9C88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1000DB0A0(a12);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_100DC9CD4(uint64_t a1, long long *a2, long long *a3)
{
  sub_100340A70((char *)v6, a2, a3);
  uint64_t v4 = sub_100DCF224(a1 + 792, (const void **)v6);
  if (v9 < 0) {
    operator delete(__p);
  }
  if (v7 < 0) {
    operator delete(v6[0]);
  }
  return a1 + 800 != v4;
}

void sub_100DC9D40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100DC9D54(uint64_t a1, uint64_t a2, double a3, double a4)
{
  long long v40 = xmmword_101D82F18;
  long long v41 = xmmword_101D82F28;
  memset(v42, 0, sizeof(v42));
  long long v36 = xmmword_101D82ED8;
  long long v37 = xmmword_101D82EE8;
  long long v38 = xmmword_101D82EF8;
  long long v39 = xmmword_101D82F08;
  long long v34 = xmmword_101D82EB8;
  long long v35 = xmmword_101D82EC8;
  uint64_t v8 = (uint64_t **)(a1 + 1904);
  if (!*(void *)(a1 + 1920)) {
    *(double *)(a1 + 1936) = a3;
  }
  *(void *)&long long buf = a2;
  char v9 = sub_100DCECC4((uint64_t **)(a1 + 1904), (unsigned __int8 *)a2, (uint64_t)&unk_101D0B290, (long long **)&buf);
  *((double *)v9 + 35) = a4;
  *((double *)v9 + 36) = a3;
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  uint64_t v10 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v11 = a2 + 24;
    if (*(char *)(a2 + 47) < 0) {
      uint64_t v11 = *(void *)(a2 + 24);
    }
    LODWORD(buf) = 136380675;
    *(void *)((char *)&buf + 4) = v11;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "Fence: MiLo, handleFenceMiLoHomeLoiExitMismatchMetrics, fence, %{private}s", (uint8_t *)&buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    int v25 = *(long long **)(a2 + 24);
    uint64_t v24 = a2 + 24;
    double v23 = v25;
    if (*(char *)(v24 + 23) >= 0) {
      double v23 = (long long *)v24;
    }
    LODWORD(v43[0]) = 136380675;
    *(long long **)((char *)v43 + 4) = v23;
    int v26 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::handleFenceMiLoHomeLoiExitMismatchMetrics(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, const double)", "%s\n", v26);
    if (v26 != (char *)&buf) {
      free(v26);
    }
  }
  if (vabdd_f64(a3, *(double *)(a1 + 1936)) > *((double *)sub_100044B44() + 51))
  {
    *(double *)(a1 + 1936) = a3;
    uint64_t v45 = 0;
    *((void *)&buf + 1) = 0;
    *(void *)&long long buf = (char *)&buf + 8;
    double v12 = *(uint64_t **)(a1 + 1904);
    if (v12 != (uint64_t *)(a1 + 1912))
    {
      do
      {
        uint64_t v14 = v12[35];
        double v13 = *((double *)v12 + 36);
        if (vabdd_f64(a3, v13) <= *((double *)sub_100044B44() + 51))
        {
          v43[0] = (long long *)(v12 + 4);
          long long v18 = sub_100DCECC4((uint64_t **)&buf, (unsigned __int8 *)v12 + 32, (uint64_t)&unk_101D0B290, v43);
          v18[35] = v14;
          *((double *)v18 + 36) = v13;
          double v19 = *(double *)(a1 + 1936);
          if (v13 < v19) {
            double v19 = v13;
          }
          *(double *)(a1 + 1936) = v19;
          long long v16 = sub_1000F0A30(v8, v12);
          sub_100DCE1D0((uint64_t)(v12 + 4));
          operator delete(v12);
        }
        else
        {
          double v15 = (uint64_t *)v12[1];
          if (v15)
          {
            do
            {
              long long v16 = v15;
              double v15 = (uint64_t *)*v15;
            }
            while (v15);
          }
          else
          {
            do
            {
              long long v16 = (uint64_t *)v12[2];
              BOOL v17 = *v16 == (void)v12;
              double v12 = v16;
            }
            while (!v17);
          }
        }
        double v12 = v16;
      }
      while (v16 != (uint64_t *)(a1 + 1912));
    }
    v32[6] = v40;
    v32[7] = v41;
    v33[0] = *(_OWORD *)v42;
    *(_OWORD *)((char *)v33 + 12) = *(_OWORD *)&v42[12];
    v32[2] = v36;
    v32[3] = v37;
    v32[4] = v38;
    v32[5] = v39;
    v32[0] = v34;
    v32[1] = v35;
    sub_100DCA430(a1, (uint64_t)v32, 0, 0.0);
    if (v8 != (uint64_t **)&buf) {
      sub_100DCEE3C(v8, (void *)buf, (void *)&buf + 1);
    }
    sub_100DCE174((uint64_t)&buf, *((void **)&buf + 1));
  }
  if (*(void *)(a1 + 1920)
    && ((*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 400))(*(void *)(a1 + 1768)) & 1) == 0
    && *(unsigned char *)(a1 + 1873)
    && !sub_100044B44()[416])
  {
    double v20 = *(double *)(a1 + 1928);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    double v21 = vabdd_f64(a3, v20);
    char v22 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      LODWORD(buf) = 134283521;
      *(double *)((char *)&buf + 4) = v21;
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEBUG, "Fence: MiLo, timeSinceLastMiLoGpsRequested, %{private}.1f", (uint8_t *)&buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      LODWORD(v43[0]) = 134283521;
      *(long long **)((char *)v43 + 4) = *(long long **)&v21;
      char v27 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::handleFenceMiLoHomeLoiExitMismatchMetrics(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, const double)", "%s\n", v27);
      if (v27 != (char *)&buf) {
        free(v27);
      }
    }
    if (v21 >= 604800.0)
    {
      if (((*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 400))(*(void *)(a1 + 1768)) & 1) == 0)
      {
        if ((*(unsigned int (**)(void))(**(void **)(a1 + 1768) + 464))(*(void *)(a1 + 1768)))
        {
          (*(void (**)(void, void *))(**(void **)(a1 + 1768) + 256))(*(void *)(a1 + 1768), &unk_101D8E2F8);
        }
        else
        {
          v28[6] = v40;
          v28[7] = v41;
          v29[0] = *(_OWORD *)v42;
          *(_OWORD *)((char *)v29 + 12) = *(_OWORD *)&v42[12];
          v28[2] = v36;
          v28[3] = v37;
          v28[4] = v38;
          v28[5] = v39;
          v28[0] = v34;
          v28[1] = v35;
          sub_100DCA430(a1, (uint64_t)v28, 0, 0.0);
        }
      }
    }
    else
    {
      v30[6] = v40;
      v30[7] = v41;
      v31[0] = *(_OWORD *)v42;
      *(_OWORD *)((char *)v31 + 12) = *(_OWORD *)&v42[12];
      v30[2] = v36;
      v30[3] = v37;
      v30[4] = v38;
      v30[5] = v39;
      v30[0] = v34;
      v30[1] = v35;
      sub_100DCA430(a1, (uint64_t)v30, 0, 0.0);
    }
  }
}

void sub_100DCA408(_Unwind_Exception *a1)
{
}

void sub_100DCA430(uint64_t a1, uint64_t a2, int a3, double a4)
{
  if (*(void *)(a1 + 1920))
  {
    uint64_t v23 = a1 + 1904;
    (*(void (**)(void))(**(void **)(a1 + 1768) + 272))(*(void *)(a1 + 1768));
    uint64_t v8 = *(double **)(a1 + 1904);
    char v9 = (double *)(a1 + 1912);
    if (v8 != (double *)(a1 + 1912))
    {
      do
      {
        double v10 = v8[35];
        double v11 = v8[36];
        long long v25 = 0u;
        uint64_t v26 = 0;
        memset(v24, 0, sizeof(v24));
        int v27 = -1;
        HIDWORD(v25) = (v10 * 100.0);
        unsigned int v12 = (round(sub_100044A78((uint64_t)(v8 + 4)) / 10.0) * 10.0);
        if (v12 >= 0xC8) {
          unsigned int v12 = 200;
        }
        HIDWORD(v26) = v12;
        if (a3)
        {
          if (*(double *)(a2 + 20) <= 0.0)
          {
            int v19 = 1;
          }
          else
          {
            double v13 = sub_1001ABE80((double *)(a2 + 4), (uint64_t)(v8 + 4), (double *)(a1 + 1776));
            double v14 = sub_100044A78((uint64_t)(v8 + 4));
            double v15 = v13 - v14;
            int v16 = (int)(round((v13 - v14) / 10.0) * 10.0);
            if (v16 <= -100) {
              int v16 = -100;
            }
            if (v16 >= 100) {
              int v16 = 100;
            }
            double v17 = *(double *)(a2 + 20);
            int v18 = (int)(round(v17 / 10.0) * 10.0);
            if (v18 >= 100) {
              int v18 = 100;
            }
            LODWORD(v26) = v16;
            int v27 = v18;
            if (vabdd_f64(v13, v14) >= v17 && vabdd_f64(a4, v11) <= *((double *)sub_100044B44() + 51))
            {
              if (v15 <= 0.0) {
                int v19 = 3;
              }
              else {
                int v19 = 4;
              }
            }
            else
            {
              int v19 = 2;
            }
          }
        }
        else
        {
          int v19 = 0;
        }
        DWORD2(v25) = v19;
        sub_100F5FDC8(v24);
        double v20 = (double *)*((void *)v8 + 1);
        if (v20)
        {
          do
          {
            double v21 = v20;
            double v20 = *(double **)v20;
          }
          while (v20);
        }
        else
        {
          do
          {
            double v21 = (double *)*((void *)v8 + 2);
            BOOL v22 = *(void *)v21 == (void)v8;
            uint64_t v8 = v21;
          }
          while (!v22);
        }
        uint64_t v8 = v21;
      }
      while (v21 != v9);
    }
    sub_100DCE174(v23, *(void **)(a1 + 1912));
    *(void *)(a1 + 1904) = v9;
    *(_OWORD *)char v9 = 0u;
  }
}

uint64_t sub_100DCA67C(uint64_t result, double a2)
{
  *(double *)(result + 1928) = a2;
  return result;
}

void sub_100DCA684(uint64_t a1)
{
  v1[6] = xmmword_101D82F18;
  v1[7] = xmmword_101D82F28;
  memset(&v1[8], 0, 28);
  v1[2] = xmmword_101D82ED8;
  v1[3] = xmmword_101D82EE8;
  v1[4] = xmmword_101D82EF8;
  v1[5] = xmmword_101D82F08;
  v1[0] = xmmword_101D82EB8;
  v1[1] = xmmword_101D82EC8;
  sub_100DCA430(a1, (uint64_t)v1, 1, 0.0);
}

void sub_100DCA6E8(uint64_t a1, int a2)
{
  if ((*(uint64_t (**)(void))(**(void **)(a1 + 1768) + 352))(*(void *)(a1 + 1768)))
  {
    if (*(unsigned __int8 *)(a1 + 784) != a2)
    {
      *(unsigned char *)(a1 + 784) = a2;
      if (a2)
      {
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F7C40);
        }
        uint64_t v4 = qword_1024193C8;
        if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Fence: start monitoring scenario trigger settled", buf, 2u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F7C40);
          }
          uint64_t v8 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::monitorSettled(BOOL)", "%s\n", v8);
          if (v8 != (char *)buf) {
            free(v8);
          }
        }
        (*(void (**)(void))(**(void **)(a1 + 1768) + 360))(*(void *)(a1 + 1768));
        (*(void (**)(void))(**(void **)(a1 + 1768) + 376))();
        *(_DWORD *)(a1 + 604) = 1;
      }
      else
      {
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F7C40);
        }
        char v7 = qword_1024193C8;
        if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Fence: stop monitoring scenario trigger settled", buf, 2u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F7C40);
          }
          char v9 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::monitorSettled(BOOL)", "%s\n", v9);
          if (v9 != (char *)buf) {
            free(v9);
          }
        }
        (*(void (**)(void))(**(void **)(a1 + 1768) + 368))(*(void *)(a1 + 1768));
        (*(void (**)(void))(**(void **)(a1 + 1768) + 328))();
        *(_DWORD *)(a1 + 604) = 0;
      }
    }
  }
  else
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    double v5 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Fence: CLRoutineMonitor is not supported", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      uint64_t v6 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::monitorSettled(BOOL)", "%s\n", v6);
      if (v6 != (char *)buf) {
        free(v6);
      }
    }
  }
}

BOOL sub_100DCAC04(uint64_t a1)
{
  return *(void *)(a1 + 832) != 0;
}

void sub_100DCAC14(uint64_t **a1, uint64_t a2, unsigned __int8 *a3, double a4, int a5)
{
  if (a5) {
    sub_100DCAC20(a1, a2, a3, a4);
  }
  else {
    sub_100DCB254(a1, a2, a3, 0, a4);
  }
}

void sub_100DCAC20(uint64_t **a1, uint64_t a2, unsigned __int8 *a3, double a4)
{
  *(void *)long long buf = a3;
  uint64_t v8 = sub_100DCF2B4(a1 + 102, a3, (uint64_t)&unk_101D0B290, (long long **)buf);
  std::string::operator=((std::string *)(v8 + 35), (const std::string *)a2);
  if (!sub_100DC9CD4((uint64_t)a1, (long long *)a2, (long long *)a3))
  {
    if ((char)a3[23] < 0)
    {
      sub_1000DC48C(__dst, *(void **)a3, *((void *)a3 + 1));
    }
    else
    {
      *(_OWORD *)long long __dst = *(_OWORD *)a3;
      uint64_t v36 = *((void *)a3 + 2);
    }
    if (*(char *)(a2 + 23) >= 0) {
      char v9 = (char *)a2;
    }
    else {
      char v9 = *(char **)a2;
    }
    sub_100134750(&v33, v9);
    if ((char)a3[71] < 0)
    {
      sub_1000DC48C(v31, *((void **)a3 + 6), *((void *)a3 + 7));
    }
    else
    {
      *(_OWORD *)char v31 = *((_OWORD *)a3 + 3);
      uint64_t v32 = *((void *)a3 + 8);
    }
    sub_100044B44();
    sub_100134750(&__p, "");
    sub_100C8C570(&__str);
    if (v30 < 0) {
      operator delete(__p);
    }
    if (SHIBYTE(v32) < 0) {
      operator delete(v31[0]);
    }
    if (v34 < 0) {
      operator delete(v33);
    }
    if (SHIBYTE(v36) < 0) {
      operator delete(__dst[0]);
    }
    *((void *)&v45 + 1) = 3;
    *(_DWORD *)&v46[16] = sub_100110EA0((uint64_t)&__str);
    *(void *)std::string::size_type v46 = *((void *)a3 + 21);
    sub_100340A70((char *)v25, (long long *)&v38, (long long *)&__str);
    *(void *)long long buf = v25;
    double v10 = sub_100DCF430(a1 + 99, (const void **)v25, (uint64_t)&unk_101D0B290, (long long **)buf);
    std::string::operator=((std::string *)(v10 + 10), &__str);
    std::string::operator=((std::string *)(v10 + 13), &v38);
    std::string::operator=((std::string *)(v10 + 16), &v39);
    *(_OWORD *)(v10 + 27) = v44;
    *(_OWORD *)(v10 + 29) = v45;
    *(_OWORD *)(v10 + 31) = *(_OWORD *)v46;
    *(_OWORD *)(v10 + 19) = v40;
    *(_OWORD *)(v10 + 21) = v41;
    *(_OWORD *)(v10 + 23) = v42;
    *(_OWORD *)(v10 + 25) = v43;
    *(uint64_t *)((char *)v10 + 261) = *(void *)&v46[13];
    std::string::operator=((std::string *)(v10 + 34), &v47);
    double v11 = (void *)v10[37];
    v10[37] = (uint64_t)v48;

    if (v10 + 10 != (uint64_t *)&__str) {
      sub_10027C3B4((char *)v10 + 304, (char *)v49, (uint64_t)v50, (v50 - (unsigned char *)v49) >> 4);
    }
    sub_1001ABED0((uint64_t)v24);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    unsigned int v12 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      if ((v38.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        double v13 = &v38;
      }
      else {
        double v13 = (std::string *)v38.__r_.__value_.__r.__words[0];
      }
      if ((a3[23] & 0x80u) == 0) {
        double v14 = (uint64_t *)a3;
      }
      else {
        double v14 = *(uint64_t **)a3;
      }
      double v15 = (uint64_t *)(a3 + 24);
      if ((a3[47] & 0x80u) != 0) {
        double v15 = (uint64_t *)*((void *)a3 + 3);
      }
      *(_DWORD *)long long buf = 136381187;
      *(void *)&uint8_t buf[4] = v13;
      __int16 v58 = 2081;
      int v59 = v14;
      __int16 v60 = 2081;
      uint64_t v61 = v15;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "#significantRegion: helper fence start, %{private}s for [%{private}s/%{private}s", buf, 0x20u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      if ((v38.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v16 = &v38;
      }
      else {
        int v16 = (std::string *)v38.__r_.__value_.__r.__words[0];
      }
      if ((a3[23] & 0x80u) == 0) {
        double v17 = (uint64_t *)a3;
      }
      else {
        double v17 = *(uint64_t **)a3;
      }
      int v18 = (char)a3[47];
      double v21 = (uint64_t *)*((void *)a3 + 3);
      double v20 = (uint64_t *)(a3 + 24);
      int v19 = v21;
      if (v18 >= 0) {
        BOOL v22 = v20;
      }
      else {
        BOOL v22 = v19;
      }
      int v51 = 136381187;
      double v52 = v16;
      __int16 v53 = 2081;
      int v54 = v17;
      __int16 v55 = 2081;
      int v56 = v22;
      uint64_t v23 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::startMonitoringLoiFence(const CFAbsoluteTime, const CLLocationOfInterestLite &, const CLFenceManager_Type::Fence &)", "%s\n", v23);
      if (v23 != buf) {
        free(v23);
      }
    }
    sub_100DC521C((uint64_t)a1, (uint64_t)&__str, (uint64_t)v24, a4);
    (*(void (**)(uint64_t *))(*a1[221] + 432))(a1[221]);
    if (v28 < 0) {
      operator delete(v27);
    }
    if (v26 < 0) {
      operator delete(v25[0]);
    }
    if (v49)
    {
      int v50 = v49;
      operator delete(v49);
    }

    if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v47.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v39.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v38.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
  }
}

void sub_100DCB1AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,void *__p,uint64_t a41,int a42,__int16 a43,char a44,char a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,char a52)
{
}

void sub_100DCB254(uint64_t **a1, uint64_t a2, unsigned char *a3, int a4, double a5)
{
  char v5 = a4;
  if ((a3[160] & 0x80) == 0)
  {
    if (*(double *)(a2 + 40) <= 0.0)
    {
      if (!a4) {
        return;
      }
      goto LABEL_39;
    }
    goto LABEL_26;
  }
  uint64_t v10 = sub_10001A4C4((uint64_t)(a1 + 102), a3);
  double v11 = a1 + 103;
  if (*(double *)(a2 + 40) > 0.0)
  {
    if (v11 == (uint64_t **)v10)
    {
LABEL_26:
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      uint64_t v23 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
      {
        if ((char)a3[23] >= 0) {
          double v24 = *(double *)&a3;
        }
        else {
          double v24 = *(double *)a3;
        }
        if (*(char *)(a2 + 23) >= 0) {
          uint64_t v25 = a2;
        }
        else {
          uint64_t v25 = *(void *)a2;
        }
        *(_DWORD *)long long buf = 136380931;
        double v65 = v24;
        __int16 v66 = 2081;
        uint64_t v67 = v25;
        _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "#significantRegion: helper fence start after found, [%{private}s]/%{private}s", buf, 0x16u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F7C40);
        }
        if ((char)a3[23] >= 0) {
          std::string::size_type v57 = a3;
        }
        else {
          std::string::size_type v57 = *(unsigned char **)a3;
        }
        if (*(char *)(a2 + 23) >= 0) {
          uint64_t v58 = a2;
        }
        else {
          uint64_t v58 = *(void *)a2;
        }
        *(_DWORD *)uint64_t v72 = 136380931;
        *(void *)&v72[4] = v57;
        __int16 v73 = 2081;
        uint64_t v74 = v58;
        int v59 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::refreshLoiModelForFence(const CFAbsoluteTime, const CLLocationOfInterestLite &, const CLFenceManager_Type::Fence &, const BOOL)", "%s\n", v59);
        if (v59 != (char *)buf) {
          free(v59);
        }
      }
      sub_100DCAC20(a1, a2, a3, a5);
      return;
    }
    sub_100110970(v72);
    if ((sub_100DC9174((uint64_t)a1, a3, (uint64_t)v72) & 1) == 0)
    {
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      std::string v39 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_ERROR))
      {
        if ((char)a3[23] >= 0) {
          double v40 = *(double *)&a3;
        }
        else {
          double v40 = *(double *)a3;
        }
        if ((char)a3[47] >= 0) {
          uint64_t v41 = (uint64_t)(a3 + 24);
        }
        else {
          uint64_t v41 = *((void *)a3 + 3);
        }
        *(_DWORD *)long long buf = 136380931;
        double v65 = v40;
        __int16 v66 = 2081;
        uint64_t v67 = v41;
        _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_ERROR, "#significantRegion: helper fence not found [%{private}s]/%{private}s", buf, 0x16u);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F7C40);
        }
        long long v42 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "void CLFenceMonitor::refreshLoiModelForFence(const CFAbsoluteTime, const CLLocationOfInterestLite &, const CLFenceManager_Type::Fence &, const BOOL)", "%s\n", v42);
        if (v42 != (char *)buf) {
          free(v42);
        }
      }
      goto LABEL_127;
    }
    if ((v78 & 0x80u) == 0) {
      size_t v12 = v78;
    }
    else {
      size_t v12 = __n;
    }
    uint64_t v13 = *(unsigned __int8 *)(a2 + 23);
    int v14 = (char)v13;
    if ((v13 & 0x80u) != 0) {
      uint64_t v13 = *(void *)(a2 + 8);
    }
    if (v12 == v13)
    {
      if (v14 >= 0) {
        double v15 = (unsigned __int8 *)a2;
      }
      else {
        double v15 = *(unsigned __int8 **)a2;
      }
      if ((v78 & 0x80) != 0)
      {
        BOOL v21 = memcmp(__s1, v15, __n) != 0;
      }
      else if (v78)
      {
        uint64_t v16 = v78 - 1;
        p_s1 = &__s1;
        do
        {
          int v19 = *(unsigned __int8 *)p_s1;
          p_s1 = (void **)((char *)p_s1 + 1);
          int v18 = v19;
          int v20 = *v15++;
          BOOL v21 = v18 != v20;
        }
        while (v18 == v20 && v16-- != 0);
      }
      else
      {
        BOOL v21 = 0;
      }
    }
    else
    {
      BOOL v21 = 1;
    }
    double v43 = *((double *)sub_100044B44() + 4);
    double v44 = *(double *)(a2 + 40);
    double v45 = v83;
    double v46 = sub_1000F1648((double *)a1 + 222, v81, v82, *(double *)(a2 + 24), *(double *)(a2 + 32), 0.0);
    double v47 = v43 * v44;
    double v48 = v45 - v43 * v44;
    if (v21)
    {
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      float64x2_t v49 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
      {
        if ((v78 & 0x80u) == 0) {
          double v50 = COERCE_DOUBLE(&__s1);
        }
        else {
          double v50 = *(double *)&__s1;
        }
        if (*(char *)(a2 + 23) >= 0) {
          uint64_t v51 = a2;
        }
        else {
          uint64_t v51 = *(void *)a2;
        }
        *(_DWORD *)long long buf = 136381443;
        double v65 = v50;
        __int16 v66 = 2081;
        uint64_t v67 = v51;
        __int16 v68 = 2049;
        double v69 = v48;
        __int16 v70 = 2049;
        double v71 = v46;
        _os_log_impl((void *)&_mh_execute_header, v49, OS_LOG_TYPE_DEFAULT, "#significantRegion: helper fence restart due to changed identifier, %{private}s => %{private}s, dRadius, %{private}.1lf, dCenter, %{private}.1lf", buf, 0x2Au);
      }
      if (!sub_10013D1A0(115, 2)) {
        goto LABEL_126;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 == -1) {
        goto LABEL_159;
      }
    }
    else
    {
      double v52 = sub_100044AD4((uint64_t)v72);
      if (v47 <= v52 + *((double *)sub_100044B44() + 25) || fabs(v48) <= *((double *)sub_100044B44() + 25))
      {
        if (v46 <= *((double *)sub_100044B44() + 26))
        {
LABEL_127:
          if (__p)
          {
            int v88 = __p;
            operator delete(__p);
          }

          if (v85 < 0) {
            operator delete(v84);
          }
          if (v80 < 0) {
            operator delete(v79);
          }
          if ((char)v78 < 0) {
            operator delete(__s1);
          }
          if (v75 < 0) {
            operator delete(*(void **)v72);
          }
          return;
        }
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F7C40);
        }
        __int16 v55 = qword_1024193C8;
        if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
        {
          if ((v78 & 0x80u) == 0) {
            int v56 = &__s1;
          }
          else {
            int v56 = __s1;
          }
          *(_DWORD *)long long buf = 134283779;
          double v65 = v46;
          __int16 v66 = 2081;
          uint64_t v67 = (uint64_t)v56;
          _os_log_impl((void *)&_mh_execute_header, v55, OS_LOG_TYPE_DEFAULT, "#significantRegion: helper fence restart due to changed center, %{private}.1lf, %{private}s", buf, 0x16u);
        }
        if (!sub_10013D1A0(115, 2))
        {
LABEL_126:
          sub_100DC7194(a1, a3, a5);
          sub_100DCAC20(a1, a2, a3, a5);
          goto LABEL_127;
        }
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 == -1)
        {
LABEL_159:
          std::string::size_type v63 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::refreshLoiModelForFence(const CFAbsoluteTime, const CLLocationOfInterestLite &, const CLFenceManager_Type::Fence &, const BOOL)", "%s\n", v63);
          if (v63 != (char *)buf) {
            free(v63);
          }
          goto LABEL_126;
        }
      }
      else
      {
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F7C40);
        }
        __int16 v53 = qword_1024193C8;
        if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
        {
          if ((v78 & 0x80u) == 0) {
            int v54 = &__s1;
          }
          else {
            int v54 = __s1;
          }
          *(_DWORD *)long long buf = 134283779;
          double v65 = v48;
          __int16 v66 = 2081;
          uint64_t v67 = (uint64_t)v54;
          _os_log_impl((void *)&_mh_execute_header, v53, OS_LOG_TYPE_DEFAULT, "#significantRegion: helper fence restart due to changed radius, %{private}.1lf, %{private}s", buf, 0x16u);
        }
        if (!sub_10013D1A0(115, 2)) {
          goto LABEL_126;
        }
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 == -1) {
          goto LABEL_159;
        }
      }
    }
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    goto LABEL_159;
  }
  if (v5)
  {
LABEL_39:
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    char v26 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      if ((char)a3[23] >= 0) {
        double v27 = *(double *)&a3;
      }
      else {
        double v27 = *(double *)a3;
      }
      if ((char)a3[47] >= 0) {
        uint64_t v28 = (uint64_t)(a3 + 24);
      }
      else {
        uint64_t v28 = *((void *)a3 + 3);
      }
      *(_DWORD *)long long buf = 136380931;
      double v65 = v27;
      __int16 v66 = 2081;
      uint64_t v67 = v28;
      _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "#Warning #significantRegion: helper fence ambiguity for [%{private}s]/%{private}s]", buf, 0x16u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      if ((char)a3[23] >= 0) {
        double v29 = a3;
      }
      else {
        double v29 = *(unsigned char **)a3;
      }
      int v30 = (char)a3[47];
      uint64_t v33 = *((void *)a3 + 3);
      uint64_t v32 = a3 + 24;
      uint64_t v31 = v33;
      if (v30 >= 0) {
        uint64_t v34 = (uint64_t)v32;
      }
      else {
        uint64_t v34 = v31;
      }
      *(_DWORD *)uint64_t v72 = 136380931;
      *(void *)&v72[4] = v29;
      __int16 v73 = 2081;
      uint64_t v74 = v34;
      long long v35 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::refreshLoiModelForFence(const CFAbsoluteTime, const CLLocationOfInterestLite &, const CLFenceManager_Type::Fence &, const BOOL)", "%s\n", v35);
      if (v35 != (char *)buf) {
        free(v35);
      }
    }
    return;
  }
  if (v11 != (uint64_t **)v10)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    uint64_t v36 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      if ((char)a3[23] >= 0) {
        double v37 = *(double *)&a3;
      }
      else {
        double v37 = *(double *)a3;
      }
      if ((char)a3[47] >= 0) {
        uint64_t v38 = (uint64_t)(a3 + 24);
      }
      else {
        uint64_t v38 = *((void *)a3 + 3);
      }
      *(_DWORD *)long long buf = 136380931;
      double v65 = v37;
      __int16 v66 = 2081;
      uint64_t v67 = v38;
      _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEFAULT, "#significantRegion: helper fence stop as disappeared for [%{private}s]/%{private}s", buf, 0x16u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      if ((char)a3[23] >= 0) {
        __int16 v60 = a3;
      }
      else {
        __int16 v60 = *(unsigned char **)a3;
      }
      if ((char)a3[47] >= 0) {
        uint64_t v61 = (uint64_t)(a3 + 24);
      }
      else {
        uint64_t v61 = *((void *)a3 + 3);
      }
      *(_DWORD *)uint64_t v72 = 136380931;
      *(void *)&v72[4] = v60;
      __int16 v73 = 2081;
      uint64_t v74 = v61;
      int v62 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::refreshLoiModelForFence(const CFAbsoluteTime, const CLLocationOfInterestLite &, const CLFenceManager_Type::Fence &, const BOOL)", "%s\n", v62);
      if (v62 != (char *)buf) {
        free(v62);
      }
    }
    sub_100DC7194(a1, a3, a5);
  }
}

void sub_100DCC044(_Unwind_Exception *a1)
{
}

void sub_100DCC088(uint64_t **a1, unsigned char *a2, int a3, double a4)
{
  sub_100134750(__p, "");
  if (SHIBYTE(v19) < 0)
  {
    sub_1000DC48C(__dst, __p[0], (unint64_t)__p[1]);
    __asm { FMOV            V0.2D, #-1.0 }
    long long v22 = _Q0;
    unint64_t v23 = 0xBFF0000000000000;
    if (SHIBYTE(v19) < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    *(_OWORD *)long long __dst = *(_OWORD *)__p;
    uint64_t v21 = v19;
    __asm { FMOV            V0.2D, #-1.0 }
    long long v22 = _Q0;
    unint64_t v23 = 0xBFF0000000000000;
  }
  if (SHIBYTE(v21) < 0)
  {
    sub_1000DC48C(v14, __dst[0], (unint64_t)__dst[1]);
  }
  else
  {
    *(_OWORD *)int v14 = *(_OWORD *)__dst;
    uint64_t v15 = v21;
  }
  long long v16 = v22;
  unint64_t v17 = v23;
  sub_100DCB254(a1, (uint64_t)v14, a2, a3, a4);
  if (SHIBYTE(v15) < 0) {
    operator delete(v14[0]);
  }
  if (SHIBYTE(v21) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_100DCC1B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0) {
    operator delete(a25);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DCC200(uint64_t a1, void *a2)
{
  uint64_t v4 = (NSDate *)[a2 departureDate];
  char v5 = +[NSDate distantFuture];
  int v58 = 0xFFFF;
  __asm { FMOV            V0.2D, #-1.0 }
  long long v62 = xmmword_101D1C570;
  long long v63 = _Q0;
  long long v64 = _Q0;
  unint64_t v65 = 0xBFF0000000000000;
  unint64_t v67 = 0xBFF0000000000000;
  int v66 = 0;
  int v68 = 0;
  unint64_t v71 = 0xBFF0000000000000;
  int v72 = 0x7FFFFFFF;
  uint64_t v74 = 0;
  uint64_t v75 = 0;
  uint64_t v73 = 0;
  char v76 = 0;
  [a2 coordinate];
  uint64_t v59 = v11;
  [a2 coordinate];
  uint64_t v60 = v12;
  [a2 coordinate];
  uint64_t v69 = v13;
  [a2 coordinate];
  uint64_t v70 = v14;
  [a2 horizontalAccuracy];
  uint64_t v61 = v15;
  memset(&v57, 0, sizeof(v57));
  if (a2 && [a2 _placeInference] && objc_msgSend(objc_msgSend(a2, "_placeInference"), "_loiIdentifier"))
  {
    std::string::assign(&v57, (const std::string::value_type *)[objc_msgSend(objc_msgSend(objc_msgSend(objc_msgSend(a2, "_placeInference"), "_loiIdentifier"), "UUIDString"), "UTF8String"]);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    long long v16 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      unint64_t v17 = &v57;
      if ((v57.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        unint64_t v17 = (std::string *)v57.__r_.__value_.__r.__words[0];
      }
      int v18 = "exit";
      if (v4 == v5) {
        int v18 = "entry";
      }
      *(_DWORD *)long long buf = 136380931;
      int v84 = v17;
      __int16 v85 = 2082;
      id v86 = v18;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEBUG, "#significantRegion: visit, id, %{private}s, %{public}s", buf, 0x16u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      double v50 = &v57;
      if ((v57.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        double v50 = (std::string *)v57.__r_.__value_.__r.__words[0];
      }
      uint64_t v51 = "exit";
      if (v4 == v5) {
        uint64_t v51 = "entry";
      }
      int v77 = 136380931;
      unsigned __int8 v78 = v50;
      __int16 v79 = 2082;
      char v80 = v51;
      double v52 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::onVisit(const CFAbsoluteTime, CLVisit *)", "%s\n", v52);
      if (v52 != (char *)buf) {
        free(v52);
      }
    }
    uint64_t v19 = *(void **)(a1 + 816);
    if (v19 != (void *)(a1 + 824))
    {
      if (v4 == v5) {
        int v20 = "entry";
      }
      else {
        int v20 = "exit";
      }
      while (1)
      {
        uint64_t v21 = *((unsigned __int8 *)v19 + 303);
        if ((v21 & 0x80u) == 0) {
          uint64_t v22 = *((unsigned __int8 *)v19 + 303);
        }
        else {
          uint64_t v22 = v19[36];
        }
        std::string::size_type size = HIBYTE(v57.__r_.__value_.__r.__words[2]);
        if ((v57.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::string::size_type size = v57.__r_.__value_.__l.__size_;
        }
        if (v22 != size) {
          goto LABEL_44;
        }
        double v24 = (const void **)(v19 + 35);
        uint64_t v25 = (v57.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
            ? &v57
            : (std::string *)v57.__r_.__value_.__r.__words[0];
        if ((v21 & 0x80) == 0) {
          break;
        }
        if (!memcmp(*v24, v25, v19[36])) {
          goto LABEL_32;
        }
LABEL_44:
        double v29 = (void *)v19[1];
        if (v29)
        {
          do
          {
            int v30 = v29;
            double v29 = (void *)*v29;
          }
          while (v29);
        }
        else
        {
          do
          {
            int v30 = (void *)v19[2];
            _ZF = *v30 == (void)v19;
            uint64_t v19 = v30;
          }
          while (!_ZF);
        }
        uint64_t v19 = v30;
        if (v30 == (void *)(a1 + 824)) {
          goto LABEL_102;
        }
      }
      if (*((unsigned char *)v19 + 303))
      {
        while (*(unsigned __int8 *)v24 == v25->__r_.__value_.__s.__data_[0])
        {
          double v24 = (const void **)((char *)v24 + 1);
          uint64_t v25 = (std::string *)((char *)v25 + 1);
          if (!--v21) {
            goto LABEL_32;
          }
        }
        goto LABEL_44;
      }
LABEL_32:
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      char v26 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
      {
        double v27 = (std::string *)v57.__r_.__value_.__r.__words[0];
        if ((v57.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          double v27 = &v57;
        }
        uint64_t v28 = v19 + 7;
        if (*((char *)v19 + 79) < 0) {
          uint64_t v28 = (void *)*v28;
        }
        *(_DWORD *)long long buf = 136381187;
        int v84 = v27;
        __int16 v85 = 2082;
        id v86 = v20;
        __int16 v87 = 2081;
        int v88 = v28;
        _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEBUG, "#significantRegion: visit, id, %{private}s, %{public}s, %{private}s", buf, 0x20u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F7C40);
        }
        uint64_t v31 = (std::string *)v57.__r_.__value_.__r.__words[0];
        if ((v57.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          uint64_t v31 = &v57;
        }
        uint64_t v32 = v19 + 7;
        if (*((char *)v19 + 79) < 0) {
          uint64_t v32 = (void *)*v32;
        }
        int v77 = 136381187;
        unsigned __int8 v78 = v31;
        __int16 v79 = 2082;
        char v80 = v20;
        __int16 v81 = 2081;
        double v82 = v32;
        uint64_t v33 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::onVisit(const CFAbsoluteTime, CLVisit *)", "%s\n", v33);
        if (v33 != (char *)buf) {
          free(v33);
        }
      }
      if (*(unsigned char *)(a1 + 619))
      {
        *(_DWORD *)long long buf = v4 != v5;
        sub_100134750(&__p, "Visit");
        sub_100DBB9B0(a1);
        if (v56 < 0) {
          operator delete(__p);
        }
      }
      goto LABEL_44;
    }
  }
  else
  {
    std::string::assign(&v57, "n/a");
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    uint64_t v34 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      long long v35 = &v57;
      if ((v57.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        long long v35 = (std::string *)v57.__r_.__value_.__r.__words[0];
      }
      uint64_t v36 = "exit";
      if (v4 == v5) {
        uint64_t v36 = "entry";
      }
      *(_DWORD *)long long buf = 136380931;
      int v84 = v35;
      __int16 v85 = 2082;
      id v86 = v36;
      _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEBUG, "#significantRegion: visit, id, %{private}s, %{public}s", buf, 0x16u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      double v47 = &v57;
      if ((v57.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        double v47 = (std::string *)v57.__r_.__value_.__r.__words[0];
      }
      double v48 = "exit";
      if (v4 == v5) {
        double v48 = "entry";
      }
      int v77 = 136380931;
      unsigned __int8 v78 = v47;
      __int16 v79 = 2082;
      char v80 = v48;
      float64x2_t v49 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::onVisit(const CFAbsoluteTime, CLVisit *)", "%s\n", v49);
      if (v49 != (char *)buf) {
        free(v49);
      }
    }
    double v37 = *(void **)(a1 + 240);
    if (v37 != (void *)(a1 + 248))
    {
      if (v4 == v5) {
        uint64_t v38 = "entry";
      }
      else {
        uint64_t v38 = "exit";
      }
      do
      {
        if ((v37[24] & 0x80) != 0
          && a1 + 824 != sub_10001A4C4(a1 + 816, (unsigned __int8 *)v37 + 32)
          && !*((_DWORD *)v37 + 70))
        {
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F7C40);
          }
          uint64_t v41 = qword_1024193C8;
          if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
          {
            long long v42 = (std::string *)v57.__r_.__value_.__r.__words[0];
            if ((v57.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              long long v42 = &v57;
            }
            double v43 = v37 + 7;
            if (*((char *)v37 + 79) < 0) {
              double v43 = (void *)*v43;
            }
            *(_DWORD *)long long buf = 136381187;
            int v84 = v42;
            __int16 v85 = 2082;
            id v86 = v38;
            __int16 v87 = 2081;
            int v88 = v43;
            _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEBUG, "#significantRegion: visit, id, %{private}s, %{public}s, %{private}s, exit", buf, 0x20u);
          }
          if (sub_10013D1A0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1024193C0 != -1) {
              dispatch_once(&qword_1024193C0, &stru_1022F7C40);
            }
            double v44 = (std::string *)v57.__r_.__value_.__r.__words[0];
            if ((v57.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              double v44 = &v57;
            }
            double v45 = v37 + 7;
            if (*((char *)v37 + 79) < 0) {
              double v45 = (void *)*v45;
            }
            int v77 = 136381187;
            unsigned __int8 v78 = v44;
            __int16 v79 = 2082;
            char v80 = v38;
            __int16 v81 = 2081;
            double v82 = v45;
            double v46 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitor::onVisit(const CFAbsoluteTime, CLVisit *)", "%s\n", v46);
            if (v46 != (char *)buf) {
              free(v46);
            }
          }
          if (*(unsigned char *)(a1 + 619))
          {
            *(_DWORD *)long long buf = 1;
            sub_100134750(&v53, "Visit");
            sub_100DBB9B0(a1);
            if (v54 < 0) {
              operator delete(v53);
            }
          }
        }
        std::string v39 = (void *)v37[1];
        if (v39)
        {
          do
          {
            double v40 = v39;
            std::string v39 = (void *)*v39;
          }
          while (v39);
        }
        else
        {
          do
          {
            double v40 = (void *)v37[2];
            _ZF = *v40 == (void)v37;
            double v37 = v40;
          }
          while (!_ZF);
        }
        double v37 = v40;
      }
      while (v40 != (void *)(a1 + 248));
    }
  }
LABEL_102:
  if (SHIBYTE(v57.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v57.__r_.__value_.__l.__data_);
  }
}

void sub_100DCCCA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  if (a31 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DCCD0C(uint64_t a1)
{
  return sub_100F6013C(a1 + 1312);
}

uint64_t sub_100DCCD14(uint64_t a1)
{
  return sub_100F60154(a1 + 1312);
}

uint64_t sub_100DCCD1C(uint64_t a1)
{
  return sub_100F6016C(a1 + 1312);
}

void *sub_100DCCD24(uint64_t a1, double a2, double a3, double a4, double a5, double a6)
{
  double v8 = sub_1000F1648((double *)(a1 + 1776), a3, a4, a5, a6, 0.0);

  return sub_100F60184((void *)(a1 + 1312), (uint64_t)a2, (uint64_t)v8);
}

BOOL sub_100DCCD8C(std::string *__str, std::string *this)
{
  double v4 = *(double *)&__str[3].__r_.__value_.__r.__words[2];
  if (v4 > 2128000.0)
  {
    std::string::operator=(this, __str);
    std::string::operator=(this + 1, __str + 1);
    std::string::operator=(this + 2, __str + 2);
    long long v14 = *(_OWORD *)&__str[3].__r_.__value_.__r.__words[2];
    long long v15 = *(_OWORD *)&__str[4].__r_.__value_.__r.__words[1];
    long long v16 = *(_OWORD *)&__str[5].__r_.__value_.__l.__data_;
    *(_OWORD *)&this[3].__r_.__value_.__l.__data_ = *(_OWORD *)&__str[3].__r_.__value_.__l.__data_;
    *(_OWORD *)&this[5].__r_.__value_.__l.__data_ = v16;
    *(_OWORD *)&this[4].__r_.__value_.__r.__words[1] = v15;
    *(_OWORD *)&this[3].__r_.__value_.__r.__words[2] = v14;
    long long v17 = *(_OWORD *)&__str[6].__r_.__value_.__r.__words[1];
    long long v18 = *(_OWORD *)&__str[7].__r_.__value_.__l.__data_;
    std::string::size_type v19 = *(std::string::size_type *)((char *)&__str[7].__r_.__value_.__r.__words[1] + 5);
    *(_OWORD *)&this[5].__r_.__value_.__r.__words[2] = *(_OWORD *)&__str[5].__r_.__value_.__r.__words[2];
    *(std::string::size_type *)((char *)&this[7].__r_.__value_.__r.__words[1] + 5) = v19;
    *(_OWORD *)&this[7].__r_.__value_.__l.__data_ = v18;
    *(_OWORD *)&this[6].__r_.__value_.__r.__words[1] = v17;
    std::string::operator=(this + 8, __str + 8);
    std::string::pointer data = this[9].__r_.__value_.__l.__data_;
    this[9].__r_.__value_.__r.__words[0] = (std::string::size_type)__str[9].__r_.__value_.__l.__data_;

    if (this != __str) {
      sub_10027C3B4(&this[9].__r_.__value_.__s.__data_[8], (char *)__str[9].__r_.__value_.__l.__size_, __str[9].__r_.__value_.__r.__words[2], (uint64_t)(__str[9].__r_.__value_.__r.__words[2] - __str[9].__r_.__value_.__l.__size_) >> 4);
    }
    this[3].__r_.__value_.__r.__words[2] = 0x41403C4000000000;
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    uint64_t v21 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_FAULT))
    {
      if ((__str->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v22 = __str;
      }
      else {
        uint64_t v22 = (std::string *)__str->__r_.__value_.__r.__words[0];
      }
      if ((__str[1].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        unint64_t v23 = __str + 1;
      }
      else {
        unint64_t v23 = (std::string *)__str[1].__r_.__value_.__l.__data_;
      }
      std::string::size_type v24 = this[3].__r_.__value_.__r.__words[2];
      *(_DWORD *)long long buf = 136446723;
      uint64_t v28 = v22;
      __int16 v29 = 2081;
      int v30 = v23;
      __int16 v31 = 2049;
      std::string::size_type v32 = v24;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_FAULT, "Fence: Cannot monitor %{public}s/%{private}s because the radius is too large, suggesting, %{private}.1lf", buf, 0x20u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      char v26 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "static BOOL CLFenceMonitor::canPerformMonitoringForFence(const CLFenceManager_Type::Fence &, CLFenceManager_Type::Fence &)", "%s\n", v26);
      if (v26 != (char *)buf) {
        free(v26);
      }
    }
  }
  else
  {
    BOOL v6 = *(double *)&__str[4].__r_.__value_.__l.__data_ > 400.0
      || __str[7].__r_.__value_.__s.__data_[20] != 0
      || HIDWORD(__str[7].__r_.__value_.__r.__words[1]) == 2;
    if (!v6
      && __str[9].__r_.__value_.__r.__words[2] == __str[9].__r_.__value_.__l.__size_
      && (__str[6].__r_.__value_.__s.__data_[16] & 0x20) == 0)
    {
      std::string::operator=(this, __str);
      std::string::operator=(this + 1, __str + 1);
      std::string::operator=(this + 2, __str + 2);
      long long v7 = *(_OWORD *)&__str[3].__r_.__value_.__r.__words[2];
      long long v8 = *(_OWORD *)&__str[4].__r_.__value_.__r.__words[1];
      long long v9 = *(_OWORD *)&__str[5].__r_.__value_.__l.__data_;
      *(_OWORD *)&this[3].__r_.__value_.__l.__data_ = *(_OWORD *)&__str[3].__r_.__value_.__l.__data_;
      *(_OWORD *)&this[5].__r_.__value_.__l.__data_ = v9;
      *(_OWORD *)&this[4].__r_.__value_.__r.__words[1] = v8;
      *(_OWORD *)&this[3].__r_.__value_.__r.__words[2] = v7;
      long long v10 = *(_OWORD *)&__str[6].__r_.__value_.__r.__words[1];
      long long v11 = *(_OWORD *)&__str[7].__r_.__value_.__l.__data_;
      std::string::size_type v12 = *(std::string::size_type *)((char *)&__str[7].__r_.__value_.__r.__words[1] + 5);
      *(_OWORD *)&this[5].__r_.__value_.__r.__words[2] = *(_OWORD *)&__str[5].__r_.__value_.__r.__words[2];
      *(std::string::size_type *)((char *)&this[7].__r_.__value_.__r.__words[1] + 5) = v12;
      *(_OWORD *)&this[7].__r_.__value_.__l.__data_ = v11;
      *(_OWORD *)&this[6].__r_.__value_.__r.__words[1] = v10;
      std::string::operator=(this + 8, __str + 8);
      std::string::pointer v13 = this[9].__r_.__value_.__l.__data_;
      this[9].__r_.__value_.__r.__words[0] = (std::string::size_type)__str[9].__r_.__value_.__l.__data_;

      if (this != __str) {
        sub_10027C3B4(&this[9].__r_.__value_.__s.__data_[8], (char *)__str[9].__r_.__value_.__l.__size_, __str[9].__r_.__value_.__r.__words[2], (uint64_t)(__str[9].__r_.__value_.__r.__words[2] - __str[9].__r_.__value_.__l.__size_) >> 4);
      }
      this[3].__r_.__value_.__r.__words[2] = 0x4079000000000000;
    }
  }
  return v4 <= 2128000.0;
}

BOOL sub_100DCD178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v5 = sub_1001ABE80((double *)(a3 + 4), a2, (double *)(a1 + 1776));
  double v6 = *(double *)(a2 + 96) + *(double *)(a3 + 20);
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  double v7 = v6 + 20000.0;
  long long v8 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)long long buf = 134218240;
    *(double *)&uint8_t buf[4] = v5;
    __int16 v42 = 2048;
    double v43 = v7;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "distance = %.2f; compare = %.2f", buf, 0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    *(_DWORD *)std::string::size_type v32 = 134218240;
    *(double *)&v32[4] = v5;
    __int16 v33 = 2048;
    double v34 = v7;
    uint64_t v21 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLFenceMonitor::isCellMonitoringSufficient(const CLFenceManager_Type::Fence &, const CLDaemonLocation &)", "%s\n", v21);
    if (v21 != buf) {
      free(v21);
    }
  }
  BOOL v9 = v5 > v7;
  BOOL v11 = *(double *)(a2 + 96) > 400.0 || *(unsigned char *)(a2 + 188) != 0 || *(_DWORD *)(a2 + 180) == 2;
  if (v11 || *(void *)(a2 + 232) != *(void *)(a2 + 224) || (*(unsigned char *)(a2 + 160) & 0x20) != 0)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    std::string::size_type v12 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      sub_100C8C864(a2);
      std::string::pointer v13 = v44 >= 0 ? buf : *(unsigned char **)buf;
      *(_DWORD *)std::string::size_type v32 = 134218242;
      *(void *)&v32[4] = 0x4079000000000000;
      __int16 v33 = 2080;
      double v34 = *(double *)&v13;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "Fence: no allowing wifi monitor for, %.1lf, fence, %s", v32, 0x16u);
      if (SHIBYTE(v44) < 0) {
        operator delete(*(void **)buf);
      }
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      sub_100C8C864(a2);
      if (v35 >= 0) {
        int v30 = v32;
      }
      else {
        int v30 = *(unsigned char **)v32;
      }
      int v37 = 134218242;
      uint64_t v38 = 0x4079000000000000;
      __int16 v39 = 2080;
      double v40 = v30;
      __int16 v31 = (char *)_os_log_send_and_compose_impl();
      if (SHIBYTE(v35) < 0) {
        operator delete(*(void **)v32);
      }
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLFenceMonitor::isCellMonitoringSufficient(const CLFenceManager_Type::Fence &, const CLDaemonLocation &)", "%s\n", v31);
      if (v31 != buf) {
        free(v31);
      }
    }
    BOOL v9 = 1;
  }
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  long long v14 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    long long v15 = "not ";
    if (v9) {
      long long v15 = "";
    }
    uint64_t v16 = *(void *)a2;
    int v17 = *(char *)(a2 + 47);
    uint64_t v18 = *(void *)(a2 + 24);
    if (*(char *)(a2 + 23) >= 0) {
      uint64_t v16 = a2;
    }
    *(_DWORD *)long long buf = 136315651;
    if (v17 >= 0) {
      uint64_t v19 = a2 + 24;
    }
    else {
      uint64_t v19 = v18;
    }
    *(void *)&uint8_t buf[4] = v15;
    __int16 v42 = 2081;
    double v43 = *(double *)&v16;
    __int16 v44 = 2081;
    uint64_t v45 = v19;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "Cell monitoring is %ssufficient for %{private}s/%{private}s", buf, 0x20u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    uint64_t v22 = "not ";
    if (v9) {
      uint64_t v22 = "";
    }
    if (*(char *)(a2 + 23) >= 0) {
      uint64_t v23 = a2;
    }
    else {
      uint64_t v23 = *(void *)a2;
    }
    int v24 = *(char *)(a2 + 47);
    uint64_t v27 = *(void *)(a2 + 24);
    uint64_t v26 = a2 + 24;
    uint64_t v25 = v27;
    if (v24 >= 0) {
      uint64_t v28 = v26;
    }
    else {
      uint64_t v28 = v25;
    }
    *(_DWORD *)std::string::size_type v32 = 136315651;
    *(void *)&v32[4] = v22;
    __int16 v33 = 2081;
    double v34 = *(double *)&v23;
    __int16 v35 = 2081;
    uint64_t v36 = v28;
    __int16 v29 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLFenceMonitor::isCellMonitoringSufficient(const CLFenceManager_Type::Fence &, const CLDaemonLocation &)", "%s\n", v29);
    if (v29 != buf) {
      free(v29);
    }
  }
  return v9;
}

BOOL sub_100DCD764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v5 = sub_1001ABE80((double *)(a3 + 4), a2, (double *)(a1 + 1776));
  double v6 = *(double *)(a2 + 96) + *(double *)(a3 + 20);
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  double v7 = v6 + 100000.0;
  long long v8 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)long long buf = 134218240;
    double v19 = v5;
    __int16 v20 = 2048;
    double v21 = v7;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "Fence: distance = %.2f; compare = %.2f",
      buf,
      0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    uint64_t v16 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLFenceMonitor::isLacMonitoringSufficient(const CLFenceManager_Type::Fence &, const CLDaemonLocation &)", "%s\n", v16);
    if (v16 != (char *)buf) {
      free(v16);
    }
  }
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F7C40);
  }
  BOOL v9 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    long long v10 = "not ";
    if (v5 > v7) {
      long long v10 = "";
    }
    uint64_t v11 = *(void *)a2;
    int v12 = *(char *)(a2 + 47);
    uint64_t v13 = *(void *)(a2 + 24);
    if (*(char *)(a2 + 23) >= 0) {
      uint64_t v11 = a2;
    }
    *(_DWORD *)long long buf = 136315651;
    if (v12 >= 0) {
      uint64_t v14 = a2 + 24;
    }
    else {
      uint64_t v14 = v13;
    }
    double v19 = *(double *)&v10;
    __int16 v20 = 2081;
    double v21 = *(double *)&v11;
    __int16 v22 = 2081;
    uint64_t v23 = v14;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "Fence: LAC monitoring is %ssufficient for %{private}s/%{private}s", buf, 0x20u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F7C40);
    }
    int v17 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLFenceMonitor::isLacMonitoringSufficient(const CLFenceManager_Type::Fence &, const CLDaemonLocation &)", "%s\n", v17);
    if (v17 != (char *)buf) {
      free(v17);
    }
  }
  return v5 > v7;
}

void sub_100DCDB4C(id a1)
{
  qword_1024193C8 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeoFencing");
}

double sub_100DCDB7C(uint64_t a1, double *a2, double *a3)
{
  double result = -1.0;
  if (*a3 != -1.0)
  {
    if (*a2 < *a3)
    {
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F7C40);
      }
      double v6 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
      {
        double v7 = *a2;
        double v8 = *a3;
        *(_DWORD *)long long buf = 134349312;
        double v11 = v7;
        __int16 v12 = 2050;
        double v13 = v8;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "#Warning. Negative age %{public}lf < %{public}lf", buf, 0x16u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F7C40);
        }
        BOOL v9 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "CFTimeInterval CLFenceAnalyticsGeofenceEventTimes::getAge(const CFAbsoluteTime &, const CFAbsoluteTime &) const", "%s\n", v9);
        if (v9 != (char *)buf) {
          free(v9);
        }
      }
    }
    return *a2 - *a3;
  }
  return result;
}

void sub_100DCDD7C(id a1)
{
  qword_102419388 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

void sub_100DCDDAC(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100DCDDAC(a1, *a2);
    sub_100DCDDAC(a1, a2[1]);
    sub_100DCDE08((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void sub_100DCDE08(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 224);
  if (v2)
  {
    *(void *)(a1 + 232) = v2;
    operator delete(v2);
  }

  if (*(char *)(a1 + 215) < 0) {
    operator delete(*(void **)(a1 + 192));
  }
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v3 = *(void **)a1;
    operator delete(v3);
  }
}

void sub_100DCDE9C(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100DCDE9C(a1, *a2);
    sub_100DCDE9C(a1, a2[1]);
    sub_100DCDEF8((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

uint64_t sub_100DCDEF8(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 272);
  if (v2)
  {
    *(void *)(a1 + 280) = v2;
    operator delete(v2);
  }

  if (*(char *)(a1 + 263) < 0) {
    operator delete(*(void **)(a1 + 240));
  }
  if (*(char *)(a1 + 119) < 0) {
    operator delete(*(void **)(a1 + 96));
  }
  if (*(char *)(a1 + 95) < 0) {
    operator delete(*(void **)(a1 + 72));
  }
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_100DCDF98(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100DCDF98(a1, *a2);
    sub_100DCDF98(a1, a2[1]);
    sub_100DCDFF4((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

uint64_t sub_100DCDFF4(uint64_t a1)
{
  if (*(char *)(a1 + 271) < 0) {
    operator delete(*(void **)(a1 + 248));
  }
  uint64_t v2 = *(void **)(a1 + 224);
  if (v2)
  {
    *(void *)(a1 + 232) = v2;
    operator delete(v2);
  }

  if (*(char *)(a1 + 215) < 0) {
    operator delete(*(void **)(a1 + 192));
  }
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_100DCE084(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100DCE084(a1, *a2);
    sub_100DCE084(a1, a2[1]);
    sub_100DCE0E0((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void sub_100DCE0E0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 224);
  if (v2)
  {
    *(void *)(a1 + 232) = v2;
    operator delete(v2);
  }

  if (*(char *)(a1 + 215) < 0) {
    operator delete(*(void **)(a1 + 192));
  }
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v3 = *(void **)a1;
    operator delete(v3);
  }
}

void sub_100DCE174(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100DCE174(a1, *a2);
    sub_100DCE174(a1, a2[1]);
    sub_100DCE1D0((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void sub_100DCE1D0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 224);
  if (v2)
  {
    *(void *)(a1 + 232) = v2;
    operator delete(v2);
  }

  if (*(char *)(a1 + 215) < 0) {
    operator delete(*(void **)(a1 + 192));
  }
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v3 = *(void **)a1;
    operator delete(v3);
  }
}

uint64_t *sub_100DCE264(uint64_t **a1, unsigned __int8 *a2, uint64_t a3, long long **a4)
{
  double v6 = (uint64_t **)sub_1009206EC((uint64_t)a1, &v11, a2);
  double v7 = *v6;
  if (!*v6)
  {
    double v8 = v6;
    sub_100DCE310((uint64_t)a1, a4, (uint64_t)v10);
    sub_1000EDF90(a1, v11, v8, v10[0]);
    double v7 = v10[0];
    v10[0] = 0;
    sub_100DCE3F4((uint64_t)v10, 0);
  }
  return v7;
}

char *sub_100DCE310@<X0>(uint64_t a1@<X0>, long long **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  double v6 = (char *)operator new(0x170uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  double v8 = *a2;
  double result = sub_100DCE390(v6 + 32, &v8);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_100DCE378(_Unwind_Exception *a1)
{
  sub_100DCE3F4(v1, 0);
  _Unwind_Resume(a1);
}

char *sub_100DCE390(char *a1, long long **a2)
{
  uint64_t v3 = sub_10048AEC0(a1, *a2);
  sub_1001ABED0((uint64_t)(v3 + 248));
  return a1;
}

void sub_100DCE3C4(_Unwind_Exception *a1)
{
  uint64_t v3 = *(void **)(v1 + 224);
  if (v3)
  {
    *(void *)(v1 + 232) = v3;
    operator delete(v3);
  }

  sub_101A729EC(v1);
  _Unwind_Resume(a1);
}

void sub_100DCE3F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_100DCDE08((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

uint64_t *sub_100DCE44C(uint64_t **a1, uint64_t *a2, uint64_t *a3)
{
  if (a2 != a3)
  {
    double v4 = a2;
    do
    {
      double v6 = sub_1000F0A30(a1, v4);
      sub_100DCE0E0((uint64_t)(v4 + 4));
      operator delete(v4);
      double v4 = v6;
    }
    while (v6 != a3);
  }
  return a3;
}

void sub_100DCE4B8()
{
}

void *sub_100DCE4CC(uint64_t a1)
{
  double result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *double result = off_1022F7C90;
  result[1] = v3;
  return result;
}

uint64_t sub_100DCE514(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022F7C90;
  a2[1] = v2;
  return result;
}

BOOL sub_100DCE540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100DCD764(*(void *)(a1 + 8), a2, a3);
}

uint64_t sub_100DCE548(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100DCE588()
{
}

void *sub_100DCE594(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_100DCE61C()
{
}

void *sub_100DCE630(uint64_t a1)
{
  double result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *double result = off_1022F7D20;
  result[1] = v3;
  return result;
}

uint64_t sub_100DCE678(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022F7D20;
  a2[1] = v2;
  return result;
}

BOOL sub_100DCE6A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100DCD178(*(void *)(a1 + 8), a2, a3);
}

uint64_t sub_100DCE6AC(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100DCE6EC()
{
}

void sub_100DCE6FC()
{
}

void *sub_100DCE710()
{
  double result = operator new(0x10uLL);
  *double result = off_1022F7DA0;
  return result;
}

void sub_100DCE748(uint64_t a1, void *a2)
{
  *a2 = off_1022F7DA0;
}

uint64_t sub_100DCE770()
{
  return 1;
}

uint64_t sub_100DCE778(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100DCE7B8()
{
}

void sub_100DCE7C4(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x1A;
  unint64_t v4 = v2 - 26;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    double v6 = (char *)a1[3];
    a1[4] = v4;
    double v7 = (void *)a1[1];
    double v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    BOOL v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)double v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      double v34 = (char *)sub_1000DA54C(v5, v33);
      __int16 v35 = &v34[8 * (v33 >> 2)];
      int v37 = &v34[8 * v36];
      uint64_t v38 = (uint64_t *)a1[1];
      double v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        double v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        uint64_t v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)uint64_t v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    double v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      BOOL v9 = (char *)a1[1];
    }
    double v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0xFD8uLL);
      sub_10017F0B4(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0xFD8uLL);
    sub_1002D02D8((uint64_t)a1, &v54);
    __int16 v44 = (void *)a1[1];
    double v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    BOOL v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      double v34 = (char *)sub_1000DA54C((uint64_t)(a1 + 3), v46);
      __int16 v35 = &v34[8 * (v46 >> 2)];
      int v37 = &v34[8 * v47];
      double v48 = (uint64_t *)a1[1];
      double v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        double v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        uint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)uint64_t v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      double v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        double v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  char v56 = a1 + 3;
  *(void *)&long long v54 = sub_1000DA54C((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  __int16 v53 = operator new(0xFD8uLL);
  sub_1000DA434(&v54, &v53);
  uint64_t v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    sub_1002D03F8((uint64_t)&v54, v27);
  }
  __int16 v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_100DCEA90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t *sub_100DCEADC(uint64_t **a1, unsigned __int8 *a2, uint64_t a3, long long **a4)
{
  double v6 = (uint64_t **)sub_1009206EC((uint64_t)a1, &v11, a2);
  double v7 = *v6;
  if (!*v6)
  {
    double v8 = v6;
    sub_100DCEB88((uint64_t)a1, a4, (uint64_t)v10);
    sub_1000EDF90(a1, v11, v8, v10[0]);
    double v7 = v10[0];
    v10[0] = 0;
    sub_100DCEC6C((uint64_t)v10, 0);
  }
  return v7;
}

void sub_100DCEB88(uint64_t a1@<X0>, long long **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  double v6 = (char *)operator new(0x1B8uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  sub_100DCEBF4(v6 + 32, *a2);
  *(unsigned char *)(a3 + 16) = 1;
}

void sub_100DCEBDC(_Unwind_Exception *a1)
{
  sub_100DCEC6C(v1, 0);
  _Unwind_Resume(a1);
}

double sub_100DCEBF4(char *a1, long long *a2)
{
  unint64_t v2 = a1 + 268;
  BOOL v3 = sub_10048AEC0(a1, a2);
  *((_DWORD *)v3 + 62) = 0xFFFF;
  *(void *)(v3 + 252) = 0;
  *(void *)(v3 + 260) = 0;
  double result = -1.0;
  __asm { FMOV            V1.2D, #-1.0 }
  *(_OWORD *)unint64_t v2 = xmmword_101D1C320;
  *((_OWORD *)v2 + 1) = _Q1;
  *((_OWORD *)v2 + 2) = _Q1;
  *((_OWORD *)v2 + 3) = _Q1;
  *((_DWORD *)v3 + 83) = 0;
  *((void *)v3 + 43) = 0;
  *((void *)v3 + 44) = 0;
  *((void *)v3 + 42) = 0xBFF0000000000000;
  *((_DWORD *)v3 + 90) = 0;
  *((void *)v2 + 12) = 0xBFF0000000000000;
  *((_DWORD *)v3 + 93) = 0x7FFFFFFF;
  *((void *)v3 + 48) = 0;
  *((void *)v3 + 49) = 0;
  *((void *)v3 + 47) = 0;
  v3[400] = 0;
  return result;
}

void sub_100DCEC6C(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_100DCE0E0((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

uint64_t *sub_100DCECC4(uint64_t **a1, unsigned __int8 *a2, uint64_t a3, long long **a4)
{
  double v6 = (uint64_t **)sub_1009206EC((uint64_t)a1, &v11, a2);
  double v7 = *v6;
  if (!*v6)
  {
    double v8 = v6;
    sub_100DCED70((uint64_t)a1, a4, (uint64_t)v10);
    sub_1000EDF90(a1, v11, v8, v10[0]);
    double v7 = v10[0];
    v10[0] = 0;
    sub_100DCEDE4((uint64_t)v10, 0);
  }
  return v7;
}

char *sub_100DCED70@<X0>(uint64_t a1@<X0>, long long **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  double v6 = (char *)operator new(0x128uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  double result = sub_10048AEC0(v6 + 32, *a2);
  *((void *)v6 + 35) = 0;
  *((void *)v6 + 36) = 0;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_100DCEDCC(_Unwind_Exception *a1)
{
  sub_100DCEDE4(v1, 0);
  _Unwind_Resume(a1);
}

void sub_100DCEDE4(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_100DCE1D0((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

uint64_t **sub_100DCEE3C(uint64_t **result, void *a2, void *a3)
{
  uint64_t v5 = result;
  if (result[2])
  {
    double v6 = *result;
    double v7 = result[1];
    *double result = (uint64_t *)(result + 1);
    v7[2] = 0;
    result[1] = 0;
    result[2] = 0;
    if (v6[1]) {
      double v8 = (uint64_t *)v6[1];
    }
    else {
      double v8 = v6;
    }
    BOOL v14 = result;
    uint64_t v15 = v8;
    uint64_t v16 = v8;
    if (v8)
    {
      uint64_t v15 = sub_1002FABD8((uint64_t)v8);
      if (a2 != a3)
      {
        BOOL v9 = a2;
        do
        {
          v17[0] = v8 + 4;
          v17[1] = v8 + 35;
          sub_100DCEFB0((uint64_t)v17, (uint64_t)(v9 + 4));
          sub_100CC68A8(v5, (uint64_t)v16);
          uint64_t v16 = v15;
          if (v15) {
            uint64_t v15 = sub_1002FABD8((uint64_t)v15);
          }
          uint64_t v10 = (void *)v9[1];
          if (v10)
          {
            do
            {
              a2 = v10;
              uint64_t v10 = (void *)*v10;
            }
            while (v10);
          }
          else
          {
            do
            {
              a2 = (void *)v9[2];
              BOOL v11 = *a2 == (void)v9;
              BOOL v9 = a2;
            }
            while (!v11);
          }
          double v8 = v16;
          if (v16) {
            BOOL v11 = a2 == a3;
          }
          else {
            BOOL v11 = 1;
          }
          BOOL v9 = a2;
        }
        while (!v11);
      }
    }
    double result = (uint64_t **)sub_100DCF08C((uint64_t)&v14);
  }
  if (a2 != a3)
  {
    do
    {
      double result = (uint64_t **)sub_100DCF0E4((uint64_t)v5, (uint64_t)(a2 + 4));
      uint64_t v12 = (void *)a2[1];
      if (v12)
      {
        do
        {
          uint64_t v13 = v12;
          uint64_t v12 = (void *)*v12;
        }
        while (v12);
      }
      else
      {
        do
        {
          uint64_t v13 = (void *)a2[2];
          BOOL v11 = *v13 == (void)a2;
          a2 = v13;
        }
        while (!v11);
      }
      a2 = v13;
    }
    while (v13 != a3);
  }
  return result;
}

void sub_100DCEF9C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100DCF08C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100DCEFB0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(std::string **)a1;
  std::string::operator=(*(std::string **)a1, (const std::string *)a2);
  std::string::operator=(v4 + 1, (const std::string *)(a2 + 24));
  std::string::operator=(v4 + 2, (const std::string *)(a2 + 48));
  long long v5 = *(_OWORD *)(a2 + 88);
  long long v6 = *(_OWORD *)(a2 + 104);
  long long v7 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)&v4[3].__r_.__value_.__l.__data_ = *(_OWORD *)(a2 + 72);
  *(_OWORD *)&v4[5].__r_.__value_.__l.__data_ = v7;
  *(_OWORD *)&v4[4].__r_.__value_.__r.__words[1] = v6;
  *(_OWORD *)&v4[3].__r_.__value_.__r.__words[2] = v5;
  long long v8 = *(_OWORD *)(a2 + 152);
  long long v9 = *(_OWORD *)(a2 + 168);
  std::string::size_type v10 = *(void *)(a2 + 181);
  *(_OWORD *)&v4[5].__r_.__value_.__r.__words[2] = *(_OWORD *)(a2 + 136);
  *(std::string::size_type *)((char *)&v4[7].__r_.__value_.__r.__words[1] + 5) = v10;
  *(_OWORD *)&v4[7].__r_.__value_.__l.__data_ = v9;
  *(_OWORD *)&v4[6].__r_.__value_.__r.__words[1] = v8;
  std::string::operator=(v4 + 8, (const std::string *)(a2 + 192));
  std::string::pointer data = v4[9].__r_.__value_.__l.__data_;
  v4[9].__r_.__value_.__r.__words[0] = (std::string::size_type)*(id *)(a2 + 216);

  if (v4 != (std::string *)a2) {
    sub_10027C3B4(&v4[9].__r_.__value_.__s.__data_[8], *(char **)(a2 + 224), *(void *)(a2 + 232), (uint64_t)(*(void *)(a2 + 232) - *(void *)(a2 + 224)) >> 4);
  }
  *(_OWORD *)*(void *)(a1 + 8) = *(_OWORD *)(a2 + 248);
  return a1;
}

uint64_t sub_100DCF08C(uint64_t a1)
{
  sub_100DCE174(*(void *)a1, *(void **)(a1 + 16));
  unint64_t v2 = *(void **)(a1 + 8);
  if (v2)
  {
    BOOL v3 = (void *)v2[2];
    if (v3)
    {
      do
      {
        unint64_t v2 = v3;
        BOOL v3 = (void *)v3[2];
      }
      while (v3);
      *(void *)(a1 + 8) = v2;
    }
    sub_100DCE174(*(void *)a1, v2);
  }
  return a1;
}

uint64_t *sub_100DCF0E4(uint64_t a1, uint64_t a2)
{
  sub_100DCF1A8(a1, a2, (uint64_t)v9);
  unint64_t v4 = (uint64_t **)(a1 + 8);
  BOOL v3 = *(uint64_t **)(a1 + 8);
  if (v3)
  {
    long long v5 = (unsigned __int8 *)(v9[0] + 4);
    do
    {
      while (1)
      {
        unint64_t v4 = (uint64_t **)v3;
        if (!sub_10001A540(v5, (unsigned __int8 *)v3 + 32)) {
          break;
        }
        BOOL v3 = *v4;
        long long v6 = v4;
        if (!*v4) {
          goto LABEL_9;
        }
      }
      BOOL v3 = v4[1];
    }
    while (v3);
    long long v6 = v4 + 1;
  }
  else
  {
    long long v6 = (uint64_t **)(a1 + 8);
  }
LABEL_9:
  sub_1000EDF90((uint64_t **)a1, (uint64_t)v4, v6, v9[0]);
  long long v7 = v9[0];
  v9[0] = 0;
  sub_100DCEDE4((uint64_t)v9, 0);
  return v7;
}

void sub_100DCF190(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100DCEDE4((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

__n128 sub_100DCF1A8@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  long long v6 = (char *)operator new(0x128uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  sub_10048AEC0(v6 + 32, (long long *)a2);
  __n128 result = *(__n128 *)(a2 + 248);
  *(__n128 *)(v6 + 280) = result;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_100DCF20C(_Unwind_Exception *a1)
{
  sub_100DCEDE4(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_100DCF224(uint64_t a1, const void **a2)
{
  uint64_t v2 = a1 + 8;
  uint64_t v3 = *(void *)(a1 + 8);
  if (!v3) {
    return v2;
  }
  uint64_t v5 = a1 + 16;
  uint64_t v6 = a1 + 8;
  do
  {
    int v7 = sub_100DB046C(v5, (const void **)(v3 + 32), a2);
    long long v8 = (uint64_t *)(v3 + 8);
    if (!v7)
    {
      long long v8 = (uint64_t *)v3;
      uint64_t v6 = v3;
    }
    uint64_t v3 = *v8;
  }
  while (*v8);
  if (v6 == v2 || sub_100DB046C(v5, a2, (const void **)(v6 + 32))) {
    return v2;
  }
  return v6;
}

uint64_t *sub_100DCF2B4(uint64_t **a1, unsigned __int8 *a2, uint64_t a3, long long **a4)
{
  uint64_t v6 = (uint64_t **)sub_1009206EC((uint64_t)a1, &v11, a2);
  int v7 = *v6;
  if (!*v6)
  {
    long long v8 = v6;
    sub_100DCF360((uint64_t)a1, a4, (uint64_t)v10);
    sub_1000EDF90(a1, v11, v8, v10[0]);
    int v7 = v10[0];
    v10[0] = 0;
    sub_100DCF3D8((uint64_t)v10, 0);
  }
  return v7;
}

char *sub_100DCF360@<X0>(uint64_t a1@<X0>, long long **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = (char *)operator new(0x130uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  __n128 result = sub_10048AEC0(v6 + 32, *a2);
  *((void *)v6 + 35) = 0;
  *((void *)v6 + 36) = 0;
  *((void *)v6 + 37) = 0;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_100DCF3C0(_Unwind_Exception *a1)
{
  sub_100DCF3D8(v1, 0);
  _Unwind_Resume(a1);
}

void sub_100DCF3D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_100DCDFF4((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

uint64_t *sub_100DCF430(uint64_t **a1, const void **a2, uint64_t a3, long long **a4)
{
  uint64_t v6 = (uint64_t **)sub_100DB062C((uint64_t)a1, &v11, a2);
  int v7 = *v6;
  if (!*v6)
  {
    long long v8 = v6;
    sub_100DCF4DC((uint64_t)a1, a4, (uint64_t)v10);
    sub_1000EDF90(a1, v11, v8, v10[0]);
    int v7 = v10[0];
    v10[0] = 0;
    sub_100DCF59C((uint64_t)v10, 0);
  }
  return v7;
}

char *sub_100DCF4DC@<X0>(uint64_t a1@<X0>, long long **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = (char *)operator new(0x148uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  __n128 result = sub_100DCF548(v6 + 32, *a2);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_100DCF530(_Unwind_Exception *a1)
{
  sub_100DCF59C(v1, 0);
  _Unwind_Resume(a1);
}

char *sub_100DCF548(char *a1, long long *a2)
{
  uint64_t v3 = sub_1003413EC(a1, a2);
  sub_100110970(v3 + 48);
  return a1;
}

void sub_100DCF578(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 47) < 0) {
    operator delete(*(void **)(v1 + 24));
  }
  sub_101A52034(v1);
  _Unwind_Resume(a1);
}

void sub_100DCF59C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_100DCDEF8((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

uint64_t sub_100DCF5F4(uint64_t **a1, const void **a2)
{
  uint64_t v3 = (uint64_t *)sub_100DCF224((uint64_t)a1, a2);
  if (a1 + 1 == (uint64_t **)v3) {
    return 0;
  }
  unint64_t v4 = v3;
  sub_1000F0A30(a1, v3);
  sub_100DCDEF8((uint64_t)(v4 + 4));
  operator delete(v4);
  return 1;
}

uint64_t sub_100DCF650(uint64_t **a1, unsigned __int8 *a2)
{
  uint64_t v3 = (uint64_t *)sub_10001A4C4((uint64_t)a1, a2);
  if (a1 + 1 == (uint64_t **)v3) {
    return 0;
  }
  unint64_t v4 = v3;
  sub_1000F0A30(a1, v3);
  sub_100DCDFF4((uint64_t)(v4 + 4));
  operator delete(v4);
  return 1;
}

void sub_100DCF6C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10065AA18((uint64_t)v16, a3);
  sub_1007E6700(a1, a2, (uint64_t)v16);
  sub_10065AAB0(v16);
  *(_OWORD *)(a1 + 248) = 0u;
  *(void *)a1 = off_1022F7E90;
  *(void *)(a1 + 280) = 0;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_DWORD *)(a1 + 288) = 1065353216;
  *(unsigned char *)(a1 + 296) = sub_1000FFBA8();
  *(void *)(a1 + 304) = 0;
  *(void *)(a1 + 56) = @"CoreLocationConfig";
  *(void *)(a1 + 64) = @"com.apple.MobileAsset.CoreLocationConfig";
  *(_DWORD *)(a1 + 72) = 1;
  qword_10248AC18 = MGCopyAnswer();
  if (sub_10016CCBC())
  {
    uint64_t v5 = @"iPhone";
  }
  else if (sub_1001B7C64())
  {
    uint64_t v5 = @"iPad";
  }
  else if (sub_10010145C())
  {
    uint64_t v5 = @"watch";
  }
  else
  {
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    uint64_t v6 = qword_102419608;
    if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "#CLConfig,unsupported device type", buf, 2u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419600 != -1) {
        dispatch_once(&qword_102419600, &stru_1022F8040);
      }
      *(_WORD *)uint64_t v12 = 0;
      uint64_t v11 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "CLConfigAsset::CLConfigAsset(id<CLIntersiloUniverse>, SendNotificationCallback)", "%s\n", v11);
      if (v11 != buf) {
        free(v11);
      }
    }
    uint64_t v5 = @"none";
  }
  qword_10248AC10 = v5;
  if (qword_102419600 != -1) {
    dispatch_once(&qword_102419600, &stru_1022F8040);
  }
  int v7 = qword_102419608;
  if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_DEFAULT))
  {
    id v8 = [(id)qword_10248AC10 UTF8String];
    id v9 = [(id)qword_10248AC18 UTF8String];
    *(_DWORD *)long long buf = 136380931;
    *(void *)&uint8_t buf[4] = v8;
    *(_WORD *)&unsigned char buf[12] = 2081;
    *(void *)&buf[14] = v9;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#CLConfig,deviceTypeTag,%{private}s,devicesTag,%{private}s", buf, 0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    *(_DWORD *)uint64_t v12 = 136380931;
    *(void *)&void v12[4] = [(id)qword_10248AC10 UTF8String];
    *(_WORD *)&v12[12] = 2081;
    *(void *)&v12[14] = [(id)qword_10248AC18 UTF8String];
    std::string::size_type v10 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "CLConfigAsset::CLConfigAsset(id<CLIntersiloUniverse>, SendNotificationCallback)", "%s\n", v10);
    if (v10 != buf) {
      free(v10);
    }
  }
  *(void *)long long buf = off_1022F8090;
  *(void *)&uint8_t buf[8] = a1;
  uint64_t v15 = buf;
  *(void *)uint64_t v12 = off_1022F8120;
  *(void *)&v12[8] = a1;
  uint64_t v13 = v12;
  operator new();
}

void sub_100DD06EC(_Unwind_Exception *a1)
{
  sub_100DD8B28(v2);
  uint64_t v4 = *v3;
  uint64_t *v3 = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  sub_1007E68B0(v1);
  _Unwind_Resume(a1);
}

void sub_100DD0E14(const void *a1)
{
  if (objc_opt_class())
  {
    DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
    CFStringRef v3 = (const __CFString *)kRegulatoryDomainUpdateNotification;
    CFNotificationCenterAddObserver(DarwinNotifyCenter, a1, (CFNotificationCallback)sub_100DD2638, v3, 0, CFNotificationSuspensionBehaviorDeliverImmediately);
  }
}

uint64_t sub_100DD0E90(uint64_t a1)
{
  *(void *)a1 = off_1022F7E90;

  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;

  qword_10248AC18 = 0;
  sub_100DD8B28(a1 + 256);
  uint64_t v2 = *(void *)(a1 + 248);
  *(void *)(a1 + 248) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  return sub_1007E68B0(a1);
}

void sub_100DD0F48(uint64_t a1)
{
  sub_100DD0E90(a1);

  operator delete();
}

uint64_t sub_100DD0F80(uint64_t a1)
{
  return sub_1007E6DD8(a1, @"Devices", @"Generic");
}

uint64_t sub_100DD0F94(void *a1)
{
  if ([a1 isEqualToString:@"EmergencyLocation"]) {
    return 1;
  }
  if ([a1 isEqualToString:@"Nearby"]) {
    return 4;
  }
  if ([a1 isEqualToString:@"GNSS"]) {
    return 2;
  }
  if ([a1 isEqualToString:@"CLX"]) {
    return 3;
  }
  if ([a1 isEqualToString:@"Harvest"]) {
    return 5;
  }
  if (([a1 isEqualToString:@"Geofence"] & 1) != 0
    || ([a1 isEqualToString:@"Kappa"] & 1) != 0
    || ([a1 isEqualToString:@"Motion"] & 1) != 0
    || ([a1 isEqualToString:@"Routine"] & 1) != 0
    || ([a1 isEqualToString:@"MotionCues"] & 1) != 0)
  {
    return 0;
  }
  if (qword_102419600 != -1) {
    dispatch_once(&qword_102419600, &stru_1022F8040);
  }
  CFStringRef v3 = qword_102419608;
  if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)long long buf = 136446210;
    id v7 = [a1 UTF8String];
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "#CLConfig,mapComponentTagToAwdComponent,unmapped component tag,%{public}s", buf, 0xCu);
  }
  BOOL v4 = sub_10013D1A0(115, 0);
  uint64_t result = 0;
  if (v4)
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    [a1 UTF8String];
    uint64_t v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "static CLDaemonStats_Type::AssetComponent CLConfigAsset::mapComponentTagToAwdComponent(NSString *)", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
    return 0;
  }
  return result;
}

uint64_t sub_100DD124C(void *a1)
{
  if ([a1 isEqualToString:@"EmergencyLocation"]) {
    return 0;
  }
  if ([a1 isEqualToString:@"Nearby"]) {
    return 1;
  }
  if ([a1 isEqualToString:@"GNSS"]) {
    return 2;
  }
  if ([a1 isEqualToString:@"CLX"]) {
    return 3;
  }
  if ([a1 isEqualToString:@"Harvest"]) {
    return 4;
  }
  if ([a1 isEqualToString:@"Geofence"]) {
    return 5;
  }
  if ([a1 isEqualToString:@"Kappa"]) {
    return 6;
  }
  if ([a1 isEqualToString:@"Motion"]) {
    return 7;
  }
  if ([a1 isEqualToString:@"Routine"]) {
    return 8;
  }
  if ([a1 isEqualToString:@"MotionCues"]) {
    return 9;
  }
  if (qword_102419600 != -1) {
    dispatch_once(&qword_102419600, &stru_1022F8040);
  }
  CFStringRef v3 = qword_102419608;
  if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)long long buf = 136446210;
    id v6 = [a1 UTF8String];
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "#CLConfig,mapComponentTagToAssetDescriptor,unmapped component tag,%{public}s", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    [a1 UTF8String];
    BOOL v4 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "static AssetDescriptor CLConfigAsset::mapComponentTagToAssetDescriptor(NSString *)", "%s\n", v4);
    if (v4 != (char *)buf) {
      free(v4);
    }
  }
  return 0xFFFFFFFFLL;
}

__CFString *sub_100DD1524(unsigned int a1)
{
  if (a1 < 0xA) {
    return off_1022F8610[a1];
  }
  if (qword_102419600 != -1) {
    dispatch_once(&qword_102419600, &stru_1022F8040);
  }
  CFStringRef v3 = qword_102419608;
  if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)long long buf = 67240192;
    unsigned int v6 = a1;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "#CLConfig,mapAssetDescriptorToComponentTag,unmapped asset descriptor,%{public}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    BOOL v4 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "static NSString *CLConfigAsset::mapAssetDescriptorToComponentTag(AssetDescriptor)", "%s\n", v4);
    if (v4 != (char *)buf) {
      free(v4);
    }
  }
  return (__CFString *)+[NSString stringWithUTF8String:"UnknownComponent"];
}

BOOL sub_100DD16FC(uint64_t a1, void *a2)
{
  for (uint64_t i = *(uint64_t **)(a1 + 272); i; uint64_t i = (uint64_t *)*i)
  {
    uint64_t v4 = i[3];
    if (v4)
    {
      if (((*(uint64_t (**)(uint64_t, void *))(*(void *)v4 + 32))(v4, a2) & 1) == 0)
      {
        if (qword_102419600 != -1) {
          dispatch_once(&qword_102419600, &stru_1022F8040);
        }
        uint64_t v11 = qword_102419608;
        if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_DEFAULT))
        {
          id v12 = [(__CFString *)sub_100DD1524(*((_DWORD *)i + 4)) UTF8String];
          id v13 = [[objc_msgSend(a2, "assetId") UTF8String];
          *(_DWORD *)long long buf = 136446466;
          id v17 = v12;
          __int16 v18 = 2082;
          id v19 = v13;
          _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "#CLConfig,%{public}s,canAssetBePurged,component does not want asset %{public}s to be purged", buf, 0x16u);
        }
        BOOL result = sub_10013D1A0(115, 2);
        if (result)
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419600 != -1) {
            dispatch_once(&qword_102419600, &stru_1022F8040);
          }
          [(__CFString *)sub_100DD1524(*((_DWORD *)i + 4)) UTF8String];
          [objc_msgSend(a2, "assetId") UTF8String];
          uint64_t v15 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLConfigAsset::canAssetBePurged(MAAsset *)", "%s\n", v15);
          if (v15 != (char *)buf) {
            free(v15);
          }
          return 0;
        }
        return result;
      }
    }
    else
    {
      if (qword_102419600 != -1) {
        dispatch_once(&qword_102419600, &stru_1022F8040);
      }
      uint64_t v5 = qword_102419608;
      if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_ERROR))
      {
        id v6 = [(__CFString *)sub_100DD1524(*((_DWORD *)i + 4)) UTF8String];
        *(_DWORD *)long long buf = 136446210;
        id v17 = v6;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "#CLConfig,%{public}s,canAssetBePurged,pointer for component was null", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419600 != -1) {
          dispatch_once(&qword_102419600, &stru_1022F8040);
        }
        [(__CFString *)sub_100DD1524(*((_DWORD *)i + 4)) UTF8String];
        id v7 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "virtual BOOL CLConfigAsset::canAssetBePurged(MAAsset *)", "%s\n", v7);
        if (v7 != (char *)buf) {
          free(v7);
        }
      }
    }
  }
  if (qword_102419600 != -1) {
    dispatch_once(&qword_102419600, &stru_1022F8040);
  }
  id v8 = qword_102419608;
  if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_DEFAULT))
  {
    id v9 = [objc_msgSend(a2, "assetId") UTF8String];
    *(_DWORD *)long long buf = 136446210;
    id v17 = v9;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#CLConfig,canAssetBePurged,asset %{public}s can be purged", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    [objc_msgSend(a2, "assetId") UTF8String];
    BOOL v14 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLConfigAsset::canAssetBePurged(MAAsset *)", "%s\n", v14);
    if (v14 != (char *)buf) {
      free(v14);
    }
  }
  return 1;
}

void sub_100DD1C1C(uint64_t a1, uint64_t a2)
{
  for (uint64_t i = *(uint64_t **)(a1 + 272); i; uint64_t i = (uint64_t *)*i)
  {
    uint64_t v4 = i[3];
    if (v4)
    {
      (*(void (**)(uint64_t, uint64_t))(*(void *)v4 + 40))(v4, a2);
    }
    else
    {
      if (qword_102419600 != -1) {
        dispatch_once(&qword_102419600, &stru_1022F8040);
      }
      uint64_t v5 = qword_102419608;
      if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_ERROR))
      {
        id v6 = [(__CFString *)sub_100DD1524(*((_DWORD *)i + 4)) UTF8String];
        *(_DWORD *)long long buf = 136446210;
        id v9 = v6;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "#CLConfig,%{public}s,handleBundleChange,pointer for component was null", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419600 != -1) {
          dispatch_once(&qword_102419600, &stru_1022F8040);
        }
        [(__CFString *)sub_100DD1524(*((_DWORD *)i + 4)) UTF8String];
        id v7 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "void CLConfigAsset::handleBundleChange(NSDictionary *)", "%s\n", v7);
        if (v7 != (char *)buf) {
          free(v7);
        }
      }
    }
  }
}

void sub_100DD1E48(uint64_t a1, uint64_t a2)
{
  for (uint64_t i = *(uint64_t **)(a1 + 272); i; uint64_t i = (uint64_t *)*i)
  {
    uint64_t v4 = i[3];
    if (v4)
    {
      (*(void (**)(uint64_t, uint64_t))(*(void *)v4 + 48))(v4, a2);
    }
    else
    {
      if (qword_102419600 != -1) {
        dispatch_once(&qword_102419600, &stru_1022F8040);
      }
      uint64_t v5 = qword_102419608;
      if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_ERROR))
      {
        id v6 = [(__CFString *)sub_100DD1524(*((_DWORD *)i + 4)) UTF8String];
        *(_DWORD *)long long buf = 136446210;
        id v9 = v6;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "#CLConfig,%{public}s,handleDefaultBundleChange,pointer for component was null", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419600 != -1) {
          dispatch_once(&qword_102419600, &stru_1022F8040);
        }
        [(__CFString *)sub_100DD1524(*((_DWORD *)i + 4)) UTF8String];
        id v7 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "void CLConfigAsset::handleDefaultBundleChange(NSDictionary *)", "%s\n", v7);
        if (v7 != (char *)buf) {
          free(v7);
        }
      }
    }
  }
}

void sub_100DD2074(uint64_t a1, int a2, unint64_t a3, char a4)
{
  unint64_t v8 = HIDWORD(a3);
  uint64_t v9 = sub_1000F4E80(a2, 0);
  if (a3 == -1 && v8 == -1)
  {
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    std::string::size_type v10 = qword_102419608;
    if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 68289282;
      *(_DWORD *)id v19 = 0;
      *(_WORD *)&v19[4] = 2082;
      *(void *)&v19[6] = "";
      __int16 v20 = 1026;
      int v21 = a2;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#CLConfig,handleSubscriberMccMncChange,carrier mcc and mnc are invalid\", \"inst\":%{public}d}", buf, 0x18u);
    }
  }
  else
  {
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    uint64_t v11 = a4 & 1;
    id v12 = qword_102419608;
    if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 68290050;
      *(_DWORD *)id v19 = 0;
      *(_WORD *)&v19[4] = 2082;
      *(void *)&v19[6] = "";
      __int16 v20 = 1026;
      int v21 = a2;
      __int16 v22 = 1026;
      int v23 = a3;
      __int16 v24 = 1026;
      int v25 = v8;
      __int16 v26 = 1026;
      int v27 = v11;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#CLConfig,handleSubscriberMccMncChange,carrier mcc and mnc updated\", \"inst\":%{public}d, \"MCC\":%{public}d, \"MNC\":%{public}d, \"is3DigitMnc\":%{public}hhd}", buf, 0x2Au);
    }
    for (uint64_t i = *(uint64_t **)(a1 + 272); i; uint64_t i = (uint64_t *)*i)
    {
      uint64_t v14 = i[3];
      if (v14)
      {
        (*(void (**)(uint64_t, uint64_t, unint64_t, unint64_t, uint64_t))(*(void *)v14 + 64))(v14, v9, a3, v8, v11);
      }
      else
      {
        if (qword_102419600 != -1) {
          dispatch_once(&qword_102419600, &stru_1022F8040);
        }
        uint64_t v15 = qword_102419608;
        if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_ERROR))
        {
          id v16 = [(__CFString *)sub_100DD1524(*((_DWORD *)i + 4)) UTF8String];
          *(_DWORD *)long long buf = 136446210;
          *(void *)id v19 = v16;
          _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "#CLConfig,%{public}s,handleSubscriberMccMncChange,pointer for component was null", buf, 0xCu);
        }
        if (sub_10013D1A0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419600 != -1) {
            dispatch_once(&qword_102419600, &stru_1022F8040);
          }
          [(__CFString *)sub_100DD1524(*((_DWORD *)i + 4)) UTF8String];
          id v17 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 0, "void CLConfigAsset::handleSubscriberMccMncChange(SimInstance, CLCTMccAndMnc)", "%s\n", v17);
          if (v17 != (char *)buf) {
            free(v17);
          }
        }
      }
    }
  }
}

void sub_100DD2410(uint64_t a1)
{
  for (uint64_t i = *(void **)(a1 + 272); i; uint64_t i = (void *)*i)
  {
    uint64_t v3 = i[3];
    if (v3)
    {
      (*(void (**)(uint64_t, void))(*(void *)v3 + 72))(v3, *(void *)(a1 + 304));
    }
    else
    {
      if (qword_102419600 != -1) {
        dispatch_once(&qword_102419600, &stru_1022F8040);
      }
      uint64_t v4 = qword_102419608;
      if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_ERROR))
      {
        id v5 = [@"GNSS" UTF8String];
        *(_DWORD *)long long buf = 136446210;
        id v8 = v5;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "#CLConfig,%{public}s,handleRDCountryChange,pointer for component was null or not found", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419600 != -1) {
          dispatch_once(&qword_102419600, &stru_1022F8040);
        }
        [@"GNSS" UTF8String];
        id v6 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "void CLConfigAsset::handleRDCountryChange()", "%s\n", v6);
        if (v6 != (char *)buf) {
          free(v6);
        }
      }
    }
  }
}

void sub_100DD2638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a2 + 48), "silo") assertOutside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022F8060);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v15 = 1;
    std::string::size_type v10 = _os_activity_create((void *)&_mh_execute_header, "CL: CLConfigAsset::onRegulatoryDomainUpdateNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v10, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022F8060);
    }
    uint64_t v11 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 68289538;
      int v17 = 0;
      __int16 v18 = 2082;
      id v19 = "";
      __int16 v20 = 2082;
      int v21 = "activity";
      __int16 v22 = 2050;
      uint64_t v23 = a2;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLConfigAsset::onRegulatoryDomainUpdateNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v15 = 0;
  }
  id v12 = [*(id *)(a2 + 48) silo];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_100DD8930;
  v13[3] = &unk_1022ACFE0;
  v13[4] = a2;
  v13[5] = a1;
  v13[6] = a3;
  v13[7] = a4;
  v13[8] = a5;
  [v12 sync:v13];
  if (v15) {
    os_activity_scope_leave(&state);
  }
}

void sub_100DD2854(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, os_activity_scope_state_s state, char a19)
{
  if (a19) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DD2874(uint64_t a1, int a2, CFStringRef theString1)
{
  if (theString1)
  {
    if (CFEqual(theString1, kRegulatoryDomainUpdateNotification))
    {
      id v4 = +[RDEstimate currentEstimates];
      if (v4)
      {
        id v5 = v4;
        if ([v4 count])
        {
          if (objc_msgSend(*(id *)(a1 + 304), "isEqualToString:", objc_msgSend(objc_msgSend(v5, "objectAtIndexedSubscript:", 0), "countryCode")))
          {
            if (qword_102419600 != -1) {
              dispatch_once(&qword_102419600, &stru_1022F8040);
            }
            id v6 = qword_102419608;
            if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_DEBUG))
            {
              id v7 = [@"GNSS" UTF8String];
              uint64_t v8 = *(void *)(a1 + 304);
              *(_DWORD *)long long buf = 136446467;
              id v11 = v7;
              __int16 v12 = 2113;
              uint64_t v13 = v8;
              _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "#CLConfig,%{public}s,onRegulatoryDomainUpdateNotification,no change in current country %{private}@", buf, 0x16u);
            }
            if (sub_10013D1A0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_102419600 != -1) {
                dispatch_once(&qword_102419600, &stru_1022F8040);
              }
              [@"GNSS" UTF8String];
              uint64_t v9 = (char *)_os_log_send_and_compose_impl();
              sub_1004BA5E4("Generic", 1, 0, 2, "void CLConfigAsset::onRegulatoryDomainUpdateNotification(CFNotificationCenterRef, CFStringRef, const void *, CFDictionaryRef)", "%s\n", v9);
              if (v9 != (char *)buf) {
                free(v9);
              }
            }
          }
          else
          {
            if (*(void *)(a1 + 304)) {
              *(void *)(a1 + 304) = 0;
            }
            *(void *)(a1 + 304) = [objc_alloc((Class)NSString) initWithString:[objc_msgSend(objc_msgSend(v5, "objectAtIndexedSubscript:", 0), "countryCode")];
            sub_100DD2410(a1);
          }
        }
      }
    }
  }
}

void sub_100DD2B3C(uint64_t a1, void *a2, uint64_t a3)
{
  if (a2)
  {
    *(_DWORD *)(a3 + 48) = sub_100DD0F94([objc_msgSend(objc_msgSend(a2, "attributes"), "objectForKey:", @"Component")]);
    *(_DWORD *)(a3 + 52) = sub_1007E7290(a2);
    *(_DWORD *)(a3 + 56) = sub_1007E72D8(a2);
    *(unsigned char *)(a3 + 85) = sub_1007E6DD8((uint64_t)a2, @"Devices", @"Generic");
  }
}

void sub_100DD2BB8(uint64_t a1, uint64_t a2)
{
  for (uint64_t i = *(uint64_t **)(a1 + 272); i; uint64_t i = (uint64_t *)*i)
  {
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    id v4 = qword_102419608;
    if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_DEFAULT))
    {
      id v5 = [(__CFString *)sub_100DD1524(*((_DWORD *)i + 4)) UTF8String];
      *(_DWORD *)long long buf = 136446210;
      *(void *)&uint8_t buf[4] = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#CLConfig,%{public}s,reportVersionInfo,gathering version info for component", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419600 != -1) {
        dispatch_once(&qword_102419600, &stru_1022F8040);
      }
      id v17 = [(__CFString *)sub_100DD1524(*((_DWORD *)i + 4)) UTF8String];
      int v39 = 136446210;
      id v40 = v17;
      __int16 v18 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLConfigAsset::reportVersionInfo(CLDaemonStats_Type::LocationMobileAssetStatistics &)", "%s\n", v18);
      if (v18 != buf) {
        free(v18);
      }
    }
    if (i[3])
    {
      sub_100DD8940((uint64_t)&v39, a2);
      (*(void (**)(uint64_t, int *))(*(void *)i[3] + 80))(i[3], &v39);
      sub_1007ED19C(v44, v43, (uint64_t)v28);
      int v6 = *((_DWORD *)i + 4);
      *(_DWORD *)long long buf = 166;
      *(_DWORD *)&uint8_t buf[8] = v47;
      int v70 = 168;
      int v71 = v45;
      *(_DWORD *)unint64_t v65 = 0;
      LODWORD(v67) = 167;
      int v68 = v48;
      int v69 = 0;
      int v72 = 0;
      int v73 = 169;
      int v74 = v46;
      int v75 = 0;
      int v76 = 170;
      unsigned __int8 v77 = v49;
      int v78 = 7;
      int v79 = 171;
      int v80 = v6;
      int v81 = 0;
      int v32 = 172;
      if (SHIBYTE(v29) < 0)
      {
        sub_1000DC48C(__p, v28[0], (unint64_t)v28[1]);
        int v7 = v32;
      }
      else
      {
        *(_OWORD *)std::string __p = *(_OWORD *)v28;
        __p[2] = v29;
        int v7 = 172;
      }
      long long v83 = *(_OWORD *)__p;
      int v84 = __p[2];
      memset(__p, 0, sizeof(__p));
      int v82 = v7;
      int v85 = 6;
      __int16 v26 = 0;
      int v27 = 0;
      int v25 = 0;
      long long v30 = (void **)&v25;
      char v31 = 0;
      int v25 = (char *)operator new(0x118uLL);
      __int16 v26 = v25;
      int v27 = v25 + 280;
      __int16 v26 = (unsigned char *)sub_100682A48((uint64_t)&v27, (uint64_t)buf, (uint64_t)&v86, (uint64_t)v25);
      for (uint64_t j = 248; j != -32; j -= 40)
        sub_100118010((uint64_t)&buf[j]);
      if (SHIBYTE(__p[2]) < 0) {
        operator delete(__p[0]);
      }
      uint64_t v13 = *(void **)(a1 + 240);
      memset(v24, 0, sizeof(v24));
      sub_100682C20(v24, (uint64_t)v25, (uint64_t)v26, 0xCCCCCCCCCCCCCCCDLL * ((v26 - v25) >> 3));
      [v13 setMeasurements:sub_10067C03C(v24)];
      *(void *)long long buf = v24;
      sub_100682B1C((void ***)buf);
      uint64_t v14 = *(void **)(a1 + 240);
      if (byte_10248A9A7 < 0)
      {
        sub_1000DC48C(__dst, (void *)xmmword_10248A990, *((unint64_t *)&xmmword_10248A990 + 1));
      }
      else
      {
        *(_OWORD *)long long __dst = xmmword_10248A990;
        uint64_t v23 = unk_10248A9A0;
      }
      [v14 submitEvent:sub_1007EB0E8((long long *)__dst)];
      if (SHIBYTE(v23) < 0) {
        operator delete(__dst[0]);
      }
      if (qword_102419600 != -1) {
        dispatch_once(&qword_102419600, &stru_1022F8040);
      }
      char v15 = qword_102419608;
      if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_DEFAULT))
      {
        id v16 = v28;
        if (SHIBYTE(v29) < 0) {
          id v16 = (void **)v28[0];
        }
        *(_DWORD *)long long buf = 67241730;
        *(_DWORD *)&uint8_t buf[4] = v47;
        *(_WORD *)&uint8_t buf[8] = 1026;
        *(_DWORD *)&buf[10] = v48;
        __int16 v59 = 1026;
        int v60 = v45;
        __int16 v61 = 1026;
        int v62 = v46;
        __int16 v63 = 1026;
        int v64 = v49;
        *(_WORD *)unint64_t v65 = 1026;
        *(_DWORD *)&v65[2] = v6;
        __int16 v66 = 2082;
        unint64_t v67 = v16;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "#CLMA,#careport,VersionReporting,MAVersionReportingDaysSinceLastAssetDownloadAttempt,%{public}d,MAVersionReportingDaysSinceLastAssetDownloadSuccess,%{public}d,MAVersionReportingDaysSinceLastCatalogDownloadAttempt,%{public}d,MAVersionReportingDaysSinceLastCatalogDownloadSuccess,%{public}d,MAVersionReportingGenericAssetUsed,%{public}d,MAVersionReportingAssetComponent,%{public}d,MAVersionReportingAssetVersion,%{public}s", buf, 0x30u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419600 != -1) {
          dispatch_once(&qword_102419600, &stru_1022F8040);
        }
        id v19 = v28;
        if (SHIBYTE(v29) < 0) {
          id v19 = (void **)v28[0];
        }
        int v32 = 67241730;
        int v33 = v47;
        LOWORD(__p[0]) = 1026;
        *(_DWORD *)((char *)__p + 2) = v48;
        HIWORD(__p[0]) = 1026;
        LODWORD(__p[1]) = v45;
        WORD2(__p[1]) = 1026;
        *(_DWORD *)((char *)&__p[1] + 6) = v46;
        WORD1(__p[2]) = 1026;
        HIDWORD(__p[2]) = v49;
        __int16 v35 = 1026;
        int v36 = v6;
        __int16 v37 = 2082;
        uint64_t v38 = v19;
        __int16 v20 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLConfigAsset::reportVersionInfo(CLDaemonStats_Type::LocationMobileAssetStatistics &)", "%s\n", v20);
        if (v20 != buf) {
          free(v20);
        }
      }
      *(void *)long long buf = &v25;
      sub_100682B1C((void ***)buf);
      if (SHIBYTE(v29) < 0) {
        operator delete(v28[0]);
      }
      if (v57 < 0) {
        operator delete(v56);
      }
      if (v55 < 0) {
        operator delete(v54);
      }
      if (v53 < 0) {
        operator delete(v52);
      }
      if (v51 < 0) {
        operator delete(v50);
      }
      if (v42 < 0) {
        operator delete(v41);
      }
    }
    else
    {
      if (qword_102419600 != -1) {
        dispatch_once(&qword_102419600, &stru_1022F8040);
      }
      uint64_t v8 = qword_102419608;
      if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_ERROR))
      {
        id v9 = [(__CFString *)sub_100DD1524(*((_DWORD *)i + 4)) UTF8String];
        *(_DWORD *)long long buf = 136446210;
        *(void *)&uint8_t buf[4] = v9;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "#CLConfig,%{public}s,reportVersionInfo,pointer for component was null", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419600 != -1) {
          dispatch_once(&qword_102419600, &stru_1022F8040);
        }
        id v10 = [(__CFString *)sub_100DD1524(*((_DWORD *)i + 4)) UTF8String];
        int v39 = 136446210;
        id v40 = v10;
        id v11 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "virtual void CLConfigAsset::reportVersionInfo(CLDaemonStats_Type::LocationMobileAssetStatistics &)", "%s\n", v11);
        if (v11 != buf) {
          free(v11);
        }
      }
    }
  }
}

void sub_100DD33C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,char a42)
{
  STACK[0x210] = (unint64_t)&a25;
  sub_100682B1C((void ***)&STACK[0x210]);
  if (a33 < 0) {
    operator delete(__p);
  }
  sub_1007EA7E4((uint64_t)&a42);
  _Unwind_Resume(a1);
}

void sub_100DD34B0(uint64_t a1, void *a2, _DWORD *a3)
{
  if (a2) {
    *a3 = sub_100DD124C([objc_msgSend(objc_msgSend(a2, "attributes"), "objectForKey:", @"Component")]);
  }
}

uint64_t sub_100DD34F4(uint64_t a1, int a2, _DWORD *a3, _DWORD *a4)
{
  v13[0] = a2;
  int v6 = sub_10011853C((void *)(a1 + 256), v13);
  if (v6)
  {
    uint64_t v7 = v6[3];
    if (v7) {
      return (*(uint64_t (**)(uint64_t, _DWORD *, _DWORD *))(*(void *)v7 + 16))(v7, a3, a4);
    }
  }
  if (qword_102419600 != -1) {
    dispatch_once(&qword_102419600, &stru_1022F8040);
  }
  id v9 = qword_102419608;
  if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_ERROR))
  {
    id v10 = [(__CFString *)sub_100DD1524(v13[0]) UTF8String];
    *(_DWORD *)long long buf = 136446210;
    id v16 = v10;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "#CLConfig,%{public}s,getAssetVersionInfo,pointer for component was null or not found", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    id v11 = [(__CFString *)sub_100DD1524(v13[0]) UTF8String];
    v13[1] = 136446210;
    id v14 = v11;
    __int16 v12 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "virtual BOOL CLConfigAsset::getAssetVersionInfo(AssetDescriptor, int32_t &, int32_t &)", "%s\n", v12);
    if (v12 != (char *)buf) {
      free(v12);
    }
  }
  uint64_t result = 0;
  *a3 = -1;
  *a4 = -1;
  return result;
}

uint64_t sub_100DD371C(uint64_t a1, int a2)
{
  v9[0] = a2;
  uint64_t v2 = sub_10011853C((void *)(a1 + 256), v9);
  if (v2)
  {
    uint64_t v3 = v2[3];
    if (v3) {
      return (*(uint64_t (**)(uint64_t))(*(void *)v3 + 24))(v3);
    }
  }
  if (qword_102419600 != -1) {
    dispatch_once(&qword_102419600, &stru_1022F8040);
  }
  id v5 = qword_102419608;
  if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_ERROR))
  {
    id v6 = [(__CFString *)sub_100DD1524(v9[0]) UTF8String];
    *(_DWORD *)long long buf = 136446210;
    id v12 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "#CLConfig,%{public}s,deleteCurrentAsset,pointer for component was null or not found", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    id v7 = [(__CFString *)sub_100DD1524(v9[0]) UTF8String];
    v9[1] = 136446210;
    id v10 = v7;
    uint64_t v8 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "virtual MobileAssetError CLConfigAsset::deleteCurrentAsset(AssetDescriptor)", "%s\n", v8);
    if (v8 != (char *)buf) {
      free(v8);
    }
  }
  return 3;
}

id sub_100DD3920(uint64_t a1)
{
  if (!sub_10073EC08())
  {
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    id v5 = qword_102419608;
    if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "#CLConfig,copyNearbyAssetSettings,called on unsupported device", buf, 2u);
    }
    if (!sub_10013D1A0(115, 0)) {
      return 0;
    }
    bzero(buf, 0x65CuLL);
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    goto LABEL_21;
  }
  *(_DWORD *)long long buf = 1;
  uint64_t v2 = sub_10011853C((void *)(a1 + 256), (int *)buf);
  if (v2)
  {
    uint64_t v3 = v2[3];
    if (v3) {
      return sub_10106CA74(v3);
    }
  }
  if (qword_102419600 != -1) {
    dispatch_once(&qword_102419600, &stru_1022F8040);
  }
  id v6 = qword_102419608;
  if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_ERROR))
  {
    id v7 = [@"Nearby" UTF8String];
    *(_DWORD *)long long buf = 136446210;
    id v10 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "#CLConfig,%{public}s,copyNearbyAssetSettings,pointer for component was null or not found", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    [@"Nearby" UTF8String];
LABEL_21:
    uint64_t v8 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "NSDictionary *CLConfigAsset::copyNearbyAssetSettings()", "%s\n", v8);
    if (v8 != (char *)buf) {
      free(v8);
    }
  }
  return 0;
}

id sub_100DD3BFC(uint64_t a1, void *a2)
{
  if (!sub_10073EC08())
  {
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    id v7 = qword_102419608;
    if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "#CLConfig,copyNearbyAssetSettingsOfAccessoryFile,called on unsupported device", buf, 2u);
    }
    if (!sub_10013D1A0(115, 0)) {
      return 0;
    }
    bzero(buf, 0x65CuLL);
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    goto LABEL_21;
  }
  *(_DWORD *)long long buf = 1;
  id v4 = sub_10011853C((void *)(a1 + 256), (int *)buf);
  if (v4)
  {
    uint64_t v5 = v4[3];
    if (v5) {
      return sub_10106D51C(v5, a2);
    }
  }
  if (qword_102419600 != -1) {
    dispatch_once(&qword_102419600, &stru_1022F8040);
  }
  uint64_t v8 = qword_102419608;
  if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_ERROR))
  {
    id v9 = [@"Nearby" UTF8String];
    *(_DWORD *)long long buf = 136446210;
    id v12 = v9;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "#CLConfig,%{public}s,copyNearbyAssetSettingsOfAccessoryFile,pointer for component was null or not found", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    [@"Nearby" UTF8String];
LABEL_21:
    id v10 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "NSDictionary *CLConfigAsset::copyNearbyAssetSettingsOfAccessoryFile(NSString *)", "%s\n", v10);
    if (v10 != (char *)buf) {
      free(v10);
    }
  }
  return 0;
}

id sub_100DD3EE0(uint64_t a1, _DWORD *a2, _DWORD *a3)
{
  *(_DWORD *)long long buf = 8;
  uint64_t v5 = sub_10011853C((void *)(a1 + 256), (int *)buf);
  if (v5)
  {
    uint64_t v6 = v5[3];
    if (v6) {
      return sub_100EFA158(v6, a2, a3);
    }
  }
  if (qword_102419600 != -1) {
    dispatch_once(&qword_102419600, &stru_1022F8040);
  }
  uint64_t v8 = qword_102419608;
  if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_ERROR))
  {
    id v9 = [@"Routine" UTF8String];
    *(_DWORD *)long long buf = 136446210;
    id v12 = v9;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "#CLConfig,%{public}s,copyRoutineAssetSettings,pointer for component was null or not found", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    [@"Routine" UTF8String];
    id v10 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "NSDictionary *CLConfigAsset::copyRoutineAssetSettings(int32_t &, int32_t &)", "%s\n", v10);
    if (v10 != (char *)buf) {
      free(v10);
    }
  }
  return 0;
}

void sub_100DD40D8(uint64_t a1, uint64_t a2)
{
  for (uint64_t i = *(uint64_t **)(a1 + 272); i; uint64_t i = (uint64_t *)*i)
    sub_100DD4128(a1, a2, *((_DWORD *)i + 4), 0);
}

void sub_100DD4128(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  unsigned int v23 = a3;
  id v7 = sub_10011853C((void *)(a1 + 256), (int *)&v23);
  if (v7 && (uint64_t v8 = v7, v7[3]))
  {
    id v9 = [objc_alloc((Class)MAAssetQuery) initWithType:*(void *)(a1 + 64)];
    [v9 returnTypes:a2];
    [v9 setDoNotBlockBeforeFirstUnlock:1];
    (*(void (**)(uint64_t, id, uint64_t))(*(void *)v8[3] + 88))(v8[3], v9, a4);
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    id v10 = qword_102419608;
    if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_DEFAULT))
    {
      id v11 = [(__CFString *)sub_100DD1524(v23) UTF8String];
      id v12 = [v9 queryParams];
      *(_DWORD *)long long buf = 136446979;
      id v33 = v11;
      __int16 v34 = 1026;
      int v35 = a2;
      __int16 v36 = 1026;
      int v37 = a4;
      __int16 v38 = 2113;
      id v39 = v12;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "#CLConfig,%{public}s,startQuery,returnType,%{public}d,genericDevice,%{public}d,params,%{private}@", buf, 0x22u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419600 != -1) {
        dispatch_once(&qword_102419600, &stru_1022F8040);
      }
      id v17 = [(__CFString *)sub_100DD1524(v23) UTF8String];
      id v18 = [v9 queryParams];
      int v24 = 136446979;
      id v25 = v17;
      __int16 v26 = 1026;
      int v27 = a2;
      __int16 v28 = 1026;
      int v29 = a4;
      __int16 v30 = 2113;
      id v31 = v18;
      id v19 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLConfigAsset::createQuery(MAQueryReturnTypes, AssetDescriptor, BOOL)", "%s\n", v19);
      if (v19 != (char *)buf) {
        free(v19);
      }
    }
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472;
    v20[2] = sub_100DD45A8;
    _OWORD v20[3] = &unk_1022F7F10;
    unsigned int v21 = v23;
    v20[4] = v9;
    v20[5] = a1;
    char v22 = a4;
    [v9 queryMetaData:v20];
  }
  else
  {
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    uint64_t v13 = qword_102419608;
    if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_ERROR))
    {
      id v14 = [(__CFString *)sub_100DD1524(v23) UTF8String];
      *(_DWORD *)long long buf = 136446210;
      id v33 = v14;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "#CLConfig,%{public}s,createQuery,pointer for component was null or not found", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419600 != -1) {
        dispatch_once(&qword_102419600, &stru_1022F8040);
      }
      id v15 = [(__CFString *)sub_100DD1524(v23) UTF8String];
      int v24 = 136446210;
      id v25 = v15;
      id v16 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "void CLConfigAsset::createQuery(MAQueryReturnTypes, AssetDescriptor, BOOL)", "%s\n", v16);
      if (v16 != (char *)buf) {
        free(v16);
      }
    }
  }
}

void sub_100DD45A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = [objc_msgSend(*(id *)(v4 + 48), "silo") queue];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100DD4654;
  void v6[3] = &unk_1022F7EE8;
  int v7 = *(_DWORD *)(a1 + 48);
  v6[4] = *(void *)(a1 + 32);
  void v6[5] = v4;
  char v8 = *(unsigned char *)(a1 + 52);
  v6[6] = a2;
  dispatch_async(v5, v6);
}

void sub_100DD4654(uint64_t a1)
{
}

void sub_100DD466C(uint64_t a1, unsigned int a2, void *a3, int a4, unint64_t a5)
{
  unsigned int v48 = a2;
  if (qword_102419600 != -1) {
    dispatch_once(&qword_102419600, &stru_1022F8040);
  }
  id v10 = qword_102419608;
  if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 136446979;
    *(void *)&uint8_t buf[4] = [(__CFString *)sub_100DD1524(a2) UTF8String];
    __int16 v56 = 1026;
    unsigned int v57 = [a3 returnTypes];
    __int16 v58 = 1026;
    LODWORD(v59[0]) = a4;
    WORD2(v59[0]) = 2113;
    *(void *)((char *)v59 + 6) = [a3 queryParams];
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "#CLConfig,%{public}s,checkQueryResult,returnType,%{public}d,genericDevice,%{public}d,params,%{private}@", buf, 0x22u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    int v49 = 136446979;
    id v50 = [(__CFString *)sub_100DD1524(v48) UTF8String];
    __int16 v51 = 1026;
    unsigned int v52 = [a3 returnTypes];
    __int16 v53 = 1026;
    LODWORD(v54[0]) = a4;
    WORD2(v54[0]) = 2113;
    *(void *)((char *)v54 + 6) = [a3 queryParams];
    __int16 v38 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLConfigAsset::checkQueryResult(AssetDescriptor, MAAssetQuery *, BOOL, MAQueryResult)", "%s\n", v38);
    if (v38 != buf) {
      free(v38);
    }
  }
  id v11 = sub_10011853C((void *)(a1 + 256), (int *)&v48);
  if (v11 && (id v12 = v11, v11[3]))
  {
    int v47 = -1;
    id v13 = sub_1007EB38C(a1, a3, a5, &v47);
    if (v13)
    {
      id v14 = v13;
      if ((*(unsigned int (**)(uint64_t, id))(*(void *)v12[3] + 96))(v12[3], v13))
      {
        if (qword_102419600 != -1) {
          dispatch_once(&qword_102419600, &stru_1022F8040);
        }
        id v15 = qword_102419608;
        if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_DEFAULT))
        {
          id v16 = [(__CFString *)sub_100DD1524(v48) UTF8String];
          unsigned int v17 = sub_1007E7290(v14);
          id v18 = [v14 attributes];
          *(_DWORD *)long long buf = 136446723;
          *(void *)&uint8_t buf[4] = v16;
          __int16 v56 = 1026;
          unsigned int v57 = v17;
          __int16 v58 = 2113;
          v59[0] = v18;
          _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "#CLConfig,%{public}s,accepted new asset,version,%{public}d,attributes,%{private}@", buf, 0x1Cu);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419600 != -1) {
            dispatch_once(&qword_102419600, &stru_1022F8040);
          }
          id v40 = [(__CFString *)sub_100DD1524(v48) UTF8String];
          unsigned int v41 = sub_1007E7290(v14);
          id v42 = [v14 attributes];
          int v49 = 136446723;
          id v50 = v40;
          __int16 v51 = 1026;
          unsigned int v52 = v41;
          __int16 v53 = 2113;
          v54[0] = v42;
          int v43 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLConfigAsset::checkQueryResult(AssetDescriptor, MAAssetQuery *, BOOL, MAQueryResult)", "%s\n", v43);
          if (v43 != buf) {
            free(v43);
          }
        }
        sub_1007EBCD0((char *)a1, v14);
      }
      return;
    }
    if ((v47 + 1) < 2)
    {
      if (qword_102419600 != -1) {
        dispatch_once(&qword_102419600, &stru_1022F8040);
      }
      int v27 = qword_102419608;
      if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_ERROR))
      {
        id v28 = [(__CFString *)sub_100DD1524(v48) UTF8String];
        unsigned int v29 = v47;
        id v30 = [a3 queryParams];
        *(_DWORD *)long long buf = 136446723;
        *(void *)&uint8_t buf[4] = v28;
        __int16 v56 = 1026;
        unsigned int v57 = v29;
        __int16 v58 = 2113;
        v59[0] = v30;
        _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_ERROR, "#CLConfig,%{public}s,unexpected query failure reason,%{public}d,queryParams,%{private}@", buf, 0x1Cu);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419600 != -1) {
          dispatch_once(&qword_102419600, &stru_1022F8040);
        }
        id v31 = [(__CFString *)sub_100DD1524(v48) UTF8String];
        unsigned int v32 = v47;
        id v33 = [a3 queryParams];
        int v49 = 136446723;
        id v50 = v31;
        __int16 v51 = 1026;
        unsigned int v52 = v32;
        __int16 v53 = 2113;
        v54[0] = v33;
        __int16 v26 = (unsigned char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "void CLConfigAsset::checkQueryResult(AssetDescriptor, MAAssetQuery *, BOOL, MAQueryResult)", "%s\n");
LABEL_41:
        if (v26 == buf) {
          return;
        }
LABEL_58:
        free(v26);
      }
    }
    else if (v47 == 2)
    {
      if (qword_102419600 != -1) {
        dispatch_once(&qword_102419600, &stru_1022F8040);
      }
      __int16 v34 = qword_102419608;
      if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_DEFAULT))
      {
        id v35 = [(__CFString *)sub_100DD1524(v48) UTF8String];
        id v36 = [a3 queryParams];
        *(_DWORD *)long long buf = 136446723;
        *(void *)&uint8_t buf[4] = v35;
        __int16 v56 = 1026;
        unsigned int v57 = a5;
        __int16 v58 = 2113;
        v59[0] = v36;
        _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, "#CLConfig,%{public}s,asset query returned no results,result,%{public}d,params,%{private}@", buf, 0x1Cu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419600 != -1) {
          dispatch_once(&qword_102419600, &stru_1022F8040);
        }
        id v44 = [(__CFString *)sub_100DD1524(v48) UTF8String];
        id v45 = [a3 queryParams];
        int v49 = 136446723;
        id v50 = v44;
        __int16 v51 = 1026;
        unsigned int v52 = a5;
        __int16 v53 = 2113;
        v54[0] = v45;
        int v46 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLConfigAsset::checkQueryResult(AssetDescriptor, MAAssetQuery *, BOOL, MAQueryResult)", "%s\n", v46);
        if (v46 != buf) {
          free(v46);
        }
      }
      if ((a4 & 1) == 0)
      {
        *(void *)long long buf = &v48;
        if (*(unsigned char *)(sub_100DD8DAC(a1 + 256, (int *)&v48, (uint64_t)&unk_101D0B290, (_DWORD **)buf)[3] + 24))
        {
          id v37 = [a3 returnTypes];
          sub_100DD4128(a1, v37, v48, 1);
        }
      }
    }
    else if (v47 == 1)
    {
      if (qword_102419600 != -1) {
        dispatch_once(&qword_102419600, &stru_1022F8040);
      }
      unsigned int v21 = qword_102419608;
      if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_DEFAULT))
      {
        id v22 = [(__CFString *)sub_100DD1524(v48) UTF8String];
        id v23 = [a3 queryParams];
        *(_DWORD *)long long buf = 136446723;
        *(void *)&uint8_t buf[4] = v22;
        __int16 v56 = 1026;
        unsigned int v57 = a5;
        __int16 v58 = 2113;
        v59[0] = v23;
        _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "#CLConfig,%{public}s,asset query was unsuccessful,result,%{public}d,params,%{private}@", buf, 0x1Cu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419600 != -1) {
          dispatch_once(&qword_102419600, &stru_1022F8040);
        }
        id v24 = [(__CFString *)sub_100DD1524(v48) UTF8String];
        id v25 = [a3 queryParams];
        int v49 = 136446723;
        id v50 = v24;
        __int16 v51 = 1026;
        unsigned int v52 = a5;
        __int16 v53 = 2113;
        v54[0] = v25;
        __int16 v26 = (unsigned char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLConfigAsset::checkQueryResult(AssetDescriptor, MAAssetQuery *, BOOL, MAQueryResult)", "%s\n");
        goto LABEL_41;
      }
    }
  }
  else
  {
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    id v19 = qword_102419608;
    if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_ERROR))
    {
      id v20 = [(__CFString *)sub_100DD1524(v48) UTF8String];
      *(_DWORD *)long long buf = 136446210;
      *(void *)&uint8_t buf[4] = v20;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "#CLConfig,%{public}s,checkQueryResult,pointer for component was null", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419600 != -1) {
        dispatch_once(&qword_102419600, &stru_1022F8040);
      }
      id v39 = [(__CFString *)sub_100DD1524(v48) UTF8String];
      int v49 = 136446210;
      id v50 = v39;
      __int16 v26 = (unsigned char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "void CLConfigAsset::checkQueryResult(AssetDescriptor, MAAssetQuery *, BOOL, MAQueryResult)", "%s\n", v26);
      if (v26 != buf) {
        goto LABEL_58;
      }
    }
  }
}

void sub_100DD51B0(uint64_t a1, void *a2)
{
  if (a2)
  {
    unsigned int v11 = sub_100DD124C([[objc_msgSend(objc_msgSend(a2, "attributes"), "objectForKey:", @"Component")];
    uint64_t v4 = sub_10011853C((void *)(a1 + 256), (int *)&v11);
    if (v4)
    {
      uint64_t v5 = (id *)v4[3];
      if (v5)
      {
        sub_100DD54A0(v5, a2);
        return;
      }
    }
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    uint64_t v6 = qword_102419608;
    if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_ERROR))
    {
      id v7 = [(__CFString *)sub_100DD1524(v11) UTF8String];
      *(_DWORD *)long long buf = 136446210;
      id v15 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "#CLConfig,%{public}s,readAsset,pointer for component was null or not present", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419600 != -1) {
        dispatch_once(&qword_102419600, &stru_1022F8040);
      }
      id v8 = [(__CFString *)sub_100DD1524(v11) UTF8String];
      int v12 = 136446210;
      id v13 = v8;
LABEL_22:
      id v10 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "virtual void CLConfigAsset::readAsset(MAAsset *)", "%s\n", v10);
      if (v10 != (char *)buf) {
        free(v10);
      }
    }
  }
  else
  {
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    id v9 = qword_102419608;
    if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "#CLConfig,readAsset called with nil", buf, 2u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419600 != -1) {
        dispatch_once(&qword_102419600, &stru_1022F8040);
      }
      LOWORD(v12) = 0;
      goto LABEL_22;
    }
  }
}

void sub_100DD54A0(id *a1, void *a2)
{
  if (a2)
  {
    (*((void (**)(id *))*a1 + 13))(a1);
    a1[16] = a2;
    id v4 = a2;
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    uint64_t v5 = qword_102419608;
    if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_DEFAULT))
    {
      id v6 = [a1[2] UTF8String];
      int v7 = sub_1007E7290(a1[16]);
      id v8 = [a1[16] attributes];
      *(_DWORD *)long long buf = 136446723;
      id v14 = v6;
      __int16 v15 = 1026;
      int v16 = v7;
      __int16 v17 = 2113;
      id v18 = v8;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#CLConfig,%{public}s,reading asset version,%{public}d,attributes,%{private}@", buf, 0x1Cu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419600 != -1) {
        dispatch_once(&qword_102419600, &stru_1022F8040);
      }
      [a1[2] UTF8String];
      sub_1007E7290(a1[16]);
      [a1[16] attributes];
      unsigned int v11 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLConfigAssetComponent::readAsset(MAAsset *)", "%s\n", v11);
      if (v11 != (char *)buf) {
        free(v11);
      }
    }
    (*((void (**)(id *))*a1 + 16))(a1);
  }
  else
  {
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    id v9 = qword_102419608;
    if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_ERROR))
    {
      id v10 = [a1[2] UTF8String];
      *(_DWORD *)long long buf = 136446210;
      id v14 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "#CLConfig,%{public}s,readAsset called with nil", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419600 != -1) {
        dispatch_once(&qword_102419600, &stru_1022F8040);
      }
      [a1[2] UTF8String];
      int v12 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "void CLConfigAssetComponent::readAsset(MAAsset *)", "%s\n", v12);
      if (v12 != (char *)buf) {
        free(v12);
      }
    }
  }
}

uint64_t sub_100DD5888(uint64_t a1, uint64_t a2, void *a3, char a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)a1 = off_1022F7F40;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = a4;
  *(_DWORD *)(a1 + 28) = a5;
  sub_10065AA18(a1 + 32, a6);
  sub_10065AB34(a1 + 64, a7);
  sub_10065AC50(a1 + 96, a8);
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 16) = a3;
  return a1;
}

void sub_100DD592C(_Unwind_Exception *a1)
{
  sub_10065ACE8(v3);
  sub_10065ABCC(v2);
  sub_10065AAB0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100DD5960(uint64_t a1)
{
  *(void *)a1 = off_1022F7F40;

  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 128) = 0;
  sub_10065ACE8((void *)(a1 + 96));
  sub_10065ABCC((void *)(a1 + 64));
  sub_10065AAB0((void *)(a1 + 32));
  return a1;
}

BOOL sub_100DD59DC(uint64_t a1, _DWORD *a2, _DWORD *a3)
{
  *a2 = sub_1007E72D8(*(void **)(a1 + 128));
  int v6 = sub_1007E7290(*(void **)(a1 + 128));
  *a3 = v6;
  return *a2 != -1 && v6 != -1;
}

uint64_t sub_100DD5A34(id *a1)
{
  id v2 = a1[16];
  if (!v2 || ![v2 refreshState] || !sub_1007E6964(a1[16])) {
    return 1;
  }
  if (!sub_1007E6D9C(a1[16])) {
    return 2;
  }
  if (qword_102419600 != -1) {
    dispatch_once(&qword_102419600, &stru_1022F8040);
  }
  uint64_t v3 = qword_102419608;
  if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_DEFAULT))
  {
    id v4 = [a1[2] UTF8String];
    *(_DWORD *)long long buf = 136446210;
    id v8 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#CLConfig,%{public}s,deleteCurrentAsset,deleting currently loaded asset", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    [a1[2] UTF8String];
    int v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual MobileAssetError CLConfigAssetComponent::deleteCurrentAsset()", "%s\n", v6);
    if (v6 != (char *)buf) {
      free(v6);
    }
  }
  (*((void (**)(id *))*a1 + 13))(a1);
  (*((void (**)(id *))*a1 + 15))(a1);
  sub_100180260((uint64_t)(a1 + 8), 1);
  return 0;
}

uint64_t sub_100DD5C90(id *a1)
{
  id v2 = a1[16];
  if (!v2 || [v2 refreshState] && (sub_1007E6964(a1[16]) & 1) != 0) {
    return 1;
  }
  if (qword_102419600 != -1) {
    dispatch_once(&qword_102419600, &stru_1022F8040);
  }
  id v4 = qword_102419608;
  if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_ERROR))
  {
    id v5 = [a1[2] UTF8String];
    *(_DWORD *)long long buf = 136446210;
    id v8 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "#CLConfig,%{public}s,verifyAssetIsPresentOnDisk,asset is no longer available on disc", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    [a1[2] UTF8String];
    int v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "BOOL CLConfigAssetComponent::verifyAssetIsPresentOnDisk()", "%s\n", v6);
    if (v6 != (char *)buf) {
      free(v6);
    }
  }
  (*((void (**)(id *))*a1 + 13))(a1);
  (*((void (**)(id *))*a1 + 15))(a1);
  sub_100180260((uint64_t)(a1 + 8), 1);
  return 0;
}

uint64_t sub_100DD5ED8(id *a1)
{
  if (qword_102419600 != -1) {
    dispatch_once(&qword_102419600, &stru_1022F8040);
  }
  id v2 = qword_102419608;
  if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [a1[2] UTF8String];
    *(_DWORD *)long long buf = 136446210;
    id v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#CLConfig,%{public}s,removeCurrentAsset", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    [a1[2] UTF8String];
    id v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLConfigAssetComponent::removeCurrentAsset()", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
  [a1[16] refreshState];
  sub_100DD60E0((uint64_t)(a1 + 12), (uint64_t)a1[16]);

  a1[16] = 0;
  return (*((uint64_t (**)(id *))*a1 + 14))(a1);
}

uint64_t sub_100DD60E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2;
  uint64_t v2 = *(void *)(a1 + 24);
  if (!v2) {
    sub_10015E48C();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t *))(*(void *)v2 + 48))(v2, &v4);
}

uint64_t sub_100DD6134(uint64_t a1, void *a2)
{
  if (!sub_1007E6DD8((uint64_t)a2, @"Component", *(void **)(a1 + 16))) {
    return 1;
  }
  if (*(void *)(a1 + 128)) {
    return [objc_msgSend(objc_msgSend(a2, "assetId"), "isEqualToString:", objc_msgSend(*(id *)(a1 + 128), "assetId")) ^ 1];
  }
  return 0;
}

void sub_100DD61AC(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a2 + 48) = sub_100DD0F94(*(void **)(a1 + 16));
  uint64_t v4 = *(void **)(a1 + 128);
  if (v4)
  {
    *(_DWORD *)(a2 + 52) = sub_1007E7290(v4);
    *(_DWORD *)(a2 + 56) = sub_1007E72D8(*(void **)(a1 + 128));
    *(unsigned char *)(a2 + 85) = sub_1007E6DD8(*(void *)(a1 + 128), @"Devices", @"Generic");
  }
  else
  {
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    id v5 = qword_102419608;
    if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_DEFAULT))
    {
      id v6 = [*(id *)(a1 + 16) UTF8String];
      *(_DWORD *)long long buf = 136446210;
      id v9 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#Warning #CLConfig,%{public}s,getVersionInfoForAwd,no asset available to report for component", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419600 != -1) {
        dispatch_once(&qword_102419600, &stru_1022F8040);
      }
      [*(id *)(a1 + 16) UTF8String];
      id v7 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLConfigAssetComponent::getVersionInfoForAwd(CLDaemonStats_Type::LocationMobileAssetStatistics &)", "%s\n", v7);
      if (v7 != (char *)buf) {
        free(v7);
      }
    }
  }
}

void sub_100DD63B8(uint64_t a1, void *a2, int a3)
{
  [a2 addKeyValuePair:@"Component" with:*(void *)(a1 + 16)];
  [a2 addKeyValuePair:ASAttributeCompatibilityVersion, +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%d", *(unsigned int *)(a1 + 28)) with];
  if (*(unsigned char *)(a1 + 24))
  {
    if (a3) {
      id v6 = @"Generic";
    }
    else {
      id v6 = (__CFString *)qword_10248AC18;
    }
    [a2 addKeyValuePair:@"DeviceType" with:qword_10248AC10];
    [a2 addKeyValuePair:@"Devices" with:v6];
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    id v7 = qword_102419608;
    if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [*(id *)(a1 + 16) UTF8String];
      unsigned int v9 = [a2 returnTypes];
      int v10 = *(_DWORD *)(a1 + 28);
      *(_DWORD *)long long buf = 136447235;
      id v17 = v8;
      __int16 v18 = 1026;
      unsigned int v19 = v9;
      __int16 v20 = 1026;
      int v21 = v10;
      __int16 v22 = 2081;
      id v23 = [(id)qword_10248AC10 UTF8String];
      __int16 v24 = 2081;
      id v25 = [(__CFString *)v6 UTF8String];
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#CLConfig,%{public}s,querying assets for assets with,returnType,%{public}d,compatibilityVersion,%{public}d,deviceTypeTag,%{private}s,devicesTag,%{private}s", buf, 0x2Cu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419600 != -1) {
        dispatch_once(&qword_102419600, &stru_1022F8040);
      }
      [*(id *)(a1 + 16) UTF8String];
      [a2 returnTypes];
      [(id)qword_10248AC10 UTF8String];
      [(__CFString *)v6 UTF8String];
LABEL_22:
      __int16 v15 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLConfigAssetComponent::fillInAssetQueryKeys(MAAssetQuery *, BOOL) const", "%s\n", v15);
      if (v15 != (char *)buf) {
        free(v15);
      }
    }
  }
  else
  {
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    unsigned int v11 = qword_102419608;
    if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_DEFAULT))
    {
      id v12 = [*(id *)(a1 + 16) UTF8String];
      unsigned int v13 = [a2 returnTypes];
      int v14 = *(_DWORD *)(a1 + 28);
      *(_DWORD *)long long buf = 136446722;
      id v17 = v12;
      __int16 v18 = 1026;
      unsigned int v19 = v13;
      __int16 v20 = 1026;
      int v21 = v14;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "#CLConfig,%{public}s,querying assets for assets with,returnType,%{public}d,compatibilityVersion,%{public}d", buf, 0x18u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419600 != -1) {
        dispatch_once(&qword_102419600, &stru_1022F8040);
      }
      [*(id *)(a1 + 16) UTF8String];
      [a2 returnTypes];
      goto LABEL_22;
    }
  }
}

uint64_t sub_100DD6828(uint64_t a1, void *a2)
{
  if (a2)
  {
    id v3 = *(void **)(a1 + 128);
    if (v3)
    {
      if ([v3 refreshState]
        && (sub_1007E6964(*(void **)(a1 + 128)) & 1) != 0)
      {
        if (!*(unsigned char *)(a1 + 24)) {
          goto LABEL_45;
        }
        int v5 = sub_1007E6DD8(*(void *)(a1 + 128), @"Devices", @"Generic");
        int v6 = sub_1007E6DD8((uint64_t)a2, @"Devices", @"Generic");
        int v7 = v5 ^ v6;
        if (v6 && v7)
        {
          if (qword_102419600 != -1) {
            dispatch_once(&qword_102419600, &stru_1022F8040);
          }
          id v8 = qword_102419608;
          if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_ERROR))
          {
            id v9 = [*(id *)(a1 + 16) UTF8String];
            *(_DWORD *)long long buf = 136446210;
            id v22 = v9;
            _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "#CLConfig,%{public}s,shouldDownloadAsset,cached asset is device specific but new asset is generic", buf, 0xCu);
          }
          if (sub_10013D1A0(115, 0))
          {
            bzero(buf, 0x65CuLL);
            if (qword_102419600 != -1) {
              dispatch_once(&qword_102419600, &stru_1022F8040);
            }
            [*(id *)(a1 + 16) UTF8String];
            __int16 v20 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 0, "virtual BOOL CLConfigAssetComponent::shouldDownloadAsset(MAAsset *)", "%s\n", v20);
            if (v20 != (char *)buf) {
              free(v20);
            }
          }
        }
        if ((v7 & 1) == 0)
        {
LABEL_45:
          int v10 = sub_1007E7290(a2);
          int v11 = sub_1007E7290(*(void **)(a1 + 128));
          if (v10 <= v11)
          {
            if (v10 == v11) {
              return [objc_msgSend(objc_msgSend(a2, "assetId"), "isEqualToString:", objc_msgSend(*(id *)(a1 + 128), "assetId")) ^ 1];
            }
            return 0;
          }
        }
      }
      else
      {
        if (qword_102419600 != -1) {
          dispatch_once(&qword_102419600, &stru_1022F8040);
        }
        id v17 = qword_102419608;
        if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_ERROR))
        {
          id v18 = [*(id *)(a1 + 16) UTF8String];
          *(_DWORD *)long long buf = 136446210;
          id v22 = v18;
          _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, "#CLConfig,%{public}s,shouldDownloadAsset,cached asset is no longer available on disc", buf, 0xCu);
        }
        if (sub_10013D1A0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419600 != -1) {
            dispatch_once(&qword_102419600, &stru_1022F8040);
          }
          [*(id *)(a1 + 16) UTF8String];
          unsigned int v19 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 0, "virtual BOOL CLConfigAssetComponent::shouldDownloadAsset(MAAsset *)", "%s\n", v19);
          if (v19 != (char *)buf) {
            free(v19);
          }
        }
        (*(void (**)(uint64_t))(*(void *)a1 + 104))(a1);
        (*(void (**)(uint64_t))(*(void *)a1 + 120))(a1);
      }
    }
    return 1;
  }
  else
  {
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    unsigned int v13 = qword_102419608;
    if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_ERROR))
    {
      id v14 = [*(id *)(a1 + 16) UTF8String];
      *(_DWORD *)long long buf = 136446210;
      id v22 = v14;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "#CLConfig,%{public}s,shouldDownloadAsset,asset was nil", buf, 0xCu);
    }
    BOOL v15 = sub_10013D1A0(115, 0);
    uint64_t result = 0;
    if (v15)
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419600 != -1) {
        dispatch_once(&qword_102419600, &stru_1022F8040);
      }
      [*(id *)(a1 + 16) UTF8String];
      int v16 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "virtual BOOL CLConfigAssetComponent::shouldDownloadAsset(MAAsset *)", "%s\n", v16);
      if (v16 != (char *)buf) {
        free(v16);
      }
      return 0;
    }
  }
  return result;
}

BOOL sub_100DD6DC0(uint64_t a1, void *a2, uint64_t a3)
{
  int v6 = +[NSURL URLWithString:relativeToURL:](NSURL, "URLWithString:relativeToURL:", a2, [*(id *)(a1 + 128) getLocalFileUrl]);
  if (qword_102419600 != -1) {
    dispatch_once(&qword_102419600, &stru_1022F8040);
  }
  int v7 = qword_102419608;
  if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_DEFAULT))
  {
    id v8 = [*(id *)(a1 + 16) UTF8String];
    LODWORD(buf.__r_.__value_.__l.__data_) = 136446467;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v8;
    WORD2(buf.__r_.__value_.__r.__words[1]) = 2081;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)[(NSString *)[(NSURL *)v6 absoluteString] UTF8String];
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#CLConfig,%{public}s,reading plist from %{private}s", (uint8_t *)&buf, 0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    id v29 = [*(id *)(a1 + 16) UTF8String];
    LODWORD(v44.__r_.__value_.__l.__data_) = 136446467;
    *(std::string::size_type *)((char *)v44.__r_.__value_.__r.__words + 4) = (std::string::size_type)v29;
    WORD2(v44.__r_.__value_.__r.__words[1]) = 2081;
    *(std::string::size_type *)((char *)&v44.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)[(NSString *)[(NSURL *)v6 absoluteString] UTF8String];
    id v30 = (std::string *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLConfigAssetComponent::loadPlistFromAsset(NSString *, CLNameValuePair &) const", "%s\n", (const char *)v30);
    if (v30 != &buf) {
      free(v30);
    }
  }
  uint64_t v43 = 0;
  id v9 = +[NSMutableDictionary dictionaryWithContentsOfURL:v6 error:&v43];
  uint64_t v10 = v43;
  if (!v43)
  {
    id v14 = v9;
    sub_1004CE540(&buf, v9);
    sub_1004CE798(a3, (uint64_t)&buf);
    sub_10013F3C4(&buf);
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    BOOL v15 = qword_102419608;
    if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_DEFAULT))
    {
      id v16 = [*(id *)(a1 + 16) UTF8String];
      id v17 = [a2 UTF8String];
      LODWORD(buf.__r_.__value_.__l.__data_) = 136446467;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v16;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2081;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v17;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "#CLConfig,%{public}s,plist read successful from %{private}s", (uint8_t *)&buf, 0x16u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_102419600 != -1) {
        dispatch_once(&qword_102419600, &stru_1022F8040);
      }
      id v34 = [*(id *)(a1 + 16) UTF8String];
      id v35 = [a2 UTF8String];
      LODWORD(v44.__r_.__value_.__l.__data_) = 136446467;
      *(std::string::size_type *)((char *)v44.__r_.__value_.__r.__words + 4) = (std::string::size_type)v34;
      WORD2(v44.__r_.__value_.__r.__words[1]) = 2081;
      *(std::string::size_type *)((char *)&v44.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v35;
      id v36 = (std::string *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLConfigAssetComponent::loadPlistFromAsset(NSString *, CLNameValuePair &) const", "%s\n", (const char *)v36);
      if (v36 != &buf) {
        free(v36);
      }
    }
    sub_100134750(&v40, "#CLConfig,");
    id v18 = std::string::append(&v40, (const std::string::value_type *)[*(id *)(a1 + 16) UTF8String]);
    long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    v41.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v41.__r_.__value_.__l.__data_ = v19;
    v18->__r_.__value_.__l.__size_ = 0;
    v18->__r_.__value_.__r.__words[2] = 0;
    v18->__r_.__value_.__r.__words[0] = 0;
    __int16 v20 = std::string::append(&v41, ",");
    long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    v44.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v44.__r_.__value_.__l.__data_ = v21;
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    id v22 = std::string::append(&v44, (const std::string::value_type *)[a2 UTF8String]);
    long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
    buf.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
    *(_OWORD *)&buf.__r_.__value_.__l.__data_ = v23;
    v22->__r_.__value_.__l.__size_ = 0;
    v22->__r_.__value_.__r.__words[2] = 0;
    v22->__r_.__value_.__r.__words[0] = 0;
    __int16 v24 = std::string::append(&buf, ",");
    __int16 v26 = (void *)v24->__r_.__value_.__r.__words[0];
    unint64_t size = v24->__r_.__value_.__l.__size_;
    v42[0] = v24->__r_.__value_.__r.__words[2];
    *(_DWORD *)((char *)v42 + 3) = *(_DWORD *)((char *)&v24->__r_.__value_.__r.__words[2] + 3);
    int v27 = SHIBYTE(v24->__r_.__value_.__r.__words[2]);
    v24->__r_.__value_.__l.__size_ = 0;
    v24->__r_.__value_.__r.__words[2] = 0;
    v24->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(buf.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v44.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v41.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v40.__r_.__value_.__l.__data_);
      if ((v27 & 0x80000000) == 0) {
        goto LABEL_26;
      }
    }
    else if ((v27 & 0x80000000) == 0)
    {
LABEL_26:
      *(void *)&long long __p = v26;
      *((void *)&__p + 1) = size;
      *(_DWORD *)__int16 v38 = v42[0];
      *(_DWORD *)&v38[3] = *(_DWORD *)((char *)v42 + 3);
      char v39 = v27;
      goto LABEL_29;
    }
    sub_1000DC48C(&__p, v26, size);
LABEL_29:
    sub_1007E7320(&__p, v14);
    if (v39 < 0)
    {
      operator delete((void *)__p);
      if ((v27 & 0x80000000) == 0) {
        return v10 == 0;
      }
    }
    else if ((v27 & 0x80000000) == 0)
    {
      return v10 == 0;
    }
    operator delete(v26);
    return v10 == 0;
  }
  if (qword_102419600 != -1) {
    dispatch_once(&qword_102419600, &stru_1022F8040);
  }
  int v11 = qword_102419608;
  if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_DEFAULT))
  {
    id v12 = [*(id *)(a1 + 16) UTF8String];
    id v13 = [a2 UTF8String];
    LODWORD(buf.__r_.__value_.__l.__data_) = 136446723;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v12;
    WORD2(buf.__r_.__value_.__r.__words[1]) = 2081;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v13;
    HIWORD(buf.__r_.__value_.__r.__words[2]) = 2112;
    uint64_t v47 = v43;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "#CLConfig,%{public}s,error reading plist,%{private}s,error,%@", (uint8_t *)&buf, 0x20u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    id v31 = [*(id *)(a1 + 16) UTF8String];
    id v32 = [a2 UTF8String];
    LODWORD(v44.__r_.__value_.__l.__data_) = 136446723;
    *(std::string::size_type *)((char *)v44.__r_.__value_.__r.__words + 4) = (std::string::size_type)v31;
    WORD2(v44.__r_.__value_.__r.__words[1]) = 2081;
    *(std::string::size_type *)((char *)&v44.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v32;
    HIWORD(v44.__r_.__value_.__r.__words[2]) = 2112;
    uint64_t v45 = v43;
    id v33 = (std::string *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLConfigAssetComponent::loadPlistFromAsset(NSString *, CLNameValuePair &) const", "%s\n", (const char *)v33);
    if (v33 != &buf) {
      free(v33);
    }
  }
  sub_1000E9354(&buf);
  sub_1004CE798(a3, (uint64_t)&buf);
  sub_10013F3C4(&buf);
  return v10 == 0;
}

void sub_100DD74F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44)
{
  operator delete(v44);
  _Unwind_Resume(a1);
}

uint64_t sub_100DD7598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  sub_1000E9354(buf);
  sub_1004CE798(a6, (uint64_t)buf);
  sub_10013F3C4(buf);
  if (sub_1004D5EE4(a2))
  {
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    id v12 = qword_102419608;
    if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_ERROR))
    {
      id v13 = [*(id *)(a1 + 16) UTF8String];
      *(_DWORD *)std::string buf = 136446210;
      id v20 = v13;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "#CLConfig,%{public}s,findCountryBasedInfo,country info dict is empty", buf, 0xCu);
    }
    uint64_t result = sub_10013D1A0(115, 0);
    if (result)
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419600 == -1) {
        goto LABEL_18;
      }
      goto LABEL_21;
    }
  }
  else
  {
    id v15 = [(id)sub_1000E9358(a2) valueForKey:@"CountryInfo"];
    if (v15) {
      return sub_100DD7940(a1, v15, a3, a4, a5, a6);
    }
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    id v16 = qword_102419608;
    if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_ERROR))
    {
      id v17 = [*(id *)(a1 + 16) UTF8String];
      *(_DWORD *)std::string buf = 136446210;
      id v20 = v17;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "#CLConfig,%{public}s,findCountryBasedInfo,no country info array in dict", buf, 0xCu);
    }
    uint64_t result = sub_10013D1A0(115, 0);
    if (result)
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419600 == -1)
      {
LABEL_18:
        [*(id *)(a1 + 16) UTF8String];
        id v18 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "BOOL CLConfigAssetComponent::findCountryBasedInfo(CLNameValuePair &, int32_t, int32_t, BOOL, CLNameValuePair &) const", "%s\n", v18);
        if (v18 != (char *)buf) {
          free(v18);
        }
        return 0;
      }
LABEL_21:
      dispatch_once(&qword_102419600, &stru_1022F8040);
      goto LABEL_18;
    }
  }
  return result;
}

void sub_100DD7924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_10013F3C4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_100DD7940(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  sub_1000E9354(buf);
  sub_1004CE798(a6, (uint64_t)buf);
  sub_10013F3C4(buf);
  if ((a3 - 1000) > 0xFFFFFC18)
  {
    id v15 = +[NSString stringWithFormat:@"%03d", a3];
    if ((a4 - 1000) > 0xFFFFFC18)
    {
      if (a5)
      {
        id v20 = +[NSString stringWithFormat:@"%03d%03d", a3, a4];
        id v16 = &qword_102419000;
      }
      else
      {
        id v20 = +[NSString stringWithFormat:@"%03d%02d", a3, a4];
        id v16 = &qword_102419000;
      }
      long long v19 = v20;
    }
    else
    {
      if (qword_102419600 != -1) {
        dispatch_once(&qword_102419600, &stru_1022F8040);
      }
      id v16 = &qword_102419000;
      id v17 = qword_102419608;
      if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_DEFAULT))
      {
        id v18 = [*(id *)(a1 + 16) UTF8String];
        *(_DWORD *)std::string buf = 136446466;
        id v68 = v18;
        __int16 v69 = 1026;
        LODWORD(v70) = a4;
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "#CLConfig,%{public}s,findCountryBasedInfo,invalid mnc,%{public}d,not searching for PLMN", buf, 0x12u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419600 != -1) {
          dispatch_once(&qword_102419600, &stru_1022F8040);
        }
        id v40 = [*(id *)(a1 + 16) UTF8String];
        *(_DWORD *)__int16 v63 = 136446466;
        *(void *)&v63[4] = v40;
        *(_WORD *)&v63[12] = 1026;
        *(_DWORD *)&v63[14] = a4;
        std::string v41 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLConfigAssetComponent::findCountryBasedInfo(NSArray *, int32_t, int32_t, BOOL, CLNameValuePair &) const", "%s\n", v41);
        if (v41 != (char *)buf) {
          free(v41);
        }
      }
      long long v19 = 0;
    }
    *(void *)__int16 v63 = 0;
    *(void *)&v63[8] = v63;
    *(void *)&v63[16] = 0x3052000000;
    int v64 = sub_100177E1C;
    unint64_t v65 = sub_1001775B4;
    uint64_t v66 = 0;
    uint64_t v51 = 0;
    unsigned int v52 = &v51;
    uint64_t v53 = 0x3052000000;
    long long v54 = sub_100177E1C;
    char v55 = sub_1001775B4;
    uint64_t v56 = 0;
    v50[0] = _NSConcreteStackBlock;
    v50[1] = 3221225472;
    v50[2] = sub_100DD841C;
    v50[3] = &unk_1022F7FF8;
    v50[7] = &v51;
    v50[8] = a1;
    v50[4] = v19;
    v50[5] = v15;
    v50[6] = v63;
    [a2 enumerateObjectsUsingBlock:v50];
    if (*(void *)(*(void *)&v63[8] + 40))
    {
      if (qword_102419600 != -1) {
        dispatch_once(&qword_102419600, &stru_1022F8040);
      }
      long long v21 = v16[193];
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
      {
        id v22 = [*(id *)(a1 + 16) UTF8String];
        long long v23 = [(NSString *)v19 UTF8String];
        __int16 v24 = *(const char **)(*(void *)&v63[8] + 40);
        *(_DWORD *)std::string buf = 136446723;
        id v68 = v22;
        __int16 v69 = 2082;
        int v70 = v23;
        __int16 v71 = 2113;
        int v72 = v24;
        _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "#CLConfig,%{public}s,findCountryBasedInfo,found country info for PLMN,%{public}s,info,%{private}@", buf, 0x20u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419600 != -1) {
          dispatch_once(&qword_102419600, &stru_1022F8040);
        }
        id v36 = [*(id *)(a1 + 16) UTF8String];
        id v37 = [(NSString *)v19 UTF8String];
        __int16 v38 = *(const char **)(*(void *)&v63[8] + 40);
        int v57 = 136446723;
        id v58 = v36;
        __int16 v59 = 2082;
        int v60 = v37;
        __int16 v61 = 2113;
        int v62 = v38;
        char v39 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLConfigAssetComponent::findCountryBasedInfo(NSArray *, int32_t, int32_t, BOOL, CLNameValuePair &) const", "%s\n", v39);
        if (v39 != (char *)buf) {
          free(v39);
        }
      }
      sub_1004CE540(buf, *(CFTypeRef *)(*(void *)&v63[8] + 40));
      sub_1004CE798(a6, (uint64_t)buf);
    }
    else
    {
      if (!v52[5])
      {
        if (qword_102419600 != -1) {
          dispatch_once(&qword_102419600, &stru_1022F8040);
        }
        id v30 = v16[193];
        if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
        {
          id v31 = [*(id *)(a1 + 16) UTF8String];
          id v32 = [(NSString *)v15 UTF8String];
          id v33 = [(NSString *)v19 UTF8String];
          *(_DWORD *)std::string buf = 136446722;
          id v68 = v31;
          __int16 v69 = 2082;
          int v70 = v32;
          __int16 v71 = 2082;
          int v72 = v33;
          _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, "#CLConfig,%{public}s,findCountryBasedInfo,did not find country info for MCC,%{public}s,PLMN,%{public}s", buf, 0x20u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419600 != -1) {
            dispatch_once(&qword_102419600, &stru_1022F8040);
          }
          id v46 = [*(id *)(a1 + 16) UTF8String];
          uint64_t v47 = [(NSString *)v15 UTF8String];
          unsigned int v48 = [(NSString *)v19 UTF8String];
          int v57 = 136446722;
          id v58 = v46;
          __int16 v59 = 2082;
          int v60 = v47;
          __int16 v61 = 2082;
          int v62 = v48;
          int v49 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLConfigAssetComponent::findCountryBasedInfo(NSArray *, int32_t, int32_t, BOOL, CLNameValuePair &) const", "%s\n", v49);
          if (v49 != (char *)buf) {
            free(v49);
          }
        }
        uint64_t v14 = 0;
        goto LABEL_34;
      }
      if (qword_102419600 != -1) {
        dispatch_once(&qword_102419600, &stru_1022F8040);
      }
      id v25 = v16[193];
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
      {
        id v26 = [*(id *)(a1 + 16) UTF8String];
        int v27 = [(NSString *)v15 UTF8String];
        id v28 = (const char *)v52[5];
        *(_DWORD *)std::string buf = 136446723;
        id v68 = v26;
        __int16 v69 = 2082;
        int v70 = v27;
        __int16 v71 = 2113;
        int v72 = v28;
        _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "#CLConfig,%{public}s,findCountryBasedInfo,found country info for MCC,%{public}s,info,%{private}@", buf, 0x20u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419600 != -1) {
          dispatch_once(&qword_102419600, &stru_1022F8040);
        }
        id v42 = [*(id *)(a1 + 16) UTF8String];
        uint64_t v43 = [(NSString *)v15 UTF8String];
        std::string v44 = (const char *)v52[5];
        int v57 = 136446723;
        id v58 = v42;
        __int16 v59 = 2082;
        int v60 = v43;
        __int16 v61 = 2113;
        int v62 = v44;
        uint64_t v45 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLConfigAssetComponent::findCountryBasedInfo(NSArray *, int32_t, int32_t, BOOL, CLNameValuePair &) const", "%s\n", v45);
        if (v45 != (char *)buf) {
          free(v45);
        }
      }
      sub_1004CE540(buf, (CFTypeRef)v52[5]);
      sub_1004CE798(a6, (uint64_t)buf);
    }
    sub_10013F3C4(buf);
    uint64_t v14 = 1;
LABEL_34:
    _Block_object_dispose(&v51, 8);
    _Block_object_dispose(v63, 8);
    return v14;
  }
  if (qword_102419600 != -1) {
    dispatch_once(&qword_102419600, &stru_1022F8040);
  }
  id v12 = qword_102419608;
  if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_DEFAULT))
  {
    id v13 = [*(id *)(a1 + 16) UTF8String];
    *(_DWORD *)std::string buf = 136446466;
    id v68 = v13;
    __int16 v69 = 1026;
    LODWORD(v70) = a3;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "#CLConfig,%{public}s,findCountryBasedInfo,invalid mcc,%{public}d", buf, 0x12u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    id v34 = [*(id *)(a1 + 16) UTF8String];
    *(_DWORD *)__int16 v63 = 136446466;
    *(void *)&v63[4] = v34;
    *(_WORD *)&v63[12] = 1026;
    *(_DWORD *)&v63[14] = a3;
    id v35 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLConfigAssetComponent::findCountryBasedInfo(NSArray *, int32_t, int32_t, BOOL, CLNameValuePair &) const", "%s\n", v35);
    if (v35 != (char *)buf) {
      free(v35);
    }
  }
  return 0;
}

void sub_100DD83A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

void sub_100DD841C(uint64_t a1, void *a2, int a3, unsigned char *a4)
{
  uint64_t v8 = *(void *)(a1 + 64);
  id v9 = [a2 valueForKey:@"MCCOrPLMNs"];
  if (v9)
  {
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    int v14[2] = sub_100DD8698;
    v14[3] = &unk_1022F7FD0;
    v14[4] = *(void *)(a1 + 32);
    v14[5] = a2;
    long long v15 = *(_OWORD *)(a1 + 40);
    uint64_t v16 = *(void *)(a1 + 56);
    [v9 enumerateObjectsUsingBlock:v14];
    if (*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)) {
      *a4 = 1;
    }
  }
  else
  {
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8040);
    }
    uint64_t v10 = qword_102419608;
    if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_ERROR))
    {
      id v11 = [*(id *)(v8 + 16) UTF8String];
      *(_DWORD *)std::string buf = 136446466;
      id v22 = v11;
      __int16 v23 = 1026;
      int v24 = a3;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "#CLConfig,%{public}s,findCountryBasedInfo,no MCC/PLMN list,ind,%{public}d", buf, 0x12u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419600 != -1) {
        dispatch_once(&qword_102419600, &stru_1022F8040);
      }
      id v12 = [*(id *)(v8 + 16) UTF8String];
      int v17 = 136446466;
      id v18 = v12;
      __int16 v19 = 1026;
      int v20 = a3;
      id v13 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "BOOL CLConfigAssetComponent::findCountryBasedInfo(NSArray *, int32_t, int32_t, BOOL, CLNameValuePair &) const_block_invoke", "%s\n", v13);
      if (v13 != (char *)buf) {
        free(v13);
      }
    }
  }
}

id sub_100DD8698(void *a1, void *a2, uint64_t a3, unsigned char *a4)
{
  if (a1[4] && (id result = objc_msgSend(a2, "isEqualToString:"), result))
  {
    *(void *)(*(void *)(a1[7] + 8) + 40) = a1[5];
    *a4 = 1;
  }
  else
  {
    id result = [a2 isEqualToString:a1[6]];
    if (result) {
      *(void *)(*(void *)(a1[8] + 8) + 40) = a1[5];
    }
  }
  return result;
}

uint64_t sub_100DD8718(uint64_t a1, int a2, uint64_t a3)
{
  sub_1000E9354(v11);
  uint64_t v12 = -1;
  LODWORD(v12) = sub_1007E7290(*(void **)(a1 + 128));
  HIDWORD(v12) = sub_1007E72D8(*(void **)(a1 + 128));
  int v6 = (const void *)sub_1000E9358(a3);
  CFPropertyListRef DeepCopy = CFPropertyListCreateDeepCopy(kCFAllocatorDefault, v6, 1uLL);
  sub_1004CE540(v10, DeepCopy);
  sub_1004CE798((uint64_t)v11, (uint64_t)v10);
  sub_10013F3C4(v10);
  CFRelease(DeepCopy);
  sub_1004CE794(v9);
  int v9[2] = v12;
  sub_100DD8830(a1 + 32, a2);
  sub_10013F3C4(v9);
  return sub_10013F3C4(v11);
}

void sub_100DD87F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
}

uint64_t sub_100DD8830(uint64_t a1, int a2)
{
  int v4 = a2;
  uint64_t v2 = *(void *)(a1 + 24);
  if (!v2) {
    sub_10015E48C();
  }
  return (*(uint64_t (**)(uint64_t, int *))(*(void *)v2 + 48))(v2, &v4);
}

void sub_100DD8884(id a1)
{
  qword_102419608 = (uint64_t)os_log_create("com.apple.locationd.Utility", "Utility");
}

void sub_100DD88B4(id a1)
{
  qword_102419588 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_100DD88E4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 696))
  {
    if (*(char *)(a1 + 343) < 0) {
      operator delete(*(void **)(a1 + 320));
    }
    uint64_t v2 = *(void **)(a1 + 88);
    if (v2)
    {
      *(void *)(a1 + 96) = v2;
      operator delete(v2);
    }
    *(unsigned char *)(a1 + 696) = 0;
  }
}

void sub_100DD8930(uint64_t a1, int a2)
{
}

uint64_t sub_100DD8940(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  if (*(char *)(a2 + 39) < 0)
  {
    sub_1000DC48C((unsigned char *)(a1 + 16), *(void **)(a2 + 16), *(void *)(a2 + 24));
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 16);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = v4;
  }
  long long v5 = *(_OWORD *)(a2 + 40);
  long long v6 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 70) = *(_OWORD *)(a2 + 70);
  *(_OWORD *)(a1 + 56) = v6;
  *(_OWORD *)(a1 + 40) = v5;
  if (*(char *)(a2 + 111) < 0)
  {
    sub_1000DC48C((unsigned char *)(a1 + 88), *(void **)(a2 + 88), *(void *)(a2 + 96));
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 88);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = v7;
  }
  long long v8 = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = v8;
  if (*(char *)(a2 + 159) < 0)
  {
    sub_1000DC48C((unsigned char *)(a1 + 136), *(void **)(a2 + 136), *(void *)(a2 + 144));
  }
  else
  {
    long long v9 = *(_OWORD *)(a2 + 136);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = v9;
  }
  long long v10 = *(_OWORD *)(a2 + 160);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = v10;
  if (*(char *)(a2 + 207) < 0)
  {
    sub_1000DC48C((unsigned char *)(a1 + 184), *(void **)(a2 + 184), *(void *)(a2 + 192));
  }
  else
  {
    long long v11 = *(_OWORD *)(a2 + 184);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(_OWORD *)(a1 + 184) = v11;
  }
  long long v12 = *(_OWORD *)(a2 + 208);
  *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = v12;
  id v13 = (unsigned char *)(a1 + 232);
  if (*(char *)(a2 + 255) < 0)
  {
    sub_1000DC48C(v13, *(void **)(a2 + 232), *(void *)(a2 + 240));
  }
  else
  {
    long long v14 = *(_OWORD *)(a2 + 232);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    *(_OWORD *)id v13 = v14;
  }
  long long v15 = *(_OWORD *)(a2 + 256);
  *(unsigned char *)(a1 + 272) = *(unsigned char *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = v15;
  return a1;
}

void sub_100DD8AC4(_Unwind_Exception *exception_object)
{
  if (v1[207] < 0) {
    operator delete(*v5);
  }
  if (v1[159] < 0) {
    operator delete(*v4);
  }
  if (v1[111] < 0) {
    operator delete(*v3);
  }
  if (v1[39] < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DD8B28(uint64_t a1)
{
  sub_100DD8B64(a1, *(void **)(a1 + 16));
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void sub_100DD8B64(int a1, void *__p)
{
  if (__p)
  {
    uint64_t v2 = __p;
    do
    {
      id v3 = (void *)*v2;
      uint64_t v4 = v2[3];
      uint64_t v2[3] = 0;
      if (v4) {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
      }
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
}

void sub_100DD8BD4()
{
}

void *sub_100DD8BE8(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = off_1022F8090;
  result[1] = v3;
  return result;
}

uint64_t sub_100DD8C30(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022F8090;
  a2[1] = v2;
  return result;
}

id sub_100DD8C5C(uint64_t a1, void **a2)
{
  return sub_1007ED2DC(*(void *)(a1 + 8), *a2);
}

uint64_t sub_100DD8C68(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100DD8CA8()
{
}

void sub_100DD8CB8()
{
}

void *sub_100DD8CCC(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = off_1022F8120;
  result[1] = v3;
  return result;
}

uint64_t sub_100DD8D14(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022F8120;
  a2[1] = v2;
  return result;
}

void sub_100DD8D40(uint64_t a1, unsigned char *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (*a2) {
    uint64_t v3 = 1;
  }
  else {
    uint64_t v3 = 2;
  }
  sub_100DD4128(v2, v3, 0, 0);
}

uint64_t sub_100DD8D60(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100DD8DA0()
{
}

void *sub_100DD8DAC(uint64_t a1, int *a2, uint64_t a3, _DWORD **a4)
{
  unint64_t v7 = *a2;
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
    long long v10 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v10)
    {
      long long v11 = *v10;
      if (*v10)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v12 == v7)
          {
            if (*((_DWORD *)v11 + 4) == v7) {
              return v11;
            }
          }
          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8) {
                v12 %= v8;
              }
            }
            else
            {
              v12 &= v8 - 1;
            }
            if (v12 != v4) {
              break;
            }
          }
          long long v11 = (void *)*v11;
        }
        while (v11);
      }
    }
  }
  id v13 = (void *)(a1 + 16);
  long long v11 = operator new(0x20uLL);
  void *v11 = 0;
  v11[1] = v7;
  *((_DWORD *)v11 + 4) = **a4;
  v11[3] = 0;
  float v14 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v15 = *(float *)(a1 + 32);
  if (!v8 || (float)(v15 * (float)v8) < v14)
  {
    BOOL v16 = 1;
    if (v8 >= 3) {
      BOOL v16 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v17 = v16 | (2 * v8);
    unint64_t v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18) {
      size_t v19 = v18;
    }
    else {
      size_t v19 = v17;
    }
    sub_100100330(a1, v19);
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
      else {
        unint64_t v4 = v7;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
  }
  uint64_t v20 = *(void *)a1;
  long long v21 = *(void **)(*(void *)a1 + 8 * v4);
  if (v21)
  {
    void *v11 = *v21;
LABEL_38:
    *long long v21 = v11;
    goto LABEL_39;
  }
  void *v11 = *v13;
  void *v13 = v11;
  *(void *)(v20 + 8 * v4) = v13;
  if (*v11)
  {
    unint64_t v22 = *(void *)(*v11 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v22 >= v8) {
        v22 %= v8;
      }
    }
    else
    {
      v22 &= v8 - 1;
    }
    long long v21 = (void *)(*(void *)a1 + 8 * v22);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return v11;
}

void sub_100DD8FE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  sub_100DD8FFC(v11, v10);
  _Unwind_Resume(a1);
}

void sub_100DD8FFC(uint64_t a1, void *__p)
{
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t v3 = __p[3];
    __p[3] = 0;
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
  }
  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

void sub_100DD9080()
{
}

void *sub_100DD9094(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = off_1022F81A0;
  result[1] = v3;
  return result;
}

uint64_t sub_100DD90DC(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022F81A0;
  a2[1] = v2;
  return result;
}

void sub_100DD9108(uint64_t a1, unsigned char *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (*a2) {
    uint64_t v3 = 1;
  }
  else {
    uint64_t v3 = 2;
  }
  sub_100DD4128(v2, v3, 1u, 0);
}

uint64_t sub_100DD9128(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100DD9168()
{
}

void sub_100DD9178()
{
}

void *sub_100DD918C(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = off_1022F8220;
  result[1] = v3;
  return result;
}

uint64_t sub_100DD91D4(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022F8220;
  a2[1] = v2;
  return result;
}

void sub_100DD9200(uint64_t a1, unsigned char *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (*a2) {
    uint64_t v3 = 1;
  }
  else {
    uint64_t v3 = 2;
  }
  sub_100DD4128(v2, v3, 2u, 0);
}

uint64_t sub_100DD9220(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100DD9260()
{
}

void sub_100DD9270()
{
}

void *sub_100DD9284(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = off_1022F82A0;
  result[1] = v3;
  return result;
}

uint64_t sub_100DD92CC(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022F82A0;
  a2[1] = v2;
  return result;
}

void sub_100DD92F8(uint64_t a1, unsigned char *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (*a2) {
    uint64_t v3 = 1;
  }
  else {
    uint64_t v3 = 2;
  }
  sub_100DD4128(v2, v3, 3u, 0);
}

uint64_t sub_100DD9318(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100DD9358()
{
}

void sub_100DD9368()
{
}

void *sub_100DD937C(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = off_1022F8320;
  result[1] = v3;
  return result;
}

uint64_t sub_100DD93C4(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022F8320;
  a2[1] = v2;
  return result;
}

void sub_100DD93F0(uint64_t a1, unsigned char *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (*a2) {
    uint64_t v3 = 1;
  }
  else {
    uint64_t v3 = 2;
  }
  sub_100DD4128(v2, v3, 4u, 0);
}

uint64_t sub_100DD9410(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100DD9450()
{
}

void sub_100DD9460()
{
}

void *sub_100DD9474(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = off_1022F83A0;
  result[1] = v3;
  return result;
}

uint64_t sub_100DD94BC(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022F83A0;
  a2[1] = v2;
  return result;
}

void sub_100DD94E8(uint64_t a1, unsigned char *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (*a2) {
    uint64_t v3 = 1;
  }
  else {
    uint64_t v3 = 2;
  }
  sub_100DD4128(v2, v3, 5u, 0);
}

uint64_t sub_100DD9508(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100DD9548()
{
}

void sub_100DD9558()
{
}

void *sub_100DD956C(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = off_1022F8420;
  result[1] = v3;
  return result;
}

uint64_t sub_100DD95B4(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022F8420;
  a2[1] = v2;
  return result;
}

void sub_100DD95E0(uint64_t a1, unsigned char *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (*a2) {
    uint64_t v3 = 1;
  }
  else {
    uint64_t v3 = 2;
  }
  sub_100DD4128(v2, v3, 6u, 0);
}

uint64_t sub_100DD9600(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100DD9640()
{
}

void sub_100DD9650()
{
}

void *sub_100DD9664(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = off_1022F84A0;
  result[1] = v3;
  return result;
}

uint64_t sub_100DD96AC(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022F84A0;
  a2[1] = v2;
  return result;
}

void sub_100DD96D8(uint64_t a1, unsigned char *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (*a2) {
    uint64_t v3 = 1;
  }
  else {
    uint64_t v3 = 2;
  }
  sub_100DD4128(v2, v3, 7u, 0);
}

uint64_t sub_100DD96F8(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100DD9738()
{
}

void sub_100DD9748()
{
}

void *sub_100DD975C(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = off_1022F8520;
  result[1] = v3;
  return result;
}

uint64_t sub_100DD97A4(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022F8520;
  a2[1] = v2;
  return result;
}

void sub_100DD97D0(uint64_t a1, unsigned char *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (*a2) {
    uint64_t v3 = 1;
  }
  else {
    uint64_t v3 = 2;
  }
  sub_100DD4128(v2, v3, 8u, 0);
}

uint64_t sub_100DD97F0(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100DD9830()
{
}

void sub_100DD9840()
{
}

void *sub_100DD9854(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = off_1022F85A0;
  result[1] = v3;
  return result;
}

uint64_t sub_100DD989C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022F85A0;
  a2[1] = v2;
  return result;
}

void sub_100DD98C8(uint64_t a1, unsigned char *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (*a2) {
    uint64_t v3 = 1;
  }
  else {
    uint64_t v3 = 2;
  }
  sub_100DD4128(v2, v3, 9u, 0);
}

uint64_t sub_100DD98E8(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100DD9928()
{
}

void *sub_100DD9934(void *result, uint64_t a2)
{
  *id result = off_1022F8670;
  result[1] = a2;
  result[2] = 0;
  return result;
}

uint64_t sub_100DD9958(uint64_t a1, _DWORD *a2)
{
  sub_1000C7F88(&v5);
  uint64_t v3 = sub_10006EF84(v5, "MaxHarvestWifis", a2);
  if (v6) {
    sub_1000DB0A0(v6);
  }
  return v3;
}

void sub_100DD99B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1000DB0A0(a10);
  }
  _Unwind_Resume(exception_object);
}

id sub_100DD99CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7 = [[objc_msgSend(*(id *)(a1 + 8), "vendor") proxyForService:@"CLWifiService"];

  return [v7 syncgetStartScanWithType:a2 lowPriority:a3 passive:a4 requester:"wifiharvest"];
}

double sub_100DD9A34(uint64_t a1, uint64_t a2)
{
  id v3 = [[[*(id *)(a1 + 8) vendor] proxyForService:@"CLClientManager"] syncgetNonSystemLocationClientKey];
  if (v3)
  {
    sub_100134750(&v5, (char *)[v3 UTF8String]);
    if (*(char *)(a2 + 23) < 0) {
      operator delete(*(void **)a2);
    }
    double result = *(double *)&v5;
    *(_OWORD *)a2 = v5;
    *(void *)(a2 + 16) = v6;
  }
  return result;
}

const char *sub_100DD9AA8(uint64_t a1, unsigned int a2)
{
  return sub_100D54EB0(a2);
}

BOOL sub_100DD9AB0(uint64_t a1, int a2)
{
  return sub_100570E10(a2);
}

void *sub_100DD9AB8(void *a1)
{
  *a1 = off_1022F8670;
  sub_1003C2C38(a1 + 2, 0);
  return a1;
}

void sub_100DD9B00(void *a1)
{
  *a1 = off_1022F8670;
  sub_1003C2C38(a1 + 2, 0);

  operator delete();
}

uint64_t sub_100DD9B68(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)a1 = a2;
  *(_DWORD *)(a1 + 8) = 0xFFFF;
  *(void *)(a1 + 20) = 0;
  *(void *)(a1 + 12) = 0;
  *(_OWORD *)(a1 + 28) = xmmword_101D1C320;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a1 + 44) = _Q0;
  *(_OWORD *)(a1 + 60) = _Q0;
  long long v12 = _Q0;
  *(_OWORD *)(a1 + 76) = _Q0;
  *(_DWORD *)(a1 + 92) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 96) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 120) = 0;
  *(void *)(a1 + 124) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 132) = 0x7FFFFFFF;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 136) = 0;
  uint64_t v10 = a1 + 168;
  *(unsigned char *)(a1 + 160) = 0;
  sub_101375730(a1 + 168, 120.0);
  sub_10144DA50((void *)(a1 + 216));
  *(void *)(a1 + 248) = a1 + 256;
  *(unsigned char *)(a1 + 232) = 0;
  *(unsigned char *)(a1 + 233) = a3;
  *(_DWORD *)(a1 + 240) = 0;
  *(void *)(a1 + 256) = 0;
  *(void *)(a1 + 264) = 0;
  *(void *)(a1 + 280) = 0;
  *(_DWORD *)(a1 + 234) = 0;
  *(void *)(a1 + 272) = a1 + 280;
  *(void *)(a1 + 288) = 0;
  *(_WORD *)(a1 + 296) = 0;
  *(unsigned char *)(a1 + 298) = 0;
  *(void *)(a1 + 304) = 0;
  *(void *)(a1 + 312) = 0;
  *(void *)(a1 + 317) = 0;
  *(void *)(a1 + 328) = 0xBFF0000000000000;
  sub_1004749D0(a1 + 336, 120, 1, 60.0);
  *(_OWORD *)(a1 + 368) = v12;
  *(_OWORD *)(a1 + 384) = v12;
  *(void *)(a1 + 400) = 0xBFF0000000000000;
  sub_10137574C(v10);
  return a1;
}

void sub_100DD9CA0(_Unwind_Exception *a1)
{
  sub_1000D82B4(v1 + 176);
  _Unwind_Resume(a1);
}

uint64_t sub_100DD9CE4(uint64_t a1)
{
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F86D0);
  }
  uint64_t v2 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Fence: CLFenceMonitorWifi, shutdown", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F86D0);
    }
    long long v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "CLFenceMonitorWifi::~CLFenceMonitorWifi()", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
  *(unsigned char *)(a1 + 237) = 0;
  sub_100DDE574(a1 + 272, *(void **)(a1 + 280));
  *(void *)(a1 + 280) = 0;
  *(void *)(a1 + 288) = 0;
  *(void *)(a1 + 272) = a1 + 280;
  *(_DWORD *)(a1 + 240) = 0;
  sub_100DDE574(a1 + 272, 0);
  sub_100DDE484(a1 + 248, *(void **)(a1 + 256));
  id v3 = *(std::__shared_weak_count **)(a1 + 224);
  if (v3) {
    sub_1000DB0A0(v3);
  }
  sub_1000D82B4(a1 + 176);
  return a1;
}

void sub_100DD9ECC(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_1001C7F8C(a1);
}

uint64_t sub_100DD9EDC(uint64_t result, int a2)
{
  if (*(unsigned __int8 *)(result + 232) != a2) {
    *(unsigned char *)(result + 232) = a2;
  }
  return result;
}

uint64_t sub_100DD9EF0(uint64_t result, int a2)
{
  if (*(unsigned __int8 *)(result + 235) != a2)
  {
    id v3 = (unsigned char *)result;
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F86D0);
    }
    unint64_t v4 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      int v5 = v3[235];
      *(_DWORD *)std::string buf = 67240448;
      int v8 = a2;
      __int16 v9 = 1026;
      int v10 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Fence: companion connected is now, %{public}d, was, %{public}d", buf, 0xEu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F86D0);
      }
      uint64_t v6 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitorWifi::setCompanionConnectedMode(BOOL)", "%s\n", v6);
      if (v6 != (char *)buf) {
        free(v6);
      }
    }
    v3[235] = a2;
    return sub_100DDA0D8(v3);
  }
  return result;
}

uint64_t sub_100DDA0D8(unsigned char *a1)
{
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F86D0);
  }
  uint64_t v2 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Fence: recalculate, take power assertion", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F86D0);
    }
    unint64_t v4 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitorWifi::recalculate()", "%s\n", v4);
    if (v4 != (char *)buf) {
      free(v4);
    }
  }
  uint64_t result = (*(uint64_t (**)(void, const char *))(**(void **)a1 + 64))(*(void *)a1, "recalculate");
  if (!a1[298])
  {
    a1[298] = 1;
    return (*(uint64_t (**)(void))(**(void **)a1 + 88))();
  }
  return result;
}

uint64_t sub_100DDA2D4(uint64_t result, int a2)
{
  if (*(unsigned __int8 *)(result + 234) != a2)
  {
    id v3 = (unsigned char *)result;
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F86D0);
    }
    unint64_t v4 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      int v5 = v3[234];
      *(_DWORD *)std::string buf = 67240448;
      int v8 = a2;
      __int16 v9 = 1026;
      int v10 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Fence: airplane mode is now, %{public}d, was, %{public}d", buf, 0xEu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F86D0);
      }
      uint64_t v6 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitorWifi::setAirplaneMode(BOOL)", "%s\n", v6);
      if (v6 != (char *)buf) {
        free(v6);
      }
    }
    v3[234] = a2;
    return sub_100DDA0D8(v3);
  }
  return result;
}

uint64_t sub_100DDA4BC(uint64_t a1, uint64_t *a2, int a3, double a4)
{
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F86D0);
  }
  int v8 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    if (*((char *)a2 + 23) >= 0) {
      __int16 v9 = a2;
    }
    else {
      __int16 v9 = (uint64_t *)*a2;
    }
    int v10 = a2 + 3;
    if (*((char *)a2 + 47) < 0) {
      int v10 = (uint64_t *)a2[3];
    }
    uint64_t v11 = "exit";
    *(_DWORD *)std::string buf = 136381187;
    if (a3) {
      uint64_t v11 = "entry";
    }
    *(void *)&uint8_t buf[4] = v9;
    __int16 v15 = 2081;
    BOOL v16 = v10;
    __int16 v17 = 2081;
    unint64_t v18 = v11;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "Fence: Starting to monitor %{private}s/%{private}s for %{private}s", buf, 0x20u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F86D0);
    }
    id v13 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLFenceMonitorWifi::addFence(const CFAbsoluteTime, const CLFenceManager_Type::Fence &, BOOL)", "%s\n", v13);
    if (v13 != buf) {
      free(v13);
    }
  }
  if (*((_DWORD *)a2 + 46) == -1) {
    sub_101A8F190();
  }
  *(void *)std::string buf = a2;
  *((unsigned char *)sub_100DDE5D0((uint64_t **)(a1 + 248), (unsigned __int8 *)a2, (uint64_t)&unk_101D0B290, (long long **)buf)
  + 280) = a3;
  sub_100DDA77C(a1, a4);
  sub_100DDA0D8((unsigned char *)a1);
  return 1;
}

void sub_100DDA77C(uint64_t a1, double a2)
{
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F86D0);
  }
  unint64_t v4 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v5 = *(void *)(a1 + 312);
    int v6 = *(_DWORD *)(a1 + 320);
    *(_DWORD *)std::string buf = 134349312;
    uint64_t v9 = v5;
    __int16 v10 = 1026;
    int v11 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Fence: resetConsecutiveExits start, %{public}.1lf, count, %{public}d", buf, 0x12u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F86D0);
    }
    id v7 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitorWifi::resetConsecutiveExits(const CFAbsoluteTime)", "%s\n", v7);
    if (v7 != (char *)buf) {
      free(v7);
    }
  }
  *(double *)(a1 + 312) = a2;
  *(_DWORD *)(a1 + 320) = 0;
  *(unsigned char *)(a1 + 324) = 0;
}

uint64_t sub_100DDA968(uint64_t a1, unsigned __int8 *a2, double a3)
{
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F86D0);
  }
  int v6 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    if ((a2[23] & 0x80u) == 0) {
      id v7 = (uint64_t *)a2;
    }
    else {
      id v7 = *(uint64_t **)a2;
    }
    if ((a2[47] & 0x80u) == 0) {
      int v8 = (uint64_t *)(a2 + 24);
    }
    else {
      int v8 = (uint64_t *)*((void *)a2 + 3);
    }
    *(_DWORD *)std::string buf = 136380931;
    long long v12 = v7;
    __int16 v13 = 2081;
    float v14 = v8;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Fence: Stopping monitoring for %{private}s/%{private}s", buf, 0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F86D0);
    }
    __int16 v10 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLFenceMonitorWifi::removeFence(const CFAbsoluteTime, const CLFenceManager_Type::Fence &)", "%s\n", v10);
    if (v10 != (char *)buf) {
      free(v10);
    }
  }
  sub_100DDE748((uint64_t **)(a1 + 248), a2);
  sub_100DDA77C(a1, a3);
  sub_100DDA0D8((unsigned char *)a1);
  return 1;
}

uint64_t sub_100DDABA8(unsigned char *a1, uint64_t *a2)
{
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F86D0);
  }
  unint64_t v4 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
  {
    if (*((char *)a2 + 23) >= 0) {
      uint64_t v5 = a2;
    }
    else {
      uint64_t v5 = (uint64_t *)*a2;
    }
    if (*((char *)a2 + 47) >= 0) {
      int v6 = a2 + 3;
    }
    else {
      int v6 = (uint64_t *)a2[3];
    }
    *(_DWORD *)std::string buf = 136380931;
    __int16 v10 = v5;
    __int16 v11 = 2081;
    long long v12 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Fence: Got monitoring data changed for %{private}s/%{private}s; recalculating",
      buf,
      0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F86D0);
    }
    int v8 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitorWifi::handleMonitoringDataChanged(const CLFenceManager_Type::Fence &)", "%s\n", v8);
    if (v8 != (char *)buf) {
      free(v8);
    }
  }
  return sub_100DDA0D8(a1);
}

void sub_100DDADBC(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4, uint64_t *a5, uint64_t *a6, signed int a7, unsigned char *a8)
{
  long long v16 = *(_OWORD *)(a1 + 104);
  long long v17 = *(_OWORD *)(a1 + 136);
  v26[7] = *(_OWORD *)(a1 + 120);
  v27[0] = v17;
  *(_OWORD *)((char *)v27 + 12) = *(_OWORD *)(a1 + 148);
  long long v18 = *(_OWORD *)(a1 + 40);
  long long v19 = *(_OWORD *)(a1 + 72);
  v26[3] = *(_OWORD *)(a1 + 56);
  v26[4] = v19;
  v26[5] = *(_OWORD *)(a1 + 88);
  v26[6] = v16;
  long long v20 = *(_OWORD *)(a1 + 24);
  v26[0] = *(_OWORD *)(a1 + 8);
  v26[1] = v20;
  v26[2] = v18;
  double v21 = sub_1001B1B04((uint64_t)v26);
  unint64_t v22 = *(void **)(a1 + 216);
  int v23 = (*(uint64_t (**)(double))(**(void **)a1 + 24))(v21);
  (*(void (**)(void **__return_ptr))(**(void **)a1 + 32))(v24);
  v28[0] = off_1022F8700;
  v28[1] = a1;
  v28[3] = v28;
  sub_10153A150(v22, a2, a3, v23, (uint64_t)v24, (uint64_t)v26, a4, a5, a6, a7, a8, (uint64_t)v28);
  sub_100DDE8A8(v28);
  if (v25 < 0) {
    operator delete(v24[1]);
  }
}

void sub_100DDAF60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  sub_100DDE8A8((void *)(v20 - 136));
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100DDAF8C(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v3 = sub_10001A4C4(a1 + 272, a2);
  if (a1 + 280 == v3) {
    return 0;
  }
  else {
    return *(unsigned int *)(v3 + 280);
  }
}

uint64_t sub_100DDAFCC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 240);
}

void sub_100DDAFD4(void *a1, double a2)
{
  char v71 = 0;
  uint64_t v68 = 0;
  uint64_t v69 = 0;
  uint64_t v70 = 0;
  uint64_t v65 = 0;
  uint64_t v66 = 0;
  uint64_t v67 = 0;
  long long v63 = 0uLL;
  uint64_t v64 = 0;
  uint64_t v4 = a1[33];
  if (!*((unsigned char *)a1 + 233))
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F86D0);
    }
    __int16 v11 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "Fence: isWifiTrackingAvailable is false", buf, 2u);
    }
    if (!sub_10013D1A0(115, 2)) {
      goto LABEL_65;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F86D0);
    }
    *(_WORD *)int v72 = 0;
    long long v12 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitorWifi::recalculateNow(const CFAbsoluteTime)", "%s\n", v12);
LABEL_60:
    if (v12 != (char *)buf) {
      free(v12);
    }
    goto LABEL_65;
  }
  (*(void (**)(void))(*(void *)*a1 + 40))();
  sub_100DDE574((uint64_t)(a1 + 34), (void *)a1[35]);
  a1[35] = 0;
  a1[36] = 0;
  a1[34] = a1 + 35;
  *((_DWORD *)a1 + 60) = 0;
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F86D0);
  }
  uint64_t v5 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    int v6 = *((unsigned __int8 *)a1 + 234);
    int v7 = *((unsigned __int8 *)a1 + 235);
    *(_DWORD *)std::string buf = 134284033;
    *(void *)&uint8_t buf[4] = v4;
    *(_WORD *)&unsigned char buf[12] = 1026;
    *(_DWORD *)&unsigned char buf[14] = v6;
    *(_WORD *)&unsigned char buf[18] = 1026;
    *(_DWORD *)&unsigned char buf[20] = v7;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Fence: Recalculating monitored WiFis for %{private}ld monitored fences, %{public}d,%{public}d", buf, 0x18u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F86D0);
    }
    int v47 = *((unsigned __int8 *)a1 + 234);
    int v48 = *((unsigned __int8 *)a1 + 235);
    *(_DWORD *)int v72 = 134284033;
    *(void *)&v72[4] = v4;
    __int16 v73 = 1026;
    *(_DWORD *)int v74 = v47;
    *(_WORD *)&v74[4] = 1026;
    *(_DWORD *)&v74[6] = v48;
    int v49 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitorWifi::recalculateNow(const CFAbsoluteTime)", "%s\n", v49);
    if (v49 != (char *)buf) {
      free(v49);
    }
  }
  sub_101375C80((uint64_t)(a1 + 21), (uint64_t *)buf, a2, 120.0);
  sub_10017C740((uint64_t *)&v63);
  long long v63 = *(_OWORD *)buf;
  uint64_t v64 = *(void *)&buf[16];
  memset(buf, 0, 24);
  *(void *)int v72 = buf;
  sub_1000D7F78((void ***)v72);
  if ((void)v63 == *((void *)&v63 + 1))
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F86D0);
    }
    int v8 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "Fence: No visible APs to use for fence calculation", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F86D0);
      }
      *(_WORD *)int v72 = 0;
      char v55 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitorWifi::recalculateNow(const CFAbsoluteTime)", "%s\n", v55);
      if (v55 != (char *)buf) {
        free(v55);
      }
    }
    (*(void (**)(void, const char *, uint64_t, double))(*(void *)*a1 + 96))(*a1, "refreshVisible", 1, a2);
  }
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F86D0);
  }
  uint64_t v9 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::string buf = 134283521;
    *(void *)&uint8_t buf[4] = 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(*((void *)&v63 + 1) - v63) >> 3);
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "Fence: Including %{private}ld visible APs in fence calculation", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F86D0);
    }
    *(_DWORD *)int v72 = 134283521;
    *(void *)&v72[4] = 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(*((void *)&v63 + 1) - v63) >> 3);
    id v50 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitorWifi::recalculateNow(const CFAbsoluteTime)", "%s\n", v50);
    if (v50 != (char *)buf) {
      free(v50);
    }
  }
  if (*((unsigned char *)sub_10114344C() + 48)) {
    BOOL v10 = sub_100474AA8((double *)a1 + 42, a2);
  }
  else {
    BOOL v10 = 1;
  }
  if (*((unsigned char *)a1 + 234) || !v4 || !v10)
  {
    if (v10) {
      os_log_type_t v17 = OS_LOG_TYPE_DEBUG;
    }
    else {
      os_log_type_t v17 = OS_LOG_TYPE_DEFAULT;
    }
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F86D0);
    }
    long long v18 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, v17))
    {
      int v19 = *((unsigned __int8 *)a1 + 234);
      *(_DWORD *)std::string buf = 134284033;
      *(void *)&uint8_t buf[4] = v4;
      *(_WORD *)&unsigned char buf[12] = 1026;
      *(_DWORD *)&unsigned char buf[14] = v19;
      *(_WORD *)&unsigned char buf[18] = 1026;
      *(_DWORD *)&unsigned char buf[20] = v10;
      _os_log_impl((void *)&_mh_execute_header, v18, v17, "Fence: avoid fence calculateAPsForFences, numOfFences, %{private}lu, airplane, %{public}d, ePNO allowed by rate limiter, %{public}d", buf, 0x18u);
    }
    if (!sub_10013D1A0(115, 2)) {
      goto LABEL_65;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F86D0);
    }
    int v20 = *((unsigned __int8 *)a1 + 234);
    *(_DWORD *)int v72 = 134284033;
    *(void *)&v72[4] = v4;
    __int16 v73 = 1026;
    *(_DWORD *)int v74 = v20;
    *(_WORD *)&v74[4] = 1026;
    *(_DWORD *)&v74[6] = v10;
    long long v12 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitorWifi::recalculateNow(const CFAbsoluteTime)", "%s\n", v12);
    goto LABEL_60;
  }
  if (*((unsigned char *)a1 + 235) && (sub_100103240(), sub_10010145C()))
  {
    *(void *)&uint8_t buf[8] = 0;
    *(void *)&uint8_t buf[16] = 0;
    *(void *)std::string buf = &buf[8];
    __int16 v13 = (unsigned __int8 *)a1[31];
    if (v13 != (unsigned __int8 *)(a1 + 32))
    {
      while (*((void *)v13 + 33) == *((void *)v13 + 32))
      {
        if ((_os_feature_enabled_impl() & 1) == 0)
        {
          uint64_t v14 = 64;
LABEL_40:
          if ((*((void *)v13 + 24) & v14) != 0) {
            sub_100DDE92C((uint64_t **)buf, v13 + 32, (uint64_t)(v13 + 32));
          }
        }
        __int16 v15 = (unsigned __int8 *)*((void *)v13 + 1);
        if (v15)
        {
          do
          {
            long long v16 = v15;
            __int16 v15 = *(unsigned __int8 **)v15;
          }
          while (v15);
        }
        else
        {
          do
          {
            long long v16 = (unsigned __int8 *)*((void *)v13 + 2);
            BOOL v39 = *(void *)v16 == (void)v13;
            __int16 v13 = v16;
          }
          while (!v39);
        }
        __int16 v13 = v16;
        if (v16 == (unsigned __int8 *)(a1 + 32))
        {
          uint64_t v4 = *(void *)&buf[16];
          goto LABEL_64;
        }
      }
      uint64_t v14 = 8;
      goto LABEL_40;
    }
    uint64_t v4 = 0;
LABEL_64:
    uint64_t v23 = sub_100103240();
    signed int v24 = sub_10073F164(v23);
    sub_100DDADBC((uint64_t)a1, buf, (uint64_t)(a1 + 34), &v68, &v65, (uint64_t *)&v63, v24, &v71);
    sub_100DDE484((uint64_t)buf, *(void **)&buf[8]);
  }
  else
  {
    uint64_t v21 = sub_100103240();
    signed int v22 = sub_10073F164(v21);
    sub_100DDADBC((uint64_t)a1, a1 + 31, (uint64_t)(a1 + 34), &v68, &v65, (uint64_t *)&v63, v22, &v71);
  }
LABEL_65:
  if ((void)v63 == *((void *)&v63 + 1) && v4 && !*((unsigned char *)a1 + 234)) {
    char v71 = 1;
  }
  *((unsigned char *)a1 + 296) = v71;
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F86D0);
  }
  char v25 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    int v26 = *((unsigned __int8 *)a1 + 296);
    *(_DWORD *)std::string buf = 67174657;
    *(_DWORD *)&uint8_t buf[4] = v26;
    _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEBUG, "Fence: fIsContinuousMonitoringNeeded, %{private}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F86D0);
    }
    int v45 = *((unsigned __int8 *)a1 + 296);
    *(_DWORD *)int v72 = 67174657;
    *(_DWORD *)&v72[4] = v45;
    id v46 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitorWifi::recalculateNow(const CFAbsoluteTime)", "%s\n", v46);
    if (v46 != (char *)buf) {
      free(v46);
    }
  }
  if (*((unsigned char *)a1 + 233))
  {
    if (v65 == v66)
    {
      int v27 = 2;
    }
    else
    {
      int v27 = 2;
      if ((void)v63 == *((void *)&v63 + 1))
      {
        if (*((unsigned char *)a1 + 234)) {
          int v27 = 2;
        }
        else {
          int v27 = 6;
        }
      }
    }
    double v28 = *((double *)a1 + 39);
    unsigned int v29 = *((_DWORD *)a1 + 80);
    if (v65 == v66 || v29 > 1)
    {
      if (!*((unsigned char *)a1 + 237))
      {
LABEL_98:
        if (*((unsigned char *)a1 + 324))
        {
          double v35 = a2 - v28;
          if (v35 >= 3600.0)
          {
            if (qword_1024193C0 != -1) {
              dispatch_once(&qword_1024193C0, &stru_1022F86D0);
            }
            id v36 = qword_1024193C8;
            if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)std::string buf = 134283777;
              *(double *)&uint8_t buf[4] = v35;
              *(_WORD *)&unsigned char buf[12] = 2049;
              *(void *)&unsigned char buf[14] = 0x40AC200000000000;
              _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEBUG, "Fence: exit sequence is too long, reset, sinceSequenceStart, %{private}.1lf, %{private}.1lf", buf, 0x16u);
            }
            if (sub_10013D1A0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1024193C0 != -1) {
                dispatch_once(&qword_1024193C0, &stru_1022F86D0);
              }
              *(_DWORD *)int v72 = 134283777;
              *(double *)&v72[4] = v35;
              __int16 v73 = 2049;
              *(void *)int v74 = 0x40AC200000000000;
              id v58 = (char *)_os_log_send_and_compose_impl();
              sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitorWifi::recalculateNow(const CFAbsoluteTime)", "%s\n", v58);
              if (v58 != (char *)buf) {
                free(v58);
              }
            }
            sub_100DDA77C((uint64_t)a1, a2);
          }
          else if (v35 >= (double)(v27 + v29 - 1) * 45.0 + -10.0)
          {
            v27 += *((_DWORD *)a1 + 80);
          }
        }
        if (*((unsigned char *)a1 + 234))
        {
          uint64_t v37 = 0;
        }
        else
        {
          if (v27 >= 10) {
            unsigned int v38 = 10;
          }
          else {
            unsigned int v38 = v27;
          }
          if (v4) {
            BOOL v39 = 1;
          }
          else {
            BOOL v39 = *((unsigned char *)a1 + 235) == 0;
          }
          if (v39) {
            uint64_t v37 = v38;
          }
          else {
            uint64_t v37 = 0;
          }
        }
        *((unsigned char *)a1 + 324) = 0;
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F86D0);
        }
        id v40 = qword_1024193C8;
        if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)std::string buf = 67174657;
          *(_DWORD *)&uint8_t buf[4] = v37;
          _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_DEBUG, "Fence: Setting %{private}d background exit scan count", buf, 8u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F86D0);
          }
          *(_DWORD *)int v72 = 67174657;
          *(_DWORD *)&v72[4] = v37;
          uint64_t v51 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitorWifi::recalculateNow(const CFAbsoluteTime)", "%s\n", v51);
          if (v51 != (char *)buf) {
            free(v51);
          }
        }
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F86D0);
        }
        std::string v41 = qword_1024193C8;
        if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)std::string buf = 134283521;
          *(void *)&uint8_t buf[4] = 0x2E8BA2E8BA2E8BA3 * ((v69 - v68) >> 3);
          _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEBUG, "Fence: Setting %{private}ld background scan entry networks", buf, 0xCu);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F86D0);
          }
          *(_DWORD *)int v72 = 134283521;
          *(void *)&v72[4] = 0x2E8BA2E8BA2E8BA3 * ((v69 - v68) >> 3);
          unsigned int v52 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitorWifi::recalculateNow(const CFAbsoluteTime)", "%s\n", v52);
          if (v52 != (char *)buf) {
            free(v52);
          }
        }
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F86D0);
        }
        id v42 = qword_1024193C8;
        if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)std::string buf = 134283521;
          *(void *)&uint8_t buf[4] = 0x2E8BA2E8BA2E8BA3 * ((v66 - v65) >> 3);
          _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_DEBUG, "Fence: Setting %{private}ld background scan exit networks", buf, 0xCu);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F86D0);
          }
          *(_DWORD *)int v72 = 134283521;
          *(void *)&v72[4] = 0x2E8BA2E8BA2E8BA3 * ((v66 - v65) >> 3);
          uint64_t v53 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitorWifi::recalculateNow(const CFAbsoluteTime)", "%s\n", v53);
          if (v53 != (char *)buf) {
            free(v53);
          }
        }
        *((_DWORD *)a1 + 60) = -1171354717 * ((unint64_t)(v69 - v68) >> 3)
                             - 1171354717 * ((unint64_t)(v66 - v65) >> 3);
        (*(void (**)(void, uint64_t))(*(void *)*a1 + 56))(*a1, v37);
        uint64_t v43 = *a1;
        memset(v62, 0, sizeof(v62));
        sub_1000DA6E8(v62, v68, v69, 0x2E8BA2E8BA2E8BA3 * ((v69 - v68) >> 3));
        memset(v61, 0, sizeof(v61));
        sub_1000DA6E8(v61, v65, v66, 0x2E8BA2E8BA2E8BA3 * ((v66 - v65) >> 3));
        (*(void (**)(uint64_t, void *, void *))(*(void *)v43 + 48))(v43, v62, v61);
        *(void *)std::string buf = v61;
        sub_1000D7F78((void ***)buf);
        *(void *)std::string buf = v62;
        sub_1000D7F78((void ***)buf);
        goto LABEL_135;
      }
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F86D0);
      }
      id v33 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
      {
        int v34 = *((_DWORD *)a1 + 80);
        *(_DWORD *)std::string buf = 67174657;
        *(_DWORD *)&uint8_t buf[4] = v34;
        _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEBUG, "Fence: considered not in leash, %{private}d", buf, 8u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F86D0);
        }
        int v56 = *((_DWORD *)a1 + 80);
        *(_DWORD *)int v72 = 67174657;
        *(_DWORD *)&v72[4] = v56;
        int v57 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitorWifi::recalculateNow(const CFAbsoluteTime)", "%s\n", v57);
        if (v57 != (char *)buf) {
          free(v57);
        }
      }
      char v32 = 0;
    }
    else
    {
      if (!*((unsigned char *)a1 + 237))
      {
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F86D0);
        }
        id v30 = qword_1024193C8;
        if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
        {
          int v31 = *((_DWORD *)a1 + 80);
          *(_DWORD *)std::string buf = 67174657;
          *(_DWORD *)&uint8_t buf[4] = v31;
          _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEBUG, "Fence: considered in leash, %{private}d", buf, 8u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F86D0);
          }
          int v59 = *((_DWORD *)a1 + 80);
          *(_DWORD *)int v72 = 67174657;
          *(_DWORD *)&v72[4] = v59;
          int v60 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitorWifi::recalculateNow(const CFAbsoluteTime)", "%s\n", v60);
          if (v60 != (char *)buf) {
            free(v60);
          }
        }
      }
      char v32 = 1;
    }
    *((unsigned char *)a1 + 237) = v32;
    goto LABEL_98;
  }
LABEL_135:
  *(_WORD *)((char *)a1 + 297) = 0;
  if ((*(unsigned int (**)(void))(*(void *)*a1 + 80))())
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F86D0);
    }
    std::string v44 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v44, OS_LOG_TYPE_INFO, "Fence: recalculate, release power assertion", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F86D0);
      }
      *(_WORD *)int v72 = 0;
      long long v54 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitorWifi::recalculateNow(const CFAbsoluteTime)", "%s\n", v54);
      if (v54 != (char *)buf) {
        free(v54);
      }
    }
    (*(void (**)(void))(*(void *)*a1 + 72))();
  }
  (*(void (**)(double))(*(void *)*a1 + 136))(a2);
  *(void *)std::string buf = &v63;
  sub_1000D7F78((void ***)buf);
  *(void *)std::string buf = &v65;
  sub_1000D7F78((void ***)buf);
  *(void *)std::string buf = &v68;
  sub_1000D7F78((void ***)buf);
}

void sub_100DDC6F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void **a31)
{
  a31 = (void **)&a17;
  sub_1000D7F78(&a31);
  a31 = (void **)&a20;
  sub_1000D7F78(&a31);
  a31 = (void **)&a23;
  sub_1000D7F78(&a31);
  _Unwind_Resume(a1);
}

void sub_100DDC7B8(unsigned char *a1, int a2, double a3)
{
  if (a1[234] || !a1[232])
  {
    uint64_t v4 = (uint64_t)(a1 + 168);
    sub_10137574C(v4);
  }
  else
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F86D0);
    }
    int v7 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::string buf = 67240192;
      int v12 = a2;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Fence: Got kNotificationPower, isWifiPowered, %{public}d", buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F86D0);
      }
      uint64_t v9 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitorWifi::handleWifiPower(const CFAbsoluteTime, BOOL)", "%s\n", v9);
      if (v9 != (char *)buf) {
        free(v9);
      }
    }
    if ((a2 & 1) == 0 && a1[237])
    {
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F86D0);
      }
      int v8 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "Fence: considered not in leash, power", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F86D0);
        }
        BOOL v10 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitorWifi::handleWifiPower(const CFAbsoluteTime, BOOL)", "%s\n", v10);
        if (v10 != (char *)buf) {
          free(v10);
        }
      }
      a1[237] = 0;
    }
    (*(void (**)(void, const char *, uint64_t, double))(**(void **)a1 + 96))(*(void *)a1, "power", 1, a3);
  }
}

void sub_100DDCB48(uint64_t a1, int a2)
{
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022F86D0);
  }
  uint64_t v4 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::string buf = 67174657;
    int v7 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Fence: Got kNotificationWow, WoW, %{private}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F86D0);
    }
    uint64_t v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitorWifi::handleWifiWow(BOOL)", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
  *(unsigned char *)(a1 + 236) = a2;
}

void sub_100DDCCFC(uint64_t a1, double a2)
{
  *(double *)(a1 + 392) = a2;
  sub_100DDA77C(a1, a2);
}

void sub_100DDCD04(uint64_t a1, double a2)
{
  if (*((unsigned char *)sub_10114344C() + 48)) {
    char v4 = sub_1004749E4(a1 + 336, a2);
  }
  else {
    char v4 = 1;
  }
  if (*(unsigned char *)(a1 + 234) || !*(unsigned char *)(a1 + 232))
  {
    sub_10137574C(a1 + 168);
  }
  else
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F86D0);
    }
    uint64_t v5 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::string buf = 136380675;
      uint64_t v14 = "kNotificationBackgroundExit";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Fence: Got WiFi %{private}s, sending kNotificationTriggerReceived", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F86D0);
      }
      BOOL v10 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitorWifi::handleWifiBackgroundExit(const CFAbsoluteTime)", "%s\n", v10);
      if (v10 != (char *)buf) {
        free(v10);
      }
    }
    sub_100DDD284((void *)a1, v4, (uint64_t)"kNotificationBackgroundExit");
    if ((v4 & 1) == 0)
    {
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F86D0);
      }
      int v6 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)std::string buf = 136380675;
        uint64_t v14 = "kNotificationBackgroundExit";
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Fence: Clearing ePNO networks (rate limited): %{private}s", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F86D0);
        }
        __int16 v11 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitorWifi::handleWifiBackgroundExit(const CFAbsoluteTime)", "%s\n", v11);
        if (v11 != (char *)buf) {
          free(v11);
        }
      }
      (*(void (**)(void))(**(void **)a1 + 40))();
    }
    *(double *)(a1 + 376) = a2;
    int v7 = *(_DWORD *)(a1 + 320);
    *(_DWORD *)(a1 + 320) = v7 + 1;
    *(unsigned char *)(a1 + 324) = 1;
    if (v7)
    {
      if ((v7 + 1) >= 2 && *(unsigned char *)(a1 + 237))
      {
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F86D0);
        }
        int v8 = qword_1024193C8;
        if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
        {
          int v9 = *(_DWORD *)(a1 + 320);
          *(_DWORD *)std::string buf = 67174657;
          LODWORD(v14) = v9;
          _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "Fence: considered not in leash, exit, %{private}d", buf, 8u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F86D0);
          }
          int v12 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitorWifi::handleWifiBackgroundExit(const CFAbsoluteTime)", "%s\n", v12);
          if (v12 != (char *)buf) {
            free(v12);
          }
        }
        *(unsigned char *)(a1 + 237) = 0;
      }
    }
    else
    {
      *(double *)(a1 + 312) = a2;
    }
    (*(void (**)(double))(**(void **)a1 + 112))(a2);
  }
}

void sub_100DDD284(void *a1, char a2, uint64_t a3)
{
  uint64_t v5 = a1[33];
  if (*((unsigned char *)a1 + 233)) {
    BOOL v6 = v5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (v6)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F86D0);
    }
    int v7 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      int v8 = *((unsigned __int8 *)a1 + 234);
      *(_DWORD *)std::string buf = 136381187;
      uint64_t v15 = a3;
      __int16 v16 = 1025;
      int v17 = v8;
      __int16 v18 = 1025;
      BOOL v19 = v5 != 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Fence: power assertion not needed, reason, %{private}s, airplane, %{private}d, isMonitoringFences, %{private}d", buf, 0x18u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F86D0);
      }
      int v9 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitorWifi::takePowerAssertionIfNeeded(BOOL, const char *)", "%s\n", v9);
      if (v9 != (char *)buf) {
        free(v9);
      }
    }
  }
  else
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F86D0);
    }
    __int16 v11 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
    {
      int v12 = *((unsigned __int8 *)a1 + 234);
      *(_DWORD *)std::string buf = 136380931;
      uint64_t v15 = a3;
      __int16 v16 = 1025;
      int v17 = v12;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "Fence: take power assertion, reason, %{private}s, airplane, %{private}d", buf, 0x12u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F86D0);
      }
      __int16 v13 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitorWifi::takePowerAssertionIfNeeded(BOOL, const char *)", "%s\n", v13);
      if (v13 != (char *)buf) {
        free(v13);
      }
    }
    if (!*((unsigned char *)a1 + 234)) {
      (*(void (**)(void, uint64_t))(*(void *)*a1 + 64))(*a1, a3);
    }
    *((unsigned char *)a1 + 297) = a2;
  }
}

void sub_100DDD62C(uint64_t a1, double a2)
{
  if (*((unsigned char *)sub_10114344C() + 48)) {
    char v4 = sub_1004749E4(a1 + 336, a2);
  }
  else {
    char v4 = 1;
  }
  if (*(unsigned char *)(a1 + 234) || !*(unsigned char *)(a1 + 232))
  {
    sub_10137574C(a1 + 168);
  }
  else
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F86D0);
    }
    uint64_t v5 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::string buf = 136380675;
      BOOL v10 = "kNotificationBackgroundEntry";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Fence: Got WiFi %{private}s, sending kNotificationTriggerReceived", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F86D0);
      }
      int v7 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitorWifi::handleWifiBackgroundEntry(const CFAbsoluteTime)", "%s\n", v7);
      if (v7 != (char *)buf) {
        free(v7);
      }
    }
    sub_100DDD284((void *)a1, v4, (uint64_t)"kNotificationBackgroundEntry");
    if ((v4 & 1) == 0)
    {
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F86D0);
      }
      BOOL v6 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)std::string buf = 136380675;
        BOOL v10 = "kNotificationBackgroundEntry";
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Fence: Clearing ePNO networks (rate limited): %{private}s", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F86D0);
        }
        int v8 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitorWifi::handleWifiBackgroundEntry(const CFAbsoluteTime)", "%s\n", v8);
        if (v8 != (char *)buf) {
          free(v8);
        }
      }
      (*(void (**)(void))(**(void **)a1 + 40))();
    }
    *(double *)(a1 + 384) = a2;
    sub_100DDA77C(a1, a2);
    (*(void (**)(double))(**(void **)a1 + 104))(a2);
  }
}

void sub_100DDDA3C(uint64_t a1, double *a2, double a3)
{
  if (*(unsigned char *)(a1 + 234) || !*(unsigned char *)(a1 + 232))
  {
    uint64_t v4 = a1 + 168;
    sub_10137574C(v4);
  }
  else
  {
    sub_101375754(a1 + 168, (uint64_t)a2, a3);
    double v7 = *a2;
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F86D0);
    }
    double v8 = vabdd_f64(a3, v7);
    int v9 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
    {
      uint64_t v10 = 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(*((void *)a2 + 2) - *((void *)a2 + 1)) >> 3);
      *(_DWORD *)std::string buf = 134283777;
      double v15 = *(double *)&v10;
      __int16 v16 = 2049;
      double v17 = v8;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "Fence: fLastScanResult, %{private}lu, age, %{private}.1lf", buf, 0x16u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F86D0);
      }
      int v12 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitorWifi::handleWifiScan(const CFAbsoluteTime, const CLWifiService_Type::ScanResult &)", "%s\n", v12);
      if (v12 != (char *)buf) {
        free(v12);
      }
    }
    if (v8 >= 120.0)
    {
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F86D0);
      }
      __int16 v11 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::string buf = 134283521;
        double v15 = v8;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "#Warning Fence: scan result is too old, request one more scan, age, %{private}.1lf ", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F86D0);
        }
        __int16 v13 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitorWifi::handleWifiScan(const CFAbsoluteTime, const CLWifiService_Type::ScanResult &)", "%s\n", v13);
        if (v13 != (char *)buf) {
          free(v13);
        }
      }
    }
    else if (*((void *)a2 + 1) != *((void *)a2 + 2))
    {
      *(double *)(a1 + 400) = a3;
    }
  }
}

void sub_100DDDE28(double *a1, int *a2, double a3)
{
  int v6 = a2[1];
  if (*a2 == 2)
  {
    if (v6 != 2)
    {
      a1[46] = a3;
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F86D0);
      }
      double v7 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
      {
        int v8 = *a2;
        int v9 = a2[1];
        int v10 = *((unsigned __int8 *)a2 + 8);
        int v11 = *((unsigned __int8 *)a2 + 9);
        *(_DWORD *)std::string buf = 67175425;
        int v22 = v8;
        __int16 v23 = 1025;
        int v24 = v9;
        __int16 v25 = 1025;
        int v26 = v10;
        __int16 v27 = 1025;
        int v28 = v11;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Fence: WiFi just lost (from %{private}d to %{private}d); sending trigger, aboutToSleep, %{private}d, recentlyW"
          "oke, %{private}d,",
          buf,
          0x1Au);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F86D0);
        }
        BOOL v19 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitorWifi::handleReachability(const CFAbsoluteTime, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v19);
        if (v19 != (char *)buf) {
          free(v19);
        }
      }
      if (*((unsigned char *)a2 + 8) || !*((unsigned char *)a1 + 236) && *((unsigned char *)a2 + 9))
      {
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022F86D0);
        }
        int v12 = qword_1024193C8;
        if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)std::string buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "Fence: about to sleep or recently woke without WoW, ignoring, kNotificationReachability", buf, 2u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022F86D0);
          }
          __int16 v13 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitorWifi::handleReachability(const CFAbsoluteTime, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v13);
          if (v13 != (char *)buf) {
            free(v13);
          }
        }
      }
      else
      {
        sub_100DDD284(a1, 1, (uint64_t)"Disconnection");
        (*(void (**)(void, const char *, uint64_t, double))(**(void **)a1 + 96))(*(void *)a1, "disconnected", 1, a3);
        if (!*((unsigned char *)a1 + 233) && vabdd_f64(a3, a1[41]) >= 900.0)
        {
          (*(void (**)(double))(**(void **)a1 + 120))(a3);
          a1[41] = a3;
        }
      }
    }
  }
  else if (v6 == 2)
  {
    a1[46] = a3;
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022F86D0);
    }
    uint64_t v14 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      int v15 = *a2;
      int v16 = a2[1];
      int v17 = *((unsigned __int8 *)a2 + 8);
      int v18 = *((unsigned __int8 *)a2 + 9);
      *(_DWORD *)std::string buf = 67175425;
      int v22 = v15;
      __int16 v23 = 1025;
      int v24 = v16;
      __int16 v25 = 1025;
      int v26 = v17;
      __int16 v27 = 1025;
      int v28 = v18;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "Fence: WiFi just connected (from %{private}d to %{private}d); sending trigger, aboutToSleep, %{private}d, recent"
        "lyWoke, %{private}d,",
        buf,
        0x1Au);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022F86D0);
      }
      int v20 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceMonitorWifi::handleReachability(const CFAbsoluteTime, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v20);
      if (v20 != (char *)buf) {
        free(v20);
      }
    }
    if (!*((unsigned char *)a2 + 8)) {
      sub_100DDD284(a1, 1, (uint64_t)"Connection");
    }
    (*(void (**)(void))(**(void **)a1 + 128))();
    (*(void (**)(void, const char *, uint64_t, double))(**(void **)a1 + 96))(*(void *)a1, "connected", 1, a3);
  }
}

void sub_100DDE454(id a1)
{
  qword_1024193C8 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeoFencing");
}

void sub_100DDE484(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100DDE484(a1, *a2);
    sub_100DDE484(a1, a2[1]);
    sub_100DDE4E0((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void sub_100DDE4E0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 224);
  if (v2)
  {
    *(void *)(a1 + 232) = v2;
    operator delete(v2);
  }

  if (*(char *)(a1 + 215) < 0) {
    operator delete(*(void **)(a1 + 192));
  }
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v3 = *(void **)a1;
    operator delete(v3);
  }
}

void sub_100DDE574(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100DDE574(a1, *a2);
    sub_100DDE574(a1, a2[1]);
    sub_100CC966C((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

uint64_t *sub_100DDE5D0(uint64_t **a1, unsigned __int8 *a2, uint64_t a3, long long **a4)
{
  int v6 = (uint64_t **)sub_1009206EC((uint64_t)a1, &v11, a2);
  double v7 = *v6;
  if (!*v6)
  {
    int v8 = v6;
    sub_100DDE67C((uint64_t)a1, a4, (uint64_t)v10);
    sub_1000EDF90(a1, v11, v8, v10[0]);
    double v7 = v10[0];
    v10[0] = 0;
    sub_100DDE6F0((uint64_t)v10, 0);
  }
  return v7;
}

char *sub_100DDE67C@<X0>(uint64_t a1@<X0>, long long **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  int v6 = (char *)operator new(0x120uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = sub_10048AEC0(v6 + 32, *a2);
  v6[280] = 0;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_100DDE6D8(_Unwind_Exception *a1)
{
  sub_100DDE6F0(v1, 0);
  _Unwind_Resume(a1);
}

void sub_100DDE6F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_100DDE4E0((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

uint64_t sub_100DDE748(uint64_t **a1, unsigned __int8 *a2)
{
  uint64_t v3 = (uint64_t *)sub_10001A4C4((uint64_t)a1, a2);
  if (a1 + 1 == (uint64_t **)v3) {
    return 0;
  }
  uint64_t v4 = v3;
  sub_1000F0A30(a1, v3);
  sub_100DDE4E0((uint64_t)(v4 + 4));
  operator delete(v4);
  return 1;
}

void sub_100DDE7A8()
{
}

void *sub_100DDE7BC(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = off_1022F8700;
  result[1] = v3;
  return result;
}

uint64_t sub_100DDE804(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022F8700;
  a2[1] = v2;
  return result;
}

uint64_t sub_100DDE830(uint64_t a1)
{
  return (*(uint64_t (**)(void))(***(void ***)(a1 + 8) + 144))();
}

uint64_t sub_100DDE85C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100DDE89C()
{
}

void *sub_100DDE8A8(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t *sub_100DDE92C(uint64_t **a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = (uint64_t **)sub_1009206EC((uint64_t)a1, &v10, a2);
  int v6 = *v5;
  if (!*v5)
  {
    double v7 = v5;
    sub_100DDE9C0((uint64_t)a1, a3, (uint64_t)v9);
    sub_1000EDF90(a1, v10, v7, v9[0]);
    int v6 = v9[0];
    v9[0] = 0;
    sub_100DDE6F0((uint64_t)v9, 0);
  }
  return v6;
}

char *sub_100DDE9C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  int v6 = (char *)operator new(0x120uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = sub_10048AEC0(v6 + 32, (long long *)a2);
  v6[280] = *(unsigned char *)(a2 + 248);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_100DDEA20(_Unwind_Exception *a1)
{
  sub_100DDE6F0(v1, 0);
  _Unwind_Resume(a1);
}

void sub_100DDEA38(id a1)
{
  qword_1024193D8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Gnss");
}

void sub_100DDEA68(sqlite3 **a1)
{
  if (qword_1024195E0 != -1) {
    dispatch_once(&qword_1024195E0, &stru_1022F87A0);
  }
  uint64_t v2 = off_1024195E8;
  if (os_log_type_enabled((os_log_t)off_1024195E8, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "rollback #sqlitetransaction", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024195E0 != -1) {
      dispatch_once(&qword_1024195E0, &stru_1022F87A0);
    }
    __int16 v11 = 0;
    uint64_t v4 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLSqliteTransaction::rollback()", "%s\n", v4);
    if (v4 != (char *)buf) {
      free(v4);
    }
  }
  if (sqlite3_exec(*a1, "ROLLBACK TRANSACTION", 0, 0, 0))
  {
    if (qword_1024195E0 != -1) {
      dispatch_once(&qword_1024195E0, &stru_1022F87A0);
    }
    uint64_t v3 = off_1024195E8;
    if (os_log_type_enabled((os_log_t)off_1024195E8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "#sqlitetransaction, rollback transaction failed", buf, 2u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024195E0 != -1) {
        dispatch_once(&qword_1024195E0, &stru_1022F87A0);
      }
      __int16 v11 = 0;
      uint64_t v5 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "void CLSqliteTransaction::rollback()", "%s\n", v5);
      if (v5 != (char *)buf) {
        free(v5);
      }
    }
    sub_100DDEDA8(a1, *a1, (uint64_t)&v6);
    v6.__vftable = (std::runtime_error_vtbl *)off_1022C4F28;
    if (v10 < 0) {
      operator delete(__p);
    }
    if (v8 < 0) {
      operator delete(v7);
    }
    std::runtime_error::~runtime_error(&v6);
  }
}

void sub_100DDED9C(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_1001C7F8C(a1);
}

void sub_100DDEDA8(sqlite3 **a1@<X0>, sqlite3 *a2@<X1>, uint64_t a3@<X8>)
{
  int autocommit = sqlite3_get_autocommit(*a1);
  sub_100DDF1AC(*a1, a3);
  int v13 = *(_DWORD *)(a3 + 40);
  int v7 = sqlite3_db_readonly(a2, "main");
  if (qword_1024195E0 != -1) {
    dispatch_once(&qword_1024195E0, &stru_1022F87A0);
  }
  char v8 = off_1024195E8;
  if (os_log_type_enabled((os_log_t)off_1024195E8, OS_LOG_TYPE_FAULT))
  {
    uint64_t v9 = *(char *)(a3 + 71) >= 0 ? a3 + 48 : *(void *)(a3 + 48);
    *(_DWORD *)std::string buf = 68290307;
    int v15 = 0;
    __int16 v16 = 2082;
    int v17 = "";
    __int16 v18 = 2082;
    uint64_t v19 = v9;
    __int16 v20 = 1040;
    int v21 = 4;
    __int16 v22 = 2098;
    __int16 v23 = &v13;
    __int16 v24 = 2081;
    __int16 v25 = std::runtime_error::what((const std::runtime_error *)a3);
    __int16 v26 = 1026;
    int v27 = autocommit;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"#sqlitetransaction error\", \"path\":%{public, location:escape_only}s, \"rc\":%{public, location:SqliteResult}.*P, \"errmsg\":%{private, location:escape_only}s, \"autocommit\":%{public}d}", buf, 0x3Cu);
    if (qword_1024195E0 != -1) {
      dispatch_once(&qword_1024195E0, &stru_1022F87A0);
    }
  }
  char v10 = off_1024195E8;
  if (os_signpost_enabled((os_log_t)off_1024195E8))
  {
    if (*(char *)(a3 + 71) >= 0) {
      uint64_t v11 = a3 + 48;
    }
    else {
      uint64_t v11 = *(void *)(a3 + 48);
    }
    int v12 = std::runtime_error::what((const std::runtime_error *)a3);
    *(_DWORD *)std::string buf = 68290307;
    int v15 = 0;
    __int16 v16 = 2082;
    int v17 = "";
    __int16 v18 = 2082;
    uint64_t v19 = v11;
    __int16 v20 = 1040;
    int v21 = 4;
    __int16 v22 = 2098;
    __int16 v23 = &v13;
    __int16 v24 = 2081;
    __int16 v25 = v12;
    __int16 v26 = 1026;
    int v27 = autocommit;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v10, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "#sqlitetransaction error", "{\"msg%{public}.0s\":\"#sqlitetransaction error\", \"path\":%{public, location:escape_only}s, \"rc\":%{public, location:SqliteResult}.*P, \"errmsg\":%{private, location:escape_only}s, \"autocommit\":%{public}d}", buf, 0x3Cu);
  }
  sub_1005F9B94(a2, (a3 + 48), v7 != 0, v13);
}

void sub_100DDF038(_Unwind_Exception *a1)
{
  sub_1006D5208(v1);
  _Unwind_Resume(a1);
}

__n128 sub_100DDF050(std::runtime_error *a1, uint64_t a2)
{
  uint64_t v3 = std::runtime_error::runtime_error(a1, (const std::runtime_error *)a2);
  v3->__vftable = (std::runtime_error_vtbl *)off_1022C4F28;
  std::runtime_error v4 = *(std::runtime_error *)(a2 + 16);
  v3[2].__vftable = *(std::runtime_error_vtbl **)(a2 + 32);
  v3[1] = v4;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 16) = 0;
  LODWORD(v3[2].__imp_.__imp_) = *(_DWORD *)(a2 + 40);
  __n128 result = *(__n128 *)(a2 + 48);
  v3[4].__vftable = *(std::runtime_error_vtbl **)(a2 + 64);
  v3[3] = (std::runtime_error)result;
  *(void *)(a2 + 56) = 0;
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 48) = 0;
  return result;
}

uint64_t sub_100DDF0C8(uint64_t a1, uint64_t a2, int a3, long long *a4)
{
  char v8 = std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::string *)a2);
  v8->__vftable = (std::runtime_error_vtbl *)off_1022C4F28;
  if (*(char *)(a2 + 23) < 0)
  {
    sub_1000DC48C(&v8[1], *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    std::runtime_error v9 = *(std::runtime_error *)a2;
    v8[2].__vftable = *(std::runtime_error_vtbl **)(a2 + 16);
    v8[1] = v9;
  }
  *(_DWORD *)(a1 + 40) = a3;
  char v10 = (unsigned char *)(a1 + 48);
  if (*((char *)a4 + 23) < 0)
  {
    sub_1000DC48C(v10, *(void **)a4, *((void *)a4 + 1));
  }
  else
  {
    long long v11 = *a4;
    *(void *)(a1 + 64) = *((void *)a4 + 2);
    *(_OWORD *)char v10 = v11;
  }
  return a1;
}

void sub_100DDF180(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 39) < 0) {
    operator delete(*v2);
  }
  std::runtime_error::~runtime_error((std::runtime_error *)v1);
  _Unwind_Resume(a1);
}

void sub_100DDF1AC(sqlite3 *a1@<X0>, uint64_t a2@<X8>)
{
  std::runtime_error v4 = sqlite3_db_filename(a1, "main");
  if (v4) {
    uint64_t v5 = (char *)v4;
  }
  else {
    uint64_t v5 = "Path unavailable";
  }
  sub_100134750(v10, v5);
  std::runtime_error v6 = (char *)sqlite3_errmsg(a1);
  sub_100134750(__p, v6);
  int v7 = sqlite3_errcode(a1);
  sub_100DDF0C8(a2, (uint64_t)__p, v7, (long long *)v10);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  if (v11 < 0) {
    operator delete(v10[0]);
  }
}

void sub_100DDF24C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DDF280(id a1)
{
  off_1024195E8 = os_log_create("com.apple.locationd.Utility", "Database");
}

uint64_t sub_100DDF2B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100B99C70(a1, a2);
  *(void *)uint64_t v4 = &off_1022F87D0;
  *(void *)(v4 + 1544) = 0x7FEFFFFFFFFFFFFFLL;
  *(unsigned char *)(v4 + 1552) = 0;
  sub_101A1F180((unsigned __int8 *)(v4 + 1816), "SimulateSkiWorkoutInterval", &qword_101D8FAB0, 0);
  *(void *)(a1 + 32) = a2;
  *(_OWORD *)(a1 + 1560) = 0u;
  *(_OWORD *)(a1 + 1576) = 0u;
  *(_OWORD *)(a1 + 1592) = 0u;
  *(_OWORD *)(a1 + 1608) = 0u;
  *(_OWORD *)(a1 + 1624) = 0u;
  *(_OWORD *)(a1 + 1640) = 0u;
  *(_OWORD *)(a1 + 1656) = 0u;
  *(_OWORD *)(a1 + 1672) = 0u;
  *(_OWORD *)(a1 + 1688) = 0u;
  *(_OWORD *)(a1 + 1704) = 0u;
  *(_OWORD *)(a1 + 1720) = 0u;
  *(_OWORD *)(a1 + 1736) = 0u;
  *(_OWORD *)(a1 + 1752) = 0u;
  *(_OWORD *)(a1 + 1768) = 0u;
  *(_OWORD *)(a1 + 1784) = 0u;
  *(_OWORD *)(a1 + 1800) = 0u;
  return a1;
}

void sub_100DDF350(_Unwind_Exception *a1)
{
  sub_100B99E30(v1);
  _Unwind_Resume(a1);
}

void sub_100DDF368(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double Current = CFAbsoluteTimeGetCurrent();
  double v5 = *(double *)(a1 + 1544);
  if (v5 == 1.79769313e308)
  {
    *(double *)(a1 + 1544) = Current;
    double v5 = Current;
  }
  if (vabdd_f64(Current, v5) >= *(double *)(a1 + 1824))
  {
    if (*(unsigned char *)(a1 + 1552))
    {
      *(unsigned char *)(a1 + 1552) = 0;
    }
    else
    {
      *(unsigned char *)(a1 + 1552) = 1;
      sub_100B9A2F0(a1);
    }
    *(double *)(a1 + 1544) = Current;
  }
  sub_100B9A5E0(a1, (uint64_t)&v28);
  int v6 = v28;
  double v7 = *(double *)(a1 + 1568);
  if (v7 == 0.0) {
    double v8 = 0.0;
  }
  else {
    double v8 = Current - v7;
  }
  sub_100C4B384(&v27);
  std::random_device::result_type v9 = std::random_device::operator()(&v27);
  unsigned int v10 = v9 + ((v9 / 0x7FFFFFFF) | ((v9 / 0x7FFFFFFF) << 31));
  if (v10 <= 1) {
    unsigned int v10 = 1;
  }
  unsigned int v26 = v10;
  double v11 = sub_100C4B3F8(&v26) * 20.0 + 40.0;
  double v12 = sub_100C4B3F8(&v26) * 8.0 + 5.0;
  *(double *)(a1 + 1568) = Current;
  *(double *)(a1 + 1624) = Current;
  unsigned int v13 = (v8 * v11);
  if (*(unsigned char *)(a1 + 1552))
  {
    *(_DWORD *)(a1 + 1580) += v13;
  }
  else
  {
    *(_DWORD *)(a1 + 1576) += v13;
    if (v6 == 3) {
      goto LABEL_17;
    }
  }
  sub_100B9AC20(a1);
  *(double *)(a1 + 1672) = *(double *)(a1 + 1672) + v12 * v8;
  *(double *)(a1 + 1656) = v12;
  *(double *)(a1 + 1664) = v12;
  sub_100B9AC50(a1);
LABEL_17:
  if (qword_102419180 != -1) {
    dispatch_once(&qword_102419180, &stru_1022F8818);
  }
  uint64_t v14 = qword_102419188;
  if (os_log_type_enabled((os_log_t)qword_102419188, OS_LOG_TYPE_DEFAULT))
  {
    int v15 = *(unsigned __int8 *)(a1 + 1552);
    int v16 = *(_DWORD *)(a1 + 1576);
    int v17 = *(_DWORD *)(a1 + 1580);
    uint64_t v18 = *(void *)(a1 + 1672);
    uint64_t v19 = *(void *)(a1 + 1656);
    *(_DWORD *)std::string buf = 67110912;
    int v50 = v15;
    __int16 v51 = 1024;
    int v52 = v28;
    __int16 v53 = 2048;
    double v54 = v11;
    __int16 v55 = 1024;
    int v56 = v16;
    __int16 v57 = 1024;
    int v58 = v17;
    __int16 v59 = 2048;
    double v60 = v12;
    __int16 v61 = 2048;
    uint64_t v62 = v18;
    __int16 v63 = 2048;
    uint64_t v64 = v19;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "simulation, tracking, %d, state, %d, generated random vals, elevationCm, %f, totalUp, %u, totalDown, %u, odometerM, %f, totalOdo, %f, speed, %f", buf, 0x42u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419180 != -1) {
      dispatch_once(&qword_102419180, &stru_1022F8818);
    }
    int v20 = *(unsigned __int8 *)(a1 + 1552);
    int v21 = *(_DWORD *)(a1 + 1576);
    int v22 = *(_DWORD *)(a1 + 1580);
    uint64_t v23 = *(void *)(a1 + 1672);
    uint64_t v24 = *(void *)(a1 + 1656);
    int v33 = 67110912;
    int v34 = v20;
    __int16 v35 = 1024;
    int v36 = v28;
    __int16 v37 = 2048;
    double v38 = v11;
    __int16 v39 = 1024;
    int v40 = v21;
    __int16 v41 = 1024;
    int v42 = v22;
    __int16 v43 = 2048;
    double v44 = v12;
    __int16 v45 = 2048;
    uint64_t v46 = v23;
    __int16 v47 = 2048;
    uint64_t v48 = v24;
    __int16 v25 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual CLSkiController::SkiUpdate CLSkiSimulator::tick()", "%s\n", v25);
    if (v25 != (char *)buf) {
      free(v25);
    }
  }
  *(_DWORD *)a2 = v28;
  *(_OWORD *)(a2 + 8) = v29;
  *(_OWORD *)(a2 + 24) = v30;
  *(_OWORD *)(a2 + 40) = v31;
  *(unsigned char *)(a2 + 56) = v32;
  std::random_device::~random_device(&v27);
}

void sub_100DDF764(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, std::random_device a13, std::random_device a14)
{
}

void sub_100DDF790(void *a1)
{
  sub_100B99E30(a1);

  operator delete();
}

void sub_100DDF7C8(id a1)
{
  qword_102419188 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Skiing");
}

uint64_t sub_100DDF7F8(uint64_t a1, uint64_t a2, unsigned int a3, unsigned int a4, float a5)
{
  *(void *)a1 = a2;
  *(_WORD *)(a1 + 8) = a3;
  *(_WORD *)(a1 + 10) = a3;
  *(_WORD *)(a1 + 36) = vcvtps_s32_f32((float)a3 / (float)a4);
  __int16 v6 = vcvtps_s32_f32((float)a3 * 0.1);
  *(_WORD *)(a1 + 38) = 1;
  *(_WORD *)(a1 + 56) = v6;
  *(_WORD *)(a1 + 58) = (2 * v6) | 1;
  *(float *)(a1 + 32) = a5;
  *(void *)(a1 + 16) = malloc_type_malloc(4 * a3, 0x100004052888210uLL);
  *(void *)(a1 + 24) = malloc_type_malloc(4 * *(__int16 *)(a1 + 58) * (unint64_t)*(unsigned __int16 *)(a1 + 36), 0xCBEF6296uLL);
  *(void *)(a1 + 48) = malloc_type_malloc(2 * *(unsigned __int16 *)(a1 + 36), 0x1000040BDFB0063uLL);
  *(void *)(a1 + 72) = malloc_type_malloc(8 * *(unsigned __int16 *)(a1 + 36), 0x100004000313F17uLL);
  double v7 = (char *)malloc_type_malloc(4 * *(unsigned __int16 *)(a1 + 10), 0x100004052888210uLL);
  *(void *)(a1 + 64) = v7;
  unsigned int v8 = *(unsigned __int16 *)(a1 + 10);
  if (*(_WORD *)(a1 + 10))
  {
    unsigned int v9 = 0;
    int v10 = *(unsigned __int16 *)(a1 + 8);
    int v11 = *(__int16 *)(a1 + 56);
    double v12 = v7 + 2;
    uint64_t v13 = *(unsigned __int16 *)(a1 + 10);
    do
    {
      *(v12 - 1) = (v9 / v8 - v11) & ~(unsigned __int16)((int)(v9 / v8 - v11) >> 31);
      int v14 = v9 / v8 + v11;
      if (v14 >= v10 - 1) {
        LOWORD(v14) = v10 - 1;
      }
      *double v12 = v14;
      v12 += 2;
      v9 += v10;
      --v13;
    }
    while (v13);
  }
  *(unsigned char *)(a1 + 82) = 1;
  sub_100DDF958(a1);
  return 1;
}

void sub_100DDF958(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 82))
  {
    bzero(*(void **)(a1 + 48), 2 * *(unsigned __int16 *)(a1 + 36));
    *(_WORD *)(a1 + 80) = *(_WORD *)(*(void *)(a1 + 64) + 2);
    *(_DWORD *)(a1 + 40) = 0;
  }
}

void sub_100DDF9A0(uint64_t a1)
{
  *(_WORD *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 36) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 56) = 0;
  uint64_t v2 = *(void **)(a1 + 16);
  if (v2)
  {
    free(v2);
    *(void *)(a1 + 16) = 0;
  }
  uint64_t v3 = *(void **)(a1 + 24);
  if (v3)
  {
    free(v3);
    *(void *)(a1 + 24) = 0;
  }
  uint64_t v4 = *(void **)(a1 + 48);
  if (v4)
  {
    free(v4);
    *(void *)(a1 + 48) = 0;
  }
  double v5 = *(void **)(a1 + 72);
  if (v5)
  {
    free(v5);
    *(void *)(a1 + 72) = 0;
  }
  __int16 v6 = *(void **)(a1 + 64);
  if (v6)
  {
    free(v6);
    *(void *)(a1 + 64) = 0;
  }
  *(unsigned char *)(a1 + 82) = 0;
}

void sub_100DDFA28(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  double v5 = (void *)sub_100054C14(a1, a2, a3, a4, a5);
  void *v5 = off_1022F8848;
  v5[6] = 0;
  sub_1004E9674();
}

void sub_100DDFB04(_Unwind_Exception *a1)
{
  uint64_t v3 = *(void *)(v1 + 48);
  *(void *)(v1 + 48) = 0;
  if (v3) {
    sub_101A6A9C8(v3);
  }
  sub_100029A7C(v1);
  _Unwind_Resume(a1);
}

void sub_100DDFB28(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 8), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022F8898);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    unsigned int v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLSedentaryTimerSubscription::onSedentaryTimerAlarm", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022F8898);
    }
    unsigned int v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2082;
      int v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLSedentaryTimerSubscription::onSedentaryTimerAlarm\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_100DE1624(a4, v6, v7, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100DDFCDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DDFD00(void *a1)
{
  *a1 = off_1022F8848;
  uint64_t v2 = a1[6];
  a1[6] = 0;
  if (v2)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    uint64_t v3 = a1[6];
    a1[6] = 0;
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
  }

  return sub_100029A7C((uint64_t)a1);
}

void sub_100DDFDB4(void *a1)
{
  sub_100DDFD00(a1);

  operator delete();
}

void *sub_100DDFDEC@<X0>(uint64_t a1@<X8>)
{
  v11[0] = off_1022F88E8;
  v11[1] = sub_100DE01A4;
  v11[2] = 0;
  v11[3] = v11;
  sub_100134750(v12, "kCLConnectionMessageSedentaryTimerAlarm");
  sub_100BF1640((uint64_t)&v13, (uint64_t)v11);
  unsigned int v8 = off_1022F8998;
  v9[0] = sub_100DE0480;
  v9[1] = 0;
  int v10 = &v8;
  sub_100134750(v14, "kCLConnectionMessageSedentaryTimerIsAvailable");
  sub_100BF1640((uint64_t)&v15, (uint64_t)&v8);
  v7[0] = off_1022F8998;
  v7[1] = sub_100DE0584;
  v7[2] = 0;
  v7[3] = v7;
  sub_100134750(v16, "kCLConnectionMessageSedentaryTimerIsArmed");
  sub_100BF1640((uint64_t)&v17, (uint64_t)v7);
  v6[0] = off_1022F8998;
  v6[1] = sub_100DE06E0;
  v6[2] = 0;
  void v6[3] = v6;
  sub_100134750(v18, "kCLConnectionMessageSedentaryTimerStart");
  sub_100BF1640((uint64_t)&v19, (uint64_t)v6);
  v5[0] = off_1022F8998;
  v5[1] = sub_100DE0C48;
  v5[2] = 0;
  void v5[3] = v5;
  sub_100134750(v20, "kCLConnectionMessageSedentaryTimerStop");
  sub_100BF1640((uint64_t)&v21, (uint64_t)v5);
  v4[0] = off_1022F8998;
  v4[1] = sub_100DE101C;
  v4[2] = 0;
  void v4[3] = v4;
  sub_100134750(v22, "kCLConnectionMessageSedentaryTimerQuery");
  sub_100BF1640((uint64_t)&v23, (uint64_t)v4);
  sub_100DE2224(a1, (unsigned __int8 *)v12, 6);
  uint64_t v2 = 42;
  do
  {
    sub_100BF1B5C(&v11[v2]);
    if (SHIBYTE((&v10)[v2]) < 0) {
      operator delete((void *)v9[v2]);
    }
    v2 -= 7;
  }
  while (v2 * 8);
  sub_100BF1B5C(v4);
  sub_100BF1B5C(v5);
  sub_100BF1B5C(v6);
  sub_100BF1B5C(v7);
  sub_100BF1B5C(&v8);
  return sub_100BF1B5C(v11);
}

void sub_100DE00D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  for (uint64_t i = 280; i != -56; i -= 56)
    sub_100DE15E8(v30 + i);
  sub_100BF1B5C(&a10);
  sub_100BF1B5C(&a14);
  sub_100BF1B5C(&a18);
  sub_100BF1B5C(&a22);
  sub_100BF1B5C(&a26);
  sub_100BF1B5C(&a30);
  _Unwind_Resume(a1);
}

void sub_100DE01A4(uint64_t a1, int a2)
{
  id v4 = objc_alloc_init((Class)NSAutoreleasePool);
  if (qword_102418FD0 != -1) {
    dispatch_once(&qword_102418FD0, &stru_1022F88B8);
  }
  double v5 = qword_102418FD8;
  if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 24);
    *(_DWORD *)std::string buf = 67109634;
    *(_DWORD *)&uint8_t buf[4] = a2;
    __int16 v20 = 2112;
    uint64_t v21 = v6;
    __int16 v22 = 2048;
    uint64_t v23 = a1;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "SedentaryAlarm,subscription changed, %d, %@, %p", buf, 0x1Cu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102418FD0 != -1) {
      dispatch_once(&qword_102418FD0, &stru_1022F88B8);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    v14[0] = 67109634;
    v14[1] = a2;
    __int16 v15 = 2112;
    uint64_t v16 = v10;
    __int16 v17 = 2048;
    uint64_t v18 = a1;
    char v11 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLSedentaryTimerSubscription::handleRequestSedentaryTimerAlarm(BOOL, const CLNameValuePair &)", "%s\n", v11);
    if (v11 != (char *)buf) {
      free(v11);
    }
  }
  v14[0] = 0;
  if (sub_100DE1B8C(a1, v14))
  {
    sub_10009C834(a1);
    uint64_t v7 = *(void *)(a1 + 48);
    uint64_t v9 = *(void *)(v7 + 8);
    unsigned int v8 = *(void **)(v7 + 16);
    if (a2) {
      [v8 register:v9 forNotification:0 registrationInfo:0];
    }
    else {
      [v8 unregister:v9 forNotification:0];
    }
  }
  else
  {
    uint64_t v12 = CMErrorMessage;
    uint64_t v13 = +[NSNumber numberWithUnsignedInt:v14[0]];
    *(void *)std::string buf = +[NSDictionary dictionaryWithObjects:&v13 forKeys:&v12 count:1];
    sub_100DE1BF4(a1);
  }
}

void sub_100DE0444(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100DE0480(uint64_t a1)
{
  id v2 = objc_alloc_init((Class)NSAutoreleasePool);
  if (sub_100DE1974(a1)) {
    uint64_t v3 = sub_1004E8470(*(void *)(a1 + 8));
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = CMAvailable;
  double v5 = +[NSNumber numberWithBool:v3];
  +[NSDictionary dictionaryWithObjects:&v5 forKeys:&v4 count:1];
  CLConnectionMessage::sendReply();
}

void sub_100DE0558(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_1001C7F8C(exception_object);
}

void sub_100DE0584(uint64_t a1)
{
  id v2 = objc_alloc_init((Class)NSAutoreleasePool);
  unsigned int v4 = 0;
  if (sub_100DE1B8C(a1, (int *)&v4))
  {
    id v3 = [*(id *)(*(void *)(a1 + 48) + 16) syncgetIsTimerArmed];
    uint64_t v5 = CMSedentaryTimerIsArmedKey;
    uint64_t v6 = +[NSNumber numberWithBool:v3];
    +[NSDictionary dictionaryWithObjects:&v6 forKeys:&v5 count:1];
  }
  else
  {
    uint64_t v7 = CMErrorMessage;
    unsigned int v8 = +[NSNumber numberWithUnsignedInt:v4];
    +[NSDictionary dictionaryWithObjects:&v8 forKeys:&v7 count:1];
  }
  CLConnectionMessage::sendReply();
}

void sub_100DE06B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100DE06E0(uint64_t a1, CLConnectionMessage **a2)
{
  id v4 = objc_alloc_init((Class)NSAutoreleasePool);
  if (qword_102418FD0 != -1) {
    dispatch_once(&qword_102418FD0, &stru_1022F88B8);
  }
  uint64_t v5 = qword_102418FD8;
  if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "[SedentaryTimerTriage] SedentaryAlarm, handling SedentaryTimerStart message!", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102418FD0 != -1) {
      dispatch_once(&qword_102418FD0, &stru_1022F88B8);
    }
    LOWORD(v13[0]) = 0;
    uint64_t v10 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLSedentaryTimerSubscription::handleMessageSedentaryTimerStart(std::shared_ptr<CLConnectionMessage>)", "%s\n", v10);
    if (v10 != (char *)buf) {
      free(v10);
    }
  }
  v13[0] = 0;
  if (sub_100DE1B8C(a1, (int *)v13))
  {
    uint64_t Dictionary = CLConnectionMessage::getDictionary(*a2);
    if (Dictionary)
    {
      id v7 = [*(id *)(*(void *)(a1 + 48) + 16) syncgetStartTimerForClient:[*(id *)(a1 + 24) description] andOptions:Dictionary];
      uint64_t v14 = CMErrorMessage;
      __int16 v15 = +[NSNumber numberWithUnsignedInt:v7];
      +[NSDictionary dictionaryWithObjects:&v15 forKeys:&v14 count:1];
    }
    else
    {
      if (qword_102418FD0 != -1) {
        dispatch_once(&qword_102418FD0, &stru_1022F88B8);
      }
      uint64_t v9 = qword_102418FD8;
      if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_FAULT, "SedentaryAlarm,Failed to start,nil dictionary", buf, 2u);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102418FD0 != -1) {
          dispatch_once(&qword_102418FD0, &stru_1022F88B8);
        }
        uint64_t v12 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "void CLSedentaryTimerSubscription::handleMessageSedentaryTimerStart(std::shared_ptr<CLConnectionMessage>)", "%s\n", v12);
        if (v12 != (char *)buf) {
          free(v12);
        }
      }
      uint64_t v16 = CMErrorMessage;
      __int16 v17 = +[NSNumber numberWithUnsignedInt:v13[0]];
      +[NSDictionary dictionaryWithObjects:&v17 forKeys:&v16 count:1];
    }
    CLConnectionMessage::sendReply();
  }
  else
  {
    if (qword_102418FD0 != -1) {
      dispatch_once(&qword_102418FD0, &stru_1022F88B8);
    }
    unsigned int v8 = qword_102418FD8;
    if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "[SedentaryTimerTriage] SedentaryAlarm, is not qualified!", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418FD0 != -1) {
        dispatch_once(&qword_102418FD0, &stru_1022F88B8);
      }
      char v11 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLSedentaryTimerSubscription::handleMessageSedentaryTimerStart(std::shared_ptr<CLConnectionMessage>)", "%s\n", v11);
      if (v11 != (char *)buf) {
        free(v11);
      }
    }
    uint64_t v18 = CMErrorMessage;
    uint64_t v19 = +[NSNumber numberWithUnsignedInt:v13[0]];
    +[NSDictionary dictionaryWithObjects:&v19 forKeys:&v18 count:1];
    CLConnectionMessage::sendReply();
  }
}

void sub_100DE0C0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100DE0C48(uint64_t a1)
{
  id v2 = objc_alloc_init((Class)NSAutoreleasePool);
  if (qword_102418FD0 != -1) {
    dispatch_once(&qword_102418FD0, &stru_1022F88B8);
  }
  id v3 = qword_102418FD8;
  if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "[SedentaryTimerTriage] SedentaryAlarm, handling SedentaryTimerStop message!", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102418FD0 != -1) {
      dispatch_once(&qword_102418FD0, &stru_1022F88B8);
    }
    LOWORD(v8[0]) = 0;
    uint64_t v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLSedentaryTimerSubscription::handleMessageSedentaryTimerStop(std::shared_ptr<CLConnectionMessage>)", "%s\n", v6);
    if (v6 != (char *)buf) {
      free(v6);
    }
  }
  v8[0] = 0;
  if (sub_100DE1B8C(a1, (int *)v8))
  {
    id v4 = [[*(id *)(*(void *)(a1 + 48) + 16) syncgetStopTimerForClient:[*(id *)(a1 + 24) description]];
    uint64_t v9 = CMErrorMessage;
    uint64_t v10 = +[NSNumber numberWithUnsignedInt:v4];
    +[NSDictionary dictionaryWithObjects:&v10 forKeys:&v9 count:1];
  }
  else
  {
    if (qword_102418FD0 != -1) {
      dispatch_once(&qword_102418FD0, &stru_1022F88B8);
    }
    uint64_t v5 = qword_102418FD8;
    if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "[SedentaryTimerTriage] SedentaryAlarm, is not qualified!", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418FD0 != -1) {
        dispatch_once(&qword_102418FD0, &stru_1022F88B8);
      }
      id v7 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLSedentaryTimerSubscription::handleMessageSedentaryTimerStop(std::shared_ptr<CLConnectionMessage>)", "%s\n", v7);
      if (v7 != (char *)buf) {
        free(v7);
      }
    }
    uint64_t v11 = CMErrorMessage;
    uint64_t v12 = +[NSNumber numberWithUnsignedInt:v8[0]];
    +[NSDictionary dictionaryWithObjects:&v12 forKeys:&v11 count:1];
  }
  CLConnectionMessage::sendReply();
}

void sub_100DE0FE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100DE101C(uint64_t a1, CLConnectionMessage **a2)
{
  id v4 = objc_alloc_init((Class)NSAutoreleasePool);
  unsigned int v22 = 0;
  if (sub_100DE1B8C(a1, (int *)&v22))
  {
    uint64_t Dictionary = (void *)CLConnectionMessage::getDictionary(*a2);
    if (Dictionary)
    {
      long long __p = 0;
      __int16 v20 = 0;
      uint64_t v21 = 0;
      [Dictionary[CMSedentaryTimerStartTimeKey] doubleValue];
      id v6 = [*(id *)(*(void *)(a1 + 48) + 16) syncgetSedentaryAlarmData:&__p since:];
      unsigned int v22 = v6;
      if (v6 == 100)
      {
        id v7 = objc_alloc_init((Class)NSMutableArray);
        unsigned int v8 = (double *)__p;
        uint64_t v9 = v20;
        if (__p != v20)
        {
          do
          {
            id v10 = [objc_alloc((Class)CMSedentaryTimerData) initWithStartDate:*((int *)v8 + 4) firedDate:*((unsigned char *)v8 + 20) & 1 alarmType:*v8 didWake:v8[1]];
            [v7 addObject:v10];

            v8 += 4;
          }
          while (v8 != v9);
        }
        if ([v7 count])
        {
          sub_100103240();
          if (sub_10073E30C())
          {
            if (qword_102418FD0 != -1) {
              dispatch_once(&qword_102418FD0, &stru_1022F88B8);
            }
            uint64_t v11 = qword_102418FD8;
            if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_DEFAULT))
            {
              id v12 = [v7 lastObject];
              uint64_t v13 = *(void *)(a1 + 24);
              *(_DWORD *)std::string buf = 138412802;
              id v36 = v12;
              __int16 v37 = 2112;
              uint64_t v38 = v13;
              __int16 v39 = 2048;
              uint64_t v40 = a1;
              _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%@, %@, %p", buf, 0x20u);
            }
            if (sub_10013D1A0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_102418FD0 != -1) {
                dispatch_once(&qword_102418FD0, &stru_1022F88B8);
              }
              id v16 = [v7 lastObject];
              uint64_t v17 = *(void *)(a1 + 24);
              int v25 = 138412802;
              id v26 = v16;
              __int16 v27 = 2112;
              uint64_t v28 = v17;
              __int16 v29 = 2048;
              uint64_t v30 = a1;
              uint64_t v18 = (char *)_os_log_send_and_compose_impl();
              sub_1004BA5E4("Generic", 1, 0, 2, "void CLSedentaryTimerSubscription::handleMessageSedentaryTimerQuery(std::shared_ptr<CLConnectionMessage>)", "%s\n", v18);
              if (v18 != (char *)buf) {
                free(v18);
              }
            }
          }
        }
        uint64_t v23 = CMSedentaryTimerAlarmDataKey;
        id v24 = v7;
        +[NSDictionary dictionaryWithObjects:&v24 forKeys:&v23 count:1];

        CLConnectionMessage::sendReply();
      }
      else
      {
        uint64_t v31 = CMErrorMessage;
        char v32 = +[NSNumber numberWithUnsignedInt:v6];
        +[NSDictionary dictionaryWithObjects:&v32 forKeys:&v31 count:1];
        CLConnectionMessage::sendReply();
      }
      if (__p)
      {
        __int16 v20 = (double *)__p;
        operator delete(__p);
      }
    }
    else
    {
      if (qword_102418FD0 != -1) {
        dispatch_once(&qword_102418FD0, &stru_1022F88B8);
      }
      uint64_t v14 = qword_102418FD8;
      if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_FAULT, "SedentaryAlarm,Failed to query,nil dictionary", buf, 2u);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102418FD0 != -1) {
          dispatch_once(&qword_102418FD0, &stru_1022F88B8);
        }
        LOWORD(v25) = 0;
        __int16 v15 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "void CLSedentaryTimerSubscription::handleMessageSedentaryTimerQuery(std::shared_ptr<CLConnectionMessage>)", "%s\n", v15);
        if (v15 != (char *)buf) {
          free(v15);
        }
      }
      uint64_t v33 = CMErrorMessage;
      int v34 = +[NSNumber numberWithUnsignedInt:v22];
      +[NSDictionary dictionaryWithObjects:&v34 forKeys:&v33 count:1];
      CLConnectionMessage::sendReply();
    }
  }
  else
  {
    uint64_t v41 = CMErrorMessage;
    int v42 = +[NSNumber numberWithUnsignedInt:v22];
    +[NSDictionary dictionaryWithObjects:&v42 forKeys:&v41 count:1];
    CLConnectionMessage::sendReply();
  }
}

void sub_100DE1588(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_100DE15E8(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_100DE1624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  id v6 = objc_alloc_init((Class)NSMutableArray);
  uint64_t v7 = *a4;
  uint64_t v8 = a4[1];
  if (*a4 != v8)
  {
    do
    {
      id v9 = [objc_alloc((Class)CMSedentaryTimerData) initWithStartDate:*(int *)(v7 + 16) firedDate:*(unsigned char *)(v7 + 20) & 1 alarmType:*(double *)v7 didWake:*(double *)(v7 + 8)];
      [v6 addObject:v9];

      v7 += 32;
    }
    while (v7 != v8);
  }
  if ([v6 count])
  {
    sub_100103240();
    if (sub_10073E30C())
    {
      if (qword_102418FD0 != -1) {
        dispatch_once(&qword_102418FD0, &stru_1022F88B8);
      }
      id v10 = qword_102418FD8;
      if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_DEFAULT))
      {
        id v11 = [v6 lastObject];
        uint64_t v12 = *(void *)(a1 + 24);
        *(_DWORD *)std::string buf = 138412802;
        *(void *)&uint8_t buf[4] = v11;
        __int16 v25 = 2112;
        uint64_t v26 = v12;
        __int16 v27 = 2048;
        uint64_t v28 = a1;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "%@, %@, %p", buf, 0x20u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102418FD0 != -1) {
          dispatch_once(&qword_102418FD0, &stru_1022F88B8);
        }
        id v13 = [v6 lastObject];
        uint64_t v14 = *(void *)(a1 + 24);
        int v18 = 138412802;
        id v19 = v13;
        __int16 v20 = 2112;
        uint64_t v21 = v14;
        __int16 v22 = 2048;
        uint64_t v23 = a1;
        __int16 v15 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLSedentaryTimerSubscription::onSedentaryTimerAlarm(int, const CLSedentaryTimerNotifier_Type::Notification &, const CLSedentaryTimerNotifier_Type::NotificationData &)", "%s\n", v15);
        if (v15 != buf) {
          free(v15);
        }
      }
    }
  }
  uint64_t v16 = CMSedentaryTimerAlarmDataKey;
  id v17 = v6;
  *(void *)std::string buf = +[NSDictionary dictionaryWithObjects:&v17 forKeys:&v16 count:1];

  sub_100DE18F0(a1);
}

void sub_100DE18F0(uint64_t a1)
{
  sub_1000E9420(&off_1022F8A08, &v2);
  sub_1000E956C(a1, &v2);
  if (v3) {
    sub_1000DB0A0(v3);
  }
}

void sub_100DE195C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  if (a11) {
    sub_1000DB0A0(a11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DE1974(uint64_t a1)
{
  sub_100134750(__p, "com.apple.locationd.sedentary_timer");
  uint64_t v2 = sub_1010A4BAC(a1);
  uint64_t v3 = v2;
  if (v9 < 0)
  {
    operator delete(*(void **)__p);
    if (v3) {
      return v3;
    }
  }
  else if (v2)
  {
    return v3;
  }
  if (qword_102418FD0 != -1) {
    dispatch_once(&qword_102418FD0, &stru_1022F88B8);
  }
  id v4 = qword_102418FD8;
  if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 24);
    *(_DWORD *)long long __p = 138543362;
    *(void *)&__p[4] = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#Warning SedentaryAlarm,Failed entitlement check,%{public}@", __p, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_102418FD0 != -1) {
      dispatch_once(&qword_102418FD0, &stru_1022F88B8);
    }
    uint64_t v7 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLSedentaryTimerSubscription::isEntitledForSedentaryTimer()", "%s\n", v7);
    if (v7 != __p) {
      free(v7);
    }
  }
  return v3;
}

void sub_100DE1B68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DE1B8C(uint64_t a1, int *a2)
{
  if (sub_100DE1974(a1))
  {
    if (sub_1004E8470(*(void *)(a1 + 8)))
    {
      if (sub_1010A4D14(a1)) {
        return 1;
      }
      int v5 = 105;
    }
    else
    {
      int v5 = 109;
    }
  }
  else
  {
    int v5 = 110;
  }
  uint64_t result = 0;
  *a2 = v5;
  return result;
}

void sub_100DE1BF4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  sub_10048C758(&off_1022F8A08, &v2);
  (*(void (**)(uint64_t, uint64_t *, void))(*(void *)v1 + 24))(v1, &v2, 0);
  if (v3) {
    sub_1000DB0A0(v3);
  }
}

void sub_100DE1C70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  if (a11) {
    sub_1000DB0A0(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DE1C88(id a1)
{
  qword_102419588 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_100DE1CB8(id a1)
{
  qword_102418FD8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Motion");
}

__n128 sub_100DE1CE8(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x18uLL);
  *(void *)uint64_t v2 = off_1022F88E8;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_100DE1D34(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = off_1022F88E8;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_100DE1D64(uint64_t a1, uint64_t a2, long long *a3)
{
}

uint64_t sub_100DE1D6C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100DE1DAC()
{
}

void sub_100DE1DB8(uint64_t a1, uint64_t a2, long long *a3)
{
  long long v3 = *a3;
  *(void *)a3 = 0;
  *((void *)a3 + 1) = 0;
  sub_100DE1E14(a1, a2, (CLConnectionMessage **)&v3);
  if (*((void *)&v3 + 1)) {
    sub_1000DB0A0(*((std::__shared_weak_count **)&v3 + 1));
  }
}

void sub_100DE1DFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1000DB0A0(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DE1E14(uint64_t a1, uint64_t a2, CLConnectionMessage **a3)
{
  id v6 = (NSSet *)(*(uint64_t (**)(uint64_t))(*(void *)a2 + 16))(a2);
  CFDictionaryRef DictionaryOfClasses = (const __CFDictionary *)CLConnectionMessage::getDictionaryOfClasses(*a3, v6);
  sub_10013FA80((int)v15, DictionaryOfClasses);
  BOOL v14 = 0;
  if (sub_1000D2988((uint64_t)v15, "kCLConnectionMessageSubscribeKey", &v14))
  {
    uint64_t v8 = *(void (**)(void *, BOOL, uint8_t *))a1;
    uint64_t v9 = *(void *)(a1 + 8);
    id v10 = (void *)(a2 + (v9 >> 1));
    if (v9) {
      uint64_t v8 = *(void (**)(void *, BOOL, uint8_t *))(*v10 + v8);
    }
    v8(v10, v14, v15);
  }
  else
  {
    if (qword_102419520 != -1) {
      dispatch_once(&qword_102419520, &stru_1022F8958);
    }
    id v11 = qword_102419528;
    if (os_log_type_enabled((os_log_t)qword_102419528, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)std::string buf = 68289026;
      int v17 = 0;
      __int16 v18 = 2082;
      id v19 = "";
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"Couldn't get value for kCLConnectionMessageSubscribeKey key\"}", buf, 0x12u);
      if (qword_102419520 != -1) {
        dispatch_once(&qword_102419520, &stru_1022F8958);
      }
    }
    uint64_t v12 = qword_102419528;
    if (os_signpost_enabled((os_log_t)qword_102419528))
    {
      *(_DWORD *)std::string buf = 68289026;
      int v17 = 0;
      __int16 v18 = 2082;
      id v19 = "";
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v12, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Couldn't get value for kCLConnectionMessageSubscribeKey key", "{\"msg%{public}.0s\":\"Couldn't get value for kCLConnectionMessageSubscribeKey key\"}", buf, 0x12u);
    }
  }
  return sub_10013F3C4(v15);
}

void sub_100DE2044(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
}

void sub_100DE2060(id a1)
{
  qword_102419528 = (uint64_t)os_log_create("com.apple.locationd.Core", "Client");
}

__n128 sub_100DE2090(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x18uLL);
  *(void *)uint64_t v2 = off_1022F8998;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_100DE20DC(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = off_1022F8998;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_100DE210C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
}

uint64_t sub_100DE2114(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100DE2154()
{
}

void sub_100DE2160(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  id v4 = (std::__shared_weak_count *)a3[1];
  *a3 = 0;
  a3[1] = 0;
  int v5 = *(void (**)(void *, uint64_t *))a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = (void *)(a2 + (v6 >> 1));
  if (v6) {
    int v5 = *(void (**)(void *, uint64_t *))(*v7 + v5);
  }
  uint64_t v8 = v3;
  uint64_t v9 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  v5(v7, &v8);
  if (v9) {
    sub_1000DB0A0(v9);
  }
  if (v4) {
    sub_1000DB0A0(v4);
  }
}

void sub_100DE2200(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1000DB0A0(a10);
  }
  if (v10) {
    sub_1000DB0A0(v10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DE2224(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  if (a3)
  {
    uint64_t v5 = 56 * a3;
    do
    {
      sub_100DE22A0(a1, a2, (long long *)a2);
      a2 += 56;
      v5 -= 56;
    }
    while (v5);
  }
  return a1;
}

void sub_100DE228C(_Unwind_Exception *a1)
{
  sub_100BF1BE0(v1);
  _Unwind_Resume(a1);
}

unsigned __int8 *sub_100DE22A0(uint64_t a1, unsigned __int8 *a2, long long *a3)
{
  uint64_t v7 = (void *)(a1 + 24);
  unint64_t v8 = sub_100103388(a1 + 24, (uint64_t)a2);
  unint64_t v9 = v8;
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    unint64_t v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v3 = v8;
      if (v8 >= v10) {
        unint64_t v3 = v8 % v10;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v8;
    }
    id v13 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v3);
    if (v13)
    {
      for (uint64_t i = *v13; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v15 = *((void *)i + 1);
        if (v15 == v9)
        {
          if (sub_100103744(a1 + 32, i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v12 > 1)
          {
            if (v15 >= v10) {
              v15 %= v10;
            }
          }
          else
          {
            v15 &= v10 - 1;
          }
          if (v15 != v3) {
            break;
          }
        }
      }
    }
  }
  sub_100DE2524(a1, v9, a3, (uint64_t)v25);
  float v16 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v17 = *(float *)(a1 + 32);
  if (!v10 || (float)(v17 * (float)v10) < v16)
  {
    BOOL v18 = 1;
    if (v10 >= 3) {
      BOOL v18 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v19 = v18 | (2 * v10);
    unint64_t v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20) {
      size_t v21 = v20;
    }
    else {
      size_t v21 = v19;
    }
    sub_100100330(a1, v21);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
      else {
        unint64_t v3 = v9;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v9;
    }
  }
  __int16 v22 = *(void **)(*(void *)a1 + 8 * v3);
  if (v22)
  {
    *(void *)v25[0] = *v22;
    void *v22 = v25[0];
  }
  else
  {
    *(void *)v25[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v25[0];
    *(void *)(*(void *)a1 + 8 * v3) = a1 + 16;
    if (*(void *)v25[0])
    {
      unint64_t v23 = *(void *)(*(void *)v25[0] + 8);
      if ((v10 & (v10 - 1)) != 0)
      {
        if (v23 >= v10) {
          v23 %= v10;
        }
      }
      else
      {
        v23 &= v10 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v23) = v25[0];
    }
  }
  uint64_t i = (unsigned __int8 *)v25[0];
  v25[0] = 0;
  ++*v7;
  sub_100DE2614((uint64_t)v25, 0);
  return i;
}

void sub_100DE250C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100DE2614((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

void *sub_100DE2524@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  unint64_t v8 = operator new(0x48uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(unsigned char *)(a4 + 16) = 0;
  *unint64_t v8 = 0;
  v8[1] = a2;
  __n128 result = sub_100DE259C(v8 + 2, a3);
  *(unsigned char *)(a4 + 16) = 1;
  return result;
}

void sub_100DE2584(_Unwind_Exception *a1)
{
  sub_100DE2614(v1, 0);
  _Unwind_Resume(a1);
}

void *sub_100DE259C(void *__dst, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000DC48C(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)long long __dst = v4;
  }
  sub_100BF1398((uint64_t)(__dst + 3), (uint64_t)a2 + 24);
  return __dst;
}

void sub_100DE25F8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DE2614(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_100BF1C60((uint64_t)v2 + 16);
    }
    operator delete(v2);
  }
}

void sub_100DE266C(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  sub_1000DEE34(a2, a1);
  if (*(unsigned char *)(a1 + 6376) && *(int *)(a1 + 6400) >= 1)
  {
    sub_100134750(v4, "scanready");
    sub_1006D30DC(v6, 4, 0, v4, *(double *)(a1 + 6384));
    sub_100689E94((uint64_t)v10, v6);
    sub_100DE27A0((uint64_t)(a2 + 708), (uint64_t)v10);
    if (v14 < 0) {
      operator delete(__p);
    }
    if (v12 < 0) {
      operator delete(v11);
    }
    if (v9 < 0) {
      operator delete(v8);
    }
    if (v7 < 0) {
      operator delete((void *)v6[2]);
    }
    if (v5 < 0) {
      operator delete(v4[0]);
    }
  }
}

void sub_100DE2754(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  sub_10050EC2C((uint64_t)&a34);
  sub_10050EC2C((uint64_t)&a16);
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_10050BAA0(v34);
  _Unwind_Resume(a1);
}

uint64_t sub_100DE27A0(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 144);
  char v5 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v5;
  uint64_t v6 = a1 + 16;
  char v7 = (long long *)(a2 + 16);
  if (v4)
  {
    if (*(char *)(a1 + 39) < 0) {
      operator delete(*(void **)v6);
    }
    long long v8 = *v7;
    *(void *)(v6 + 16) = *((void *)v7 + 2);
    *(_OWORD *)uint64_t v6 = v8;
    *(unsigned char *)(a2 + 39) = 0;
    *(unsigned char *)(a2 + 16) = 0;
    long long v9 = *(_OWORD *)(a2 + 100);
    long long v10 = *(_OWORD *)(a2 + 88);
    long long v11 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v11;
    *(_OWORD *)(a1 + 88) = v10;
    *(_OWORD *)(a1 + 100) = v9;
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    char v12 = (void **)(a1 + 120);
    if (*(char *)(a1 + 143) < 0) {
      operator delete(*v12);
    }
    long long v13 = *(_OWORD *)(a2 + 120);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(_OWORD *)char v12 = v13;
    *(unsigned char *)(a2 + 143) = 0;
    *(unsigned char *)(a2 + 120) = 0;
  }
  else
  {
    long long v14 = *v7;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(_OWORD *)uint64_t v6 = v14;
    *(void *)(a2 + 24) = 0;
    *(void *)(a2 + 32) = 0;
    *(void *)char v7 = 0;
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    long long v15 = *(_OWORD *)(a2 + 72);
    long long v16 = *(_OWORD *)(a2 + 88);
    long long v17 = *(_OWORD *)(a2 + 100);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 100) = v17;
    *(_OWORD *)(a1 + 88) = v16;
    *(_OWORD *)(a1 + 72) = v15;
    long long v18 = *(_OWORD *)(a2 + 120);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = v18;
    *(void *)(a2 + 128) = 0;
    *(void *)(a2 + 136) = 0;
    *(void *)(a2 + 120) = 0;
    *(unsigned char *)(a1 + 144) = 1;
  }
  return a1;
}

void sub_100DE28D0(uint64_t a1@<X0>, _DWORD *a2@<X1>, _DWORD *a3@<X8>)
{
  sub_1000DEE34(a3, a1);
  if (!*a2 && *(unsigned char *)(a1 + 6172))
  {
    sub_100134750(v6, "emergency");
    sub_1006D30DC(v8, 6, 0, v6, *(double *)(a1 + 6384));
    sub_100689E94((uint64_t)v12, v8);
    sub_100DE27A0((uint64_t)(a3 + 708), (uint64_t)v12);
    if (v16 < 0) {
      operator delete(__p);
    }
    if (v14 < 0) {
      operator delete(v13);
    }
    if (v11 < 0) {
      operator delete(v10);
    }
    if (v9 < 0) {
      operator delete((void *)v8[2]);
    }
    if (v7 < 0) {
      operator delete(v6[0]);
    }
  }
}

void sub_100DE29BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  sub_10050EC2C((uint64_t)&a34);
  sub_10050EC2C((uint64_t)&a16);
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_10050BAA0(v34);
  _Unwind_Resume(a1);
}

void sub_100DE2A08(uint64_t a1@<X0>, _DWORD *a2@<X1>, _DWORD *a3@<X8>)
{
  sub_1000DEE34(a3, a1);
  if (*a2 == 1 && *(unsigned char *)(a1 + 6172))
  {
    sub_100134750(v6, "emergency");
    sub_1006D30DC(v8, 6, 0, v6, *(double *)(a1 + 6384));
    sub_100689E94((uint64_t)v12, v8);
    sub_100DE27A0((uint64_t)(a3 + 708), (uint64_t)v12);
    if (v16 < 0) {
      operator delete(__p);
    }
    if (v14 < 0) {
      operator delete(v13);
    }
    if (v11 < 0) {
      operator delete(v10);
    }
    if (v9 < 0) {
      operator delete((void *)v8[2]);
    }
    if (v7 < 0) {
      operator delete(v6[0]);
    }
  }
}

void sub_100DE2AF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  sub_10050EC2C((uint64_t)&a34);
  sub_10050EC2C((uint64_t)&a16);
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_10050BAA0(v34);
  _Unwind_Resume(a1);
}

void sub_100DE2B40(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  int v4 = (unsigned char *)(a1 + 6172);
  sub_1000DEE34(a2, a1);
  if (v4[207] && *v4)
  {
    sub_100134750(v5, "emergency");
    sub_1006D30DC(v7, 6, 0, v5, *(double *)(a1 + 6384));
    sub_100689E94((uint64_t)v11, v7);
    sub_100DE27A0((uint64_t)(a2 + 708), (uint64_t)v11);
    if (v15 < 0) {
      operator delete(__p);
    }
    if (v13 < 0) {
      operator delete(v12);
    }
    if (v10 < 0) {
      operator delete(v9);
    }
    if (v8 < 0) {
      operator delete((void *)v7[2]);
    }
    if (v6 < 0) {
      operator delete(v5[0]);
    }
  }
}

void sub_100DE2C28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  sub_10050EC2C((uint64_t)&a34);
  sub_10050EC2C((uint64_t)&a16);
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_10050BAA0(v34);
  _Unwind_Resume(a1);
}

void sub_100DE2C74(uint64_t a1@<X0>, _DWORD *a2@<X1>, _DWORD *a3@<X8>)
{
  sub_1000DEE34(a3, a1);
  if (*(unsigned char *)(a1 + 6379)) {
    BOOL v6 = *a2 == 0;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_100134750(__p, "registrant");
    sub_1006D30DC(v14, 4, 0, __p, *(double *)(a1 + 6384));
    if (v13 < 0) {
      operator delete(__p[0]);
    }
    sub_100689E94((uint64_t)v7, v14);
    sub_100DE27A0((uint64_t)(a3 + 708), (uint64_t)v7);
    if (v11 < 0) {
      operator delete(v10);
    }
    if (v9 < 0) {
      operator delete(v8);
    }
    if (v17 < 0) {
      operator delete(v16);
    }
    if (v15 < 0) {
      operator delete((void *)v14[2]);
    }
  }
}

void sub_100DE2D60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33,char a34)
{
  sub_10050EC2C((uint64_t)&a10);
  sub_10050EC2C((uint64_t)&a34);
  sub_10050BAA0(v34);
  _Unwind_Resume(a1);
}

void sub_100DE2DAC(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  int v4 = (unsigned char *)(a1 + 6376);
  sub_1000DEE34(a2, a1);
  if (*v4 && *(int *)(a1 + 6400) >= 1 && v4[3] && !*(unsigned char *)(a1 + 810))
  {
    int v5 = *(_DWORD *)(a1 + 6112);
    sub_100134750(v7, "timer");
    if (v5 == 6) {
      uint64_t v6 = 6;
    }
    else {
      uint64_t v6 = 4;
    }
    sub_1006D30DC(v9, v6, 0, v7, *(double *)(a1 + 6384));
    sub_100689E94((uint64_t)v13, v9);
    sub_100DE27A0((uint64_t)(a2 + 708), (uint64_t)v13);
    if (v17 < 0) {
      operator delete(__p);
    }
    if (v15 < 0) {
      operator delete(v14);
    }
    if (v12 < 0) {
      operator delete(v11);
    }
    if (v10 < 0) {
      operator delete((void *)v9[2]);
    }
    if (v8 < 0) {
      operator delete(v7[0]);
    }
  }
}

void sub_100DE2EB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  sub_10050EC2C((uint64_t)&a34);
  sub_10050EC2C((uint64_t)&a16);
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_10050BAA0(v34);
  _Unwind_Resume(a1);
}

void sub_100DE2FA0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_102419688, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_102419688))
  {
    qword_102419670 = 0;
    qword_102419678 = 0;
    qword_102419680 = 0;
    uint64_t v0 = operator new(6uLL);
    qword_102419678 = (uint64_t)(v0 + 3);
    qword_102419680 = (uint64_t)(v0 + 3);
    *(_DWORD *)uint64_t v0 = 151521030;
    v0[2] = 3082;
    qword_102419670 = (uint64_t)v0;
    __cxa_atexit((void (*)(void *))sub_1001C6FD8, &qword_102419670, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_102419688);
  }
}

void sub_100DE3058(_Unwind_Exception *a1)
{
}

void sub_100DE3070()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1024196A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1024196A8))
  {
    qword_102419690 = 0;
    qword_102419698 = 0;
    qword_1024196A0 = 0;
    uint64_t v0 = operator new(2uLL);
    qword_102419690 = (uint64_t)v0;
    _WORD *v0 = 256;
    qword_102419698 = (uint64_t)(v0 + 1);
    qword_1024196A0 = (uint64_t)(v0 + 1);
    __cxa_atexit((void (*)(void *))sub_1001C700C, &qword_102419690, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1024196A8);
  }
}

void sub_100DE3118(_Unwind_Exception *a1)
{
}

uint64_t sub_100DE3130(CFStringRef alertHeader, int a2, CFStringRef alertMessage)
{
  return CFUserNotificationDisplayNotice(0.0, 0, 0, 0, 0, alertHeader, alertMessage, 0);
}

NSDictionary *sub_100DE3154(unsigned int *a1)
{
  v3[0] = @"sessionStartedCount";
  v4[0] = +[CLFenceBinner binForConvergingUsageMetricCount:*a1];
  v3[1] = @"sessionSuccessCount";
  v4[1] = +[CLFenceBinner binForConvergingUsageMetricCount:a1[1]];
  v3[2] = @"sessionTimeoutCount";
  v4[2] = +[CLFenceBinner binForConvergingUsageMetricCount:a1[2]];
  v3[3] = @"sessionExitCount";
  void v4[3] = +[CLFenceBinner binForConvergingUsageMetricCount:a1[3]];
  v3[4] = @"sessionNotStartedOutOfBudgetCount";
  void v4[4] = +[CLFenceBinner binForConvergingUsageMetricCount:a1[4]];
  v3[5] = @"sessionNotStartedWokeUpInsideCount";
  v4[5] = +[CLFenceBinner binForConvergingUsageMetricCount:a1[5]];
  v3[6] = @"significantFenceEntryCount";
  v4[6] = +[CLFenceBinner binForConvergingUsageMetricCount:a1[6]];
  return +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:7];
}

void sub_100DE3338(id a1)
{
  qword_102481778 = (uint64_t)[objc_alloc((Class)CLDispatchSilo) initWithIdentifier:@"CLGeomagneticModelProviderSilo"];
}

uint64_t sub_100DE35F0(uint64_t result)
{
  *(unsigned char *)(result + 108) = 1;
  return result;
}

void *sub_100DE35FC(uint64_t a1, void *a2)
{
  __n128 result = (void *)sub_100DE363C(a1, "CLGeomagneticModelProvider", a2);
  *__n128 result = off_1022F8A40;
  return result;
}

uint64_t sub_100DE363C(uint64_t a1, char *a2, void *a3)
{
  *(void *)a1 = off_1022F8BD0;
  sub_100134750((void *)(a1 + 8), a2);
  *(void *)(a1 + 32) = a3;
  *(void *)(a1 + 40) = [a3 silo];
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(unsigned char *)(a1 + 108) = 0;
  return a1;
}

void sub_100DE36CC(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DE36EC(uint64_t a1)
{
  *(void *)a1 = off_1022F8BD0;
  [*(id *)(a1 + 48) invalidate];

  sub_1004459BC(a1 + 80, *(void **)(a1 + 88));
  sub_100445A1C(a1 + 56, *(void **)(a1 + 64));
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

void *sub_100DE3778@<X0>(_DWORD *a1@<X1>, void *a2@<X8>)
{
  snprintf(__str, 0x20uLL, "%d", *a1);
  return sub_100134750(a2, __str);
}

void sub_100DE37F4()
{
}

void sub_100DE38B0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete();
}

uint64_t sub_100DE38EC(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, uint64_t a5, uint64_t a6)
{
  *(void *)a1 = off_1022F8CB0;
  *(void *)(a1 + 8) = [[CLNotifierClientAdapter alloc] initWithClient:a1];
  *(void *)(a1 + 24) = a5;
  *(void *)(a1 + 32) = a6;
  if (*((char *)a3 + 23) >= 0) {
    char v12 = a3;
  }
  else {
    char v12 = (uint64_t *)*a3;
  }
  id v13 = [[[a4 vendor] proxyForService:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12)];
  *(void *)(a1 + 16) = v13;
  id v14 = v13;
  if (a2) {
    [*(id *)(a1 + 16) setDelegateEntityName:a2];
  }
  [*(id *)(a1 + 16) registerDelegate:*(void *)(a1 + 8) inSilo:[a4 silo]];
  return a1;
}

double sub_100DE39D0@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0xBFF0000000000000;
  return result;
}

void sub_100DE39EC(uint64_t a1)
{
  sub_100DE3AA4(a1);

  operator delete();
}

id sub_100DE3A24(uint64_t a1, int a2, void *a3)
{
  id result = sub_101A3C144(a3);
  if (result)
  {
    int v6 = a2;
    return (id)(*(uint64_t (**)(void, int *, id, void))(a1 + 24))(0, &v6, result, *(void *)(a1 + 32));
  }
  return result;
}

void sub_100DE3A74(id a1)
{
  qword_102419588 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

uint64_t sub_100DE3AA4(uint64_t a1)
{
  *(void *)a1 = off_1022F8CB0;
  uint64_t v2 = (id *)(a1 + 8);
  [*(id *)(a1 + 16) forget:*(void *)(a1 + 8)];

  [*v2 invalidate];
  id *v2 = 0;
  *(void *)(a1 + 16) = 0;
  return a1;
}

double sub_100DE3B1C(uint64_t a1)
{
  *(_DWORD *)(a1 + 77240) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 77224) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 32) = 100;
  *(void *)(a1 + 40) = 0x25800000000;
  *(void *)(a1 + 19248) = 0x25800000000;
  *(void *)(a1 + 38456) = 0;
  *(_DWORD *)(a1 + 38464) = 0;
  *(void *)(a1 + 38472) = 0;
  *(void *)(a1 + 38488) = 0;
  *(_DWORD *)(a1 + 38496) = 0;
  *(_OWORD *)(a1 + 38504) = 0u;
  *(_OWORD *)(a1 + 38520) = 0u;
  *(_DWORD *)(a1 + 38536) = 0;
  *(void *)(a1 + 38544) = 0x300000000;
  *(void *)(a1 + 38648) = 0x25800000000;
  *(void *)(a1 + 57856) = 0x25800000000;
  *(_DWORD *)(a1 + 77088) = 0;
  *(void *)(a1 + 77080) = 0;
  *(_OWORD *)(a1 + 77064) = 0u;
  *(_OWORD *)(a1 + 77096) = 0u;
  *(_OWORD *)(a1 + 77112) = 0u;
  *(_OWORD *)(a1 + 77128) = 0u;
  *(_OWORD *)(a1 + 77144) = 0u;
  *(_OWORD *)(a1 + 77160) = 0u;
  *(_OWORD *)(a1 + 77176) = 0u;
  *(_OWORD *)(a1 + 77192) = 0u;
  *(_OWORD *)(a1 + 77208) = 0u;
  return result;
}

uint64_t sub_100DE3BC8(uint64_t a1, uint64_t a2, double a3, double a4, float a5, float a6)
{
  double v9 = *(double *)(a2 + 56);
  if (v9 < *(double *)(a1 + 16))
  {
    uint64_t result = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(void *)(a1 + 32) = 100;
    *(_DWORD *)(a1 + 40) = 0;
    *(_DWORD *)(a1 + 19248) = 0;
    *(void *)(a1 + 38456) = 0;
    *(_DWORD *)(a1 + 38464) = 0;
    *(void *)(a1 + 38472) = 0;
    *(void *)(a1 + 38488) = 0;
    *(_DWORD *)(a1 + 38496) = 0;
    *(_OWORD *)(a1 + 38504) = 0u;
    *(_OWORD *)(a1 + 38520) = 0u;
    *(_DWORD *)(a1 + 38536) = 0;
    *(_DWORD *)(a1 + 38544) = 0;
    *(_DWORD *)(a1 + 38648) = 0;
    *(_DWORD *)(a1 + 57856) = 0;
    *(void *)(a1 + 77080) = 0;
    *(_DWORD *)(a1 + 77088) = 0;
    *(_OWORD *)(a1 + 77064) = 0u;
    *(_OWORD *)(a1 + 77192) = 0u;
    *(_OWORD *)(a1 + 77208) = 0u;
    *(_OWORD *)(a1 + 77160) = 0u;
    *(_OWORD *)(a1 + 77176) = 0u;
    *(_OWORD *)(a1 + 77128) = 0u;
    *(_OWORD *)(a1 + 77144) = 0u;
    *(_OWORD *)(a1 + 77096) = 0u;
    *(_OWORD *)(a1 + 77112) = 0u;
    return result;
  }
  *(double *)(a1 + 16) = v9;
  sub_100B9BD60((float *)(a2 + 36), v30);
  float v14 = sub_10126D71C((uint64_t)v30);
  *(_OWORD *)uint64_t v28 = *(_OWORD *)(a2 + 56);
  *(float *)&v28[16] = v14;
  *(_DWORD *)&v28[20] = v15;
  *(_DWORD *)&v28[24] = v16;
  sub_100AC5AD0((unsigned __int16 *)(a1 + 40), (long long *)v28);
  if (*(unsigned __int16 *)(a1 + 42) < 0x258u) {
    return 0;
  }
  char v17 = (int *)(a1 + 77088);
  ++*(_DWORD *)(a1 + 77224);
  if (a5 < 0.03) {
    ++*(_DWORD *)(a1 + 77228);
  }
  if (a6 < 0.01) {
    ++*(_DWORD *)(a1 + 77232);
  }
  sub_100DE3F14((float32x2_t *)a1, *(double *)(a2 + 56));
  unint64_t v18 = *(void *)(a1 + 32) + 1;
  *(void *)(a1 + 32) = v18;
  if (v18 >= 0x64)
  {
    sub_100DE41A0(a1);
    *(_OWORD *)(a1 + 38472) = *(_OWORD *)v28;
    *(_OWORD *)(a1 + 38484) = *(_OWORD *)&v28[12];
    *(void *)(a1 + 32) = 0;
    sub_100DE4334(a1, (uint64_t)v28);
    if ((unsigned char *)(a1 + 38504) != v28)
    {
      long long v19 = *(_OWORD *)&v28[16];
      *(_OWORD *)(a1 + 38504) = *(_OWORD *)v28;
      *(_OWORD *)(a1 + 38520) = v19;
      *(_DWORD *)(a1 + 38536) = v29;
    }
  }
  *(double *)(a1 + 24) = a4;
  *(_OWORD *)uint64_t v28 = *(unint64_t *)&a4;
  uint64_t v20 = sub_100DE4FF4((unsigned __int16 *)(a1 + 40), 0x12CuLL);
  *(_DWORD *)&v28[16] = sub_1004E301C(a1 + 38504, (float *)(v20 + 16));
  *(_DWORD *)&v28[20] = v21;
  *(_DWORD *)&v28[24] = v22;
  sub_100AC5AD0((unsigned __int16 *)(a1 + 38544), (long long *)v28);
  BOOL v23 = sub_100DE4570(a1, 0, a4, a5, a6);
  BOOL v24 = sub_100DE4570(a1, 1u, a4, a5, a6);
  if (*v17 != 2 && sub_100DE4ACC(a1) == 2)
  {
    *(_OWORD *)(a1 + 77192) = 0u;
    *(_OWORD *)(a1 + 77208) = 0u;
    *(_OWORD *)(a1 + 77160) = 0u;
    *(_OWORD *)(a1 + 77176) = 0u;
    *(_OWORD *)(a1 + 77128) = 0u;
    *(_OWORD *)(a1 + 77144) = 0u;
    *(_OWORD *)(a1 + 77096) = 0u;
    *(_OWORD *)(a1 + 77112) = 0u;
  }
  int v25 = sub_100DE4ACC(a1);
  *char v17 = v25;
  if (v25) {
    BOOL v26 = 0;
  }
  else {
    BOOL v26 = v23;
  }
  if (v26)
  {
    if (sub_100DE4B9C(a1, 0)) {
      goto LABEL_25;
    }
    int v25 = *v17;
  }
  if (v25 != 1 || !v24) {
    return 0;
  }
  uint64_t result = sub_100DE4B9C(a1, 1);
  if (!result) {
    return result;
  }
LABEL_25:
  if (a4 - *(double *)a1 > 0.600000024)
  {
    *(double *)a1 = a4;
    *(double *)(a1 + 8) = a3;
    return 1;
  }
  return 0;
}

void sub_100DE3F14(float32x2_t *a1, double a2)
{
  unint64_t v3 = a1 + 4807;
  int v4 = a1 + 2406;
  int v5 = a1[2406].u16[1];
  if (!a1[2406].i16[1])
  {
LABEL_7:
    unint64_t v12 = a1[5].u16[0] + (unint64_t)a1[5].u16[1] - 1;
    unint64_t v13 = a1[5].u32[1];
    if (v12 < v13) {
      unint64_t v13 = 0;
    }
    sub_100AC5AD0((unsigned __int16 *)&a1[2406], (long long *)&a1[4 * (v12 - v13) + 6]);
    unint64_t v14 = v4->u16[0] + (unint64_t)v4->u16[1] - 1;
    unint64_t v15 = v4->u32[1];
    if (v14 < v15) {
      unint64_t v15 = 0;
    }
    uint64_t v16 = (uint64_t)&a1[4 * (v14 - v15) + 2409];
    float32x2_t v17 = *(float32x2_t *)v16;
LABEL_12:
    float32x2_t *v3 = vadd_f32(v17, *v3);
    v3[1].f32[0] = *(float *)(v16 + 8) + v3[1].f32[0];
    return;
  }
  int v6 = a1 + 2407;
  uint64_t v7 = v4->u16[0];
  while (a2 - *(double *)&v6[4 * v7] > 6.02)
  {
    char v8 = &v6[4 * v7];
    float32x2_t *v3 = vsub_f32(*v3, v8[2]);
    a1[4808].f32[0] = a1[4808].f32[0] - v8[3].f32[0];
    unint64_t v9 = v7 + 1;
    unint64_t v10 = a1[2406].u32[1];
    if (v9 < v10) {
      LOWORD(v10) = 0;
    }
    unsigned __int16 v11 = v9 - v10;
    uint64_t v7 = v11;
    v4->i16[0] = v11;
    a1[2406].i16[1] = --v5;
    if (!(_WORD)v5) {
      goto LABEL_7;
    }
  }
  unint64_t v18 = a1[5].u16[1];
  if (v18 >= 3)
  {
    long long v19 = a1 + 6;
    unint64_t v20 = v18 + a1[5].u16[0] - 1;
    unint64_t v21 = a1[5].u32[1];
    if (v20 < v21) {
      unint64_t v21 = 0;
    }
    int v22 = (float *)&v19[4 * (v20 - v21) + 2];
    BOOL v23 = (float *)(sub_100DE4FF4((unsigned __int16 *)&a1[5], v18 - 2) + 16);
    uint64_t v24 = sub_100DE4FF4((unsigned __int16 *)&a1[5], a1[5].u16[1] - 3);
    if (sub_10126D75C(v22, v23, (float *)(v24 + 16)) <= 0.30103)
    {
      unint64_t v25 = a1[5].u16[0] + (unint64_t)a1[5].u16[1] - 1;
      unint64_t v26 = a1[5].u32[1];
      if (v25 < v26) {
        unint64_t v26 = 0;
      }
      if (sub_100DE4F78((float *)&v19[4 * (v25 - v26) + 2], (unsigned __int16 *)v4, 0.0349))
      {
        if (v4->i32[1] == v4->u16[1])
        {
          __int16 v27 = &v6[4 * v4->u16[0]];
          float32x2_t *v3 = vsub_f32(*v3, v27[2]);
          v3[1].f32[0] = v3[1].f32[0] - v27[3].f32[0];
        }
        unint64_t v28 = a1[5].u16[0] + (unint64_t)a1[5].u16[1] - 1;
        unint64_t v29 = a1[5].u32[1];
        if (v28 < v29) {
          unint64_t v29 = 0;
        }
        sub_100AC5AD0((unsigned __int16 *)v4, (long long *)&v19[4 * (v28 - v29)]);
        unint64_t v30 = v4->u16[0] + (unint64_t)v4->u16[1] - 1;
        unint64_t v31 = v4->u32[1];
        if (v30 < v31) {
          unint64_t v31 = 0;
        }
        char v32 = &v6[4 * (v30 - v31)];
        float32x2_t v33 = v32[2];
        uint64_t v16 = (uint64_t)&v32[2];
        float32x2_t v17 = v33;
        goto LABEL_12;
      }
    }
  }
}

void sub_100DE41A0(uint64_t a1)
{
  double v2 = __chkstk_darwin(a1);
  double v3 = v2;
  uint64_t v5 = v4;
  int v6 = (unsigned __int16 *)&v1[2406] + 1;
  unsigned int v7 = v1[2406].u16[1];
  if (v7 > 3)
  {
    unint64_t v8 = 0;
    unint64_t v9 = (float *)&v1[4807];
    *(float *)&double v2 = (float)v7;
    unint64_t v10 = (unsigned __int16 *)&v1[2406];
    float v11 = v1[4808].f32[0] / (float)v7;
    float32x2_t v17 = vdiv_f32(v1[4807], (float32x2_t)vdup_lane_s32(*(int32x2_t *)&v2, 0));
    float v18 = v11;
    *(void *)unint64_t v25 = 0x25800000000;
    do
    {
      uint64_t v12 = sub_100DE4FF4(v10, v8);
      sub_100659A48(v25, v12 + 16);
      ++v8;
    }
    while (v8 < *v6);
    sub_10082BFE8(v25, &v17, (uint64_t)&v19);
    float v14 = v22;
    float v13 = v23;
    float v15 = v24;
    if ((float)((float)((float)(v24 * v9[10]) + (float)(v23 * v9[9])) + (float)(v22 * v9[8])) <= 0.0)
    {
      uint64_t v16 = 0;
      float v19 = v22;
      float v20 = v23;
      float v21 = v24;
      do
      {
        *(float *)((char *)&v19 + v16) = -*(float *)((char *)&v19 + v16);
        v16 += 4;
      }
      while (v16 != 12);
      float v14 = v19;
      float v13 = v20;
      float v15 = v21;
    }
    *(double *)uint64_t v5 = v3;
    *(void *)(v5 + 8) = 0;
    *(float *)(v5 + 16) = v14;
    *(float *)(v5 + 20) = v13;
    *(float *)(v5 + 24) = v15;
  }
  else
  {
    *(double *)uint64_t v5 = v2;
    *(void *)(v5 + 8) = 0;
    *(void *)(v5 + 16) = 0;
    *(_DWORD *)(v5 + 24) = 1065353216;
  }
}

float *sub_100DE4334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v35 = 1065353216;
  double v3 = (float *)(a1 + 38488);
  long long v33 = xmmword_101D9016C;
  long long v34 = unk_101D9017C;
  sub_10080FCC8(a1 + 38488, (uint64_t)&v24);
  for (unint64_t i = 0; i != 9; ++i)
    *((float *)&v33 + i) = *((float *)&v33 + i) - sub_10080FD50((uint64_t)&v24, i);
  v36[0] = v33;
  v36[1] = v34;
  int v37 = v35;
  float v6 = v3[1];
  float v5 = v3[2];
  float v7 = *v3;
  float v8 = v6 + (float)(v5 * -0.0);
  float v9 = 0.0;
  float v10 = -(float)(*v3 - (float)(v5 * 0.0));
  float v11 = (float)(v6 * -0.0) + (float)(*v3 * 0.0);
  *(float *)float v23 = v8;
  *(float *)&v23[1] = v10;
  *(float *)&v23[2] = v11;
  float v12 = 1.0;
  float v13 = 0.0;
  float v14 = 0.0;
  float v15 = 0.0;
  if ((float)(v8 + (float)(v10 + v11)) != 0.0)
  {
    for (uint64_t j = 0; j != 3; ++j)
      float v15 = v15 + (float)(*(float *)&v23[j] * *(float *)&v23[j]);
    float v15 = atan2f(sqrtf(v15), (float)(v5 + (float)(v6 * 0.0)) + (float)(v7 * 0.0));
    float v12 = v11;
    float v13 = v10;
    float v14 = v8;
  }
  uint64_t v17 = 0;
  float v24 = v14;
  float v25 = v13;
  float v26 = v12;
  do
  {
    float v9 = v9 + (float)(*(float *)((char *)&v24 + v17) * *(float *)((char *)&v24 + v17));
    v17 += 4;
  }
  while (v17 != 12);
  if (sqrtf(v9) > 0.00000011921)
  {
    uint64_t v18 = 0;
    float v19 = 0.0;
    do
    {
      float v19 = v19 + (float)(*(float *)((char *)&v24 + v18) * *(float *)((char *)&v24 + v18));
      v18 += 4;
    }
    while (v18 != 12);
    float v20 = sqrtf(v19);
    float v14 = v14 / v20;
    float v13 = v13 / v20;
    float v12 = v12 / v20;
  }
  __float2 v21 = __sincosf_stret(v15);
  float v24 = v21.__cosval + (float)((float)(v14 * v14) * (float)(1.0 - v21.__cosval));
  float v25 = (float)(v21.__sinval * v12) + (float)((float)(v14 * v13) * (float)(1.0 - v21.__cosval));
  float v26 = (float)((float)(v14 * v12) * (float)(1.0 - v21.__cosval)) - (float)(v13 * v21.__sinval);
  float v27 = (float)((float)(v14 * v13) * (float)(1.0 - v21.__cosval)) - (float)(v12 * v21.__sinval);
  float v28 = v21.__cosval + (float)((float)(v13 * v13) * (float)(1.0 - v21.__cosval));
  float v29 = (float)(v21.__sinval * v14) + (float)((float)(v13 * v12) * (float)(1.0 - v21.__cosval));
  float v30 = (float)(v21.__sinval * v13) + (float)((float)(v14 * v12) * (float)(1.0 - v21.__cosval));
  float v31 = (float)((float)(v13 * v12) * (float)(1.0 - v21.__cosval)) - (float)(v14 * v21.__sinval);
  float v32 = v21.__cosval + (float)((float)(v12 * v12) * (float)(1.0 - v21.__cosval));
  return sub_100B5D33C((uint64_t)&v24, (uint64_t)v36, a2);
}

BOOL sub_100DE4570(uint64_t a1, unsigned int a2, double a3, float a4, float a5)
{
  BOOL result = 0;
  if (a2 > 1) {
    return result;
  }
  float v7 = (unsigned __int16 *)(a1 + 38544);
  unsigned int v8 = *(unsigned __int16 *)(a1 + 38546);
  if (v8 < 3) {
    return result;
  }
  uint64_t v11 = a1 + 77064;
  if (a2) {
    float v12 = (unsigned __int16 *)(a1 + 57856);
  }
  else {
    float v12 = (unsigned __int16 *)(a1 + 38648);
  }
  if (a2) {
    float v13 = (float32x2_t *)(a1 + 77076);
  }
  else {
    float v13 = (float32x2_t *)(a1 + 77064);
  }
  float v14 = v12 + 4;
  unsigned __int16 v15 = v12[1];
  if (v15)
  {
    uint64_t v16 = *v12;
    while (a3 - *(double *)&v14[16 * v16] > 4.02)
    {
      uint64_t v17 = (float *)&v14[16 * v16];
      float v18 = v13->f32[1];
      v13->f32[0] = v13->f32[0] - v17[4];
      v13->f32[1] = v18 - v17[5];
      v13[1].f32[0] = v13[1].f32[0] - v17[6];
      unint64_t v19 = v16 + 1;
      unint64_t v20 = *((unsigned int *)v12 + 1);
      if (v19 < v20) {
        LOWORD(v20) = 0;
      }
      unsigned __int16 v21 = v19 - v20;
      uint64_t v16 = v21;
      *float v12 = v21;
      v12[1] = --v15;
      if (!v15)
      {
        unsigned __int16 v15 = 0;
        break;
      }
    }
    unsigned int v8 = *(unsigned __int16 *)(a1 + 38546);
    if (v8 < 3) {
      return 0;
    }
    *(float *)v22.i32 = sub_100DE526C(a4, a5);
    if (*(float *)v22.i32 < 0.0) {
      return 0;
    }
    float v23 = *(float *)v22.i32;
    if (v15 >= 3u)
    {
      sub_100DE52E8((uint64_t)v12);
      unsigned int v8 = *(unsigned __int16 *)(a1 + 38546);
      goto LABEL_25;
    }
  }
  else
  {
    *(float *)v22.i32 = sub_100DE526C(a4, a5);
    if (*(float *)v22.i32 < 0.0) {
      return 0;
    }
    float v23 = *(float *)v22.i32;
  }
  v22.i32[0] = 1.0;
LABEL_25:
  uint64_t v24 = a1 + 38552;
  unint64_t v25 = *v7 + (unint64_t)v8 - 1;
  unint64_t v26 = *((unsigned int *)v7 + 1);
  if (v25 < v26) {
    unint64_t v26 = 0;
  }
  float v27 = (float32x2_t *)(v24 + 32 * (v25 - v26));
  float v28 = v27[3].f32[0] / *(float *)v22.i32;
  float v80 = *(float *)v22.i32;
  float32x2_t v29 = (float32x2_t)vdup_lane_s32(v22, 0);
  float32x2_t v85 = vdiv_f32(v27[2], v29);
  float v86 = v28;
  float v30 = (float32x2_t *)sub_100DE4FF4(v7, v8 - 2);
  float v31 = v30[3].f32[0] / v80;
  float32x2_t v83 = vdiv_f32(v30[2], v29);
  float v84 = v31;
  float v32 = (float32x2_t *)sub_100DE4FF4(v7, v7[1] - 3);
  float v33 = v32[3].f32[0] / v80;
  float32x2_t v81 = vdiv_f32(v32[2], v29);
  float v82 = v33;
  float v34 = sub_10126D75C((float *)&v85, (float *)&v83, (float *)&v81);
  ++*(_DWORD *)(v11 + 172);
  if (v34 > 0.47712)
  {
    BOOL result = 0;
    ++*(_DWORD *)(v11 + 176);
    return result;
  }
  uint64_t v35 = v7[1];
  unint64_t v36 = *v7 + v35 - 1;
  unint64_t v37 = *((unsigned int *)v7 + 1);
  if (v36 < v37) {
    unint64_t v37 = 0;
  }
  uint64_t v38 = v24 + 32 * (v36 - v37);
  uint64_t v39 = sub_100DE4FF4(v7, v35 - 2);
  float v40 = (float)(*(float *)(v38 + 16) * *(float *)(v39 + 20)) - (float)(*(float *)(v38 + 20) * *(float *)(v39 + 16));
  if (a2 == 1)
  {
    if (v40 >= 0.0) {
      return 0;
    }
  }
  else if (v40 < 0.0)
  {
    return 0;
  }
  uint64_t v41 = v12[1];
  if (!v12[1])
  {
LABEL_59:
    unint64_t v73 = *v7 + (unint64_t)v7[1] - 1;
    unint64_t v74 = *((unsigned int *)v7 + 1);
    if (v73 < v74) {
      unint64_t v74 = 0;
    }
    sub_100AC5AD0(v12, (long long *)(v24 + 32 * (v73 - v74)));
    unint64_t v75 = *v7 + (unint64_t)v7[1] - 1;
    unint64_t v76 = *((unsigned int *)v7 + 1);
    if (v75 < v76) {
      unint64_t v76 = 0;
    }
    unsigned __int8 v77 = (float32x2_t *)(v24 + 32 * (v75 - v76));
    float32x2_t *v13 = vadd_f32(v77[2], *v13);
    v13[1].f32[0] = v77[3].f32[0] + v13[1].f32[0];
    return 1;
  }
  float v42 = (float)v41;
  if (v41 <= 0x63) {
    float v42 = 100.0;
  }
  float v43 = v13->f32[0] / v42;
  float v44 = v13->f32[1] / v42;
  float v45 = v13[1].f32[0] / v42;
  unint64_t v46 = *v7 + (unint64_t)v7[1] - 1;
  unint64_t v47 = *((unsigned int *)v7 + 1);
  if (v46 < v47) {
    unint64_t v47 = 0;
  }
  uint64_t v48 = (float *)(v24 + 32 * (v46 - v47));
  unint64_t v49 = v41 + *v12 - 1;
  unint64_t v50 = *((unsigned int *)v12 + 1);
  if (v49 < v50) {
    unint64_t v50 = 0;
  }
  float v52 = v48[4];
  float v51 = v48[5];
  float v79 = (float)(v52 * *(float *)&v14[16 * (v49 - v50) + 10]) - (float)(v51 * *(float *)&v14[16 * (v49 - v50) + 8]);
  float v78 = sub_100DE51F0(v52 - v43, v51 - v44, v48[6] - v45);
  float v54 = v53;
  float v56 = v55;
  unint64_t v57 = *v12 + (unint64_t)v12[1] - 1;
  unint64_t v58 = *((unsigned int *)v12 + 1);
  if (v57 < v58) {
    unint64_t v58 = 0;
  }
  float v59 = sub_100DE51F0(*(float *)&v14[16 * (v57 - v58) + 8] - v43, *(float *)&v14[16 * (v57 - v58) + 10] - v44, *(float *)&v14[16 * (v57 - v58) + 12] - v45);
  float v62 = acosf((float)((float)(v56 * v60) + (float)(v54 * v61)) + (float)(v78 * v59));
  if (v62 <= 0.0) {
    float v62 = -v62;
  }
  if (a2 == 1)
  {
    if (v79 < 0.0) {
      goto LABEL_54;
    }
  }
  else if (v79 >= 0.0)
  {
    goto LABEL_54;
  }
  if (v62 < v23)
  {
    unint64_t v63 = *v12 + (unint64_t)v12[1] - 1;
    unint64_t v64 = *((unsigned int *)v12 + 1);
    if (v63 < v64) {
      unint64_t v64 = 0;
    }
    if (a3 - *(double *)&v14[16 * (v63 - v64)] < 3.0) {
      return 0;
    }
  }
LABEL_54:
  unint64_t v65 = *v12 + (unint64_t)v12[1] - 1;
  unint64_t v66 = *((unsigned int *)v12 + 1);
  if (v65 < v66) {
    unint64_t v66 = 0;
  }
  uint64_t v67 = (float32x2_t *)&v14[16 * (v65 - v66)];
  float v68 = v67[3].f32[0] / v80;
  float32x2_t v85 = vdiv_f32(v67[2], v29);
  float v86 = v68;
  unint64_t v69 = *v7 + (unint64_t)v7[1] - 1;
  unint64_t v70 = *((unsigned int *)v7 + 1);
  if (v69 < v70) {
    unint64_t v70 = 0;
  }
  char v71 = (float32x2_t *)(v24 + 32 * (v69 - v70));
  float v72 = v71[3].f32[0] / v80;
  float32x2_t v83 = vdiv_f32(v71[2], v29);
  float v84 = v72;
  BOOL result = sub_10126D8FC((float *)&v85, (float *)&v83, 0.017453);
  if (result) {
    goto LABEL_59;
  }
  return result;
}

uint64_t sub_100DE4ACC(uint64_t a1)
{
  uint64_t v1 = (unsigned __int16 *)(a1 + 57858);
  double v2 = (unsigned __int16 *)(a1 + 38650);
  uint64_t result = *(unsigned int *)(a1 + 77088);
  if (result == 1)
  {
    if (*v1 > 0x87u) {
      return 1;
    }
    goto LABEL_5;
  }
  if (result)
  {
LABEL_5:
    int v4 = 0;
    goto LABEL_6;
  }
  if (*v2 > 0x87u) {
    return 0;
  }
  int v4 = 1;
LABEL_6:
  unint64_t v5 = *v1;
  if (v5 <= 0x1D && *v2 < 0x1Eu) {
    return 2;
  }
  if (result == 1)
  {
    unint64_t v6 = *v2;
    if (v6 >= 0x1E && v5 + 40 < v6) {
      return 0;
    }
  }
  if (v4 && v5 >= 0x1E && (unint64_t)*v2 + 40 < v5) {
    return 1;
  }
  if (result == 2) {
    return v5 > *v2;
  }
  return result;
}

uint64_t sub_100DE4B9C(uint64_t a1, int a2)
{
  if (a2 == 2) {
    goto LABEL_57;
  }
  int v4 = (unsigned __int16 *)(a2 ? a1 + 57856 : a1 + 38648);
  unint64_t v5 = v4[1];
  unint64_t v6 = v5 - 2;
  if (v5 < 2) {
    goto LABEL_57;
  }
  float v7 = v4 + 4;
  unint64_t v8 = v5 + *v4 - 1;
  unint64_t v9 = *((unsigned int *)v4 + 1);
  if (v8 < v9) {
    unint64_t v9 = 0;
  }
  double v10 = *(double *)&v7[16 * (v8 - v9)];
  if (v10 - *(double *)sub_100DE4FF4(v4, v6) >= 0.200000003)
  {
LABEL_57:
    char v32 = 0;
    return v32 & 1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = v4[1];
  unint64_t v13 = *v4 + v12 - 1;
  unint64_t v14 = *((unsigned int *)v4 + 1);
  if (v13 < v14) {
    unint64_t v14 = 0;
  }
  unsigned __int16 v15 = (unint64_t *)(a1 + 77096);
  uint64_t v16 = (unint64_t *)(a1 + 77160);
  uint64_t v17 = (float *)&v7[16 * (v13 - v14)];
  float v18 = v17[6];
  float v53 = v17[4];
  float v54 = v17[5];
  float v56 = v53;
  float v57 = v54;
  float v52 = v18;
  float v58 = v18;
  float v19 = 0.0;
  do
  {
    float v19 = v19 + (float)(*(float *)((char *)&v56 + v11) * *(float *)((char *)&v56 + v11));
    v11 += 4;
  }
  while (v11 != 12);
  if (a2) {
    unint64_t v20 = v16;
  }
  else {
    unint64_t v20 = v15;
  }
  if (sqrtf(v19) > 0.00000011921)
  {
    uint64_t v21 = 0;
    float v22 = 0.0;
    do
    {
      float v22 = v22 + (float)(*(float *)((char *)&v56 + v21) * *(float *)((char *)&v56 + v21));
      v21 += 4;
    }
    while (v21 != 12);
    float v23 = sqrtf(v22);
    float v53 = v53 / v23;
    float v54 = v54 / v23;
    float v52 = v18 / v23;
  }
  uint64_t v24 = (float *)sub_100DE4FF4(v4, v12 - 2);
  uint64_t v25 = 0;
  float v26 = v24[5];
  float v50 = v24[6];
  float v51 = v24[4];
  float v56 = v51;
  float v57 = v26;
  float v58 = v50;
  float v27 = 0.0;
  do
  {
    float v27 = v27 + (float)(*(float *)((char *)&v56 + v25) * *(float *)((char *)&v56 + v25));
    v25 += 4;
  }
  while (v25 != 12);
  if (sqrtf(v27) > 0.00000011921)
  {
    uint64_t v28 = 0;
    float v29 = 0.0;
    do
    {
      float v29 = v29 + (float)(*(float *)((char *)&v56 + v28) * *(float *)((char *)&v56 + v28));
      v28 += 4;
    }
    while (v28 != 12);
    float v30 = sqrtf(v29);
    float v26 = v26 / v30;
    float v50 = v50 / v30;
    float v51 = v51 / v30;
  }
  uint64_t v31 = 0;
  char v32 = 0;
  unint64_t v33 = 0;
  float v34 = v20;
  do
  {
    uint64_t v35 = (float *)((char *)&unk_101D90094 + v31);
    if (a2 == 1) {
      unint64_t v36 = (char *)&unk_101D90094;
    }
    else {
      unint64_t v36 = (char *)&unk_101D900F4;
    }
    if (a2 != 1) {
      uint64_t v35 = (float *)((char *)&unk_101D900F4 + v31);
    }
    float v37 = *(float *)&v36[v31];
    float v39 = v35[1];
    float v38 = v35[2];
    float v40 = (float)(v37 * (float)-v26) + (float)(v51 * v39);
    float v55 = (float)(v37 * (float)-v54) + (float)(v53 * v39);
    float v41 = atan2f(v55, (float)((float)(v52 * v38) + (float)(v54 * v39)) + (float)(v53 * v37));
    if (v41 <= 0.0) {
      float v42 = -v41;
    }
    else {
      float v42 = v41;
    }
    float v43 = atan2f(v40, (float)((float)(v50 * v38) + (float)(v26 * v39)) + (float)(v51 * v37));
    if (v43 <= 0.0) {
      float v43 = -v43;
    }
    if (v42 < 0.7854 && v43 < 0.7854)
    {
      if (a2 == 1)
      {
        if (v40 > 0.0 && v55 < 0.0) {
          goto LABEL_45;
        }
      }
      else if (v40 < 0.0 && v55 > 0.0)
      {
LABEL_45:
        unint64_t v44 = *v34 + 1;
        *float v34 = v44;
        v32 |= v44 > 1;
      }
    }
    if (*v34++) {
      ++v33;
    }
    v31 += 12;
  }
  while (v31 != 96);
  if (v32)
  {
    uint64_t v46 = 0;
    uint64x2_t v47 = (uint64x2_t)vdupq_n_s64(1uLL);
    do
    {
      *(uint64x2_t *)&v20[v46] = vqsubq_u64(*(uint64x2_t *)&v20[v46], v47);
      v46 += 2;
    }
    while (v46 != 8);
  }
  if (a2) {
    uint64_t v48 = v15;
  }
  else {
    uint64_t v48 = v16;
  }
  if (v33 < 3)
  {
    *((_OWORD *)v48 + 2) = 0u;
    *((_OWORD *)v48 + 3) = 0u;
    *(_OWORD *)uint64_t v48 = 0u;
    *((_OWORD *)v48 + 1) = 0u;
  }
  else
  {
    memset_pattern16(v48, &unk_101D901D0, 0x40uLL);
  }
  return v32 & 1;
}

BOOL sub_100DE4F78(float *a1, unsigned __int16 *a2, float a3)
{
  if (!a2[1]) {
    return 1;
  }
  unint64_t v6 = 0;
  do
  {
    uint64_t v7 = sub_100DE4FF4(a2, v6);
    BOOL result = sub_10126D8FC(a1, (float *)(v7 + 16), a3);
    if (!result) {
      break;
    }
    ++v6;
  }
  while (v6 < a2[1]);
  return result;
}

uint64_t sub_100DE4FF4(unsigned __int16 *a1, unint64_t a2)
{
  if (*((unsigned int *)a1 + 1) <= a2)
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022F8D00);
    }
    uint64_t v7 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_FAULT))
    {
      int v8 = *((_DWORD *)a1 + 1);
      *(_DWORD *)std::string buf = 134218240;
      unint64_t v11 = a2;
      __int16 v12 = 1024;
      int v13 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_FAULT, "Assertion failed: i < fCapacity, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/CMQueue.h, line 233,i,%zu,capacity,%u.", buf, 0x12u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022F8D00);
      }
      unint64_t v9 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "const T &CMQueue<CLSwimStrokeCounter::VectorSample>::operator[](const size_t) const [T = CLSwimStrokeCounter::VectorSample]", "%s\n", v9);
      if (v9 != (char *)buf) {
        free(v9);
      }
    }
  }
  unint64_t v4 = *a1 + a2;
  unint64_t v5 = *((unsigned int *)a1 + 1);
  if (v4 < v5) {
    unint64_t v5 = 0;
  }
  return (uint64_t)&a1[16 * (v4 - v5) + 4];
}

float sub_100DE51F0(float result, float a2, float a3)
{
  uint64_t v3 = 0;
  *(float *)uint64_t v7 = result;
  *(float *)&v7[1] = a2;
  *(float *)&v7[2] = a3;
  float v4 = 0.0;
  do
  {
    float v4 = v4 + (float)(*(float *)&v7[v3] * *(float *)&v7[v3]);
    ++v3;
  }
  while (v3 != 3);
  if (sqrtf(v4) > 0.00000011921)
  {
    uint64_t v5 = 0;
    float v6 = 0.0;
    do
    {
      float v6 = v6 + (float)(*(float *)&v7[v5] * *(float *)&v7[v5]);
      ++v5;
    }
    while (v5 != 3);
    return result / sqrtf(v6);
  }
  return result;
}

float sub_100DE526C(float a1, float a2)
{
  for (uint64_t i = 0; i != 3; ++i)
  {
    if (flt_101D90160[i] > a2) {
      break;
    }
  }
  for (uint64_t j = 0; j != 3; ++j)
  {
    if (flt_101D90154[j] > a1) {
      break;
    }
  }
  return flt_101D90190[4 * i + j] * 3.14159265 / 180.0;
}

uint64_t sub_100DE52E8(uint64_t result)
{
  if (*(_WORD *)(result + 2))
  {
    uint64_t v1 = (unsigned __int16 *)result;
    unint64_t v2 = 0;
    float v3 = 0.0;
    do
    {
      BOOL result = sub_100DE4FF4(v1, v2);
      float v3 = v3
         + sqrtf((float)((float)(*(float *)(result + 24) * *(float *)(result + 24))+ (float)(*(float *)(result + 20) * *(float *)(result + 20)))+ (float)(*(float *)(result + 16) * *(float *)(result + 16)));
      ++v2;
    }
    while (v2 < v1[1]);
  }
  return result;
}

float32x2_t sub_100DE5368(uint64_t a1, double a2)
{
  unsigned int v2 = *(_DWORD *)(a1 + 77224);
  if (v2)
  {
    *(float *)&a2 = (float)v2;
    return vdiv_f32(vmul_f32(vcvt_f32_u32(*(uint32x2_t *)(a1 + 77228)), (float32x2_t)vdup_n_s32(0x42C80000u)), (float32x2_t)vdup_lane_s32(*(int32x2_t *)&a2, 0));
  }
  else
  {
    return 0;
  }
}

void sub_100DE53D4(id a1)
{
  qword_102419638 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

void *sub_100DE5404(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_10065AA18((uint64_t)v12, a3);
  sub_10065AB34((uint64_t)v11, a4);
  sub_10065AC50((uint64_t)v10, a5);
  sub_100DD5888((uint64_t)a1, a2, @"Motion", 1, 1, (uint64_t)v12, (uint64_t)v11, (uint64_t)v10);
  sub_10065ACE8(v10);
  sub_10065ABCC(v11);
  sub_10065AAB0(v12);
  *a1 = off_1022F8D30;
  sub_1000E9354(a1 + 17);
  sub_1000E9354(a1 + 19);
  return a1;
}

void sub_100DE5504(_Unwind_Exception *a1)
{
  sub_10013F3C4(v2);
  sub_100DD5960(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100DE5564(void *a1)
{
  *a1 = off_1022F8D30;
  uint64_t v2 = a1 + 17;
  sub_10013F3C4(a1 + 19);
  sub_10013F3C4(v2);

  return sub_100DD5960((uint64_t)a1);
}

void sub_100DE55CC(void *a1)
{
  sub_100DE5564(a1);

  operator delete();
}

uint64_t sub_100DE5604(uint64_t a1)
{
  if (qword_102419600 != -1) {
    dispatch_once(&qword_102419600, &stru_1022F8DD0);
  }
  uint64_t v2 = qword_102419608;
  if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [*(id *)(a1 + 16) UTF8String];
    *(_DWORD *)std::string buf = 136446210;
    id v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#CLConfig,%{public}s,clearOutAssetData", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8DD0);
    }
    [*(id *)(a1 + 16) UTF8String];
    uint64_t v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLMotionConfigAsset::clearOutAssetData()", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
  sub_1000E9354(buf);
  sub_1004CE798(a1 + 136, (uint64_t)buf);
  sub_10013F3C4(buf);
  sub_1000E9354(buf);
  sub_1004CE798(a1 + 152, (uint64_t)buf);
  return sub_10013F3C4(buf);
}

void sub_100DE57FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_10013F3C4(va);
  _Unwind_Resume(a1);
}

void sub_100DE581C(uint64_t a1)
{
  if (qword_102419600 != -1) {
    dispatch_once(&qword_102419600, &stru_1022F8DD0);
  }
  uint64_t v2 = qword_102419608;
  if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [*(id *)(a1 + 16) UTF8String];
    int v4 = sub_1007E72D8(*(void **)(a1 + 128));
    int v5 = sub_1007E7290(*(void **)(a1 + 128));
    LODWORD(buf[0].__r_.__value_.__l.__data_) = 136446722;
    *(std::string::size_type *)((char *)buf[0].__r_.__value_.__r.__words + 4) = (std::string::size_type)v3;
    WORD2(buf[0].__r_.__value_.__r.__words[1]) = 1026;
    *(_DWORD *)((char *)&buf[0].__r_.__value_.__r.__words[1] + 6) = v4;
    WORD1(buf[0].__r_.__value_.__r.__words[2]) = 1026;
    HIDWORD(buf[0].__r_.__value_.__r.__words[2]) = v5;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#CLConfig,%{public}s,sending kNotificationAltimeterSettings for asset,compatibilityVersion,%{public}d,contentVersion,%{public}d", (uint8_t *)buf, 0x18u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8DD0);
    }
    id v26 = [*(id *)(a1 + 16) UTF8String];
    int v27 = sub_1007E72D8(*(void **)(a1 + 128));
    int v28 = sub_1007E7290(*(void **)(a1 + 128));
    LODWORD(v43.__r_.__value_.__l.__data_) = 136446722;
    *(std::string::size_type *)((char *)v43.__r_.__value_.__r.__words + 4) = (std::string::size_type)v26;
    WORD2(v43.__r_.__value_.__r.__words[1]) = 1026;
    *(_DWORD *)((char *)&v43.__r_.__value_.__r.__words[1] + 6) = v27;
    WORD1(v43.__r_.__value_.__r.__words[2]) = 1026;
    HIDWORD(v43.__r_.__value_.__r.__words[2]) = v28;
    float v29 = (std::string *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLMotionConfigAsset::sendNotifications()", "%s\n", (const char *)v29);
    if (v29 != buf) {
      free(v29);
    }
  }
  sub_100134750(&v43, "#CLConfig,");
  float v6 = std::string::append(&v43, (const std::string::value_type *)[*(id *)(a1 + 16) UTF8String]);
  long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  buf[0].__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  sub_100134750(&__p, ",kNotificationAltimeterSettings,");
  if ((v41 & 0x80u) == 0) {
    p_p = (const std::string::value_type *)&__p;
  }
  else {
    p_p = (const std::string::value_type *)__p;
  }
  if ((v41 & 0x80u) == 0) {
    std::string::size_type v9 = v41;
  }
  else {
    std::string::size_type v9 = v40;
  }
  double v10 = std::string::append(buf, p_p, v9);
  unint64_t v11 = (void *)v10->__r_.__value_.__r.__words[0];
  unint64_t size = v10->__r_.__value_.__l.__size_;
  v42[0] = v10->__r_.__value_.__r.__words[2];
  *(_DWORD *)((char *)v42 + 3) = *(_DWORD *)((char *)&v10->__r_.__value_.__r.__words[2] + 3);
  int v13 = SHIBYTE(v10->__r_.__value_.__r.__words[2]);
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  if ((char)v41 < 0) {
    operator delete(__p);
  }
  if (SHIBYTE(buf[0].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(buf[0].__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v43.__r_.__value_.__l.__data_);
    if ((v13 & 0x80000000) == 0) {
      goto LABEL_18;
    }
  }
  else if ((v13 & 0x80000000) == 0)
  {
LABEL_18:
    *(void *)&long long __dst = v11;
    *((void *)&__dst + 1) = size;
    *(_DWORD *)float v37 = v42[0];
    *(_DWORD *)&v37[3] = *(_DWORD *)((char *)v42 + 3);
    char v38 = v13;
    goto LABEL_21;
  }
  sub_1000DC48C(&__dst, v11, size);
LABEL_21:
  unint64_t v14 = (void *)sub_1000E9358(a1 + 136);
  sub_1007E7320(&__dst, v14);
  if (v38 < 0) {
    operator delete((void *)__dst);
  }
  sub_100DD8718(a1, 7, a1 + 136);
  if (qword_102419600 != -1) {
    dispatch_once(&qword_102419600, &stru_1022F8DD0);
  }
  unsigned __int16 v15 = qword_102419608;
  if (os_log_type_enabled((os_log_t)qword_102419608, OS_LOG_TYPE_DEFAULT))
  {
    id v16 = [*(id *)(a1 + 16) UTF8String];
    int v17 = sub_1007E72D8(*(void **)(a1 + 128));
    int v18 = sub_1007E7290(*(void **)(a1 + 128));
    LODWORD(buf[0].__r_.__value_.__l.__data_) = 136446722;
    *(std::string::size_type *)((char *)buf[0].__r_.__value_.__r.__words + 4) = (std::string::size_type)v16;
    WORD2(buf[0].__r_.__value_.__r.__words[1]) = 1026;
    *(_DWORD *)((char *)&buf[0].__r_.__value_.__r.__words[1] + 6) = v17;
    WORD1(buf[0].__r_.__value_.__r.__words[2]) = 1026;
    HIDWORD(buf[0].__r_.__value_.__r.__words[2]) = v18;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "#CLConfig,%{public}s,sending kNotificationNoMovementSettings for asset,compatibilityVersion,%{public}d,contentVersion,%{public}d", (uint8_t *)buf, 0x18u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419600 != -1) {
      dispatch_once(&qword_102419600, &stru_1022F8DD0);
    }
    id v30 = [*(id *)(a1 + 16) UTF8String];
    int v31 = sub_1007E72D8(*(void **)(a1 + 128));
    int v32 = sub_1007E7290(*(void **)(a1 + 128));
    LODWORD(v43.__r_.__value_.__l.__data_) = 136446722;
    *(std::string::size_type *)((char *)v43.__r_.__value_.__r.__words + 4) = (std::string::size_type)v30;
    WORD2(v43.__r_.__value_.__r.__words[1]) = 1026;
    *(_DWORD *)((char *)&v43.__r_.__value_.__r.__words[1] + 6) = v31;
    WORD1(v43.__r_.__value_.__r.__words[2]) = 1026;
    HIDWORD(v43.__r_.__value_.__r.__words[2]) = v32;
    unint64_t v33 = (std::string *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLMotionConfigAsset::sendNotifications()", "%s\n", (const char *)v33);
    if (v33 != buf) {
      free(v33);
    }
  }
  sub_100134750(&v43, "#CLConfig,");
  float v19 = std::string::append(&v43, (const std::string::value_type *)[*(id *)(a1 + 16) UTF8String]);
  long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  buf[0].__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
  *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  sub_100134750(&__p, ",kNotificationNoMovementSettings,");
  if ((v41 & 0x80u) == 0) {
    uint64_t v21 = (const std::string::value_type *)&__p;
  }
  else {
    uint64_t v21 = (const std::string::value_type *)__p;
  }
  if ((v41 & 0x80u) == 0) {
    std::string::size_type v22 = v41;
  }
  else {
    std::string::size_type v22 = v40;
  }
  float v23 = std::string::append(buf, v21, v22);
  long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  std::string::size_type v35 = v23->__r_.__value_.__r.__words[2];
  *(_OWORD *)float v34 = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  uint64_t v25 = (void *)sub_1000E9358(a1 + 152);
  sub_1007E7320((long long *)v34, v25);
  if (SHIBYTE(v35) < 0) {
    operator delete(v34[0]);
  }
  if ((char)v41 < 0) {
    operator delete(__p);
  }
  if (SHIBYTE(buf[0].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(buf[0].__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v43.__r_.__value_.__l.__data_);
  }
  sub_100DD8718(a1, 10, a1 + 152);
  if (v13 < 0) {
    operator delete(v11);
  }
}

void sub_100DE5E1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  if (v43 < 0) {
    operator delete(v42);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DE5F04(uint64_t a1)
{
  sub_100DD6DC0(a1, @"altimeterSettings.plist", a1 + 136);
  sub_100DD6DC0(a1, @"noMovementSettings.plist", a1 + 152);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 120);

  return v2(a1);
}

void sub_100DE5F7C(id a1)
{
  qword_102419608 = (uint64_t)os_log_create("com.apple.locationd.Utility", "Utility");
}

uint64_t sub_100DE5FAC(double a1, double a2, double a3)
{
  uint64_t result = 0;
  if (a1 > 0.0 && a2 > 0.0)
  {
    double v4 = a1 * 60.0;
    LODWORD(result) = sub_10007E3A4(a2, a3);
    if (v4 > 100.0) {
      return result;
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100DE6008(double a1, double a2, double a3)
{
  uint64_t result = 0;
  if (a1 > 0.0 && a2 > 0.0)
  {
    double v4 = a1 * 60.0;
    LODWORD(result) = sub_10007E3A4(a2, a3);
    if (v4 > 140.0) {
      return 1;
    }
    else {
      return result;
    }
  }
  return result;
}

uint64_t sub_100DE6064(double a1, double a2, double a3, double a4)
{
  uint64_t v8 = 0;
  if (a1 > 0.0 && a2 > 0.0)
  {
    double v9 = a1 * 60.0;
    BOOL v10 = sub_10007E3A4(a2, a3);
    uint64_t v8 = v9 > 140.0 || v10;
  }
  if (a4 > 0.0)
  {
    int v11 = 0;
    if (a1 > 0.0 && a2 / a4 > 0.0)
    {
      BOOL v12 = sub_10007E3A4(a2 / a4, a3);
      int v11 = a1 * 60.0 > 140.0 || v12;
    }
    return v8 | v11;
  }
  return v8;
}

double sub_100DE6130(double a1, double a2)
{
  double result = 0.0;
  if (a1 >= 0.5) {
    return a2 / a1 * 100.0;
  }
  return result;
}

BOOL sub_100DE6158(uint64_t a1)
{
  int v2 = sub_10101439C(a1);
  BOOL result = 0;
  if (v2 == 1 && *(void *)(a1 + 224) != 1) {
    return *(void *)(a1 + 112) == 17;
  }
  return result;
}

BOOL sub_100DE61A4(uint64_t a1)
{
  return a1 == 17;
}

id sub_100DE61B0(id *a1)
{
  return [*a1 count];
}

id sub_100DE61CC@<X0>(id *a1@<X0>, double *a2@<X1>, void **a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  id v6 = [*a1 allKeys];
  id result = [v6 countByEnumeratingWithState:&v27 objects:v31 count:16];
  id v8 = result;
  if (result)
  {
    uint64_t v9 = *(void *)v28;
    do
    {
      BOOL v10 = 0;
      do
      {
        if (*(void *)v28 != v9) {
          objc_enumerationMutation(v6);
        }
        uint64_t v11 = *(void *)(*((void *)&v27 + 1) + 8 * (void)v10);
        sub_100DE63FC(a1, v11, (uint64_t)v26);
        double v12 = sub_10131898C((uint64_t)v26);
        double v13 = *a2;
        sub_100DE6E84((uint64_t)v26);
        if (v12 > v13)
        {
          unsigned __int16 v15 = (uint64_t *)a3[1];
          unint64_t v14 = (unint64_t)a3[2];
          if ((unint64_t)v15 >= v14)
          {
            uint64_t v17 = ((char *)v15 - (unsigned char *)*a3) >> 3;
            if ((unint64_t)(v17 + 1) >> 61) {
              sub_1001D7FD4();
            }
            uint64_t v18 = v14 - (void)*a3;
            uint64_t v19 = v18 >> 2;
            if (v18 >> 2 <= (unint64_t)(v17 + 1)) {
              uint64_t v19 = v17 + 1;
            }
            if ((unint64_t)v18 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v20 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v20 = v19;
            }
            if (v20) {
              uint64_t v21 = (char *)sub_1000DA54C((uint64_t)(a3 + 2), v20);
            }
            else {
              uint64_t v21 = 0;
            }
            std::string::size_type v22 = (uint64_t *)&v21[8 * v17];
            uint64_t *v22 = v11;
            id v16 = v22 + 1;
            long long v24 = (char *)*a3;
            float v23 = (char *)a3[1];
            if (v23 != *a3)
            {
              do
              {
                uint64_t v25 = *((void *)v23 - 1);
                v23 -= 8;
                *--std::string::size_type v22 = v25;
              }
              while (v23 != v24);
              float v23 = (char *)*a3;
            }
            *a3 = v22;
            a3[1] = v16;
            a3[2] = &v21[8 * v20];
            if (v23) {
              operator delete(v23);
            }
          }
          else
          {
            uint64_t *v15 = v11;
            id v16 = v15 + 1;
          }
          a3[1] = v16;
        }
        BOOL v10 = (char *)v10 + 1;
      }
      while (v10 != v8);
      id result = [v6 countByEnumeratingWithState:&v27 objects:v31 count:16];
      id v8 = result;
    }
    while (result);
  }
  return result;
}

void sub_100DE63C4(_Unwind_Exception *exception_object)
{
  id v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

id sub_100DE63FC@<X0>(id *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id result = [*a1 objectForKey:a2];
  if (result)
  {
    id result = (id)sub_101318988(&v6, +[NSDictionary dictionaryWithDictionary:result]);
    *(void *)a3 = v6;
    *(_OWORD *)(a3 + 8) = v7;
    *(void *)(a3 + 24) = v8;
    long long v5 = v10;
    *(_OWORD *)(a3 + 32) = v9;
    *(_OWORD *)(a3 + 48) = v5;
    *(_OWORD *)(a3 + 64) = v11;
    *(void *)(a3 + 80) = v12;
    *(void *)(a3 + 104) = v14;
    *(_OWORD *)(a3 + 88) = v13;
    *(void *)(a3 + 112) = v15;
    *(unsigned char *)(a3 + 120) = 1;
  }
  else
  {
    *(unsigned char *)a3 = 0;
    *(unsigned char *)(a3 + 120) = 0;
  }
  return result;
}

CFStringRef sub_100DE64B0(int a1, void *a2)
{
  if (a1 < 1 || ![a2 count]) {
    return &stru_10234F018;
  }
  int v4 = [a2 count];
  if (v4 <= a1) {
    LODWORD(v5) = 0;
  }
  else {
    LODWORD(v5) = arc4random_uniform(v4 - a1);
  }
  id v7 = +[NSMutableArray array];
  if ((int)v5 < v4)
  {
    uint64_t v5 = (int)v5;
    do
    {
      if ((unint64_t)[v7 count] >= a1) {
        break;
      }
      [v7 addObject:[a2 objectAtIndex:v5++]];
    }
    while (v4 != v5);
  }

  return (const __CFString *)[v7 componentsJoinedByString:@", "];
}

CFStringRef sub_100DE65AC(id *a1, int a2)
{
  id v3 = [*a1 allKeys];

  return sub_100DE64B0(a2, v3);
}

double sub_100DE65EC(id *a1)
{
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v2 = [*a1 allKeys];
  id v3 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (!v3) {
    return -1.0;
  }
  uint64_t v4 = *(void *)v11;
  double v5 = -1.0;
  do
  {
    for (uint64_t i = 0; i != v3; uint64_t i = (char *)i + 1)
    {
      if (*(void *)v11 != v4) {
        objc_enumerationMutation(v2);
      }
      sub_100DE63FC(a1, *(void *)(*((void *)&v10 + 1) + 8 * i), (uint64_t)v9);
      double v7 = sub_10131898C((uint64_t)v9);
      if (v5 < v7) {
        double v5 = v7;
      }
      sub_100DE6E84((uint64_t)v9);
    }
    id v3 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
  }
  while (v3);
  return v5;
}

void sub_100DE6710(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100DE672C(id *a1)
{
  sub_10010F274((uint64_t)v13);
  sub_100132EFC(v14, (uint64_t)"count: ", 7);
  [*a1 count];
  std::ostream::operator<<();
  if ((int)[*a1 count] >= 1)
  {
    id v2 = sub_100132EFC(v14, (uint64_t)", samples: ", 11);
    id v3 = (char *)-[__CFString UTF8String]((id)sub_100DE64B0(5, [*a1 allKeys]), "UTF8String");
    sub_100134750(__p, v3);
    if ((v12 & 0x80u) == 0) {
      uint64_t v4 = __p;
    }
    else {
      uint64_t v4 = (void **)__p[0];
    }
    if ((v12 & 0x80u) == 0) {
      uint64_t v5 = v12;
    }
    else {
      uint64_t v5 = (uint64_t)__p[1];
    }
    sub_100132EFC(v2, (uint64_t)v4, v5);
    if ((char)v12 < 0) {
      operator delete(__p[0]);
    }
    sub_100DE65EC(a1);
    uint64_t v6 = sub_100132EFC(v14, (uint64_t)", oldest age: ", 14);
    uint64_t v7 = *v6;
    *(uint64_t *)((char *)v6 + *(void *)(*v6 - 24) + 16) = 2;
    *(_DWORD *)((char *)v6 + *(void *)(v7 - 24) + 8) = *(_DWORD *)((unsigned char *)v6 + *(void *)(v7 - 24) + 8) & 0xFFFFFEFB | 4;
    uint64_t v8 = (void *)std::ostream::operator<<();
    sub_100132EFC(v8, (uint64_t)"h", 1);
  }
  std::stringbuf::str();
  *(void *)((char *)v13
  v14[0] = v9;
  if (v15 < 0) {
    operator delete((void *)v14[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return std::ios::~ios();
}

void sub_100DE69EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_101A129A8((uint64_t)&a15);
  _Unwind_Resume(a1);
}

id sub_100DE6A24(id *a1)
{
  if (qword_1024193A0 != -1) {
    dispatch_once(&qword_1024193A0, &stru_1022F8DF0);
  }
  id v2 = qword_1024193A8;
  if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v3 = [*a1 count];
    *(_DWORD *)std::string buf = 67240192;
    unsigned int v28 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "WifiAssociatedApCentroidStore, %{public}d entries", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022F8DF0);
    }
    unsigned int v14 = [*a1 count];
    LODWORD(__p[0]) = 67240192;
    HIDWORD(__p[0]) = v14;
    char v15 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiAssociatedApCentroidKVStoreDictionary::logAllEntries() const", "%s\n", v15);
    if (v15 != (char *)buf) {
      free(v15);
    }
  }
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v4 = *a1;
  id result = [*a1 countByEnumeratingWithState:&v16 objects:v26 count:16];
  id v6 = result;
  if (result)
  {
    uint64_t v7 = *(void *)v17;
    do
    {
      uint64_t v8 = 0;
      do
      {
        if (*(void *)v17 != v7) {
          objc_enumerationMutation(v4);
        }
        uint64_t v9 = *(void *)(*((void *)&v16 + 1) + 8 * (void)v8);
        if (qword_1024193A0 != -1) {
          dispatch_once(&qword_1024193A0, &stru_1022F8DF0);
        }
        long long v10 = qword_1024193A8;
        if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEFAULT))
        {
          sub_100DE63FC(a1, v9, (uint64_t)buf);
          sub_1013189B8((uint64_t)buf);
          long long v11 = __p;
          if (v21 < 0) {
            long long v11 = (void **)__p[0];
          }
          *(_DWORD *)std::string::size_type v22 = 136380675;
          *(void *)&v22[4] = v11;
          _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "WifiAssociatedApCentroidStore, %{private}s", v22, 0xCu);
          if (v21 < 0) {
            operator delete(__p[0]);
          }
          sub_100DE6E84((uint64_t)buf);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024193A0 != -1) {
            dispatch_once(&qword_1024193A0, &stru_1022F8DF0);
          }
          sub_100DE63FC(a1, v9, (uint64_t)__p);
          sub_1013189B8((uint64_t)__p);
          unsigned __int8 v12 = v22;
          if (v23 < 0) {
            unsigned __int8 v12 = *(unsigned char **)v22;
          }
          int v24 = 136380675;
          uint64_t v25 = v12;
          long long v13 = (char *)_os_log_send_and_compose_impl();
          if (v23 < 0) {
            operator delete(*(void **)v22);
          }
          sub_100DE6E84((uint64_t)__p);
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiAssociatedApCentroidKVStoreDictionary::logAllEntries() const", "%s\n", v13);
          if (v13 != (char *)buf) {
            free(v13);
          }
        }
        uint64_t v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      id result = [v4 countByEnumeratingWithState:&v16 objects:v26 count:16];
      id v6 = result;
    }
    while (result);
  }
  return result;
}

void sub_100DE6E5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  sub_100DE6E84((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100DE6E84(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 120))
  {
    if (*(char *)(a1 + 111) < 0) {
      operator delete(*(void **)(a1 + 88));
    }
    if (*(char *)(a1 + 31) < 0) {
      operator delete(*(void **)(a1 + 8));
    }
  }
  return a1;
}

void sub_100DE6ED0(id a1)
{
  qword_1024193A8 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

uint64_t sub_100DE7038(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    if ((v6 >> 3) == 1)
    {
      char v12 = 0;
      unsigned int v13 = 0;
      uint64_t v14 = 0;
      *(unsigned char *)(a1 + 16) |= 1u;
      while (1)
      {
        unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v15 == -1 || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v16 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
        v14 |= (unint64_t)(v16 & 0x7F) << v12;
        if ((v16 & 0x80) == 0) {
          goto LABEL_28;
        }
        v12 += 7;
        BOOL v9 = v13++ >= 9;
        if (v9)
        {
          uint64_t v14 = 0;
          goto LABEL_30;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_28:
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        uint64_t v14 = 0;
      }
LABEL_30:
      *(void *)(a1 + 8) = v14;
    }
    else
    {
      uint64_t result = PBReaderSkipValueWithTag();
      if (!result) {
        return result;
      }
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_100DE73FC(uint64_t a1, uint64_t *a2)
{
  sub_10079EEC8(a2);
  uint64_t v3 = sub_1001A58C0();

  sub_101432158(v3, (uint64_t)a2);
}

void sub_100DE74EC(id a1)
{
  qword_102481788 = (uint64_t)[objc_alloc((Class)CLDispatchSilo) initWithIdentifier:@"CLSignalEnvironmentProviderSilo"];
}

uint64_t sub_100DE75AC(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100DE7B30;
  block[3] = &unk_10229FED8;
  block[4] = a1;
  if (qword_1024817A0 != -1) {
    dispatch_once(&qword_1024817A0, block);
  }
  return qword_10248AC28;
}

uint64_t sub_100DE782C(uint64_t a1, double a2, long double a3)
{
  uint64_t v5 = *(void *)(a1 + 136);
  if (!v5) {
    operator new();
  }
  char v10 = 0;
  if (*(char *)(a1 + 479) < 0)
  {
    sub_1000DC48C(__p, *(void **)(a1 + 456), *(void *)(a1 + 464));
  }
  else
  {
    *(_OWORD *)long long __p = *(_OWORD *)(a1 + 456);
    uint64_t v9 = *(void *)(a1 + 472);
  }
  uint64_t v6 = sub_100193EA8(v5, (const char *)__p, &v10, a2, a3);
  if (SHIBYTE(v9) < 0) {
    operator delete(__p[0]);
  }
  return v6;
}

void sub_100DE790C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
}

void sub_100DE7988(id a1)
{
  if (qword_1024193D0 != -1) {
    dispatch_once(&qword_1024193D0, &stru_1022F9058);
  }
  uint64_t v1 = qword_1024193D8;
  if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::string buf = 67240192;
    int v4 = 1;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "CLSignalEnvironmentProvider is supported: %{public}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022F9058);
    }
    id v2 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "+[CLSignalEnvironmentProviderAdapter(IsSupported) isSupported]_block_invoke", "%s\n", v2);
    if (v2 != (char *)buf) {
      free(v2);
    }
  }
}

void sub_100DE7B30()
{
}

void sub_100DE7B7C()
{
}

void sub_100DE7BA0(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_100DE888C(a1, "CLSignalEnvironmentProvider", a2);
  *(void *)uint64_t v3 = off_1022F8EB0;
  *(_OWORD *)(v3 + 112) = 0u;
  *(_OWORD *)(v3 + 128) = 0u;
  *(void *)(v3 + 144) = 0;
  *(_DWORD *)(v3 + 152) = 1;
  *(unsigned char *)(v3 + 156) = 0;
  sub_1005C3A50(v3 + 160, *(void **)(v3 + 32), (uint64_t)sub_100DE8938, a1);
}

void sub_100DE8760(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void **a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  if (v23[479] < 0) {
    operator delete(*v24);
  }
  if (v23[455] < 0) {
    operator delete(*a13);
  }
  if (v23[431] < 0) {
    operator delete(*v25);
  }
  sub_1005C3B7C(a12);
  uint64_t v28 = *v26;
  uint64_t *v26 = 0;
  if (v28) {
    (*(void (**)(uint64_t))(*(void *)v28 + 8))(v28);
  }
  sub_100DE8B14((uint64_t)v23);
  _Unwind_Resume(a1);
}

uint64_t sub_100DE888C(uint64_t a1, char *a2, void *a3)
{
  *(void *)a1 = off_1022F9088;
  sub_100134750((void *)(a1 + 8), a2);
  *(void *)(a1 + 32) = a3;
  *(void *)(a1 + 40) = [a3 silo];
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(unsigned char *)(a1 + 108) = 0;
  return a1;
}

void sub_100DE891C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DE8938(uint64_t a1, int a2, uint64_t a3)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a3 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022F9038);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v9 = 1;
    uint64_t v6 = _os_activity_create((void *)&_mh_execute_header, "CL: CLSignalEnvironmentProvider::onSignalEnvironmentUpdated", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v6, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022F9038);
    }
    unint64_t v7 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v11 = 0;
      __int16 v12 = 2082;
      unsigned int v13 = "";
      __int16 v14 = 2082;
      unint64_t v15 = "activity";
      __int16 v16 = 2050;
      uint64_t v17 = a3;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLSignalEnvironmentProvider::onSignalEnvironmentUpdated\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v9 = 0;
  }
  sub_100DE91B0(a3, a1, a2);
  if (v9) {
    os_activity_scope_leave(&state);
  }
}

void sub_100DE8AF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DE8B14(uint64_t a1)
{
  *(void *)a1 = off_1022F9088;
  [*(id *)(a1 + 48) invalidate];

  sub_1004459BC(a1 + 80, *(void **)(a1 + 88));
  sub_100445A1C(a1 + 56, *(void **)(a1 + 64));
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

uint64_t sub_100DE8B98(uint64_t a1)
{
  *(void *)a1 = off_1022F8EB0;
  uint64_t v2 = *(void *)(a1 + 128);
  if (v2)
  {
    sub_10051310C(v2 + 8);
    operator delete();
  }
  uint64_t v3 = *(void *)(a1 + 136);
  if (v3)
  {
    sub_10051310C(v3 + 8);
    operator delete();
  }
  uint64_t v4 = *(void *)(a1 + 480);
  if (v4)
  {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    *(void *)(a1 + 480) = 0;
  }
  (*(void (**)(uint64_t))(*(void *)a1 + 16))(a1);
  if (*(char *)(a1 + 479) < 0) {
    operator delete(*(void **)(a1 + 456));
  }
  if (*(char *)(a1 + 455) < 0) {
    operator delete(*(void **)(a1 + 432));
  }
  if (*(char *)(a1 + 431) < 0) {
    operator delete(*(void **)(a1 + 408));
  }
  sub_1005C3B7C(a1 + 160);
  uint64_t v5 = *(void *)(a1 + 112);
  *(void *)(a1 + 112) = 0;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }

  return sub_100DE8B14(a1);
}

void sub_100DE8D08(uint64_t a1)
{
  sub_100DE8B98(a1);

  operator delete();
}

id sub_100DE8D40(uint64_t a1)
{
  *(unsigned char *)(a1 + 108) = 1;
  return [*(id *)(*(void *)(a1 + 112) + 16) unregister:*(void *)(*(void *)(a1 + 112) + 8) forNotification:5];
}

void *sub_100DE8D58@<X0>(_DWORD *a1@<X1>, void *a2@<X8>)
{
  snprintf(__str, 0x20uLL, "%d", *a1);
  return sub_100134750(a2, __str);
}

uint64_t sub_100DE8DD4(uint64_t a1, int *a2)
{
  if (qword_1024193D0 != -1) {
    dispatch_once(&qword_1024193D0, &stru_1022F9058);
  }
  uint64_t v4 = qword_1024193D8;
  if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEBUG))
  {
    int v5 = *a2;
    *(_DWORD *)std::string buf = 67240192;
    int v9 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "CLSE, Client registered for notification %{public}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022F9058);
    }
    unint64_t v7 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLSignalEnvironmentProvider::registerForNotificationInternal(const CLSignalEnvironmentProvider_Type::Notification &)", "%s\n", v7);
    if (v7 != (char *)buf) {
      free(v7);
    }
  }
  if (!*a2) {
    [*(id *)(*(void *)(a1 + 112) + 16) register:*(void *)(*(void *)(a1 + 112) + 8) forNotification:5 registrationInfo:0];
  }
  return 1;
}

uint64_t sub_100DE8FAC(uint64_t a1, int *a2)
{
  if (qword_1024193D0 != -1) {
    dispatch_once(&qword_1024193D0, &stru_1022F9058);
  }
  uint64_t v4 = qword_1024193D8;
  if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEBUG))
  {
    int v5 = *a2;
    *(_DWORD *)std::string buf = 67240192;
    int v9 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "CLSE, Client unregistered for notification %{public}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022F9058);
    }
    unint64_t v7 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLSignalEnvironmentProvider::unregisterForNotificationInternal(const CLSignalEnvironmentProvider_Type::Notification &)", "%s\n", v7);
    if (v7 != (char *)buf) {
      free(v7);
    }
  }
  if (!*a2) {
    [*(id *)(*(void *)(a1 + 112) + 16) unregister:*(void *)(*(void *)(a1 + 112) + 8) forNotification:5];
  }
  return 1;
}

void sub_100DE91B0(uint64_t a1, uint64_t a2, int a3)
{
  switch(a3)
  {
    case 0:
      if (qword_1024193D0 != -1) {
        dispatch_once(&qword_1024193D0, &stru_1022F9058);
      }
      uint64_t v6 = qword_1024193D8;
      if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "CLSE,download status,NONE", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193D0 != -1) {
          dispatch_once(&qword_1024193D0, &stru_1022F9058);
        }
        LOWORD(v42[0]) = 0;
        unint64_t v7 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLSignalEnvironmentProvider::onSignalEnvironmentUpdated(CLFileUpdate *, CLFileUpdate::UpdateStatus)", "%s\n", v7);
        goto LABEL_70;
      }
      break;
    case 1:
      if (qword_1024193D0 != -1) {
        dispatch_once(&qword_1024193D0, &stru_1022F9058);
      }
      int v24 = qword_1024193D8;
      if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEBUG, "CLSE,download status,STARTED", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193D0 != -1) {
          dispatch_once(&qword_1024193D0, &stru_1022F9058);
        }
        LOWORD(v42[0]) = 0;
        uint64_t v28 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLSignalEnvironmentProvider::onSignalEnvironmentUpdated(CLFileUpdate *, CLFileUpdate::UpdateStatus)", "%s\n", v28);
        if (v28 != buf) {
          free(v28);
        }
      }
      *(CFAbsoluteTime *)(a1 + 144) = CFAbsoluteTimeGetCurrent();
      break;
    case 2:
      if (qword_1024193D0 != -1) {
        dispatch_once(&qword_1024193D0, &stru_1022F9058);
      }
      char v8 = qword_1024193D8;
      if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "CLSE,download status,COMPLETED", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193D0 != -1) {
          dispatch_once(&qword_1024193D0, &stru_1022F9058);
        }
        LOWORD(v42[0]) = 0;
        id v26 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLSignalEnvironmentProvider::onSignalEnvironmentUpdated(CLFileUpdate *, CLFileUpdate::UpdateStatus)", "%s\n", v26);
        if (v26 != buf) {
          free(v26);
        }
      }
      sub_1005C768C(a2, (uint64_t)v42);
      *(_DWORD *)(a1 + 152) = 1;
      if (qword_1024193D0 != -1) {
        dispatch_once(&qword_1024193D0, &stru_1022F9058);
      }
      int v9 = qword_1024193D8;
      if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEBUG))
      {
        char v10 = v42;
        if (v43 < 0) {
          char v10 = (void **)v42[0];
        }
        *(_DWORD *)std::string buf = 136446210;
        *(void *)&uint8_t buf[4] = v10;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "CLSE,downloaded,%{public}s", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193D0 != -1) {
          dispatch_once(&qword_1024193D0, &stru_1022F9058);
        }
        long long v29 = v42;
        if (v43 < 0) {
          long long v29 = (void **)v42[0];
        }
        int v38 = 136446210;
        float v39 = v29;
        long long v30 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLSignalEnvironmentProvider::onSignalEnvironmentUpdated(CLFileUpdate *, CLFileUpdate::UpdateStatus)", "%s\n", v30);
        if (v30 != buf) {
          free(v30);
        }
      }
      if (v43 >= 0) {
        int v11 = v42;
      }
      else {
        int v11 = (void **)v42[0];
      }
      if (!sub_1004BF004((const char *)v11, 4))
      {
        if (qword_1024193D0 != -1) {
          dispatch_once(&qword_1024193D0, &stru_1022F9058);
        }
        __int16 v12 = qword_1024193D8;
        if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_INFO))
        {
          unsigned int v13 = v42;
          if (v43 < 0) {
            unsigned int v13 = (void **)v42[0];
          }
          *(_DWORD *)std::string buf = 136446210;
          *(void *)&uint8_t buf[4] = v13;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "#Warning,Cannot set protection class for CLSE downloaded file,%{public}s", buf, 0xCu);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024193D0 != -1) {
            dispatch_once(&qword_1024193D0, &stru_1022F9058);
          }
          int v31 = v42;
          if (v43 < 0) {
            int v31 = (void **)v42[0];
          }
          int v38 = 136446210;
          float v39 = v31;
          int v32 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLSignalEnvironmentProvider::onSignalEnvironmentUpdated(CLFileUpdate *, CLFileUpdate::UpdateStatus)", "%s\n", v32);
          if (v32 != buf) {
            free(v32);
          }
        }
      }
      *(CFAbsoluteTime *)(a1 + 144) = CFAbsoluteTimeGetCurrent();
      __int16 v14 = dispatch_queue_create(off_1024747E8, 0);
      if (*(char *)(a1 + 479) < 0)
      {
        sub_1000DC48C(buf, *(void **)(a1 + 456), *(void *)(a1 + 464));
      }
      else
      {
        *(_OWORD *)std::string buf = *(_OWORD *)(a1 + 456);
        *(void *)&uint8_t buf[16] = *(void *)(a1 + 472);
      }
      block[0] = _NSConcreteStackBlock;
      block[1] = 3321888768;
      block[2] = sub_100DE9EB0;
      block[3] = &unk_1022F8F80;
      if (SHIBYTE(v43) < 0)
      {
        sub_1000DC48C(&v34, v42[0], (unint64_t)v42[1]);
      }
      else
      {
        long long v34 = *(_OWORD *)v42;
        uint64_t v35 = v43;
      }
      if ((buf[23] & 0x80000000) != 0)
      {
        sub_1000DC48C(&__p, *(void **)buf, *(unint64_t *)&buf[8]);
      }
      else
      {
        long long __p = *(_OWORD *)buf;
        uint64_t v37 = *(void *)&buf[16];
      }
      dispatch_async(v14, block);
      dispatch_release(v14);
      if (SHIBYTE(v37) < 0) {
        operator delete((void *)__p);
      }
      if (SHIBYTE(v35) < 0) {
        operator delete((void *)v34);
      }
      if ((buf[23] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
      goto LABEL_85;
    case 3:
      if (qword_1024193D0 != -1) {
        dispatch_once(&qword_1024193D0, &stru_1022F9058);
      }
      unint64_t v15 = qword_1024193D8;
      if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "CLSE,download status,FAILED", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193D0 != -1) {
          dispatch_once(&qword_1024193D0, &stru_1022F9058);
        }
        LOWORD(v42[0]) = 0;
        long long v27 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLSignalEnvironmentProvider::onSignalEnvironmentUpdated(CLFileUpdate *, CLFileUpdate::UpdateStatus)", "%s\n", v27);
        if (v27 != buf) {
          free(v27);
        }
      }
      int v16 = *(_DWORD *)(a1 + 152);
      if (v16 < 5) {
        int v17 = v16 + 1;
      }
      else {
        int v17 = v16 + 10;
      }
      *(_DWORD *)(a1 + 152) = v17;
      sub_1005C768C(a2, (uint64_t)v42);
      if (qword_1024193D0 != -1) {
        dispatch_once(&qword_1024193D0, &stru_1022F9058);
      }
      long long v18 = qword_1024193D8;
      if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEBUG))
      {
        long long v19 = v42;
        if (v43 < 0) {
          long long v19 = (void **)v42[0];
        }
        int v20 = *(_DWORD *)(a1 + 152);
        *(_DWORD *)std::string buf = 136446466;
        *(void *)&uint8_t buf[4] = v19;
        *(_WORD *)&unsigned char buf[12] = 1026;
        *(_DWORD *)&unsigned char buf[14] = v20;
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEBUG, "CLSE,download request failed,%{public}s,retryMultiplier,%{public}d", buf, 0x12u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193D0 != -1) {
          dispatch_once(&qword_1024193D0, &stru_1022F9058);
        }
        char v21 = v42;
        if (v43 < 0) {
          char v21 = (void **)v42[0];
        }
        int v22 = *(_DWORD *)(a1 + 152);
        int v38 = 136446466;
        float v39 = v21;
        __int16 v40 = 1026;
        int v41 = v22;
        char v23 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLSignalEnvironmentProvider::onSignalEnvironmentUpdated(CLFileUpdate *, CLFileUpdate::UpdateStatus)", "%s\n", v23);
        if (v23 != buf) {
          free(v23);
        }
      }
LABEL_85:
      if (SHIBYTE(v43) < 0) {
        operator delete(v42[0]);
      }
      break;
    default:
      if (qword_1024193D0 != -1) {
        dispatch_once(&qword_1024193D0, &stru_1022F9058);
      }
      uint64_t v25 = qword_1024193D8;
      if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)std::string buf = 67240192;
        *(_DWORD *)&uint8_t buf[4] = a3;
        _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_INFO, "CLSE,download status,%{public}d", buf, 8u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193D0 != -1) {
          dispatch_once(&qword_1024193D0, &stru_1022F9058);
        }
        LODWORD(v42[0]) = 67240192;
        HIDWORD(v42[0]) = a3;
        unint64_t v7 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLSignalEnvironmentProvider::onSignalEnvironmentUpdated(CLFileUpdate *, CLFileUpdate::UpdateStatus)", "%s\n", v7);
LABEL_70:
        if (v7 != buf) {
          free(v7);
        }
      }
      break;
  }
}

void sub_100DE9E38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (a33 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DE9EB0(uint64_t a1)
{
  uint64_t v2 = (const char **)(a1 + 32);
  int v3 = *(char *)(a1 + 55);
  uint64_t v4 = (const char *)(a1 + 32);
  if (v3 < 0) {
    uint64_t v4 = *v2;
  }
  int v5 = (const char **)(a1 + 56);
  uint64_t v6 = (const char *)(a1 + 56);
  if (*(char *)(a1 + 79) < 0) {
    uint64_t v6 = *v5;
  }
  sub_1004BC3D8(v4, v6);
  if (qword_1024193D0 != -1) {
    dispatch_once(&qword_1024193D0, &stru_1022F9058);
  }
  unint64_t v7 = qword_1024193D8;
  if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEBUG))
  {
    char v8 = (const char *)v2;
    if (*(char *)(a1 + 55) < 0) {
      char v8 = *v2;
    }
    int v9 = (const char *)(a1 + 56);
    if (*(char *)(a1 + 79) < 0) {
      int v9 = *v5;
    }
    *(_DWORD *)std::string buf = 136446466;
    int v16 = v8;
    __int16 v17 = 2082;
    long long v18 = v9;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "CLSE,decompressed,%{public}s,to,%{public}s", buf, 0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022F9058);
    }
    unsigned int v13 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLSignalEnvironmentProvider::onSignalEnvironmentUpdated(CLFileUpdate *, CLFileUpdate::UpdateStatus)_block_invoke", "%s\n", v13);
    if (v13 != (char *)buf) {
      free(v13);
    }
  }
  char v10 = (const char *)(a1 + 56);
  if (*(char *)(a1 + 79) < 0) {
    char v10 = *v5;
  }
  if (!sub_1004BF004(v10, 4))
  {
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022F9058);
    }
    int v11 = qword_1024193D8;
    if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_INFO))
    {
      __int16 v12 = (const char *)(a1 + 56);
      if (*(char *)(a1 + 79) < 0) {
        __int16 v12 = *v5;
      }
      *(_DWORD *)std::string buf = 136446210;
      int v16 = v12;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "#Warning,Cannot set protection class for CLSE decompressed file,%{public}s", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193D0 != -1) {
        dispatch_once(&qword_1024193D0, &stru_1022F9058);
      }
      __int16 v14 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLSignalEnvironmentProvider::onSignalEnvironmentUpdated(CLFileUpdate *, CLFileUpdate::UpdateStatus)_block_invoke", "%s\n", v14);
      if (v14 != (char *)buf) {
        free(v14);
      }
    }
  }
}

unsigned char *sub_100DEA25C(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 55) < 0)
  {
    sub_1000DC48C((unsigned char *)(a1 + 32), *(void **)(a2 + 32), *(void *)(a2 + 40));
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = v4;
  }
  uint64_t result = (unsigned char *)(a1 + 56);
  if (*(char *)(a2 + 79) < 0) {
    return sub_1000DC48C(result, *(void **)(a2 + 56), *(void *)(a2 + 64));
  }
  long long v6 = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_OWORD *)uint64_t result = v6;
  return result;
}

void sub_100DEA2E4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v2 + 55) < 0) {
    operator delete(*v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DEA300(uint64_t a1)
{
  if (*(char *)(a1 + 79) < 0) {
    operator delete(*(void **)(a1 + 56));
  }
  if (*(char *)(a1 + 55) < 0)
  {
    uint64_t v2 = *(void **)(a1 + 32);
    operator delete(v2);
  }
}

uint64_t sub_100DEA358(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, uint64_t a5, uint64_t a6)
{
  *(void *)a1 = &off_1022F91D8;
  *(void *)(a1 + 8) = [[CLNotifierClientAdapter alloc] initWithClient:a1];
  *(void *)(a1 + 24) = a5;
  *(void *)(a1 + 32) = a6;
  if (*((char *)a3 + 23) >= 0) {
    __int16 v12 = a3;
  }
  else {
    __int16 v12 = (uint64_t *)*a3;
  }
  id v13 = [objc_msgSend(a4, "vendor") proxyForService:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12)];
  *(void *)(a1 + 16) = v13;
  id v14 = v13;
  if (a2) {
    [*(id *)(a1 + 16) setDelegateEntityName:a2];
  }
  [*(id *)(a1 + 16) registerDelegate:*(void *)(a1 + 8) inSilo:[a4 silo]];
  return a1;
}

void sub_100DEA43C()
{
}

void sub_100DEA4F8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete();
}

void sub_100DEA534(uint64_t a1, uint64_t a2)
{
  v14[0] = a2;
  if (!*(unsigned char *)(a1 + 108))
  {
    uint64_t v4 = *(void *)(a1 + 88);
    if (!v4) {
      goto LABEL_12;
    }
    uint64_t v5 = a1 + 80;
    uint64_t v6 = a1 + 88;
    do
    {
      int v7 = *(_DWORD *)(v4 + 32);
      BOOL v8 = v7 < (int)a2;
      if (v7 >= (int)a2) {
        int v9 = (uint64_t *)v4;
      }
      else {
        int v9 = (uint64_t *)(v4 + 8);
      }
      if (!v8) {
        uint64_t v6 = v4;
      }
      uint64_t v4 = *v9;
    }
    while (*v9);
    if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= (int)a2)
    {
      while (*(void *)(v6 + 56))
      {
        *(_DWORD *)std::string buf = *(_DWORD *)(*(void *)(v6 + 40) + 28);
        (*(void (**)(uint64_t, uint64_t, uint8_t *))(*(void *)a1 + 112))(a1, a2, buf);
      }
      sub_10006DA64(v5, v14);
    }
    else
    {
LABEL_12:
      if (qword_102419580 != -1) {
        dispatch_once(&qword_102419580, &stru_1022F9038);
      }
      char v10 = qword_102419588;
      if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_FAULT))
      {
        int v11 = (void *)(a1 + 8);
        if (*(char *)(a1 + 31) < 0) {
          int v11 = (void *)*v11;
        }
        *(_DWORD *)std::string buf = 136446466;
        long long v19 = v11;
        __int16 v20 = 1026;
        int v21 = a2;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_FAULT, "%{public}s; client %{public}d does not exist",
          buf,
          0x12u);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419580 != -1) {
          dispatch_once(&qword_102419580, &stru_1022F9038);
        }
        __int16 v12 = (void *)(a1 + 8);
        if (*(char *)(a1 + 31) < 0) {
          __int16 v12 = (void *)*v12;
        }
        v14[1] = 136446466;
        unint64_t v15 = v12;
        __int16 v16 = 1026;
        int v17 = a2;
        id v13 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "virtual void CLNotifier<CLSignalEnvironmentProvider_Type::Notification, CLSignalEnvironmentProvider_Type::NotificationData>::removeClient(int) [Notification_T = CLSignalEnvironmentProvider_Type::Notification, NotificationData_T = CLSignalEnvironmentProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v13);
        if (v13 != (char *)buf) {
          free(v13);
        }
      }
    }
  }
}

uint64_t sub_100DEA7C4(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  id v7 = sub_10005C4C4(a4);
  if (v7)
  {
    int v10 = a3;
    return (*(uint64_t (**)(uint64_t, uint64_t, int *, id))(*(void *)a1 + 96))(a1, a2, &v10, v7);
  }
  else
  {
    int v9 = a3;
    return (*(uint64_t (**)(uint64_t, uint64_t, int *))(*(void *)a1 + 88))(a1, a2, &v9);
  }
}

uint64_t sub_100DEA878(uint64_t a1, uint64_t a2, int a3)
{
  int v4 = a3;
  return (*(uint64_t (**)(uint64_t, uint64_t, int *))(*(void *)a1 + 104))(a1, a2, &v4);
}

uint64_t sub_100DEA8C0(uint64_t a1, uint64_t a2, int a3)
{
  int v4 = a3;
  return (*(uint64_t (**)(uint64_t, uint64_t, int *))(*(void *)a1 + 112))(a1, a2, &v4);
}

uint64_t sub_100DEA908(uint64_t a1, int a2)
{
  int v3 = a2;
  return (*(uint64_t (**)(uint64_t, int *))(*(void *)a1 + 120))(a1, &v3);
}

uint64_t sub_100DEA950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *))(*(void *)a1 + 96))(a1, a2, a3, &unk_1024748C8);
}

uint64_t sub_100DEA97C(uint64_t a1, int a2, int *a3, char *a4)
{
  int v41 = a2;
  if (*(unsigned char *)(a1 + 108)) {
    return 0;
  }
  uint64_t v7 = *(void *)(a1 + 88);
  if (v7)
  {
    uint64_t v10 = a1 + 88;
    do
    {
      int v11 = *(_DWORD *)(v7 + 32);
      BOOL v12 = v11 < a2;
      if (v11 >= a2) {
        id v13 = (uint64_t *)v7;
      }
      else {
        id v13 = (uint64_t *)(v7 + 8);
      }
      if (!v12) {
        uint64_t v10 = v7;
      }
      uint64_t v7 = *v13;
    }
    while (*v13);
    if (v10 != a1 + 88 && *(_DWORD *)(v10 + 32) <= a2)
    {
      *(void *)float v42 = v10;
      int v17 = *a3;
      uint64_t v20 = *(void *)(v10 + 48);
      uint64_t v19 = v10 + 48;
      uint64_t v18 = v20;
      if (!v20) {
        goto LABEL_31;
      }
      uint64_t v21 = v19;
      do
      {
        int v22 = *(_DWORD *)(v18 + 28);
        BOOL v23 = v22 < v17;
        if (v22 >= v17) {
          int v24 = (uint64_t *)v18;
        }
        else {
          int v24 = (uint64_t *)(v18 + 8);
        }
        if (!v23) {
          uint64_t v21 = v18;
        }
        uint64_t v18 = *v24;
      }
      while (*v24);
      if (v21 == v19 || v17 < *(_DWORD *)(v21 + 28)) {
LABEL_31:
      }
        uint64_t v21 = v19;
      uint64_t v25 = *(void *)(a1 + 64);
      if (!v25) {
        goto LABEL_42;
      }
      uint64_t v26 = a1 + 64;
      do
      {
        int v27 = *(_DWORD *)(v25 + 32);
        BOOL v28 = v27 < v17;
        if (v27 >= v17) {
          long long v29 = (uint64_t *)v25;
        }
        else {
          long long v29 = (uint64_t *)(v25 + 8);
        }
        if (!v28) {
          uint64_t v26 = v25;
        }
        uint64_t v25 = *v29;
      }
      while (*v29);
      if (v26 != a1 + 64 && v17 >= *(_DWORD *)(v26 + 32))
      {
        uint64_t v40 = v26;
        uint64_t v35 = *(void *)(v26 + 56);
        char v36 = *a4;
        *(void *)std::string buf = &v41;
        *((unsigned char *)sub_1000EB1B8((uint64_t **)(v26 + 40), &v41, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 32) = v36;
        *(void *)std::string buf = 0;
        if (v21 == v19
          && (*(unsigned int (**)(uint64_t, int *, unsigned char *))(*(void *)a1 + 128))(a1, a3, buf))
        {
          sub_100DECD4C();
        }
        if (v35) {
          goto LABEL_46;
        }
      }
      else
      {
LABEL_42:
        uint64_t v40 = a1 + 64;
        char v30 = byte_1024748C9;
        int v39 = v17;
        *(void *)std::string buf = &v39;
        *((unsigned char *)sub_10044715C((uint64_t **)(a1 + 56), &v39, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 80) = v30;
        int v39 = *a3;
        *(void *)std::string buf = &v39;
        int v31 = sub_10044715C((uint64_t **)(a1 + 56), &v39, (uint64_t)&unk_101D0B290, (_DWORD **)buf);
        int v32 = (std::__shared_weak_count *)v31[9];
        v31[8] = 0;
        v31[9] = 0;
        if (v32) {
          sub_1000DB0A0(v32);
        }
        char v33 = *a4;
        int v39 = *a3;
        *(void *)std::string buf = &v39;
        long long v34 = sub_10044715C((uint64_t **)(a1 + 56), &v39, (uint64_t)&unk_101D0B290, (_DWORD **)buf);
        *(void *)std::string buf = &v41;
        *((unsigned char *)sub_1000EB1B8(v34 + 5, &v41, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 32) = v33;
      }
      (*(void (**)(uint64_t, int *))(*(void *)a1 + 168))(a1, a3);
LABEL_46:
      if (v21 == v19)
      {
        *(_DWORD *)std::string buf = *a3;
        sub_1000EDED4((uint64_t **)(*(void *)v42 + 40), (int *)buf, buf);
      }
      return 1;
    }
  }
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022F9038);
  }
  id v14 = qword_102419588;
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_FAULT))
  {
    unint64_t v15 = (void *)(a1 + 8);
    if (*(char *)(a1 + 31) < 0) {
      unint64_t v15 = (void *)*v15;
    }
    *(_DWORD *)std::string buf = 136446466;
    *(void *)&uint8_t buf[4] = v15;
    __int16 v46 = 1026;
    int v47 = a2;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_FAULT, "%{public}s; client %{public}d does not exist",
      buf,
      0x12u);
  }
  BOOL v16 = sub_10013D1A0(115, 0);
  uint64_t result = 0;
  if (v16)
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022F9038);
    }
    uint64_t v37 = (void *)(a1 + 8);
    if (*(char *)(a1 + 31) < 0) {
      uint64_t v37 = (void *)*v37;
    }
    *(_DWORD *)float v42 = 136446466;
    *(void *)&v42[4] = v37;
    __int16 v43 = 1026;
    int v44 = a2;
    int v38 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "virtual BOOL CLNotifier<CLSignalEnvironmentProvider_Type::Notification, CLSignalEnvironmentProvider_Type::NotificationData>::registerForNotification(int, const Notification_T &, const RegistrationInfo_T &) [Notification_T = CLSignalEnvironmentProvider_Type::Notification, NotificationData_T = CLSignalEnvironmentProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v38);
    if (v38 != buf) {
      free(v38);
    }
    return 0;
  }
  return result;
}

BOOL sub_100DEAE20(uint64_t a1, int a2, int *a3)
{
  uint64_t v5 = *(void *)(a1 + 88);
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v6 = a1 + 88;
  do
  {
    int v7 = *(_DWORD *)(v5 + 32);
    BOOL v8 = v7 < a2;
    if (v7 >= a2) {
      int v9 = (uint64_t *)v5;
    }
    else {
      int v9 = (uint64_t *)(v5 + 8);
    }
    if (!v8) {
      uint64_t v6 = v5;
    }
    uint64_t v5 = *v9;
  }
  while (*v9);
  if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= a2)
  {
    uint64_t v16 = *(void *)(v6 + 48);
    uint64_t v14 = v6 + 48;
    uint64_t v15 = v16;
    if (!v16) {
      goto LABEL_29;
    }
    int v17 = *a3;
    uint64_t v18 = v14;
    do
    {
      int v19 = *(_DWORD *)(v15 + 28);
      BOOL v20 = v19 < v17;
      if (v19 >= v17) {
        uint64_t v21 = (uint64_t *)v15;
      }
      else {
        uint64_t v21 = (uint64_t *)(v15 + 8);
      }
      if (!v20) {
        uint64_t v18 = v15;
      }
      uint64_t v15 = *v21;
    }
    while (*v21);
    if (v18 == v14 || v17 < *(_DWORD *)(v18 + 28)) {
LABEL_29:
    }
      uint64_t v18 = v14;
    return v18 != v14;
  }
  else
  {
LABEL_11:
    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022F9038);
    }
    uint64_t v10 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_FAULT))
    {
      int v11 = (void *)(a1 + 8);
      if (*(char *)(a1 + 31) < 0) {
        int v11 = (void *)*v11;
      }
      *(_DWORD *)std::string buf = 136446466;
      int v24 = v11;
      __int16 v25 = 1026;
      int v26 = a2;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_FAULT, "%{public}s; client %{public}d does not exist",
        buf,
        0x12u);
    }
    BOOL v12 = sub_10013D1A0(115, 0);
    BOOL result = 0;
    if (v12)
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419580 != -1) {
        dispatch_once(&qword_102419580, &stru_1022F9038);
      }
      int v22 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "virtual BOOL CLNotifier<CLSignalEnvironmentProvider_Type::Notification, CLSignalEnvironmentProvider_Type::NotificationData>::clientRegistered(int, const Notification_T &) [Notification_T = CLSignalEnvironmentProvider_Type::Notification, NotificationData_T = CLSignalEnvironmentProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v22);
      if (v22 != (char *)buf) {
        free(v22);
      }
      return 0;
    }
  }
  return result;
}

BOOL sub_100DEB0A4(char *a1, int a2, int *a3)
{
  int v32 = a2;
  int v3 = a1[108];
  if (!a1[108])
  {
    uint64_t v6 = *((void *)a1 + 11);
    if (v6)
    {
      BOOL v8 = a1 + 88;
      do
      {
        int v9 = *(_DWORD *)(v6 + 32);
        BOOL v10 = v9 < a2;
        if (v9 >= a2) {
          int v11 = (uint64_t *)v6;
        }
        else {
          int v11 = (uint64_t *)(v6 + 8);
        }
        if (!v10) {
          BOOL v8 = (char *)v6;
        }
        uint64_t v6 = *v11;
      }
      while (*v11);
      if (v8 != a1 + 88 && *((_DWORD *)v8 + 8) <= a2)
      {
        uint64_t v14 = (char *)*((void *)v8 + 6);
        BOOL v12 = v8 + 48;
        id v13 = v14;
        if (v14)
        {
          int v15 = *a3;
          uint64_t v16 = v12;
          do
          {
            int v17 = *((_DWORD *)v13 + 7);
            BOOL v18 = v17 < v15;
            if (v17 >= v15) {
              int v19 = (char **)v13;
            }
            else {
              int v19 = (char **)(v13 + 8);
            }
            if (!v18) {
              uint64_t v16 = v13;
            }
            id v13 = *v19;
          }
          while (*v19);
          if (v16 != v12 && v15 >= *((_DWORD *)v16 + 7))
          {
            LODWORD(__p[0]) = *a3;
            sub_1000ED9F4((uint64_t)(v12 - 8), (int *)__p);
            uint64_t v20 = *((void *)a1 + 8);
            if (!v20) {
              goto LABEL_33;
            }
            int v21 = *a3;
            int v22 = a1 + 64;
            do
            {
              int v23 = *(_DWORD *)(v20 + 32);
              BOOL v24 = v23 < v21;
              if (v23 >= v21) {
                __int16 v25 = (uint64_t *)v20;
              }
              else {
                __int16 v25 = (uint64_t *)(v20 + 8);
              }
              if (!v24) {
                int v22 = (char *)v20;
              }
              uint64_t v20 = *v25;
            }
            while (*v25);
            if (v22 != a1 + 64 && v21 >= *((_DWORD *)v22 + 8))
            {
              sub_1000ED9F4((uint64_t)(v22 + 40), &v32);
              if (!*((void *)v22 + 7)) {
                (*(void (**)(char *, int *))(*(void *)a1 + 176))(a1, a3);
              }
            }
            else
            {
LABEL_33:
              if (qword_102419580 != -1) {
                dispatch_once(&qword_102419580, &stru_1022F9038);
              }
              int v26 = qword_102419588;
              if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_FAULT))
              {
                int v27 = a1 + 8;
                if (a1[31] < 0) {
                  int v27 = (void *)*v27;
                }
                (*(void (**)(void **__return_ptr, char *, int *))(*(void *)a1 + 160))(__p, a1, a3);
                if (v42 >= 0) {
                  BOOL v28 = __p;
                }
                else {
                  BOOL v28 = (void **)__p[0];
                }
                *(_DWORD *)std::string buf = 136446466;
                *(void *)&uint8_t buf[4] = v27;
                __int16 v34 = 2082;
                uint64_t v35 = v28;
                _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_FAULT, "%{public}s; notification %{public}s not found",
                  buf,
                  0x16u);
                if (v42 < 0) {
                  operator delete(__p[0]);
                }
              }
              if (sub_10013D1A0(115, 0))
              {
                bzero(__p, 0x65CuLL);
                if (qword_102419580 != -1) {
                  dispatch_once(&qword_102419580, &stru_1022F9038);
                }
                long long v29 = a1 + 8;
                if (a1[31] < 0) {
                  long long v29 = (void *)*v29;
                }
                (*(void (**)(unsigned char *__return_ptr, char *, int *))(*(void *)a1 + 160))(buf, a1, a3);
                if (v36 >= 0) {
                  char v30 = buf;
                }
                else {
                  char v30 = *(unsigned char **)buf;
                }
                int v37 = 136446466;
                int v38 = v29;
                __int16 v39 = 2082;
                uint64_t v40 = v30;
                int v31 = (char *)_os_log_send_and_compose_impl();
                if (v36 < 0) {
                  operator delete(*(void **)buf);
                }
                sub_1004BA5E4("Generic", 1, 0, 0, "virtual BOOL CLNotifier<CLSignalEnvironmentProvider_Type::Notification, CLSignalEnvironmentProvider_Type::NotificationData>::unregisterForNotification(int, const Notification_T &) [Notification_T = CLSignalEnvironmentProvider_Type::Notification, NotificationData_T = CLSignalEnvironmentProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v31);
                if (v31 != (char *)__p) {
                  free(v31);
                }
              }
            }
          }
        }
      }
    }
  }
  return v3 == 0;
}

uint64_t sub_100DEB478(uint64_t a1, int *a2, uint64_t *a3)
{
  uint64_t v6 = (uint64_t *)operator new(0x20uLL);
  v6[1] = 0;
  v6[2] = 0;
  void v6[3] = *a3;
  *uint64_t v6 = (uint64_t)off_1022F9168;
  int v10 = *a2;
  int v11 = &v10;
  int v7 = sub_10044715C((uint64_t **)(a1 + 56), &v10, (uint64_t)&unk_101D0B290, &v11);
  BOOL v8 = (std::__shared_weak_count *)v7[9];
  v7[8] = v6 + 3;
  v7[9] = v6;
  if (v8) {
    sub_1000DB0A0(v8);
  }
  return 1;
}

void sub_100DEB52C(_Unwind_Exception *a1)
{
  sub_1000DB0A0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100DEB540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, void))(*(void *)a1 + 152))(a1, a2, &v5, a3, a4, 0);
}

void sub_100DEB594(uint64_t a1, unsigned int *a2, uint64_t *a3, int a4)
{
  if (*(unsigned char *)(a1 + 108)) {
    return;
  }
  BOOL v8 = _os_activity_create((void *)&_mh_execute_header, "CL: notifyClientsWithData (Fallback)", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_IF_NONE_PRESENT);
  os_activity_scope_enter(v8, &state);

  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022F9038);
  }
  int v9 = qword_102419588;
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    int v10 = (void *)(a1 + 8);
    if (*(char *)(a1 + 31) < 0) {
      int v10 = (void *)*v10;
    }
    int v11 = (std::__shared_weak_count *)*a2;
    *(_DWORD *)std::string buf = 68289794;
    int v22 = 0;
    __int16 v23 = 2082;
    *(void *)BOOL v24 = "";
    *(_WORD *)&v24[8] = 2082;
    *(void *)&v24[10] = "activity";
    __int16 v25 = 2082;
    int v26 = v10;
    __int16 v27 = 2050;
    BOOL v28 = v11;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"notifyClientsWithData\", \"event\":%{public, location:escape_only}s, \"name\":%{public, location:escape_only}s, \"notification\":%{public}lld}", buf, 0x30u);
  }
  uint64_t v12 = *(void *)(a1 + 64);
  if (!v12) {
    goto LABEL_18;
  }
  int v13 = *a2;
  uint64_t v14 = (uint64_t **)(a1 + 64);
  do
  {
    int v15 = *(_DWORD *)(v12 + 32);
    BOOL v16 = v15 < v13;
    if (v15 >= v13) {
      int v17 = (uint64_t *)v12;
    }
    else {
      int v17 = (uint64_t *)(v12 + 8);
    }
    if (!v16) {
      uint64_t v14 = (uint64_t **)v12;
    }
    uint64_t v12 = *v17;
  }
  while (*v17);
  if (v14 == (uint64_t **)(a1 + 64) || v13 < *((_DWORD *)v14 + 8))
  {
LABEL_18:
    long long v29 = v30;
    memset(v30, 0, sizeof(v30));
    int v31 = 0;
    sub_1004481D0((uint64_t)buf, a2, (uint64_t)&v29);
    uint64_t v14 = sub_100448098((uint64_t **)(a1 + 56), (__n128 *)buf);
    if (v28) {
      sub_1000DB0A0(v28);
    }
    sub_1000F5BB0((uint64_t)&v23, *(void **)&v24[6]);
    if (v31) {
      sub_1000DB0A0(v31);
    }
    sub_1000F5BB0((uint64_t)&v29, v30[0]);
  }
  if (a4)
  {
    BOOL v18 = (uint64_t *)operator new(0x20uLL);
    v18[1] = 0;
    v18[2] = 0;
    *BOOL v18 = (uint64_t)off_1022F9168;
    void v18[3] = *a3;
    int v19 = (std::__shared_weak_count *)v14[9];
    v14[8] = v18 + 3;
    v14[9] = v18;
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  int v19 = (std::__shared_weak_count *)v14[9];
  v14[8] = 0;
  v14[9] = 0;
  if (v19) {
LABEL_27:
  }
    sub_1000DB0A0(v19);
LABEL_28:
  if (v14[7]) {
    sub_100DEC25C();
  }
  os_activity_scope_leave(&state);
}

void sub_100DEBB78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state, char a18)
{
}

void sub_100DEBBC4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 108))
  {
    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022F9038);
    }
    uint64_t v2 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      int v3 = (void *)(a1 + 8);
      if (*(char *)(a1 + 31) < 0) {
        int v3 = (void *)*v3;
      }
      *(_DWORD *)std::string buf = 136315138;
      int v22 = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "%s; already shutdown; not listing clients",
        buf,
        0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419580 != -1) {
        dispatch_once(&qword_102419580, &stru_1022F9038);
      }
      int v4 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLNotifier<CLSignalEnvironmentProvider_Type::Notification, CLSignalEnvironmentProvider_Type::NotificationData>::listClients() [Notification_T = CLSignalEnvironmentProvider_Type::Notification, NotificationData_T = CLSignalEnvironmentProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v4);
      if (v4 != (char *)buf) {
        free(v4);
      }
    }
  }
  else
  {
    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022F9038);
    }
    uint64_t v5 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v6 = (void *)(a1 + 8);
      if (*(char *)(a1 + 31) < 0) {
        uint64_t v6 = (void *)*v6;
      }
      uint64_t v7 = *(void *)(a1 + 96);
      *(_DWORD *)std::string buf = 136315394;
      int v22 = v6;
      __int16 v23 = 2048;
      v24[0] = v7;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "%s; listing clients, num clients: %zu",
        buf,
        0x16u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419580 != -1) {
        dispatch_once(&qword_102419580, &stru_1022F9038);
      }
      uint64_t v20 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLNotifier<CLSignalEnvironmentProvider_Type::Notification, CLSignalEnvironmentProvider_Type::NotificationData>::listClients() [Notification_T = CLSignalEnvironmentProvider_Type::Notification, NotificationData_T = CLSignalEnvironmentProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v20);
      if (v20 != (char *)buf) {
        free(v20);
      }
    }
    BOOL v8 = *(void **)(a1 + 80);
    if (v8 != (void *)(a1 + 88))
    {
      do
      {
        int v9 = (void *)v8[5];
        if (v9 != v8 + 6)
        {
          do
          {
            if (qword_102419580 != -1) {
              dispatch_once(&qword_102419580, &stru_1022F9038);
            }
            int v10 = qword_102419588;
            if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
            {
              int v11 = (void *)(a1 + 8);
              if (*(char *)(a1 + 31) < 0) {
                int v11 = *(void **)(a1 + 8);
              }
              int v12 = *((_DWORD *)v8 + 8);
              int v13 = *((_DWORD *)v9 + 7);
              *(_DWORD *)std::string buf = 136315650;
              int v22 = v11;
              __int16 v23 = 1024;
              LODWORD(v24[0]) = v12;
              WORD2(v24[0]) = 1024;
              *(_DWORD *)((char *)v24 + 6) = v13;
              _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "%s; clients, id: %d, notification: %d",
                buf,
                0x18u);
            }
            if (sub_10013D1A0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_102419580 != -1) {
                dispatch_once(&qword_102419580, &stru_1022F9038);
              }
              int v17 = (char *)_os_log_send_and_compose_impl();
              sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLNotifier<CLSignalEnvironmentProvider_Type::Notification, CLSignalEnvironmentProvider_Type::NotificationData>::listClients() [Notification_T = CLSignalEnvironmentProvider_Type::Notification, NotificationData_T = CLSignalEnvironmentProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v17);
              if (v17 != (char *)buf) {
                free(v17);
              }
            }
            uint64_t v14 = (void *)v9[1];
            if (v14)
            {
              do
              {
                int v15 = v14;
                uint64_t v14 = (void *)*v14;
              }
              while (v14);
            }
            else
            {
              do
              {
                int v15 = (void *)v9[2];
                BOOL v16 = *v15 == (void)v9;
                int v9 = v15;
              }
              while (!v16);
            }
            int v9 = v15;
          }
          while (v15 != v8 + 6);
        }
        BOOL v18 = (void *)v8[1];
        if (v18)
        {
          do
          {
            int v19 = v18;
            BOOL v18 = (void *)*v18;
          }
          while (v18);
        }
        else
        {
          do
          {
            int v19 = (void *)v8[2];
            BOOL v16 = *v19 == (void)v8;
            BOOL v8 = v19;
          }
          while (!v16);
        }
        BOOL v8 = v19;
      }
      while (v19 != (void *)(a1 + 88));
    }
  }
}

void sub_100DEC174(uint64_t a1)
{
  sub_100DECCDC(a1);

  operator delete();
}

id sub_100DEC1AC(uint64_t a1, int a2, void *a3)
{
  id result = sub_100DEC88C(a3);
  if (result)
  {
    int v6 = a2;
    return (id)(*(uint64_t (**)(void, int *, id, void))(a1 + 24))(0, &v6, result, *(void *)(a1 + 32));
  }
  return result;
}

void sub_100DEC1FC(id a1)
{
  qword_102419588 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_100DEC22C(id a1)
{
  qword_1024193D8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Gnss");
}

void sub_100DEC25C()
{
}

void sub_100DEC308(void *a1, int *a2, void *a3)
{
  if (!*((unsigned char *)a1 + 108))
  {
    uint64_t v5 = a1 + 8;
    uint64_t v4 = a1[8];
    if (v4)
    {
      int v8 = *a2;
      int v9 = a1 + 8;
      do
      {
        int v10 = *(_DWORD *)(v4 + 32);
        BOOL v11 = v10 < v8;
        if (v10 >= v8) {
          int v12 = (uint64_t *)v4;
        }
        else {
          int v12 = (uint64_t *)(v4 + 8);
        }
        if (!v11) {
          int v9 = (void *)v4;
        }
        uint64_t v4 = *v12;
      }
      while (*v12);
      if (v9 != v5 && v8 >= *((_DWORD *)v9 + 8))
      {
        unint64_t v49 = v9;
        id v13 = sub_100DEC88C(a3);
        (*(void (**)(void *, int *, id, void *))(*a1 + 184))(a1, a2, v13, v9 + 10);
        uint64_t v14 = (void *)v9[5];
        if (v14 != v9 + 6)
        {
          int v15 = a1 + 11;
          BOOL v16 = a1 + 1;
          do
          {
            uint64_t v17 = *v15;
            if (!*v15) {
              goto LABEL_25;
            }
            int v18 = *((_DWORD *)v14 + 7);
            int v19 = a1 + 11;
            do
            {
              int v20 = *(_DWORD *)(v17 + 32);
              BOOL v21 = v20 < v18;
              if (v20 >= v18) {
                int v22 = (uint64_t *)v17;
              }
              else {
                int v22 = (uint64_t *)(v17 + 8);
              }
              if (!v21) {
                int v19 = (uint64_t *)v17;
              }
              uint64_t v17 = *v22;
            }
            while (*v22);
            if (v19 != v15 && (int v23 = *((_DWORD *)v19 + 8), v18 >= v23))
            {
              uint64_t v48 = v19;
              sub_100DEC6F8(a1, (uint64_t)&v48, (uint64_t)&v49, a3);
              uint64_t v27 = a1[8];
              if (!v27) {
                return;
              }
              int v28 = *a2;
              long long v29 = v5;
              do
              {
                int v30 = *(_DWORD *)(v27 + 32);
                BOOL v31 = v30 < v28;
                if (v30 >= v28) {
                  int v32 = (uint64_t *)v27;
                }
                else {
                  int v32 = (uint64_t *)(v27 + 8);
                }
                if (!v31) {
                  long long v29 = (void *)v27;
                }
                uint64_t v27 = *v32;
              }
              while (*v32);
              if (v29 == v5 || v28 < *((_DWORD *)v29 + 8)) {
                return;
              }
              unint64_t v49 = v29;
              uint64_t v34 = v29[6];
              uint64_t v14 = v29 + 6;
              uint64_t v33 = v34;
              if (v34)
              {
                uint64_t v35 = v14;
                uint64_t v36 = v33;
                do
                {
                  int v37 = *(_DWORD *)(v36 + 28);
                  BOOL v38 = v37 < v23;
                  if (v37 >= v23) {
                    __int16 v39 = (uint64_t *)v36;
                  }
                  else {
                    __int16 v39 = (uint64_t *)(v36 + 8);
                  }
                  if (!v38) {
                    uint64_t v35 = (void *)v36;
                  }
                  uint64_t v36 = *v39;
                }
                while (*v39);
                if (v35 == v14 || v23 < *((_DWORD *)v35 + 7))
                {
                  do
                  {
                    int v40 = *(_DWORD *)(v33 + 28);
                    BOOL v41 = v23 < v40;
                    if (v23 >= v40) {
                      char v42 = (uint64_t *)(v33 + 8);
                    }
                    else {
                      char v42 = (uint64_t *)v33;
                    }
                    if (v41) {
                      uint64_t v14 = (void *)v33;
                    }
                    uint64_t v33 = *v42;
                  }
                  while (*v42);
                }
                else
                {
                  __int16 v43 = (void *)v35[1];
                  if (v43)
                  {
                    do
                    {
                      uint64_t v14 = v43;
                      __int16 v43 = (void *)*v43;
                    }
                    while (v43);
                  }
                  else
                  {
                    do
                    {
                      uint64_t v14 = (void *)v35[2];
                      BOOL v44 = *v14 == (void)v35;
                      uint64_t v35 = v14;
                    }
                    while (!v44);
                  }
                }
              }
            }
            else
            {
LABEL_25:
              uint64_t v48 = a1 + 11;
              if (qword_102419580 != -1) {
                dispatch_once(&qword_102419580, &stru_1022F9038);
              }
              BOOL v24 = qword_102419588;
              if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_FAULT))
              {
                __int16 v25 = a1 + 1;
                if (*((char *)a1 + 31) < 0) {
                  __int16 v25 = (void *)*v16;
                }
                int v26 = *((_DWORD *)v14 + 7);
                *(_DWORD *)std::string buf = 136446466;
                float v55 = v25;
                __int16 v56 = 1026;
                int v57 = v26;
                _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_FAULT, "%{public}s; unknown client %{public}d",
                  buf,
                  0x12u);
              }
              if (sub_10013D1A0(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_102419580 != -1) {
                  dispatch_once(&qword_102419580, &stru_1022F9038);
                }
                float v45 = a1 + 1;
                if (*((char *)a1 + 31) < 0) {
                  float v45 = (void *)*v16;
                }
                int v46 = *((_DWORD *)v14 + 7);
                int v50 = 136446466;
                float v51 = v45;
                __int16 v52 = 1026;
                int v53 = v46;
                int v47 = (char *)_os_log_send_and_compose_impl();
                sub_1004BA5E4("Generic", 1, 0, 0, "void CLNotifier<CLSignalEnvironmentProvider_Type::Notification, CLSignalEnvironmentProvider_Type::NotificationData>::invokeClientsWithData(const Notification_T &, CLCppContainer *) [Notification_T = CLSignalEnvironmentProvider_Type::Notification, NotificationData_T = CLSignalEnvironmentProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v47);
                if (v47 != (char *)buf) {
                  free(v47);
                }
              }
            }
          }
          while (v14 != v49 + 6);
        }
      }
    }
  }
}

unsigned char *sub_100DEC6F8(unsigned char *result, uint64_t a2, uint64_t a3, void *a4)
{
  if (!result[108])
  {
    uint64_t v7 = result;
    uint64_t v8 = *(unsigned int *)(*(void *)a2 + 32);
    LODWORD(v13) = *(_DWORD *)(*(void *)a3 + 32);
    id v9 = sub_100DEC88C(a4);
    uint64_t v10 = *(void *)a3 + 80;
    BOOL v11 = (uint64_t **)(*(void *)a3 + 40);
    uint64_t v14 = (int *)(*(void *)a2 + 32);
    int v12 = sub_1000EB1B8(v11, v14, (uint64_t)&unk_101D0B290, &v14);
    id result = (unsigned char *)(*(uint64_t (**)(unsigned char *, uint64_t, uint64_t *, id, uint64_t, uint64_t **))(*(void *)v7 + 192))(v7, v8, &v13, v9, v10, v12 + 4);
    if (result) {
      return [*(id *)(*(void *)a2 + 64) onNotification:*(unsigned int *)(*(void *)a3 + 32) withData:a4, v13];
    }
  }
  return result;
}

void sub_100DEC7F0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1022F9168;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100DEC810(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1022F9168;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_100DEC86C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    operator delete();
  }
  return result;
}

id sub_100DEC88C(void *a1)
{
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    return 0;
  }

  return sub_100DEC8EC(a1);
}

id sub_100DEC8EC(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (v2)
  {
    if (getenv("_INTERSILO_UNIT_TEST"))
    {
      if (qword_102418F90 != -1) {
        dispatch_once(&qword_102418F90, &stru_1022F91A8);
      }
      int v3 = qword_102418F98;
      if (os_log_type_enabled((os_log_t)qword_102418F98, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)std::string buf = 134218498;
        id v8 = v2;
        __int16 v9 = 2048;
        uint64_t v10 = 0;
        __int16 v11 = 2080;
        unint64_t v12 = 0x8000000101D90405 & 0x7FFFFFFFFFFFFFFFLL;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly", buf, 0x20u);
      }
      if (!sub_10013D1A0(115, 0)) {
        return 0;
      }
      bzero(buf, 0x65CuLL);
      if (qword_102418F90 == -1)
      {
LABEL_20:
        int v6 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLSignalEnvironmentProvider_Type::NotificationData, Callback = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:228:46)]", "%s\n", v6);
        if (v6 != (char *)buf) {
          free(v6);
        }
        return 0;
      }
    }
    else
    {
      if (qword_102418F90 != -1) {
        dispatch_once(&qword_102418F90, &stru_1022F91A8);
      }
      uint64_t v5 = qword_102418F98;
      if (os_log_type_enabled((os_log_t)qword_102418F98, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)std::string buf = 134218498;
        id v8 = v2;
        __int16 v9 = 2048;
        uint64_t v10 = 0;
        __int16 v11 = 2080;
        unint64_t v12 = 0x8000000101D90405 & 0x7FFFFFFFFFFFFFFFLL;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly", buf, 0x20u);
      }
      if (!sub_10013D1A0(115, 0)) {
        return 0;
      }
      bzero(buf, 0x65CuLL);
      if (qword_102418F90 == -1) {
        goto LABEL_20;
      }
    }
    dispatch_once(&qword_102418F90, &stru_1022F91A8);
    goto LABEL_20;
  }

  return [a1 cppObjectPtr];
}

void sub_100DECCAC(id a1)
{
  qword_102418F98 = (uint64_t)os_log_create("com.apple.locationd.Support", "Support");
}

uint64_t sub_100DECCDC(uint64_t a1)
{
  *(void *)a1 = &off_1022F91D8;
  id v2 = (id *)(a1 + 8);
  [*(id *)(a1 + 16) forget:*(void *)(a1 + 8)];

  [*v2 invalidate];
  id *v2 = 0;
  *(void *)(a1 + 16) = 0;
  return a1;
}

void sub_100DECD4C()
{
}

uint64_t sub_100DECDF8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    operator delete();
  }
  return result;
}

void sub_100DECE18()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241ADF0, memory_order_acquire) & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_10241ADF0))
    {
      uint64_t v1 = 0x7FFFFFFF00000000;
      v0[2] = xmmword_101D90250;
      v0[3] = unk_101D90260;
      v0[4] = xmmword_101D90270;
      v0[0] = xmmword_101D90230;
      v0[1] = unk_101D90240;
      sub_1003BFBA4((uint64_t)&unk_10241ADD8, (int *)v0, 11);
      __cxa_atexit((void (*)(void *))sub_1003BE998, &unk_10241ADD8, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_10241ADF0);
    }
  }
}

void sub_100DECEF8(_Unwind_Exception *a1)
{
}

void sub_100DECF10(uint64_t a1)
{
  sub_100134750(__p, "");
  *(void *)a1 = &_mh_execute_header;
  *(_WORD *)(a1 + 8) = 257;
  if (SHIBYTE(v4) < 0)
  {
    sub_1000DC48C((unsigned char *)(a1 + 16), __p[0], (unint64_t)__p[1]);
    int v2 = SHIBYTE(v4);
    *(void *)(a1 + 40) = 0;
    if (v2 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)__p;
    *(void *)(a1 + 32) = v4;
    *(void *)(a1 + 40) = 0;
  }
  *(void *)(a1 + 48) = 0;
  operator new();
}

void sub_100DED0D4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
}

void sub_100DED1B4(uint64_t a1@<X0>, void *a2@<X8>)
{
}

void sub_100DED1BC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)a3 = a3 + 8;
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  if (*(void **)a2 != v5)
  {
    do
    {
      sub_100E943F8(*(void *)(a1 + 56), v10);
      if (v11) {
        goto LABEL_3;
      }
      uint64_t v7 = *(void *)(a1 + 48);
      if (v7)
      {
        sub_1006D836C(v7, v8);
        v10[10] = v8[10];
        v10[11] = v8[11];
        char v11 = v9;
        v10[6] = v8[6];
        v10[7] = v8[7];
        int v10[8] = v8[8];
        v10[9] = v8[9];
        void v10[2] = v8[2];
        v10[3] = v8[3];
        void v10[4] = v8[4];
        v10[5] = v8[5];
        v10[0] = v8[0];
        v10[1] = v8[1];
        if (v9) {
LABEL_3:
        }
          sub_100DED9CC((uint64_t **)a3, v4, v4, v10);
      }
      ++v4;
    }
    while (v4 != v5);
  }
}

void sub_100DED2C0(_Unwind_Exception *a1)
{
  sub_1000F5BB0(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

void sub_100DED2DC(uint64_t a1)
{
}

void sub_100DED2E4(uint64_t a1, unint64_t a2)
{
}

uint64_t sub_100DED2EC(uint64_t a1)
{
  return sub_100E94410(*(void *)(a1 + 56));
}

void sub_100DED318(uint64_t a1)
{
}

void sub_100DED324(uint64_t a1, double a2)
{
  uint64_t v2 = *(void *)(a1 + 56);
  double v3 = a2;
  sub_10064E5D0(*(void *)(v2 + 32), (uint64_t)&v3);
}

uint64_t sub_100DED354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100E94420(*(void *)(a1 + 56), a2);
}

unsigned char *sub_100DED35C(uint64_t a1)
{
  return sub_100DED364(*(unsigned char **)(a1 + 56));
}

unsigned char *sub_100DED364(unsigned char *result)
{
  if (*result)
  {
    v1[0] = 0;
    v1[1] = v1;
    v1[2] = 0x3812000000;
    v1[3] = sub_100177E2C;
    v1[4] = sub_1001775C0;
    v1[5] = 0;
    sub_100DEDAA4();
  }
  return result;
}

void sub_100DED6D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,__int16 a29,uint64_t a30,uint64_t a31,uint64_t a32,uint8_t buf)
{
  _Block_object_dispose(&a18, 8);
  _Block_object_dispose(&a22, 8);
  uint64_t v34 = a28;
  a28 = 0;
  if (v34) {
    (*(void (**)(uint64_t))(*(void *)v34 + 8))(v34);
  }
  _Unwind_Resume(a1);
}

void sub_100DED748()
{
}

void sub_100DED898()
{
}

void sub_100DED8AC(void *a1, int a2)
{
  if (a2) {
    sub_1001C7F8C(a1);
  }
  JUMPOUT(0x100DED740);
}

uint64_t sub_100DED8BC(uint64_t a1)
{
  return sub_100E94418(*(void *)(a1 + 56));
}

void sub_100DED8C4(uint64_t a1)
{
}

uint64_t sub_100DED8CC(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_100DED91C(result);
    operator delete();
  }
  return result;
}

uint64_t sub_100DED91C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  if (*(char *)(a1 + 79) < 0) {
    operator delete(*(void **)(a1 + 56));
  }
  uint64_t v3 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

char *sub_100DED9CC(uint64_t **a1, void *a2, void *a3, _OWORD *a4)
{
  uint64_t v7 = (void **)sub_1005295E0((uint64_t)a1, &v17, a2);
  id v8 = (char *)*v7;
  if (!*v7)
  {
    char v9 = (uint64_t **)v7;
    id v8 = (char *)operator new(0xE8uLL);
    long long v10 = a4[9];
    *(_OWORD *)(v8 + 168) = a4[8];
    *(_OWORD *)(v8 + 184) = v10;
    long long v11 = a4[11];
    *(_OWORD *)(v8 + 200) = a4[10];
    *(_OWORD *)(v8 + 216) = v11;
    long long v12 = a4[5];
    *(_OWORD *)(v8 + 104) = a4[4];
    *(_OWORD *)(v8 + 120) = v12;
    long long v13 = a4[7];
    *(_OWORD *)(v8 + 136) = a4[6];
    *(_OWORD *)(v8 + 152) = v13;
    long long v14 = a4[1];
    *(_OWORD *)(v8 + 40) = *a4;
    *(_OWORD *)(v8 + 56) = v14;
    long long v15 = a4[3];
    *(_OWORD *)(v8 + 72) = a4[2];
    *((void *)v8 + 4) = *a3;
    *(_OWORD *)(v8 + 88) = v15;
    sub_1000EDF90(a1, v17, v9, (uint64_t *)v8);
  }
  return v8;
}

void sub_100DEDAA4()
{
}

void sub_100DEDB64(_Unwind_Exception *a1)
{
  void *v1 = 0;
  (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  _Unwind_Resume(a1);
}

void sub_100DEDBBC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a1[6];
  ++*(_DWORD *)(*(void *)(a1[4] + 8) + 24);
  nullsub_41(0, a2);
  if (sub_1006D6228(a2))
  {
    if ((sub_1006D68C0(*(void *)(*(void *)(a1[5] + 8) + 48)) & 1) == 0)
    {
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022F91F0);
      }
      id v8 = qword_102419388;
      if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_ERROR))
      {
        char v9 = (void *)(v7 + 8);
        if (*(char *)(v7 + 31) < 0) {
          char v9 = (void *)*v9;
        }
        *(_DWORD *)std::string buf = 136446210;
        long long v14 = v9;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Failed to save entry to persisted database, table %{public}s", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419380 == -1)
        {
LABEL_21:
          long long v12 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 0, "void CLManagedLocationDatabase<CLWifiLocationDatabase, CLWifiLocationDatabase::WifiData>::onDataAvailable() [Database = CLWifiLocationDatabase, DataType = CLWifiLocationDatabase::WifiData]_block_invoke", "%s\n", v12);
          if (v12 != (char *)buf) {
            free(v12);
          }
          return;
        }
LABEL_23:
        dispatch_once(&qword_102419380, &stru_1022F91F0);
        goto LABEL_21;
      }
    }
  }
  else
  {
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022F91F0);
    }
    long long v10 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_ERROR))
    {
      long long v11 = (void *)(v7 + 8);
      if (*(char *)(v7 + 31) < 0) {
        long long v11 = (void *)*v11;
      }
      *(_DWORD *)std::string buf = 136446722;
      long long v14 = v11;
      __int16 v15 = 2082;
      unint64_t v16 = 0x8000000101D90450 & 0x7FFFFFFFFFFFFFFFLL;
      __int16 v17 = 2050;
      uint64_t v18 = a4;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "Failed to find entry from in-memory database, table, %{public}s, type %{public}s, rowid, %{public}lld", buf, 0x20u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419380 == -1) {
        goto LABEL_21;
      }
      goto LABEL_23;
    }
  }
}

void sub_100DEDF68(id a1)
{
  qword_102419388 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

uint64_t sub_100DEDF98()
{
  sub_100134750(qword_10248AC30, "");

  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_10248AC30, (void *)&_mh_execute_header);
}

void *sub_100DEDFF8(void *a1, const std::string *a2)
{
  *a1 = 0;
  uint64_t v4 = (std::string *)sub_100134750(a1 + 1, "");
  std::string::operator=(v4, a2);
  return a1;
}

void sub_100DEE048(_Unwind_Exception *exception_object)
{
  if (*(char *)(v2 + 31) < 0) {
    operator delete(*v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DEE068(uint64_t a1)
{
  if (*(void *)a1)
  {

    *(void *)a1 = 0;
  }
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

void sub_100DEE0B0(id *a1)
{
  if (*a1)
  {

    *a1 = 0;
  }
}

void sub_100DEE0E4(uint64_t a1)
{
  if (*(void *)a1)
  {
    if (qword_102419530 != -1) {
      dispatch_once(&qword_102419530, &stru_1022F9210);
    }
    uint64_t v2 = qword_102419538;
    if (os_log_type_enabled((os_log_t)qword_102419538, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v3 = (void *)(a1 + 8);
      if (*(char *)(a1 + 31) < 0) {
        uint64_t v3 = (void *)*v3;
      }
      *(_DWORD *)std::string buf = 136315138;
      uint64_t v7 = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "%s,os_transaction already taken, not taking another", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419530 != -1) {
        dispatch_once(&qword_102419530, &stru_1022F9210);
      }
      uint64_t v4 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLOSTransactionWrapper::Create()", "%s\n", v4);
      if (v4 != (char *)buf) {
        free(v4);
      }
    }
  }
  else
  {
    uint64_t v5 = (void *)(a1 + 8);
    if (*(char *)(a1 + 31) < 0) {
      uint64_t v5 = (void *)*v5;
    }
    *(void *)a1 = [[CLOSTransaction alloc] initWithDescription:v5];
  }
}

void sub_100DEE2E0(id a1)
{
  qword_102419538 = (uint64_t)os_log_create("com.apple.locationd.Core", "Core");
}

void sub_100DEE4BC(id a1)
{
  qword_1024817A8 = (uint64_t)[objc_alloc((Class)CLDispatchSilo) initWithIdentifier:@"CLWeatherServiceSilo"];
}

void sub_100DEEE4C(id a1)
{
  qword_102418FD8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Motion");
}

id sub_100DEEE7C(double a1, double a2)
{
  int v4 = sub_1003BFEDC(a1, a2);
  if (v4) {
    id v5 = +[GEOLocationShifter isLocationShiftRequiredForCoordinate:](GEOLocationShifter, "isLocationShiftRequiredForCoordinate:", a1, a2);
  }
  else {
    id v5 = 0;
  }
  if (qword_102419360 != -1) {
    dispatch_once(&qword_102419360, &stru_1022F9270);
  }
  int v6 = qword_102419368;
  if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::string buf = 67240448;
    int v10 = v4;
    __int16 v11 = 1026;
    int v12 = (int)v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "CLAccessory,specialCarPlayRegion,%{public}d,isShiftingSupported,%{public}d", buf, 0xEu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022F9270);
    }
    id v8 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLAccessoryUtils::isShiftingSupported(double, double)", "%s\n", v8);
    if (v8 != (char *)buf) {
      free(v8);
    }
  }
  return v5;
}

id sub_100DEF07C()
{
  id v0 = +[GEOLocationShifter isLocationShiftEnabled];
  if (qword_102419360 != -1) {
    dispatch_once(&qword_102419360, &stru_1022F9270);
  }
  uint64_t v1 = qword_102419368;
  if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::string buf = 67240192;
    int v5 = (int)v0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEBUG, "CLAccessory,isShiftingSupported,%{public}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022F9270);
    }
    uint64_t v3 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLAccessoryUtils::isShiftingSupportedNoAprioriLocation()", "%s\n", v3);
    if (v3 != (char *)buf) {
      free(v3);
    }
  }
  return v0;
}

uint64_t sub_100DEF238(uint64_t a1, uint64_t a2)
{
  int v4 = (void *)(a1 + 8);
  sub_1006280C4(a1, *(void **)(a1 + 8));
  *(void *)a1 = v4;
  *(void *)(a1 + 16) = 0;
  void *v4 = 0;
  *(unsigned char *)(a1 + 24) = 1;
  *(_DWORD *)(a1 + 36) = 180;
  *(void *)(a1 + 40) = 0x403E000000000000;
  *(_WORD *)(a1 + 48) = 1;
  *(void *)(a1 + 28) = 0xA00000041;
  *(_OWORD *)(a1 + 56) = xmmword_101D24D90;
  CFArrayRef theArray = 0;
  if (sub_1004D1D1C(a2, @"AccessorySetting", (CFTypeRef *)&theArray))
  {
    if (theArray)
    {
      int Count = CFArrayGetCount(theArray);
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022F9270);
      }
      int v6 = qword_102419368;
      if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)std::string buf = 67240192;
        *(_DWORD *)&uint8_t buf[4] = Count;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "CLAccessory,MA-OTA,DenyLocation AccessoryList,count,%{public}d", buf, 8u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419360 != -1) {
          dispatch_once(&qword_102419360, &stru_1022F9270);
        }
        *(_DWORD *)std::string __str = 67240192;
        *(_DWORD *)&__str[4] = Count;
        unint64_t v74 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryUtils::CLAccessoryMobileAssetReader::readConfig(const CLNameValuePair &)", "%s\n", v74);
        if (v74 != buf) {
          free(v74);
        }
      }
      if (Count >= 1)
      {
        CFIndex v7 = 0;
        while (1)
        {
          CFDictionaryRef ValueAtIndex = (const __CFDictionary *)CFArrayGetValueAtIndex(theArray, v7);
          sub_10013FA80((int)v84, ValueAtIndex);
          long long v105 = 0u;
          memset(__p, 0, 25);
          *(_OWORD *)char v103 = 0u;
          *(_OWORD *)unint64_t v104 = 0u;
          *(_OWORD *)std::string::size_type v101 = 0u;
          long long v102 = 0u;
          long long v99 = 0u;
          *(_OWORD *)__int16 v100 = 0u;
          memset(__str, 0, sizeof(__str));
          *(_WORD *)&__p[25] = 257;
          if (!sub_1004D1284((uint64_t)v84, "manufacturer", (std::string *)__str)) {
            break;
          }
          if (!sub_1004D1284((uint64_t)v84, "name", (std::string *)&__str[24]))
          {
            if (qword_102419360 != -1) {
              dispatch_once(&qword_102419360, &stru_1022F9270);
            }
            uint64_t v18 = qword_102419368;
            if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)std::string buf = 136446210;
              *(void *)&uint8_t buf[4] = "name";
              _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "CLAccessory,MA-OTA,Unable to read accessory %{public}s", buf, 0xCu);
            }
            if (!sub_10013D1A0(115, 0)) {
              goto LABEL_78;
            }
            bzero(buf, 0x65CuLL);
            if (qword_102419360 != -1) {
              dispatch_once(&qword_102419360, &stru_1022F9270);
            }
            int v86 = 136446210;
            __int16 v87 = "name";
            __int16 v17 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 0, "void CLAccessoryUtils::CLAccessoryMobileAssetReader::readConfig(const CLNameValuePair &)", "%s\n", v17);
            goto LABEL_112;
          }
          if (!sub_1004D1284((uint64_t)v84, "model", (std::string *)v100))
          {
            if (qword_102419360 != -1) {
              dispatch_once(&qword_102419360, &stru_1022F9270);
            }
            int v19 = qword_102419368;
            if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)std::string buf = 136446210;
              *(void *)&uint8_t buf[4] = "model";
              _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "CLAccessory,MA-OTA,Unable to get accessory %{public}s", buf, 0xCu);
            }
            if (!sub_10013D1A0(115, 0)) {
              goto LABEL_78;
            }
            bzero(buf, 0x65CuLL);
            if (qword_102419360 != -1) {
              dispatch_once(&qword_102419360, &stru_1022F9270);
            }
            int v86 = 136446210;
            __int16 v87 = "model";
            __int16 v17 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 0, "void CLAccessoryUtils::CLAccessoryMobileAssetReader::readConfig(const CLNameValuePair &)", "%s\n", v17);
            goto LABEL_112;
          }
          if (!sub_1004D1284((uint64_t)v84, "firmwareversion", (std::string *)v103))
          {
            if (qword_102419360 != -1) {
              dispatch_once(&qword_102419360, &stru_1022F9270);
            }
            int v20 = qword_102419368;
            if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)std::string buf = 136446210;
              *(void *)&uint8_t buf[4] = "firmwareversion";
              _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_ERROR, "CLAccessory,MA-OTA,Unable to get accessory %{public}s", buf, 0xCu);
            }
            if (!sub_10013D1A0(115, 0)) {
              goto LABEL_78;
            }
            bzero(buf, 0x65CuLL);
            if (qword_102419360 != -1) {
              dispatch_once(&qword_102419360, &stru_1022F9270);
            }
            int v86 = 136446210;
            __int16 v87 = "firmwareversion";
            __int16 v17 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 0, "void CLAccessoryUtils::CLAccessoryMobileAssetReader::readConfig(const CLNameValuePair &)", "%s\n", v17);
            goto LABEL_112;
          }
          if (!sub_1004D1284((uint64_t)v84, "hardwareversion", (std::string *)&v104[1]))
          {
            if (qword_102419360 != -1) {
              dispatch_once(&qword_102419360, &stru_1022F9270);
            }
            BOOL v21 = qword_102419368;
            if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)std::string buf = 136446210;
              *(void *)&uint8_t buf[4] = "hardwareversion";
              _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "CLAccessory,MA-OTA,Unable to get accessory %{public}s", buf, 0xCu);
            }
            if (!sub_10013D1A0(115, 0)) {
              goto LABEL_78;
            }
            bzero(buf, 0x65CuLL);
            if (qword_102419360 != -1) {
              dispatch_once(&qword_102419360, &stru_1022F9270);
            }
            int v86 = 136446210;
            __int16 v87 = "hardwareversion";
            __int16 v17 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 0, "void CLAccessoryUtils::CLAccessoryMobileAssetReader::readConfig(const CLNameValuePair &)", "%s\n", v17);
            goto LABEL_112;
          }
          if ((sub_1000D2988((uint64_t)v84, "isdenied", &__p[24]) & 1) == 0)
          {
            if (qword_102419360 != -1) {
              dispatch_once(&qword_102419360, &stru_1022F9270);
            }
            int v22 = qword_102419368;
            if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)std::string buf = 136446210;
              *(void *)&uint8_t buf[4] = "isdenied";
              _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_ERROR, "CLAccessory,MA-OTA,Unable to get accessory %{public}s", buf, 0xCu);
            }
            if (!sub_10013D1A0(115, 0)) {
              goto LABEL_78;
            }
            bzero(buf, 0x65CuLL);
            if (qword_102419360 != -1) {
              dispatch_once(&qword_102419360, &stru_1022F9270);
            }
            int v86 = 136446210;
            __int16 v87 = "isdenied";
            __int16 v17 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 0, "void CLAccessoryUtils::CLAccessoryMobileAssetReader::readConfig(const CLNameValuePair &)", "%s\n", v17);
            goto LABEL_112;
          }
          if (qword_102419360 != -1) {
            dispatch_once(&qword_102419360, &stru_1022F9270);
          }
          char v9 = qword_102419368;
          if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_INFO))
          {
            int v10 = __str;
            if (__str[23] < 0) {
              int v10 = *(unsigned char **)__str;
            }
            if (v99 >= 0) {
              __int16 v11 = &__str[24];
            }
            else {
              __int16 v11 = *(unsigned char **)&__str[24];
            }
            int v12 = v100;
            if (SHIBYTE(v101[0]) < 0) {
              int v12 = (void **)v100[0];
            }
            long long v13 = v103;
            if (SHIBYTE(v104[0]) < 0) {
              long long v13 = (void **)v103[0];
            }
            long long v14 = &v104[1];
            if (v105 < 0) {
              long long v14 = (void **)v104[1];
            }
            *(_DWORD *)std::string buf = 136447490;
            *(void *)&uint8_t buf[4] = v10;
            __int16 v108 = 2082;
            __int16 v109 = v11;
            __int16 v110 = 2082;
            int v111 = v12;
            __int16 v112 = 2082;
            unint64_t v113 = v13;
            __int16 v114 = 2082;
            v115 = v14;
            __int16 v116 = 1026;
            int v117 = __p[24];
            _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "CLAccessory,MA-OTA,Read settings for accessory,manufacturer,%{public}s,name,%{public}s,model,%{public}s,fw,%{public}s,hw,%{public}s,denied,%{public}d", buf, 0x3Au);
          }
          if (sub_10013D1A0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_102419360 != -1) {
              dispatch_once(&qword_102419360, &stru_1022F9270);
            }
            int v23 = __str;
            if (__str[23] < 0) {
              int v23 = *(const char **)__str;
            }
            if (v99 >= 0) {
              BOOL v24 = &__str[24];
            }
            else {
              BOOL v24 = *(unsigned char **)&__str[24];
            }
            __int16 v25 = v100;
            if (SHIBYTE(v101[0]) < 0) {
              __int16 v25 = (void **)v100[0];
            }
            int v26 = v103;
            if (SHIBYTE(v104[0]) < 0) {
              int v26 = (void **)v103[0];
            }
            uint64_t v27 = &v104[1];
            if (v105 < 0) {
              uint64_t v27 = (void **)v104[1];
            }
            int v86 = 136447490;
            __int16 v87 = v23;
            __int16 v88 = 2082;
            uint64_t v89 = v24;
            __int16 v90 = 2082;
            char v91 = v25;
            __int16 v92 = 2082;
            long long v93 = v26;
            __int16 v94 = 2082;
            double v95 = v27;
            __int16 v96 = 1026;
            int v97 = __p[24];
            int v28 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryUtils::CLAccessoryMobileAssetReader::readConfig(const CLNameValuePair &)", "%s\n", v28);
            if (v28 != buf) {
              free(v28);
            }
          }
          *(void *)std::string buf = &__str[24];
          __int16 v15 = sub_100DF1800((uint64_t **)a1, (const void **)&__str[24], (uint64_t)&unk_101D0B290, (long long **)buf);
          std::string::operator=((std::string *)(v15 + 7), (const std::string *)__str);
          std::string::operator=((std::string *)(v15 + 10), (const std::string *)&__str[24]);
          std::string::operator=((std::string *)(v15 + 13), (const std::string *)v100);
          std::string::operator=((std::string *)(v15 + 16), (const std::string *)&v101[1]);
          std::string::operator=((std::string *)(v15 + 19), (const std::string *)v103);
          std::string::operator=((std::string *)(v15 + 22), (const std::string *)&v104[1]);
          std::string::operator=((std::string *)(v15 + 25), (const std::string *)__p);
          *((_WORD *)v15 + 112) = *(_WORD *)&__p[24];
          *((unsigned char *)v15 + 226) = __p[26];
LABEL_78:
          if ((__p[23] & 0x80000000) != 0) {
            operator delete(*(void **)__p);
          }
          if (SHIBYTE(v105) < 0) {
            operator delete(v104[1]);
          }
          if (SHIBYTE(v104[0]) < 0) {
            operator delete(v103[0]);
          }
          if (SHIBYTE(v102) < 0) {
            operator delete(v101[1]);
          }
          if (SHIBYTE(v101[0]) < 0) {
            operator delete(v100[0]);
          }
          if (SHIBYTE(v99) < 0) {
            operator delete(*(void **)&__str[24]);
          }
          if ((__str[23] & 0x80000000) != 0) {
            operator delete(*(void **)__str);
          }
          sub_10013F3C4(v84);
          if (Count == ++v7) {
            goto LABEL_119;
          }
        }
        if (qword_102419360 != -1) {
          dispatch_once(&qword_102419360, &stru_1022F9270);
        }
        unint64_t v16 = qword_102419368;
        if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)std::string buf = 136446210;
          *(void *)&uint8_t buf[4] = "manufacturer";
          _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "CLAccessory,MA-OTA,Unable to get accessory %{public}s", buf, 0xCu);
        }
        if (!sub_10013D1A0(115, 0)) {
          goto LABEL_78;
        }
        bzero(buf, 0x65CuLL);
        if (qword_102419360 != -1) {
          dispatch_once(&qword_102419360, &stru_1022F9270);
        }
        int v86 = 136446210;
        __int16 v87 = "manufacturer";
        __int16 v17 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "void CLAccessoryUtils::CLAccessoryMobileAssetReader::readConfig(const CLNameValuePair &)", "%s\n", v17);
LABEL_112:
        if (v17 != buf) {
          free(v17);
        }
        goto LABEL_78;
      }
    }
    else
    {
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022F9270);
      }
      long long v29 = qword_102419368;
      if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_ERROR, "CLAccessory,MA-OTA,NULL accessoryArray", buf, 2u);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419360 != -1) {
          dispatch_once(&qword_102419360, &stru_1022F9270);
        }
        *(_WORD *)std::string __str = 0;
        unint64_t v75 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "void CLAccessoryUtils::CLAccessoryMobileAssetReader::readConfig(const CLNameValuePair &)", "%s\n", v75);
        if (v75 != buf) {
          free(v75);
        }
      }
    }
  }
LABEL_119:
  BOOL v83 = *(unsigned char *)(a1 + 48);
  if (sub_1000D2988(a2, "EnableCourseScreening", &v83))
  {
    *(unsigned char *)(a1 + 48) = v83;
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022F9270);
    }
    int v30 = qword_102419368;
    if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_INFO))
    {
      int v31 = *(unsigned __int8 *)(a1 + 48);
      *(_DWORD *)std::string buf = 136446466;
      *(void *)&uint8_t buf[4] = "EnableCourseScreening";
      __int16 v108 = 1026;
      LODWORD(v109) = v31;
      _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_INFO, "CLAccessory,MA-OTA,Read %{public}s,%{public}d", buf, 0x12u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022F9270);
      }
      int v60 = *(unsigned __int8 *)(a1 + 48);
      *(_DWORD *)std::string __str = 136446466;
      *(void *)&__str[4] = "EnableCourseScreening";
      *(_WORD *)&__str[12] = 1026;
      *(_DWORD *)&__str[14] = v60;
      float v61 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryUtils::CLAccessoryMobileAssetReader::readConfig(const CLNameValuePair &)", "%s\n", v61);
      if (v61 != buf) {
        free(v61);
      }
    }
  }
  BOOL v82 = *(unsigned char *)(a1 + 24);
  if (sub_1000D2988(a2, "EnableAggressiveNMEAScreening", &v82))
  {
    *(unsigned char *)(a1 + 24) = v82;
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022F9270);
    }
    int v32 = qword_102419368;
    if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_INFO))
    {
      int v33 = *(unsigned __int8 *)(a1 + 24);
      *(_DWORD *)std::string buf = 136446466;
      *(void *)&uint8_t buf[4] = "EnableAggressiveNMEAScreening";
      __int16 v108 = 1026;
      LODWORD(v109) = v33;
      _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_INFO, "CLAccessory,MA-OTA,Read %{public}s,%{public}d", buf, 0x12u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022F9270);
      }
      int v62 = *(unsigned __int8 *)(a1 + 24);
      *(_DWORD *)std::string __str = 136446466;
      *(void *)&__str[4] = "EnableAggressiveNMEAScreening";
      *(_WORD *)&__str[12] = 1026;
      *(_DWORD *)&__str[14] = v62;
      unint64_t v63 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryUtils::CLAccessoryMobileAssetReader::readConfig(const CLNameValuePair &)", "%s\n", v63);
      if (v63 != buf) {
        free(v63);
      }
    }
  }
  int v81 = *(_DWORD *)(a1 + 28);
  if (sub_10006EF84(a2, "LocationDiffThresholdForAggressiveScreening", &v81))
  {
    *(_DWORD *)(a1 + 28) = v81;
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022F9270);
    }
    uint64_t v34 = qword_102419368;
    if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_INFO))
    {
      int v35 = *(_DWORD *)(a1 + 28);
      *(_DWORD *)std::string buf = 136446466;
      *(void *)&uint8_t buf[4] = "LocationDiffThresholdForAggressiveScreening";
      __int16 v108 = 1026;
      LODWORD(v109) = v35;
      _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_INFO, "CLAccessory,MA-OTA,Read %{public}s,%{public}d", buf, 0x12u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022F9270);
      }
      int v64 = *(_DWORD *)(a1 + 28);
      *(_DWORD *)std::string __str = 136446466;
      *(void *)&__str[4] = "LocationDiffThresholdForAggressiveScreening";
      *(_WORD *)&__str[12] = 1026;
      *(_DWORD *)&__str[14] = v64;
      unint64_t v65 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryUtils::CLAccessoryMobileAssetReader::readConfig(const CLNameValuePair &)", "%s\n", v65);
      if (v65 != buf) {
        free(v65);
      }
    }
  }
  int v80 = *(_DWORD *)(a1 + 32);
  if (sub_10006EF84(a2, "MinContinuousFailureCountForBlockingAccessory", &v80))
  {
    *(_DWORD *)(a1 + 32) = v80;
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022F9270);
    }
    uint64_t v36 = qword_102419368;
    if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_INFO))
    {
      int v37 = *(_DWORD *)(a1 + 32);
      *(_DWORD *)std::string buf = 136446466;
      *(void *)&uint8_t buf[4] = "MinContinuousFailureCountForBlockingAccessory";
      __int16 v108 = 1026;
      LODWORD(v109) = v37;
      _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_INFO, "CLAccessory,MA-OTA,Read %{public}s,%{public}d", buf, 0x12u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022F9270);
      }
      int v66 = *(_DWORD *)(a1 + 32);
      *(_DWORD *)std::string __str = 136446466;
      *(void *)&__str[4] = "MinContinuousFailureCountForBlockingAccessory";
      *(_WORD *)&__str[12] = 1026;
      *(_DWORD *)&__str[14] = v66;
      uint64_t v67 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryUtils::CLAccessoryMobileAssetReader::readConfig(const CLNameValuePair &)", "%s\n", v67);
      if (v67 != buf) {
        free(v67);
      }
    }
  }
  int v79 = *(_DWORD *)(a1 + 36);
  if (sub_10006EF84(a2, "MinContinuousSuccessCountForUnblockingAccessory", &v79))
  {
    *(_DWORD *)(a1 + 36) = v79;
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022F9270);
    }
    BOOL v38 = qword_102419368;
    if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_INFO))
    {
      int v39 = *(_DWORD *)(a1 + 36);
      *(_DWORD *)std::string buf = 136446466;
      *(void *)&uint8_t buf[4] = "MinContinuousSuccessCountForUnblockingAccessory";
      __int16 v108 = 1026;
      LODWORD(v109) = v39;
      _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_INFO, "CLAccessory,MA-OTA,Read %{public}s,%{public}d", buf, 0x12u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022F9270);
      }
      int v68 = *(_DWORD *)(a1 + 36);
      *(_DWORD *)std::string __str = 136446466;
      *(void *)&__str[4] = "MinContinuousSuccessCountForUnblockingAccessory";
      *(_WORD *)&__str[12] = 1026;
      *(_DWORD *)&__str[14] = v68;
      unint64_t v69 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryUtils::CLAccessoryMobileAssetReader::readConfig(const CLNameValuePair &)", "%s\n", v69);
      if (v69 != buf) {
        free(v69);
      }
    }
  }
  v84[0] = *(double *)(a1 + 40);
  int v40 = sub_1000A699C(a2, "MaxGPSUncertaintyForAggressiveBlockingAccessory", v84);
  if (v84[0] > 0.0) {
    int v41 = v40;
  }
  else {
    int v41 = 0;
  }
  if (v41 == 1)
  {
    *(double *)(a1 + 40) = v84[0];
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022F9270);
    }
    char v42 = qword_102419368;
    if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_INFO))
    {
      __int16 v43 = *(unsigned char **)(a1 + 40);
      *(_DWORD *)std::string buf = 136446466;
      *(void *)&uint8_t buf[4] = "MaxGPSUncertaintyForAggressiveBlockingAccessory";
      __int16 v108 = 2050;
      __int16 v109 = v43;
      _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_INFO, "CLAccessory,MA-OTA,Read %{public}s,%{public}.2f", buf, 0x16u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022F9270);
      }
      uint64_t v70 = *(void *)(a1 + 40);
      *(_DWORD *)std::string __str = 136446466;
      *(void *)&__str[4] = "MaxGPSUncertaintyForAggressiveBlockingAccessory";
      *(_WORD *)&__str[12] = 2050;
      *(void *)&__str[14] = v70;
      char v71 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryUtils::CLAccessoryMobileAssetReader::readConfig(const CLNameValuePair &)", "%s\n", v71);
      if (v71 != buf) {
        free(v71);
      }
    }
  }
  BOOL v78 = *(unsigned char *)(a1 + 49);
  if (sub_1000D2988(a2, "AllowGPGGAOnlyAccessory", &v78))
  {
    *(unsigned char *)(a1 + 49) = v78;
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022F9270);
    }
    BOOL v44 = qword_102419368;
    if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_INFO))
    {
      int v45 = *(unsigned __int8 *)(a1 + 49);
      *(_DWORD *)std::string buf = 136446466;
      *(void *)&uint8_t buf[4] = "AllowGPGGAOnlyAccessory";
      __int16 v108 = 1026;
      LODWORD(v109) = v45;
      _os_log_impl((void *)&_mh_execute_header, v44, OS_LOG_TYPE_INFO, "CLAccessory,MA-OTA,Read %{public}s,%{public}d", buf, 0x12u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022F9270);
      }
      int v72 = *(unsigned __int8 *)(a1 + 49);
      *(_DWORD *)std::string __str = 136446466;
      *(void *)&__str[4] = "AllowGPGGAOnlyAccessory";
      *(_WORD *)&__str[12] = 1026;
      *(_DWORD *)&__str[14] = v72;
      unint64_t v73 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryUtils::CLAccessoryMobileAssetReader::readConfig(const CLNameValuePair &)", "%s\n", v73);
      if (v73 != buf) {
        free(v73);
      }
    }
  }
  sub_1000E9354(&v86);
  if (sub_100012960(a2, "CarplayCourseUncertaintyAtLowSpeeds", &v86))
  {
    double v76 = 0.0;
    double v77 = 0.0;
    if (sub_1000A699C((uint64_t)&v86, "SpeedThreshold", &v77)
      && sub_1000A699C((uint64_t)&v86, "CourseUncertainty", &v76))
    {
      double v46 = v76;
      if (v76 < 1.0 || v76 > 180.0 || v77 < 1.0 || v77 > 50.0)
      {
        if (qword_102419360 != -1) {
          dispatch_once(&qword_102419360, &stru_1022F9270);
        }
        float v55 = qword_102419368;
        if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_ERROR))
        {
          int v57 = *(unsigned char **)(a1 + 56);
          uint64_t v56 = *(void *)(a1 + 64);
          *(_DWORD *)std::string buf = 134349312;
          *(void *)&uint8_t buf[4] = v56;
          __int16 v108 = 2050;
          __int16 v109 = v57;
          _os_log_impl((void *)&_mh_execute_header, v55, OS_LOG_TYPE_ERROR, "CLAccessory,MA-OTA,invalid CarplayCourseUncertaintyAtLowSpeeds,course,%{public}.1lf,speed,%{public}.1lf", buf, 0x16u);
        }
        if (sub_10013D1A0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419360 != -1) {
            dispatch_once(&qword_102419360, &stru_1022F9270);
          }
          uint64_t v59 = *(void *)(a1 + 56);
          uint64_t v58 = *(void *)(a1 + 64);
          *(_DWORD *)std::string __str = 134349312;
          *(void *)&__str[4] = v58;
          *(_WORD *)&__str[12] = 2050;
          *(void *)&__str[14] = v59;
          __int16 v52 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 0, "void CLAccessoryUtils::CLAccessoryMobileAssetReader::readConfig(const CLNameValuePair &)", "%s\n", v52);
          goto LABEL_224;
        }
      }
      else
      {
        *(double *)(a1 + 56) = v77;
        *(double *)(a1 + 64) = v46;
        if (qword_102419360 != -1) {
          dispatch_once(&qword_102419360, &stru_1022F9270);
        }
        int v47 = qword_102419368;
        if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_INFO))
        {
          unint64_t v49 = *(unsigned char **)(a1 + 56);
          uint64_t v48 = *(void *)(a1 + 64);
          *(_DWORD *)std::string buf = 134349312;
          *(void *)&uint8_t buf[4] = v48;
          __int16 v108 = 2050;
          __int16 v109 = v49;
          _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_INFO, "CLAccessory,MA-OTA,Read CarplayCourseUncertaintyAtLowSpeeds,course,%{public}.1lf,speed,%{public}.1lf", buf, 0x16u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419360 != -1) {
            dispatch_once(&qword_102419360, &stru_1022F9270);
          }
          uint64_t v51 = *(void *)(a1 + 56);
          uint64_t v50 = *(void *)(a1 + 64);
          *(_DWORD *)std::string __str = 134349312;
          *(void *)&__str[4] = v50;
          *(_WORD *)&__str[12] = 2050;
          *(void *)&__str[14] = v51;
          __int16 v52 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryUtils::CLAccessoryMobileAssetReader::readConfig(const CLNameValuePair &)", "%s\n", v52);
LABEL_224:
          if (v52 != buf) {
            free(v52);
          }
        }
      }
    }
    else
    {
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022F9270);
      }
      int v53 = qword_102419368;
      if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v53, OS_LOG_TYPE_ERROR, "CLAccessory,MA-OTA,Reading failed to read CarplayCourseUncertaintyAtLowSpeeds settings", buf, 2u);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419360 != -1) {
          dispatch_once(&qword_102419360, &stru_1022F9270);
        }
        *(_WORD *)std::string __str = 0;
        __int16 v52 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "void CLAccessoryUtils::CLAccessoryMobileAssetReader::readConfig(const CLNameValuePair &)", "%s\n", v52);
        goto LABEL_224;
      }
    }
  }
  return sub_10013F3C4(&v86);
}

void sub_100DF1184(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

uint64_t sub_100DF11E4(uint64_t **a1, unsigned __int8 *a2)
{
  int v4 = (const void **)(a2 + 24);
  uint64_t result = sub_100040D3C((uint64_t)a1, (const void **)a2 + 3);
  if (!result) {
    return result;
  }
  *(void *)std::string buf = v4;
  int v6 = sub_100DF1800(a1, v4, (uint64_t)&unk_101D0B290, (long long **)buf);
  uint64_t v7 = *((unsigned __int8 *)v6 + 79);
  if ((v7 & 0x80u) == 0) {
    uint64_t v8 = *((unsigned __int8 *)v6 + 79);
  }
  else {
    uint64_t v8 = v6[8];
  }
  uint64_t v9 = a2[23];
  int v10 = (char)v9;
  if ((v9 & 0x80u) != 0) {
    uint64_t v9 = *((void *)a2 + 1);
  }
  if (v8 != v9) {
    return 0;
  }
  __int16 v11 = v6;
  int v12 = (const void **)(v6 + 7);
  if (v10 >= 0) {
    long long v13 = a2;
  }
  else {
    long long v13 = *(unsigned __int8 **)a2;
  }
  if ((v7 & 0x80) != 0)
  {
    if (memcmp(*v12, v13, v6[8])) {
      return 0;
    }
  }
  else if (*((unsigned char *)v6 + 79))
  {
    while (*(unsigned __int8 *)v12 == *v13)
    {
      int v12 = (const void **)((char *)v12 + 1);
      ++v13;
      if (!--v7) {
        goto LABEL_17;
      }
    }
    return 0;
  }
LABEL_17:
  uint64_t v14 = *((unsigned __int8 *)v11 + 103);
  if (*((char *)v11 + 103) < 0)
  {
    if (!v11[11]) {
      goto LABEL_36;
    }
  }
  else if (!*((unsigned char *)v11 + 103))
  {
    goto LABEL_36;
  }
  if ((v14 & 0x80u) == 0) {
    uint64_t v15 = *((unsigned __int8 *)v11 + 103);
  }
  else {
    uint64_t v15 = v11[11];
  }
  uint64_t v16 = a2[47];
  int v17 = (char)v16;
  if ((v16 & 0x80u) != 0) {
    uint64_t v16 = *((void *)a2 + 4);
  }
  if (v15 != v16) {
    return 0;
  }
  uint64_t v18 = (const void **)(v11 + 10);
  if (v17 >= 0) {
    int v19 = (unsigned __int8 *)v4;
  }
  else {
    int v19 = (unsigned __int8 *)*v4;
  }
  if ((v14 & 0x80) != 0)
  {
    if (memcmp(*v18, v19, v11[11])) {
      return 0;
    }
  }
  else if (*((unsigned char *)v11 + 103))
  {
    while (*(unsigned __int8 *)v18 == *v19)
    {
      uint64_t v18 = (const void **)((char *)v18 + 1);
      ++v19;
      if (!--v14) {
        goto LABEL_36;
      }
    }
    return 0;
  }
LABEL_36:
  uint64_t v20 = *((unsigned __int8 *)v11 + 127);
  if (*((char *)v11 + 127) < 0)
  {
    if (!v11[14]) {
      goto LABEL_55;
    }
  }
  else if (!*((unsigned char *)v11 + 127))
  {
    goto LABEL_55;
  }
  if ((v20 & 0x80u) == 0) {
    uint64_t v21 = *((unsigned __int8 *)v11 + 127);
  }
  else {
    uint64_t v21 = v11[14];
  }
  uint64_t v22 = a2[71];
  int v23 = (char)v22;
  if ((v22 & 0x80u) != 0) {
    uint64_t v22 = *((void *)a2 + 7);
  }
  if (v21 != v22) {
    return 0;
  }
  BOOL v24 = (const void **)(v11 + 13);
  if (v23 >= 0) {
    __int16 v25 = a2 + 48;
  }
  else {
    __int16 v25 = (unsigned __int8 *)*((void *)a2 + 6);
  }
  if ((v20 & 0x80) != 0)
  {
    if (memcmp(*v24, v25, v11[14])) {
      return 0;
    }
  }
  else if (*((unsigned char *)v11 + 127))
  {
    while (*(unsigned __int8 *)v24 == *v25)
    {
      BOOL v24 = (const void **)((char *)v24 + 1);
      ++v25;
      if (!--v20) {
        goto LABEL_55;
      }
    }
    return 0;
  }
LABEL_55:
  uint64_t v26 = *((unsigned __int8 *)v11 + 175);
  if (*((char *)v11 + 175) < 0)
  {
    if (!v11[20]) {
      goto LABEL_74;
    }
  }
  else if (!*((unsigned char *)v11 + 175))
  {
    goto LABEL_74;
  }
  if ((v26 & 0x80u) == 0) {
    uint64_t v27 = *((unsigned __int8 *)v11 + 175);
  }
  else {
    uint64_t v27 = v11[20];
  }
  uint64_t v28 = a2[119];
  int v29 = (char)v28;
  if ((v28 & 0x80u) != 0) {
    uint64_t v28 = *((void *)a2 + 13);
  }
  if (v27 != v28) {
    return 0;
  }
  int v30 = (const void **)(v11 + 19);
  if (v29 >= 0) {
    int v31 = a2 + 96;
  }
  else {
    int v31 = (unsigned __int8 *)*((void *)a2 + 12);
  }
  if ((v26 & 0x80) != 0)
  {
    if (memcmp(*v30, v31, v11[20])) {
      return 0;
    }
  }
  else if (*((unsigned char *)v11 + 175))
  {
    while (*(unsigned __int8 *)v30 == *v31)
    {
      int v30 = (const void **)((char *)v30 + 1);
      ++v31;
      if (!--v26) {
        goto LABEL_74;
      }
    }
    return 0;
  }
LABEL_74:
  uint64_t v32 = *((unsigned __int8 *)v11 + 199);
  if (*((char *)v11 + 199) < 0) {
    uint64_t v33 = v11[23];
  }
  else {
    uint64_t v33 = *((unsigned __int8 *)v11 + 199);
  }
  if (v33)
  {
    if ((v32 & 0x80u) == 0) {
      uint64_t v34 = *((unsigned __int8 *)v11 + 199);
    }
    else {
      uint64_t v34 = v11[23];
    }
    uint64_t v35 = a2[143];
    int v36 = (char)v35;
    if ((v35 & 0x80u) != 0) {
      uint64_t v35 = *((void *)a2 + 16);
    }
    if (v34 != v35) {
      return 0;
    }
    int v37 = (const void **)(v11 + 22);
    if (v36 >= 0) {
      BOOL v38 = a2 + 120;
    }
    else {
      BOOL v38 = (unsigned __int8 *)*((void *)a2 + 15);
    }
    if ((v32 & 0x80) == 0)
    {
      if (*((unsigned char *)v11 + 199))
      {
        while (*(unsigned __int8 *)v37 == *v38)
        {
          int v37 = (const void **)((char *)v37 + 1);
          ++v38;
          if (!--v32) {
            goto LABEL_95;
          }
        }
        return 0;
      }
      goto LABEL_95;
    }
    if (memcmp(*v37, v38, v11[23])) {
      return 0;
    }
  }
LABEL_95:
  if (qword_102419360 != -1) {
    dispatch_once(&qword_102419360, &stru_1022F9270);
  }
  int v39 = qword_102419368;
  if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_INFO))
  {
    if ((a2[47] & 0x80u) == 0) {
      int v40 = v4;
    }
    else {
      int v40 = (const void **)*((void *)a2 + 3);
    }
    if ((a2[23] & 0x80u) == 0) {
      int v41 = a2;
    }
    else {
      int v41 = *(unsigned __int8 **)a2;
    }
    if ((a2[71] & 0x80u) == 0) {
      char v42 = a2 + 48;
    }
    else {
      char v42 = (unsigned __int8 *)*((void *)a2 + 6);
    }
    if ((a2[119] & 0x80u) == 0) {
      __int16 v43 = a2 + 96;
    }
    else {
      __int16 v43 = (unsigned __int8 *)*((void *)a2 + 12);
    }
    if ((a2[143] & 0x80u) == 0) {
      BOOL v44 = a2 + 120;
    }
    else {
      BOOL v44 = (unsigned __int8 *)*((void *)a2 + 15);
    }
    int v45 = *((unsigned __int8 *)v11 + 224);
    *(_DWORD *)std::string buf = 136447490;
    *(void *)&uint8_t buf[4] = v40;
    __int16 v48 = 2082;
    unint64_t v49 = v41;
    __int16 v50 = 2082;
    uint64_t v51 = v42;
    __int16 v52 = 2082;
    int v53 = v43;
    __int16 v54 = 2082;
    float v55 = v44;
    __int16 v56 = 1026;
    int v57 = v45;
    _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_INFO, "Accessory MA settings available,name,%{public}s,manufacturer,%{public}s,model,%{public}s,fw,%{public}s,hw,%{public}s,denied,%{public}d", buf, 0x3Au);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022F9270);
    }
    double v46 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLAccessoryUtils::CLAccessoryMobileAssetReader::isLocationDeniedFromThisAccessory(const CLAccessoryInfo &)", "%s\n", v46);
    if (v46 != buf) {
      free(v46);
    }
  }
  return *((unsigned char *)v11 + 224) != 0;
}

void sub_100DF17D0(id a1)
{
  qword_102419368 = (uint64_t)os_log_create("com.apple.locationd.Position", "GpsAccessory");
}

uint64_t *sub_100DF1800(uint64_t **a1, const void **a2, uint64_t a3, long long **a4)
{
  int v6 = (uint64_t **)sub_1001070AC((uint64_t)a1, &v11, a2);
  uint64_t v7 = *v6;
  if (!*v6)
  {
    uint64_t v8 = v6;
    sub_100DF18AC((uint64_t)a1, a4, (uint64_t)v10);
    sub_1000EDF90(a1, v11, v8, v10[0]);
    uint64_t v7 = v10[0];
    v10[0] = 0;
    sub_100DF19A0((uint64_t)v10, 0);
  }
  return v7;
}

char *sub_100DF18AC@<X0>(uint64_t a1@<X0>, long long **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  int v6 = (char *)operator new(0xE8uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = sub_100DF1918(v6 + 32, *a2);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_100DF1900(_Unwind_Exception *a1)
{
  sub_100DF19A0(v1, 0);
  _Unwind_Resume(a1);
}

char *sub_100DF1918(char *__dst, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000DC48C(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v3 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)long long __dst = v3;
  }
  *(_OWORD *)(__dst + 184) = 0u;
  *(_OWORD *)(__dst + 168) = 0u;
  *(_OWORD *)(__dst + 152) = 0u;
  *(_OWORD *)(__dst + 136) = 0u;
  *(_OWORD *)(__dst + 120) = 0u;
  *(_OWORD *)(__dst + 104) = 0u;
  *(_OWORD *)(__dst + 88) = 0u;
  *(_OWORD *)(__dst + 72) = 0u;
  *(_OWORD *)(__dst + 56) = 0u;
  *(_OWORD *)(__dst + 40) = 0u;
  *(_OWORD *)(__dst + 24) = 0u;
  *(_WORD *)(__dst + 193) = 257;
  return __dst;
}

void sub_100DF19A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_100628120((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

uint64_t sub_100DF19F8(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a1 - 8;
  }
  else {
    uint64_t v2 = 0;
  }
  return sub_100DF26F0(v2, a2);
}

uint64_t sub_100DF1A08(uint64_t result)
{
  uint64_t v1 = result - 8;
  if (!result) {
    uint64_t v1 = 0;
  }
  *(_DWORD *)(v1 + 280) = 0;
  *(void *)(v1 + 272) = 0;
  *(void *)(v1 + 788) = 0;
  return result;
}

double sub_100DF1A2C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a1 - 8;
  }
  else {
    uint64_t v2 = 0;
  }
  *(void *)&double result = sub_100DF2D78(v2, a2).n128_u64[0];
  return result;
}

uint64_t sub_100DF1A3C(uint64_t a1, _OWORD *a2)
{
  if (a1) {
    uint64_t v2 = a1 - 8;
  }
  else {
    uint64_t v2 = 0;
  }
  return sub_100DF2A24(v2, a2);
}

uint64_t sub_100DF1A4C(uint64_t result)
{
  uint64_t v1 = result - 8;
  if (!result) {
    uint64_t v1 = 0;
  }
  *(_DWORD *)(v1 + 280) = 0;
  *(void *)(v1 + 272) = 0;
  *(void *)(v1 + 788) = 0;
  return result;
}

uint64_t sub_100DF1A6C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a1 - 8;
  }
  else {
    uint64_t v2 = 0;
  }
  return sub_100DF2B44(v2, a2);
}

double sub_100DF1A7C(uint64_t a1)
{
  *(void *)(a1 + 8) = &unk_1022F9290;
  *(void *)(a1 + 16) = 9;
  *(_WORD *)(a1 + 24) = 512;
  *(void *)a1 = off_1022F9378;
  *(unsigned char *)(a1 + 28) = 1;
  *(void *)(a1 + 44) = 0xC00000000;
  *(_DWORD *)(a1 + 40) = 1031798784;
  *(void *)(a1 + 104) = off_1022C3DA0;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 168) = a1 + 176;
  *(unsigned char *)(a1 + 192) = 1;
  *(_DWORD *)(a1 + 212) = 4;
  *(void *)(a1 + 204) = 0;
  *(unsigned char *)(a1 + 232) = 1;
  *(_DWORD *)(a1 + 252) = 4;
  *(void *)(a1 + 244) = 0;
  *(void *)(a1 + 272) = 0;
  *(_DWORD *)(a1 + 280) = 0;
  *(void *)(a1 + 288) = off_1022D4E20;
  *(void *)(a1 + 296) = 0x4039000000000000;
  *(_OWORD *)(a1 + 304) = xmmword_101D233E0;
  *(_DWORD *)(a1 + 320) = 0;
  *(void *)(a1 + 336) = 0;
  *(void *)(a1 + 344) = 0;
  *(void *)(a1 + 328) = 0;
  *(unsigned char *)(a1 + 352) = 1;
  *(void *)(a1 + 368) = 0x4B00000000;
  *(_DWORD *)(a1 + 364) = 0;
  *(void *)(a1 + 680) = 0;
  *(void *)(a1 + 688) = 0;
  *(void *)(a1 + 696) = 0xC08F380000000000;
  *(void *)(a1 + 704) = 0xC08F380000000000;
  *(unsigned char *)(a1 + 712) = 0;
  *(void *)(a1 + 720) = 0;
  *(unsigned char *)(a1 + 728) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 736) = xmmword_101D23400;
  *(void *)(a1 + 752) = 0xC08F380000000000;
  *(unsigned char *)(a1 + 760) = 0;
  *(void *)(a1 + 768) = 0;
  *(unsigned char *)(a1 + 776) = 0;
  *(void *)(a1 + 784) = 0;
  *(void *)(a1 + 792) = 0;
  *(_DWORD *)(a1 + 800) = 60;
  *(void *)(a1 + 1044) = 0x3C00000000;
  *(_DWORD *)(a1 + 112) = 4;
  return result;
}

BOOL sub_100DF1BEC(uint64_t a1, uint64_t a2)
{
  int v4 = (void *)(a1 + 104);
  sub_1006B4700(a1 + 104, (float *)(a2 + 124));
  if (*(_DWORD *)(a2 + 872)) {
    BOOL v5 = 1;
  }
  else {
    BOOL v5 = (*(unsigned char *)(a2 + 816) & 0xFD) == 1;
  }
  int v6 = v5;
  int v25 = v6;
  sub_1000C0D88((unsigned __int16 *)(a1 + 208), &v25);
  *(unsigned char *)(a1 + 192) = 1;
  uint64_t v7 = *(unsigned __int16 *)(a1 + 210);
  if (*(_DWORD *)(a1 + 212) != v7) {
    return 0;
  }
  if (*(_WORD *)(a1 + 210))
  {
    unint64_t v8 = 0;
    int v9 = 0;
    do
      v9 += *(_DWORD *)sub_1000C0E4C((unsigned __int16 *)(a1 + 208), v8++);
    while (v7 != v8);
    int v10 = *(unsigned __int16 *)(a1 + 210);
  }
  else
  {
    int v10 = 0;
    int v9 = 0;
  }
  BOOL v11 = v9 == v10;
  float v24 = 0.0;
  sub_100A6E134(v4, 2, &v24);
  if (*(void *)(a1 + 184))
  {
    uint64_t v12 = a1 + 176;
    uint64_t v13 = *(void *)(a1 + 176);
    if (v13)
    {
      do
      {
        uint64_t v14 = v13;
        uint64_t v13 = *(void *)(v13 + 8);
      }
      while (v13);
    }
    else
    {
      do
      {
        uint64_t v14 = *(void *)(v12 + 16);
        BOOL v5 = *(void *)v14 == v12;
        uint64_t v12 = v14;
      }
      while (v5);
    }
    float v15 = *(float *)(v14 + 28);
    float v16 = *(float *)(*(void *)(a1 + 168) + 28);
  }
  else
  {
    float v15 = 0.0;
    float v16 = 0.0;
  }
  if (v24 > 0.25 && v24 < 3.0 && v16 > 0.0 && (float)(v24 / v16) < 2.5) {
    BOOL v11 = (float)(v15 / v24) < 2.5 || v9 == v10;
  }
  BOOL v23 = v11;
  uint64_t v18 = (unsigned __int16 *)(a1 + 248);
  sub_1000C0D88((unsigned __int16 *)(a1 + 248), &v23);
  *(unsigned char *)(a1 + 232) = 1;
  uint64_t v19 = *(unsigned __int16 *)(a1 + 250);
  if (!*(_WORD *)(a1 + 250)) {
    return 0;
  }
  unint64_t v20 = 0;
  int v21 = 0;
  do
    v21 += *(_DWORD *)sub_1000C0E4C(v18, v20++);
  while (v19 != v20);
  return v21 > 0;
}

unint64_t sub_100DF1DC4(uint64_t a1, double *a2)
{
  int v4 = operator new(0xCuLL);
  int v47 = v4 + 3;
  __int16 v48 = (char *)(v4 + 3);
  *(void *)int v4 = 7;
  v4[2] = 8;
  long long __p = v4;
  uint64_t v5 = sub_1009660E4(a1 + 288, (uint64_t)a2);
  if (!v5)
  {
    __int16 v76 = 0;
    v73[0] = xmmword_101D1E250;
    memset(&v73[1], 0, 96);
    long long v74 = 0u;
    memset(v75, 0, sizeof(v75));
    long long v77 = xmmword_101D1E250;
    uint64_t v78 = 0;
    int v79 = 0;
    uint64_t v80 = 0;
    v81[0] = 0;
    *(void *)((char *)v81 + 5) = 0;
    *(void *)((char *)&v81[1] + 6) = 0;
    char v82 = 0;
    memset(&v81[3], 0, 24);
    long long v83 = xmmword_101D1E250;
    uint64_t v84 = 0;
    int v85 = 0;
    unint64_t v86 = 0xFFEFFFFFFFFFFFFFLL;
    int v97 = 0;
    long long v87 = 0u;
    long long v88 = 0u;
    long long v89 = 0u;
    long long v90 = 0u;
    long long v91 = 0u;
    int v92 = 0;
    long long v93 = 0u;
    long long v94 = 0u;
    long long v95 = 0u;
    memset(v96, 0, sizeof(v96));
    uint64_t v98 = 0;
    uint64_t v99 = 0;
    unint64_t v100 = 0xFFEFFFFFFFFFFFFFLL;
    uint64_t v101 = 0;
    int v102 = 0;
    uint64_t v108 = 0;
    __int16 v109 = 0;
    int v114 = 0;
    int v107 = 0;
    long long v105 = 0u;
    long long v106 = 0u;
    long long v103 = 0u;
    long long v104 = 0u;
    long long v111 = 0u;
    long long v110 = 0u;
    char v112 = 0;
    memset(v113, 0, sizeof(v113));
    unint64_t v115 = 0xFFEFFFFFFFFFFFFFLL;
    long long v134 = 0u;
    long long v133 = 0u;
    long long v132 = 0u;
    long long v131 = 0u;
    long long v130 = 0u;
    long long v129 = 0u;
    long long v128 = 0u;
    long long v127 = 0u;
    long long v126 = 0u;
    long long v125 = 0u;
    long long v124 = 0u;
    long long v123 = 0u;
    long long v122 = 0u;
    long long v121 = 0u;
    long long v120 = 0u;
    long long v119 = 0u;
    long long v118 = 0u;
    long long v117 = 0u;
    long long v116 = 0u;
    uint64_t v135 = 0;
    unint64_t v136 = 0xFFEFFFFFFFFFFFFFLL;
    long long v137 = 0u;
    long long v138 = 0u;
    long long v139 = 0u;
    long long v140 = 0u;
    unint64_t v141 = 0xFFEFFFFFFFFFFFFFLL;
    uint64_t v142 = 0;
    int v143 = 0;
    uint64_t v144 = 0;
    char v145 = 0;
    unint64_t v146 = 0xFFEFFFFFFFFFFFFFLL;
    uint64_t v148 = 0;
    uint64_t v147 = 0;
    uint64_t v149 = 0x80000000800000;
    uint64_t v151 = 0;
    uint64_t v150 = 0;
    long long v152 = xmmword_101D1E260;
    uint64_t v153 = 0x80000000800000;
    long long v154 = 0u;
    long long v155 = 0u;
    uint64_t v156 = 0;
    unint64_t v157 = 0xFFEFFFFFFFFFFFFFLL;
    long long v158 = 0u;
    long long v159 = 0u;
    long long v160 = 0u;
    long long v161 = 0u;
    long long v162 = 0u;
    long long v163 = 0u;
    int v164 = 0;
    unint64_t v165 = 0xFFEFFFFFFFFFFFFFLL;
    __int16 v166 = 0;
    int v167 = 0;
    unint64_t v168 = 0xFFEFFFFFFFFFFFFFLL;
    uint64_t v169 = 7;
    unint64_t v170 = 0xFFEFFFFFFFFFFFFFLL;
    char v171 = 0;
    uint64_t v173 = 0;
    uint64_t v172 = 0;
    uint64_t v174 = 0;
    if (sub_100174478(a2, &__p, (uint64_t)v73))
    {
      uint64_t v9 = *(unsigned __int16 *)(a1 + 44);
      int v10 = (unsigned char *)(a1 + 28);
      float v11 = *((float *)&v147 + 1) * 57.296;
      uint64_t v12 = *(unsigned __int16 *)(a1 + 46);
      unint64_t v13 = *(unsigned int *)(a1 + 48);
      if (v9 + v12 >= v13) {
        uint64_t v14 = *(unsigned int *)(a1 + 48);
      }
      else {
        uint64_t v14 = 0;
      }
      *(float *)(a1 + 44 + 4 * (v9 + v12 - v14) + 8) = v11;
      if (v13 <= v12)
      {
        unint64_t v15 = v9 + 1;
        if (v15 >= v13) {
          __int16 v16 = v13;
        }
        else {
          __int16 v16 = 0;
        }
        *(_WORD *)(a1 + 44) = v15 - v16;
      }
      else
      {
        LOWORD(v12) = v12 + 1;
        *(_WORD *)(a1 + 46) = v12;
        LODWORD(v12) = (unsigned __int16)v12;
      }
      *int v10 = 1;
      if (v13 == v12)
      {
        if (sub_1012C9600((unsigned __int16 *)(a1 + 796), a1 + 688, v11))
        {
          LODWORD(v5) = 12;
LABEL_43:
          unint64_t v8 = 0;
          goto LABEL_44;
        }
        BOOL v42 = 0;
        uint64_t v41 = 0;
        long long v43 = xmmword_101D23400;
        *(void *)BOOL v44 = 0xC08F380000000000;
        v44[8] = 0;
        *(void *)&v44[16] = 0;
        v44[24] = 0;
        if (*v10) {
          sub_1004184F0(a1 + 28);
        }
        float v17 = *(float *)(a1 + 36);
        float v18 = sqrtf(v17);
        BOOL v19 = v17 <= 0.0;
        float v20 = 0.0;
        if (!v19) {
          float v20 = v18;
        }
        float v21 = *(float *)&v150;
        if (*(float *)&v150 >= *(float *)&v147) {
          float v21 = *(float *)&v147;
        }
        *(float *)&uint64_t v41 = v20;
        *((float *)&v41 + 1) = v21 * 57.296;
        long long v22 = *(_OWORD *)(a1 + 704);
        long long v43 = *(_OWORD *)(a1 + 688);
        *(_OWORD *)BOOL v44 = v22;
        *(_OWORD *)&v44[9] = *(_OWORD *)(a1 + 713);
        BOOL v23 = sub_100DF1BEC(a1, (uint64_t)v73);
        BOOL v24 = *((float *)&v41 + 1) < 15.0 && v23;
        BOOL v42 = v24;
        int v45 = DWORD1(v74);
        sub_1001A34E0(a1 + 8, 0, (uint64_t)&v41);
        int v25 = *(unsigned __int8 *)(a1 + 24);
        if (qword_1024191C0 != -1) {
          dispatch_once(&qword_1024191C0, &stru_1022F93D0);
        }
        uint64_t v26 = qword_1024191C8;
        if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_INFO))
        {
          double v27 = -999.0;
          int v28 = *(_DWORD *)(a1 + 276);
          int v29 = *(_DWORD *)(a1 + 280);
          int v30 = *(_DWORD *)(a1 + 788);
          if (*((double *)&v43 + 1) != -999.0 && *(double *)v44 != -999.0) {
            double v27 = *(double *)v44 - *((double *)&v43 + 1);
          }
          double v31 = *(float *)(a1 + 792);
          *(_DWORD *)std::string buf = 67111936;
          *(_DWORD *)&uint8_t buf[4] = v25;
          __int16 v176 = 1024;
          int v177 = v28;
          __int16 v178 = 2048;
          double v179 = *(float *)&v41;
          __int16 v180 = 2048;
          double v181 = *((float *)&v41 + 1);
          __int16 v182 = 2048;
          uint64_t v183 = v43;
          __int16 v184 = 1024;
          int v185 = v44[8];
          __int16 v186 = 2048;
          double v187 = *((float *)&v74 + 3);
          __int16 v188 = 1024;
          BOOL v189 = v42;
          __int16 v190 = 1024;
          int v191 = v29;
          __int16 v192 = 1024;
          int v193 = v30;
          __int16 v194 = 2048;
          double v195 = v27;
          __int16 v196 = 2048;
          double v197 = v31;
          _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_INFO, "StairStop,state,%d,onCnt,%d,longStd,%f,shortStd,%f,exertionDelta,%f,exertionLow,%d,machineFreq,%f,on,%d,offCnt,%d,headCnt,%d,eDiff,%f,maxH,%f", buf, 0x62u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024191C0 != -1) {
            dispatch_once(&qword_1024191C0, &stru_1022F93D0);
          }
          double v35 = -999.0;
          int v36 = *(_DWORD *)(a1 + 276);
          int v37 = *(_DWORD *)(a1 + 280);
          int v38 = *(_DWORD *)(a1 + 788);
          if (*((double *)&v43 + 1) != -999.0 && *(double *)v44 != -999.0) {
            double v35 = *(double *)v44 - *((double *)&v43 + 1);
          }
          double v39 = *(float *)(a1 + 792);
          int v49 = 67111936;
          int v50 = v25;
          __int16 v51 = 1024;
          int v52 = v36;
          __int16 v53 = 2048;
          double v54 = *(float *)&v41;
          __int16 v55 = 2048;
          double v56 = *((float *)&v41 + 1);
          __int16 v57 = 2048;
          uint64_t v58 = v43;
          __int16 v59 = 1024;
          int v60 = v44[8];
          __int16 v61 = 2048;
          double v62 = *((float *)&v74 + 3);
          __int16 v63 = 1024;
          BOOL v64 = v42;
          __int16 v65 = 1024;
          int v66 = v37;
          __int16 v67 = 1024;
          int v68 = v38;
          __int16 v69 = 2048;
          double v70 = v35;
          __int16 v71 = 2048;
          double v72 = v39;
          int v40 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "virtual CLWorkoutPredictor_Type::WorkoutStopDetectionEvent CLStairStepperWorkoutStopModel::update(const CLWorkoutPredictorInputs &)", "%s\n", v40);
          if (v40 != (char *)buf) {
            free(v40);
          }
        }
        if (*(unsigned char *)(a1 + 24) == 4)
        {
          LODWORD(v5) = 1;
          goto LABEL_43;
        }
      }
    }
    else
    {
      sub_100134750(buf, "StairStop");
      sub_10111B644(a2, (uint64_t *)buf, (uint64_t)&__p);
      if (SHIBYTE(v179) < 0) {
        operator delete(*(void **)buf);
      }
    }
    LODWORD(v5) = 0;
    goto LABEL_43;
  }
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022F93D0);
  }
  int v6 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = *(unsigned __int8 *)(a1 + 24);
    *(_DWORD *)std::string buf = 67240192;
    *(_DWORD *)&uint8_t buf[4] = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "HRStop detect in stairclimber model during state,%{public}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022F93D0);
    }
    int v33 = *(unsigned __int8 *)(a1 + 24);
    LODWORD(v73[0]) = 67240192;
    DWORD1(v73[0]) = v33;
    uint64_t v34 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual CLWorkoutPredictor_Type::WorkoutStopDetectionEvent CLStairStepperWorkoutStopModel::update(const CLWorkoutPredictorInputs &)", "%s\n", v34);
    if (v34 != (char *)buf) {
      free(v34);
    }
  }
  unint64_t v8 = v5 & 0xFFFFFFFF00000000;
LABEL_44:
  if (__p)
  {
    int v47 = __p;
    operator delete(__p);
  }
  return v8 | v5;
}

void sub_100DF269C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100DF26F0(uint64_t result, uint64_t a2)
{
  if (*(float *)a2 <= 30.0)
  {
    int v2 = *(_DWORD *)(result + 788) + 1;
    *(_DWORD *)(result + 788) = v2;
  }
  else
  {
    int v2 = 0;
    *(_DWORD *)(result + 788) = 0;
    *(_DWORD *)(result + 276) = 0;
  }
  if (*(unsigned char *)(a2 + 8)) {
    ++*(_DWORD *)(result + 276);
  }
  if (v2 >= 71 && *(int *)(result + 276) >= 24) {
    return sub_1001A34E0(result + 8, 1, (uint64_t)&v3);
  }
  return result;
}

uint64_t sub_100DF2770(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a2 + 24);
  if (v2 == -999.0)
  {
    uint64_t result = 0;
  }
  else
  {
    double v3 = *(double *)(a2 + 32);
    BOOL v4 = v3 == -999.0;
    double v5 = v3 - v2;
    if (v5 < -20.0) {
      BOOL v4 = 1;
    }
    if (v3 == -999.0) {
      BOOL v4 = 0;
    }
    uint64_t result = v5 != -999.0 && v4;
  }
  if (*(float *)(a2 + 4) > 15.0 && !*(unsigned char *)(a2 + 8)) {
    return 1;
  }
  return result;
}

uint64_t sub_100DF27DC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = *(float *)a2 > 30.0 && *(float *)(a2 + 4) > 5.0;
  if (*(double *)(a2 + 16) <= -0.75 || (int v3 = *(unsigned __int8 *)(a2 + 40), *(unsigned char *)(a2 + 40)))
  {
    if (*(double *)(a2 + 48) <= 0.75 || (double v4 = *(double *)(a2 + 32), v5 = -999.0, v4 == -999.0))
    {
      int v3 = 0;
    }
    else
    {
      double v6 = *(double *)(a2 + 24);
      double v7 = v4 - v6;
      if (v6 != -999.0) {
        double v5 = v7;
      }
      int v3 = v5 < -5.0;
    }
  }
  if (((v2 | v3) & 1) != 0 || !*(unsigned char *)(a2 + 8) || *(float *)(a2 + 64) < 0.25) {
    ++*(_DWORD *)(a1 + 280);
  }
  if (v2) {
    ++*(_DWORD *)(a1 + 788);
  }
  int v8 = *(_DWORD *)(a1 + 272);
  BOOL v11 = v8 >= 24
     && ((float v9 = 180.0 / *(float *)(a1 + 792), v9 <= 1.0) ? (v10 = 11.719) : (v10 = v9 * 11.719),
         fminf(v10, 46.875) < (float)*(int *)(a1 + 280))
     && *(_DWORD *)(a1 + 788) > 0;
  double v12 = *(double *)(a2 + 24);
  if (v12 == -999.0) {
    goto LABEL_34;
  }
  BOOL v13 = 0;
  if (v8 >= 24)
  {
    double v14 = *(double *)(a2 + 32);
    if (v14 != -999.0)
    {
      double v15 = v14 - v12;
      if (v15 != -999.0)
      {
        float v16 = v15;
        if (fmaxf((float)(v16 * 1.5) + 60.0, 1.0) < (float)*(int *)(a1 + 788) && v15 <= -20.0)
        {
          BOOL v13 = *(double *)(a2 + 48) > 0.75;
          return v11 | v13;
        }
LABEL_34:
        BOOL v13 = 0;
      }
    }
  }
  return v11 | v13;
}

uint64_t sub_100DF298C(uint64_t result, _OWORD *a2)
{
  uint64_t v3 = result;
  float v4 = *(float *)(result + 784);
  if (*(_WORD *)(result + 46))
  {
    uint64_t result = sub_1004182C4((unsigned __int16 *)(result + 44), *(unsigned __int16 *)(result + 46) - 1);
    float v5 = *(float *)result;
  }
  else
  {
    float v5 = 0.0;
  }
  float v6 = vabds_f32(v4, v5);
  if (*(float *)(v3 + 792) >= v6) {
    float v6 = *(float *)(v3 + 792);
  }
  *(float *)(v3 + 792) = v6;
  ++*(_DWORD *)(v3 + 272);
  if (*(double *)(v3 + 752) == -999.0)
  {
    long long v7 = a2[1];
    long long v8 = a2[2];
    *(_OWORD *)(v3 + 761) = *(_OWORD *)((char *)a2 + 41);
    *(_OWORD *)(v3 + 736) = v7;
    *(_OWORD *)(v3 + 752) = v8;
  }
  return result;
}

uint64_t sub_100DF2A24(uint64_t a1, _OWORD *a2)
{
  sub_100DF298C(a1, a2);
  if (sub_100DF2A94(a1, (uint64_t)a2))
  {
    uint64_t v4 = a1 + 8;
    float v5 = &v9;
    int v6 = 2;
  }
  else
  {
    uint64_t result = sub_100DF27DC(a1, (uint64_t)a2);
    if (!result) {
      return result;
    }
    uint64_t v4 = a1 + 8;
    float v5 = &v8;
    int v6 = 3;
  }
  return sub_1001A34E0(v4, v6, (uint64_t)v5);
}

uint64_t sub_100DF2A94(uint64_t a1, uint64_t a2)
{
  BOOL v2 = *(int *)(a1 + 272) >= 71 && *(unsigned char *)(a1 + 24) != 3;
  double v3 = *(double *)(a2 + 24);
  if (v3 == -999.0)
  {
    uint64_t v5 = 1;
  }
  else
  {
    double v4 = *(double *)(a2 + 32);
    LODWORD(v5) = v4 == -999.0;
    double v6 = v4 - v3;
    if (v6 == -999.0) {
      LODWORD(v5) = 1;
    }
    if (v6 > -20.0) {
      uint64_t v5 = 1;
    }
    else {
      uint64_t v5 = v5;
    }
  }
  if (*(unsigned char *)(a2 + 8) && (*(float *)a2 < 30.0 || *(float *)(a2 + 4) < 15.0)) {
    ++*(_DWORD *)(a1 + 276);
  }
  if (!v2 && *(int *)(a1 + 276) < 30) {
    return 0;
  }
  return v5;
}

uint64_t sub_100DF2B44(uint64_t a1, uint64_t a2)
{
  sub_100DF298C(a1, (_OWORD *)a2);
  uint64_t result = sub_100DF2A94(a1, a2);
  if (result)
  {
    uint64_t v5 = a1 + 8;
    double v6 = &v12;
    int v7 = 2;
    return sub_1001A34E0(v5, v7, (uint64_t)v6);
  }
  int v8 = *(_DWORD *)(a1 + 272);
  if (v8 >= 24)
  {
    double v9 = *(double *)(a2 + 32);
    BOOL v10 = v9 != -999.0;
    if (v9 <= 70.0) {
      BOOL v10 = 0;
    }
    if (v8 >= 0x33 && !v10)
    {
      uint64_t v5 = a1 + 8;
      double v6 = &v11;
      int v7 = 4;
      return sub_1001A34E0(v5, v7, (uint64_t)v6);
    }
  }
  return result;
}

uint64_t sub_100DF2BE0(uint64_t a1)
{
  *(void *)a1 = off_1022F9378;
  *(void *)(a1 + 288) = off_1022D4E20;
  BOOL v2 = *(void **)(a1 + 328);
  if (v2)
  {
    *(void *)(a1 + 336) = v2;
    operator delete(v2);
  }
  *(void *)(a1 + 104) = off_1022C3DA0;
  sub_1000F5BB0(a1 + 168, *(void **)(a1 + 176));
  sub_10041F48C((void *)(a1 + 120));
  return a1;
}

void sub_100DF2C84(uint64_t a1)
{
  *(void *)a1 = off_1022F9378;
  *(void *)(a1 + 288) = off_1022D4E20;
  BOOL v2 = *(void **)(a1 + 328);
  if (v2)
  {
    *(void *)(a1 + 336) = v2;
    operator delete(v2);
  }
  *(void *)(a1 + 104) = off_1022C3DA0;
  sub_1000F5BB0(a1 + 168, *(void **)(a1 + 176));
  sub_10041F48C((void *)(a1 + 120));

  operator delete();
}

void sub_100DF2D48(id a1)
{
  qword_1024191C8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Workout");
}

__n128 sub_100DF2D78(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 280) = 0;
  *(void *)(a1 + 272) = 0;
  *(void *)(a1 + 788) = 0;
  if (*(_WORD *)(a1 + 46)) {
    int v4 = *(_DWORD *)sub_1004182C4((unsigned __int16 *)(a1 + 44), 0);
  }
  else {
    int v4 = 0;
  }
  *(_DWORD *)(a1 + 784) = v4;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 761) = *(_OWORD *)(a2 + 41);
  *(__n128 *)(a1 + 736) = result;
  *(_OWORD *)(a1 + 752) = v6;
  return result;
}

uint64_t sub_100DF2DE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = off_1022F9400;
  uint64_t v5 = (void *)(a1 + 8);
  sub_100134750(&__p, "Workout");
  sub_100AD7878(v5);
  if (v14 < 0) {
    operator delete(__p);
  }
  *(void *)(a1 + 48) = a3;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0x3FE0000000000000;
  *(CFAbsoluteTime *)(a1 + 80) = CFAbsoluteTimeGetCurrent();
  *(_OWORD *)(a1 + 88) = xmmword_101D904B0;
  *(void *)(a1 + 104) = 0x4059800000000000;
  *(_WORD *)(a1 + 112) = 0;
  sub_100134750(&v11, "Workout");
  sub_1007636B8((void *)(a1 + 440));
  if (v12 < 0) {
    operator delete(v11);
  }
  sub_100134750(v9, "Workout");
  sub_10140C9F0((char *)(a1 + 512), (long long *)v9);
  if (v10 < 0) {
    operator delete(v9[0]);
  }
  sub_100134750(&v7, "Workout");
  sub_1010FFAA4((void *)(a1 + 616));
  if (v8 < 0) {
    operator delete(v7);
  }
  return a1;
}

void sub_100DF2F38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,char a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_10054EAC4(v35);
  sub_100DF2FD0(v34);
  if (*(char *)(v32 + 31) < 0) {
    operator delete(*v33);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100DF2FD0(uint64_t a1)
{
  BOOL v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(void *)(a1 + 32) = v2;
    operator delete(v2);
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_100DF3018(uint64_t a1, double a2)
{
  if (qword_1024192A0 != -1) {
    dispatch_once(&qword_1024192A0, &stru_1022F9488);
  }
  int v4 = qword_1024192A8;
  if (os_log_type_enabled((os_log_t)qword_1024192A8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::string buf = 134217984;
    double v7 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "MaxAllowedSecondsForIndoorOutdoorDetector was forced to %f seconds", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024192A0 != -1) {
      dispatch_once(&qword_1024192A0, &stru_1022F9488);
    }
    uint64_t v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLIndoorOutdoorDetectorWatch::overrideMaxAllowedSecondsForIndoorOutdoorDetector(const CFTimeInterval)", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
  *(double *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0xBFF0000000000000;
}

uint64_t sub_100DF31DC(uint64_t result, uint64_t a2)
{
  if ((unint64_t)(a2 - 1) <= 1)
  {
    double v3 = (void *)result;
    if (qword_1024192A0 != -1) {
      dispatch_once(&qword_1024192A0, &stru_1022F9488);
    }
    int v4 = qword_1024192A8;
    if (os_log_type_enabled((os_log_t)qword_1024192A8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 134217984;
      uint64_t v7 = a2;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Location type was forced to %ld", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024192A0 != -1) {
        dispatch_once(&qword_1024192A0, &stru_1022F9488);
      }
      uint64_t v5 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLIndoorOutdoorDetectorWatch::forceLocationType(CMWorkoutLocationType)", "%s\n", v5);
      if (v5 != (char *)buf) {
        free(v5);
      }
    }
    void v3[7] = a2;
    v3[8] = 0;
    v3[9] = 0x3FE0000000000000;
    return (*(uint64_t (**)(void *, uint64_t, void *))(*v3 + 72))(v3, 1, v3 + 7);
  }
  return result;
}

uint64_t sub_100DF33D4(uint64_t a1)
{
  uint64_t result = sub_1010FFCBC(a1 + 616);
  *(void *)(a1 + 88) = 0xFFEFFFFFFFFFFFFFLL;
  return result;
}

uint64_t sub_100DF3404(uint64_t a1, uint64_t a2)
{
  double Current = CFAbsoluteTimeGetCurrent();

  return sub_10140CA60(a1 + 512, a2, Current);
}

void sub_100DF3444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v5[0] = a2;
  v5[1] = a3;
  double Current = CFAbsoluteTimeGetCurrent();
  sub_100080F6C(a1 + 440, (uint64_t)v5, Current);
}

uint64_t sub_100DF3480(uint64_t a1, unsigned __int8 *a2)
{
  if (qword_1024192A0 != -1) {
    dispatch_once(&qword_1024192A0, &stru_1022F9488);
  }
  int v4 = qword_1024192A8;
  if (os_log_type_enabled((os_log_t)qword_1024192A8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 56);
    int v6 = *a2;
    uint64_t v7 = *((void *)a2 + 1);
    uint64_t v8 = *((void *)a2 + 2);
    *(_DWORD *)std::string buf = 134218752;
    uint64_t v14 = v5;
    __int16 v15 = 1026;
    int v16 = v6;
    __int16 v17 = 2050;
    uint64_t v18 = v7;
    __int16 v19 = 2050;
    uint64_t v20 = v8;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "IndoorOutdoor,starting session,currentState,%ld,disableDistance,%{public}d,forceLocation,%{public}ld,overrideSeconds,%{public}f", buf, 0x26u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024192A0 != -1) {
      dispatch_once(&qword_1024192A0, &stru_1022F9488);
    }
    char v12 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLIndoorOutdoorDetectorWatch::startSession(const CLIndoorOutdoorProtocol::IndoorOutdoorSettings &)", "%s\n", v12);
    if (v12 != (char *)buf) {
      free(v12);
    }
  }
  *(unsigned char *)(a1 + 113) = 1;
  *(CFAbsoluteTime *)(a1 + 80) = CFAbsoluteTimeGetCurrent();
  if (*a2) {
    *(void *)(a1 + 104) = 0xBFF0000000000000;
  }
  double v9 = *((double *)a2 + 2);
  if (v9 != 2.22507386e-308) {
    sub_100DF3018(a1, v9);
  }
  uint64_t v10 = *((void *)a2 + 1);
  if (v10 && v10 != 3) {
    sub_100DF31DC(a1, v10);
  }
  uint64_t result = *(void *)(a1 + 48);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 16))(result, 1);
  }
  return result;
}

uint64_t sub_100DF370C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 113) && !*(unsigned char *)(a1 + 112))
  {
    if (qword_1024192A0 != -1) {
      dispatch_once(&qword_1024192A0, &stru_1022F9488);
    }
    BOOL v2 = qword_1024192A8;
    if (os_log_type_enabled((os_log_t)qword_1024192A8, OS_LOG_TYPE_DEFAULT))
    {
      CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
      uint64_t v4 = *(void *)(a1 + 56);
      uint64_t v5 = *(void *)(a1 + 64);
      uint64_t v6 = *(void *)(a1 + 72);
      *(_DWORD *)std::string buf = 134218752;
      CFAbsoluteTime v10 = Current;
      __int16 v11 = 2048;
      uint64_t v12 = v4;
      __int16 v13 = 2048;
      uint64_t v14 = v5;
      __int16 v15 = 2048;
      uint64_t v16 = v6;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "IndoorOutdoor,last state,time,%f,new location type,%ld,confidence,%ld,probability,%f", buf, 0x2Au);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024192A0 != -1) {
        dispatch_once(&qword_1024192A0, &stru_1022F9488);
      }
      CFAbsoluteTimeGetCurrent();
      uint64_t v8 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLIndoorOutdoorDetectorWatch::stopSession()", "%s\n", v8);
      if (v8 != (char *)buf) {
        free(v8);
      }
    }
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)a1 + 72))(a1, 0, a1 + 56);
  }
  *(_OWORD *)(a1 + 96) = xmmword_101D904C0;
  *(_WORD *)(a1 + 112) = 0;
  uint64_t result = *(void *)(a1 + 48);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(*(void *)result + 16))(result, 0);
  }
  return result;
}

BOOL sub_100DF398C(uint64_t a1)
{
  return vabdd_f64(CFAbsoluteTimeGetCurrent(), *(double *)(a1 + 80)) > *(double *)(a1 + 96);
}

BOOL sub_100DF39C4(uint64_t a1)
{
  return sub_1000BC960(a1 + 512) > *(double *)(a1 + 104);
}

BOOL sub_100DF39F8(uint64_t a1)
{
  return *(unsigned char *)(a1 + 113)
      && vabdd_f64(CFAbsoluteTimeGetCurrent(), *(double *)(a1 + 80)) > *(double *)(a1 + 96)
      && sub_1000BC960(a1 + 512) > *(double *)(a1 + 104);
}

uint64_t sub_100DF3A54(float a1)
{
  if (a1 < 0.5) {
    return 1;
  }
  else {
    return 2;
  }
}

uint64_t sub_100DF3A68(uint64_t a1, uint64_t a2, long long *a3)
{
  sub_1010FFCC0();
  long long v8 = *a3;
  uint64_t v9 = *((void *)a3 + 2);
  uint64_t v10 = v8;
  int v11 = v6;
  uint64_t result = *(void *)(a1 + 48);
  if (result) {
    return (*(uint64_t (**)(uint64_t, long long *, uint64_t))(*(void *)result + 24))(result, &v8, a2);
  }
  return result;
}

void sub_100DF3AF8(id a1)
{
  qword_1024192A8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "IndoorOutdoor");
}

void sub_100DF3C98(id a1)
{
  qword_1024817F8 = (uint64_t)[objc_alloc((Class)CLDispatchSilo) initWithIdentifier:@"CLBatchedAccelerometerServiceSilo"];
}

void sub_100DF3DD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DF4228(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
}

void sub_100DF46A8(id a1)
{
  qword_102419318 = (uint64_t)os_log_create("com.apple.locationd.Motion", "BatchedSensor");
}

void sub_100DF46DC()
{
}

void *sub_100DF46F0(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = off_1022F94F8;
  result[1] = v3;
  return result;
}

uint64_t sub_100DF4738(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022F94F8;
  a2[1] = v2;
  return result;
}

id sub_100DF4764(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  return _[*(id *)(a1 + 8) onBatchedData:a2 N:*a3];
}

uint64_t sub_100DF4774(uint64_t a1, uint64_t a2)
{
  if (sub_1000E9B14(a2, (uint64_t)&off_1022F9568)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_100DF47B4()
{
  return &off_1022F9568;
}

void *sub_100DF47C0(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_100DF4844()
{
  sub_100134750(&xmmword_1024817B8, "Acc800Fp");
  dword_1024817D0 = 800;
  __cxa_atexit((void (*)(void *))sub_10058C198, &xmmword_1024817B8, (void *)&_mh_execute_header);
  sub_100134750(qword_1024817D8, "DmFp");
  dword_1024817F0 = 200;

  return __cxa_atexit((void (*)(void *))sub_10058C198, qword_1024817D8, (void *)&_mh_execute_header);
}

void sub_100DF48EC(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = (uint64_t *)a1;
  sub_1000DEC4C((_DWORD *)a3, a1);
  if (!*((unsigned char *)v4 + 6376) || *((int *)v4 + 1600) <= 0) {
    return;
  }
  if (!*a2)
  {
    uint64_t v4 = &qword_102419000;
    if (qword_1024193B0 == -1)
    {
LABEL_5:
      int v6 = qword_1024193B8;
      if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "WifiTimer, set, power, now", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (v4[118] != -1) {
          dispatch_once(&qword_1024193B0, &stru_1022F9578);
        }
        uint64_t v7 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::Wifi::Power &) const", "%s\n", v7);
        if (v7 != (char *)buf) {
          free(v7);
        }
      }
      if (!*(unsigned char *)(a3 + 1952)) {
        *(unsigned char *)(a3 + 1952) = 1;
      }
      *(void *)(a3 + 1944) = 0x3FD3333333333333;
      return;
    }
LABEL_16:
    dispatch_once(&qword_1024193B0, &stru_1022F9578);
    goto LABEL_5;
  }
  if (*a2 != 1)
  {
    sub_101A8F850();
    abort_report_np();
    __break(1u);
    goto LABEL_16;
  }
  if (!*(unsigned char *)(a3 + 1961)) {
    *(unsigned char *)(a3 + 1961) = 1;
  }
}

void sub_100DF4B1C(_Unwind_Exception *a1)
{
  sub_10050BAA0(v1);
  _Unwind_Resume(a1);
}

void sub_100DF4B3C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000DEC4C((_DWORD *)a2, a1);
  if (*(unsigned char *)(a1 + 6376)
    && (*(int *)(a1 + 6400) > 0 || *(int *)(a1 + 6404) > 0 || *(int *)(a1 + 6408) >= 1)
    && *(unsigned char *)(a1 + 808))
  {
    double v4 = *(double *)(a1 + 6160);
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022F9578);
    }
    uint64_t v5 = qword_1024193B8;
    if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::string buf = 67240192;
      int v8 = (int)v4;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "WifiTimer, set, scan, %{public}d", buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193B0 != -1) {
        dispatch_once(&qword_1024193B0, &stru_1022F9578);
      }
      int v6 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::Wifi::Scan &) const", "%s\n", v6);
      if (v6 != (char *)buf) {
        free(v6);
      }
    }
    if (!*(unsigned char *)(a2 + 1952)) {
      *(unsigned char *)(a2 + 1952) = 1;
    }
    *(double *)(a2 + 1944) = v4;
  }
}

void sub_100DF4D5C(_Unwind_Exception *a1)
{
  sub_10050BAA0(v1);
  _Unwind_Resume(a1);
}

void sub_100DF4D74(uint64_t a1@<X0>, unsigned char *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1000DEC4C((_DWORD *)a3, a1);
  if (*(unsigned char *)(a1 + 6376))
  {
    int v6 = (unsigned int *)(a1 + 816);
    if (sub_100054BBC(v6) && ((v7 = sub_1006D30F0(v6), *a2 == 10) ? (BOOL v8 = v7) : (BOOL v8 = 0), v8))
    {
      if (qword_1024193B0 != -1) {
        dispatch_once(&qword_1024193B0, &stru_1022F9578);
      }
      uint64_t v9 = qword_1024193B8;
      if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::string buf = 67240192;
        LODWORD(v16) = 1;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "WifiTimer, set, scanbusy, %{public}d", buf, 8u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193B0 != -1) {
          dispatch_once(&qword_1024193B0, &stru_1022F9578);
        }
        uint64_t v14 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::Wifi::ScanBusy &) const", "%s\n", v14);
        if (v14 != (char *)buf) {
          free(v14);
        }
      }
      if (!*(unsigned char *)(a3 + 1952)) {
        *(unsigned char *)(a3 + 1952) = 1;
      }
      *(void *)(a3 + 1944) = 0x3FF0000000000000;
      if (qword_1024193B0 != -1) {
        dispatch_once(&qword_1024193B0, &stru_1022F9578);
      }
      uint64_t v10 = qword_1024193B8;
      if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
      {
        int v11 = sub_100D54EB0((char)*a2);
        int v12 = sub_1006D40B0(v6);
        *(_DWORD *)std::string buf = 136446722;
        uint64_t v16 = v11;
        __int16 v17 = 2048;
        uint64_t v18 = 1;
        __int16 v19 = 1026;
        int v20 = v12;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "@EmerWarn, ScanErrorBusy, %{public}s, retry in, %{pupblic}lld, reqtype, %{public}d", buf, 0x1Cu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193B0 != -1) {
          dispatch_once(&qword_1024193B0, &stru_1022F9578);
        }
        sub_100D54EB0((char)*a2);
        sub_1006D40B0(v6);
        __int16 v13 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::Wifi::ScanBusy &) const", "%s\n", v13);
        if (v13 != (char *)buf) {
          free(v13);
        }
      }
    }
    else
    {
      if (!*(unsigned char *)(a3 + 1952)) {
        *(unsigned char *)(a3 + 1952) = 1;
      }
      *(void *)(a3 + 1944) = 0x4018000000000000;
    }
  }
}

void sub_100DF5150(_Unwind_Exception *a1)
{
  sub_10050BAA0(v1);
  _Unwind_Resume(a1);
}

void sub_100DF5174(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000DEC4C((_DWORD *)a2, a1);
  if (*(unsigned char *)(a1 + 6376) && *(int *)(a1 + 6400) >= 1)
  {
    if (sub_1006D30F0((_DWORD *)(a1 + 816))) {
      double v4 = 2.0;
    }
    else {
      double v4 = 6.0;
    }
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022F9578);
    }
    uint64_t v5 = qword_1024193B8;
    if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::string buf = 67240192;
      int v8 = (int)v4;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "WifiTimer, set, scanerror, %{public}d", buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193B0 != -1) {
        dispatch_once(&qword_1024193B0, &stru_1022F9578);
      }
      int v6 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::Wifi::ScanError &) const", "%s\n", v6);
      if (v6 != (char *)buf) {
        free(v6);
      }
    }
    if (!*(unsigned char *)(a2 + 1952)) {
      *(unsigned char *)(a2 + 1952) = 1;
    }
    *(double *)(a2 + 1944) = v4;
  }
}

void sub_100DF5384(_Unwind_Exception *a1)
{
  sub_10050BAA0(v1);
  _Unwind_Resume(a1);
}

void sub_100DF539C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double v4 = (unsigned char *)(a1 + 6172);
  sub_1000DEC4C((_DWORD *)a2, a1);
  if (v4[204] && *(int *)(a1 + 6400) >= 1 && *(unsigned char *)(a1 + 810))
  {
    if (*v4) {
      double v5 = 6.0;
    }
    else {
      double v5 = 15.0;
    }
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022F9578);
    }
    int v6 = qword_1024193B8;
    if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::string buf = 67240192;
      int v9 = (int)v5;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "WifiTimer, nextscan, %{public}d, timer", buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193B0 != -1) {
        dispatch_once(&qword_1024193B0, &stru_1022F9578);
      }
      BOOL v7 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::Client::UpdateTimer &) const", "%s\n", v7);
      if (v7 != (char *)buf) {
        free(v7);
      }
    }
    if (!*(unsigned char *)(a2 + 1952)) {
      *(unsigned char *)(a2 + 1952) = 1;
    }
    *(double *)(a2 + 1944) = v5;
  }
}

void sub_100DF55B4(_Unwind_Exception *a1)
{
  sub_10050BAA0(v1);
  _Unwind_Resume(a1);
}

void sub_100DF55CC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1000DEC4C((_DWORD *)a3, a1);
  if (*(unsigned char *)(a1 + 6376))
  {
    if (*(int *)(a1 + 6400) >= 1 && *(unsigned char *)(a2 + 88) == 0)
    {
      if (qword_1024193B0 != -1) {
        dispatch_once(&qword_1024193B0, &stru_1022F9578);
      }
      BOOL v7 = qword_1024193B8;
      if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "WifiTimer, set, linkstatus, now", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193B0 != -1) {
          dispatch_once(&qword_1024193B0, &stru_1022F9578);
        }
        int v8 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::Wifi::LinkStatus &) const", "%s\n", v8);
        if (v8 != (char *)buf) {
          free(v8);
        }
      }
      if (!*(unsigned char *)(a3 + 1952)) {
        *(unsigned char *)(a3 + 1952) = 1;
      }
      *(void *)(a3 + 1944) = 0x3FD3333333333333;
    }
  }
}

void sub_100DF57B0(_Unwind_Exception *a1)
{
  sub_10050BAA0(v1);
  _Unwind_Resume(a1);
}

_DWORD *sub_100DF57C8@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = sub_1000DEC4C(a2, a1);
  if (*(unsigned char *)(a1 + 6376) && *(int *)(a1 + 6400) >= 1)
  {
    if (!*((unsigned char *)result + 1952)) {
      *((unsigned char *)result + 1952) = 1;
    }
    *((void *)result + 243) = 0x3FD3333333333333;
  }
  return result;
}

void sub_100DF5828(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000DEC4C((_DWORD *)a2, a1);
  if (*(unsigned char *)(a1 + 1656))
  {
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022F9578);
    }
    double v4 = qword_1024193B8;
    if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = (int)*(double *)(a1 + 6352);
      *(_DWORD *)std::string buf = 67240192;
      int v9 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "@WsbTimer, buffer, %{public}d", buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193B0 != -1) {
        dispatch_once(&qword_1024193B0, &stru_1022F9578);
      }
      BOOL v7 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::Wifi::Wsb &) const", "%s\n", v7);
      if (v7 != (char *)buf) {
        free(v7);
      }
    }
    uint64_t v6 = *(void *)(a1 + 6352);
    if (!*(unsigned char *)(a2 + 1976)) {
      *(unsigned char *)(a2 + 1976) = 1;
    }
    *(void *)(a2 + 1968) = v6;
  }
}

void sub_100DF5A14(_Unwind_Exception *a1)
{
  sub_10050BAA0(v1);
  _Unwind_Resume(a1);
}

void sub_100DF5A2C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000DEC4C((_DWORD *)a2, a1);
  if (*(int *)(a1 + 6400) >= 1)
  {
    if (*(double *)(a1 + 6160) >= *(double *)(a1 + 6392) - *(double *)(a1 + 6384))
    {
      if (qword_1024193B0 != -1) {
        dispatch_once(&qword_1024193B0, &stru_1022F9578);
      }
      BOOL v7 = qword_1024193B8;
      if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "@WifiTimer, skip, motion", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193B0 != -1) {
          dispatch_once(&qword_1024193B0, &stru_1022F9578);
        }
        int v9 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::System::CoarseMotion &) const", "%s\n", v9);
        if (v9 != (char *)buf) {
          free(v9);
        }
      }
    }
    else
    {
      if (qword_1024193B0 != -1) {
        dispatch_once(&qword_1024193B0, &stru_1022F9578);
      }
      double v4 = qword_1024193B8;
      if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_INFO))
      {
        int v5 = (int)*(double *)(a1 + 6160);
        *(_DWORD *)std::string buf = 67240192;
        int v11 = v5;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "@WifiTimer, set, motion, %{public}d", buf, 8u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193B0 != -1) {
          dispatch_once(&qword_1024193B0, &stru_1022F9578);
        }
        int v8 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::System::CoarseMotion &) const", "%s\n", v8);
        if (v8 != (char *)buf) {
          free(v8);
        }
      }
      uint64_t v6 = *(void *)(a1 + 6160);
      if (!*(unsigned char *)(a2 + 1952)) {
        *(unsigned char *)(a2 + 1952) = 1;
      }
      *(void *)(a2 + 1944) = v6;
    }
  }
}

void sub_100DF5D60(_Unwind_Exception *a1)
{
  sub_10050BAA0(v1);
  _Unwind_Resume(a1);
}

void sub_100DF5D7C(uint64_t a1@<X0>, int *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1000DEC4C((_DWORD *)a3, a1);
  if (*(unsigned char *)(a1 + 6376) && *(int *)(a1 + 6412) > 0)
  {
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022F9578);
    }
    uint64_t v6 = qword_1024193B8;
    if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
    {
      int v7 = *a2;
      int v8 = *(_DWORD *)(a1 + 6344);
      int v9 = (int)*(double *)(a1 + 6352);
      int v10 = *(unsigned __int8 *)(a1 + 1656);
      *(_DWORD *)std::string buf = 67240960;
      int v17 = v7;
      __int16 v18 = 1026;
      int v19 = v8;
      __int16 v20 = 1026;
      int v21 = v9;
      __int16 v22 = 1026;
      int v23 = v10;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "WsbAls, resulttag, %{public}d, wsbtag, %{public}d, delay, %{public}d, set, %{public}d", buf, 0x1Au);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193B0 != -1) {
        dispatch_once(&qword_1024193B0, &stru_1022F9578);
      }
      uint64_t v14 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::Network::AlsRequestResult &) const", "%s\n", v14);
      if (v14 != (char *)buf) {
        free(v14);
      }
    }
    if (*a2 == -1 && *(unsigned char *)(a1 + 1656))
    {
      if (qword_1024193B0 != -1) {
        dispatch_once(&qword_1024193B0, &stru_1022F9578);
      }
      int v11 = qword_1024193B8;
      if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
      {
        int v12 = (int)*(double *)(a1 + 6352);
        *(_DWORD *)std::string buf = 67240192;
        int v17 = v12;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "@WsbTimer, alsresult, %{public}d", buf, 8u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193B0 != -1) {
          dispatch_once(&qword_1024193B0, &stru_1022F9578);
        }
        __int16 v15 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::Network::AlsRequestResult &) const", "%s\n", v15);
        if (v15 != (char *)buf) {
          free(v15);
        }
      }
      uint64_t v13 = *(void *)(a1 + 6352);
      if (!*(unsigned char *)(a3 + 1976)) {
        *(unsigned char *)(a3 + 1976) = 1;
      }
      *(void *)(a3 + 1968) = v13;
    }
  }
}

void sub_100DF6138(_Unwind_Exception *a1)
{
  sub_10050BAA0(v1);
  _Unwind_Resume(a1);
}

void sub_100DF6154(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1 + 5020;
  sub_1000DEC4C((_DWORD *)a2, a1);
  if (*(unsigned char *)(v4 + 1356)
    && (*(int *)(a1 + 6400) > 0 || *(int *)(a1 + 6404) >= 1)
    && *(double *)(a1 + 6384) - *(double *)v4 >= 6.0)
  {
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022F9578);
    }
    int v5 = qword_1024193B8;
    if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "WifiTimer, set, alsreply, now", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193B0 != -1) {
        dispatch_once(&qword_1024193B0, &stru_1022F9578);
      }
      uint64_t v6 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::Network::AlsFinished &) const", "%s\n", v6);
      if (v6 != (char *)buf) {
        free(v6);
      }
    }
    if (!*(unsigned char *)(a2 + 1952)) {
      *(unsigned char *)(a2 + 1952) = 1;
    }
    *(void *)(a2 + 1944) = 0;
  }
}

void sub_100DF634C(_Unwind_Exception *a1)
{
  sub_10050BAA0(v1);
  _Unwind_Resume(a1);
}

void sub_100DF6364(uint64_t a1@<X0>, int *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1000DEC4C((_DWORD *)a3, a1);
  if (*(int *)(a1 + 6412) >= 1 && *(unsigned char *)(a1 + 1656))
  {
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022F9578);
    }
    uint64_t v6 = qword_1024193B8;
    if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
    {
      int v7 = (int)*(double *)(a1 + 6352);
      *(_DWORD *)std::string buf = 67240192;
      int v16 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "@WsbTimer, reach, %{public}d", buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193B0 != -1) {
        dispatch_once(&qword_1024193B0, &stru_1022F9578);
      }
      uint64_t v14 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::System::Reachability &) const", "%s\n", v14);
      if (v14 != (char *)buf) {
        free(v14);
      }
    }
    uint64_t v8 = *(void *)(a1 + 6352);
    if (!*(unsigned char *)(a3 + 1976)) {
      *(unsigned char *)(a3 + 1976) = 1;
    }
    *(void *)(a3 + 1968) = v8;
  }
  if (*(int *)(a1 + 6400) > 0 || *(int *)(a1 + 6404) >= 1)
  {
    int v10 = *a2;
    int v9 = a2[1];
    BOOL v11 = v9 == 1 && v10 == 2;
    if (v11 || v9 == 2 && v10 == 1 || !v9)
    {
      if (!*(unsigned char *)(a3 + 1952)) {
        *(unsigned char *)(a3 + 1952) = 1;
      }
      *(void *)(a3 + 1944) = 0;
      if (qword_1024193B0 != -1) {
        dispatch_once(&qword_1024193B0, &stru_1022F9578);
      }
      int v12 = qword_1024193B8;
      if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "WifiTimer, set, reach, now", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193B0 != -1) {
          dispatch_once(&qword_1024193B0, &stru_1022F9578);
        }
        uint64_t v13 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::System::Reachability &) const", "%s\n", v13);
        if (v13 != (char *)buf) {
          free(v13);
        }
      }
    }
  }
}

void sub_100DF66E8(_Unwind_Exception *a1)
{
  sub_10050BAA0(v1);
  _Unwind_Resume(a1);
}

void sub_100DF6708(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000DEC4C((_DWORD *)a2, a1);
  if (*(int *)(a1 + 6400) > 0)
  {
    if (!*(unsigned char *)(a2 + 1952)) {
      *(unsigned char *)(a2 + 1952) = 1;
    }
    *(void *)(a2 + 1944) = 0x3FD3333333333333;
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022F9578);
    }
    uint64_t v4 = qword_1024193B8;
    if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "WifiTimer, set, wake, now", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193B0 != -1) {
        dispatch_once(&qword_1024193B0, &stru_1022F9578);
      }
      int v5 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::System::DeviceWake &) const", "%s\n", v5);
      if (v5 != (char *)buf) {
        free(v5);
      }
    }
  }
}

void sub_100DF68D4(_Unwind_Exception *a1)
{
  sub_10050BAA0(v1);
  _Unwind_Resume(a1);
}

void sub_100DF68EC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000DEC4C((_DWORD *)a2, a1);
  if (*(unsigned char *)(a1 + 6376))
  {
    double v4 = *(double *)(a1 + 6392) - *(double *)(a1 + 6384);
    double v5 = *(double *)(a1 + 6160);
    if (*(unsigned char *)(a1 + 809)) {
      BOOL v6 = v5 < v4;
    }
    else {
      BOOL v6 = 0;
    }
    if (v6)
    {
      if (!*(unsigned char *)(a2 + 1952)) {
        *(unsigned char *)(a2 + 1952) = 1;
      }
      *(double *)(a2 + 1944) = v5;
      if (qword_1024193B0 != -1) {
        dispatch_once(&qword_1024193B0, &stru_1022F9578);
      }
      int v9 = qword_1024193B8;
      if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
      {
        int v10 = (int)*(double *)(a1 + 6160);
        *(_DWORD *)std::string buf = 67240192;
        int v14 = v10;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "@WifiTimer, set, locreq, %{public}d", buf, 8u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193B0 == -1) {
          goto LABEL_33;
        }
        goto LABEL_35;
      }
    }
    else if (*(unsigned char *)(a1 + 1657) && !*(_DWORD *)(a1 + 1564))
    {
      if (!*(unsigned char *)(a2 + 1952)) {
        *(unsigned char *)(a2 + 1952) = 1;
      }
      *(void *)(a2 + 1944) = 0x4000000000000000;
      if (qword_1024193B0 != -1) {
        dispatch_once(&qword_1024193B0, &stru_1022F9578);
      }
      BOOL v11 = qword_1024193B8;
      if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::string buf = 67240192;
        int v14 = 2;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "@WifiTimer, set, suppressed, %{public}d", buf, 8u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193B0 == -1)
        {
LABEL_33:
          int v12 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::Client::LocationRequest &) const", "%s\n", v12);
          if (v12 != (char *)buf) {
            free(v12);
          }
          return;
        }
LABEL_35:
        dispatch_once(&qword_1024193B0, &stru_1022F9578);
        goto LABEL_33;
      }
    }
    else
    {
      if (qword_1024193B0 != -1) {
        dispatch_once(&qword_1024193B0, &stru_1022F9578);
      }
      int v7 = qword_1024193B8;
      if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
      {
        int v8 = *(unsigned __int8 *)(a1 + 809);
        *(_DWORD *)std::string buf = 67240448;
        int v14 = v5 < v4;
        __int16 v15 = 1026;
        int v16 = v8;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "@WifiTimer, skip, locreq, %{public}d, %{public}d", buf, 0xEu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193B0 == -1) {
          goto LABEL_33;
        }
        goto LABEL_35;
      }
    }
  }
}

void sub_100DF6DD0(_Unwind_Exception *a1)
{
  sub_10050BAA0(v1);
  _Unwind_Resume(a1);
}

void sub_100DF6DF0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000DEC4C((_DWORD *)a2, a1);
  if (qword_1024193B0 != -1) {
    dispatch_once(&qword_1024193B0, &stru_1022F9578);
  }
  uint64_t v3 = qword_1024193B8;
  if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "@WsbTimer, fired, 0", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022F9578);
    }
    double v4 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "Output CL::Wifi1::Policies::ScheduleClientUpdateTimer::HandleEvent::operator()(const Events::Client::WsbTimer &) const", "%s\n", v4);
    if (v4 != (char *)buf) {
      free(v4);
    }
  }
  if (!*(unsigned char *)(a2 + 1985)) {
    *(unsigned char *)(a2 + 1985) = 1;
  }
}

void sub_100DF6FA0(_Unwind_Exception *a1)
{
  sub_10050BAA0(v1);
  _Unwind_Resume(a1);
}

void sub_100DF6FB8(id a1)
{
  qword_1024193B8 = (uint64_t)os_log_create("com.apple.locationd.Position", "WifiPosition");
}

void sub_100DF7088()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_102419688, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_102419688))
  {
    qword_102419670 = 0;
    qword_102419678 = 0;
    qword_102419680 = 0;
    id v0 = operator new(6uLL);
    qword_102419678 = (uint64_t)(v0 + 3);
    qword_102419680 = (uint64_t)(v0 + 3);
    *(_DWORD *)id v0 = 151521030;
    v0[2] = 3082;
    qword_102419670 = (uint64_t)v0;
    __cxa_atexit((void (*)(void *))sub_1001C6FD8, &qword_102419670, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_102419688);
  }
}

void sub_100DF7140(_Unwind_Exception *a1)
{
}

void sub_100DF7158()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1024196A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1024196A8))
  {
    qword_102419690 = 0;
    qword_102419698 = 0;
    qword_1024196A0 = 0;
    id v0 = operator new(2uLL);
    qword_102419690 = (uint64_t)v0;
    _WORD *v0 = 256;
    qword_102419698 = (uint64_t)(v0 + 1);
    qword_1024196A0 = (uint64_t)(v0 + 1);
    __cxa_atexit((void (*)(void *))sub_1001C700C, &qword_102419690, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1024196A8);
  }
}

void sub_100DF7200(_Unwind_Exception *a1)
{
}

uint64_t sub_100DF7218(uint64_t a1)
{
  uint64_t v2 = (void *)sub_1014F0400(a1);
  void *v2 = off_1022F95A8;
  uint64_t v3 = (float *)v2 + 5;
  v2[2] = 0x41C000003F800000;
  double v4 = (float *)(v2 + 2);
  uint64_t v5 = sub_1000D3E78();
  sub_10006B564(v5, &v8);
  sub_1004D11B0(v8, "RunModelMetsScale", v4);
  if (v9) {
    sub_1000DB0A0(v9);
  }
  uint64_t v6 = sub_1000D3E78();
  sub_10006B564(v6, &v8);
  sub_1004D11B0(v8, "RunVMThreshold", v3);
  if (v9) {
    sub_1000DB0A0(v9);
  }
  return a1;
}

void sub_100DF72E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1000DB0A0(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DF730C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
}

void sub_100DF7320(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>, float a4@<S0>, float a5@<S1>)
{
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 3;
  *(void *)(a3 + 32) = 3;
  double v8 = *(double *)(a1 + 408);
  double v10 = *(double *)(a1 + 128) - *(double *)(a1 + 120);
  double v11 = 0.0;
  if (v10 > 0.0) {
    double v11 = v8 * 2.23693991 / v10;
  }
  float v9 = *(double *)(a1 + 840);
  float v12 = v9 * 2.2369;
  float v13 = *(double *)(a1 + 448);
  float v48 = v13;
  if (*(unsigned char *)(a1 + 352))
  {
    if (v13 > 2.2369 || v13 <= 0.14) {
      float v15 = 0.0;
    }
    else {
      float v15 = 2.2369 / v13;
    }
  }
  else
  {
    float v15 = v11;
  }
  float v16 = *(float *)(a1 + 296);
  float v17 = (float)((float)(v15 * 1.5395) + 0.34316) * a4;
  float v18 = 1.1;
  if (*(unsigned char *)(a1 + 528) != 1) {
    float v18 = 1.0;
  }
  float v19 = v17 * v18;
  float v20 = 20.0;
  if (v19 <= 20.0) {
    float v21 = v19;
  }
  else {
    float v21 = 20.0;
  }
  if (a2) {
    int v22 = 2;
  }
  else {
    int v22 = *(_DWORD *)(a1 + 832);
  }
  sub_100056F84(v22, v12, v15, 3.6);
  float v24 = v23 * v21;
  if (v24 <= 20.0) {
    float v20 = v24;
  }
  if (qword_102418FF0 != -1) {
    dispatch_once(&qword_102418FF0, &stru_1022F95F8);
  }
  int v25 = qword_102418FF8;
  if (os_log_type_enabled((os_log_t)qword_102418FF8, OS_LOG_TYPE_DEBUG))
  {
    double v26 = *(double *)(a1 + 128);
    double v27 = v26 - *(double *)(a1 + 120);
    BOOL v28 = *(unsigned __int8 *)(a1 + 528) == 1;
    *(_DWORD *)std::string buf = 134220032;
    *(double *)__int16 v51 = v15;
    *(_WORD *)&v51[8] = 2048;
    *(double *)&v51[10] = v8;
    *(_WORD *)&v51[18] = 2048;
    *(double *)&v51[20] = v27;
    *(_WORD *)&v51[28] = 2048;
    *(double *)&v51[30] = v17;
    *(_WORD *)&v51[38] = 2048;
    *(double *)&v51[40] = a4;
    *(_WORD *)&v51[48] = 2048;
    *(double *)&v51[50] = v26;
    *(_WORD *)&v51[58] = 2048;
    *(double *)&v51[60] = v48;
    __int16 v52 = 1024;
    BOOL v53 = v28;
    __int16 v54 = 2048;
    double v55 = v21;
    _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEBUG, "Run, WorkRate, %f, distance(m), %f, duration(s), %f, mets, %f, fMetsScaling, %f, endTime, %f, currentPace, %f, isStroller, %d, metsStrollerCorrected, %f", buf, 0x58u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102418FF0 != -1) {
      dispatch_once(&qword_102418FF0, &stru_1022F95F8);
    }
    BOOL v44 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "static CLMetsInfo CLCalorieRunModel::calculateWorkRateMETS(const CLNatalieModelInput &, const BOOL, const float, const float)", "%s\n", v44);
    if (v44 != (char *)buf) {
      free(v44);
    }
  }
  if (qword_102418FF0 != -1) {
    dispatch_once(&qword_102418FF0, &stru_1022F95F8);
  }
  int v29 = qword_102418FF8;
  if (os_log_type_enabled((os_log_t)qword_102418FF8, OS_LOG_TYPE_DEBUG))
  {
    int v30 = *(_DWORD *)(a1 + 832);
    double v31 = *(double *)(a1 + 128) - *(double *)(a1 + 120);
    *(_DWORD *)std::string buf = 67110656;
    *(_DWORD *)__int16 v51 = v30;
    *(_WORD *)&v51[4] = 2048;
    *(double *)&v51[6] = v12;
    float v32 = 0.0;
    *(_WORD *)&v51[14] = 2048;
    *(double *)&v51[16] = v31;
    *(_WORD *)&v51[24] = 2048;
    *(double *)&v51[26] = v15;
    if (v15 >= 0.5) {
      float v32 = (float)(v12 / v15) * 100.0;
    }
    *(_WORD *)&v51[34] = 2048;
    *(double *)&v51[36] = v17;
    *(_WORD *)&v51[44] = 2048;
    *(double *)&v51[46] = v20;
    *(_WORD *)&v51[54] = 2048;
    *(double *)&v51[56] = v32;
    _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEBUG, "Run, WorkRate, Grade type, %d, vertical speed %f, interval %f, workrate %f, mets %f, mets + grade %f, percent grade %f", buf, 0x44u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102418FF0 != -1) {
      dispatch_once(&qword_102418FF0, &stru_1022F95F8);
    }
    int v45 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "static CLMetsInfo CLCalorieRunModel::calculateWorkRateMETS(const CLNatalieModelInput &, const BOOL, const float, const float)", "%s\n", v45);
    if (v45 != (char *)buf) {
      free(v45);
    }
  }
  float v33 = 0.0;
  if (v16 > a5)
  {
    sub_10068D230();
    float v33 = v34;
  }
  if (qword_102418FF0 != -1) {
    dispatch_once(&qword_102418FF0, &stru_1022F95F8);
  }
  uint64_t v35 = qword_102418FF8;
  if (os_log_type_enabled((os_log_t)qword_102418FF8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::string buf = 134218240;
    *(double *)__int16 v51 = v16;
    *(_WORD *)&v51[8] = 2048;
    *(double *)&v51[10] = v33;
    _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEBUG, "Run, WorkRate, energy, %.1f,mets from intensity, %.1f", buf, 0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102418FF0 != -1) {
      dispatch_once(&qword_102418FF0, &stru_1022F95F8);
    }
    double v46 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "static CLMetsInfo CLCalorieRunModel::calculateWorkRateMETS(const CLNatalieModelInput &, const BOOL, const float, const float)", "%s\n", v46);
    if (v46 != (char *)buf) {
      free(v46);
    }
  }
  if (*(unsigned char *)(a1 + 352))
  {
    uint64_t v36 = sub_1001A58C0();
    sub_10003BFB8(v36, (uint64_t)(float)(v20 - v17));
    if (v20 >= 2.1) {
      float v37 = v20;
    }
    else {
      float v37 = 2.1;
    }
  }
  else
  {
    float v38 = 2.23693991 / sub_100EE4650(*(float *)(a1 + 1360));
    if (v20 >= v33) {
      float v39 = v20;
    }
    else {
      float v39 = v33;
    }
    if (v48 < v38) {
      float v37 = v39;
    }
    else {
      float v37 = v20;
    }
    if (v48 < v38) {
      float v20 = v39;
    }
  }
  *(float *)(a3 + 20) = v37;
  *(float *)(a3 + 28) = v20;
  float v40 = fmaxf(v33, 0.0);
  if (v15 > 0.0) {
    float v40 = v20;
  }
  if (v33 <= 0.0 && v15 <= 0.0) {
    int v42 = 0;
  }
  else {
    int v42 = 9;
  }
  *(float *)(a3 + 12) = v40;
  *(_DWORD *)(a3 + 36) = v42;
  if (qword_102418FF0 != -1) {
    dispatch_once(&qword_102418FF0, &stru_1022F95F8);
  }
  long long v43 = qword_102418FF8;
  if (os_log_type_enabled((os_log_t)qword_102418FF8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::string buf = 134218240;
    *(double *)__int16 v51 = v37;
    *(_WORD *)&v51[8] = 2048;
    *(double *)&v51[10] = v20;
    _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEBUG, "Run,WorkRate,finalUserMets,%f,finalTruthMets,%f", buf, 0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102418FF0 != -1) {
      dispatch_once(&qword_102418FF0, &stru_1022F95F8);
    }
    int v47 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "static CLMetsInfo CLCalorieRunModel::calculateWorkRateMETS(const CLNatalieModelInput &, const BOOL, const float, const float)", "%s\n", v47);
    if (v47 != (char *)buf) {
      free(v47);
    }
  }
}

void sub_100DF7C94(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

float sub_100DF7CA4(float a1)
{
  return (float)(a1 * 1.5395) + 0.34316;
}

void sub_100DF7CBC(int a1, float a2, float a3)
{
}

void sub_100DF7CD0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 3;
  *(void *)(a3 + 32) = 3;
  if (*(unsigned char *)(a2 + 352) && CLMotionActivity::isTypeIndoorPedestrian())
  {
    double v6 = *(double *)(a2 + 1040);
    double v7 = *(double *)(a2 + 1104);
    BOOL v8 = v7 <= 0.447039278 || v7 > 7.14285711;
    float v9 = v7 * 2.23693991;
    float v10 = 0.0;
    if (v8) {
      float v11 = 0.0;
    }
    else {
      float v11 = v9;
    }
    float v12 = *(double *)(a2 + 1192) * 2.23693991;
    if (v6 > 0.0)
    {
      float v13 = (float)((float)(v11 * 1.5395) + 0.34316) * *(float *)(a1 + 16);
      if (v12 > 0.0) {
        int v14 = 1;
      }
      else {
        int v14 = 2;
      }
      sub_100056F84(v14, v12, v11, 3.6);
      float v16 = v13 * v15;
      if (v16 <= 20.0) {
        float v10 = v16;
      }
      else {
        float v10 = 20.0;
      }
    }
    *(float *)(a3 + 20) = v10;
    *(float *)(a3 + 28) = v10;
    if (qword_102418FF0 != -1) {
      dispatch_once(&qword_102418FF0, &stru_1022F95F8);
    }
    float v17 = qword_102418FF8;
    if (os_log_type_enabled((os_log_t)qword_102418FF8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v18 = *(void *)(a2 + 112);
      *(_DWORD *)std::string buf = 134219264;
      uint64_t v21 = v18;
      __int16 v22 = 2048;
      double v23 = v6;
      __int16 v24 = 2048;
      double v25 = v11;
      __int16 v26 = 2048;
      double v27 = v12;
      __int16 v28 = 2048;
      double v29 = v10;
      __int16 v30 = 2048;
      double v31 = v10;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEBUG, "Run,fitness machine,computeTime,%.3f,startTime,%.3f,wr,%f,vertSpeed,%f,userMets,%f,truthMets,%f", buf, 0x3Eu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418FF0 != -1) {
        dispatch_once(&qword_102418FF0, &stru_1022F95F8);
      }
      float v19 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual CLMetsInfo CLCalorieRunModel::computeFitnessMachineMETS(const CLNatalieModelInput &)", "%s\n", v19);
      if (v19 != (char *)buf) {
        free(v19);
      }
    }
  }
}

void sub_100DF7FE0()
{
}

void sub_100DF7FF4(id a1)
{
  qword_102418FF8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Calorimetry");
}

void sub_100DF8024()
{
}

void sub_100DF809C()
{
}

uint64_t sub_100DF80C0()
{
  if (qword_102481808 != -1) {
    dispatch_once(&qword_102481808, &stru_1022F9618);
  }
  return qword_10248AC48;
}

void *sub_100DF8108(void *a1)
{
  *a1 = off_1022F9648;
  sub_100DF8160(a1);

  return sub_1009D1DE4(a1);
}

void *sub_100DF8160(void *result)
{
  if (result[4])
  {
    uint64_t v1 = result;
    uint64_t v2 = sub_1009EC0A8();
    sub_1009D26C4(v2, 0, v1[4]);
    uint64_t result = (void *)v1[4];
    if (result) {
      uint64_t result = (void *)(*(uint64_t (**)(void *))(*result + 8))(result);
    }
    v1[4] = 0;
  }
  return result;
}

void sub_100DF81CC(void *a1)
{
  sub_100DF8108(a1);

  operator delete();
}

uint64_t sub_100DF8204(uint64_t result, int a2, uint64_t a3)
{
  if (!a2)
  {
    if (a3) {
      return sub_100DF8218(result);
    }
    else {
      return (uint64_t)sub_100DF8160((void *)result);
    }
  }
  return result;
}

uint64_t sub_100DF8218(uint64_t result)
{
  if (!*(void *)(result + 32))
  {
    uint64_t v1 = result;
    *(double *)(result + 40) = sub_1000D3E50();
    *(void *)(v1 + 48) = 0xBFF0000000000000;
    operator new();
  }
  return result;
}

void sub_100DF8300()
{
}

__n128 sub_100DF8324(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (__n128 *)(a2 + 48);
  if (*(double *)(a2 + 48) > 0.0)
  {
    float v4 = *(float *)(a1 + 8) - *(float *)(a2 + 56);
    float v5 = *(float *)(a1 + 16) - *(float *)(a2 + 64);
    float v6 = (float)((float)((float)(*(float *)(a1 + 12) - *(float *)(a2 + 60))
                       * (float)(*(float *)(a1 + 12) - *(float *)(a2 + 60)))
               + (float)(v4 * v4))
       + (float)(v5 * v5);
    double v7 = *(double *)a1;
    if (v6 >= 0.0009)
    {
      int v8 = 0;
      *(double *)(a2 + 40) = v7;
    }
    else
    {
      int v8 = v7 - *(double *)(a2 + 40) > 1.0;
    }
    char v10 = v8;
    if (*(unsigned __int8 *)(a2 + 72) != v8)
    {
      *(unsigned char *)(a2 + 72) = v8;
      sub_1000E7BA0(a2, 0, (uint64_t)&v10, 1);
    }
  }
  __n128 result = *(__n128 *)a1;
  v3[1].n128_u64[0] = *(void *)(a1 + 16);
  __n128 *v3 = result;
  return result;
}

void sub_100DF84B0(id a1)
{
  qword_102481810 = (uint64_t)[objc_alloc((Class)CLDispatchSilo) initWithIdentifier:@"CLRemoteMotionAlarmSilo"];
}

void sub_100DF8528(id a1)
{
  if (objc_opt_class())
  {
    sub_100103240();
    if (sub_10010145C()) {
      byte_102481820 = 1;
    }
  }
}

id sub_100DF8724(uint64_t a1)
{
  if (qword_102419540 != -1) {
    dispatch_once(&qword_102419540, &stru_1022F96D0);
  }
  uint64_t v2 = qword_102419548;
  if (os_log_type_enabled((os_log_t)qword_102419548, OS_LOG_TYPE_INFO))
  {
    v4[0] = 68289026;
    v4[1] = 0;
    __int16 v5 = 2082;
    float v6 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"Resending motion alarm request\"}", (uint8_t *)v4, 0x12u);
  }
  return [*(id *)(a1 + 32) sendMotionAlarmRequest];
}

id sub_100DF8808(uint64_t a1)
{
  if (qword_102419540 != -1) {
    dispatch_once(&qword_102419540, &stru_1022F96D0);
  }
  uint64_t v2 = qword_102419548;
  if (os_log_type_enabled((os_log_t)qword_102419548, OS_LOG_TYPE_INFO))
  {
    v4[0] = 68289026;
    v4[1] = 0;
    __int16 v5 = 2082;
    float v6 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"We haven't received an update in a while\"}", (uint8_t *)v4, 0x12u);
  }
  return [*(id *)(a1 + 32) setLastKnownMotionState:0];
}

void sub_100DF92F0(id a1)
{
  qword_102419548 = (uint64_t)os_log_create("com.apple.locationd.Core", "Streaming");
}

id sub_100DFA494(uint64_t a1)
{
  if (objc_msgSend(objc_msgSend(*(id *)(a1 + 32), "settings"), "loggingPersistentInTempFolder"))
  {
    id v2 = [*(id *)(a1 + 32) persistenceDirectory];
    CFStringRef v3 = @"gathering_ble_advs.bin";
  }
  else
  {
    qword_102481838 = (uint64_t)objc_alloc_init((Class)NSDateFormatter);
    [(id)qword_102481838 setDateFormat:@"yyyy_MM_dd-"];
    CFStringRef v4 = (const __CFString *)[[[objc_msgSend((id)qword_102481838, "stringFromDate:", +[NSDate now](NSDate, "now")) stringByAppendingString:@"gathering_ble_advs.bin"]
    id v2 = [*(id *)(a1 + 32) persistenceDirectory];
    CFStringRef v3 = v4;
  }
  id result = [v2 URLByAppendingPathComponent:v3];
  qword_102481830 = (uint64_t)result;
  return result;
}

id sub_100DFB450(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _cleanupVolatileStorage];
}

id sub_100DFBD5C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _cleanupPersistentStorage];
}

id sub_100DFC200(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _cleanupVolatileStorage];
}

id sub_100DFC208(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _cleanupPersistentStorage];
}

NSDictionary *sub_100DFC6A4(uint64_t a1)
{
  v3[0] = @"Cause";
  v4[0] = +[NSNumber numberWithInteger:*(void *)(a1 + 40) + 8 * *(void *)(*(void *)(a1 + 32) + 88)];
  v3[1] = @"Policy";
  v4[1] = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 56)];
  v3[2] = @"Duration";
  _DWORD v4[2] = +[NSNumber numberWithDouble:*(double *)(a1 + 48)];
  v3[3] = @"TimeSinceLast";
  void v4[3] = +[NSNumber numberWithDouble:*(double *)(*(void *)(a1 + 32) + 80)];
  return +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:4];
}

void sub_100DFC7C8(id a1)
{
  qword_1024194B8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Gathering");
}

void *sub_100DFC7F8(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  *a1 = off_1022F9748;
  a1[4] = a3;
  a1[5] = a2;
  uint64_t v6 = a4[1];
  a1[6] = *a4;
  a1[7] = v6;
  if (v6) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v7 = a5[1];
  a1[8] = *a5;
  a1[9] = v7;
  if (v7) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v7 + 8), 1uLL, memory_order_relaxed);
  }
  a1[1] = objc_opt_new();
  a1[3] = 0;
  return a1;
}

void sub_100DFC880(_Unwind_Exception *exception_object)
{
  CFStringRef v3 = *(std::__shared_weak_count **)(v1 + 72);
  if (v3) {
    sub_1000DB0A0(v3);
  }
  CFStringRef v4 = *(std::__shared_weak_count **)(v1 + 56);
  if (v4) {
    sub_1000DB0A0(v4);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100DFC8A4(uint64_t a1)
{
  *(void *)a1 = off_1022F9748;

  id v2 = *(std::__shared_weak_count **)(a1 + 72);
  if (v2) {
    sub_1000DB0A0(v2);
  }
  CFStringRef v3 = *(std::__shared_weak_count **)(a1 + 56);
  if (v3) {
    sub_1000DB0A0(v3);
  }
  return a1;
}

id sub_100DFC910(id *a1, int a2)
{
  id v3 = a1[3];
  if (a2)
  {
    CFStringRef v4 = (void *)(*((uint64_t (**)(id *, id))*a1 + 16))(a1, [a1[3] index]);
    if (qword_102419560 != -1) {
      dispatch_once(&qword_102419560, &stru_1022F9838);
    }
    __int16 v5 = qword_102419568;
    if (os_log_type_enabled((os_log_t)qword_102419568, OS_LOG_TYPE_INFO))
    {
      v8[0] = 68289282;
      v8[1] = 0;
      __int16 v9 = 2082;
      char v10 = "";
      __int16 v11 = 2082;
      id v12 = [v4 UTF8String];
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"discard trace in slot\", \"suffix\":%{public, location:escape_only}s}", (uint8_t *)v8, 0x1Cu);
    }
  }
  else
  {
    uint64_t v6 = (*((uint64_t (**)(id *))*a1 + 20))(a1);
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
    [v3 setScore:];
    (*((void (**)(id *))*a1 + 18))(a1);
  }
  [objc_msgSend(a1[3], "archive") eraseAllData];
  return [a1[3] setScore:0.0];
}

char *sub_100DFCADC(uint64_t a1)
{
  return (char *)[*(id *)(a1 + 8) count] - (*(void *)(a1 + 24) != 0);
}

id sub_100DFCB14(uint64_t a1, uint64_t a2)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100DFCB84;
  v3[3] = &unk_1022F9800;
  void v3[4] = a2;
  v3[5] = a1;
  return [*(id *)(a1 + 8) enumerateObjectsUsingBlock:v3];
}

uint64_t sub_100DFCB84(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  CFStringRef v4 = *(void **)(result + 40);
  if ((void *)v4[3] != a2)
  {
    uint64_t v8 = result;
    (*(uint64_t (**)(void))(*v4 + 88))(*(void *)(result + 40));
    [objc_msgSend(a2, "archive") secondaryDataSize];
    sub_1011C5608();
    uint64_t v9 = *(void *)(v8 + 32);
    id v10 = [a2 archive];
    __int16 v11 = *(uint64_t (**)(uint64_t, id, uint64_t, uint64_t))(v9 + 16);
    return v11(v9, v10, a3, a4);
  }
  return result;
}

id sub_100DFCC74(uint64_t a1)
{
  return [*(id *)(a1 + 24) archive];
}

id sub_100DFCC7C(uint64_t a1, void *a2)
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 160))(a1);

  return sub_1006BB368(v3, a2);
}

uint64_t sub_100DFCCD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 160))(a1);
  sub_100176CA0(v5, a2);
  uint64_t result = sub_1006BB94C(v3, (uint64_t)v5);
  if (v5[32]) {
    return sub_100178B14((uint64_t)v5);
  }
  return result;
}

void sub_100DFCD4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  if (a14) {
    sub_100178B14((uint64_t)&a10);
  }
  _Unwind_Resume(exception_object);
}

id sub_100DFCD68(uint64_t a1)
{
  id v2 = *(void **)(a1 + 24);
  if (v2) {
    [objc_msgSend(v2, "archive") eraseAllData];
  }
  *(void *)(a1 + 24) = 0;
  uint64_t v3 = *(void **)(a1 + 8);

  return [v3 removeAllObjects];
}

void sub_100DFCDB0(id a1)
{
  qword_102419568 = (uint64_t)os_log_create("com.apple.locationd.Core", "Harvester");
}

void sub_100DFCE48(uint64_t a1, uint64_t a2)
{
  uint64_t v9 = a2;
  sub_100DFD1D8("kCLConnectionMessageCheckInNoMovementUpdate", &v7);
  if (*(void *)(a1 + 8))
  {
    uint64_t v6 = v8;
    if (v8) {
      atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    CLConnection::sendMessage();
    if (v6) {
      sub_1000DB0A0(v6);
    }
    if (qword_102419340 != -1) {
      dispatch_once(&qword_102419340, &stru_1022F9858);
    }
    uint64_t v3 = qword_102419348;
    if (os_log_type_enabled((os_log_t)qword_102419348, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "[CLNoMovement] subscription: sent state update message", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419340 == -1)
      {
LABEL_22:
        __int16 v5 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLNoMovementSubscription::onStateUpdate(CMNoMovementStateUpdate *)", "%s\n", v5);
        if (v5 != (char *)buf) {
          free(v5);
        }
        goto LABEL_18;
      }
LABEL_24:
      dispatch_once(&qword_102419340, &stru_1022F9858);
      goto LABEL_22;
    }
  }
  else
  {
    if (qword_102419340 != -1) {
      dispatch_once(&qword_102419340, &stru_1022F9858);
    }
    CFStringRef v4 = qword_102419348;
    if (os_log_type_enabled((os_log_t)qword_102419348, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "[CLNoMovement] subscription: connection invalid; cannot send state update message",
        buf,
        2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419340 == -1) {
        goto LABEL_22;
      }
      goto LABEL_24;
    }
  }
LABEL_18:
  if (v8) {
    sub_1000DB0A0(v8);
  }
}

void sub_100DFD150(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, std::__shared_weak_count *a15)
{
  if (a15) {
    sub_1000DB0A0(a15);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DFD1A8(id a1)
{
  qword_102419348 = (uint64_t)os_log_create("com.apple.locationd.Motion", "CheckIn");
}

void *sub_100DFD1D8@<X0>(char *a1@<X1>, void *a2@<X8>)
{
  CFStringRef v4 = operator new(0x70uLL);
  uint64_t result = sub_10017E9C0(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_100DFD228(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

unint64_t sub_100DFD23C()
{
  unint64_t result = sub_1004C6238();
  if (result) {
    operator new();
  }
  return result;
}

void sub_100DFD288()
{
}

uint64_t sub_100DFD2AC()
{
  if (qword_102481848 != -1) {
    dispatch_once(&qword_102481848, &stru_1022F9878);
  }
  return qword_10248AC50;
}

uint64_t sub_100DFD2F4(uint64_t a1)
{
  id v2 = (unsigned __int8 *)sub_1004C5F04((void *)a1);
  *(void *)id v2 = &off_1022F98A8;
  LOBYTE(v6) = 0;
  sub_10006ACBC(v2 + 32, "AlwaysOnSuppression", (unsigned __int8 *)&v6, 0);
  LOBYTE(v6) = 1;
  sub_10006ACBC((unsigned __int8 *)(a1 + 35), "EnableViewObstructedMLSuppression", (unsigned __int8 *)&v6, 0);
  int v6 = 1084227584;
  sub_101A22680((unsigned __int8 *)(a1 + 40), "ViewObstructedSuppressionDelaySecs", &v6, 0);
  LOBYTE(v6) = 0;
  sub_10006ACBC((unsigned __int8 *)(a1 + 52), "DisableViewObstructedSuppression", (unsigned __int8 *)&v6, 0);
  int v6 = 1092616192;
  sub_101A22680((unsigned __int8 *)(a1 + 56), "KeepViewObstructedRunningDelaySecs", &v6, 0);
  LOBYTE(v6) = 1;
  sub_10006ACBC((unsigned __int8 *)(a1 + 68), "EnableProxBaselineEstimation", (unsigned __int8 *)&v6, 0);
  LOBYTE(v6) = 0;
  sub_10006ACBC((unsigned __int8 *)(a1 + 71), "ForceAlwaysOnViewObstructed", (unsigned __int8 *)&v6, 0);
  *(unsigned char *)(a1 + 74) = 0;
  *(_DWORD *)(a1 + 76) = 0;
  *(unsigned char *)(a1 + 80) = 0;
  *(_DWORD *)(a1 + 84) = 0;
  *(unsigned char *)(a1 + 88) = 0;
  *(_DWORD *)(a1 + 92) = 0;
  *(unsigned char *)(a1 + 96) = 0;
  uint64_t v3 = sub_1000D3E78();
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  void v5[2] = sub_100DFD4B0;
  void v5[3] = &unk_1022A3020;
  void v5[4] = a1;
  sub_1009E8E94(v3, (uint64_t)v5);
  return a1;
}

void sub_100DFD480(_Unwind_Exception *a1)
{
  sub_1004C61A8(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100DFD4B0(uint64_t a1)
{
  uint64_t v1 = *(uint64_t ***)(a1 + 32);
  sub_100A2932C(v1[1], (uint64_t)sub_100DFD520, (uint64_t)v1);
  id v2 = (uint64_t (*)(uint64_t **))(*v1)[2];

  return v2(v1);
}

unsigned char *sub_100DFD520()
{
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  IOHIDEventGetVendorDefinedData();
  unint64_t result = sub_1004C5E98(&__dst, 0, 0);
  if (__dst == 2)
  {
    if (qword_102418FC0 != -1) {
      dispatch_once(&qword_102418FC0, &stru_1022F9900);
    }
    uint64_t v1 = qword_102418FC8;
    if (os_log_type_enabled((os_log_t)qword_102418FC8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::string buf = 67241984;
      int v38 = v9;
      __int16 v39 = 1026;
      int v40 = v10;
      __int16 v41 = 1026;
      int v42 = v11;
      __int16 v43 = 1026;
      int v44 = v12;
      __int16 v45 = 1026;
      int v46 = v13;
      __int16 v47 = 2050;
      double v48 = v14;
      __int16 v49 = 2050;
      double v50 = v15;
      __int16 v51 = 1026;
      int v52 = v16;
      _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "[CLSPUEclipseControl] Suppression Report received shouldSuppress,%{public}d,APAwake,%{public}d,currentState,%{public}hhu,orientation,%{public}hhu,motionType,%{public}hhu,lux,%{public}f,pocketProbability,%{public}f,facedownStatic,%{public}hhu", buf, 0x3Au);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418FC0 != -1) {
        dispatch_once(&qword_102418FC0, &stru_1022F9900);
      }
      int v21 = 67241984;
      int v22 = v9;
      __int16 v23 = 1026;
      int v24 = v10;
      __int16 v25 = 1026;
      int v26 = v11;
      __int16 v27 = 1026;
      int v28 = v12;
      __int16 v29 = 1026;
      int v30 = v13;
      __int16 v31 = 2050;
      double v32 = v14;
      __int16 v33 = 2050;
      double v34 = v15;
      __int16 v35 = 1026;
      int v36 = v16;
      uint64_t v7 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "static void CLSPUEclipseControl::eclipseControlCallback(void *, void *, void *, IOHIDEventRef)", "%s\n", v7);
      if (v7 != (char *)buf) {
        free(v7);
      }
    }
    int v2 = v9;
    unint64_t TimeStamp = IOHIDEventGetTimeStamp();
    double v4 = sub_1000D3D90(TimeStamp);
    v19[0] = @"eventTime";
    v20[0] = +[NSNumber numberWithDouble:v4];
    v19[1] = @"eventTimeNS";
    [+[NSDate date] timeIntervalSince1970];
    __int16 v5 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
    v19[2] = @"VOEvent";
    CFStringRef v6 = @"suppress";
    if (!v2) {
      CFStringRef v6 = @"unsuppress";
    }
    v20[1] = v5;
    v20[2] = v6;
    return (unsigned char *)sub_1000FC494((uint64_t)+[NSDictionary dictionaryWithObjects:v20 forKeys:v19 count:3], (uint64_t)"ViewObstructedStateChange");
  }
  return result;
}

uint64_t sub_100DFD86C(uint64_t a1, char a2, int a3, char a4)
{
  uint64_t v15 = 0;
  unsigned __int8 v16 = &v15;
  uint64_t v17 = 0x2020000000;
  char v18 = 1;
  uint64_t v8 = sub_1000D3E78();
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_100DFD95C;
  v11[3] = &unk_1022F98C8;
  char v13 = a2;
  char v14 = a4;
  int v12 = a3;
  void v11[4] = &v15;
  v11[5] = a1;
  sub_1009E8E94(v8, (uint64_t)v11);
  uint64_t v9 = *((unsigned __int8 *)v16 + 24);
  _Block_object_dispose(&v15, 8);
  return v9;
}

void sub_100DFD944(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100DFD95C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  int v3 = *(_DWORD *)(v2 + 76);
  if (*(unsigned char *)(a1 + 52))
  {
    if (v3 != -1)
    {
      int v4 = v3 + 1;
LABEL_6:
      *(_DWORD *)(v2 + 76) = v4;
      goto LABEL_19;
    }
    if (qword_102418FC0 != -1) {
      dispatch_once(&qword_102418FC0, &stru_1022F9900);
    }
    __int16 v5 = qword_102418FC8;
    if (os_log_type_enabled((os_log_t)qword_102418FC8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "[CLSPUEclipseControl] Invalid client count. Not increasing.", buf, 2u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418FC0 == -1)
      {
LABEL_84:
        __int16 v31 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "BOOL CLSPUEclipseControl::setSuppressionEnabled(BOOL, int, BOOL)_block_invoke", "%s\n", v31);
        if (v31 != (char *)buf) {
          free(v31);
        }
        goto LABEL_19;
      }
LABEL_89:
      dispatch_once(&qword_102418FC0, &stru_1022F9900);
      goto LABEL_84;
    }
  }
  else
  {
    if (v3)
    {
      int v4 = v3 - 1;
      goto LABEL_6;
    }
    if (qword_102418FC0 != -1) {
      dispatch_once(&qword_102418FC0, &stru_1022F9900);
    }
    CFStringRef v6 = qword_102418FC8;
    if (os_log_type_enabled((os_log_t)qword_102418FC8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "[CLSPUEclipseControl] Invalid client count. Not decreasing.", buf, 2u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418FC0 == -1) {
        goto LABEL_84;
      }
      goto LABEL_89;
    }
  }
LABEL_19:
  if (!*(unsigned char *)(a1 + 53)) {
    goto LABEL_38;
  }
  int v7 = *(_DWORD *)(v2 + 84);
  if (*(unsigned char *)(a1 + 52))
  {
    if (v7 != -1)
    {
      int v8 = v7 + 1;
LABEL_25:
      *(_DWORD *)(v2 + 84) = v8;
      goto LABEL_38;
    }
    if (qword_102418FC0 != -1) {
      dispatch_once(&qword_102418FC0, &stru_1022F9900);
    }
    uint64_t v9 = qword_102418FC8;
    if (os_log_type_enabled((os_log_t)qword_102418FC8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "[CLSPUEclipseControl] Invalid Always On View Obstructed client count. Not increasing.", buf, 2u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418FC0 == -1)
      {
LABEL_87:
        double v32 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "BOOL CLSPUEclipseControl::setSuppressionEnabled(BOOL, int, BOOL)_block_invoke", "%s\n", v32);
        if (v32 != (char *)buf) {
          free(v32);
        }
        goto LABEL_38;
      }
LABEL_90:
      dispatch_once(&qword_102418FC0, &stru_1022F9900);
      goto LABEL_87;
    }
  }
  else
  {
    if (v7)
    {
      int v8 = v7 - 1;
      goto LABEL_25;
    }
    if (qword_102418FC0 != -1) {
      dispatch_once(&qword_102418FC0, &stru_1022F9900);
    }
    unsigned __int8 v10 = qword_102418FC8;
    if (os_log_type_enabled((os_log_t)qword_102418FC8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "[CLSPUEclipseControl] Invalid Always On View Obstructed count. Not decreasing.", buf, 2u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418FC0 == -1) {
        goto LABEL_87;
      }
      goto LABEL_90;
    }
  }
LABEL_38:
  uint64_t v11 = mach_absolute_time();
  v33[0] = @"eventTime";
  v34[0] = +[NSNumber numberWithDouble:sub_1000D3D90(v11)];
  v33[1] = @"eventTimeNS";
  [+[NSDate date] timeIntervalSince1970];
  v34[1] = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
  _OWORD v33[2] = @"clientType";
  int v12 = +[NSNumber numberWithInt:*(unsigned int *)(a1 + 48)];
  if (*(unsigned char *)(a1 + 52)) {
    CFStringRef v13 = @"enabled";
  }
  else {
    CFStringRef v13 = @"disabled";
  }
  v34[2] = v12;
  v34[3] = v13;
  v33[3] = @"clientEvent";
  v33[4] = @"clientNumbers";
  v34[4] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(v2 + 76)];
  sub_1000FC494((uint64_t)+[NSDictionary dictionaryWithObjects:v34 forKeys:v33 count:5], (uint64_t)"SuppressionManagerClientStateChange");
  int v14 = *(_DWORD *)(v2 + 76);
  int v15 = v14 != 0;
  int v16 = *(unsigned __int8 *)(v2 + 74);
  BOOL v17 = v16 != v15;
  int v18 = *(_DWORD *)(v2 + 84);
  if (*(unsigned char *)(v2 + 72) || v18)
  {
    if (v18) {
      BOOL v20 = v18 == v14;
    }
    else {
      BOOL v20 = 0;
    }
    int v19 = v20 || *(unsigned char *)(v2 + 72) != 0;
    BOOL v17 = v16 != v15 || *(unsigned __int8 *)(v2 + 80) != v19;
  }
  else
  {
    int v19 = 0;
  }
  if (qword_102418FC0 != -1) {
    dispatch_once(&qword_102418FC0, &stru_1022F9900);
  }
  __int16 v23 = qword_102418FC8;
  if (os_log_type_enabled((os_log_t)qword_102418FC8, OS_LOG_TYPE_DEFAULT))
  {
    int v24 = *(_DWORD *)(v2 + 76);
    int v25 = *(_DWORD *)(a1 + 48);
    int v26 = *(unsigned __int8 *)(v2 + 74);
    *(_DWORD *)std::string buf = 67241216;
    int v36 = v24;
    __int16 v37 = 1026;
    int v38 = v25;
    __int16 v39 = 1026;
    int v40 = v26;
    __int16 v41 = 1026;
    BOOL v42 = v17;
    __int16 v43 = 1026;
    int v44 = v19;
    _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "[CLSPUEclipseControl] Number of clients,%{public}u, clientType,%{public}u, enabled,%{public}d, shouldConfigure,%{public}d, enableAlwaysOnViewObstructed,%{public}u", buf, 0x20u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102418FC0 != -1) {
      dispatch_once(&qword_102418FC0, &stru_1022F9900);
    }
    __int16 v29 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLSPUEclipseControl::setSuppressionEnabled(BOOL, int, BOOL)_block_invoke", "%s\n", v29);
    if (v29 != (char *)buf) {
      free(v29);
    }
  }
  if (v17)
  {
    *(unsigned char *)(v2 + 74) = v15;
    *(unsigned char *)(v2 + 80) = v19;
    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 16))(v2);
    if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      return;
    }
  }
  else
  {
    if (qword_102418FC0 != -1) {
      dispatch_once(&qword_102418FC0, &stru_1022F9900);
    }
    __int16 v27 = qword_102418FC8;
    if (os_log_type_enabled((os_log_t)qword_102418FC8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEBUG, "[CLSPUEclipseControl] No configure needed.", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418FC0 != -1) {
        dispatch_once(&qword_102418FC0, &stru_1022F9900);
      }
      int v30 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLSPUEclipseControl::setSuppressionEnabled(BOOL, int, BOOL)_block_invoke", "%s\n", v30);
      if (v30 != (char *)buf) {
        free(v30);
      }
    }
  }
  unsigned int v28 = 1 << *(_DWORD *)(a1 + 48);
  if (*(unsigned char *)(a1 + 52)) {
    atomic_fetch_or((atomic_uint *volatile)(v2 + 92), v28);
  }
  else {
    atomic_fetch_and((atomic_uint *volatile)(v2 + 92), ~v28);
  }
}

uint64_t sub_100DFE288(uint64_t a1, char a2)
{
  uint64_t v9 = 0;
  unsigned __int8 v10 = &v9;
  uint64_t v11 = 0x2020000000;
  char v12 = 0;
  uint64_t v4 = sub_1000D3E78();
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100DFE35C;
  _DWORD v7[3] = &unk_1022D87C0;
  char v8 = a2;
  uint64_t v7[4] = &v9;
  v7[5] = a1;
  sub_1009E8E94(v4, (uint64_t)v7);
  uint64_t v5 = *((unsigned __int8 *)v10 + 24);
  _Block_object_dispose(&v9, 8);
  return v5;
}

void sub_100DFE344(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100DFE35C(uint64_t a1)
{
  uint64_t v2 = *(unsigned char **)(a1 + 40);
  v2[88] = *(unsigned char *)(a1 + 48);
  uint64_t result = (*(uint64_t (**)(unsigned char *))(*(void *)v2 + 16))(v2);
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  return result;
}

BOOL sub_100DFE3B8(uint64_t a1)
{
  sub_1000D3E78();
  sub_1000D5B68();
  int v2 = *(unsigned __int8 *)(a1 + 33);
  if (*(unsigned char *)(a1 + 33))
  {
    uint64_t v3 = 1;
    char v4 = 1;
  }
  else
  {
    uint64_t v3 = *(unsigned __int8 *)(a1 + 74);
    char v4 = *(unsigned char *)(a1 + 74);
  }
  sub_100A29D84(*(void *)(a1 + 8), v3);
  int v5 = *(unsigned __int8 *)(a1 + 36);
  int v6 = *(unsigned __int8 *)(a1 + 69);
  float v7 = *(float *)(a1 + 44);
  if (v7 <= 1.0) {
    unint64_t v8 = 1000000;
  }
  else {
    unint64_t v8 = (unint64_t)(float)(v7 * 1000000.0);
  }
  float v9 = *(float *)(a1 + 60);
  if (v9 <= 0.0) {
    unint64_t v10 = 10000000;
  }
  else {
    unint64_t v10 = (unint64_t)(float)(v9 * 1000000.0);
  }
  v25[0] = 2;
  v25[1] = v4;
  v25[2] = v5;
  void v25[3] = *(unsigned char *)(a1 + 88);
  unint64_t v26 = v8;
  char v27 = *(unsigned char *)(a1 + 53);
  unint64_t v28 = v10;
  char v29 = v6;
  char v30 = *(unsigned char *)(a1 + 80);
  if (qword_102418FC0 != -1) {
    dispatch_once(&qword_102418FC0, &stru_1022F9900);
  }
  uint64_t v11 = qword_102418FC8;
  if (os_log_type_enabled((os_log_t)qword_102418FC8, OS_LOG_TYPE_DEFAULT))
  {
    int v12 = *(unsigned __int8 *)(a1 + 74);
    int v13 = *(unsigned __int8 *)(a1 + 88);
    int v14 = *(unsigned __int8 *)(a1 + 53);
    int v15 = *(unsigned __int8 *)(a1 + 80);
    *(_DWORD *)std::string buf = 67242240;
    int v50 = v12;
    __int16 v51 = 1026;
    int v52 = v2;
    __int16 v53 = 1026;
    int v54 = v5;
    __int16 v55 = 1026;
    int v56 = v13;
    __int16 v57 = 2050;
    unint64_t v58 = v8;
    __int16 v59 = 1026;
    int v60 = v14;
    __int16 v61 = 2050;
    unint64_t v62 = v10;
    __int16 v63 = 1026;
    int v64 = v6;
    __int16 v65 = 1026;
    int v66 = v15;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "[CLSPUEclipseControl] Configuring,clientEnabled,%{public}d,alwaysOn,%{public}d,mlEnabled,%{public}d,viewObstructedStateDebugEnabled,%{public}d,suppressionDelayUs,%{public}llu,disableViewObstructedSuppression,%{public}d,keepViewObstructedRunningDelaySecs,%{public}llu,enableProxBaselineEstimation,%{public}d,enableAlwaysOnViewObstructed,%{public}d", buf, 0x40u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102418FC0 != -1) {
      dispatch_once(&qword_102418FC0, &stru_1022F9900);
    }
    int v19 = *(unsigned __int8 *)(a1 + 74);
    int v20 = *(unsigned __int8 *)(a1 + 88);
    int v21 = *(unsigned __int8 *)(a1 + 53);
    int v22 = *(unsigned __int8 *)(a1 + 80);
    int v31 = 67242240;
    int v32 = v19;
    __int16 v33 = 1026;
    int v34 = v2;
    __int16 v35 = 1026;
    int v36 = v5;
    __int16 v37 = 1026;
    int v38 = v20;
    __int16 v39 = 2050;
    unint64_t v40 = v8;
    __int16 v41 = 1026;
    int v42 = v21;
    __int16 v43 = 2050;
    unint64_t v44 = v10;
    __int16 v45 = 1026;
    int v46 = v6;
    __int16 v47 = 1026;
    int v48 = v22;
    __int16 v23 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLSPUEclipseControl::configure()", "%s\n", v23);
    if (v23 != (char *)buf) {
      free(v23);
    }
  }
  BOOL v16 = sub_1004C6254(a1, (uint64_t)v25, (char *)0x17);
  if (v16)
  {
    atomic_store(*(unsigned char *)(a1 + 80), (unsigned __int8 *)(a1 + 96));
  }
  else
  {
    if (qword_102418FC0 != -1) {
      dispatch_once(&qword_102418FC0, &stru_1022F9900);
    }
    BOOL v17 = qword_102418FC8;
    if (os_log_type_enabled((os_log_t)qword_102418FC8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "[CLSPUEclipseControl] Configure failed", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418FC0 != -1) {
        dispatch_once(&qword_102418FC0, &stru_1022F9900);
      }
      LOWORD(v31) = 0;
      int v24 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLSPUEclipseControl::configure()", "%s\n", v24);
      if (v24 != (char *)buf) {
        free(v24);
      }
    }
  }
  return v16;
}

void sub_100DFE82C(void *a1)
{
  sub_1004C61A8(a1);

  operator delete();
}

void sub_100DFE864(id a1)
{
  qword_102418FC8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Eclipse");
}

void sub_100DFE944(id a1)
{
  qword_102481880 = (uint64_t)[objc_alloc((Class)CLDispatchSilo) initWithIdentifier:@"CLUnifiedCellLocationProviderSilo"];
}

uint64_t sub_100DFEA04(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100DFEE30;
  block[3] = &unk_10229FED8;
  void block[4] = a1;
  if (qword_1024818A0 != -1) {
    dispatch_once(&qword_1024818A0, block);
  }
  return qword_10248AC58;
}

void sub_100DFEE04(id a1)
{
  if (sub_1001073D0()) {
    byte_102481890 = 1;
  }
}

void sub_100DFEE30()
{
}

void sub_100DFEE7C()
{
}

void sub_100DFEEA0(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_1006B766C(a1, "UnifiedCell", a2);
  *(void *)uint64_t v3 = off_1022F9970;
  *(void *)(v3 + 120) = off_1022F9B20;
  *(_OWORD *)(v3 + 128) = 0u;
  *(_OWORD *)(v3 + 144) = 0u;
  *(_OWORD *)(v3 + 160) = 0u;
  *(void *)(v3 + 176) = 0;
  sub_100544834(v3 + 184);
  *(void *)(a1 + 2552) = 0;
  *(_OWORD *)(a1 + 2472) = 0u;
  *(_OWORD *)(a1 + 2488) = 0u;
  *(_OWORD *)(a1 + 2504) = 0u;
  *(_OWORD *)(a1 + 2520) = 0u;
  *(_OWORD *)(a1 + 2532) = 0u;
  *(void *)(a1 + 2560) = "na";
  *(_DWORD *)(a1 + 2568) = 0;
  *(unsigned char *)(a1 + 2572) = 0;
  sub_1006156AC(a1 + 2576);
  sub_10060F068();
}

void sub_100DFF64C(_Unwind_Exception *a1, uint64_t a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  nullsub_41(v27, a2);
  for (uint64_t i = 0; i != -6; i -= 3)
  {
    a20 = &v25[i + 315];
    sub_1000FA7C8((void ***)&a20);
  }
  sub_1000FA7C8((void ***)&a20);
  sub_100E00580(v26);
  uint64_t v31 = v25[22];
  v25[22] = 0;
  if (v31) {
    (*(void (**)(uint64_t))(*(void *)v31 + 8))(v31);
  }
  uint64_t v32 = v25[21];
  v25[21] = 0;
  if (v32) {
    (*(void (**)(uint64_t))(*(void *)v32 + 8))(v32);
  }
  uint64_t v33 = v25[20];
  v25[20] = 0;
  if (v33) {
    (*(void (**)(uint64_t))(*(void *)v33 + 8))(v33);
  }
  uint64_t v34 = v25[19];
  v25[19] = 0;
  if (v34) {
    (*(void (**)(uint64_t))(*(void *)v34 + 8))(v34);
  }
  uint64_t v35 = v25[18];
  v25[18] = 0;
  if (v35) {
    (*(void (**)(uint64_t))(*(void *)v35 + 8))(v35);
  }
  uint64_t v36 = v25[17];
  v25[17] = 0;
  if (v36) {
    (*(void (**)(uint64_t))(*(void *)v36 + 8))(v36);
  }
  uint64_t v37 = *v28;
  *unint64_t v28 = 0;
  if (v37) {
    (*(void (**)(uint64_t))(*(void *)v37 + 8))(v37);
  }
  sub_1006B7BEC(v25);
  _Unwind_Resume(a1);
}

void sub_100DFF894(uint64_t a1, int *a2, unsigned __int8 *a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022F9C48);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    unint64_t v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLUnifiedCellLocationProvider::onStatusNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022F9C48);
    }
    float v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2082;
      BOOL v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLUnifiedCellLocationProvider::onStatusNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_100E03250(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100DFFA50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DFFA70(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022F9C48);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    unint64_t v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLUnifiedCellLocationProvider::onNetworkLocationNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022F9C48);
    }
    float v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2082;
      BOOL v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLUnifiedCellLocationProvider::onNetworkLocationNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_100E03ECC((void *)a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100DFFC2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DFFC4C(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022F9C48);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    unint64_t v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLUnifiedCellLocationProvider::onClientNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022F9C48);
    }
    float v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2082;
      BOOL v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLUnifiedCellLocationProvider::onClientNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_100E02F14(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100DFFE08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100DFFE28(uint64_t a1, int *a2, unsigned char *a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022F9C48);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    unint64_t v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLUnifiedCellLocationProvider::onCompanionNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022F9C48);
    }
    float v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2082;
      BOOL v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLUnifiedCellLocationProvider::onCompanionNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_100E039AC(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100DFFFE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100E00004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022F9C48);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    unint64_t v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLUnifiedCellLocationProvider::onTileDownloadNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022F9C48);
    }
    float v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2082;
      BOOL v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLUnifiedCellLocationProvider::onTileDownloadNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_100E03948(a4, v6, v7, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100E001B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100E001D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022F9C48);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    unint64_t v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLUnifiedCellLocationProvider::onTileDownloadNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022F9C48);
    }
    float v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2082;
      BOOL v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLUnifiedCellLocationProvider::onTileDownloadNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_100E03948(a4, v6, v7, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100E0038C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100E003AC(uint64_t a1, uint64_t a2)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a2 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022F9C48);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v7 = 1;
    char v4 = _os_activity_create((void *)&_mh_execute_header, "CL: CLUnifiedCellLocationProvider::onDelayedCellPropagationTimer", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v4, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022F9C48);
    }
    int v5 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v9 = 0;
      __int16 v10 = 2082;
      char v11 = "";
      __int16 v12 = 2082;
      int v13 = "activity";
      __int16 v14 = 2050;
      uint64_t v15 = a2;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLUnifiedCellLocationProvider::onDelayedCellPropagationTimer\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v7 = 0;
  }
  sub_100E03B90(a2, a1);
  if (v7) {
    os_activity_scope_leave(&state);
  }
}

void sub_100E00560(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100E00580(uint64_t a1)
{
  if (*(char *)(a1 + 1895) < 0) {
    operator delete(*(void **)(a1 + 1872));
  }
  int v2 = *(void **)(a1 + 1640);
  if (v2)
  {
    *(void *)(a1 + 1648) = v2;
    operator delete(v2);
  }
  if (*(char *)(a1 + 1199) < 0) {
    operator delete(*(void **)(a1 + 1176));
  }
  uint64_t v3 = *(void **)(a1 + 944);
  if (v3)
  {
    *(void *)(a1 + 952) = v3;
    operator delete(v3);
  }
  if (*(char *)(a1 + 503) < 0) {
    operator delete(*(void **)(a1 + 480));
  }
  char v4 = *(void **)(a1 + 248);
  if (v4)
  {
    *(void *)(a1 + 256) = v4;
    operator delete(v4);
  }
  return a1;
}

uint64_t sub_100E00604(uint64_t a1)
{
  *(void *)a1 = off_1022F9970;
  *(void *)(a1 + 120) = off_1022F9B20;
  if (qword_1024193A0 != -1) {
    dispatch_once(&qword_1024193A0, &stru_1022F9C68);
  }
  int v2 = qword_1024193A8;
  if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "CellLoc, delete CLUnifiedCellLocationProvider", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022F9C68);
    }
    __int16 v18 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual CLUnifiedCellLocationProvider::~CLUnifiedCellLocationProvider()", "%s\n", v18);
    if (v18 != (char *)buf) {
      free(v18);
    }
  }
  uint64_t v4 = *(void *)(a1 + 2552);
  if (v4)
  {
    sub_1001B0AE4(v4);
    uint64_t v5 = *(void *)(a1 + 2552);
    if (v5)
    {
      sub_100998C38(v5);
      operator delete();
    }
    *(void *)(a1 + 2552) = 0;
  }
  nullsub_41(a1 + 2576, v3);
  for (uint64_t i = 2520; i != 2472; i -= 24)
  {
    *(void *)std::string buf = a1 + i;
    sub_1000FA7C8((void ***)buf);
  }
  *(void *)std::string buf = a1 + 2472;
  sub_1000FA7C8((void ***)buf);
  if (*(char *)(a1 + 2079) < 0) {
    operator delete(*(void **)(a1 + 2056));
  }
  char v7 = *(void **)(a1 + 1824);
  if (v7)
  {
    *(void *)(a1 + 1832) = v7;
    operator delete(v7);
  }
  if (*(char *)(a1 + 1383) < 0) {
    operator delete(*(void **)(a1 + 1360));
  }
  unint64_t v8 = *(void **)(a1 + 1128);
  if (v8)
  {
    *(void *)(a1 + 1136) = v8;
    operator delete(v8);
  }
  if (*(char *)(a1 + 687) < 0) {
    operator delete(*(void **)(a1 + 664));
  }
  int v9 = *(void **)(a1 + 432);
  if (v9)
  {
    *(void *)(a1 + 440) = v9;
    operator delete(v9);
  }
  uint64_t v10 = *(void *)(a1 + 176);
  *(void *)(a1 + 176) = 0;
  if (v10) {
    (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
  }
  uint64_t v11 = *(void *)(a1 + 168);
  *(void *)(a1 + 168) = 0;
  if (v11) {
    (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
  }
  uint64_t v12 = *(void *)(a1 + 160);
  *(void *)(a1 + 160) = 0;
  if (v12) {
    (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
  }
  uint64_t v13 = *(void *)(a1 + 152);
  *(void *)(a1 + 152) = 0;
  if (v13) {
    (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
  }
  uint64_t v14 = *(void *)(a1 + 144);
  *(void *)(a1 + 144) = 0;
  if (v14) {
    (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
  }
  uint64_t v15 = *(void *)(a1 + 136);
  *(void *)(a1 + 136) = 0;
  if (v15) {
    (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
  }
  uint64_t v16 = *(void *)(a1 + 128);
  *(void *)(a1 + 128) = 0;
  if (v16) {
    (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
  }
  sub_1006B7BEC(a1);
  return a1;
}

void sub_100E009F8(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_1001C7F8C(a1);
}

uint64_t sub_100E00A08(uint64_t a1)
{
  return sub_100E00604(a1 - 120);
}

void sub_100E00A10(uint64_t a1)
{
  sub_100E00604(a1);

  operator delete();
}

void sub_100E00A48(uint64_t a1)
{
  sub_100E00604(a1 - 120);

  operator delete();
}

NSDictionary *sub_100E00A84(uint64_t a1)
{
  v4[0] = @"na";
  v3[0] = @"name";
  v3[1] = @"clients";
  uint64_t v1 = +[NSNumber numberWithInt:*(unsigned int *)(a1 + 32)];
  v3[2] = @"daily";
  v4[1] = v1;
  _DWORD v4[2] = &off_1023934B8;
  return +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:3];
}

uint64_t sub_100E00B30(uint64_t a1, int *a2)
{
  if (qword_1024193A0 != -1) {
    dispatch_once(&qword_1024193A0, &stru_1022F9C68);
  }
  uint64_t v4 = qword_1024193A8;
  if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEBUG))
  {
    int v5 = *a2;
    *(_DWORD *)std::string buf = 67240192;
    int v17 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "CellLoc, unregisterForNotificationInternal, notification, %{public}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022F9C68);
    }
    uint64_t v13 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLUnifiedCellLocationProvider::unregisterForNotificationInternal(const CLLocationProvider_Type::Notification &)", "%s\n", v13);
    if (v13 != (char *)buf) {
      free(v13);
    }
  }
  sub_1006B7E64(a1);
  if (*a2 <= 4 && ((1 << *a2) & 0x19) != 0)
  {
    if (!sub_1000FC500(a1))
    {
      if (qword_1024193A0 != -1) {
        dispatch_once(&qword_1024193A0, &stru_1022F9C68);
      }
      uint64_t v6 = qword_1024193A8;
      if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "CellLoc, no more location-related clients - stopping telephony notifications", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193A0 != -1) {
          dispatch_once(&qword_1024193A0, &stru_1022F9C68);
        }
        uint64_t v14 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLUnifiedCellLocationProvider::unregisterForNotificationInternal(const CLLocationProvider_Type::Notification &)", "%s\n", v14);
        if (v14 != (char *)buf) {
          free(v14);
        }
      }
      uint64_t v7 = *(void *)(a1 + 136);
      sub_1000B0164(buf, @"kCellInfoNotification");
      [*(id *)(v7 + 16) unregister:*(void *)(v7 + 8) forNotification:sub_1000F1244((unsigned int *)buf)];
      uint64_t v8 = *(void *)(a1 + 136);
      sub_1000B0164(buf, @"kCellMonitorRefreshResultNotification");
      [*(id *)(v8 + 16) register:*(void *)(v8 + 8) forNotification:sub_1000F1244((unsigned int *)buf) registrationInfo:0];
      [*(id *)(*(void *)(a1 + 144) + 16) unregister:*(void *)(*(void *)(a1 + 144) + 8) forNotification:3];
      [*(id *)(*(void *)(a1 + 144) + 16) unregister:*(void *)(*(void *)(a1 + 144) + 8) forNotification:0];
    }
    if (!*a2)
    {
      *(_DWORD *)std::string buf = 0;
      if (!sub_1001072EC(a1, (int *)buf, 1) && *(double *)(a1 + 2640) > 0.0)
      {
        int v9 = (unint64_t)(2290649225 * (int)(CFAbsoluteTimeGetCurrent() - *(double *)(a1 + 2640) + 30.0)) >> 32;
        if (qword_1024193A0 != -1) {
          dispatch_once(&qword_1024193A0, &stru_1022F9C68);
        }
        int v10 = (v9 >> 5) + (v9 >> 31);
        uint64_t v11 = qword_1024193A8;
        if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)std::string buf = 67240192;
          int v17 = v10;
          _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "UclpMetric, regperiod, %{public}d", buf, 8u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024193A0 != -1) {
            dispatch_once(&qword_1024193A0, &stru_1022F9C68);
          }
          uint64_t v15 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLUnifiedCellLocationProvider::unregisterForNotificationInternal(const CLLocationProvider_Type::Notification &)", "%s\n", v15);
          if (v15 != (char *)buf) {
            free(v15);
          }
        }
        AnalyticsSendEventLazy();
      }
      *(CFAbsoluteTime *)(a1 + 2640) = CFAbsoluteTimeGetCurrent();
    }
  }
  return 1;
}

NSDictionary *sub_100E010E0(uint64_t a1)
{
  v2[1] = @"duration";
  v3[0] = @"unregister";
  v2[0] = @"trigger";
  v3[1] = +[NSNumber numberWithInt:*(unsigned int *)(a1 + 32)];
  return +[NSDictionary dictionaryWithObjects:v3 forKeys:v2 count:2];
}

uint64_t sub_100E01178(void *a1)
{
  if (qword_1024193A0 != -1) {
    dispatch_once(&qword_1024193A0, &stru_1022F9C68);
  }
  int v2 = qword_1024193A8;
  if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "CellLoc, shutdown", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022F9C68);
    }
    uint64_t v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLUnifiedCellLocationProvider::shutdown()", "%s\n", v6);
    if (v6 != (char *)buf) {
      free(v6);
    }
  }
  sub_1006B7C30((uint64_t)a1);
  uint64_t v3 = a1[16];
  a1[16] = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  uint64_t v4 = a1[17];
  a1[17] = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  uint64_t result = a1[18];
  a1[18] = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_100E013A4(uint64_t a1, int a2, int a3, int a4)
{
  uint64_t v7 = (int *)(a1 + 2576);
  CFAbsoluteTimeGetCurrent();

  sub_1001154D8(v7, a2, a3, a4);
}

uint64_t sub_100E013FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v28 = 0;
  char v29 = &v28;
  uint64_t v30 = 0x2020000000;
  char v31 = 0;
  v27[0] = _NSConcreteStackBlock;
  v27[1] = 3221225472;
  _OWORD v27[2] = sub_100E01814;
  v27[3] = &unk_1022F9BA0;
  v27[4] = &v28;
  v27[5] = a2;
  unsigned char v27[6] = a3;
  sub_10123F320((uint64_t)v27);
  if (*((unsigned char *)v29 + 24))
  {
    int v5 = 1;
  }
  else
  {
    v26[0] = _NSConcreteStackBlock;
    v26[1] = 3221225472;
    v26[2] = sub_100E018F8;
    v26[3] = &unk_1022F9BA0;
    v26[4] = &v28;
    v26[5] = a2;
    v26[6] = a3;
    sub_100D18148((uint64_t)v26);
    int v5 = *((unsigned __int8 *)v29 + 24);
  }
  int v6 = *(_DWORD *)(a3 + 96);
  if (qword_1024193A0 != -1) {
    dispatch_once(&qword_1024193A0, &stru_1022F9C68);
  }
  uint64_t v7 = qword_1024193A8;
  if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_INFO))
  {
    int v8 = *((unsigned __int8 *)v29 + 24);
    sub_10142D00C(a2);
    int v9 = SBYTE3(v36);
    int v10 = (void **)v32;
    sub_1000AB340(a3);
    uint64_t v11 = &v32;
    if (v9 < 0) {
      uint64_t v11 = v10;
    }
    if (v25 >= 0) {
      uint64_t v12 = __p;
    }
    else {
      uint64_t v12 = (void **)__p[0];
    }
    *(_DWORD *)std::string buf = 67240707;
    int v38 = v8;
    __int16 v39 = 2081;
    unint64_t v40 = v11;
    __int16 v41 = 2081;
    int v42 = v12;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "CellLoc, getCellFromTilesManager, isFound, %{public}d, cell, %{private}s, location, %{private}s", buf, 0x1Cu);
    if (v25 < 0) {
      operator delete(__p[0]);
    }
    if (SBYTE3(v36) < 0) {
      operator delete(v32);
    }
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022F9C68);
    }
    int v16 = *((unsigned __int8 *)v29 + 24);
    sub_10142D00C(a2);
    int v17 = v25;
    __int16 v18 = (void **)__p[0];
    sub_1000AB340(a3);
    uint64_t v19 = __p;
    if (v17 < 0) {
      uint64_t v19 = v18;
    }
    if (v23 >= 0) {
      int v20 = &v22;
    }
    else {
      int v20 = v22;
    }
    LODWORD(v32) = 67240707;
    HIDWORD(v32) = v16;
    __int16 v33 = 2081;
    uint64_t v34 = v19;
    __int16 v35 = 2081;
    uint64_t v36 = v20;
    int v21 = (char *)_os_log_send_and_compose_impl();
    if (v23 < 0) {
      operator delete(v22);
    }
    if (v25 < 0) {
      operator delete(__p[0]);
    }
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual CLNetworkLocationProvider::BestMatchLevel CLUnifiedCellLocationProvider::getCellFromTilesManager(const CLCell &, CLDaemonLocation &)", "%s\n", v21);
    if (v21 != (char *)buf) {
      free(v21);
    }
  }
  if (v6 == 6) {
    unsigned int v13 = 2;
  }
  else {
    unsigned int v13 = 1;
  }
  if (v5) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  _Block_object_dispose(&v28, 8);
  return v14;
}

void sub_100E017C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
}

void sub_100E01814(void *a1, uint64_t a2)
{
  sub_100E047D8((uint64_t)v27);
  int v9 = 0xFFFF;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  __asm { FMOV            V0.2D, #-1.0 }
  long long v12 = xmmword_101D1C320;
  long long v13 = _Q0;
  long long v14 = _Q0;
  long long v15 = _Q0;
  int v16 = 0;
  uint64_t v19 = 0;
  unint64_t v17 = 0xBFF0000000000000;
  uint64_t v18 = 0;
  int v20 = 0;
  unint64_t v21 = 0xBFF0000000000000;
  int v22 = 0x7FFFFFFF;
  uint64_t v25 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  char v26 = 0;
  *(unsigned char *)(*(void *)(a1[4] + 8) + 24) = sub_1012398F8(a2, a1[5], (uint64_t)&v9, (uint64_t)v27, a1[6]);
  sub_10014F400((uint64_t)v28, v28[1]);
}

void sub_100E018E0(_Unwind_Exception *a1)
{
  sub_10014F400(v2 + 16, *(char **)(v1 + 24));
  _Unwind_Resume(a1);
}

void sub_100E018F8(void *a1, uint64_t a2)
{
  sub_100E047D8((uint64_t)v27);
  int v9 = 0xFFFF;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  __asm { FMOV            V0.2D, #-1.0 }
  long long v12 = xmmword_101D1C320;
  long long v13 = _Q0;
  long long v14 = _Q0;
  long long v15 = _Q0;
  int v16 = 0;
  uint64_t v19 = 0;
  unint64_t v17 = 0xBFF0000000000000;
  uint64_t v18 = 0;
  int v20 = 0;
  unint64_t v21 = 0xBFF0000000000000;
  int v22 = 0x7FFFFFFF;
  uint64_t v25 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  char v26 = 0;
  *(unsigned char *)(*(void *)(a1[4] + 8) + 24) = sub_100D15A34(a2, a1[5], (uint64_t)&v9, (uint64_t)v27, a1[6]);
  sub_10014F400((uint64_t)v28, v28[1]);
}

void sub_100E019C4(_Unwind_Exception *a1)
{
  sub_10014F400(v2 + 16, *(char **)(v1 + 24));
  _Unwind_Resume(a1);
}

id sub_100E019E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = [[[*(id *)(a1 + 32) vendor] proxyForService:@"CLNetworkLocationProvider"];

  return [v5 syncgetBestMatchLocation:a3 forCell:a2];
}

void sub_100E01A30(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + 120;
  nullsub_41(a1 + 184, a2);
  CFAbsoluteTimeGetCurrent();

  sub_100108F10(v2);
}

BOOL sub_100E01A90(uint64_t a1)
{
  int v2 = 0;
  return sub_1001072EC(a1, &v2, 1) != 0;
}

BOOL sub_100E01AC4(uint64_t a1)
{
  int v2 = 0;
  return sub_1001072EC(a1 - 120, &v2, 1) != 0;
}

uint64_t sub_100E01AFC(uint64_t a1, uint64_t a2)
{
  int v3 = 0;
  return (*(uint64_t (**)(uint64_t, int *, uint64_t, void, uint64_t, void))(*(void *)a1 + 152))(a1, &v3, a2, 0, 0xFFFFFFFFLL, 0);
}

double sub_100E01B54(uint64_t a1, uint64_t a2)
{
  if (qword_1024193A0 != -1) {
    dispatch_once(&qword_1024193A0, &stru_1022F9C68);
  }
  uint64_t v4 = qword_1024193A8;
  if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::string buf = 136446210;
    uint64_t v8 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "@ClxCell, Fix, 0, ll, N/A, %{public}s", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022F9C68);
    }
    int v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLUnifiedCellLocationProvider::handleLocationFailed(const char *)", "%s\n", v6);
    if (v6 != (char *)buf) {
      free(v6);
    }
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 368))(a1, a2);
  *(_DWORD *)std::string buf = 9;
  (*(void (**)(uint64_t, uint8_t *, uint64_t, uint64_t))(*(void *)a1 + 144))(a1, buf, 1, 0xFFFFFFFFLL);
  return sub_100543928(a1 + 184);
}

double sub_100E01D80(uint64_t a1, uint64_t a2)
{
  return sub_100E01B54(a1 - 120, a2);
}

uint64_t sub_100E01D88(uint64_t a1)
{
  if (*(void *)(a1 + 2472) == *(void *)(a1 + 2480))
  {
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022F9C68);
    }
    uint64_t v36 = qword_1024193A8;
    if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long __p = 0;
      _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEFAULT, "CellQuery, skip, empty", __p, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_1024193A0 != -1) {
        dispatch_once(&qword_1024193A0, &stru_1022F9C68);
      }
      *(_WORD *)int v50 = 0;
      __int16 v41 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLUnifiedCellLocationProvider::queryCellLocations()", "%s\n", v41);
      if (v41 != __p) {
        free(v41);
      }
    }
    return 0;
  }
  else
  {
    uint64_t v43 = 0;
    unint64_t v44 = 0;
    unint64_t v45 = 0;
    double Current = CFAbsoluteTimeGetCurrent();
    uint64_t v3 = *(void *)(a1 + 2472);
    uint64_t v4 = *(void *)(a1 + 2480);
    id v5 = &qword_102419000;
    if (v3 != v4)
    {
      double v6 = Current;
      __asm { FMOV            V0.2D, #-1.0 }
      long long v42 = _Q0;
      while ((sub_10068EDA0(v3) & 1) != 0)
      {
        if (!sub_100114284(*(_DWORD *)(v3 + 8)))
        {
          if (qword_1024193A0 != -1) {
            dispatch_once(&qword_1024193A0, &stru_1022F9C68);
          }
          unint64_t v21 = v5[117];
          if (os_log_type_enabled(v21, OS_LOG_TYPE_DEBUG))
          {
            sub_10142D00C(v3);
            int v22 = __p;
            if (v69[9] < 0) {
              int v22 = *(unsigned char **)__p;
            }
            *(_DWORD *)int v50 = 136380675;
            *(void *)&v50[4] = v22;
            _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEBUG, "CellQuery, ignore, unqueirable, %{private}s", v50, 0xCu);
            if ((v69[9] & 0x80000000) != 0) {
              operator delete(*(void **)__p);
            }
          }
          if (!sub_10013D1A0(115, 2)) {
            goto LABEL_75;
          }
          bzero(__p, 0x65CuLL);
          if (qword_1024193A0 != -1) {
            dispatch_once(&qword_1024193A0, &stru_1022F9C68);
          }
          sub_10142D00C(v3);
          uint64_t v23 = v50;
          if (SBYTE3(v52) < 0) {
            uint64_t v23 = *(unsigned char **)v50;
          }
          *(_DWORD *)std::string buf = 136380675;
          *(void *)&uint8_t buf[4] = v23;
          unint64_t v17 = (char *)_os_log_send_and_compose_impl();
          if (SBYTE3(v52) < 0) {
            operator delete(*(void **)v50);
          }
          goto LABEL_51;
        }
        *(_DWORD *)int v50 = 0xFFFF;
        *(void *)&v50[4] = 0;
        uint64_t v51 = 0;
        long long v52 = xmmword_101D1C320;
        long long v53 = v42;
        long long v54 = v42;
        long long v55 = v42;
        int v56 = 0;
        unint64_t v57 = 0xBFF0000000000000;
        uint64_t v58 = 0;
        uint64_t v59 = 0;
        int v60 = 0;
        unint64_t v61 = 0xBFF0000000000000;
        int v62 = 0x7FFFFFFF;
        uint64_t v64 = 0;
        uint64_t v65 = 0;
        uint64_t v63 = 0;
        char v66 = 0;
        int v12 = [objc_msgSend(*(id *)(a1 + 32), "vendor") proxyForService:@"CLNetworkLocationProvider"] syncgetBestMatchLocation:v50 forCell:v3];
        if (v12 < 3)
        {
          if (v6 - *((double *)&v55 + 1) > 28800.0)
          {
            if (qword_1024193A0 != -1) {
              dispatch_once(&qword_1024193A0, &stru_1022F9C68);
            }
            uint64_t v24 = v5[117];
            if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
            {
              sub_10142D00C(v3);
              uint64_t v25 = __p;
              if (v69[9] < 0) {
                uint64_t v25 = *(unsigned char **)__p;
              }
              *(_DWORD *)std::string buf = 136380675;
              *(void *)&uint8_t buf[4] = v25;
              _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_INFO, "CellQuery, query, %{private}s", buf, 0xCu);
              if ((v69[9] & 0x80000000) != 0) {
                operator delete(*(void **)__p);
              }
            }
            if (sub_10013D1A0(115, 2))
            {
              bzero(__p, 0x65CuLL);
              if (qword_1024193A0 != -1) {
                dispatch_once(&qword_1024193A0, &stru_1022F9C68);
              }
              sub_10142D00C(v3);
              char v29 = buf;
              if (v47 < 0) {
                char v29 = *(unsigned char **)buf;
              }
              int v48 = 136380675;
              v49[0] = v29;
              uint64_t v30 = (char *)_os_log_send_and_compose_impl();
              if (v47 < 0) {
                operator delete(*(void **)buf);
              }
              sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLUnifiedCellLocationProvider::queryCellLocations()", "%s\n", v30);
              if (v30 != __p) {
                free(v30);
              }
            }
            unint64_t v26 = v44;
            if (v44 >= v45)
            {
              uint64_t v27 = sub_1005630D0(&v43, v3);
            }
            else
            {
              sub_1000FC2C4((uint64_t)&v45, v44, v3);
              uint64_t v27 = v26 + 696;
            }
            unint64_t v44 = v27;
            goto LABEL_75;
          }
          if (qword_1024193A0 != -1) {
            dispatch_once(&qword_1024193A0, &stru_1022F9C68);
          }
          uint64_t v28 = v5[117];
          if (os_log_type_enabled(v28, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)long long __p = 134349313;
            *(double *)&__p[4] = v6 - *((double *)&v55 + 1);
            __int16 v68 = 2049;
            *(void *)__int16 v69 = 0x40DC200000000000;
            _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEBUG, "CellQuery, ignore, fresh, %{public}.1f, %{private}.1f", __p, 0x16u);
          }
          if (!sub_10013D1A0(115, 2)) {
            goto LABEL_75;
          }
          bzero(__p, 0x65CuLL);
          if (qword_1024193A0 != -1) {
            dispatch_once(&qword_1024193A0, &stru_1022F9C68);
          }
          *(_DWORD *)std::string buf = 134349313;
          *(double *)&uint8_t buf[4] = v6 - *((double *)&v55 + 1);
          *(_WORD *)&unsigned char buf[12] = 2049;
          *(void *)&unsigned char buf[14] = 0x40DC200000000000;
          unint64_t v17 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLUnifiedCellLocationProvider::queryCellLocations()", "%s\n", v17);
        }
        else
        {
          if (qword_1024193A0 != -1) {
            dispatch_once(&qword_1024193A0, &stru_1022F9C68);
          }
          long long v13 = v5;
          long long v14 = v5[117];
          if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
          {
            sub_10142D00C(v3);
            long long v15 = __p;
            if (v69[9] < 0) {
              long long v15 = *(unsigned char **)__p;
            }
            *(_DWORD *)std::string buf = 67240451;
            *(_DWORD *)&uint8_t buf[4] = v12;
            *(_WORD *)&uint8_t buf[8] = 2081;
            *(void *)&buf[10] = v15;
            _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "CellQuery, ignore, matched, %{public}d, %{private}s", buf, 0x12u);
            if ((v69[9] & 0x80000000) != 0) {
              operator delete(*(void **)__p);
            }
          }
          id v5 = v13;
          if (!sub_10013D1A0(115, 2)) {
            goto LABEL_75;
          }
          bzero(__p, 0x65CuLL);
          if (qword_1024193A0 != -1) {
            dispatch_once(&qword_1024193A0, &stru_1022F9C68);
          }
          sub_10142D00C(v3);
          int v16 = buf;
          if (v47 < 0) {
            int v16 = *(unsigned char **)buf;
          }
          int v48 = 67240451;
          LODWORD(v49[0]) = v12;
          WORD2(v49[0]) = 2081;
          *(void *)((char *)v49 + 6) = v16;
          unint64_t v17 = (char *)_os_log_send_and_compose_impl();
          if (v47 < 0) {
            operator delete(*(void **)buf);
          }
          sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLUnifiedCellLocationProvider::queryCellLocations()", "%s\n", v17);
          id v5 = v13;
        }
LABEL_52:
        if (v17 != __p) {
          free(v17);
        }
LABEL_75:
        v3 += 696;
        if (v3 == v4) {
          goto LABEL_85;
        }
      }
      if (qword_1024193A0 != -1) {
        dispatch_once(&qword_1024193A0, &stru_1022F9C68);
      }
      uint64_t v18 = v5[117];
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        sub_10142D00C(v3);
        uint64_t v19 = __p;
        if (v69[9] < 0) {
          uint64_t v19 = *(unsigned char **)__p;
        }
        *(_DWORD *)int v50 = 136446210;
        *(void *)&v50[4] = v19;
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "CellQuery, skip, invalid cell, %{public}s, #CloneMe", v50, 0xCu);
        if ((v69[9] & 0x80000000) != 0) {
          operator delete(*(void **)__p);
        }
      }
      if (!sub_10013D1A0(115, 2)) {
        goto LABEL_75;
      }
      bzero(__p, 0x65CuLL);
      if (qword_1024193A0 != -1) {
        dispatch_once(&qword_1024193A0, &stru_1022F9C68);
      }
      sub_10142D00C(v3);
      int v20 = v50;
      if (SBYTE3(v52) < 0) {
        int v20 = *(unsigned char **)v50;
      }
      *(_DWORD *)std::string buf = 136446210;
      *(void *)&uint8_t buf[4] = v20;
      unint64_t v17 = (char *)_os_log_send_and_compose_impl();
      if (SBYTE3(v52) < 0) {
        operator delete(*(void **)v50);
      }
LABEL_51:
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLUnifiedCellLocationProvider::queryCellLocations()", "%s\n", v17);
      goto LABEL_52;
    }
LABEL_85:
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022F9C68);
    }
    char v31 = v5[117];
    if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
    {
      int v32 = *(_DWORD *)(a1 + 2568);
      int v33 = *(unsigned __int8 *)(a1 + 2572);
      *(_DWORD *)long long __p = 134349568;
      *(void *)&__p[4] = 0x66FD0EB66FD0EB67 * ((uint64_t)(v44 - v43) >> 3);
      __int16 v68 = 1026;
      *(_DWORD *)__int16 v69 = v32;
      *(_WORD *)&v69[4] = 1026;
      *(_DWORD *)&v69[6] = v33;
      _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "CellFlow, alsquery, num, %{public}lu, reach, %{public}d, nearby, %{public}d", __p, 0x18u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_1024193A0 != -1) {
        dispatch_once(&qword_1024193A0, &stru_1022F9C68);
      }
      int v38 = *(_DWORD *)(a1 + 2568);
      int v39 = *(unsigned __int8 *)(a1 + 2572);
      *(_DWORD *)int v50 = 134349568;
      *(void *)&v50[4] = 0x66FD0EB66FD0EB67 * ((uint64_t)(v44 - v43) >> 3);
      LOWORD(v51) = 1026;
      *(_DWORD *)((char *)&v51 + 2) = v38;
      HIWORD(v51) = 1026;
      LODWORD(v52) = v39;
      unint64_t v40 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLUnifiedCellLocationProvider::queryCellLocations()", "%s\n", v40);
      if (v40 != __p) {
        free(v40);
      }
    }
    if (v44 != v43 && (*(_DWORD *)(a1 + 2568) || *(unsigned char *)(a1 + 2572)))
    {
      id v34 = [[[*(id *)(a1 + 32) vendor] proxyForService:@"CLNetworkLocationProvider"];
      uint64_t v35 = 1;
      [v34 syncgetQueryLocationsForCells:&v43 useCache:1];
    }
    else
    {
      uint64_t v35 = 0;
    }
    *(void *)long long __p = &v43;
    sub_1000FA7C8((void ***)__p);
  }
  return v35;
}

void sub_100E02AC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,void **a57)
{
  a57 = (void **)&a26;
  sub_1000FA7C8(&a57);
  _Unwind_Resume(a1);
}

uint64_t sub_100E02B3C(uint64_t a1)
{
  return sub_100E01D88(a1 - 120);
}

id sub_100E02B44(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  id v9 = [[objc_msgSend(*(id *)(a1 + 32), "vendor") proxyForService:@"CLCellTilesManager"];

  return _[v9 requestCellTileDownloadByType:a2 lat:a3 lon:a4 seckey:a5];
}

void sub_100E02BAC(uint64_t a1, uint64_t a2)
{
  if (qword_1024193A0 != -1) {
    dispatch_once(&qword_1024193A0, &stru_1022F9C68);
  }
  uint64_t v4 = qword_1024193A8;
  if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::string buf = 136446210;
    *(void *)&uint8_t buf[4] = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "CellFlow, requestWifiLocationUpdate, reason, %{public}s", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022F9C68);
    }
    int v20 = 136446210;
    uint64_t v21 = a2;
    uint64_t v7 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLUnifiedCellLocationProvider::requestWiFiLocationUpdate(const char *)", "%s\n", v7);
    if (v7 != buf) {
      free(v7);
    }
  }
  double Current = CFAbsoluteTimeGetCurrent();
  sub_100134750(__p, "uclp");
  sub_1006D30DC(buf, 4, 1, __p, Current);
  if (v19 < 0) {
    operator delete(__p[0]);
  }
  id v6 = [objc_msgSend(*(id *)(a1 + 32), "vendor") proxyForService:@"CLWifiLocationProvider"];
  uint64_t v8 = *(void *)buf;
  char v9 = buf[8];
  if (SHIBYTE(v24) < 0)
  {
    sub_1000DC48C(&v10, (void *)v23, *((unint64_t *)&v23 + 1));
  }
  else
  {
    long long v10 = v23;
    uint64_t v11 = v24;
  }
  long long v13 = v26;
  long long v14 = v27;
  v15[0] = v28[0];
  *(_OWORD *)((char *)v15 + 12) = *(_OWORD *)((char *)v28 + 12);
  long long v12 = v25;
  if (SHIBYTE(v30) < 0)
  {
    sub_1000DC48C(&v16, (void *)v29, *((unint64_t *)&v29 + 1));
  }
  else
  {
    long long v16 = v29;
    uint64_t v17 = v30;
  }
  [v6 requestLocationUpdateWithParameters:sub_1005DD244((uint64_t)&v8)];
  if (SHIBYTE(v17) < 0) {
    operator delete((void *)v16);
  }
  if (SHIBYTE(v11) < 0) {
    operator delete((void *)v10);
  }
  if (SHIBYTE(v30) < 0) {
    operator delete((void *)v29);
  }
  if (SHIBYTE(v24) < 0) {
    operator delete((void *)v23);
  }
}

void sub_100E02EB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,uint64_t a40,char a41)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  sub_10050EC2C((uint64_t)&a41);
  _Unwind_Resume(a1);
}

void sub_100E02F0C(uint64_t a1, uint64_t a2)
{
}

void sub_100E02F14(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  if (*a3 == 4)
  {
    if (*(_DWORD *)(a4 + 188) != 1)
    {
      if (qword_1024193A0 != -1) {
        dispatch_once(&qword_1024193A0, &stru_1022F9C68);
      }
      uint64_t v8 = qword_1024193A8;
      if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Cell, kNotificationLocationServicesStatus", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193A0 != -1) {
          dispatch_once(&qword_1024193A0, &stru_1022F9C68);
        }
        long long v10 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLUnifiedCellLocationProvider::onClientNotification(int, const CLClientManager_Type::Notification &, const CLClientManager_Type::NotificationData &)", "%s\n", v10);
        if (v10 != (char *)buf) {
          free(v10);
        }
      }
      sub_10054478C(a1 + 184);
    }
  }
  else if (!*a3)
  {
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022F9C68);
    }
    id v5 = qword_1024193A8;
    if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Cell, kNotificationReset", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193A0 != -1) {
        dispatch_once(&qword_1024193A0, &stru_1022F9C68);
      }
      char v9 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLUnifiedCellLocationProvider::onClientNotification(int, const CLClientManager_Type::Notification &, const CLClientManager_Type::NotificationData &)", "%s\n", v9);
      if (v9 != (char *)buf) {
        free(v9);
      }
    }
    sub_10054478C(a1 + 184);
    id v6 = [[objc_msgSend(*(id *)(a1 + 32), "vendor") proxyForService:@"CLClientManager"];
    if (byte_10248187F >= 0) {
      uint64_t v7 = &qword_102481868;
    }
    else {
      uint64_t v7 = (uint64_t *)qword_102481868;
    }
    [v6 resetNotificationConsumedForIdentifier:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v7)];
  }
}

void sub_100E03250(uint64_t a1, uint64_t a2, int *a3, unsigned __int8 *a4)
{
  int v5 = *a3;
  if (*a3 > 7)
  {
    if (v5 == 8)
    {
      int v17 = *a4;
      uint64_t v18 = a1 + 184;
      sub_100543CF8(v18, v17);
    }
    else if (v5 == 16)
    {
      if (qword_1024193A0 != -1) {
        dispatch_once(&qword_1024193A0, &stru_1022F9C68);
      }
      id v6 = qword_1024193A8;
      if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEBUG))
      {
        int v7 = *(_DWORD *)(a1 + 2616);
        int v8 = *(_DWORD *)(a1 + 2620);
        int v9 = *(_DWORD *)(a1 + 2624);
        int v10 = *(_DWORD *)(a1 + 2628);
        *(_DWORD *)std::string buf = 67240960;
        int v22 = v7;
        __int16 v23 = 1026;
        int v24 = v8;
        __int16 v25 = 1026;
        int v26 = v9;
        __int16 v27 = 1026;
        int v28 = v10;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "UclpMetric, heartbeat, registrants, %{public}d, requests, %{public}d, infonotify, %{public}d, monitor, %{public}d", buf, 0x1Au);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193A0 != -1) {
          dispatch_once(&qword_1024193A0, &stru_1022F9C68);
        }
        char v19 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLUnifiedCellLocationProvider::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v19);
        if (v19 != (char *)buf) {
          free(v19);
        }
      }
      AnalyticsSendEventLazy();
      *(_OWORD *)(a1 + 2616) = 0u;
      sub_1006156BC((int *)(a1 + 2576));
      sub_1006156AC(a1 + 2576);
      *(_DWORD *)std::string buf = 0;
      if (sub_1001072EC(a1, (int *)buf, 1) && *(double *)(a1 + 2640) > 0.0)
      {
        int v11 = (unint64_t)(2290649225 * (int)(CFAbsoluteTimeGetCurrent() - *(double *)(a1 + 2640) + 30.0)) >> 32;
        if (qword_1024193A0 != -1) {
          dispatch_once(&qword_1024193A0, &stru_1022F9C68);
        }
        int v12 = (v11 >> 5) + (v11 >> 31);
        long long v13 = qword_1024193A8;
        if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)std::string buf = 67240192;
          int v22 = v12;
          _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "UclpMetric, regperiod, %{public}d", buf, 8u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024193A0 != -1) {
            dispatch_once(&qword_1024193A0, &stru_1022F9C68);
          }
          int v20 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLUnifiedCellLocationProvider::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v20);
          if (v20 != (char *)buf) {
            free(v20);
          }
        }
        AnalyticsSendEventLazy();
      }
    }
  }
  else if (v5 == 3)
  {
    if (sub_1000FC500(a1))
    {
      v14.n128_f64[0] = CFAbsoluteTimeGetCurrent();
      long long v15 = *(void (**)(uint64_t, const char *, __n128, __n128))(*(void *)a1 + 312);
      v16.n128_u64[0] = 2.0;
      v15(a1, "wake", v14, v16);
    }
  }
  else if (v5 == 6)
  {
    *(_DWORD *)(a1 + 2568) = *((_DWORD *)a4 + 1);
  }
}

NSDictionary *sub_100E037D0(uint64_t a1)
{
  uint64_t v1 = *(unsigned int **)(a1 + 32);
  v3[0] = @"registrants";
  v4[0] = +[NSNumber numberWithInt:v1[654]];
  v3[1] = @"requests";
  v4[1] = +[NSNumber numberWithInt:v1[655]];
  void v3[2] = @"infonotify";
  _DWORD v4[2] = +[NSNumber numberWithInt:v1[656]];
  void v3[3] = @"monitor";
  void v4[3] = +[NSNumber numberWithInt:v1[657]];
  return +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:4];
}

NSDictionary *sub_100E038B0(uint64_t a1)
{
  v2[1] = @"duration";
  v3[0] = @"heartbeat";
  v2[0] = @"trigger";
  v3[1] = +[NSNumber numberWithInt:*(unsigned int *)(a1 + 32)];
  return +[NSDictionary dictionaryWithObjects:v3 forKeys:v2 count:2];
}

void sub_100E03948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4 = *(_DWORD *)(a4 + 80);
  if (v4)
  {
    int v5 = (_DWORD *)(a1 + 2576);
    int v6 = *(unsigned __int8 *)(a4 + 84);
    CFAbsoluteTimeGetCurrent();
    sub_100615F90(v5, v6, v4);
  }
}

void sub_100E039AC(uint64_t a1, uint64_t a2, int *a3, unsigned char *a4)
{
  if (qword_1024193A0 != -1) {
    dispatch_once(&qword_1024193A0, &stru_1022F9C68);
  }
  int v7 = qword_1024193A8;
  if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEBUG))
  {
    int v8 = *a3;
    *(_DWORD *)std::string buf = 67240192;
    int v11 = v8;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "CellLoc, onCompanionNotification, notification, %{public}d, Tiles", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022F9C68);
    }
    int v9 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLUnifiedCellLocationProvider::onCompanionNotification(int, const CLCompanionNotifier_Type::Notification &, const CLCompanionNotifier_Type::NotificationData &)", "%s\n", v9);
    if (v9 != (char *)buf) {
      free(v9);
    }
  }
  if (*a3 == 5)
  {
    sub_100103240();
    if (sub_10010145C()) {
      *(unsigned char *)(a1 + 2572) = *a4;
    }
  }
}

void sub_100E03B90(uint64_t a1, uint64_t a2)
{
  if (a2 && *(void *)(a1 + 2552) == a2)
  {
    if (sub_1000FC500(a1))
    {
      int v4 = *(const char **)(a1 + 2560);
      sub_10000EBE4(a1, v4);
    }
    else
    {
      if (qword_1024193A0 != -1) {
        dispatch_once(&qword_1024193A0, &stru_1022F9C68);
      }
      int v5 = qword_1024193A8;
      if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "CellFlow, timer, cancel, -1", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193A0 != -1) {
          dispatch_once(&qword_1024193A0, &stru_1022F9C68);
        }
        int v7 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLUnifiedCellLocationProvider::onDelayedCellPropagationTimer(CLPersistentTimer *)", "%s\n", v7);
        if (v7 != (char *)buf) {
          free(v7);
        }
      }
      sub_1001165F8(*(void *)(a1 + 2552), 1.79769313e308);
    }
  }
  else
  {
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022F9C68);
    }
    uint64_t v3 = qword_1024193A8;
    if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "CellLoc, ignore timer", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193A0 != -1) {
        dispatch_once(&qword_1024193A0, &stru_1022F9C68);
      }
      int v6 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLUnifiedCellLocationProvider::onDelayedCellPropagationTimer(CLPersistentTimer *)", "%s\n", v6);
      if (v6 != (char *)buf) {
        free(v6);
      }
    }
  }
}

void sub_100E03ECC(void *a1, uint64_t a2, int *a3, uint64_t a4)
{
  if (qword_1024193A0 != -1) {
    dispatch_once(&qword_1024193A0, &stru_1022F9C68);
  }
  int v7 = qword_1024193A8;
  if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = *a3;
    *(_DWORD *)std::string buf = 67240192;
    LODWORD(v25) = v8;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "CellQuery, notify, %{public}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022F9C68);
    }
    int v20 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLUnifiedCellLocationProvider::onNetworkLocationNotification(int, const CLNetworkLocationProvider_Type::Notification &, const CLNetworkLocationProvider_Type::NotificationData &)", "%s\n", v20);
    if (v20 != (char *)buf) {
      free(v20);
    }
  }
  uint64_t v9 = sub_100543CE8((uint64_t)(a1 + 23));
  uint64_t v11 = nullsub_41(a1 + 23, v10);
  if (*a3)
  {
    if (*a3 == 3)
    {
      uint64_t v12 = v11;
      if (*(double *)(v11 + 20) < 0.0 || (uint64_t v13 = a1[309], v13 == a1[310]) || sub_10142E1E8(v13, v9))
      {
        if (qword_1024193A0 != -1) {
          dispatch_once(&qword_1024193A0, &stru_1022F9C68);
        }
        __n128 v14 = qword_1024193A8;
        if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v15 = *(void *)(v12 + 20);
          BOOL v16 = a1[309] == a1[310];
          *(_DWORD *)std::string buf = 134349312;
          uint64_t v25 = v15;
          __int16 v26 = 1026;
          BOOL v27 = v16;
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "CellQuery, fail, acc, %{public}.1f, empty, %{public}d", buf, 0x12u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024193A0 != -1) {
            dispatch_once(&qword_1024193A0, &stru_1022F9C68);
          }
          uint64_t v21 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLUnifiedCellLocationProvider::onNetworkLocationNotification(int, const CLNetworkLocationProvider_Type::Notification &, const CLNetworkLocationProvider_Type::NotificationData &)", "%s\n", v21);
          if (v21 != (char *)buf) {
            free(v21);
          }
        }
        (*(void (**)(void *, const char *))(*a1 + 384))(a1, "alserror");
        CFAbsoluteTimeGetCurrent();
        sub_100615DB4((uint64_t)(a1 + 322), 0);
      }
    }
  }
  else if (sub_1000FC500((uint64_t)a1))
  {
    int v17 = *(_DWORD *)(a4 + 8);
    CFAbsoluteTimeGetCurrent();
    sub_100615DB4((uint64_t)(a1 + 322), v17);
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022F9C68);
    }
    uint64_t v18 = qword_1024193A8;
    if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "CellQuery, response", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193A0 != -1) {
        dispatch_once(&qword_1024193A0, &stru_1022F9C68);
      }
      int v22 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLUnifiedCellLocationProvider::onNetworkLocationNotification(int, const CLNetworkLocationProvider_Type::Notification &, const CLNetworkLocationProvider_Type::NotificationData &)", "%s\n", v22);
      if (v22 != (char *)buf) {
        free(v22);
      }
    }
    sub_100E01A30((uint64_t)a1, (uint64_t)"als");
  }
  else
  {
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022F9C68);
    }
    char v19 = qword_1024193A8;
    if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "CellQuery, no client", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193A0 != -1) {
        dispatch_once(&qword_1024193A0, &stru_1022F9C68);
      }
      __int16 v23 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLUnifiedCellLocationProvider::onNetworkLocationNotification(int, const CLNetworkLocationProvider_Type::Notification &, const CLNetworkLocationProvider_Type::NotificationData &)", "%s\n", v23);
      if (v23 != (char *)buf) {
        free(v23);
      }
    }
  }
}

void sub_100E0453C()
{
}

void sub_100E045F4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete();
}

void sub_100E04630()
{
}

void sub_100E046F0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete();
}

id sub_100E0472C(uint64_t a1)
{
  id v2 = [+[CLServiceVendor sharedInstance] proxyForService:@"CLUnifiedCellLocationProvider"];

  return [v2 syncgetDoSync:a1];
}

void sub_100E04778(id a1)
{
  qword_102419588 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_100E047A8(id a1)
{
  qword_1024193A8 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

uint64_t sub_100E047D8(uint64_t a1)
{
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 8) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 16) = a1 + 24;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = clock();
  *(void *)(a1 + 48) = clock();
  return a1;
}

void sub_100E04830(_Unwind_Exception *a1)
{
  sub_10014F400(v1, *v2);
  _Unwind_Resume(a1);
}

void sub_100E04848()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241AD20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10241AD20))
  {
    qword_10241AD08 = 0;
    qword_10241AD10 = 0;
    qword_10241AD18 = 0;
    __cxa_atexit((void (*)(void *))sub_1003BE920, &qword_10241AD08, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10241AD20);
  }
}

void sub_100E048C8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241ADD0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10241ADD0))
  {
    std::__shared_mutex_base::__shared_mutex_base(&stru_10241AD28);
    __cxa_atexit((void (*)(void *))sub_1003BE954, &stru_10241AD28, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10241ADD0);
  }
}

void sub_100E04958(_Unwind_Exception *a1)
{
}

uint64_t sub_100E04970()
{
  sub_100134750(qword_102481850, "t");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_102481850, (void *)&_mh_execute_header);
  sub_100134750(&qword_102481868, "UnifiedCellLocationProvider");

  return __cxa_atexit((void (*)(void *))&std::string::~string, &qword_102481868, (void *)&_mh_execute_header);
}

void sub_100E04AB8(id a1)
{
  qword_1024818A8 = (uint64_t)[objc_alloc((Class)CLDispatchSilo) initWithIdentifier:@"CLNoMovementServiceSilo"];
}

void sub_100E04B78(id a1)
{
  if (sub_10010145C()) {
    byte_1024818B8 = 1;
  }
}

void sub_100E0504C()
{
}

id sub_100E05094(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return _[a4 onWatchOrientationSettingsNotification:a2 data:a3];
}

id sub_100E050A4(uint64_t a1, void *a2)
{
  return _[a2 onDeviceMotionData:a1];
}

uint64_t sub_100E050B0(uint64_t a1, unsigned int *a2, uint64_t a3, void *a4)
{
  uint64_t v6 = *a2;
  sub_1004CE794(v8);
  uint64_t v9 = *(void *)(a3 + 16);
  [a4 onMobileAssetNotification:v6 data:v8];
  return sub_10013F3C4(v8);
}

void sub_100E05114(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10013F3C4(va);
  _Unwind_Resume(a1);
}

void sub_100E064AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100E066C0(id a1)
{
  qword_102419348 = (uint64_t)os_log_create("com.apple.locationd.Motion", "CheckIn");
}

uint64_t sub_100E066F0()
{
  if (sub_10120E064()) {
    return 1;
  }

  return sub_100E06728();
}

uint64_t sub_100E06728()
{
  sub_1000C7F88(buf);
  uint64_t v0 = *(void *)buf;
  sub_100103240();
  unsigned int v1 = sub_10073E30C();
  LOBYTE(v6[0]) = 0;
  if (sub_1000D2988(v0, "EnableRavenRecorder", (BOOL *)v6)) {
    uint64_t v2 = LOBYTE(v6[0]) != 0;
  }
  else {
    uint64_t v2 = v1;
  }
  if (v8) {
    sub_1000DB0A0(v8);
  }
  if (qword_102419400 != -1) {
    dispatch_once(&qword_102419400, &stru_1022F9D20);
  }
  uint64_t v3 = qword_102419408;
  if (os_log_type_enabled((os_log_t)qword_102419408, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::string buf = 67240192;
    *(_DWORD *)&uint8_t buf[4] = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Raven: EnableRavenRecorder,%{public}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419400 != -1) {
      dispatch_once(&qword_102419400, &stru_1022F9D20);
    }
    v6[0] = 67240192;
    v6[1] = v2;
    int v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "static BOOL CLRavenSerializer::isDiskEnabled()", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
  return v2;
}

void sub_100E06928(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
}

uint64_t sub_100E06948@<X0>(std::string *a1@<X8>)
{
  uint64_t v2 = (std::string *)sub_10042885C((uint64_t)a1);
  std::string::assign(v2, "raven");
  sub_1000C7F88(buf);
  v14[0] = 0;
  int v3 = sub_1000D2988(*(uint64_t *)buf, "WriteRavenLogsToCrashReporterFolder", v14);
  if (v14[0]) {
    int v4 = v3;
  }
  else {
    int v4 = 0;
  }
  if (v16) {
    sub_1000DB0A0(v16);
  }
  sub_1000C7F88(buf);
  v14[0] = 0;
  int v5 = sub_1000D2988(*(uint64_t *)buf, "WriteLocationdLogsToCrashReporterFolder", v14);
  if (v14[0]) {
    int v6 = v5;
  }
  else {
    int v6 = 0;
  }
  int v7 = v4 | v6;
  if (v16) {
    sub_1000DB0A0(v16);
  }
  if (v7) {
    int v8 = "/var/mobile/Library/Logs/CrashReporter/raven";
  }
  else {
    int v8 = "/var/mobile/Library/Logs/raven";
  }
  std::string::assign(a1 + 2, v8);
  sub_1000C7F88(buf);
  v14[0] = 0;
  int v9 = sub_1000D2988(*(uint64_t *)buf, "EnableLargeRavenLogs", v14);
  if (v14[0]) {
    int v10 = v9;
  }
  else {
    int v10 = 0;
  }
  if (v16) {
    sub_1000DB0A0(v16);
  }
  if (v10)
  {
    if (qword_102419400 != -1) {
      dispatch_once(&qword_102419400, &stru_1022F9D20);
    }
    uint64_t v11 = qword_102419408;
    if (os_log_type_enabled((os_log_t)qword_102419408, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "EnableLargeRavenLogs is set", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419400 != -1) {
        dispatch_once(&qword_102419400, &stru_1022F9D20);
      }
      *(_WORD *)__n128 v14 = 0;
      uint64_t v13 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "static CLProtobufSerializer::Config CLRavenSerializer::generateConfig()", "%s\n", v13);
      if (v13 != (char *)buf) {
        free(v13);
      }
    }
    a1[4].__r_.__value_.__l.__size_ *= 16;
  }
  a1[4].__r_.__value_.__s.__data_[21] = sub_10120E064();
  uint64_t result = sub_100E06728();
  a1[4].__r_.__value_.__s.__data_[22] = result;
  return result;
}

void sub_100E06BE8(_Unwind_Exception *a1)
{
  sub_1004284E0(v1);
  _Unwind_Resume(a1);
}

void *sub_100E06C30(void *a1)
{
  sub_100E06948(&v3);
  sub_10120E0E0((uint64_t)a1, (long long *)&v3);
  if (v9 < 0) {
    operator delete(__p);
  }
  if (v7 < 0) {
    operator delete(v6);
  }
  if (v5 < 0) {
    operator delete(v4);
  }
  if (SHIBYTE(v3.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v3.__r_.__value_.__l.__data_);
  }
  *a1 = off_1022F9CF8;
  return a1;
}

void sub_100E06CCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100E06CE8(uint64_t a1)
{
  sub_10120EB2C(a1);

  operator delete();
}

void sub_100E06D20(id a1)
{
  qword_102419408 = (uint64_t)os_log_create("com.apple.locationd.Position", "Raven");
}

uint64_t sub_100E06D50(uint64_t a1, char *a2, uint64_t *a3, double a4)
{
  double v10 = a4;
  sub_10064DE4C(a1, a3, &v10);
  *(void *)a1 = off_1022F9D50;
  sub_100134750((void *)(a1 + 232), a2);
  sub_100F03BA0((void *)(a1 + 256), a1 + 64, 0);
  if (sub_10014C3C0(a1 + 64))
  {
    int v6 = (char *)(a1 + 232);
    if (*(char *)(a1 + 255) < 0) {
      int v6 = *(char **)(a1 + 232);
    }
    sub_1005F7B0C(a1 + 64, v6, (const char **)&qword_1024818C8, 0, 0);
    sub_10064DFA4(a1);
  }
  else
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022F9D80);
    }
    char v7 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#Warning Database is not valid; not initializing",
        buf,
        2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022F9D80);
      }
      char v9 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "CLLteCellLocationDatabase::CLLteCellLocationDatabase(const char *, const CLSqliteDatabase::SqliteProperties &, double)", "%s\n", v9);
      if (v9 != (char *)buf) {
        free(v9);
      }
    }
  }
  return a1;
}

void sub_100E06F80(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 255) < 0) {
    operator delete(*v2);
  }
  sub_10064DF48(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100E06FBC(uint64_t a1)
{
  *(void *)a1 = off_1022F9D50;
  if (*(char *)(a1 + 255) < 0) {
    operator delete(*(void **)(a1 + 232));
  }

  return sub_10064DF48(a1);
}

void sub_100E07020(uint64_t a1)
{
  sub_100E06FBC(a1);

  operator delete();
}

uint64_t sub_100E07058(uint64_t a1, int *a2, uint64_t a3)
{
  sqlite3_int64 v53 = 0;
  int v6 = (void *)(a1 + 256);
  if (sub_100F03BA8((void *)(a1 + 256)))
  {
LABEL_22:
    sub_100082068(v6, v58);
    int v28 = (sqlite3_stmt *)sub_10014D19C(v58[0]);
    if (sub_10014D1A4(v28, 1, *a2)
      && (long long v29 = (sqlite3_stmt *)sub_10014D19C(v58[0]), sub_10014D1A4(v29, 2, a2[1]))
      && (uint64_t v30 = (sqlite3_stmt *)sub_10014D19C(v58[0]), sub_10014D1A4(v30, 3, a2[2]))
      && (char v31 = (sqlite3_stmt *)sub_10014D19C(v58[0]), sub_10014D1A4(v31, 4, a2[3]))
      && (int v32 = (sqlite3_stmt *)sub_10014D19C(v58[0]), sub_10014D1A4(v32, 5, a2[4]))
      && (int v33 = (sqlite3_stmt *)sub_10014D19C(v58[0]), sub_10014D1A4(v33, 6, a2[5])))
    {
      id v34 = (sqlite3_stmt *)sub_10014D19C(v58[0]);
      sub_10001FEB0(a1 + 64, v34);
      sqlite3_int64 v35 = sub_1006037D0(a1 + 64);
      sqlite3_int64 v53 = v35;
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022F9D80);
      }
      uint64_t v36 = qword_102419638;
      if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
      {
        sub_1000AAEBC(__p);
        uint64_t v37 = v60 >= 0 ? __p : (void **)__p[0];
        *(_DWORD *)unint64_t v61 = 136315394;
        *(void *)&v61[4] = v37;
        __int16 v62 = 2048;
        *(void *)uint64_t v63 = v35;
        _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEBUG, "CELL_CEN: adding cell, %s, rowid, %lld", v61, 0x16u);
        if (v60 < 0) {
          operator delete(__p[0]);
        }
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(__p, 0x65CuLL);
        if (qword_102419630 != -1) {
          dispatch_once(&qword_102419630, &stru_1022F9D80);
        }
        sub_1000AAEBC(v61);
        if (v63[9] >= 0) {
          uint64_t v51 = v61;
        }
        else {
          uint64_t v51 = *(unsigned char **)v61;
        }
        *(_DWORD *)std::string buf = 136315394;
        *(void *)&uint8_t buf[4] = v51;
        __int16 v55 = 2048;
        sqlite3_int64 v56 = v35;
        long long v52 = (char *)_os_log_send_and_compose_impl();
        if ((v63[9] & 0x80000000) != 0) {
          operator delete(*(void **)v61);
        }
        sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLLteCellLocationDatabase::setLocation(const CLTelephonyService_Type::LteCell &, const CLDaemonLocation &)", "%s\n", v52);
        if (v52 != (char *)__p) {
          free(v52);
        }
      }
      uint64_t v38 = sub_10064F1E8((void *)a1, &v53, a3);
    }
    else
    {
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022F9D80);
      }
      int v39 = qword_102419638;
      if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_FAULT))
      {
        sub_1000AAEBC(__p);
        unint64_t v40 = v60 >= 0 ? __p : (void **)__p[0];
        *(_DWORD *)unint64_t v61 = 136315138;
        *(void *)&v61[4] = v40;
        _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_FAULT, "CELL_LOC: failed to bind %s", v61, 0xCu);
        if (v60 < 0) {
          operator delete(__p[0]);
        }
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(__p, 0x65CuLL);
        if (qword_102419630 != -1) {
          dispatch_once(&qword_102419630, &stru_1022F9D80);
        }
        sub_1000AAEBC(v61);
        if (v63[9] >= 0) {
          int v46 = v61;
        }
        else {
          int v46 = *(unsigned char **)v61;
        }
        *(_DWORD *)std::string buf = 136315138;
        *(void *)&uint8_t buf[4] = v46;
        char v47 = (char *)_os_log_send_and_compose_impl();
        if ((v63[9] & 0x80000000) != 0) {
          operator delete(*(void **)v61);
        }
        sub_1004BA5E4("Generic", 1, 0, 0, "BOOL CLLteCellLocationDatabase::setLocation(const CLTelephonyService_Type::LteCell &, const CLDaemonLocation &)", "%s\n", v47);
        if (v47 != (char *)__p) {
          free(v47);
        }
      }
      __int16 v41 = (sqlite3_stmt *)sub_10014D19C(v58[0]);
      sqlite3_reset(v41);
      uint64_t v38 = 0;
    }
    uint64_t v42 = v58[0];
    v58[0] = 0;
    if (v42) {
      (*(void (**)(uint64_t))(*(void *)v42 + 8))(v42);
    }
    return v38;
  }
  sub_10010F274((uint64_t)v61);
  char v7 = sub_100132EFC(&v63[2], (uint64_t)"INSERT OR REPLACE INTO ", 23);
  int v8 = (const char *)(a1 + 232);
  if (*(char *)(a1 + 255) < 0) {
    int v8 = *(const char **)v8;
  }
  size_t v9 = strlen(v8);
  double v10 = sub_100132EFC(v7, (uint64_t)v8, v9);
  uint64_t v11 = sub_100132EFC(v10, (uint64_t)" (", 2);
  uint64_t v12 = sub_100132EFC(v11, (uint64_t)"MCC", 3);
  uint64_t v13 = sub_100132EFC(v12, (uint64_t)", ", 2);
  __n128 v14 = sub_100132EFC(v13, (uint64_t)"MNC", 3);
  uint64_t v15 = sub_100132EFC(v14, (uint64_t)", ", 2);
  BOOL v16 = sub_100132EFC(v15, (uint64_t)"TAC", 3);
  int v17 = sub_100132EFC(v16, (uint64_t)", ", 2);
  uint64_t v18 = sub_100132EFC(v17, (uint64_t)"CI", 2);
  char v19 = sub_100132EFC(v18, (uint64_t)", ", 2);
  int v20 = sub_100132EFC(v19, (uint64_t)"UARFCN", 6);
  uint64_t v21 = sub_100132EFC(v20, (uint64_t)", ", 2);
  int v22 = sub_100132EFC(v21, (uint64_t)"PID", 3);
  sub_100132EFC(v22, (uint64_t)") VALUES (?, ?, ?, ?, ?, ?)", 27);
  if (qword_102419630 != -1) {
    dispatch_once(&qword_102419630, &stru_1022F9D80);
  }
  __int16 v23 = qword_102419638;
  if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
  {
    std::stringbuf::str();
    int v24 = v60 >= 0 ? __p : (void **)__p[0];
    *(_DWORD *)std::string buf = 136315138;
    *(void *)&uint8_t buf[4] = v24;
    _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEBUG, "CELL_LOC: fInsertStatement [%s]", buf, 0xCu);
    if (v60 < 0) {
      operator delete(__p[0]);
    }
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022F9D80);
    }
    std::stringbuf::str();
    if (v57 >= 0) {
      int v48 = buf;
    }
    else {
      int v48 = *(unsigned char **)buf;
    }
    LODWORD(v58[0]) = 136315138;
    *(uint64_t *)((char *)v58 + 4) = (uint64_t)v48;
    __int16 v49 = (char *)_os_log_send_and_compose_impl();
    if (v57 < 0) {
      operator delete(*(void **)buf);
    }
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLLteCellLocationDatabase::setLocation(const CLTelephonyService_Type::LteCell &, const CLDaemonLocation &)", "%s\n", v49);
    if (v49 != (char *)__p) {
      free(v49);
    }
  }
  std::stringbuf::str();
  if (v60 >= 0) {
    uint64_t v25 = __p;
  }
  else {
    uint64_t v25 = (void **)__p[0];
  }
  *(void *)(a1 + 256) = sub_100601D1C(a1 + 64, (uint64_t)v25);
  *(void *)(a1 + 264) = v26;
  if (v60 < 0) {
    operator delete(__p[0]);
  }
  if (sub_100F03BA8(v6))
  {
    *(void *)&v63[2] = v27;
    if (v66 < 0) {
      operator delete(v65);
    }
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    std::ios::~ios();
    goto LABEL_22;
  }
  if (qword_102419630 != -1) {
    dispatch_once(&qword_102419630, &stru_1022F9D80);
  }
  uint64_t v43 = qword_102419638;
  if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_FAULT))
  {
    LOWORD(__p[0]) = 0;
    _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_FAULT, "Could not prepare cached insert statement", (uint8_t *)__p, 2u);
  }
  if (sub_10013D1A0(115, 0))
  {
    bzero(__p, 0x65CuLL);
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022F9D80);
    }
    *(_WORD *)std::string buf = 0;
    int v50 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "BOOL CLLteCellLocationDatabase::setLocation(const CLTelephonyService_Type::LteCell &, const CLDaemonLocation &)", "%s\n", v50);
    if (v50 != (char *)__p) {
      free(v50);
    }
  }
  *(void *)&v63[2] = v44;
  if (v66 < 0) {
    operator delete(v65);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  std::ios::~ios();
  return 0;
}

void sub_100E07BD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  if (a17) {
    (*(void (**)(uint64_t))(*(void *)a17 + 8))(a17);
  }
  _Unwind_Resume(a1);
}

void sub_100E07C68(uint64_t a1)
{
}

void sub_100E07CAC(uint64_t a1)
{
  sub_10010F274((uint64_t)&v18);
  uint64_t v2 = sub_100132EFC(&v19, (uint64_t)"SELECT ", 7);
  std::string v3 = sub_100132EFC(v2, (uint64_t)"MCC", 3);
  int v4 = sub_100132EFC(v3, (uint64_t)", ", 2);
  char v5 = sub_100132EFC(v4, (uint64_t)"MNC", 3);
  int v6 = sub_100132EFC(v5, (uint64_t)", ", 2);
  char v7 = sub_100132EFC(v6, (uint64_t)"TAC", 3);
  int v8 = sub_100132EFC(v7, (uint64_t)", ", 2);
  size_t v9 = sub_100132EFC(v8, (uint64_t)"CI", 2);
  double v10 = sub_100132EFC(v9, (uint64_t)" FROM ", 6);
  uint64_t v11 = (const char *)(a1 + 232);
  if (*(char *)(a1 + 255) < 0) {
    uint64_t v11 = *(const char **)v11;
  }
  size_t v12 = strlen(v11);
  uint64_t v13 = sub_100132EFC(v10, (uint64_t)v11, v12);
  __n128 v14 = sub_100132EFC(v13, (uint64_t)" WHERE ", 7);
  size_t v15 = strlen("ROWID");
  BOOL v16 = sub_100132EFC(v14, (uint64_t)"ROWID", v15);
  sub_100132EFC(v16, (uint64_t)"=?", 2);
  std::stringbuf::str();
  if (v21 >= 0) {
    p_p = &__p;
  }
  else {
    p_p = __p;
  }
  sub_10014D518(a1 + 64, (uint64_t)p_p);
}

void sub_100E08190(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,void *__p,uint64_t a48,int a49,__int16 a50,char a51,char a52)
{
  if (v52) {
    (*(void (**)(uint64_t))(*(void *)v52 + 8))(v52);
  }
  sub_101A129A8((uint64_t)&a12);
  _Unwind_Resume(a1);
}

void sub_100E08200(id a1)
{
  qword_102419638 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

void sub_100E08230()
{
  qword_1024818C8 = (uint64_t)"MCC";
  dword_1024818D0 = 1;
  word_1024818D4 = 1;
  byte_1024818D8 = 0;
  byte_1024818F0 = 0;
  qword_1024818F8 = (uint64_t)"MNC";
  dword_102481900 = 1;
  word_102481904 = 1;
  byte_102481908 = 0;
  byte_102481920 = 0;
  qword_102481928 = (uint64_t)"TAC";
  dword_102481930 = 1;
  word_102481934 = 1;
  byte_102481938 = 0;
  byte_102481950 = 0;
  qword_102481958 = (uint64_t)"CI";
  dword_102481960 = 1;
  word_102481964 = 1;
  byte_102481968 = 0;
  byte_102481980 = 0;
  qword_102481988 = (uint64_t)"UARFCN";
  dword_102481990 = 1;
  word_102481994 = 1;
  byte_102481998 = 0;
  byte_1024819B0 = 0;
  qword_1024819B8 = (uint64_t)"PID";
  dword_1024819C0 = 1;
  word_1024819C4 = 1;
  byte_1024819C8 = 0;
  byte_1024819E0 = 0;
  qword_1024819E8 = (uint64_t)"Timestamp";
  dword_1024819F0 = 2;
  word_1024819F4 = 0;
  byte_1024819F8 = 0;
  byte_102481A10 = 0;
  qword_102481A18 = (uint64_t)"Latitude";
  dword_102481A20 = 2;
  word_102481A24 = 0;
  byte_102481A28 = 0;
  byte_102481A40 = 0;
  qword_102481A48 = (uint64_t)"Longitude";
  dword_102481A50 = 2;
  word_102481A54 = 0;
  byte_102481A58 = 0;
  byte_102481A70 = 0;
  qword_102481A78 = (uint64_t)"HorizontalAccuracy";
  dword_102481A80 = 2;
  word_102481A84 = 0;
  byte_102481A88 = 0;
  byte_102481AA0 = 0;
  qword_102481AA8 = (uint64_t)"Altitude";
  dword_102481AB0 = 2;
  word_102481AB4 = 0;
  byte_102481AB8 = 0;
  byte_102481AD0 = 0;
  qword_102481AD8 = (uint64_t)"VerticalAccuracy";
  dword_102481AE0 = 2;
  word_102481AE4 = 0;
  byte_102481AE8 = 0;
  byte_102481B00 = 0;
  qword_102481B08 = (uint64_t)"Speed";
  dword_102481B10 = 2;
  word_102481B14 = 0;
  byte_102481B18 = 0;
  byte_102481B30 = 0;
  qword_102481B38 = (uint64_t)"Course";
  dword_102481B40 = 2;
  word_102481B44 = 0;
  byte_102481B48 = 0;
  byte_102481B60 = 0;
  qword_102481B68 = (uint64_t)"Confidence";
  dword_102481B70 = 1;
  word_102481B74 = 0;
  byte_102481B78 = 0;
  byte_102481B90 = 0;
  qword_102481B98 = 0;
  dword_102481BA0 = 5;
  word_102481BA4 = 0;
  byte_102481BA8 = 0;
  byte_102481BC0 = 0;
}

uint64_t sub_100E08424(uint64_t a1, uint64_t a2, uint64_t a3, void *aBlock, double a5)
{
  *(void *)a1 = off_1022F9DB0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = a3;
  *(void *)(a1 + 24) = _Block_copy(aBlock);
  dispatch_retain(*(dispatch_object_t *)(a1 + 16));
  if (a2 >= 2) {
    sub_101A8FBE8();
  }
  size_t v9 = [CMActivityAlarmLocal alloc];
  uint64_t v10 = *(void *)(a1 + 16);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_100E08518;
  void v12[3] = &unk_1022F9DC8;
  void v12[4] = aBlock;
  *(void *)(a1 + 8) = [(CMActivityAlarmLocal *)v9 initWithTrigger:a2 duration:v10 onQueue:v12 withHandler:a5];
  return a1;
}

uint64_t sub_100E08518(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100E08528(uint64_t a1)
{
  *(void *)a1 = off_1022F9DB0;
  [*(id *)(a1 + 8) invalidate];
  uint64_t v2 = *(NSObject **)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 8);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100E085DC;
  void v6[3] = &unk_1022CEBF8;
  _DWORD v6[4] = v4;
  void v6[5] = v3;
  dispatch_async(v2, v6);
  dispatch_release(*(dispatch_object_t *)(a1 + 16));
  return a1;
}

void sub_100E085DC(uint64_t a1)
{
  uint64_t v2 = *(const void **)(a1 + 40);

  _Block_release(v2);
}

void sub_100E0861C(uint64_t a1)
{
  sub_100E08528(a1);

  operator delete();
}

void sub_100E08654(uint64_t a1, int a2, uint64_t a3, void *aBlock, double a5)
{
  *(void *)a1 = off_1022F9DF8;
  *(unsigned char *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = a3;
  *(void *)(a1 + 24) = _Block_copy(aBlock);
  *(_DWORD *)(a1 + 32) = a2;
  *(double *)(a1 + 40) = a5;
  sub_100EBBEB0(a1 + 48, (uint64_t)"CLSensorCalibrationStaticDetectorAccel", a1, 0.0);
  *(void *)(a1 + 96) = 0x7FEFFFFFFFFFFFFFLL;
  *(_OWORD *)(a1 + 104) = xmmword_101D907C0;
  int v8 = &qword_101D907D0;
  for (uint64_t i = 192; i != 152; i -= 8)
  {
    uint64_t v10 = *v8++;
    *(void *)(a1 + i) = v10;
  }
  *(double *)(a1 + 168) = -*(double *)(a1 + 168);
  *(double *)(a1 + 184) = -*(double *)(a1 + 184);
  long long v11 = *(_OWORD *)(a1 + 176);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a1 + 160);
  *(_OWORD *)(a1 + 216) = v11;
  *(_OWORD *)(a1 + 232) = xmmword_101D907C0;
  size_t v12 = &qword_101D907D0;
  for (uint64_t j = 320; j != 280; j -= 8)
  {
    uint64_t v14 = *v12++;
    *(void *)(a1 + j) = v14;
  }
  *(double *)(a1 + 296) = -*(double *)(a1 + 296);
  *(double *)(a1 + 312) = -*(double *)(a1 + 312);
  long long v15 = *(_OWORD *)(a1 + 304);
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a1 + 288);
  *(_OWORD *)(a1 + 344) = v15;
  *(void *)(a1 + 360) = 2;
  *(void *)(a1 + 368) = 0;
  BOOL v16 = &qword_101D907D0;
  for (uint64_t k = 448; k != 408; k -= 8)
  {
    uint64_t v18 = *v16++;
    *(void *)(a1 + k) = v18;
  }
  *(double *)(a1 + 424) = -*(double *)(a1 + 424);
  *(double *)(a1 + 440) = -*(double *)(a1 + 440);
  long long v19 = *(_OWORD *)(a1 + 432);
  *(_OWORD *)(a1 + 456) = *(_OWORD *)(a1 + 416);
  *(_OWORD *)(a1 + 472) = v19;
  *(void *)(a1 + 488) = off_1022DE6C0;
  *(void *)(a1 + 496) = 128;
  *(void *)(a1 + 504) = off_1022DE6F0;
  *(void *)(a1 + 512) = 128;
  *(_OWORD *)(a1 + 520) = 0u;
  *(_OWORD *)(a1 + 536) = 0u;
  *(_OWORD *)(a1 + 552) = 0u;
  *(_OWORD *)(a1 + 568) = 0u;
  *(void *)(a1 + 584) = off_1022DE6F0;
  *(void *)(a1 + 592) = 128;
  *(_OWORD *)(a1 + 632) = 0u;
  *(_OWORD *)(a1 + 648) = 0u;
  *(_OWORD *)(a1 + 600) = 0u;
  *(_OWORD *)(a1 + 616) = 0u;
  *(void *)(a1 + 664) = off_1022DE6F0;
  *(void *)(a1 + 672) = 128;
  *(void *)(a1 + 744) = 0;
  *(_OWORD *)(a1 + 712) = 0u;
  *(_OWORD *)(a1 + 728) = 0u;
  *(_OWORD *)(a1 + 680) = 0u;
  *(_OWORD *)(a1 + 696) = 0u;
  [objc_msgSend(*(id *)(a1 + 16), "silo") assertInside];
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_102481BD0, memory_order_acquire) & 1) == 0) {
    goto LABEL_14;
  }
  while (1)
  {
    *(unsigned char *)(a1 + 8) = byte_102481BC8;
    if (a2 != 1 || a5 == 0.0)
    {
      sub_100134750(__p, "ctor");
      sub_100EBBFD8(a1 + 48, (uint64_t *)__p);
      if (v21 < 0) {
        operator delete(__p[0]);
      }
      operator new();
    }
    sub_101A8FD74();
    abort_report_np();
    __break(1u);
LABEL_14:
    if (__cxa_guard_acquire(&qword_102481BD0))
    {
      byte_102481BC8 = sub_100E08A4C();
      __cxa_guard_release(&qword_102481BD0);
    }
  }
}

void sub_100E089E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  __cxa_guard_abort(&qword_102481BD0);
  sub_100B0AC5C(v24);
  sub_100EBBF9C(v23);
  _Unwind_Resume(a1);
}

uint64_t sub_100E08A4C()
{
  BOOL v5 = 0;
  uint64_t v0 = sub_1000D3E78();
  sub_10006B564(v0, &v3);
  unsigned int v1 = sub_1000D2988(v3, "LogGyroCalibrationStaticDetectorAccelState", &v5);
  if (v4) {
    sub_1000DB0A0(v4);
  }
  if (v5) {
    return v1;
  }
  else {
    return 0;
  }
}

void sub_100E08AB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  if (a11) {
    sub_1000DB0A0(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_100E08ACC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a3 + 16), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022F9E68);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v9 = 1;
    int v6 = _os_activity_create((void *)&_mh_execute_header, "CL: CLSensorCalibrationStaticDetectorAccel::onAccelerometerData", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v6, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022F9E68);
    }
    char v7 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v11 = 0;
      __int16 v12 = 2082;
      uint64_t v13 = "";
      __int16 v14 = 2082;
      long long v15 = "activity";
      __int16 v16 = 2050;
      uint64_t v17 = a3;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLSensorCalibrationStaticDetectorAccel::onAccelerometerData\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v9 = 0;
  }
  sub_100E091EC(a3, a1, a2);
  if (v9) {
    os_activity_scope_leave(&state);
  }
}

void sub_100E08C88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100E08CA8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = sub_1009EC0A8();
  uint64_t v3 = *(void *)(v1 + 744);

  return sub_1009D1EC4(v2, 0, v3, 0.02);
}

void *sub_100E08CEC(void *a1)
{
  *a1 = off_1022F9DF8;
  sub_100E08D44((uint64_t)a1);
  sub_100B0AC5C(a1 + 61);
  sub_100EBBF9C(a1 + 6);
  return a1;
}

void sub_100E08D44(uint64_t a1)
{
  [objc_msgSend(*(id *)(a1 + 16), "silo") assertInside];
  uint64_t v2 = *(const void **)(a1 + 24);
  if (v2)
  {
    _Block_release(v2);
    *(void *)(a1 + 24) = 0;
  }
  if (*(int *)(a1 + 56) >= 1) {
    sub_100EBC6AC(a1 + 48);
  }
  if (*(void *)(a1 + 744))
  {
    uint64_t v3 = sub_1009EC0A8();
    sub_1009D26C4(v3, 0, *(void *)(a1 + 744));
    uint64_t v4 = *(void *)(a1 + 744);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    *(void *)(a1 + 744) = 0;
  }
}

void sub_100E08DE0(void *a1)
{
  sub_100E08CEC(a1);

  operator delete();
}

void sub_100E08E18(uint64_t a1, int a2, double a3)
{
  if (*(unsigned char *)(a1 + 8))
  {
    if (qword_102419090 != -1) {
      dispatch_once(&qword_102419090, &stru_1022F9E48);
    }
    int v6 = qword_102419098;
    if (os_log_type_enabled((os_log_t)qword_102419098, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::string buf = 67109376;
      int v10 = a2;
      __int16 v11 = 2048;
      double v12 = a3;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "moving,%d,now,%f", buf, 0x12u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419090 != -1) {
        dispatch_once(&qword_102419090, &stru_1022F9E48);
      }
      int v8 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLSensorCalibrationStaticDetectorAccel::processStaticMoving(BOOL, CLMotionTypeTimestamp)", "%s\n", v8);
      if (v8 != (char *)buf) {
        free(v8);
      }
    }
  }
  if (a2)
  {
    *(void *)(a1 + 96) = 0x7FEFFFFFFFFFFFFFLL;
    if (*(_DWORD *)(a1 + 32) != 1) {
      return;
    }
    goto LABEL_14;
  }
  double v7 = *(double *)(a1 + 96);
  if (v7 > a3) {
    double v7 = a3;
  }
  *(double *)(a1 + 96) = v7;
  if (!*(_DWORD *)(a1 + 32) && v7 + *(double *)(a1 + 40) <= a3) {
LABEL_14:
  }
    sub_100E09040(a1);
}

void sub_100E09040(uint64_t a1)
{
  if (qword_102419090 != -1) {
    dispatch_once(&qword_102419090, &stru_1022F9E48);
  }
  uint64_t v2 = qword_102419098;
  if (os_log_type_enabled((os_log_t)qword_102419098, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "CLSensorCalibrationStaticDetectorAccel::fire()", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419090 != -1) {
      dispatch_once(&qword_102419090, &stru_1022F9E48);
    }
    uint64_t v3 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLSensorCalibrationStaticDetectorAccel::fire()", "%s\n", v3);
    if (v3 != (char *)buf) {
      free(v3);
    }
  }
  [objc_msgSend(*(id *)(a1 + 16), "silo") async:*(void *)(a1 + 24)];
  sub_100E08D44(a1);
}

void sub_100E091EC(uint64_t a1, uint64_t a2, unsigned int a3)
{
  [objc_msgSend(*(id *)(a1 + 16), "silo") assertInside];
  unsigned int v37 = a3;
  if (a3)
  {
    uint64_t v6 = 24 * a3;
    double v7 = (float *)(a2 + 16);
    do
    {
      int v8 = sub_100E09978((uint64_t *)(a1 + 104), *(v7 - 2));
      int v9 = sub_100E09978((uint64_t *)(a1 + 232), *(v7 - 1));
      int v10 = v8 ^ sub_100E09978((uint64_t *)(a1 + 360), *v7);
      if (v8 != v9 || v10 != 0) {
        sub_101A8FEF0();
      }
      if (*(unsigned char *)(a1 + 8))
      {
        if (qword_102419090 != -1) {
          dispatch_once(&qword_102419090, &stru_1022F9E48);
        }
        double v12 = qword_102419098;
        if (os_log_type_enabled((os_log_t)qword_102419098, OS_LOG_TYPE_INFO))
        {
          double v13 = *(v7 - 2);
          double v14 = *(v7 - 1);
          double v15 = *v7;
          uint64_t v16 = *((void *)v7 - 2);
          *(_DWORD *)std::string buf = 134218752;
          *(double *)&uint8_t buf[4] = v13;
          __int16 v53 = 2048;
          double v54 = v14;
          __int16 v55 = 2048;
          double v56 = v15;
          __int16 v57 = 2048;
          uint64_t v58 = v16;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "RawAccelerometer,x,%20.20f,y,%20.20f,z,%20.20f,timestamp,%20.20f", buf, 0x2Au);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419090 != -1) {
            dispatch_once(&qword_102419090, &stru_1022F9E48);
          }
          double v22 = *(v7 - 2);
          double v23 = *(v7 - 1);
          double v24 = *v7;
          uint64_t v25 = *((void *)v7 - 2);
          *(_DWORD *)uint64_t v43 = 134218752;
          *(double *)&v43[4] = v22;
          __int16 v44 = 2048;
          double v45 = v23;
          __int16 v46 = 2048;
          double v47 = v24;
          __int16 v48 = 2048;
          uint64_t v49 = v25;
          uint64_t v26 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLSensorCalibrationStaticDetectorAccel::onAccelerometerData(const CLAccelerometer::Sample *, unsigned int)", "%s\n", v26);
          if (v26 != buf) {
            free(v26);
          }
        }
        if (qword_102419090 != -1) {
          dispatch_once(&qword_102419090, &stru_1022F9E48);
        }
        uint64_t v17 = qword_102419098;
        if (os_log_type_enabled((os_log_t)qword_102419098, OS_LOG_TYPE_INFO))
        {
          uint64_t v18 = *(void *)(a1 + 8 * *(void *)(a1 + 112) + 120);
          double v19 = *(double *)(a1 + 8 * *(void *)(a1 + 240) + 248);
          double v20 = *(double *)(a1 + 8 * *(void *)(a1 + 368) + 376);
          uint64_t v21 = *((void *)v7 - 2);
          *(_DWORD *)std::string buf = 134219008;
          *(void *)&uint8_t buf[4] = v18;
          __int16 v53 = 2048;
          double v54 = v19;
          __int16 v55 = 2048;
          double v56 = v20;
          __int16 v57 = 2048;
          uint64_t v58 = v21;
          __int16 v59 = 1024;
          BOOL v60 = v8;
          _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_INFO, "FilteredAccelerometer,x,%20.20f,y,%20.20f,z,%20.20f,timestamp,%20.20f,readyX,%d", buf, 0x30u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419090 != -1) {
            dispatch_once(&qword_102419090, &stru_1022F9E48);
          }
          uint64_t v27 = *(void *)(a1 + 8 * *(void *)(a1 + 112) + 120);
          double v28 = *(double *)(a1 + 8 * *(void *)(a1 + 240) + 248);
          double v29 = *(double *)(a1 + 8 * *(void *)(a1 + 368) + 376);
          uint64_t v30 = *((void *)v7 - 2);
          *(_DWORD *)uint64_t v43 = 134219008;
          *(void *)&v43[4] = v27;
          __int16 v44 = 2048;
          double v45 = v28;
          __int16 v46 = 2048;
          double v47 = v29;
          __int16 v48 = 2048;
          uint64_t v49 = v30;
          __int16 v50 = 1024;
          BOOL v51 = v8;
          char v31 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLSensorCalibrationStaticDetectorAccel::onAccelerometerData(const CLAccelerometer::Sample *, unsigned int)", "%s\n", v31);
          if (v31 != buf) {
            free(v31);
          }
        }
      }
      if (v8)
      {
        *(void *)std::string buf = *(void *)(a1 + 8 * *(void *)(a1 + 112) + 120);
        *(void *)uint64_t v43 = *(void *)(a1 + 8 * *(void *)(a1 + 240) + 248);
        uint64_t v39 = *(void *)(a1 + 8 * *(void *)(a1 + 368) + 376);
        sub_100B0AD90(a1 + 504, (double *)buf);
        sub_100B0AD90(a1 + 584, (double *)v43);
        v5.f64[0] = sub_100B0AD90(a1 + 664, (double *)&v39);
      }
      v7 += 6;
      v6 -= 24;
    }
    while (v6);
  }
  if (*(void *)(a1 + 576) >= *(void *)(a1 + 512))
  {
    sub_100E09A18(a1 + 488, (uint64_t)&v39, v5);
    double v32 = fabs(v40) + fabs(v41) + fabs(v42);
    if (*(unsigned char *)(a1 + 8))
    {
      if (qword_102419090 != -1) {
        dispatch_once(&qword_102419090, &stru_1022F9E48);
      }
      int v33 = qword_102419098;
      if (os_log_type_enabled((os_log_t)qword_102419098, OS_LOG_TYPE_INFO))
      {
        uint64_t v34 = *(void *)(a2 + 24 * (v37 - 1));
        *(_DWORD *)std::string buf = 134219008;
        *(double *)&uint8_t buf[4] = v40;
        __int16 v53 = 2048;
        double v54 = v41;
        __int16 v55 = 2048;
        double v56 = v42;
        __int16 v57 = 2048;
        uint64_t v58 = v34;
        __int16 v59 = 1024;
        BOOL v60 = v32 >= 0.000144;
        _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_INFO, "Variance,x,%20.20f,y,%20.20f,z,%20.20f,timestamp,%20.20f,Moving,%d", buf, 0x30u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419090 != -1) {
          dispatch_once(&qword_102419090, &stru_1022F9E48);
        }
        uint64_t v35 = *(void *)(a2 + 24 * (v37 - 1));
        *(_DWORD *)uint64_t v43 = 134219008;
        *(double *)&v43[4] = v40;
        __int16 v44 = 2048;
        double v45 = v41;
        __int16 v46 = 2048;
        double v47 = v42;
        __int16 v48 = 2048;
        uint64_t v49 = v35;
        __int16 v50 = 1024;
        BOOL v51 = v32 >= 0.000144;
        uint64_t v36 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLSensorCalibrationStaticDetectorAccel::onAccelerometerData(const CLAccelerometer::Sample *, unsigned int)", "%s\n", v36);
        if (v36 != buf) {
          free(v36);
        }
      }
    }
    sub_100E08E18(a1, v32 >= 0.000144, *(double *)(a2 + 24 * (v37 - 1)));
  }
}

BOOL sub_100E09978(uint64_t *a1, double a2)
{
  uint64_t v2 = *a1;
  if (*a1)
  {
    uint64_t v3 = a1[1];
    if ((unint64_t)(v3 + 1) <= 4) {
      uint64_t v4 = v3 + 1;
    }
    else {
      uint64_t v4 = 0;
    }
    *(double *)&a1[v4 + 2] = a2;
    if ((unint64_t)(v4 + 1) <= 4) {
      uint64_t v5 = v4 + 1;
    }
    else {
      uint64_t v5 = 0;
    }
    *a1 = v2 - 1;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v7 = a1[1];
    if ((unint64_t)(v7 + 1) <= 4) {
      uint64_t v8 = v7 + 1;
    }
    else {
      uint64_t v8 = 0;
    }
    *(double *)&a1[v8 + 2] = a2;
    a2 = 0.0;
    do
    {
      a2 = a2 + *(double *)&a1[v6 + 11 - v8] * *(double *)&a1[v6 + 2];
      ++v6;
    }
    while (v6 != 5);
    if ((unint64_t)(v8 + 1) <= 4) {
      uint64_t v5 = v8 + 1;
    }
    else {
      uint64_t v5 = 0;
    }
  }
  a1[1] = v5;
  *(double *)&a1[v5 + 2] = a2;
  return v2 == 0;
}

float64x2_t sub_100E09A18@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>, float64x2_t result@<Q0>)
{
  unint64_t v3 = *(void *)(a1 + 88);
  int v4 = v3 - 1;
  if ((int)v3 > 1)
  {
    double v5 = 0.0;
    double v6 = 0.0;
    unint64_t v7 = *(void *)(a1 + 168);
    if (v7) {
      double v6 = *(double *)(a1 + 112) / (double)v7;
    }
    unint64_t v8 = *(void *)(a1 + 248);
    if (v8) {
      double v5 = *(double *)(a1 + 192) / (double)v8;
    }
    unint64_t v9 = *(void *)(a1 + 80);
    unint64_t v10 = *(void *)(a1 + 160);
    uint64_t v11 = *(void *)(a1 + 88);
    float64x2_t v12 = 0uLL;
    unint64_t v13 = *(void *)(a1 + 240);
    double v14 = 0.0;
    double v15 = 0.0;
    float64x2_t v16 = 0uLL;
    v17.f64[1] = v6;
    do
    {
      v18.f64[0] = *(float64_t *)(*(void *)(*(void *)(a1 + 56) + ((v9 >> 6) & 0x3FFFFFFFFFFFFF8))
                                + 8 * (v9 & 0x1FF));
      v18.f64[1] = *(float64_t *)(*(void *)(*(void *)(a1 + 136) + ((v10 >> 6) & 0x3FFFFFFFFFFFFF8))
                                + 8 * (v10 & 0x1FF));
      v17.f64[0] = *(double *)(a1 + 32) / (double)v3;
      float64x2_t v19 = vsubq_f64(v18, v17);
      double v20 = *(double *)(*(void *)(*(void *)(a1 + 216) + ((v13 >> 6) & 0x3FFFFFFFFFFFFF8)) + 8 * (v13 & 0x1FF))
          - v5;
      float64x2_t v12 = vmlaq_f64(v12, v19, v19);
      double v14 = v14 + v20 * v20;
      float64x2_t v16 = vaddq_f64(v19, v16);
      double v15 = v20 + v15;
      ++v9;
      ++v10;
      ++v13;
      --v11;
    }
    while (v11);
    *(void *)a2 = off_1022DE720;
    uint64_t result = vdivq_f64(vsubq_f64(v12, vdivq_f64(vmulq_f64(v16, v16), (float64x2_t)vdupq_lane_s64(COERCE__INT64((double)(int)v3), 0))), (float64x2_t)vdupq_lane_s64(COERCE__INT64((double)v4), 0));
    *(float64x2_t *)(a2 + 8) = result;
    *(double *)(a2 + 24) = (v14 - v15 * v15 / (double)(int)v3) / (double)v4;
  }
  else
  {
    *(void *)a2 = off_1022DE720;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0;
    *(void *)(a2 + 24) = 0;
  }
  return result;
}

void sub_100E09B78()
{
  if (+[CMActivityAlarmLocal activityAlarmAvailable]) {
    operator new();
  }
  operator new();
}

void sub_100E09C48()
{
}

void sub_100E09C88(id a1)
{
  qword_102419098 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Sensors");
}

void sub_100E09CB8(id a1)
{
  qword_102419588 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

uint64_t sub_100E09CE8(uint64_t a1)
{
  if (a1) {
    uint64_t v1 = a1 - 8;
  }
  else {
    uint64_t v1 = 0;
  }
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(v1 + 48) = _Q0;
  *(void *)(v1 + 64) = 0;
  *(void *)(v1 + 72) = 0;
  return (*(uint64_t (**)(void))(*(void *)v1 + 48))();
}

BOOL sub_100E09D24(uint64_t a1)
{
  if (a1) {
    uint64_t v1 = (double *)(a1 - 8);
  }
  else {
    uint64_t v1 = 0;
  }
  double v2 = (*(double (**)(double *))(*(void *)v1 + 72))(v1);
  v1[4] = v2;
  return v2 != -1.0;
}

uint64_t sub_100E09D84(uint64_t a1, uint64_t *a2)
{
  if (a1) {
    double v2 = (void *)(a1 - 8);
  }
  else {
    double v2 = 0;
  }
  uint64_t v3 = *a2;
  uint64_t v4 = v2[4];
  uint64_t v5 = (*(uint64_t (**)(void *))(*v2 + 40))(v2);
  v2[6] = v3;
  v2[7] = v4;
  unsigned char v2[8] = 2;
  v2[9] = v5;
  double v6 = *(uint64_t (**)(void *))(*v2 + 48);

  return v6(v2);
}

BOOL sub_100E09E2C(uint64_t a1)
{
  if (a1) {
    uint64_t v1 = (double *)(a1 - 8);
  }
  else {
    uint64_t v1 = 0;
  }
  double v2 = (*(double (**)(double *))(*(void *)v1 + 80))(v1);
  v1[5] = v2;
  return v2 != -1.0;
}

uint64_t sub_100E09E8C(uint64_t a1, uint64_t *a2)
{
  if (a1) {
    double v2 = (void *)(a1 - 8);
  }
  else {
    double v2 = 0;
  }
  uint64_t v3 = *a2;
  uint64_t v4 = v2[5];
  uint64_t v5 = (*(uint64_t (**)(void *))(*v2 + 40))(v2);
  v2[6] = v3;
  v2[7] = v4;
  unsigned char v2[8] = 1;
  v2[9] = v5;
  double v6 = *(uint64_t (**)(void *))(*v2 + 56);

  return v6(v2);
}

__n128 sub_100E09F34(__n128 *a1)
{
  a1->n128_u64[1] = (unint64_t)&unk_1022F9E88;
  a1[1].n128_u64[0] = 3;
  a1[1].n128_u16[4] = 512;
  a1->n128_u64[0] = (unint64_t)off_1022F9EE0;
  __asm { FMOV            V0.2D, #-1.0 }
  a1[2] = result;
  a1[3] = result;
  a1[4].n128_u64[0] = 0;
  a1[4].n128_u64[1] = 0;
  a1[5].n128_u32[0] = 0;
  a1[5].n128_u8[4] = 1;
  return result;
}

uint64_t sub_100E09F84@<X0>(uint64_t a1@<X0>, void *a2@<X1>, _OWORD *a3@<X8>)
{
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 40))(a1);
  *(CFAbsoluteTime *)(a1 + 48) = Current;
  *(void *)(a1 + 56) = 0xBFF0000000000000;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = v7;
  (*(void (**)(uint64_t, void *))(*(void *)a1 + 64))(a1, a2);
  CFAbsoluteTime v10 = CFAbsoluteTimeGetCurrent();
  if (*(unsigned char *)(a1 + 84))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_102481BF0, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_102481BF0))
    {
      *(_OWORD *)long long __p = xmmword_101D908A0;
      sub_1004F7D80(qword_102481BD8, __p, 4uLL);
      __cxa_atexit((void (*)(void *))sub_1004F7E04, qword_102481BD8, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_102481BF0);
    }
    sub_100134750(__p, "CLWorkoutSeriesActivityDetectionModel");
    sub_10111B644(a2, (uint64_t *)__p, (uint64_t)qword_102481BD8);
    if (v12 < 0) {
      operator delete(__p[0]);
    }
    *(unsigned char *)(a1 + 84) = 0;
  }
  sub_1001A34E0(a1 + 8, 1, (uint64_t)&v10);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 88))(a1);
  *(_DWORD *)(a1 + 68) = result;
  long long v9 = *(_OWORD *)(a1 + 64);
  *a3 = *(_OWORD *)(a1 + 48);
  a3[1] = v9;
  return result;
}

void sub_100E0A164(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

uint64_t sub_100E0A19C(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 96))(a1);
  if (result)
  {
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    return sub_1001A34E0(a1 + 8, 2, (uint64_t)&Current);
  }
  return result;
}

uint64_t sub_100E0A204(uint64_t result, uint64_t *a2)
{
  *(_DWORD *)(result + 80) = 0;
  uint64_t v2 = *a2;
  uint64_t v3 = a2[1];
  if (*a2 != v3)
  {
    uint64_t v4 = (_DWORD *)result;
    do
    {
      uint64_t result = (*(uint64_t (**)(_DWORD *, void))(*(void *)v4 + 96))(v4, *(void *)v2);
      if (result) {
        v4[20] = *(_DWORD *)(v2 + 8);
      }
      v2 += 16;
    }
    while (v2 != v3);
  }
  return result;
}

BOOL sub_100E0A280(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 40))(a1) == a2;
}

__n128 sub_100E0A2CC(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xBFF0000000000000;
  *(void *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 24) = 0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(void *)(a1 + 96) = 0;
  __asm { FMOV            V0.2D, #-1.0 }
  *(__n128 *)(a1 + 104) = result;
  *(_DWORD *)(a1 + 120) = 0;
  *(unsigned char *)(a1 + 124) = 0;
  return result;
}

void sub_100E0A300(uint64_t *a1@<X1>, long long **a2@<X8>, float a3@<S0>)
{
  float v4 = fmaxf(a3 + -6.0, 3.0);
  float v5 = a3 + 6.0;
  uint64_t v7 = (long long *)*a1;
  double v6 = (long long *)a1[1];
  unint64_t v8 = (long long *)*a1;
  if ((long long *)*a1 != v6)
  {
    unint64_t v8 = (long long *)*a1;
    while (1)
    {
      float v9 = *((double *)v8 + 12);
      if (v5 < v9) {
        break;
      }
      float v10 = *((double *)v8 + 13);
      if (v4 > v10) {
        break;
      }
      v8 += 7;
      if (v8 == v6) {
        goto LABEL_18;
      }
    }
  }
  uint64_t v11 = (double *)(v8 + 7);
  if (v8 != v6 && v11 != (double *)v6)
  {
    do
    {
      float v13 = v11[12];
      if (v5 >= v13)
      {
        float v14 = v11[13];
        if (v4 <= v14)
        {
          long long v15 = *(_OWORD *)v11;
          long long v16 = *((_OWORD *)v11 + 2);
          v8[1] = *((_OWORD *)v11 + 1);
          _DWORD v8[2] = v16;
          *unint64_t v8 = v15;
          long long v17 = *((_OWORD *)v11 + 3);
          long long v18 = *((_OWORD *)v11 + 4);
          long long v19 = *((_OWORD *)v11 + 6);
          v8[5] = *((_OWORD *)v11 + 5);
          v8[6] = v19;
          uint64_t v8[3] = v17;
          uint64_t v8[4] = v18;
          v8 += 7;
        }
      }
      v11 += 14;
    }
    while (v11 != (double *)v6);
    uint64_t v7 = (long long *)*a1;
    double v6 = (long long *)a1[1];
  }
  if (v8 != v6)
  {
    double v6 = v8;
    a1[1] = (uint64_t)v8;
  }
LABEL_18:
  *a2 = v7;
  a2[1] = v6;
  a2[2] = (long long *)a1[2];
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

uint64_t sub_100E0A430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void **__return_ptr))(**(void **)a1 + 24))(&v58);
  float v5 = v58;
  if (v58 == v59)
  {
    uint64_t v39 = 0;
    if (!v58) {
      return v39;
    }
    goto LABEL_71;
  }
  sub_100E0B93C(v55, (uint64_t *)&v58);
  double v6 = sub_100E0BC50((uint64_t)v55, 0.5);
  float v7 = *(float *)&v6;
  (*(void (**)(void **__return_ptr))(**(void **)a1 + 152))(&v53);
  unint64_t v8 = v53;
  if (v53 != v54)
  {
    uint64_t v49 = 0;
    uint64_t v50 = 0;
    long long __p = 0;
    sub_1004205C8(&__p, v53, (uint64_t)v54, 0x6DB6DB6DB6DB6DB7 * ((v54 - (unsigned char *)v53) >> 4));
    sub_100E0A300((uint64_t *)&__p, &v51, v7);
    if (__p)
    {
      uint64_t v49 = __p;
      operator delete(__p);
    }
    float v9 = v51;
    float v10 = v52;
    if (v51 == v52) {
      goto LABEL_64;
    }
    if (qword_102419000 != -1) {
      dispatch_once(&qword_102419000, &stru_1022F9FB0);
    }
    uint64_t v11 = qword_102419008;
    if (os_log_type_enabled((os_log_t)qword_102419008, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 134218496;
      double v68 = v7;
      __int16 v69 = 2048;
      uint64_t v70 = 0x6DB6DB6DB6DB6DB7 * ((v54 - (unsigned char *)v53) >> 4);
      __int16 v71 = 2048;
      double v72 = (void *)(0x6DB6DB6DB6DB6DB7 * (v10 - v9));
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "searchMedian, %f, historicalDistributionCount, %lu, historicalMatchingDistributionCount, %lu", buf, 0x20u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419000 != -1) {
        dispatch_once(&qword_102419000, &stru_1022F9FB0);
      }
      int v60 = 134218496;
      double v61 = v7;
      __int16 v62 = 2048;
      uint64_t v63 = 0x6DB6DB6DB6DB6DB7 * ((v54 - (unsigned char *)v53) >> 4);
      __int16 v64 = 2048;
      uint64_t v65 = (void *)(0x6DB6DB6DB6DB6DB7 * (v10 - v9));
      double v41 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLSwimLapDetect::convergedHistoricalSessionTurns(CLSwimDetectedTurn, CLSwimStrokesPerTurnDistribution &) const", "%s\n", v41);
      if (v41 != (char *)buf) {
        free(v41);
      }
    }
    int v12 = 0;
    float v13 = v9;
    do
    {
      v12 += *((_DWORD *)v13 + 16);
      v13 += 7;
    }
    while (v13 != v10);
    if (v12 <= 11)
    {
LABEL_64:
      uint64_t v39 = 0;
      if (!v9) {
        goto LABEL_66;
      }
    }
    else
    {
      double v45 = 0;
      __int16 v46 = 0;
      double v47 = 0;
      double v42 = 0;
      uint64_t v43 = 0;
      float v14 = v9;
      __int16 v44 = 0;
      do
      {
        float v15 = *((double *)v14 + 12);
        long long v16 = v46;
        if (v46 >= v47)
        {
          long long v18 = (float *)v45;
          uint64_t v19 = ((char *)v46 - (unsigned char *)v45) >> 2;
          unint64_t v20 = v19 + 1;
          if ((unint64_t)(v19 + 1) >> 62) {
            sub_1001D7FD4();
          }
          uint64_t v21 = (char *)v47 - (unsigned char *)v45;
          if (((char *)v47 - (unsigned char *)v45) >> 1 > v20) {
            unint64_t v20 = v21 >> 1;
          }
          if ((unint64_t)v21 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v22 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v22 = v20;
          }
          if (v22)
          {
            double v23 = (char *)sub_10017EA34((uint64_t)&v47, v22);
            long long v18 = (float *)v45;
            long long v16 = v46;
          }
          else
          {
            double v23 = 0;
          }
          double v24 = (float *)&v23[4 * v19];
          float *v24 = v15;
          long long v17 = v24 + 1;
          while (v16 != v18)
          {
            int v25 = *((_DWORD *)v16-- - 1);
            *((_DWORD *)v24-- - 1) = v25;
          }
          double v45 = v24;
          __int16 v46 = v17;
          double v47 = (float *)&v23[4 * v22];
          if (v18) {
            operator delete(v18);
          }
        }
        else
        {
          *__int16 v46 = v15;
          long long v17 = v16 + 1;
        }
        __int16 v46 = v17;
        float v26 = *((double *)v14 + 13);
        uint64_t v27 = v43;
        if (v43 >= v44)
        {
          double v29 = (float *)v42;
          uint64_t v30 = ((char *)v43 - (unsigned char *)v42) >> 2;
          unint64_t v31 = v30 + 1;
          if ((unint64_t)(v30 + 1) >> 62) {
            sub_1001D7FD4();
          }
          uint64_t v32 = (char *)v44 - (unsigned char *)v42;
          if (((char *)v44 - (unsigned char *)v42) >> 1 > v31) {
            unint64_t v31 = v32 >> 1;
          }
          if ((unint64_t)v32 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v33 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v33 = v31;
          }
          if (v33)
          {
            uint64_t v34 = (char *)sub_10017EA34((uint64_t)&v44, v33);
            double v29 = (float *)v42;
            uint64_t v27 = v43;
          }
          else
          {
            uint64_t v34 = 0;
          }
          uint64_t v35 = (float *)&v34[4 * v30];
          float *v35 = v26;
          double v28 = v35 + 1;
          while (v27 != v29)
          {
            int v36 = *((_DWORD *)v27-- - 1);
            *((_DWORD *)v35-- - 1) = v36;
          }
          double v42 = v35;
          uint64_t v43 = v28;
          __int16 v44 = (float *)&v34[4 * v33];
          if (v29) {
            operator delete(v29);
          }
        }
        else
        {
          float *v43 = v26;
          double v28 = v27 + 1;
        }
        uint64_t v43 = v28;
        v14 += 7;
      }
      while (v14 != v10);
      sub_100E0BAB4((uint64_t)buf, (float **)&v45);
      double v37 = sub_100E0BC50((uint64_t)buf, 0.5);
      if ((float)(v7 + -6.0) < *(float *)&v37) {
        *(float *)&double v37 = v7 + -6.0;
      }
      *(double *)(a3 + 80) = fmaxf(*(float *)&v37, 3.0);
      sub_100E0BAB4((uint64_t)&v60, (float **)&v42);
      double v38 = sub_100E0BC50((uint64_t)&v60, 0.5);
      if (*(float *)&v38 < (float)(v7 + 6.0)) {
        *(float *)&double v38 = v7 + 6.0;
      }
      *(double *)(a3 + 88) = *(float *)&v38;
      if (v65)
      {
        char v66 = v65;
        operator delete(v65);
      }
      if (v72)
      {
        unint64_t v73 = v72;
        operator delete(v72);
      }
      if (v42)
      {
        uint64_t v43 = (float *)v42;
        operator delete(v42);
      }
      if (v45)
      {
        __int16 v46 = (float *)v45;
        operator delete(v45);
      }
      uint64_t v39 = 1;
      if (!v9)
      {
LABEL_66:
        unint64_t v8 = v53;
        if (!v53) {
          goto LABEL_68;
        }
        goto LABEL_67;
      }
    }
    operator delete(v9);
    goto LABEL_66;
  }
  uint64_t v39 = 0;
  if (v53)
  {
LABEL_67:
    double v54 = v8;
    operator delete(v8);
  }
LABEL_68:
  if (v56)
  {
    __int16 v57 = v56;
    operator delete(v56);
  }
  float v5 = v58;
  if (v58)
  {
LABEL_71:
    __int16 v59 = v5;
    operator delete(v5);
  }
  return v39;
}

void sub_100E0AA48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,void *a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,void *a44,uint64_t a45)
{
  if (v45) {
    operator delete(v45);
  }
  if (__p) {
    operator delete(__p);
  }
  if (a29) {
    operator delete(a29);
  }
  if (a32) {
    operator delete(a32);
  }
  _Unwind_Resume(exception_object);
}

double sub_100E0AB24(uint64_t a1)
{
  return sub_100E0BC50(a1, 0.5);
}

BOOL sub_100E0AB30(uint64_t a1)
{
  (*(void (**)(void **__return_ptr))(**(void **)a1 + 24))(&v11);
  sub_100E0B93C(&v7, (uint64_t *)&v11);
  uint64_t v2 = v11;
  uint64_t v1 = v12;
  float v3 = v8;
  if (__p)
  {
    float v10 = __p;
    operator delete(__p);
    float v4 = v11;
    if (!v11) {
      return sqrtf(v3) <= 1.5 && (unint64_t)(v1 - v2) > 0x50;
    }
    goto LABEL_3;
  }
  float v4 = v11;
  if (v11)
  {
LABEL_3:
    int v12 = v4;
    operator delete(v4);
  }
  return sqrtf(v3) <= 1.5 && (unint64_t)(v1 - v2) > 0x50;
}

void sub_100E0ABE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_100E0AC04@<D0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *(void *)(a1 + 24) = 0;
  double result = -1.0;
  *(_OWORD *)(a1 + 8) = xmmword_101D90910;
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  return result;
}

void sub_100E0AC24(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, void **a7@<X8>)
{
  *a7 = 0;
  a7[1] = 0;
  a7[2] = 0;
  uint64_t v10 = a1 + 8;
  if (*(double *)(a1 + 8) >= 0.0)
  {
    if (*((_DWORD *)a2 + 2) == 6)
    {
      long long v28 = *a2;
      *(void *)(a1 + 24) = *((void *)a2 + 2);
      *(_OWORD *)uint64_t v10 = v28;
      sub_100E0B654((double *)a1, 0, 0, a3, a4, a5, a6, (uint64_t)&v62, *(double *)a2);
      double v29 = (char *)a7[2];
      unint64_t v22 = (char *)a7[1];
      if (v22 >= v29)
      {
        unint64_t v30 = 0xAAAAAAAAAAAAAAABLL * ((v22 - (unsigned char *)*a7) >> 3);
        unint64_t v31 = v30 + 1;
        if (v30 + 1 > 0xAAAAAAAAAAAAAAALL) {
          sub_1001D7FD4();
        }
        unint64_t v32 = 0xAAAAAAAAAAAAAAABLL * ((v29 - (unsigned char *)*a7) >> 3);
        if (2 * v32 > v31) {
          unint64_t v31 = 2 * v32;
        }
        if (v32 >= 0x555555555555555) {
          unint64_t v33 = 0xAAAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v33 = v31;
        }
        if (v33) {
          uint64_t v34 = (char *)sub_1000DA5D8((uint64_t)(a7 + 2), v33);
        }
        else {
          uint64_t v34 = 0;
        }
        uint64_t v49 = &v34[24 * v30];
        uint64_t v50 = &v34[24 * v33];
        *(_OWORD *)uint64_t v49 = v62;
        *((void *)v49 + 2) = v63;
        uint64_t v43 = v49 + 24;
        uint64_t v52 = (char *)*a7;
        BOOL v51 = (char *)a7[1];
        if (v51 == *a7) {
          goto LABEL_48;
        }
        do
        {
          long long v53 = *(_OWORD *)(v51 - 24);
          *(void *)(v49 - 11) = *(void *)(v51 - 11);
          *(_OWORD *)(v49 - 24) = v53;
          v49 -= 24;
          v51 -= 24;
        }
        while (v51 != v52);
        goto LABEL_47;
      }
    }
    else
    {
      int v35 = *((_DWORD *)a2 + 3);
      int v36 = *(_DWORD *)(a1 + 20);
      long long v58 = *a2;
      uint64_t v59 = *((void *)a2 + 2);
      if (sub_100E0B0D4(a1, &v58) > (float)(v35 - v36)) {
        return;
      }
      long long v41 = *a2;
      *(void *)(v10 + 16) = *((void *)a2 + 2);
      *(_OWORD *)uint64_t v10 = v41;
      sub_100E0B654((double *)a1, 0, 0, v37, v38, v39, v40, (uint64_t)&v62, *(double *)a2);
      double v42 = (char *)a7[2];
      unint64_t v22 = (char *)a7[1];
      if (v22 >= v42)
      {
        unint64_t v44 = 0xAAAAAAAAAAAAAAABLL * ((v22 - (unsigned char *)*a7) >> 3);
        unint64_t v45 = v44 + 1;
        if (v44 + 1 > 0xAAAAAAAAAAAAAAALL) {
          sub_1001D7FD4();
        }
        unint64_t v46 = 0xAAAAAAAAAAAAAAABLL * ((v42 - (unsigned char *)*a7) >> 3);
        if (2 * v46 > v45) {
          unint64_t v45 = 2 * v46;
        }
        if (v46 >= 0x555555555555555) {
          unint64_t v47 = 0xAAAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v47 = v45;
        }
        if (v47) {
          __int16 v48 = (char *)sub_1000DA5D8((uint64_t)(a7 + 2), v47);
        }
        else {
          __int16 v48 = 0;
        }
        uint64_t v49 = &v48[24 * v44];
        uint64_t v50 = &v48[24 * v47];
        *(_OWORD *)uint64_t v49 = v62;
        *((void *)v49 + 2) = v63;
        uint64_t v43 = v49 + 24;
        double v56 = (char *)*a7;
        BOOL v51 = (char *)a7[1];
        if (v51 == *a7) {
          goto LABEL_48;
        }
        do
        {
          long long v57 = *(_OWORD *)(v51 - 24);
          *(void *)(v49 - 11) = *(void *)(v51 - 11);
          *(_OWORD *)(v49 - 24) = v57;
          v49 -= 24;
          v51 -= 24;
        }
        while (v51 != v56);
        goto LABEL_47;
      }
    }
LABEL_27:
    *(_OWORD *)unint64_t v22 = v62;
    *((void *)v22 + 2) = v63;
    uint64_t v43 = v22 + 24;
LABEL_50:
    a7[1] = v43;
    return;
  }
  int v11 = *((_DWORD *)a2 + 3);
  uint64_t v71 = 0;
  long long v69 = 0u;
  long long v70 = 0u;
  long long v67 = 0u;
  long long v68 = 0u;
  long long v65 = 0u;
  long long v66 = 0u;
  long long v63 = 0u;
  long long v64 = 0u;
  long long v62 = 0u;
  int v12 = (*(uint64_t (**)(void))(**(void **)a1 + 120))();
  int v13 = DWORD2(v68);
  long long v60 = *a2;
  uint64_t v61 = *((void *)a2 + 2);
  float v18 = sub_100E0B0D4(a1, &v60);
  if (v12) {
    int v19 = v13;
  }
  else {
    int v19 = 0;
  }
  if (v18 < (float)(v11 - v19))
  {
    long long v20 = *a2;
    *(void *)(v10 + 16) = *((void *)a2 + 2);
    *(_OWORD *)uint64_t v10 = v20;
    sub_100E0B654((double *)a1, 0, 0, v14, v15, v16, v17, (uint64_t)&v62, *(double *)a2);
    uint64_t v21 = (char *)a7[2];
    unint64_t v22 = (char *)a7[1];
    if (v22 >= v21)
    {
      unint64_t v23 = 0xAAAAAAAAAAAAAAABLL * ((v22 - (unsigned char *)*a7) >> 3);
      unint64_t v24 = v23 + 1;
      if (v23 + 1 > 0xAAAAAAAAAAAAAAALL) {
        sub_1001D7FD4();
      }
      unint64_t v25 = 0xAAAAAAAAAAAAAAABLL * ((v21 - (unsigned char *)*a7) >> 3);
      if (2 * v25 > v24) {
        unint64_t v24 = 2 * v25;
      }
      if (v25 >= 0x555555555555555) {
        unint64_t v26 = 0xAAAAAAAAAAAAAAALL;
      }
      else {
        unint64_t v26 = v24;
      }
      if (v26) {
        uint64_t v27 = (char *)sub_1000DA5D8((uint64_t)(a7 + 2), v26);
      }
      else {
        uint64_t v27 = 0;
      }
      uint64_t v49 = &v27[24 * v23];
      uint64_t v50 = &v27[24 * v26];
      *(_OWORD *)uint64_t v49 = v62;
      *((void *)v49 + 2) = v63;
      uint64_t v43 = v49 + 24;
      double v54 = (char *)*a7;
      BOOL v51 = (char *)a7[1];
      if (v51 == *a7) {
        goto LABEL_48;
      }
      do
      {
        long long v55 = *(_OWORD *)(v51 - 24);
        *(void *)(v49 - 11) = *(void *)(v51 - 11);
        *(_OWORD *)(v49 - 24) = v55;
        v49 -= 24;
        v51 -= 24;
      }
      while (v51 != v54);
LABEL_47:
      BOOL v51 = (char *)*a7;
LABEL_48:
      *a7 = v49;
      a7[1] = v43;
      a7[2] = v50;
      if (v51) {
        operator delete(v51);
      }
      goto LABEL_50;
    }
    goto LABEL_27;
  }
}

void sub_100E0B0A4(_Unwind_Exception *exception_object)
{
  float v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

float sub_100E0B0D4(uint64_t a1, long long *a2)
{
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v20 = 0u;
  (*(void (**)(long long *__return_ptr))(**(void **)a1 + 160))(&v20);
  if (!sub_100E0AB30(a1))
  {
    long long v10 = *a2;
    uint64_t v11 = *((void *)a2 + 2);
    if (sub_100E0A430(a1, (uint64_t)&v10, (uint64_t)&v20))
    {
      if (qword_102419000 != -1) {
        dispatch_once(&qword_102419000, &stru_1022F9FB0);
      }
      double v6 = qword_102419008;
      if (os_log_type_enabled((os_log_t)qword_102419008, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)std::string buf = 67109376;
        *(_DWORD *)&uint8_t buf[4] = 3;
        *(_WORD *)&uint8_t buf[8] = 2048;
        *(void *)&buf[10] = *((void *)&v25 + 1);
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "distribution,historicalSessionLimits,min,%d,max,%f", buf, 0x12u);
      }
      if (!sub_10013D1A0(115, 2)) {
        return 3.0;
      }
      bzero(buf, 0x65CuLL);
      if (qword_102419000 == -1)
      {
LABEL_27:
        int v12 = 67109376;
        *(_DWORD *)int v13 = 3;
        *(_WORD *)&unsigned int v13[4] = 2048;
        *(void *)&v13[6] = *((void *)&v25 + 1);
        float v9 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "std::pair<float, float> CLSwimLapDetect::getLapStrokeThreshold(CLSwimDetectedTurn) const", "%s\n", v9);
        if (v9 != buf) {
          free(v9);
        }
        return 3.0;
      }
    }
    else
    {
      (*(void (**)(unsigned char *__return_ptr))(**(void **)a1 + 40))(buf);
      long long v24 = v17;
      long long v25 = v18;
      long long v26 = v19;
      long long v20 = *(_OWORD *)buf;
      long long v21 = *(_OWORD *)&buf[16];
      long long v22 = v15;
      long long v23 = v16;
      if (qword_102419000 != -1) {
        dispatch_once(&qword_102419000, &stru_1022F9FB0);
      }
      uint64_t v7 = qword_102419008;
      if (os_log_type_enabled((os_log_t)qword_102419008, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)std::string buf = 67109376;
        *(_DWORD *)&uint8_t buf[4] = 3;
        *(_WORD *)&uint8_t buf[8] = 2048;
        *(void *)&buf[10] = *((void *)&v25 + 1);
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "distribution,lastGood-populationLimits,min,%d,max,%f", buf, 0x12u);
      }
      if (!sub_10013D1A0(115, 2)) {
        return 3.0;
      }
      bzero(buf, 0x65CuLL);
      if (qword_102419000 == -1) {
        goto LABEL_27;
      }
    }
    dispatch_once(&qword_102419000, &stru_1022F9FB0);
    goto LABEL_27;
  }
  (*(void (**)(unsigned char *__return_ptr))(**(void **)a1 + 40))(buf);
  long long v24 = v17;
  long long v25 = v18;
  long long v26 = v19;
  long long v20 = *(_OWORD *)buf;
  long long v21 = *(_OWORD *)&buf[16];
  long long v22 = v15;
  long long v23 = v16;
  if (qword_102419000 != -1) {
    dispatch_once(&qword_102419000, &stru_1022F9FB0);
  }
  float v4 = qword_102419008;
  if (os_log_type_enabled((os_log_t)qword_102419008, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)std::string buf = 134218240;
    *(void *)&uint8_t buf[4] = v25;
    *(_WORD *)&unsigned char buf[12] = 2048;
    *(void *)&unsigned char buf[14] = *((void *)&v25 + 1);
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "distribution,localLimits,min,%f,max,%f", buf, 0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419000 != -1) {
      dispatch_once(&qword_102419000, &stru_1022F9FB0);
    }
    int v12 = 134218240;
    *(void *)int v13 = v25;
    *(_WORD *)&v13[8] = 2048;
    *(void *)&v13[10] = *((void *)&v25 + 1);
    float v8 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "std::pair<float, float> CLSwimLapDetect::getLapStrokeThreshold(CLSwimDetectedTurn) const", "%s\n", v8);
    if (v8 != buf) {
      free(v8);
    }
  }
  return *(double *)&v25;
}

void sub_100E0B654(double *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, double a9@<D0>)
{
  int v9 = a3;
  uint64_t v29 = 0;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  memset(v22, 0, sizeof(v22));
  uint64_t v14 = a1 + 13;
  if (a1[14] <= 0.0)
  {
    if ((*(unsigned int (**)(void, _OWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(void **)a1 + 120))(*(void *)a1, v22, a3, a4, a5, a6, a7))
    {
      double v15 = *((double *)&v23 + 1);
    }
    else
    {
      double v15 = (*(double (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(void **)a1 + 184))(*(void *)a1, v16, v17, v18, v19, v20, v21);
    }
  }
  else
  {
    double v15 = *v14;
  }
  *(double *)a8 = a9;
  *(double *)(a8 + 8) = v15;
  *(_DWORD *)(a8 + 16) = a2;
  *(unsigned char *)(a8 + 20) = 0;
  sub_100E0BCDC(a1, a8, v9);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)a8;
  *(double *)((char *)v14 + 13) = *(double *)(a8 + 13);
}

BOOL sub_100E0B790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v6 = sub_100E0AB30(a1);
  if (v6) {
    sub_100E0B7E4(a1, a2, a3);
  }
  return v6;
}

void sub_100E0B7E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void **__return_ptr))(**(void **)a1 + 24))(v15);
  sub_100E0B93C(&v10, (uint64_t *)v15);
  float v4 = v12;
  *(double *)(a3 + 48) = v11;
  *(double *)(a3 + 72) = sqrtf(v4);
  double v5 = sub_100E0BC50((uint64_t)&v10, 0.5);
  *(double *)(a3 + 56) = *(float *)&v5;
  *(_DWORD *)(a3 + 64) = v10;
  double v6 = sub_100E0BC50((uint64_t)&v10, 0.1);
  *(double *)(a3 + 96) = *(float *)&v6;
  double v7 = sub_100E0BC50((uint64_t)&v10, 0.9);
  *(double *)(a3 + 104) = *(float *)&v7;
  double v8 = *(double *)(a3 + 48);
  double v9 = 8.0;
  if (v8 <= 20.0) {
    double v9 = 6.0;
  }
  if (v9 < *(double *)(a3 + 72) + *(double *)(a3 + 72)) {
    double v9 = *(double *)(a3 + 72) + *(double *)(a3 + 72);
  }
  *(double *)(a3 + 80) = fmax(v8 - v9, 3.0);
  *(double *)(a3 + 88) = v8 + v9;
  if (__p)
  {
    uint64_t v14 = __p;
    operator delete(__p);
  }
  if (v15[0])
  {
    v15[1] = v15[0];
    operator delete(v15[0]);
  }
}

void sub_100E0B908(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  uint64_t v16 = *(void **)(v14 - 40);
  if (v16)
  {
    *(void *)(v14 - 32) = v16;
    operator delete(v16);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100E0B93C(void *a1, uint64_t *a2)
{
  a1[3] = 0;
  float v3 = (void **)(a1 + 3);
  *a1 = 0;
  a1[1] = 0;
  a1[4] = 0;
  a1[5] = 0;
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (*a2 != v5)
  {
    do
    {
      v19[0] = v4 + 8;
      v19[1] = a1;
      uint64_t v20 = v19;
      sub_100E0C4CC((uint64_t)a1, (uint64_t *)&v20);
      float v6 = (float)*(int *)(v4 + 8);
      double v8 = (float *)a1[4];
      unint64_t v7 = a1[5];
      if ((unint64_t)v8 >= v7)
      {
        uint64_t v10 = (float *)*v3;
        uint64_t v11 = ((char *)v8 - (unsigned char *)*v3) >> 2;
        unint64_t v12 = v11 + 1;
        if ((unint64_t)(v11 + 1) >> 62) {
          sub_1001D7FD4();
        }
        uint64_t v13 = v7 - (void)v10;
        if (v13 >> 1 > v12) {
          unint64_t v12 = v13 >> 1;
        }
        if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v14 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v14 = v12;
        }
        if (v14)
        {
          double v15 = (char *)sub_10017EA34((uint64_t)(a1 + 5), v14);
          uint64_t v10 = (float *)a1[3];
          double v8 = (float *)a1[4];
        }
        else
        {
          double v15 = 0;
        }
        uint64_t v16 = (float *)&v15[4 * v11];
        *uint64_t v16 = v6;
        double v9 = v16 + 1;
        while (v8 != v10)
        {
          int v17 = *((_DWORD *)v8-- - 1);
          *((_DWORD *)v16-- - 1) = v17;
        }
        a1[3] = v16;
        a1[4] = v9;
        a1[5] = &v15[4 * v14];
        if (v10) {
          operator delete(v10);
        }
      }
      else
      {
        *double v8 = v6;
        double v9 = v8 + 1;
      }
      a1[4] = v9;
      v4 += 16;
    }
    while (v4 != v5);
  }
  return a1;
}

void sub_100E0BA90(_Unwind_Exception *exception_object)
{
  uint64_t v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 32) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100E0BAB4(uint64_t a1, float **a2)
{
  *(void *)(a1 + 24) = 0;
  float v3 = (void **)(a1 + 24);
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (*a2 != v5)
  {
    float v6 = 0;
    unint64_t v7 = (void *)(a1 + 40);
    do
    {
      unint64_t v8 = *(void *)a1;
      unint64_t v9 = *(void *)a1 + 1;
      *(void *)a1 = v9;
      float v10 = (float)(*v4 + (float)(*(float *)(a1 + 8) * (float)v8)) / (float)v9;
      *(float *)(a1 + 8) = v10;
      if (v9 >= 2) {
        *(float *)(a1 + 12) = (float)((float)(*(float *)(a1 + 12) * (float)v8) / (float)v9)
      }
                            + (float)((float)((float)(*v4 - v10) * (float)(*v4 - v10)) / (float)v8);
      if ((unint64_t)v6 >= *v7)
      {
        unint64_t v12 = (char *)*v3;
        uint64_t v13 = (v6 - (unsigned char *)*v3) >> 2;
        unint64_t v14 = v13 + 1;
        if ((unint64_t)(v13 + 1) >> 62) {
          sub_1001D7FD4();
        }
        uint64_t v15 = *v7 - (void)v12;
        if (v15 >> 1 > v14) {
          unint64_t v14 = v15 >> 1;
        }
        if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v16 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v16 = v14;
        }
        if (v16)
        {
          int v17 = (char *)sub_10017EA34(a1 + 40, v16);
          unint64_t v12 = *(char **)(a1 + 24);
          float v6 = *(char **)(a1 + 32);
        }
        else
        {
          int v17 = 0;
        }
        uint64_t v18 = &v17[4 * v13];
        *(float *)uint64_t v18 = *v4;
        uint64_t v11 = v18 + 4;
        while (v6 != v12)
        {
          int v19 = *((_DWORD *)v6 - 1);
          v6 -= 4;
          *((_DWORD *)v18 - 1) = v19;
          v18 -= 4;
        }
        *(void *)(a1 + 24) = v18;
        *(void *)(a1 + 32) = v11;
        *(void *)(a1 + 40) = &v17[4 * v16];
        if (v12) {
          operator delete(v12);
        }
      }
      else
      {
        *(float *)float v6 = *v4;
        uint64_t v11 = v6 + 4;
      }
      *(void *)(a1 + 32) = v11;
      ++v4;
      float v6 = v11;
    }
    while (v4 != v5);
  }
  return a1;
}

void sub_100E0BC30(_Unwind_Exception *exception_object)
{
  uint64_t v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 32) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

double sub_100E0BC50(uint64_t a1, float a2)
{
  float v3 = *(float **)(a1 + 24);
  uint64_t v4 = *(float **)(a1 + 32);
  if (v3 == v4) {
    return 0.0;
  }
  if (a2 < 0.0 || a2 > 1.0) {
    sub_101A9007C();
  }
  float v6 = (float)(unint64_t)(v4 - v3 - 1) * a2;
  uint64_t v7 = (int)v6;
  unint64_t v8 = &v3[v7];
  if (v8 != v4)
  {
    sub_1004EF34C(v3, v8, v4, v6);
    float v3 = *(float **)(a1 + 24);
  }
  *(float *)&double result = v3[v7];
  return result;
}

int8x16_t sub_100E0BCDC(double *a1, uint64_t a2, int a3)
{
  int8x16_t v9 = *(int8x16_t *)a2;
  sub_100E0C168(a1, (long long *)a2);
  if (a3) {
    sub_100E0C310((uint64_t)a1, (long long *)a2);
  }
  else {
    sub_100E0C3FC((uint64_t)a1, (long long *)a2);
  }
  *(void *)&v6.f64[0] = v9.i64[0];
  v6.f64[1] = *(float64_t *)(a2 + 8);
  v7.f64[0] = *(float64_t *)a2;
  *(void *)&v7.f64[1] = v9.i64[1];
  int8x16_t result = vbslq_s8((int8x16_t)vcgtq_f64(v7, v6), v9, *(int8x16_t *)a2);
  *(int8x16_t *)a2 = result;
  return result;
}

void sub_100E0BD5C(uint64_t a1@<X0>, float *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  *a2 = 0.0;
  (*(void (**)(uint64_t *__return_ptr, double, double))(**(void **)a1 + 80))(a4, *(double *)(a3 + 8), *(double *)a3);
  uint64_t v8 = *a4;
  uint64_t v7 = a4[1];
  if (0xAAAAAAAAAAAAAAABLL * ((v7 - *a4) >> 3) > 1)
  {
    memset(__p, 0, 24);
    if (v7 != v8)
    {
      unint64_t v12 = 0;
      do
      {
        uint64_t v13 = v7 - 24;
        if (v7 - 24 == v8) {
          break;
        }
        float v14 = *(double *)(v7 - 24) - *(double *)(v7 - 48);
        if (v12 >= __p[2])
        {
          unint64_t v16 = (float *)__p[0];
          uint64_t v17 = ((char *)v12 - (char *)__p[0]) >> 2;
          unint64_t v18 = v17 + 1;
          if ((unint64_t)(v17 + 1) >> 62) {
            sub_1001D7FD4();
          }
          int64_t v19 = (char *)__p[2] - (char *)__p[0];
          if (((char *)__p[2] - (char *)__p[0]) >> 1 > v18) {
            unint64_t v18 = v19 >> 1;
          }
          if ((unint64_t)v19 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v20 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v20 = v18;
          }
          if (v20)
          {
            uint64_t v21 = (char *)sub_10017EA34((uint64_t)&__p[2], v20);
            unint64_t v16 = (float *)__p[0];
            unint64_t v12 = (float *)__p[1];
          }
          else
          {
            uint64_t v21 = 0;
          }
          long long v22 = (float *)&v21[4 * v17];
          float *v22 = v14;
          uint64_t v15 = v22 + 1;
          while (v12 != v16)
          {
            int v23 = *((_DWORD *)v12-- - 1);
            *((_DWORD *)v22-- - 1) = v23;
          }
          __p[0] = v22;
          __p[1] = v15;
          __p[2] = &v21[4 * v20];
          if (v16) {
            operator delete(v16);
          }
        }
        else
        {
          *unint64_t v12 = v14;
          uint64_t v15 = v12 + 1;
        }
        __p[1] = v15;
        uint64_t v8 = *a4;
        unint64_t v12 = (float *)v15;
        uint64_t v7 = v13;
      }
      while (v13 != *a4);
    }
    sub_100E0BAB4((uint64_t)buf, (float **)__p);
    double v24 = sub_100E0BC50((uint64_t)buf, 0.5);
    *a2 = 1.0 / *(float *)&v24;
    if (v33)
    {
      uint64_t v34 = v33;
      operator delete(v33);
    }
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
  }
  else
  {
    if (qword_102419000 != -1) {
      dispatch_once(&qword_102419000, &stru_1022F9FB0);
    }
    int8x16_t v9 = qword_102419008;
    if (os_log_type_enabled((os_log_t)qword_102419008, OS_LOG_TYPE_ERROR))
    {
      unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((a4[1] - *a4) >> 3);
      int v11 = *(_DWORD *)(a3 + 16);
      *(_DWORD *)std::string buf = 134218240;
      unint64_t v30 = v10;
      __int16 v31 = 1024;
      int v32 = v11;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "lap detected with one or less strokes,strokes,%lu,lapType,%d", buf, 0x12u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419000 != -1) {
        dispatch_once(&qword_102419000, &stru_1022F9FB0);
      }
      unint64_t v25 = 0xAAAAAAAAAAAAAAABLL * ((a4[1] - *a4) >> 3);
      int v26 = *(_DWORD *)(a3 + 16);
      LODWORD(__p[0]) = 134218240;
      *(void **)((char *)__p + 4) = (void *)v25;
      WORD2(__p[1]) = 1024;
      *(_DWORD *)((char *)&__p[1] + 6) = v26;
      long long v27 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "std::vector<CLSwimDataInterface::StrokeEntry> CLSwimLapDetect::getStrokesInLap(float &, CLSwimDetectedLap) const", "%s\n", v27);
      if (v27 != (char *)buf) {
        free(v27);
      }
    }
    a4[1] = *a4;
  }
}

void sub_100E0C110(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  uint64_t v21 = *(void **)v19;
  if (*(void *)v19)
  {
    *(void *)(v19 + 8) = v21;
    operator delete(v21);
  }
  _Unwind_Resume(exception_object);
}

void sub_100E0C168(double *a1, long long *a2)
{
  float v15 = 0.0;
  long long v11 = *a2;
  uint64_t v12 = *((void *)a2 + 2);
  sub_100E0BD5C((uint64_t)a1, &v15, (uint64_t)&v11, (uint64_t *)&__p);
  uint64_t v4 = (double *)__p;
  if (__p != v14)
  {
    if (*((unsigned char *)__p + 16))
    {
      double v5 = *(double *)__p + -1.0 / v15;
    }
    else
    {
      float64x2_t v6 = (double *)__p;
      while (!*((unsigned char *)v6 + 16))
      {
        v6 += 3;
        if (v6 == v14) {
          goto LABEL_10;
        }
      }
      if (v6 != v14)
      {
        float v7 = v15;
        float v8 = 4.0;
        uint64_t v4 = v6;
        goto LABEL_11;
      }
LABEL_10:
      float v7 = v15;
      float v8 = 1.0;
LABEL_11:
      double v5 = *v4 - (float)(v8 / v7);
    }
    *((double *)a2 + 1) = v5;
    uint64_t v23 = 0;
    long long v21 = 0u;
    long long v22 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    long long v17 = 0u;
    long long v18 = 0u;
    memset(v16, 0, sizeof(v16));
    double v9 = a1[13];
    if (v9 <= 0.0)
    {
      int v10 = (*(uint64_t (**)(void, _OWORD *))(**(void **)a1 + 120))(*(void *)a1, v16);
      double v9 = -1.0;
      if (v10) {
        double v9 = *((double *)&v17 + 1);
      }
    }
    if (*((double *)a2 + 1) >= v9) {
      double v9 = *((double *)a2 + 1);
    }
    *((double *)a2 + 1) = v9;
    uint64_t v4 = (double *)__p;
  }
  if (v4)
  {
    float v14 = v4;
    operator delete(v4);
  }
}

void sub_100E0C2EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100E0C310(uint64_t a1, long long *a2)
{
  float v17 = 0.0;
  long long v13 = *a2;
  uint64_t v14 = *((void *)a2 + 2);
  sub_100E0BD5C(a1, &v17, (uint64_t)&v13, (uint64_t *)&v15);
  float v3 = v15;
  uint64_t v4 = v16;
  if (v15 != v16)
  {
    double v5 = v16;
    while (v5 != v15)
    {
      float64x2_t v6 = v5 - 3;
      int v7 = *((unsigned __int8 *)v5 - 8);
      int v8 = *((_DWORD *)v5 - 4);
      if (v7) {
        BOOL v9 = v8 == 0;
      }
      else {
        BOOL v9 = 1;
      }
      double v5 = v6;
      if (!v9)
      {
        int v10 = v6 + 3;
        goto LABEL_10;
      }
    }
    int v10 = v16;
LABEL_10:
    double v11 = *(v10 - 3) + (float)(1.5 / v17);
    while (v4 != v15)
    {
      v4 -= 3;
      if (v4 == v15) {
        break;
      }
      double v12 = *(v4 - 3);
      if (*v4 - v12 > 10.0)
      {
        if (v12 < v11) {
          double v11 = *(v4 - 3);
        }
        break;
      }
    }
    *(double *)a2 = v11;
  }
  if (v3)
  {
    unint64_t v16 = v3;
    operator delete(v3);
  }
}

void sub_100E0C3FC(uint64_t a1, long long *a2)
{
  float v12 = 0.0;
  long long v8 = *a2;
  uint64_t v9 = *((void *)a2 + 2);
  sub_100E0BD5C(a1, &v12, (uint64_t)&v8, (uint64_t *)&v10);
  float v3 = v10;
  uint64_t v4 = v11;
  if (v10 != v11)
  {
    double v5 = v11;
    while (v5 != v10)
    {
      float64x2_t v6 = (char *)(v5 - 3);
      int v7 = *((unsigned __int8 *)v5 - 8);
      v5 -= 3;
      if (v7)
      {
        uint64_t v4 = (double *)(v6 + 24);
        break;
      }
    }
    *(double *)a2 = *(v4 - 3) + (float)(1.0 / v12);
  }
  if (v3)
  {
    double v11 = v3;
    operator delete(v3);
  }
}

void sub_100E0C49C(id a1)
{
  qword_102419008 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Swimming");
}

float sub_100E0C4CC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  ++*(void *)a1;
  *(float *)(a1 + 8) = (float)((float)**(int **)v2
                             + (float)(*(float *)(a1 + 8) * (float)(unint64_t)(**(void **)(v2 + 8) - 1)))
                     / (float)**(unint64_t **)(v2 + 8);
  return sub_100E0C510((float *)(a1 + 12), v2);
}

float sub_100E0C510(float *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (*(void *)v2 >= 2uLL)
  {
    float v3 = (float)**(int **)a2 - *(float *)(v2 + 8);
    float result = (float)((float)(*a1 * (float)(unint64_t)(*(void *)v2 - 1)) / (float)*(unint64_t *)v2)
           + (float)((float)(v3 * v3) / (float)(unint64_t)(*(void *)v2 - 1));
    *a1 = result;
  }
  return result;
}

uint64_t sub_100E0C560(uint64_t a1, uint64_t *a2)
{
  float v3 = sub_10156C66C((void *)a1, a2);
  void *v3 = off_1022F9FE0;
  v3[12] = 0;
  v3[13] = 0;
  v3[11] = 0;
  *((_DWORD *)v3 + 28) = 0;
  sub_10044FD20(v5, "MinimumFTPRequiredTimeInSecondsToBeEligibleForFTPCompute", &dword_101D90928, 0);
  *(_DWORD *)(a1 + 116) = v6;
  sub_10044FD20(v5, "NumberOfRequiredSamplesFTPWithPowerAndHR", &dword_101D9092C, 0);
  *(_DWORD *)(a1 + 120) = v6;
  sub_10044FD20(v5, "NumberOfRequiredFTPSamplesWithPower", &dword_101D90930, 0);
  *(_DWORD *)(a1 + 124) = v6;
  return a1;
}

void sub_100E0C624(_Unwind_Exception *exception_object)
{
  float v3 = (std::__shared_weak_count *)v1[12];
  if (v3) {
    sub_1000DB0A0(v3);
  }
  void *v1 = off_1022FA060;
  uint64_t v4 = (std::__shared_weak_count *)v1[2];
  if (v4) {
    sub_1000DB0A0(v4);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100E0C670()
{
  return 1;
}

uint64_t sub_100E0C678(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  float v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3) {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  (*(void (**)(uint64_t *__return_ptr))(*(void *)v2 + 16))(&v8);
  uint64_t v5 = v8;
  uint64_t v4 = v9;
  if (v9) {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  int v6 = *(std::__shared_weak_count **)(a1 + 96);
  *(void *)(a1 + 88) = v5;
  *(void *)(a1 + 96) = v4;
  if (v6) {
    sub_1000DB0A0(v6);
  }
  if (v9) {
    sub_1000DB0A0(v9);
  }
  if (v3) {
    sub_1000DB0A0(v3);
  }
  *(void *)(a1 + 104) = 0;
  *(_DWORD *)(a1 + 112) = 0;
  return 1;
}

void sub_100E0C72C(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_1000DB0A0(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100E0C744(uint64_t a1)
{
  return *(unsigned int *)(a1 + 104);
}

uint64_t sub_100E0C74C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 88);
  if (v2) {
    sub_100EC8B00(v2);
  }
  *(void *)(a1 + 104) = 0;
  *(_DWORD *)(a1 + 112) = 0;
  return 1;
}

uint64_t sub_100E0C784(uint64_t a1)
{
  *(void *)(a1 + 104) = 0;
  *(_DWORD *)(a1 + 112) = 0;
  return 1;
}

uint64_t sub_100E0C794(_DWORD *a1, unsigned __int8 *uu)
{
  a1[27] = 0;
  a1[28] = 0;
  uint64_t v4 = (uint64_t *)*((void *)uu + 6);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if (v5 != v6)
  {
    int v7 = 0;
    int v8 = 0;
    do
    {
      if (*(float *)(v5 + 32) >= 0.0)
      {
        a1[27] = ++v8;
        if (*(float *)(v5 + 20) > 0.39) {
          a1[28] = ++v7;
        }
      }
      v5 += 64;
    }
    while (v5 != v6);
  }
  memset(v10, 0, sizeof(v10));
  uuid_unparse(uu, v10);
  if (sub_100E0C8A8((uint64_t)a1, 1, a1[31], a1[30], a1[29], (uint64_t)v10, *((double *)uu + 2), *((double *)uu + 3))) {
    ++a1[26];
  }
  return 1;
}

BOOL sub_100E0C890(int *a1, int a2, uint64_t a3, double a4, double a5)
{
  return sub_100E0C8A8((uint64_t)a1, a2, a1[31], a1[30], a1[29], a3, a4, a5);
}

uint64_t sub_100E0C8A0()
{
  return 1;
}

BOOL sub_100E0C8A8(uint64_t a1, int a2, int a3, int a4, int a5, uint64_t a6, double a7, double a8)
{
  if (a8 - a7 >= (double)a5)
  {
    if (sub_100E0CD58(a1, a3, a4, a7, a8))
    {
      if (qword_1024192F0 != -1) {
        dispatch_once(&qword_1024192F0, &stru_1022FA0A8);
      }
      float v15 = qword_1024192F8;
      if (os_log_type_enabled((os_log_t)qword_1024192F8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::string buf = 67109378;
        int v20 = a2;
        __int16 v21 = 2080;
        uint64_t v22 = a6;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "Session %d, session Id, %s, is eligible to trigger FTP calculation.", buf, 0x12u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024192F0 != -1) {
          dispatch_once(&qword_1024192F0, &stru_1022FA0A8);
        }
        float v17 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLCyclingValidSessionCounter::isValidSession(CFAbsoluteTime, CFAbsoluteTime, int, const int, const int, const int, char *)", "%s\n", v17);
        if (v17 != (char *)buf) {
          free(v17);
        }
      }
      return 1;
    }
    else
    {
      if (qword_1024192F0 != -1) {
        dispatch_once(&qword_1024192F0, &stru_1022FA0A8);
      }
      unint64_t v16 = qword_1024192F8;
      if (os_log_type_enabled((os_log_t)qword_1024192F8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::string buf = 67109378;
        int v20 = a2;
        __int16 v21 = 2080;
        uint64_t v22 = a6;
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "Session %d, session Id, %s, is not eligible to trigger FTP calculation.", buf, 0x12u);
      }
      BOOL result = sub_10013D1A0(115, 2);
      if (result)
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024192F0 == -1)
        {
LABEL_27:
          long long v18 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLCyclingValidSessionCounter::isValidSession(CFAbsoluteTime, CFAbsoluteTime, int, const int, const int, const int, char *)", "%s\n", v18);
          if (v18 != (char *)buf) {
            free(v18);
          }
          return 0;
        }
LABEL_30:
        dispatch_once(&qword_1024192F0, &stru_1022FA0A8);
        goto LABEL_27;
      }
    }
  }
  else
  {
    if (qword_1024192F0 != -1) {
      dispatch_once(&qword_1024192F0, &stru_1022FA0A8);
    }
    long long v13 = qword_1024192F8;
    if (os_log_type_enabled((os_log_t)qword_1024192F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::string buf = 67110146;
      int v20 = a2;
      __int16 v21 = 2080;
      uint64_t v22 = a6;
      __int16 v23 = 2048;
      double v24 = a7;
      __int16 v25 = 2048;
      double v26 = a8;
      __int16 v27 = 1024;
      int v28 = a5;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "Short period workout. Can not calculate FTP for session number %d, sessionId, %s. start time:%f and end time:%f, minimum required time:%d", buf, 0x2Cu);
    }
    BOOL result = sub_10013D1A0(115, 2);
    if (result)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024192F0 == -1) {
        goto LABEL_27;
      }
      goto LABEL_30;
    }
  }
  return result;
}

BOOL sub_100E0CD58(uint64_t a1, int a2, int a3, double a4, double a5)
{
  int v10 = *(_DWORD *)(a1 + 108);
  int v9 = *(_DWORD *)(a1 + 112);
  BOOL v12 = v10 >= a2 || v9 >= a3;
  if (v12)
  {
    if (qword_1024192F0 != -1) {
      dispatch_once(&qword_1024192F0, &stru_1022FA0A8);
    }
    long long v13 = qword_1024192F8;
    if (os_log_type_enabled((os_log_t)qword_1024192F8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 134219264;
      double v18 = a4;
      __int16 v19 = 2048;
      double v20 = a5;
      __int16 v21 = 1024;
      int v22 = v10;
      __int16 v23 = 1024;
      int v24 = a2;
      __int16 v25 = 1024;
      int v26 = v9;
      __int16 v27 = 1024;
      int v28 = a3;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "Checked session from, %f, to %f, Number of samples with power and heart rate are enough to calculate the FTP. Number of samples with power: %d, required number of samples with power is %d, number of samples with power and heart rate:%d. Required number of samples with power and heart rate is %d", buf, 0x2Eu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024192F0 == -1)
      {
LABEL_22:
        unint64_t v16 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLCyclingValidSessionCounter::hasEnoughHRAndPowerSamples(const CFAbsoluteTime, CFAbsoluteTime, const int, const int)", "%s\n", v16);
        if (v16 != (char *)buf) {
          free(v16);
        }
        return v12;
      }
LABEL_24:
      dispatch_once(&qword_1024192F0, &stru_1022FA0A8);
      goto LABEL_22;
    }
  }
  else
  {
    if (qword_1024192F0 != -1) {
      dispatch_once(&qword_1024192F0, &stru_1022FA0A8);
    }
    uint64_t v14 = qword_1024192F8;
    if (os_log_type_enabled((os_log_t)qword_1024192F8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)std::string buf = 134219264;
      double v18 = a4;
      __int16 v19 = 2048;
      double v20 = a5;
      __int16 v21 = 1024;
      int v22 = v10;
      __int16 v23 = 1024;
      int v24 = a2;
      __int16 v25 = 1024;
      int v26 = v9;
      __int16 v27 = 1024;
      int v28 = a3;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "Checked session from, %f, to %f, Number of samples with power and heart rate are not enough to calculate the FTP for this session. Number of samples with power: %d, required number of samples with power is %d, number of samples with power and heart rate:%d. Required number of samples with power and heart rate is %d", buf, 0x2Eu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024192F0 == -1) {
        goto LABEL_22;
      }
      goto LABEL_24;
    }
  }
  return v12;
}

void sub_100E0D104(void *a1)
{
  sub_100E0D18C(a1);

  operator delete();
}

__n128 sub_100E0D13C(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 68) = *(_OWORD *)(a2 + 44);
  *(_OWORD *)(a1 + 56) = v4;
  *(_OWORD *)(a1 + 40) = v3;
  *(__n128 *)(a1 + 24) = result;
  return result;
}

void sub_100E0D15C(id a1)
{
  qword_1024192F8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "CyclingPower");
}

void *sub_100E0D18C(void *a1)
{
  *a1 = off_1022F9FE0;
  uint64_t v2 = (std::__shared_weak_count *)a1[12];
  if (v2) {
    sub_1000DB0A0(v2);
  }
  *a1 = off_1022FA060;
  long long v3 = (std::__shared_weak_count *)a1[2];
  if (v3) {
    sub_1000DB0A0(v3);
  }
  return a1;
}

uint64_t sub_100E11A0C(uint64_t a1)
{
  return *(void *)(*(void *)(a1 + 32) + 56);
}

uint64_t sub_100E11BC4(uint64_t a1)
{
  return *(void *)(*(void *)(a1 + 32) + 120);
}

uint64_t sub_100E11D60(uint64_t a1)
{
  return *(void *)(*(void *)(a1 + 32) + 176);
}

void sub_100E121A4(id a1)
{
  qword_102419558 = (uint64_t)os_log_create("com.apple.locationd.Core", "Routine");
}

void sub_100E121D4(uint64_t a1, void *a2, uint64_t a3)
{
  *(_DWORD *)a1 = 0;
  sub_100E16354(a1 + 8, a3);
  id v5 = a2;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = 0;
  if (sub_100744308()) {
    int v6 = 0;
  }
  else {
    int v6 = 512;
  }
  *(void *)(a1 + 80) = 0;
  *(_DWORD *)(a1 + 72) = v6;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0x4014000000000000;
  *(void *)(a1 + 104) = 0;
  if (qword_1024193D0 != -1) {
    dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
  }
  int v7 = qword_1024193D8;
  if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "L5Context,initializing", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
    }
    int v9 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "CLGnssL5Context::CLGnssL5Context(id<CLIntersiloUniverse>, CLGnssL5UpdateCallbackType)", "%s\n", v9);
    if (v9 != (char *)buf) {
      free(v9);
    }
  }
  int v8 = operator new(0x20uLL);
  *int v8 = off_1022FA138;
  v8[1] = sub_100E13690;
  _DWORD v8[2] = 0;
  uint64_t v8[3] = a1;
  operator new();
}

void sub_100E126DC(_Unwind_Exception *a1)
{
  uint64_t v5 = *(void *)(v2 + 104);
  *(void *)(v2 + 104) = 0;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  uint64_t v6 = *(void *)(v2 + 88);
  *(void *)(v2 + 88) = 0;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  sub_1003C2C38(v3, 0);
  sub_100855EA8(v1);
  _Unwind_Resume(a1);
}

void sub_100E127BC()
{
}

void sub_100E127C4(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 40), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022FA108);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    int v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLGnssL5Context::onGnssModeOfOperationStatusNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022FA108);
    }
    int v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      float v15 = "";
      __int16 v16 = 2082;
      float v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLGnssL5Context::onGnssModeOfOperationStatusNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_100E13FF0(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100E12980(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100E129A0(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 40), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022FA108);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    int v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLGnssL5Context::onAccessoryNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022FA108);
    }
    int v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)std::string buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      float v15 = "";
      __int16 v16 = 2082;
      float v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLGnssL5Context::onAccessoryNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_100E138EC(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100E12B5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100E12B80(uint64_t a1)
{
  uint64_t v2 = (void *)(a1 + 8);
  sub_100E164F0((void *)(a1 + 8));
  uint64_t v3 = *(void *)(a1 + 104);
  if (v3)
  {
    [*(id *)(v3 + 16) unregister:*(void *)(v3 + 8) forNotification:41];
    uint64_t v4 = *(void *)(a1 + 104);
    *(void *)(a1 + 104) = 0;
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
  }
  uint64_t v5 = *(void *)(a1 + 88);
  if (v5)
  {
    [*(id *)(v5 + 16) unregister:*(void *)(v5 + 8) forNotification:9];
    [*(id *)(*(void *)(a1 + 88) + 16) unregister:*(void *)(*(void *)(a1 + 88) + 8) forNotification:5];
  }

  uint64_t v6 = *(void *)(a1 + 104);
  *(void *)(a1 + 104) = 0;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  uint64_t v7 = *(void *)(a1 + 88);
  *(void *)(a1 + 88) = 0;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  sub_1003C2C38((uint64_t *)(a1 + 80), 0);
  sub_100855EA8(v2);
  return a1;
}

void sub_100E12CA0(uint64_t a1, int a2)
{
  if (qword_1024193D0 != -1) {
    dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
  }
  uint64_t v4 = qword_1024193D8;
  if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::string buf = 67240192;
    int v9 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "L5Context,SignalEnvironmentType,%{public}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
    }
    uint64_t v7 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLGnssL5Context::feedSignalEnvironment(const CLSignalEnvironmentProvider_Type::SignalEnvironmentType)", "%s\n", v7);
    if (v7 != (char *)buf) {
      free(v7);
    }
  }
  int v5 = *(unsigned __int8 *)(a1 + 49);
  int v6 = (a2 - 3) < 2;
  *(unsigned char *)(a1 + 49) = v6;
  if (v5 != v6) {
    sub_100E12E74(a1);
  }
}

void sub_100E12E74(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 51))
  {
    unint64_t v2 = sub_100E1521C();
    if ((v2 & 0xFF00000000) != 0)
    {
      int v3 = v2;
      if (qword_1024193D0 != -1) {
        dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
      }
      uint64_t v4 = qword_1024193D8;
      if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::string buf = 67240192;
        *(_DWORD *)&uint8_t buf[4] = v3;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "L5Context,forcing L5 band use to %{public}d", buf, 8u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193D0 != -1) {
          dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
        }
        int v5 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLGnssL5Context::tickL5Enablement()", "%s\n", v5);
        if (v5 != (char *)buf) {
          free(v5);
        }
      }
      *(void *)std::string buf = 0;
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      *(_DWORD *)a1 = v3;
      if (*(void *)(a1 + 32))
      {
        sub_100E162A0(a1 + 8, v3);
        if (*(void *)buf)
        {
          uint64_t v7 = *(void **)buf;
          operator delete(*(void **)buf);
        }
      }
    }
    else if (sub_100744308())
    {
      sub_100E15444(a1);
    }
    else
    {
      sub_100E15C34((int *)a1);
    }
  }
}

void sub_100E130FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100E13120(uint64_t a1, int *a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 55);
  int isTypeInVehicle = CLMotionActivity::isTypeInVehicle();
  *(unsigned char *)(a1 + 55) = isTypeInVehicle;
  if (v4 != isTypeInVehicle)
  {
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
    }
    int v6 = qword_1024193D8;
    if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEBUG))
    {
      int v7 = *a2;
      *(_DWORD *)std::string buf = 67174657;
      int v10 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "L5Context,Motion,%{private}d", buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193D0 != -1) {
        dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
      }
      uint64_t v8 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLGnssL5Context::feedMotion(const CLMotionActivity &)", "%s\n", v8);
      if (v8 != (char *)buf) {
        free(v8);
      }
    }
    sub_100E12E74(a1);
  }
}

void sub_100E132F8(uint64_t a1, int a2)
{
  if (qword_1024193D0 != -1) {
    dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
  }
  int v4 = qword_1024193D8;
  if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::string buf = 67240192;
    int v7 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "L5Context,AccHigh,%{public}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
    }
    int v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLGnssL5Context::feedHighDesiredAccuracy(const BOOL)", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
  if (*(unsigned __int8 *)(a1 + 52) != a2)
  {
    *(unsigned char *)(a1 + 52) = a2;
    sub_100E12E74(a1);
  }
}

void sub_100E134C0(uint64_t a1, int a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 50);
  if (qword_1024193D0 != -1) {
    dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
  }
  int v5 = qword_1024193D8;
  if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::string buf = 67240192;
    int v8 = a2;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "L5Context,kNotificationBatterySaverMode,%{public}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
    }
    int v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLGnssL5Context::feedBatterySaverMode(const BOOL)", "%s\n", v6);
    if (v6 != (char *)buf) {
      free(v6);
    }
  }
  *(unsigned char *)(a1 + 50) = a2;
  if (v4 != a2) {
    sub_100E12E74(a1);
  }
}

void sub_100E13690(uint64_t a1, uint64_t a2, int *a3)
{
  if ((*a3 & 0xFFFFFFFE) == 6)
  {
    *(unsigned char *)(a1 + 48) = 0;
    if (sub_101576750(*(void *)(a1 + 80)))
    {
      *(unsigned char *)(a1 + 48) = 1;
      sub_101576778(*(void *)(a1 + 80), (uint64_t)buf);
      BOOL v5 = sub_100D550A4(v14);
      if (v13 < 0) {
        operator delete(__p);
      }
      if (!v5) {
        *(unsigned char *)(a1 + 48) = 0;
      }
    }
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
    }
    int v6 = qword_1024193D8;
    if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEBUG))
    {
      int v7 = *a3;
      int v8 = *(unsigned __int8 *)(a1 + 48);
      *(_DWORD *)std::string buf = 67240448;
      int v11 = v7;
      LOWORD(__p) = 1026;
      *(_DWORD *)((char *)&__p + 2) = v8;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "L5Context,WiFi notification,%{public}d,associated,%{public}d", buf, 0xEu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193D0 != -1) {
        dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
      }
      int v9 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLGnssL5Context::onWifiNotification(int, const CLWifiService_Type::Notification &, const CLWifiService_Type::NotificationData &)", "%s\n", v9);
      if (v9 != (char *)buf) {
        free(v9);
      }
    }
    sub_100E12E74(a1);
  }
}

void sub_100E138C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100E138EC(uint64_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  if (qword_1024193D0 != -1) {
    dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
  }
  int v7 = qword_1024193D8;
  if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEBUG))
  {
    int v8 = *a3;
    int v9 = *(unsigned __int8 *)(a1 + 59);
    *(_DWORD *)std::string buf = 67240448;
    int v15 = v8;
    __int16 v16 = 1026;
    int v17 = v9;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "L5Context,onAccessoryNotification,notification,%{public}d,currently yielding,%{public}d", buf, 0xEu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
    }
    BOOL v12 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLGnssL5Context::onAccessoryNotification(int, const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)", "%s\n", v12);
    if (v12 != (char *)buf) {
      free(v12);
    }
  }
  int v10 = *a3;
  if (*(unsigned char *)(a1 + 59) && v10 == 9)
  {
    *(unsigned char *)(a1 + 59) = 0;
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
    }
    int v11 = qword_1024193D8;
    if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "L5Context,onAccessorNotification kNotificationLocationUnavailable", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193D0 != -1) {
        dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
      }
      char v13 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLGnssL5Context::onAccessoryNotification(int, const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)", "%s\n", v13);
      if (v13 != (char *)buf) {
        free(v13);
      }
    }
    sub_100E12E74(a1);
    int v10 = *a3;
  }
  if (v10 == 5) {
    sub_100E13C30(a1, a4);
  }
}

void sub_100E13C30(uint64_t a1, uint64_t a2)
{
  double v4 = sub_10016C458();
  int v5 = *(unsigned __int8 *)(a1 + 59);
  if (qword_1024193D0 != -1) {
    dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
  }
  int v6 = qword_1024193D8;
  if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEBUG))
  {
    int v7 = *(_DWORD *)(a2 + 792);
    int v8 = *(_DWORD *)(a2 + 96);
    uint64_t v9 = *(void *)(a2 + 20);
    *(_DWORD *)std::string buf = 67240704;
    int v16 = v7;
    __int16 v17 = 1026;
    int v18 = v8;
    __int16 v19 = 2050;
    uint64_t v20 = v9;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "L5Context,handleLeechLocationNotification,accessoryType,%{public}d,fixType,%{public}d,hacc,%{public}0.2f", buf, 0x18u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
    }
    char v13 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLGnssL5Context::handleLeechLocationNotification(const CLLocationProvider_Type::NotificationData &)", "%s\n", v13);
    if (v13 != (char *)buf) {
      free(v13);
    }
  }
  if ((*(_DWORD *)(a2 + 792) & 0xFFFFFFFE) == 2 && *(double *)(a2 + 20) > 0.0)
  {
    int v10 = 1;
    *(unsigned char *)(a1 + 59) = 1;
    *(double *)(a1 + 64) = v4;
  }
  else
  {
    sub_100E1457C(a1, v4);
    int v10 = *(unsigned __int8 *)(a1 + 59);
  }
  if (v5 != v10)
  {
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
    }
    int v11 = qword_1024193D8;
    if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEFAULT))
    {
      int v12 = *(unsigned __int8 *)(a1 + 59);
      *(_DWORD *)std::string buf = 67240448;
      int v16 = v5;
      __int16 v17 = 1026;
      int v18 = v12;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "L5Context,handleLeechLocationNotification,accessory yield status change,old,%{public}d,new,%{public}d", buf, 0xEu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193D0 != -1) {
        dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
      }
      int v14 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLGnssL5Context::handleLeechLocationNotification(const CLLocationProvider_Type::NotificationData &)", "%s\n", v14);
      if (v14 != (char *)buf) {
        free(v14);
      }
    }
    sub_100E12E74(a1);
  }
}

void sub_100E13FF0(uint64_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  if (qword_1024193D0 != -1) {
    dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
  }
  int v7 = qword_1024193D8;
  if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = *a3;
    *(_DWORD *)std::string buf = 67240192;
    int v12 = v8;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "L5Context,onGnssModeOfOperationStatusNotification,%{public}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
    }
    int v10 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLGnssL5Context::onGnssModeOfOperationStatusNotification(int, const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)", "%s\n", v10);
    if (v10 != (char *)buf) {
      free(v10);
    }
  }
  if (*a3 == 41) {
    sub_100E141CC(a1, v9, a4);
  }
}

void sub_100E141CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(a3 + 1448);
  int v5 = *(unsigned __int8 *)(a3 + 1452);
  int v6 = *(_DWORD *)(a3 + 1456);
  uint64_t v7 = *(void *)(a3 + 1464);
  int v8 = *(unsigned __int8 *)(a3 + 1472);
  if (qword_1024193D0 != -1) {
    dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
  }
  uint64_t v9 = qword_1024193D8;
  if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::string buf = 67241472;
    int v17 = v4;
    __int16 v18 = 1026;
    int v19 = v6;
    __int16 v20 = 1026;
    int v21 = v7 & 1;
    __int16 v22 = 1026;
    unsigned int v23 = (v7 >> 1) & 1;
    __int16 v24 = 1026;
    int v25 = v5;
    __int16 v26 = 1026;
    int v27 = v8;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "L5Context,RhythmicModeNotification,modeOfOps,%{public}d,powerMode,%{public}d,1Hz,%{public}d,rhythmic,%{public}d,state,%{public}d,hasRhythmicClients,%{public}d", buf, 0x26u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
    }
    int v14 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLGnssL5Context::onRhythmicModeOfOperationNotification(const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)", "%s\n", v14);
    if (v14 != (char *)buf) {
      free(v14);
    }
  }
  int v10 = *(unsigned __int8 *)(a1 + 57);
  int v11 = (v7 & 1) == 0 && (v7 & 2) != 0 && v5;
  *(unsigned char *)(a1 + 57) = v11;
  if (v11 != v10)
  {
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
    }
    int v12 = qword_1024193D8;
    if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEFAULT))
    {
      int v13 = *(unsigned __int8 *)(a1 + 57);
      *(_DWORD *)std::string buf = 67240192;
      int v17 = v13;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "L5Context,onlyRhythmicGnss,%{public}d", buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193D0 != -1) {
        dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
      }
      int v15 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLGnssL5Context::onRhythmicModeOfOperationNotification(const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)", "%s\n", v15);
      if (v15 != (char *)buf) {
        free(v15);
      }
    }
    sub_100E12E74(a1);
  }
}

void sub_100E1457C(uint64_t a1, double a2)
{
  if (qword_1024193D0 != -1) {
    dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
  }
  int v4 = qword_1024193D8;
  if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEBUG))
  {
    int v5 = *(unsigned __int8 *)(a1 + 59);
    double v6 = a2 - *(double *)(a1 + 64);
    *(_DWORD *)std::string buf = 67240448;
    LODWORD(v12[0]) = v5;
    WORD2(v12[0]) = 2050;
    *(double *)((char *)v12 + 6) = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "L5Context,updateAccessoryYieldStatusOnTimeout,yielding,%{public}d,timedelta,%{public}0.2f", buf, 0x12u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
    }
    uint64_t v9 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLGnssL5Context::updateAccessoryYieldStatusOnTimeout(const CFTimeInterval)", "%s\n", v9);
    if (v9 != (char *)buf) {
      free(v9);
    }
  }
  if (*(unsigned char *)(a1 + 59) && a2 - *(double *)(a1 + 64) > *(double *)(a1 + 96))
  {
    *(unsigned char *)(a1 + 59) = 0;
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
    }
    uint64_t v7 = qword_1024193D8;
    if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEFAULT))
    {
      double v8 = a2 - *(double *)(a1 + 64);
      *(_DWORD *)std::string buf = 134349056;
      *(double *)int v12 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "L5Context,updateAccessoryYieldStatusOnTimeout,accessory yield,0,time interval,%{public}.2f", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193D0 != -1) {
        dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
      }
      int v10 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLGnssL5Context::updateAccessoryYieldStatusOnTimeout(const CFTimeInterval)", "%s\n", v10);
      if (v10 != (char *)buf) {
        free(v10);
      }
    }
  }
}

void sub_100E148D4(uint64_t a1, int a2)
{
  if (qword_1024193D0 != -1) {
    dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
  }
  int v4 = qword_1024193D8;
  if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::string buf = 67240192;
    int v7 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "L5Context,Focused Nav,%{public}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
    }
    int v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLGnssL5Context::feedFocusedNavigation(const BOOL)", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
  if (*(unsigned __int8 *)(a1 + 54) != a2)
  {
    *(unsigned char *)(a1 + 54) = a2;
    sub_100E12E74(a1);
  }
}

void sub_100E14A9C(uint64_t a1, int a2)
{
  if (qword_1024193D0 != -1) {
    dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
  }
  int v4 = qword_1024193D8;
  if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::string buf = 67240192;
    int v7 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "L5Context,Fitness Activity,%{public}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
    }
    int v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLGnssL5Context::feedFitnessActivity(const BOOL)", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
  if (*(unsigned __int8 *)(a1 + 56) != a2)
  {
    *(unsigned char *)(a1 + 56) = a2;
    sub_100E12E74(a1);
  }
}

void sub_100E14C64(uint64_t a1, int a2)
{
  if (qword_1024193D0 != -1) {
    dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
  }
  int v4 = qword_1024193D8;
  if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::string buf = 67240192;
    int v7 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "L5Context,LowPowerLongDurationHKWorkoutForceOff,%{public}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
    }
    int v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLGnssL5Context::feedLowPowerLongDurationHKWorkoutForceOff(const BOOL)", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
  if (*(unsigned __int8 *)(a1 + 58) != a2)
  {
    *(unsigned char *)(a1 + 58) = a2;
    sub_100E12E74(a1);
  }
}

void sub_100E14E2C(uint64_t a1)
{
  if (qword_1024193D0 != -1) {
    dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
  }
  unint64_t v2 = qword_1024193D8;
  if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "L5Context,stop", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
    }
    int v4 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLGnssL5Context::stop()", "%s\n", v4);
    if (v4 != (char *)buf) {
      free(v4);
    }
  }
  if (*(unsigned char *)(a1 + 51))
  {
    int v3 = *(_DWORD *)(a1 + 72);
    *(void *)std::string buf = 0;
    double v6 = 0;
    uint64_t v7 = 0;
    *(_DWORD *)a1 = v3;
    if (*(void *)(a1 + 32))
    {
      sub_100E162A0(a1 + 8, v3);
      if (*(void *)buf)
      {
        double v6 = *(void **)buf;
        operator delete(*(void **)buf);
      }
    }
    *(unsigned char *)(a1 + 51) = 0;
  }
}

void sub_100E15000(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100E15024(uint64_t a1)
{
  if (qword_1024193D0 != -1) {
    dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
  }
  unint64_t v2 = qword_1024193D8;
  if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)std::string buf = 67240448;
    int v5 = sub_1007440B0();
    __int16 v6 = 1026;
    int v7 = sub_1007441EC();
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "L5Context,start,L5AntennaHasContentionWithCell,%{public}d,L5AntennaHasContentionWithWiFi24,%{public}d", buf, 0xEu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
    }
    sub_1007440B0();
    sub_1007441EC();
    int v3 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLGnssL5Context::start()", "%s\n", v3);
    if (v3 != (char *)buf) {
      free(v3);
    }
  }
  if (!*(unsigned char *)(a1 + 51))
  {
    *(unsigned char *)(a1 + 51) = 1;
    sub_100E12E74(a1);
  }
}

unint64_t sub_100E1521C()
{
  v6[0] = -1;
  sub_1000C7F88(buf);
  int v0 = sub_10006EF84(*(uint64_t *)buf, "GnssForceL5Desire", v6);
  if (v8) {
    sub_1000DB0A0(v8);
  }
  if (!v0) {
    goto LABEL_11;
  }
  if (v6[0] >= 3u)
  {
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
    }
    int v3 = qword_1024193D8;
    if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::string buf = 67240192;
      *(_DWORD *)&uint8_t buf[4] = v6[0];
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "L5Context,unhandled defaults,%{public}d", buf, 8u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193D0 != -1) {
        dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
      }
      v6[1] = 67240192;
      v6[2] = v6[0];
      int v5 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "static std::optional<CLGnssBandUseType> CLGnssL5Context::checkForSettingsOverride()", "%s\n", v5);
      if (v5 != (char *)buf) {
        free(v5);
      }
    }
LABEL_11:
    unint64_t v2 = 0;
    unint64_t v1 = 0;
    return v1 | (unint64_t)v2;
  }
  unint64_t v1 = (unint64_t)v6[0] << 8;
  unint64_t v2 = &_mh_execute_header;
  return v1 | (unint64_t)v2;
}

void sub_100E15424(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  if (a14) {
    sub_1000DB0A0(a14);
  }
  _Unwind_Resume(exception_object);
}

void sub_100E15444(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48)) {
    BOOL v2 = *(unsigned char *)(a1 + 55) == 0;
  }
  else {
    BOOL v2 = 0;
  }
  double v3 = sub_10016C458();
  sub_100E1457C(a1, v3);
  BOOL v4 = v2 && (sub_1007441EC() & 1) != 0
    || *(unsigned char *)(a1 + 50)
    || *(unsigned char *)(a1 + 53) && (sub_1007440B0() & 1) != 0
    || *(unsigned char *)(a1 + 59) != 0;
  if (qword_1024193D0 != -1) {
    dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
  }
  int v5 = qword_1024193D8;
  if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEFAULT))
  {
    int v6 = *(unsigned __int8 *)(a1 + 48);
    int v7 = *(unsigned __int8 *)(a1 + 53);
    int v8 = *(unsigned __int8 *)(a1 + 50);
    int v9 = *(unsigned __int8 *)(a1 + 55);
    int v10 = *(_DWORD *)a1;
    int v11 = *(unsigned __int8 *)(a1 + 59);
    *(_DWORD *)std::string buf = 67241472;
    *(_DWORD *)&uint8_t buf[4] = v6;
    LOWORD(v59) = 1026;
    *(_DWORD *)((char *)&v59 + 2) = v7;
    HIWORD(v59) = 1026;
    *(_DWORD *)long long v60 = v8;
    *(_WORD *)&v60[4] = 1026;
    *(_DWORD *)&v60[6] = v9;
    __int16 v61 = 1026;
    int v62 = v10;
    __int16 v63 = 1026;
    int v64 = v11;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "L5ContextMajorPower,WiFiAssoc,%{public}d,VoiceCall,%{public}d,BattSav,%{public}d,Driving,%{public}d,L5Enable,%{public}d,accessory,%{public}d", buf, 0x26u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
    }
    long long v57 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLGnssL5Context::tickL5EnablementForPlatformsWithMajorPowerImpact()", "%s\n", v57);
    if (v57 != (char *)buf) {
      free(v57);
    }
  }
  if (v4)
  {
    int v12 = 0;
    *(void *)std::string buf = 0;
    uint64_t v59 = 0;
    *(void *)long long v60 = 0;
    if (v2)
    {
      int v13 = sub_10017EA34((uint64_t)v60, 1uLL);
      int v14 = *(_DWORD **)buf;
      int v15 = v59;
      int v17 = &v13[v16];
      _DWORD *v13 = 1;
      int v12 = v13 + 1;
      while (v15 != v14)
      {
        int v18 = *--v15;
        *--int v13 = v18;
      }
      *(void *)std::string buf = v13;
      uint64_t v59 = v12;
      *(void *)long long v60 = v17;
      if (v14) {
        operator delete(v14);
      }
      uint64_t v59 = v12;
    }
    if (*(unsigned char *)(a1 + 50))
    {
      if ((unint64_t)v12 >= *(void *)v60)
      {
        int v28 = *(_DWORD **)buf;
        uint64_t v29 = ((uint64_t)v12 - *(void *)buf) >> 2;
        unint64_t v30 = v29 + 1;
        if ((unint64_t)(v29 + 1) >> 62) {
          sub_1001D7FD4();
        }
        uint64_t v31 = *(void *)v60 - *(void *)buf;
        if ((uint64_t)(*(void *)v60 - *(void *)buf) >> 1 > v30) {
          unint64_t v30 = v31 >> 1;
        }
        if ((unint64_t)v31 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v32 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v32 = v30;
        }
        if (v32)
        {
          unint64_t v33 = (char *)sub_10017EA34((uint64_t)v60, v32);
          int v28 = *(_DWORD **)buf;
          int v12 = v59;
        }
        else
        {
          unint64_t v33 = 0;
        }
        uint64_t v34 = &v33[4 * v29];
        int v35 = &v33[4 * v32];
        *(_DWORD *)uint64_t v34 = 2;
        int v27 = v34 + 4;
        while (v12 != v28)
        {
          int v36 = *--v12;
          *((_DWORD *)v34 - 1) = v36;
          v34 -= 4;
        }
        *(void *)std::string buf = v34;
        uint64_t v59 = v27;
        *(void *)long long v60 = v35;
        if (v28) {
          operator delete(v28);
        }
      }
      else
      {
        *int v12 = 2;
        int v27 = v12 + 1;
      }
      uint64_t v59 = v27;
      int v12 = v27;
    }
    if (*(unsigned char *)(a1 + 53))
    {
      if ((unint64_t)v12 >= *(void *)v60)
      {
        uint64_t v38 = *(_DWORD **)buf;
        uint64_t v39 = ((uint64_t)v12 - *(void *)buf) >> 2;
        unint64_t v40 = v39 + 1;
        if ((unint64_t)(v39 + 1) >> 62) {
          sub_1001D7FD4();
        }
        uint64_t v41 = *(void *)v60 - *(void *)buf;
        if ((uint64_t)(*(void *)v60 - *(void *)buf) >> 1 > v40) {
          unint64_t v40 = v41 >> 1;
        }
        if ((unint64_t)v41 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v42 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v42 = v40;
        }
        if (v42)
        {
          uint64_t v43 = (char *)sub_10017EA34((uint64_t)v60, v42);
          uint64_t v38 = *(_DWORD **)buf;
          int v12 = v59;
        }
        else
        {
          uint64_t v43 = 0;
        }
        unint64_t v44 = &v43[4 * v39];
        unint64_t v45 = &v43[4 * v42];
        *(_DWORD *)unint64_t v44 = 3;
        uint64_t v37 = v44 + 4;
        while (v12 != v38)
        {
          int v46 = *--v12;
          *((_DWORD *)v44 - 1) = v46;
          v44 -= 4;
        }
        *(void *)std::string buf = v44;
        uint64_t v59 = v37;
        *(void *)long long v60 = v45;
        if (v38) {
          operator delete(v38);
        }
      }
      else
      {
        *int v12 = 3;
        uint64_t v37 = v12 + 1;
      }
      uint64_t v59 = v37;
      int v12 = v37;
    }
    if (*(unsigned char *)(a1 + 59))
    {
      if ((unint64_t)v12 >= *(void *)v60)
      {
        __int16 v48 = *(_DWORD **)buf;
        uint64_t v49 = ((uint64_t)v12 - *(void *)buf) >> 2;
        unint64_t v50 = v49 + 1;
        if ((unint64_t)(v49 + 1) >> 62) {
          sub_1001D7FD4();
        }
        uint64_t v51 = *(void *)v60 - *(void *)buf;
        if ((uint64_t)(*(void *)v60 - *(void *)buf) >> 1 > v50) {
          unint64_t v50 = v51 >> 1;
        }
        if ((unint64_t)v51 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v52 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v52 = v50;
        }
        if (v52)
        {
          long long v53 = (char *)sub_10017EA34((uint64_t)v60, v52);
          __int16 v48 = *(_DWORD **)buf;
          int v12 = v59;
        }
        else
        {
          long long v53 = 0;
        }
        double v54 = &v53[4 * v49];
        long long v55 = &v53[4 * v52];
        *(_DWORD *)double v54 = 6;
        unint64_t v47 = v54 + 4;
        while (v12 != v48)
        {
          int v56 = *--v12;
          *((_DWORD *)v54 - 1) = v56;
          v54 -= 4;
        }
        *(void *)std::string buf = v54;
        uint64_t v59 = v47;
        *(void *)long long v60 = v55;
        if (v48) {
          operator delete(v48);
        }
      }
      else
      {
        *int v12 = 6;
        unint64_t v47 = v12 + 1;
      }
      uint64_t v59 = v47;
    }
    *(_DWORD *)a1 = 0;
    if (*(void *)(a1 + 32)) {
      sub_100E162A0(a1 + 8, 0);
    }
    if (*(void *)buf)
    {
      uint64_t v59 = *(_DWORD **)buf;
      operator delete(*(void **)buf);
    }
    return;
  }
  if (*(unsigned char *)(a1 + 54) || *(unsigned char *)(a1 + 56) || *(unsigned char *)(a1 + 52))
  {
    if (*(unsigned char *)(a1 + 53)) {
      int v19 = 256;
    }
    else {
      int v19 = 512;
    }
    *(void *)std::string buf = 0;
    uint64_t v59 = 0;
    *(void *)long long v60 = 0;
    *(_DWORD *)a1 = v19;
    if (*(void *)(a1 + 32))
    {
LABEL_25:
      sub_100E162A0(a1 + 8, v19);
      if (*(void *)buf)
      {
        uint64_t v59 = *(_DWORD **)buf;
        operator delete(*(void **)buf);
      }
    }
  }
  else
  {
    int v19 = *(_DWORD *)(a1 + 72);
    *(void *)std::string buf = 0;
    uint64_t v59 = 0;
    *(void *)long long v60 = 0;
    *(_DWORD *)a1 = v19;
    if (*(void *)(a1 + 32)) {
      goto LABEL_25;
    }
  }
  if (qword_1024193D0 != -1) {
    dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
  }
  __int16 v20 = qword_1024193D8;
  if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEFAULT))
  {
    int v21 = *(unsigned __int8 *)(a1 + 54);
    int v22 = *(unsigned __int8 *)(a1 + 56);
    int v23 = *(unsigned __int8 *)(a1 + 52);
    int v24 = *(unsigned __int8 *)(a1 + 49);
    int v25 = *(_DWORD *)a1;
    *(_DWORD *)std::string buf = 67241216;
    *(_DWORD *)&uint8_t buf[4] = v21;
    LOWORD(v59) = 1026;
    *(_DWORD *)((char *)&v59 + 2) = v22;
    HIWORD(v59) = 1026;
    *(_DWORD *)long long v60 = v23;
    *(_WORD *)&v60[4] = 1026;
    *(_DWORD *)&v60[6] = v24;
    __int16 v61 = 1026;
    int v62 = v25;
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "L5ContextMajorPower,FocusedNav,%{public}d,ActFitness,%{public}d,AccHigh,%{public}d,SigEnv,%{public}d,L5Enable,%{public}d", buf, 0x20u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
    }
    __int16 v26 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLGnssL5Context::tickL5EnablementForPlatformsWithMajorPowerImpact()", "%s\n", v26);
    if (v26 != (char *)buf) {
      free(v26);
    }
  }
}

void sub_100E15BF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100E15C34(int *a1)
{
  int v2 = a1[18];
  long long __p = 0;
  uint64_t v28 = 0;
  if (sub_10010145C())
  {
    if (*((unsigned char *)a1 + 57))
    {
      double v3 = sub_10017EA34((uint64_t)&v28, 1uLL);
      int v5 = &v3[v4];
      _DWORD *v3 = 4;
    }
    else
    {
      if (!*((unsigned char *)a1 + 58)) {
        goto LABEL_10;
      }
      double v3 = sub_10017EA34((uint64_t)&v28, 1uLL);
      int v5 = &v3[v7];
      _DWORD *v3 = 5;
    }
    long long __p = v3;
    uint64_t v28 = (uint64_t)v5;
    int v2 = 0;
LABEL_10:
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
    }
    int v8 = qword_1024193D8;
    if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEFAULT))
    {
      int v9 = *((unsigned __int8 *)a1 + 57);
      int v10 = *((unsigned __int8 *)a1 + 58);
      int v11 = *a1;
      *(_DWORD *)std::string buf = 67240960;
      int v38 = v9;
      __int16 v39 = 1026;
      int v40 = v10;
      __int16 v41 = 1026;
      int v42 = v11;
      __int16 v43 = 1026;
      int v44 = v2;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "L5ContextMinorPower,OnlyRhythmicGNSS,%{public}d,LongDurationHKWorkout,%{public}d,L5EnableCur,%{public}d,L5EnableReq,%{public}d", buf, 0x1Au);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193D0 != -1) {
        dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
      }
      int v12 = *((unsigned __int8 *)a1 + 57);
      int v13 = *((unsigned __int8 *)a1 + 58);
      int v14 = *a1;
      int v29 = 67240960;
      int v30 = v12;
      __int16 v31 = 1026;
      int v32 = v13;
      __int16 v33 = 1026;
      int v34 = v14;
      __int16 v35 = 1026;
      int v36 = v2;
      int v15 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLGnssL5Context::tickL5EnablementForPlatformsWithMinorPowerImpact()", "%s\n", v15);
LABEL_50:
      if (v15 != (char *)buf) {
        free(v15);
      }
      goto LABEL_41;
    }
    goto LABEL_41;
  }
  if (*((unsigned char *)a1 + 48) && !*((unsigned char *)a1 + 55)) {
    int v6 = sub_1007441EC();
  }
  else {
    int v6 = 0;
  }
  if (*((unsigned char *)a1 + 53))
  {
    int v16 = sub_1007440B0();
    int v17 = v16;
    if ((v6 & 1) == 0)
    {
      if (v16)
      {
        unint64_t v21 = 1;
        if ((unint64_t)(v28 >> 1) > 1) {
          unint64_t v21 = v28 >> 1;
        }
        unint64_t v22 = v21;
        if (v21) {
          int v23 = sub_10017EA34((uint64_t)&v28, v21);
        }
        else {
          int v23 = 0;
        }
        *int v23 = 3;
        long long __p = v23;
        uint64_t v28 = (uint64_t)&v23[v22];
        int v2 = 0;
        int v17 = 1;
      }
      goto LABEL_36;
    }
  }
  else
  {
    int v17 = 0;
    if (!v6) {
      goto LABEL_36;
    }
  }
  unint64_t v18 = 1;
  if ((unint64_t)(v28 >> 1) > 1) {
    unint64_t v18 = v28 >> 1;
  }
  unint64_t v19 = v18;
  if (v18) {
    __int16 v20 = sub_10017EA34((uint64_t)&v28, v18);
  }
  else {
    __int16 v20 = 0;
  }
  _DWORD *v20 = 1;
  long long __p = v20;
  uint64_t v28 = (uint64_t)&v20[v19];
  int v2 = 0;
LABEL_36:
  if (qword_1024193D0 != -1) {
    dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
  }
  int v24 = qword_1024193D8;
  if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEFAULT))
  {
    int v25 = *a1;
    *(_DWORD *)std::string buf = 67240960;
    int v38 = v6;
    __int16 v39 = 1026;
    int v40 = v17;
    __int16 v41 = 1026;
    int v42 = v25;
    __int16 v43 = 1026;
    int v44 = v2;
    _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "L5ContextMinorPower,ContentionWiFi2p4,%{public}d,ContentionVoiceCall,%{public}d,L5EnableCur,%{public}d,L5EnableReq,%{public}d", buf, 0x1Au);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022FA0E8);
    }
    int v26 = *a1;
    int v29 = 67240960;
    int v30 = v6;
    __int16 v31 = 1026;
    int v32 = v17;
    __int16 v33 = 1026;
    int v34 = v26;
    __int16 v35 = 1026;
    int v36 = v2;
    int v15 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLGnssL5Context::tickL5EnablementForPlatformsWithMinorPowerImpact()", "%s\n", v15);
    goto LABEL_50;
  }
LABEL_41:
  if (v2 != *a1)
  {
    *a1 = v2;
    if (*((void *)a1 + 4)) {
      sub_100E162A0((uint64_t)(a1 + 2), v2);
    }
  }
  if (__p) {
    operator delete(__p);
  }
}

void sub_100E16264(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100E162A0(uint64_t a1, int a2)
{
  int v4 = a2;
  uint64_t v2 = *(void *)(a1 + 24);
  if (!v2) {
    sub_10015E48C();
  }
  return (*(uint64_t (**)(uint64_t, int *))(*(void *)v2 + 48))(v2, &v4);
}

void sub_100E162F4(id a1)
{
  qword_1024193D8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Gnss");
}

void sub_100E16324(id a1)
{
  qword_102419588 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

uint64_t sub_100E16354(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

__n128 sub_100E163EC(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x20uLL);
  *(void *)uint64_t v2 = off_1022FA138;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((void *)v2 + 3) = *(void *)(a1 + 24);
  return result;
}

__n128 sub_100E16440(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = off_1022FA138;
  __n128 result = *(__n128 *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_100E16478(void *a1, unsigned int *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = (uint64_t (*)(void *, void))a1[1];
  int v4 = (void *)(a1[3] + (v2 >> 1));
  if (v2) {
    uint64_t v3 = *(uint64_t (**)(void *, void))(*v4 + v3);
  }
  return v3(v4, *a2);
}

uint64_t sub_100E164A4(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100E164E4()
{
}

void *sub_100E164F0(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  a1[3] = 0;
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_100E16578()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241AD20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10241AD20))
  {
    qword_10241AD08 = 0;
    qword_10241AD10 = 0;
    qword_10241AD18 = 0;
    __cxa_atexit((void (*)(void *))sub_1003BE920, &qword_10241AD08, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10241AD20);
  }
}

void sub_100E165F8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241ADD0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10241ADD0))
  {
    std::__shared_mutex_base::__shared_mutex_base(&stru_10241AD28);
    __cxa_atexit((void (*)(void *))sub_1003BE954, &stru_10241AD28, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10241ADD0);
  }
}

void sub_100E16688(_Unwind_Exception *a1)
{
}

void sub_100E166A0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241ADF0, memory_order_acquire) & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_10241ADF0))
    {
      uint64_t v1 = 0x7FFFFFFF00000000;
      v0[2] = xmmword_101D90988;
      v0[3] = unk_101D90998;
      v0[4] = xmmword_101D909A8;
      v0[0] = xmmword_101D90968;
      v0[1] = unk_101D90978;
      sub_1003BFBA4((uint64_t)&unk_10241ADD8, (int *)v0, 11);
      __cxa_atexit((void (*)(void *))sub_1003BE998, &unk_10241ADD8, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_10241ADF0);
    }
  }
}

void sub_100E16780(_Unwind_Exception *a1)
{
}

__n128 sub_100E16798(uint64_t a1)
{
  *(void *)a1 = off_1022FA1D0;
  *(_OWORD *)(a1 + 8) = xmmword_101D90BC0;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a1 + 24) = result;
  return result;
}

uint64_t sub_100E167CC(uint64_t a1, uint64_t *a2)
{
  int v3 = *((_DWORD *)a2 + 5);
  *(int32x2_t *)std::string buf = vrev64_s32(*(int32x2_t *)((char *)a2 + 12));
  *(_DWORD *)&uint8_t buf[8] = v3;
  sub_100081994((uint64_t)buf, (float *)&v24, (int *)(a1 + 24), 2, 3);
  float v4 = *(float *)&v25;
  unsigned int v5 = sub_100E16AE4(*(float *)&v25);
  if (v5 == 1)
  {
    if (sub_100E16CE4(v4, *((float *)a2 + 6), *((float *)a2 + 3))) {
      unsigned int v5 = 2;
    }
    else {
      unsigned int v5 = 1;
    }
  }
  if (*((float *)a2 + 4) >= 0.01) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 2;
  }
  if (qword_102418FF0 != -1) {
    dispatch_once(&qword_102418FF0, &stru_1022FA1F0);
  }
  uint64_t v7 = qword_102418FF8;
  if (os_log_type_enabled((os_log_t)qword_102418FF8, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v8 = *a2;
    double v9 = *((float *)a2 + 2);
    double v10 = *((float *)a2 + 3);
    double v11 = *((float *)a2 + 4);
    double v12 = *((float *)a2 + 5);
    double v13 = *((float *)a2 + 6);
    double v14 = *((float *)a2 + 7);
    *(_DWORD *)std::string buf = 134220032;
    *(void *)&uint8_t buf[4] = v8;
    __int16 v43 = 2048;
    double v44 = v9;
    __int16 v45 = 2048;
    double v46 = v10;
    __int16 v47 = 2048;
    double v48 = v11;
    __int16 v49 = 2048;
    double v50 = v12;
    __int16 v51 = 2048;
    double v52 = v13;
    __int16 v53 = 2048;
    double v54 = v14;
    __int16 v55 = 2048;
    double v56 = v4;
    __int16 v57 = 1024;
    int v58 = v6;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "FST DM Features, startTime, %f, accelMag, %f, inertialAccelZMag, %f, rotationalAccelZMag, %f, rotationToAccelCorrelation, %f, pctDominanceCrownPlane, %f, gravityX, %f, pBody, %f, FSTMotionType, %d", buf, 0x58u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102418FF0 != -1) {
      dispatch_once(&qword_102418FF0, &stru_1022FA1F0);
    }
    uint64_t v16 = *a2;
    double v17 = *((float *)a2 + 2);
    double v18 = *((float *)a2 + 3);
    double v19 = *((float *)a2 + 4);
    double v20 = *((float *)a2 + 5);
    double v21 = *((float *)a2 + 6);
    double v22 = *((float *)a2 + 7);
    int v24 = 134220032;
    uint64_t v25 = v16;
    __int16 v26 = 2048;
    double v27 = v17;
    __int16 v28 = 2048;
    double v29 = v18;
    __int16 v30 = 2048;
    double v31 = v19;
    __int16 v32 = 2048;
    double v33 = v20;
    __int16 v34 = 2048;
    double v35 = v21;
    __int16 v36 = 2048;
    double v37 = v22;
    __int16 v38 = 2048;
    double v39 = v4;
    __int16 v40 = 1024;
    int v41 = v6;
    int v23 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "FSTMotionType CLFunctionalStrengthMotionClassifier::classifyMotion(const CLFunctionalStrengthDMIntermediateFeatures &)", "%s\n", v23);
    if (v23 != buf) {
      free(v23);
    }
  }
  return v6;
}

uint64_t sub_100E16AE4(float a1)
{
  if (a1 >= 0.7) {
    unsigned int v2 = 2;
  }
  else {
    unsigned int v2 = 3;
  }
  if (a1 <= 0.4) {
    uint64_t v3 = 1;
  }
  else {
    uint64_t v3 = v2;
  }
  if (qword_102418FF0 != -1) {
    dispatch_once(&qword_102418FF0, &stru_1022FA1F0);
  }
  float v4 = qword_102418FF8;
  if (os_log_type_enabled((os_log_t)qword_102418FF8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::string buf = 67109376;
    int v8 = v3;
    __int16 v9 = 2048;
    double v10 = a1;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "FSTMotionClassifier, classifyByLikelihoodBody, FSTMotionType, %d, pBody, %f", buf, 0x12u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102418FF0 != -1) {
      dispatch_once(&qword_102418FF0, &stru_1022FA1F0);
    }
    uint64_t v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "FSTMotionType CLFunctionalStrengthMotionClassifier::classifyByLikelihoodBody(const float)", "%s\n", v6);
    if (v6 != (char *)buf) {
      free(v6);
    }
  }
  return v3;
}

uint64_t sub_100E16CE4(float a1, float a2, float a3)
{
  BOOL v4 = a3 < 0.4 && a3 > 0.2;
  BOOL v5 = a1 <= 0.4 && a1 >= 0.1;
  if (a2 <= 99.0) {
    uint64_t v6 = v5 & v4;
  }
  else {
    uint64_t v6 = 0;
  }
  if (qword_102418FF0 != -1) {
    dispatch_once(&qword_102418FF0, &stru_1022FA1F0);
  }
  uint64_t v7 = qword_102418FF8;
  if (os_log_type_enabled((os_log_t)qword_102418FF8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::string buf = 67109888;
    int v11 = v6;
    __int16 v12 = 1024;
    BOOL v13 = a2 <= 99.0;
    __int16 v14 = 1024;
    BOOL v15 = v4;
    __int16 v16 = 1024;
    BOOL v17 = v5;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "FSTMotionClassifier, containsBodyMotion, %d, isNotDominantlyPlanar, %d, isBodyRangeAccelZMag, %d, isModerateBodyLikelihood, %d", buf, 0x1Au);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102418FF0 != -1) {
      dispatch_once(&qword_102418FF0, &stru_1022FA1F0);
    }
    __int16 v9 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLFunctionalStrengthMotionClassifier::containsBodyMotion(const float, const float, const float)", "%s\n", v9);
    if (v9 != (char *)buf) {
      free(v9);
    }
  }
  return v6;
}

BOOL sub_100E16F40(uint64_t a1)
{
  return *(float *)(a1 + 28) < -0.6;
}

void sub_100E16F58()
{
}

void sub_100E16F6C(id a1)
{
  qword_102418FF8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Calorimetry");
}

uint64_t sub_100E16F9C(uint64_t result, int a2, char a3)
{
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)__n128 result = off_1022FA220;
  *(unsigned char *)(result + 24) = a3;
  *(unsigned char *)(result + 25) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(unsigned char *)(result + 72) = 0;
  *(unsigned char *)(result + 73) = a2 != 0;
  return result;
}

void *sub_100E16FDC(void *a1)
{
  *a1 = off_1022FA220;
  sub_100E17034(a1);
  sub_100E1709C(a1);
  sub_100E17104(a1);
  return a1;
}

void *sub_100E17034(void *result)
{
  if (result[2])
  {
    uint64_t v1 = result;
    uint64_t v2 = sub_100A08A84();
    sub_1009D26C4(v2, 0, v1[2]);
    __n128 result = (void *)v1[2];
    if (result) {
      __n128 result = (void *)(*(uint64_t (**)(void *))(*result + 8))(result);
    }
    v1[2] = 0;
  }
  return result;
}

void *sub_100E1709C(void *result)
{
  if (result[1])
  {
    uint64_t v1 = result;
    uint64_t v2 = sub_1009EC0A8();
    sub_1009D26C4(v2, 0, v1[1]);
    __n128 result = (void *)v1[1];
    if (result) {
      __n128 result = (void *)(*(uint64_t (**)(void *))(*result + 8))(result);
    }
    v1[1] = 0;
  }
  return result;
}

void *sub_100E17104(void *result)
{
  if (result[7])
  {
    uint64_t v1 = result;
    uint64_t v2 = sub_100A68CE8();
    sub_1009D26C4(v2, 0, v1[7]);
    uint64_t v3 = v1[7];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    v1[7] = 0;
    uint64_t v4 = sub_100A68CE8();
    sub_1009D26C4(v4, 1, v1[8]);
    __n128 result = (void *)v1[8];
    if (result) {
      __n128 result = (void *)(*(uint64_t (**)(void *))(*result + 8))(result);
    }
    v1[8] = 0;
  }
  return result;
}

uint64_t sub_100E171B4(uint64_t result)
{
  if (!*(void *)(result + 16)) {
    operator new();
  }
  return result;
}

void sub_100E17284()
{
}

uint64_t sub_100E172A8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 16))(a2, a1);
}

void sub_100E172D8(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 25))
  {
    uint64_t v2 = sub_100CAAAC4();
    sub_100CAAB34(v2, (uint64_t)sub_100E17328, *(unsigned char *)(a1 + 24), a1);
    *(unsigned char *)(a1 + 25) = 1;
  }
}

void sub_100E17328(_OWORD *a1, uint64_t a2)
{
  v2[0] = *a1;
  *(_OWORD *)((char *)v2 + 12) = *(_OWORD *)((char *)a1 + 12);
  sub_100E17658(a2, v2);
}

void sub_100E17364(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 25))
  {
    uint64_t v2 = sub_100CAAAC4();
    sub_100CAAC00(v2);
    *(unsigned char *)(a1 + 25) = 0;
  }
}

uint64_t sub_100E17398(uint64_t result)
{
  if (!*(void *)(result + 8)) {
    operator new();
  }
  return result;
}

void sub_100E17468()
{
}

uint64_t sub_100E1748C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 32))(a2, a1);
}

uint64_t sub_100E174BC(uint64_t result)
{
  if (!*(void *)(result + 56)) {
    operator new();
  }
  return result;
}

void sub_100E175F4()
{
}

uint64_t sub_100E1761C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 40))(a2, a1);
}

unsigned char *sub_100E1764C(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 72) = *result;
  return result;
}

void sub_100E17658(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = sub_1000D3E78();
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  void v5[2] = sub_100E176E8;
  void v5[3] = &unk_1022BBB58;
  unsigned __int8 v5[4] = a1;
  v6[0] = *a2;
  *(_OWORD *)((char *)v6 + 12) = *(_OWORD *)((char *)a2 + 12);
  sub_1009E8F7C(v4, (uint64_t)v5);
}

void sub_100E176E8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  long long v3 = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(v2 + 40) = *(_OWORD *)(a1 + 52);
  *(_OWORD *)(v2 + 28) = v3;
  if (qword_102419080 != -1) {
    dispatch_once(&qword_102419080, &stru_1022FA260);
  }
  uint64_t v4 = qword_102419088;
  if (os_log_type_enabled((os_log_t)qword_102419088, OS_LOG_TYPE_DEBUG))
  {
    double v5 = *(float *)(a1 + 40);
    double v6 = *(float *)(a1 + 44);
    double v7 = *(float *)(a1 + 48);
    double v8 = *(float *)(a1 + 52);
    double v9 = *(float *)(a1 + 56);
    double v10 = *(float *)(a1 + 60);
    int v11 = *(unsigned __int8 *)(a1 + 64);
    *(_DWORD *)std::string buf = 136316930;
    __int16 v36 = "GyroBias";
    __int16 v37 = 2048;
    double v38 = v5;
    __int16 v39 = 2048;
    double v40 = v6;
    __int16 v41 = 2048;
    double v42 = v7;
    __int16 v43 = 2048;
    double v44 = v8;
    __int16 v45 = 2048;
    double v46 = v9;
    __int16 v47 = 2048;
    double v48 = v10;
    __int16 v49 = 1024;
    int v50 = v11;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Type,%s,bias.x,%20.20f,bias.y,%20.20f,bias.z,%20.20f,variance.x,%20.20f,variance.y,%20.20f,variance.z,%20.20f,doingBiasEstimation,%d", buf, 0x4Eu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419080 != -1) {
      dispatch_once(&qword_102419080, &stru_1022FA260);
    }
    double v27 = *(float *)(a1 + 40);
    double v28 = *(float *)(a1 + 44);
    double v29 = *(float *)(a1 + 48);
    double v30 = *(float *)(a1 + 52);
    double v31 = *(float *)(a1 + 56);
    double v32 = *(float *)(a1 + 60);
    int v33 = *(unsigned __int8 *)(a1 + 64);
    *(_DWORD *)double v54 = 136316930;
    *(void *)&v54[4] = "GyroBias";
    *(_WORD *)&v54[12] = 2048;
    *(double *)&v54[14] = v27;
    *(_WORD *)&v54[22] = 2048;
    *(double *)&v54[24] = v28;
    *(_WORD *)&v54[32] = 2048;
    *(double *)&v54[34] = v29;
    *(_WORD *)&v54[42] = 2048;
    double v55 = v30;
    __int16 v56 = 2048;
    double v57 = v31;
    __int16 v58 = 2048;
    double v59 = v32;
    __int16 v60 = 1024;
    int v61 = v33;
    __int16 v34 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLSensorFusionServiceAP::onBiasAndVariance(const CLMotionTypeGyroBiasAndVariance)_block_invoke", "%s\n", v34);
    if (v34 != (char *)buf) {
      free(v34);
    }
  }
  if (*(unsigned char *)(v2 + 73))
  {
    *(void *)double v54 = off_1022E76C0;
    *(void *)&v54[8] = CFAbsoluteTimeGetCurrent();
    *(_OWORD *)&v54[20] = *(_OWORD *)(a1 + 40);
    *(void *)&v54[36] = *(void *)(a1 + 56);
    LOBYTE(v55) = *(unsigned char *)(a1 + 64);
    uint64_t v12 = sub_101282D9C();
    sub_10128431C(v12, (uint64_t)v54);
    sub_10170140C(buf);
    sub_101726C18((uint64_t)buf);
    v53 |= 1u;
    uint64_t v51 = *(void *)&v54[8];
    uint64_t v13 = v52;
    int v14 = *(_DWORD *)(a1 + 40);
    *(unsigned char *)(v52 + 36) |= 1u;
    *(_DWORD *)(v13 + 8) = v14;
    uint64_t v15 = v52;
    int v16 = *(_DWORD *)(a1 + 44);
    *(unsigned char *)(v52 + 36) |= 2u;
    *(_DWORD *)(v15 + 12) = v16;
    uint64_t v17 = v52;
    int v18 = *(_DWORD *)(a1 + 48);
    *(unsigned char *)(v52 + 36) |= 4u;
    *(_DWORD *)(v17 + 16) = v18;
    uint64_t v19 = v52;
    int v20 = *(_DWORD *)(a1 + 52);
    *(unsigned char *)(v52 + 36) |= 0x10u;
    *(_DWORD *)(v19 + 24) = v20;
    uint64_t v21 = v52;
    int v22 = *(_DWORD *)(a1 + 56);
    *(unsigned char *)(v52 + 36) |= 0x20u;
    *(_DWORD *)(v21 + 28) = v22;
    uint64_t v23 = v52;
    int v24 = *(_DWORD *)(a1 + 60);
    *(unsigned char *)(v52 + 36) |= 0x40u;
    *(_DWORD *)(v23 + 32) = v24;
    uint64_t v25 = v52;
    int v26 = *(unsigned __int8 *)(a1 + 64);
    *(unsigned char *)(v52 + 36) |= 8u;
    *(_DWORD *)(v25 + 20) = v26;
    if (qword_10248AF88 != -1) {
      dispatch_once(&qword_10248AF88, &stru_1022FA280);
    }
    if (qword_10248AF90) {
      sub_1019E5150(qword_10248AF90, (uint64_t)buf);
    }
    sub_101706914((PB::Base *)buf);
  }
  if (*(unsigned char *)(v2 + 25)) {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2 + 24))(v2, a1 + 40, a1 + 52);
  }
}

void sub_100E17B38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_101706914((PB::Base *)va);
  _Unwind_Resume(a1);
}

void sub_100E17B58(id a1)
{
  qword_102419088 = (uint64_t)os_log_create("com.apple.locationd.Motion", "DeviceMotion");
}

uint64_t sub_100E17B8C(long long **a1, long long *a2)
{
  uint64_t v2 = *a1;
  long long v3 = a1[1];
  if (*a1 == v3)
  {
    LOBYTE(v4) = 0;
  }
  else
  {
    int v4 = 0;
    long long v9 = *a2;
    double v5 = *a1;
    do
    {
      double v6 = v2;
      if (v2 != v5)
      {
        long long v12 = v9;
        long long v7 = *v5;
        long long v10 = *v2;
        long long v11 = v7;
        v4 += sub_100E17C24((double *)&v12, (double *)&v11, (double *)&v10);
      }
      uint64_t v2 = v6 + 1;
      double v5 = v6;
    }
    while (v6 + 1 != v3);
  }
  return v4 & 1;
}

BOOL sub_100E17C24(double *a1, double *a2, double *a3)
{
  double v3 = *a1;
  if (vabdd_f64(*a2, *a1) < 0.0000011920929)
  {
    *a2 = *a2 + 0.0000011920929;
    double v3 = *a1;
  }
  double v4 = *a3;
  if (vabdd_f64(*a3, v3) < 0.0000011920929)
  {
    double v4 = v4 + 0.0000011920929;
    *a3 = v4;
  }
  double v5 = a3[1];
  double v6 = a2[1];
  if (v5 >= v6) {
    double v7 = a2[1];
  }
  else {
    double v7 = a3[1];
  }
  double v8 = a1[1];
  if (v7 <= v8
    && (v6 >= v5 ? (double v9 = a2[1]) : (double v9 = a3[1]),
        v9 >= v8 && (*a2 >= v4 ? (double v10 = *a2) : (double v10 = v4), v10 >= *a1 && vabdd_f64(v5, v6) >= 0.0000011920929)))
  {
    return *a2 + (v8 - v6) / (v5 - v6) * (v4 - *a2) > *a1;
  }
  else
  {
    return 0;
  }
}

BOOL sub_100E17CEC(double *a1, double *a2)
{
  if (*a2 <= a1[2] && *a2 >= *a1 && (double v2 = a2[1], v2 <= a1[3])) {
    return v2 >= a1[1];
  }
  else {
    return 0;
  }
}

double sub_100E17D30@<D0>(double **a1@<X0>, uint64_t a2@<X8>)
{
  double v2 = *a1;
  double v3 = a1[1];
  if (*a1 == v3)
  {
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  else
  {
    double result = *v2;
    double v5 = v2[1];
    double v6 = *v2;
    double v7 = v5;
    do
    {
      double v8 = *v2;
      double v9 = v2[1];
      v2 += 2;
      if (v8 < result) {
        double result = v8;
      }
      if (v9 < v5) {
        double v5 = v9;
      }
      if (v6 < v8) {
        double v6 = v8;
      }
      if (v7 < v9) {
        double v7 = v9;
      }
    }
    while (v2 != v3);
    *(double *)a2 = result;
    *(double *)(a2 + 8) = v5;
    *(double *)(a2 + 16) = v6;
    *(double *)(a2 + 24) = v7;
  }
  return result;
}

uint64_t sub_100E17D8C()
{
  if (qword_10248AC60) {
    (*(void (**)(uint64_t))(*(void *)qword_10248AC60 + 8))(qword_10248AC60);
  }
  if (qword_10248AC68) {
    (*(void (**)(uint64_t))(*(void *)qword_10248AC68 + 8))(qword_10248AC68);
  }
  if (qword_10248AC70) {
    (*(void (**)(uint64_t))(*(void *)qword_10248AC70 + 8))(qword_10248AC70);
  }
  if (qword_10248AC78) {
    (*(void (**)(uint64_t))(*(void *)qword_10248AC78 + 8))(qword_10248AC78);
  }
  if (qword_10248AC80) {
    (*(void (**)(uint64_t))(*(void *)qword_10248AC80 + 8))(qword_10248AC80);
  }
  if (qword_10248AC88) {
    (*(void (**)(uint64_t))(*(void *)qword_10248AC88 + 8))(qword_10248AC88);
  }
  if (qword_10248AC90) {
    (*(void (**)(uint64_t))(*(void *)qword_10248AC90 + 8))(qword_10248AC90);
  }
  if (qword_10248AC98) {
    (*(void (**)(uint64_t))(*(void *)qword_10248AC98 + 8))(qword_10248AC98);
  }
  if (qword_10248ACA0) {
    (*(void (**)(uint64_t))(*(void *)qword_10248ACA0 + 8))(qword_10248ACA0);
  }
  if (qword_10248ACA8) {
    (*(void (**)(uint64_t))(*(void *)qword_10248ACA8 + 8))(qword_10248ACA8);
  }
  if (qword_10248ACB0) {
    (*(void (**)(uint64_t))(*(void *)qword_10248ACB0 + 8))(qword_10248ACB0);
  }
  if (qword_10248ACB8) {
    (*(void (**)(uint64_t))(*(void *)qword_10248ACB8 + 8))(qword_10248ACB8);
  }
  if (qword_10248ACC0) {
    (*(void (**)(uint64_t))(*(void *)qword_10248ACC0 + 8))(qword_10248ACC0);
  }
  if (qword_10248ACC8) {
    (*(void (**)(uint64_t))(*(void *)qword_10248ACC8 + 8))(qword_10248ACC8);
  }
  if (qword_10248ACD0) {
    (*(void (**)(uint64_t))(*(void *)qword_10248ACD0 + 8))(qword_10248ACD0);
  }
  if (qword_10248ACD8) {
    (*(void (**)(uint64_t))(*(void *)qword_10248ACD8 + 8))(qword_10248ACD8);
  }
  if (qword_10248ACE0) {
    (*(void (**)(uint64_t))(*(void *)qword_10248ACE0 + 8))(qword_10248ACE0);
  }
  if (qword_10248ACE8) {
    (*(void (**)(uint64_t))(*(void *)qword_10248ACE8 + 8))(qword_10248ACE8);
  }
  if (qword_10248ACF0) {
    (*(void (**)(uint64_t))(*(void *)qword_10248ACF0 + 8))(qword_10248ACF0);
  }
  if (qword_10248ACF8) {
    (*(void (**)(uint64_t))(*(void *)qword_10248ACF8 + 8))(qword_10248ACF8);
  }
  if (qword_10248AD00) {
    (*(void (**)(uint64_t))(*(void *)qword_10248AD00 + 8))(qword_10248AD00);
  }
  if (qword_10248AD08) {
    (*(void (**)(uint64_t))(*(void *)qword_10248AD08 + 8))(qword_10248AD08);
  }
  if (qword_10248AD10) {
    (*(void (**)(uint64_t))(*(void *)qword_10248AD10 + 8))(qword_10248AD10);
  }
  if (qword_10248AD18) {
    (*(void (**)(uint64_t))(*(void *)qword_10248AD18 + 8))(qword_10248AD18);
  }
  if (qword_10248AD20) {
    (*(void (**)(uint64_t))(*(void *)qword_10248AD20 + 8))(qword_10248AD20);
  }
  if (qword_10248AD28) {
    (*(void (**)(uint64_t))(*(void *)qword_10248AD28 + 8))(qword_10248AD28);
  }
  if (qword_10248AD30) {
    (*(void (**)(uint64_t))(*(void *)qword_10248AD30 + 8))(qword_10248AD30);
  }
  if (qword_10248AD38) {
    (*(void (**)(uint64_t))(*(void *)qword_10248AD38 + 8))(qword_10248AD38);
  }
  if (qword_10248AD40) {
    (*(void (**)(uint64_t))(*(void *)qword_10248AD40 + 8))(qword_10248AD40);
  }
  if (qword_10248AD48) {
    (*(void (**)(uint64_t))(*(void *)qword_10248AD48 + 8))(qword_10248AD48);
  }
  if (qword_10248AD50) {
    (*(void (**)(uint64_t))(*(void *)qword_10248AD50 + 8))(qword_10248AD50);
  }
  if (qword_10248AD58) {
    (*(void (**)(uint64_t))(*(void *)qword_10248AD58 + 8))(qword_10248AD58);
  }
  if (qword_10248AD60) {
    (*(void (**)(uint64_t))(*(void *)qword_10248AD60 + 8))(qword_10248AD60);
  }
  if (qword_10248AD68) {
    (*(void (**)(uint64_t))(*(void *)qword_10248AD68 + 8))(qword_10248AD68);
  }
  if (qword_10248AD70) {
    (*(void (**)(uint64_t))(*(void *)qword_10248AD70 + 8))(qword_10248AD70);
  }
  if (qword_10248AD78) {
    (*(void (**)(uint64_t))(*(void *)qword_10248AD78 + 8))(qword_10248AD78);
  }
  if (qword_10248AD80) {
    (*(void (**)(uint64_t))(*(void *)qword_10248AD80 + 8))(qword_10248AD80);
  }
  if (qword_10248AD88) {
    (*(void (**)(uint64_t))(*(void *)qword_10248AD88 + 8))(qword_10248AD88);
  }
  if (qword_10248AD90) {
    (*(void (**)(uint64_t))(*(void *)qword_10248AD90 + 8))(qword_10248AD90);
  }
  if (qword_10248AD98) {
    (*(void (**)(uint64_t))(*(void *)qword_10248AD98 + 8))(qword_10248AD98);
  }
  if (qword_10248ADA0) {
    (*(void (**)(uint64_t))(*(void *)qword_10248ADA0 + 8))(qword_10248ADA0);
  }
  if (qword_10248ADA8) {
    (*(void (**)(uint64_t))(*(void *)qword_10248ADA8 + 8))(qword_10248ADA8);
  }
  if (qword_10248ADB0) {
    (*(void (**)(uint64_t))(*(void *)qword_10248ADB0 + 8))(qword_10248ADB0);
  }
  if (qword_10248ADB8) {
    (*(void (**)(uint64_t))(*(void *)qword_10248ADB8 + 8))(qword_10248ADB8);
  }
  if (qword_10248ADC0) {
    (*(void (**)(uint64_t))(*(void *)qword_10248ADC0 + 8))(qword_10248ADC0);
  }
  if (qword_10248ADC8) {
    (*(void (**)(uint64_t))(*(void *)qword_10248ADC8 + 8))(qword_10248ADC8);
  }
  if (qword_10248ADD0) {
    (*(void (**)(uint64_t))(*(void *)qword_10248ADD0 + 8))(qword_10248ADD0);
  }
  if (qword_10248ADD8) {
    (*(void (**)(uint64_t))(*(void *)qword_10248ADD8 + 8))(qword_10248ADD8);
  }
  if (qword_10248ADE0) {
    (*(void (**)(uint64_t))(*(void *)qword_10248ADE0 + 8))(qword_10248ADE0);
  }
  uint64_t result = qword_10248ADE8;
  if (qword_10248ADE8)
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)qword_10248ADE8 + 8);
    return v1();
  }
  return result;
}

void sub_100E18714(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_102481BF8 & 1) == 0)
  {
    byte_102481BF8 = 1;
    wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPGnssMeasApi.pb.cc", a4);
    operator new();
  }
}

void *sub_100E19974(void *result)
{
  result[1] = 0;
  result[2] = 0;
  *uint64_t result = off_1022FA300;
  return result;
}

uint64_t sub_100E19998(uint64_t result)
{
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)uint64_t result = &off_1022FA378;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

double sub_100E199C0(uint64_t a1)
{
  *(void *)a1 = &off_1022FA3F0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = 0;
  return result;
}

uint64_t sub_100E199F0(uint64_t result)
{
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)double result = &off_1022FA468;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_100E19A18(uint64_t result)
{
  *(void *)double result = off_1022FA4E0;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_100E19A3C(uint64_t result)
{
  *(void *)double result = off_1022FA558;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  *(unsigned char *)(result + 12) = 0;
  return result;
}

uint64_t sub_100E19A68(uint64_t result)
{
  *(void *)double result = off_1022FA5D0;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_100E19A8C(uint64_t result)
{
  *(void *)double result = off_1022FA648;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  *(unsigned char *)(result + 12) = 0;
  return result;
}

uint64_t sub_100E19AB8(uint64_t result)
{
  *(void *)double result = off_1022FA6C0;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_100E19ADC(uint64_t result)
{
  *(void *)double result = off_1022FA738;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_100E19B00(uint64_t result)
{
  *(void *)double result = off_1022FA7B0;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_100E19B24(uint64_t result)
{
  *(_DWORD *)(result + 20) = 0;
  *(_DWORD *)(result + 24) = 0;
  *(void *)double result = off_1022FA828;
  *(void *)(result + 8) = 0;
  *(_WORD *)(result + 16) = 0;
  return result;
}

double sub_100E19B4C(uint64_t a1)
{
  *(void *)a1 = off_1022FA918;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 84) = 0u;
  return result;
}

uint64_t sub_100E19B88(uint64_t result)
{
  *(_DWORD *)(result + 28) = 0;
  *(_DWORD *)(result + 32) = 0;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)double result = off_1022FA990;
  *(unsigned char *)(result + 24) = 0;
  return result;
}

uint64_t sub_100E19BB4(uint64_t result)
{
  *(_DWORD *)(result + 28) = 0;
  *(_DWORD *)(result + 32) = 0;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)double result = off_1022FAA08;
  *(unsigned char *)(result + 24) = 0;
  return result;
}

uint64_t sub_100E19BE0(uint64_t result)
{
  *(_DWORD *)(result + 28) = 0;
  *(_DWORD *)(result + 32) = 0;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)double result = off_1022FAA80;
  *(_WORD *)(result + 24) = 0;
  return result;
}

double sub_100E19C0C(uint64_t a1)
{
  *(void *)a1 = off_1022FAAF8;
  *(_DWORD *)(a1 + 44) = 0;
  *(_DWORD *)(a1 + 48) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(unsigned char *)(a1 + 40) = 0;
  return result;
}

uint64_t sub_100E19C40(uint64_t result)
{
  *(void *)double result = off_1022FAB70;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_100E19C68(uint64_t result)
{
  *(void *)double result = off_1022FABE8;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_100E19C90(uint64_t result)
{
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)double result = off_1022FAC60;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

double sub_100E19CB8(uint64_t a1)
{
  *(void *)a1 = off_1022FACD8;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(_DWORD *)(a1 + 104) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(void *)(a1 + 112) = 0;
  return result;
}

double sub_100E19D04(uint64_t a1)
{
  *(void *)a1 = off_1022FAD50;
  *(_DWORD *)(a1 + 108) = 0;
  *(_DWORD *)(a1 + 112) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(unsigned char *)(a1 + 104) = 0;
  return result;
}

uint64_t sub_100E19D48(uint64_t result)
{
  *(_DWORD *)(result + 28) = 0;
  *(_DWORD *)(result + 32) = 0;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)double result = off_1022FADC8;
  *(unsigned char *)(result + 24) = 0;
  return result;
}

double sub_100E19D74(uint64_t a1)
{
  *(void *)a1 = off_1022FAE40;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return result;
}

double sub_100E19DA4(uint64_t a1)
{
  *(void *)a1 = off_1022FAEB8;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_DWORD *)(a1 + 40) = 0;
  return result;
}

double sub_100E19DD4(uint64_t a1)
{
  *(void *)a1 = off_1022FAF30;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = 0;
  return result;
}

uint64_t sub_100E19E04(uint64_t result)
{
  *(void *)(result + 40) = 0;
  *(void *)double result = off_1022FAFA8;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_100E19E30(uint64_t a1)
{
  *(void *)a1 = off_1022FB020;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  return result;
}

double sub_100E19E5C(uint64_t a1)
{
  *(void *)a1 = off_1022FB098;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = 0;
  return result;
}

void *sub_100E19E8C(void *result)
{
  *double result = &off_1022FB110;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

double sub_100E19EB0(uint64_t a1)
{
  *(void *)a1 = &off_1022FB188;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)(a1 + 72) = 0;
  return result;
}

double sub_100E19EE8(uint64_t a1)
{
  *(void *)a1 = off_1022FB200;
  double result = 0.0;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_DWORD *)(a1 + 40) = 0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 108) = 0u;
  return result;
}

uint64_t sub_100E19F2C(uint64_t result)
{
  *(void *)double result = off_1022FB278;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_100E19F54(uint64_t result)
{
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)double result = off_1022FB2F0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void *sub_100E19F7C(void *result)
{
  *double result = &off_1022FB368;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

double sub_100E19FA0(uint64_t a1)
{
  *(void *)a1 = off_1022FB3E0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = 0;
  return result;
}

uint64_t sub_100E19FD0(uint64_t result)
{
  *(void *)double result = off_1022FB458;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void *sub_100E19FF8(void *result)
{
  *double result = off_1022FB4D0;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

double sub_100E1A01C(uint64_t a1)
{
  *(void *)a1 = off_1022FB548;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_DWORD *)(a1 + 40) = 0;
  return result;
}

double sub_100E1A04C(uint64_t a1)
{
  *(void *)a1 = off_1022FB5C0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  return result;
}

double sub_100E1A078(uint64_t a1)
{
  *(void *)a1 = off_1022FB638;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_DWORD *)(a1 + 56) = 0;
  return result;
}

double sub_100E1A0AC(uint64_t a1)
{
  *(void *)a1 = off_1022FB6B0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_DWORD *)(a1 + 40) = 0;
  return result;
}

uint64_t sub_100E1A0DC(uint64_t result)
{
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)double result = &off_1022FB728;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

double sub_100E1A104(uint64_t a1)
{
  *(void *)a1 = off_1022FB7A0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return result;
}

double sub_100E1A134(uint64_t a1)
{
  *(void *)a1 = off_1022FB818;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return result;
}

double sub_100E1A164(uint64_t a1)
{
  *(void *)a1 = off_1022FB890;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  return result;
}

double sub_100E1A190(uint64_t a1)
{
  *(void *)a1 = off_1022FB908;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  return result;
}

double sub_100E1A1BC(uint64_t a1)
{
  *(void *)a1 = off_1022FB980;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  return result;
}

double sub_100E1A1E8(uint64_t a1)
{
  *(void *)a1 = off_1022FB9F8;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 64) = 0;
  *(void *)(a1 + 128) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_DWORD *)(a1 + 40) = 0;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_DWORD *)(a1 + 120) = 0;
  return result;
}

uint64_t sub_100E1A234(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_10248AC80;
  if (!qword_10248AC80)
  {
    double result = sub_100E18714();
    uint64_t v2 = qword_10248AC80;
  }
  v1[1] = v2;
  uint64_t v3 = qword_10248AC88;
  if (!qword_10248AC88)
  {
    double result = sub_100E18714();
    uint64_t v3 = qword_10248AC88;
  }
  v1[2] = v3;
  uint64_t v4 = qword_10248AC90;
  if (!qword_10248AC90)
  {
    double result = sub_100E18714();
    uint64_t v4 = qword_10248AC90;
  }
  v1[3] = v4;
  uint64_t v5 = qword_10248AC98;
  if (!qword_10248AC98)
  {
    double result = sub_100E18714();
    uint64_t v5 = qword_10248AC98;
  }
  v1[4] = v5;
  uint64_t v6 = qword_10248ACA0;
  if (!qword_10248ACA0)
  {
    double result = sub_100E18714();
    uint64_t v6 = qword_10248ACA0;
  }
  v1[5] = v6;
  uint64_t v7 = qword_10248ACA8;
  if (!qword_10248ACA8)
  {
    double result = sub_100E18714();
    uint64_t v7 = qword_10248ACA8;
  }
  void v1[6] = v7;
  uint64_t v8 = qword_10248ACB0;
  if (!qword_10248ACB0)
  {
    double result = sub_100E18714();
    uint64_t v8 = qword_10248ACB0;
  }
  v1[7] = v8;
  uint64_t v9 = qword_10248ACB8;
  if (!qword_10248ACB8)
  {
    double result = sub_100E18714();
    uint64_t v9 = qword_10248ACB8;
  }
  v1[8] = v9;
  uint64_t v10 = qword_10248ACC0;
  if (!qword_10248ACC0)
  {
    double result = sub_100E18714();
    uint64_t v10 = qword_10248ACC0;
  }
  v1[9] = v10;
  uint64_t v11 = qword_10248AC80;
  if (!qword_10248AC80)
  {
    double result = sub_100E18714();
    uint64_t v11 = qword_10248AC80;
  }
  _OWORD v1[10] = v11;
  return result;
}

uint64_t sub_100E1A348(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_10248ACF8;
  if (!qword_10248ACF8)
  {
    double result = ((uint64_t (*)(void))sub_100E18714)();
    uint64_t v2 = qword_10248ACF8;
  }
  v1[2] = v2;
  uint64_t v3 = qword_10248AD00;
  if (qword_10248AD00)
  {
    v1[3] = qword_10248AD00;
LABEL_6:
    v1[4] = v3;
    goto LABEL_7;
  }
  double result = ((uint64_t (*)(void))sub_100E18714)();
  uint64_t v3 = qword_10248AD00;
  v1[3] = qword_10248AD00;
  if (v3) {
    goto LABEL_6;
  }
  double result = sub_100E18714(result);
  uint64_t v3 = qword_10248AD00;
  v1[4] = qword_10248AD00;
  if (!v3)
  {
    double result = sub_100E18714(result);
    uint64_t v3 = qword_10248AD00;
  }
LABEL_7:
  v1[5] = v3;
  return result;
}

uint64_t sub_100E1A3C8(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_10248AC78;
  if (!qword_10248AC78)
  {
    double result = sub_100E18714(result);
    uint64_t v2 = qword_10248AC78;
  }
  v1[1] = v2;
  uint64_t v3 = qword_10248ACC8;
  if (!qword_10248ACC8)
  {
    double result = sub_100E18714(result);
    uint64_t v3 = qword_10248ACC8;
  }
  v1[2] = v3;
  uint64_t v4 = qword_10248ACD0;
  if (!qword_10248ACD0)
  {
    double result = sub_100E18714(result);
    uint64_t v4 = qword_10248ACD0;
  }
  void v1[6] = v4;
  uint64_t v5 = qword_10248ACD8;
  if (!qword_10248ACD8)
  {
    double result = sub_100E18714(result);
    uint64_t v5 = qword_10248ACD8;
  }
  v1[7] = v5;
  uint64_t v6 = qword_10248ACE8;
  if (!qword_10248ACE8)
  {
    double result = sub_100E18714(result);
    uint64_t v6 = qword_10248ACE8;
  }
  v1[8] = v6;
  uint64_t v7 = qword_10248AD08;
  if (!qword_10248AD08)
  {
    double result = sub_100E18714(result);
    uint64_t v7 = qword_10248AD08;
  }
  v1[9] = v7;
  uint64_t v8 = qword_10248ACD8;
  if (!qword_10248ACD8)
  {
    double result = sub_100E18714(result);
    uint64_t v8 = qword_10248ACD8;
  }
  v1[11] = v8;
  uint64_t v9 = qword_10248ACE0;
  if (!qword_10248ACE0)
  {
    double result = sub_100E18714(result);
    uint64_t v9 = qword_10248ACE0;
  }
  v1[12] = v9;
  return result;
}

uint64_t sub_100E1A4AC(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_10248AD78;
  if (!qword_10248AD78)
  {
    double result = sub_100E18714(result);
    uint64_t v2 = qword_10248AD78;
  }
  v1[1] = v2;
  uint64_t v3 = qword_10248ADA0;
  if (qword_10248ADA0)
  {
    v1[2] = qword_10248ADA0;
LABEL_6:
    v1[3] = v3;
LABEL_7:
    v1[4] = v3;
    goto LABEL_8;
  }
  double result = sub_100E18714(result);
  uint64_t v3 = qword_10248ADA0;
  v1[2] = qword_10248ADA0;
  if (v3) {
    goto LABEL_6;
  }
  double result = sub_100E18714(result);
  uint64_t v3 = qword_10248ADA0;
  v1[3] = qword_10248ADA0;
  if (v3) {
    goto LABEL_7;
  }
  double result = sub_100E18714(result);
  uint64_t v3 = qword_10248ADA0;
  v1[4] = qword_10248ADA0;
  if (!v3)
  {
    double result = sub_100E18714(result);
    uint64_t v3 = qword_10248ADA0;
  }
LABEL_8:
  v1[5] = v3;
  return result;
}

uint64_t sub_100E1A540(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_10248AD88;
  if (!qword_10248AD88)
  {
    double result = sub_100E18714(result);
    uint64_t v2 = qword_10248AD88;
  }
  v1[1] = v2;
  uint64_t v3 = qword_10248AD98;
  if (!qword_10248AD98)
  {
    double result = sub_100E18714(result);
    uint64_t v3 = qword_10248AD98;
  }
  v1[2] = v3;
  uint64_t v4 = qword_10248ADA8;
  if (!qword_10248ADA8)
  {
    double result = sub_100E18714(result);
    uint64_t v4 = qword_10248ADA8;
  }
  v1[3] = v4;
  uint64_t v5 = qword_10248ADB0;
  if (!qword_10248ADB0)
  {
    double result = sub_100E18714(result);
    uint64_t v5 = qword_10248ADB0;
  }
  v1[4] = v5;
  uint64_t v6 = qword_10248ADB8;
  if (!qword_10248ADB8)
  {
    double result = sub_100E18714(result);
    uint64_t v6 = qword_10248ADB8;
  }
  v1[5] = v6;
  return result;
}

uint64_t sub_100E1A5D8(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_10248ADE0;
  if (!qword_10248ADE0)
  {
    double result = sub_100E18714(result);
    uint64_t v2 = qword_10248ADE0;
  }
  v1[1] = v2;
  uint64_t v3 = qword_10248AD38;
  if (!qword_10248AD38)
  {
    double result = sub_100E18714(result);
    uint64_t v3 = qword_10248AD38;
  }
  v1[2] = v3;
  uint64_t v4 = qword_10248ADC0;
  if (!qword_10248ADC0)
  {
    double result = sub_100E18714(result);
    uint64_t v4 = qword_10248ADC0;
  }
  v1[9] = v4;
  uint64_t v5 = qword_10248ADC8;
  if (!qword_10248ADC8)
  {
    double result = sub_100E18714(result);
    uint64_t v5 = qword_10248ADC8;
  }
  v1[12] = v5;
  return result;
}

BOOL sub_100E1A658(unsigned int a1)
{
  return a1 < 0xD;
}

void sub_100E1A664(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 20))
    {
      int v5 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v5;
      int v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      unsigned int v6 = *(_DWORD *)(a2 + 12);
      if (v6 >= 5) {
        sub_101A9024C();
      }
      a1[5] |= 2u;
      a1[3] = v6;
    }
  }
}

void sub_100E1A71C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E1A734(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FA300;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E1A754(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FA300;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E1A7A8()
{
}

uint64_t sub_100E1A7F4(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_100E1A808(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  while (1)
  {
    while (1)
    {
      unsigned int v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        TagFallbacuint64_t k = *v6;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v6 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      uint64_t v11 = (char *)*((void *)this + 1);
      unint64_t v9 = *((void *)this + 2);
      if ((unint64_t)v11 >= v9 || *v11 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!result) {
          return result;
        }
        long long v12 = (unsigned char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
      }
      else
      {
        unsigned int *v5 = *v11;
        long long v12 = v11 + 1;
        *((void *)this + 1) = v12;
      }
      a1[5] |= 1u;
      if ((unint64_t)v12 < v9 && *v12 == 16)
      {
        uint64_t v10 = v12 + 1;
        *((void *)this + 1) = v10;
LABEL_24:
        unsigned int v15 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v15);
          if (!result) {
            return result;
          }
          unsigned int v13 = v15;
        }
        else
        {
          unsigned int v13 = *v10;
          *((void *)this + 1) = v10 + 1;
        }
        if (v13 <= 4)
        {
          a1[5] |= 2u;
          a1[3] = v13;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        uint64_t v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v8 = TagFallback & 7;
    }
LABEL_16:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_100E1A9BC(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(_DWORD *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_100E1AA28(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 20);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 20))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0) {
          goto LABEL_16;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_16;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 20) & 2) == 0) {
        goto LABEL_16;
      }
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if ((v6 & 0x80000000) != 0)
    {
      int v7 = 11;
    }
    else if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    }
    else
    {
      int v7 = 2;
    }
    uint64_t v4 = (v7 + v4);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_16:
  *(_DWORD *)(a1 + 16) = v4;
  return v4;
}

void sub_100E1AAC4(_DWORD *a1, void *lpsrc)
{
  sub_100E1A664(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E1AB4C()
{
  return 1;
}

void *sub_100E1AB54@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.GlonassSlotInfo");
}

void sub_100E1AB64(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      int v5 = *(_DWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 24) |= 1u;
      *(_DWORD *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 24) |= 2u;
      int v6 = *(_DWORD **)(a1 + 8);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_10248AC68 + 8);
      }
      sub_100E1A664(v6, v7);
    }
  }
}

void sub_100E1AC64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E1AC7C(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022FA378;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_10248AC68 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_100E1AD0C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_100E1AC7C(a1);

  operator delete();
}

void sub_100E1AD44()
{
}

uint64_t sub_100E1AD94(uint64_t result)
{
  char v1 = *(unsigned char *)(result + 24);
  if (v1)
  {
    *(_DWORD *)(result + 16) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(result + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 20)) {
          *(void *)(v2 + 8) = 0;
        }
        *(_DWORD *)(v2 + 20) = 0;
      }
    }
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_100E1ADC4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    do
    {
      while (1)
      {
        int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacuint64_t k = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 == 1) {
          break;
        }
        if (TagFallback >> 3 == 2)
        {
          int v7 = TagFallback & 7;
          if (v7 == 2)
          {
            int v8 = *(_DWORD *)(a1 + 24);
            goto LABEL_23;
          }
        }
        else
        {
          int v7 = TagFallback & 7;
        }
LABEL_15:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
      }
        }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_15;
      }
      unsigned int v23 = 0;
      uint64_t v10 = (char *)*((void *)this + 1);
      unint64_t v9 = *((void *)this + 2);
      if ((unint64_t)v10 >= v9 || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23);
        if (!result) {
          return result;
        }
        unsigned int v11 = v23;
        long long v12 = (unsigned char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
      }
      else
      {
        unsigned int v11 = *v10;
        long long v12 = v10 + 1;
        *((void *)this + 1) = v12;
      }
      *(_DWORD *)(a1 + 16) = v11;
      int v8 = *(_DWORD *)(a1 + 24) | 1;
      *(_DWORD *)(a1 + 24) = v8;
    }
    while ((unint64_t)v12 >= v9 || *v12 != 18);
    *((void *)this + 1) = v12 + 1;
LABEL_23:
    *(_DWORD *)(a1 + 24) = v8 | 2;
    int v14 = *(unsigned int **)(a1 + 8);
    if (!v14) {
      operator new();
    }
    unsigned int v24 = 0;
    unsigned int v15 = (char *)*((void *)this + 1);
    if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v24)) {
        return 0;
      }
    }
    else
    {
      unsigned int v24 = *v15;
      *((void *)this + 1) = v15 + 1;
    }
    int v16 = *((_DWORD *)this + 14);
    int v17 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v16 + 1;
    if (v16 >= v17) {
      return 0;
    }
    int v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v24);
    if (!sub_100E1A808(v14, this, v19) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
    int v20 = *((_DWORD *)this + 14);
    BOOL v21 = __OFSUB__(v20, 1);
    int v22 = v20 - 1;
    if (v22 < 0 == v21) {
      *((_DWORD *)this + 14) = v22;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_100E1B014(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 24) & 2) == 0) {
      return result;
    }
  }
  else if ((v6 & 2) == 0)
  {
    return result;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248AC68 + 8);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
}

uint64_t sub_100E1B094(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 24);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 24))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
      if ((v5 & 0x80000000) != 0)
      {
        uint64_t v4 = 11;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
      else if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 24) & 2) == 0) {
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
        goto LABEL_19;
      }
    }
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10248AC68 + 8);
    }
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E1AA28(v6, a2);
    int v9 = (int)v7;
    if (v7 >= 0x80) {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, v8);
    }
    else {
      int v10 = 1;
    }
    uint64_t v4 = (v4 + v9 + v10 + 1);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_100E1B15C(uint64_t a1, void *lpsrc)
{
  sub_100E1AB64(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E1B1E4()
{
  return 1;
}

void *sub_100E1B1EC@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.GlonassId");
}

void sub_100E1B1FC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 44);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 44))
    {
      int v6 = *(_DWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 44) |= 1u;
      *(_DWORD *)(a1 + 16) = v6;
      int v4 = *(_DWORD *)(a2 + 44);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_19;
      }
    }
    else if ((*(unsigned char *)(a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }
    *(_DWORD *)(a1 + 44) |= 2u;
    uint64_t v7 = *(void *)(a1 + 8);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = *(void *)(a2 + 8);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_10248AC70 + 8);
    }
    sub_100E1AB64(v7, v8);
    int v4 = *(_DWORD *)(a2 + 44);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_20;
    }
LABEL_19:
    int v9 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 44) |= 4u;
    *(_DWORD *)(a1 + 20) = v9;
    int v4 = *(_DWORD *)(a2 + 44);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_21;
    }
LABEL_20:
    int v10 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 44) |= 8u;
    *(_DWORD *)(a1 + 24) = v10;
    int v4 = *(_DWORD *)(a2 + 44);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_22;
    }
LABEL_21:
    int v11 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 44) |= 0x10u;
    *(_DWORD *)(a1 + 28) = v11;
    int v4 = *(_DWORD *)(a2 + 44);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0) {
        return;
      }
      goto LABEL_11;
    }
LABEL_22:
    int v12 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 44) |= 0x20u;
    *(_DWORD *)(a1 + 32) = v12;
    if ((*(_DWORD *)(a2 + 44) & 0x40) == 0) {
      return;
    }
LABEL_11:
    int v5 = *(_DWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 44) |= 0x40u;
    *(_DWORD *)(a1 + 36) = v5;
  }
}

void sub_100E1B3A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E1B3C0(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022FA3F0;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_10248AC70 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_100E1B450(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_100E1B3C0(a1);

  operator delete();
}

void sub_100E1B488()
{
}

uint64_t sub_100E1B4E0(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(unsigned char *)(result + 44);
  if (v2)
  {
    *(_DWORD *)(result + 16) = 0;
    if ((v2 & 2) != 0)
    {
      uint64_t result = *(void *)(result + 8);
      if (result) {
        uint64_t result = sub_100E1AD94(result);
      }
    }
    *(void *)(v1 + 28) = 0;
    *(void *)(v1 + 20) = 0;
    *(_DWORD *)(v1 + 36) = 0;
  }
  *(_DWORD *)(v1 + 44) = 0;
  return result;
}

uint64_t sub_100E1B52C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 16);
  int v6 = (unsigned int *)(a1 + 20);
  uint64_t v7 = (unsigned int *)(a1 + 24);
  uint64_t v8 = (unsigned int *)(a1 + 28);
  int v9 = (unsigned int *)(a1 + 32);
  int v10 = (unsigned int *)(a1 + 36);
  while (2)
  {
    int v11 = (char *)*((void *)this + 1);
    if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v11;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v11 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        unsigned int v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v15;
          int v16 = v15 + 1;
          *((void *)this + 1) = v16;
        }
        int v17 = *(_DWORD *)(a1 + 44) | 1;
        *(_DWORD *)(a1 + 44) = v17;
        if ((unint64_t)v16 < v14 && *v16 == 18)
        {
          *((void *)this + 1) = v16 + 1;
          goto LABEL_33;
        }
        continue;
      case 2u:
        int v13 = TagFallback & 7;
        if (v13 != 2) {
          goto LABEL_24;
        }
        int v17 = *(_DWORD *)(a1 + 44);
LABEL_33:
        *(_DWORD *)(a1 + 44) = v17 | 2;
        uint64_t v25 = *(void *)(a1 + 8);
        if (!v25) {
          operator new();
        }
        unsigned int v40 = 0;
        int v26 = (char *)*((void *)this + 1);
        if ((unint64_t)v26 >= *((void *)this + 2) || *v26 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40))return 0; {
        }
          }
        else
        {
          unsigned int v40 = *v26;
          *((void *)this + 1) = v26 + 1;
        }
        int v27 = *((_DWORD *)this + 14);
        int v28 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v27 + 1;
        if (v27 < v28)
        {
          int v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v40);
          if (sub_100E1ADC4(v25, this, v30))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
              int v31 = *((_DWORD *)this + 14);
              BOOL v32 = __OFSUB__(v31, 1);
              int v33 = v31 - 1;
              if (v33 < 0 == v32) {
                *((_DWORD *)this + 14) = v33;
              }
              __int16 v34 = (unsigned char *)*((void *)this + 1);
              unint64_t v18 = *((void *)this + 2);
              if ((unint64_t)v34 < v18 && *v34 == 24)
              {
                unsigned int v19 = v34 + 1;
                *((void *)this + 1) = v19;
LABEL_47:
                if ((unint64_t)v19 >= v18 || *v19 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
                  if (!result) {
                    return result;
                  }
                  double v35 = (unsigned char *)*((void *)this + 1);
                  unint64_t v18 = *((void *)this + 2);
                }
                else
                {
                  *int v6 = *v19;
                  double v35 = v19 + 1;
                  *((void *)this + 1) = v35;
                }
                *(_DWORD *)(a1 + 44) |= 4u;
                if ((unint64_t)v35 < v18 && *v35 == 32)
                {
                  int v20 = v35 + 1;
                  *((void *)this + 1) = v20;
LABEL_55:
                  if ((unint64_t)v20 >= v18 || *v20 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
                    if (!result) {
                      return result;
                    }
                    __int16 v36 = (unsigned char *)*((void *)this + 1);
                    unint64_t v18 = *((void *)this + 2);
                  }
                  else
                  {
                    unsigned int *v7 = *v20;
                    __int16 v36 = v20 + 1;
                    *((void *)this + 1) = v36;
                  }
                  *(_DWORD *)(a1 + 44) |= 8u;
                  if ((unint64_t)v36 < v18 && *v36 == 40)
                  {
                    BOOL v21 = v36 + 1;
                    *((void *)this + 1) = v21;
LABEL_63:
                    if ((unint64_t)v21 >= v18 || *v21 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
                      if (!result) {
                        return result;
                      }
                      __int16 v37 = (unsigned char *)*((void *)this + 1);
                      unint64_t v18 = *((void *)this + 2);
                    }
                    else
                    {
                      *uint64_t v8 = *v21;
                      __int16 v37 = v21 + 1;
                      *((void *)this + 1) = v37;
                    }
                    *(_DWORD *)(a1 + 44) |= 0x10u;
                    if ((unint64_t)v37 < v18 && *v37 == 48)
                    {
                      int v22 = v37 + 1;
                      *((void *)this + 1) = v22;
LABEL_71:
                      if ((unint64_t)v22 >= v18 || *v22 < 0)
                      {
                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
                        if (!result) {
                          return result;
                        }
                        double v38 = (unsigned char *)*((void *)this + 1);
                        unint64_t v18 = *((void *)this + 2);
                      }
                      else
                      {
                        *int v9 = *v22;
                        double v38 = v22 + 1;
                        *((void *)this + 1) = v38;
                      }
                      *(_DWORD *)(a1 + 44) |= 0x20u;
                      if ((unint64_t)v38 < v18 && *v38 == 56)
                      {
                        unsigned int v23 = v38 + 1;
                        *((void *)this + 1) = v23;
LABEL_79:
                        if ((unint64_t)v23 >= v18 || *v23 < 0)
                        {
                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
                          if (!result) {
                            return result;
                          }
                          __int16 v39 = (unsigned __int8 *)*((void *)this + 1);
                          unint64_t v18 = *((void *)this + 2);
                        }
                        else
                        {
                          *int v10 = *v23;
                          __int16 v39 = (unsigned __int8 *)(v23 + 1);
                          *((void *)this + 1) = v39;
                        }
                        *(_DWORD *)(a1 + 44) |= 0x40u;
                        if (v39 == (unsigned __int8 *)v18
                          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                        {
                          *((_DWORD *)this + 8) = 0;
                          uint64_t result = 1;
                          *((unsigned char *)this + 36) = 1;
                          return result;
                        }
                      }
                    }
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        unsigned int v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_47;
      case 4u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_55;
      case 5u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        BOOL v21 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_63;
      case 6u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v22 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_71;
      case 7u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        unsigned int v23 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_79;
      default:
        int v13 = TagFallback & 7;
LABEL_24:
        if (v13 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100E1BA14(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 44);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248AC70 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 20), a2, a4);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 24), a2, a4);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_16:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 32), a2, a4);
    if ((*(_DWORD *)(v5 + 44) & 0x40) == 0) {
      return result;
    }
    goto LABEL_17;
  }
LABEL_15:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 28), a2, a4);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 0x20) != 0) {
    goto LABEL_16;
  }
LABEL_7:
  if ((v6 & 0x40) == 0) {
    return result;
  }
LABEL_17:
  int v8 = *(_DWORD *)(v5 + 36);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v8, a2, a4);
}

uint64_t sub_100E1BB20(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 44);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_42;
  }
  if (*(unsigned char *)(a1 + 44))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 44);
      if ((v3 & 2) == 0) {
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_16;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 44) & 2) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (!v6) {
    uint64_t v6 = *(void *)(qword_10248AC70 + 8);
  }
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E1B094(v6, a2);
  int v8 = (int)v7;
  if (v7 >= 0x80) {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
  }
  else {
    int v9 = 1;
  }
  uint64_t v4 = (v4 + v8 + v9 + 1);
  int v3 = *(_DWORD *)(a1 + 44);
LABEL_16:
  if ((v3 & 4) != 0)
  {
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if (v10 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 44);
    }
    else
    {
      int v11 = 2;
    }
    uint64_t v4 = (v11 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_18:
      if ((v3 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_30;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_18;
  }
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 44);
  }
  else
  {
    int v13 = 2;
  }
  uint64_t v4 = (v13 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_19:
    if ((v3 & 0x20) == 0) {
      goto LABEL_20;
    }
    goto LABEL_34;
  }
LABEL_30:
  unint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
  if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 44);
  }
  else
  {
    int v15 = 2;
  }
  uint64_t v4 = (v15 + v4);
  if ((v3 & 0x20) == 0)
  {
LABEL_20:
    if ((v3 & 0x40) == 0) {
      goto LABEL_42;
    }
    goto LABEL_38;
  }
LABEL_34:
  int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
  if (v16 >= 0x80)
  {
    int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 44);
  }
  else
  {
    int v17 = 2;
  }
  uint64_t v4 = (v17 + v4);
  if ((v3 & 0x40) != 0)
  {
LABEL_38:
    unint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
    if (v18 >= 0x80) {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2) + 1;
    }
    else {
      int v19 = 2;
    }
    uint64_t v4 = (v19 + v4);
  }
LABEL_42:
  *(_DWORD *)(a1 + 40) = v4;
  return v4;
}

void sub_100E1BCB4(uint64_t a1, void *lpsrc)
{
  sub_100E1B1FC(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E1BD3C()
{
  return 1;
}

void *sub_100E1BD44@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.ConstellationId");
}

void sub_100E1BD54(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      int v5 = *(_DWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 24) |= 1u;
      *(_DWORD *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 24) |= 2u;
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_10248AC78 + 8);
      }
      sub_100E1B1FC(v6, v7);
    }
  }
}

void sub_100E1BE60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E1BE78(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022FA468;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_10248AC78 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_100E1BF08(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_100E1BE78(a1);

  operator delete();
}

void sub_100E1BF40()
{
}

uint64_t sub_100E1BF90(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(unsigned char *)(result + 24);
  if (v2)
  {
    *(_DWORD *)(result + 16) = 0;
    if ((v2 & 2) != 0)
    {
      uint64_t result = *(void *)(result + 8);
      if (result) {
        uint64_t result = sub_100E1B4E0(result);
      }
    }
  }
  *(_DWORD *)(v1 + 24) = 0;
  return result;
}

uint64_t sub_100E1BFD0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 16);
  while (1)
  {
    do
    {
      while (1)
      {
        uint64_t v6 = (char *)*((void *)this + 1);
        if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
        {
          TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacuint64_t k = *v6;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v6 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 == 1) {
          break;
        }
        if (TagFallback >> 3 == 2)
        {
          int v8 = TagFallback & 7;
          if (v8 == 2)
          {
            int v9 = *(_DWORD *)(a1 + 24);
            goto LABEL_24;
          }
        }
        else
        {
          int v8 = TagFallback & 7;
        }
LABEL_16:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
      }
        }
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      int v11 = (char *)*((void *)this + 1);
      unint64_t v10 = *((void *)this + 2);
      if ((unint64_t)v11 >= v10 || *v11 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!result) {
          return result;
        }
        int v12 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
      }
      else
      {
        unsigned int *v5 = *v11;
        int v12 = v11 + 1;
        *((void *)this + 1) = v12;
      }
      int v9 = *(_DWORD *)(a1 + 24) | 1;
      *(_DWORD *)(a1 + 24) = v9;
    }
    while ((unint64_t)v12 >= v10 || *v12 != 18);
    *((void *)this + 1) = v12 + 1;
LABEL_24:
    *(_DWORD *)(a1 + 24) = v9 | 2;
    uint64_t v14 = *(void *)(a1 + 8);
    if (!v14) {
      operator new();
    }
    unsigned int v23 = 0;
    int v15 = (char *)*((void *)this + 1);
    if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23)) {
        return 0;
      }
    }
    else
    {
      unsigned int v23 = *v15;
      *((void *)this + 1) = v15 + 1;
    }
    int v16 = *((_DWORD *)this + 14);
    int v17 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v16 + 1;
    if (v16 >= v17) {
      return 0;
    }
    int v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v23);
    if (!sub_100E1B52C(v14, this, v19) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
    int v20 = *((_DWORD *)this + 14);
    BOOL v21 = __OFSUB__(v20, 1);
    int v22 = v20 - 1;
    if (v22 < 0 == v21) {
      *((_DWORD *)this + 14) = v22;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_100E1C230(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), a2, a4);
    if ((*(_DWORD *)(v5 + 24) & 2) == 0) {
      return result;
    }
  }
  else if ((v6 & 2) == 0)
  {
    return result;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248AC78 + 8);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
}

uint64_t sub_100E1C2B0(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 24);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 24))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
      if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 24) & 2) == 0) {
          goto LABEL_16;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_16;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
        goto LABEL_16;
      }
    }
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10248AC78 + 8);
    }
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E1BB20(v6, a2);
    int v9 = (int)v7;
    if (v7 >= 0x80) {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, v8);
    }
    else {
      int v10 = 1;
    }
    uint64_t v4 = (v4 + v9 + v10 + 1);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_16:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_100E1C368(uint64_t a1, void *lpsrc)
{
  sub_100E1BD54(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E1C3F0()
{
  return 1;
}

void *sub_100E1C3F8@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.SvId");
}

void sub_100E1C408(uint64_t a1, unsigned char *a2)
{
  if (a2 == (unsigned char *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = a2[16];
  if ((_BYTE)v4)
  {
    if (a2[16])
    {
      char v6 = a2[8];
      *(_DWORD *)(a1 + 16) |= 1u;
      *(unsigned char *)(a1 + 8) = v6;
      int v4 = *((_DWORD *)a2 + 4);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((a2[16] & 2) == 0)
    {
      goto LABEL_6;
    }
    char v7 = a2[9];
    *(_DWORD *)(a1 + 16) |= 2u;
    *(unsigned char *)(a1 + 9) = v7;
    int v4 = *((_DWORD *)a2 + 4);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }
LABEL_12:
    char v8 = a2[10];
    *(_DWORD *)(a1 + 16) |= 4u;
    *(unsigned char *)(a1 + 10) = v8;
    if ((*((_DWORD *)a2 + 4) & 8) == 0) {
      return;
    }
LABEL_8:
    char v5 = a2[11];
    *(_DWORD *)(a1 + 16) |= 8u;
    *(unsigned char *)(a1 + 11) = v5;
  }
}

void sub_100E1C4FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E1C514(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FA4E0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E1C534(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FA4E0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E1C588()
{
}

uint64_t sub_100E1C5D4(uint64_t result)
{
  if (*(unsigned char *)(result + 16)) {
    *(_DWORD *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_100E1C5E8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    char v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        unsigned int v22 = 0;
        int v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 < v8 && (*v9 & 0x80000000) == 0)
        {
          unsigned int v10 = *v9;
          int v11 = v9 + 1;
          *((void *)this + 1) = v11;
LABEL_23:
          *(unsigned char *)(a1 + 8) = v10 != 0;
          *(_DWORD *)(a1 + 16) |= 1u;
          if ((unint64_t)v11 < v8 && *v11 == 16)
          {
            int v12 = v11 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_26;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
        if (result)
        {
          unsigned int v10 = v22;
          int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
          goto LABEL_23;
        }
        break;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        int v12 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
LABEL_26:
        unsigned int v22 = 0;
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v15 = v22;
          int v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v15 = *v12;
          int v16 = v12 + 1;
          *((void *)this + 1) = v16;
        }
        *(unsigned char *)(a1 + 9) = v15 != 0;
        *(_DWORD *)(a1 + 16) |= 2u;
        if ((unint64_t)v16 >= v8 || *v16 != 24) {
          continue;
        }
        int v13 = v16 + 1;
        *((void *)this + 1) = v13;
LABEL_34:
        unsigned int v22 = 0;
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v17 = v22;
          int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v17 = *v13;
          int v18 = v13 + 1;
          *((void *)this + 1) = v18;
        }
        *(unsigned char *)(a1 + 10) = v17 != 0;
        *(_DWORD *)(a1 + 16) |= 4u;
        if ((unint64_t)v18 >= v8 || *v18 != 32) {
          continue;
        }
        uint64_t v14 = v18 + 1;
        *((void *)this + 1) = v14;
LABEL_42:
        unsigned int v22 = 0;
        if ((unint64_t)v14 >= v8 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v19 = v22;
          int v20 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v19 = *v14;
          int v20 = (unsigned __int8 *)(v14 + 1);
          *((void *)this + 1) = v20;
        }
        *(unsigned char *)(a1 + 11) = v19 != 0;
        *(_DWORD *)(a1 + 16) |= 8u;
        if (v20 != (unsigned __int8 *)v8 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        int v13 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_34;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_42;
      default:
        int v7 = TagFallback & 7;
LABEL_17:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_100E1C8D0(uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 16);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 16);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), a2, a4);
      if ((*(_DWORD *)(v5 + 16) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), a2, a4);
  int v6 = *(_DWORD *)(v5 + 16);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  int v7 = *(unsigned __int8 *)(v5 + 11);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
}

uint64_t sub_100E1C978(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  unsigned int v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0) {
    v2 += 2;
  }
  if ((v1 & 4) != 0) {
    v2 += 2;
  }
  if ((v1 & 8) != 0) {
    v2 += 2;
  }
  if (*(_DWORD *)(a1 + 16)) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  *(_DWORD *)(a1 + 12) = v3;
  return v3;
}

void sub_100E1C9B8(uint64_t a1, unsigned char *lpsrc)
{
  sub_100E1C408(a1, lpsrc);
}

uint64_t sub_100E1CA40()
{
  return 1;
}

void *sub_100E1CA48@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.GpsL1SyncState");
}

void sub_100E1CA58(uint64_t a1, unsigned char *a2)
{
  if (a2 == (unsigned char *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = a2[20];
  if ((_BYTE)v4)
  {
    if (a2[20])
    {
      char v6 = a2[8];
      *(_DWORD *)(a1 + 20) |= 1u;
      *(unsigned char *)(a1 + 8) = v6;
      int v4 = *((_DWORD *)a2 + 5);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }
    else if ((a2[20] & 2) == 0)
    {
      goto LABEL_6;
    }
    char v7 = a2[9];
    *(_DWORD *)(a1 + 20) |= 2u;
    *(unsigned char *)(a1 + 9) = v7;
    int v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }
LABEL_13:
    char v8 = a2[10];
    *(_DWORD *)(a1 + 20) |= 4u;
    *(unsigned char *)(a1 + 10) = v8;
    int v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        return;
      }
      goto LABEL_9;
    }
LABEL_14:
    char v9 = a2[11];
    *(_DWORD *)(a1 + 20) |= 8u;
    *(unsigned char *)(a1 + 11) = v9;
    if ((*((_DWORD *)a2 + 5) & 0x10) == 0) {
      return;
    }
LABEL_9:
    char v5 = a2[12];
    *(_DWORD *)(a1 + 20) |= 0x10u;
    *(unsigned char *)(a1 + 12) = v5;
  }
}

void sub_100E1CB6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E1CB84(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FA558;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E1CBA4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FA558;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E1CBF8()
{
}

uint64_t sub_100E1CC4C(uint64_t result)
{
  if (*(unsigned char *)(result + 20))
  {
    *(unsigned char *)(result + 12) = 0;
    *(_DWORD *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_100E1CC64(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    char v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unsigned int v25 = 0;
        char v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 < v8 && (*v9 & 0x80000000) == 0)
        {
          unsigned int v10 = *v9;
          int v11 = v9 + 1;
          *((void *)this + 1) = v11;
LABEL_25:
          *(unsigned char *)(a1 + 8) = v10 != 0;
          *(_DWORD *)(a1 + 20) |= 1u;
          if ((unint64_t)v11 < v8 && *v11 == 16)
          {
            int v12 = v11 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_28;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
        if (result)
        {
          unsigned int v10 = v25;
          int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
          goto LABEL_25;
        }
        break;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        int v12 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
LABEL_28:
        unsigned int v25 = 0;
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
          if (!result) {
            return result;
          }
          unsigned int v16 = v25;
          unsigned int v17 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v16 = *v12;
          unsigned int v17 = v12 + 1;
          *((void *)this + 1) = v17;
        }
        *(unsigned char *)(a1 + 9) = v16 != 0;
        *(_DWORD *)(a1 + 20) |= 2u;
        if ((unint64_t)v17 >= v8 || *v17 != 24) {
          continue;
        }
        int v13 = v17 + 1;
        *((void *)this + 1) = v13;
LABEL_36:
        unsigned int v25 = 0;
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
          if (!result) {
            return result;
          }
          unsigned int v18 = v25;
          unsigned int v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v18 = *v13;
          unsigned int v19 = v13 + 1;
          *((void *)this + 1) = v19;
        }
        *(unsigned char *)(a1 + 10) = v18 != 0;
        *(_DWORD *)(a1 + 20) |= 4u;
        if ((unint64_t)v19 >= v8 || *v19 != 32) {
          continue;
        }
        uint64_t v14 = v19 + 1;
        *((void *)this + 1) = v14;
LABEL_44:
        unsigned int v25 = 0;
        if ((unint64_t)v14 >= v8 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
          if (!result) {
            return result;
          }
          unsigned int v20 = v25;
          BOOL v21 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v20 = *v14;
          BOOL v21 = v14 + 1;
          *((void *)this + 1) = v21;
        }
        *(unsigned char *)(a1 + 11) = v20 != 0;
        *(_DWORD *)(a1 + 20) |= 8u;
        if ((unint64_t)v21 >= v8 || *v21 != 40) {
          continue;
        }
        unsigned int v15 = v21 + 1;
        *((void *)this + 1) = v15;
LABEL_52:
        unsigned int v25 = 0;
        if ((unint64_t)v15 >= v8 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
          if (!result) {
            return result;
          }
          unsigned int v22 = v25;
          unsigned int v23 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v22 = *v15;
          unsigned int v23 = (unsigned __int8 *)(v15 + 1);
          *((void *)this + 1) = v23;
        }
        *(unsigned char *)(a1 + 12) = v22 != 0;
        *(_DWORD *)(a1 + 20) |= 0x10u;
        if (v23 != (unsigned __int8 *)v8 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        int v13 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_36;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_44;
      case 5u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unsigned int v15 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_52;
      default:
        int v7 = TagFallback & 7;
LABEL_19:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_100E1CFD0(uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), a2, a4);
  int v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 11), a2, a4);
    if ((*(_DWORD *)(v5 + 20) & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), a2, a4);
  int v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return result;
  }
LABEL_11:
  int v7 = *(unsigned __int8 *)(v5 + 12);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, a2, a4);
}

uint64_t sub_100E1D094(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 20);
  if ((_BYTE)v1)
  {
    unsigned int v2 = 2 * (v1 & 1);
    if ((v1 & 2) != 0) {
      v2 += 2;
    }
    if ((v1 & 4) != 0) {
      v2 += 2;
    }
    if ((v1 & 8) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x10) != 0) {
      uint64_t v3 = v2 + 2;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  *(_DWORD *)(a1 + 16) = v3;
  return v3;
}

void sub_100E1D0E8(uint64_t a1, unsigned char *lpsrc)
{
  sub_100E1CA58(a1, lpsrc);
}

uint64_t sub_100E1D170()
{
  return 1;
}

void *sub_100E1D178@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.GpsL2CSyncState");
}

void sub_100E1D188(uint64_t a1, unsigned char *a2)
{
  if (a2 == (unsigned char *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = a2[16];
  if ((_BYTE)v4)
  {
    if (a2[16])
    {
      char v6 = a2[8];
      *(_DWORD *)(a1 + 16) |= 1u;
      *(unsigned char *)(a1 + 8) = v6;
      int v4 = *((_DWORD *)a2 + 4);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((a2[16] & 2) == 0)
    {
      goto LABEL_6;
    }
    char v7 = a2[9];
    *(_DWORD *)(a1 + 16) |= 2u;
    *(unsigned char *)(a1 + 9) = v7;
    int v4 = *((_DWORD *)a2 + 4);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }
LABEL_12:
    char v8 = a2[10];
    *(_DWORD *)(a1 + 16) |= 4u;
    *(unsigned char *)(a1 + 10) = v8;
    if ((*((_DWORD *)a2 + 4) & 8) == 0) {
      return;
    }
LABEL_8:
    char v5 = a2[11];
    *(_DWORD *)(a1 + 16) |= 8u;
    *(unsigned char *)(a1 + 11) = v5;
  }
}

void sub_100E1D27C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E1D294(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FA5D0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E1D2B4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FA5D0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E1D308()
{
}

uint64_t sub_100E1D354(uint64_t result)
{
  if (*(unsigned char *)(result + 16)) {
    *(_DWORD *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_100E1D368(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    char v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        unsigned int v22 = 0;
        char v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 < v8 && (*v9 & 0x80000000) == 0)
        {
          unsigned int v10 = *v9;
          int v11 = v9 + 1;
          *((void *)this + 1) = v11;
LABEL_23:
          *(unsigned char *)(a1 + 8) = v10 != 0;
          *(_DWORD *)(a1 + 16) |= 1u;
          if ((unint64_t)v11 < v8 && *v11 == 16)
          {
            int v12 = v11 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_26;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
        if (result)
        {
          unsigned int v10 = v22;
          int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
          goto LABEL_23;
        }
        break;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        int v12 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
LABEL_26:
        unsigned int v22 = 0;
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v15 = v22;
          unsigned int v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v15 = *v12;
          unsigned int v16 = v12 + 1;
          *((void *)this + 1) = v16;
        }
        *(unsigned char *)(a1 + 9) = v15 != 0;
        *(_DWORD *)(a1 + 16) |= 2u;
        if ((unint64_t)v16 >= v8 || *v16 != 24) {
          continue;
        }
        int v13 = v16 + 1;
        *((void *)this + 1) = v13;
LABEL_34:
        unsigned int v22 = 0;
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v17 = v22;
          unsigned int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v17 = *v13;
          unsigned int v18 = v13 + 1;
          *((void *)this + 1) = v18;
        }
        *(unsigned char *)(a1 + 10) = v17 != 0;
        *(_DWORD *)(a1 + 16) |= 4u;
        if ((unint64_t)v18 >= v8 || *v18 != 32) {
          continue;
        }
        uint64_t v14 = v18 + 1;
        *((void *)this + 1) = v14;
LABEL_42:
        unsigned int v22 = 0;
        if ((unint64_t)v14 >= v8 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v19 = v22;
          unsigned int v20 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v19 = *v14;
          unsigned int v20 = (unsigned __int8 *)(v14 + 1);
          *((void *)this + 1) = v20;
        }
        *(unsigned char *)(a1 + 11) = v19 != 0;
        *(_DWORD *)(a1 + 16) |= 8u;
        if (v20 != (unsigned __int8 *)v8 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        int v13 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_34;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_42;
      default:
        int v7 = TagFallback & 7;
LABEL_17:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_100E1D650(uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 16);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 16);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), a2, a4);
      if ((*(_DWORD *)(v5 + 16) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), a2, a4);
  int v6 = *(_DWORD *)(v5 + 16);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  int v7 = *(unsigned __int8 *)(v5 + 11);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
}

uint64_t sub_100E1D6F8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  unsigned int v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0) {
    v2 += 2;
  }
  if ((v1 & 4) != 0) {
    v2 += 2;
  }
  if ((v1 & 8) != 0) {
    v2 += 2;
  }
  if (*(_DWORD *)(a1 + 16)) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  *(_DWORD *)(a1 + 12) = v3;
  return v3;
}

void sub_100E1D738(uint64_t a1, unsigned char *lpsrc)
{
  sub_100E1D188(a1, lpsrc);
}

uint64_t sub_100E1D7C0()
{
  return 1;
}

void *sub_100E1D7C8@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.GpsL5SyncState");
}

void sub_100E1D7D8(uint64_t a1, unsigned char *a2)
{
  if (a2 == (unsigned char *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = a2[20];
  if ((_BYTE)v4)
  {
    if (a2[20])
    {
      char v6 = a2[8];
      *(_DWORD *)(a1 + 20) |= 1u;
      *(unsigned char *)(a1 + 8) = v6;
      int v4 = *((_DWORD *)a2 + 5);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }
    else if ((a2[20] & 2) == 0)
    {
      goto LABEL_6;
    }
    char v7 = a2[9];
    *(_DWORD *)(a1 + 20) |= 2u;
    *(unsigned char *)(a1 + 9) = v7;
    int v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }
LABEL_13:
    char v8 = a2[10];
    *(_DWORD *)(a1 + 20) |= 4u;
    *(unsigned char *)(a1 + 10) = v8;
    int v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        return;
      }
      goto LABEL_9;
    }
LABEL_14:
    char v9 = a2[11];
    *(_DWORD *)(a1 + 20) |= 8u;
    *(unsigned char *)(a1 + 11) = v9;
    if ((*((_DWORD *)a2 + 5) & 0x10) == 0) {
      return;
    }
LABEL_9:
    char v5 = a2[12];
    *(_DWORD *)(a1 + 20) |= 0x10u;
    *(unsigned char *)(a1 + 12) = v5;
  }
}

void sub_100E1D8EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E1D904(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FA648;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E1D924(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FA648;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E1D978()
{
}

uint64_t sub_100E1D9CC(uint64_t result)
{
  if (*(unsigned char *)(result + 20))
  {
    *(unsigned char *)(result + 12) = 0;
    *(_DWORD *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_100E1D9E4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    char v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unsigned int v25 = 0;
        char v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 < v8 && (*v9 & 0x80000000) == 0)
        {
          unsigned int v10 = *v9;
          int v11 = v9 + 1;
          *((void *)this + 1) = v11;
LABEL_25:
          *(unsigned char *)(a1 + 8) = v10 != 0;
          *(_DWORD *)(a1 + 20) |= 1u;
          if ((unint64_t)v11 < v8 && *v11 == 16)
          {
            int v12 = v11 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_28;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
        if (result)
        {
          unsigned int v10 = v25;
          int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
          goto LABEL_25;
        }
        break;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        int v12 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
LABEL_28:
        unsigned int v25 = 0;
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
          if (!result) {
            return result;
          }
          unsigned int v16 = v25;
          unsigned int v17 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v16 = *v12;
          unsigned int v17 = v12 + 1;
          *((void *)this + 1) = v17;
        }
        *(unsigned char *)(a1 + 9) = v16 != 0;
        *(_DWORD *)(a1 + 20) |= 2u;
        if ((unint64_t)v17 >= v8 || *v17 != 24) {
          continue;
        }
        int v13 = v17 + 1;
        *((void *)this + 1) = v13;
LABEL_36:
        unsigned int v25 = 0;
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
          if (!result) {
            return result;
          }
          unsigned int v18 = v25;
          unsigned int v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v18 = *v13;
          unsigned int v19 = v13 + 1;
          *((void *)this + 1) = v19;
        }
        *(unsigned char *)(a1 + 10) = v18 != 0;
        *(_DWORD *)(a1 + 20) |= 4u;
        if ((unint64_t)v19 >= v8 || *v19 != 32) {
          continue;
        }
        uint64_t v14 = v19 + 1;
        *((void *)this + 1) = v14;
LABEL_44:
        unsigned int v25 = 0;
        if ((unint64_t)v14 >= v8 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
          if (!result) {
            return result;
          }
          unsigned int v20 = v25;
          BOOL v21 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v20 = *v14;
          BOOL v21 = v14 + 1;
          *((void *)this + 1) = v21;
        }
        *(unsigned char *)(a1 + 11) = v20 != 0;
        *(_DWORD *)(a1 + 20) |= 8u;
        if ((unint64_t)v21 >= v8 || *v21 != 40) {
          continue;
        }
        unsigned int v15 = v21 + 1;
        *((void *)this + 1) = v15;
LABEL_52:
        unsigned int v25 = 0;
        if ((unint64_t)v15 >= v8 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
          if (!result) {
            return result;
          }
          unsigned int v22 = v25;
          unsigned int v23 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v22 = *v15;
          unsigned int v23 = (unsigned __int8 *)(v15 + 1);
          *((void *)this + 1) = v23;
        }
        *(unsigned char *)(a1 + 12) = v22 != 0;
        *(_DWORD *)(a1 + 20) |= 0x10u;
        if (v23 != (unsigned __int8 *)v8 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        int v13 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_36;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_44;
      case 5u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unsigned int v15 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_52;
      default:
        int v7 = TagFallback & 7;
LABEL_19:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_100E1DD50(uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), a2, a4);
  int v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 11), a2, a4);
    if ((*(_DWORD *)(v5 + 20) & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), a2, a4);
  int v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return result;
  }
LABEL_11:
  int v7 = *(unsigned __int8 *)(v5 + 12);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, a2, a4);
}

uint64_t sub_100E1DE14(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 20);
  if ((_BYTE)v1)
  {
    unsigned int v2 = 2 * (v1 & 1);
    if ((v1 & 2) != 0) {
      v2 += 2;
    }
    if ((v1 & 4) != 0) {
      v2 += 2;
    }
    if ((v1 & 8) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x10) != 0) {
      uint64_t v3 = v2 + 2;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  *(_DWORD *)(a1 + 16) = v3;
  return v3;
}

void sub_100E1DE68(uint64_t a1, unsigned char *lpsrc)
{
  sub_100E1D7D8(a1, lpsrc);
}

uint64_t sub_100E1DEF0()
{
  return 1;
}

void *sub_100E1DEF8@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.GlonassL1fSyncState");
}

void sub_100E1DF08(uint64_t a1, unsigned char *a2)
{
  if (a2 == (unsigned char *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = a2[16];
  if ((_BYTE)v4)
  {
    if (a2[16])
    {
      char v6 = a2[8];
      *(_DWORD *)(a1 + 16) |= 1u;
      *(unsigned char *)(a1 + 8) = v6;
      int v4 = *((_DWORD *)a2 + 4);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((a2[16] & 2) == 0)
    {
      goto LABEL_6;
    }
    char v7 = a2[9];
    *(_DWORD *)(a1 + 16) |= 2u;
    *(unsigned char *)(a1 + 9) = v7;
    int v4 = *((_DWORD *)a2 + 4);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }
LABEL_12:
    char v8 = a2[10];
    *(_DWORD *)(a1 + 16) |= 4u;
    *(unsigned char *)(a1 + 10) = v8;
    if ((*((_DWORD *)a2 + 4) & 8) == 0) {
      return;
    }
LABEL_8:
    char v5 = a2[11];
    *(_DWORD *)(a1 + 16) |= 8u;
    *(unsigned char *)(a1 + 11) = v5;
  }
}

void sub_100E1DFFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E1E014(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FA6C0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E1E034(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FA6C0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E1E088()
{
}

uint64_t sub_100E1E0D4(uint64_t result)
{
  if (*(unsigned char *)(result + 16)) {
    *(_DWORD *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_100E1E0E8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    char v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        unsigned int v22 = 0;
        char v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 < v8 && (*v9 & 0x80000000) == 0)
        {
          unsigned int v10 = *v9;
          int v11 = v9 + 1;
          *((void *)this + 1) = v11;
LABEL_23:
          *(unsigned char *)(a1 + 8) = v10 != 0;
          *(_DWORD *)(a1 + 16) |= 1u;
          if ((unint64_t)v11 < v8 && *v11 == 16)
          {
            int v12 = v11 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_26;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
        if (result)
        {
          unsigned int v10 = v22;
          int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
          goto LABEL_23;
        }
        break;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        int v12 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
LABEL_26:
        unsigned int v22 = 0;
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v15 = v22;
          unsigned int v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v15 = *v12;
          unsigned int v16 = v12 + 1;
          *((void *)this + 1) = v16;
        }
        *(unsigned char *)(a1 + 9) = v15 != 0;
        *(_DWORD *)(a1 + 16) |= 2u;
        if ((unint64_t)v16 >= v8 || *v16 != 24) {
          continue;
        }
        int v13 = v16 + 1;
        *((void *)this + 1) = v13;
LABEL_34:
        unsigned int v22 = 0;
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v17 = v22;
          unsigned int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v17 = *v13;
          unsigned int v18 = v13 + 1;
          *((void *)this + 1) = v18;
        }
        *(unsigned char *)(a1 + 10) = v17 != 0;
        *(_DWORD *)(a1 + 16) |= 4u;
        if ((unint64_t)v18 >= v8 || *v18 != 32) {
          continue;
        }
        uint64_t v14 = v18 + 1;
        *((void *)this + 1) = v14;
LABEL_42:
        unsigned int v22 = 0;
        if ((unint64_t)v14 >= v8 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v19 = v22;
          unsigned int v20 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v19 = *v14;
          unsigned int v20 = (unsigned __int8 *)(v14 + 1);
          *((void *)this + 1) = v20;
        }
        *(unsigned char *)(a1 + 11) = v19 != 0;
        *(_DWORD *)(a1 + 16) |= 8u;
        if (v20 != (unsigned __int8 *)v8 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        int v13 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_34;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_42;
      default:
        int v7 = TagFallback & 7;
LABEL_17:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_100E1E3D0(uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 16);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 16);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), a2, a4);
      if ((*(_DWORD *)(v5 + 16) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), a2, a4);
  int v6 = *(_DWORD *)(v5 + 16);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  int v7 = *(unsigned __int8 *)(v5 + 11);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
}

uint64_t sub_100E1E478(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  unsigned int v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0) {
    v2 += 2;
  }
  if ((v1 & 4) != 0) {
    v2 += 2;
  }
  if ((v1 & 8) != 0) {
    v2 += 2;
  }
  if (*(_DWORD *)(a1 + 16)) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  *(_DWORD *)(a1 + 12) = v3;
  return v3;
}

void sub_100E1E4B8(uint64_t a1, unsigned char *lpsrc)
{
  sub_100E1DF08(a1, lpsrc);
}

uint64_t sub_100E1E540()
{
  return 1;
}

void *sub_100E1E548@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.BeidouB1SyncState");
}

void sub_100E1E558(uint64_t a1, unsigned char *a2)
{
  if (a2 == (unsigned char *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = a2[16];
  if ((_BYTE)v4)
  {
    if (a2[16])
    {
      char v6 = a2[8];
      *(_DWORD *)(a1 + 16) |= 1u;
      *(unsigned char *)(a1 + 8) = v6;
      int v4 = *((_DWORD *)a2 + 4);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((a2[16] & 2) == 0)
    {
      goto LABEL_6;
    }
    char v7 = a2[9];
    *(_DWORD *)(a1 + 16) |= 2u;
    *(unsigned char *)(a1 + 9) = v7;
    int v4 = *((_DWORD *)a2 + 4);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }
LABEL_12:
    char v8 = a2[10];
    *(_DWORD *)(a1 + 16) |= 4u;
    *(unsigned char *)(a1 + 10) = v8;
    if ((*((_DWORD *)a2 + 4) & 8) == 0) {
      return;
    }
LABEL_8:
    char v5 = a2[11];
    *(_DWORD *)(a1 + 16) |= 8u;
    *(unsigned char *)(a1 + 11) = v5;
  }
}

void sub_100E1E64C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E1E664(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FA738;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E1E684(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FA738;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E1E6D8()
{
}

uint64_t sub_100E1E724(uint64_t result)
{
  if (*(unsigned char *)(result + 16)) {
    *(_DWORD *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_100E1E738(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    char v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        unsigned int v22 = 0;
        char v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 < v8 && (*v9 & 0x80000000) == 0)
        {
          unsigned int v10 = *v9;
          int v11 = v9 + 1;
          *((void *)this + 1) = v11;
LABEL_23:
          *(unsigned char *)(a1 + 8) = v10 != 0;
          *(_DWORD *)(a1 + 16) |= 1u;
          if ((unint64_t)v11 < v8 && *v11 == 16)
          {
            int v12 = v11 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_26;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
        if (result)
        {
          unsigned int v10 = v22;
          int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
          goto LABEL_23;
        }
        break;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        int v12 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
LABEL_26:
        unsigned int v22 = 0;
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v15 = v22;
          unsigned int v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v15 = *v12;
          unsigned int v16 = v12 + 1;
          *((void *)this + 1) = v16;
        }
        *(unsigned char *)(a1 + 9) = v15 != 0;
        *(_DWORD *)(a1 + 16) |= 2u;
        if ((unint64_t)v16 >= v8 || *v16 != 24) {
          continue;
        }
        int v13 = v16 + 1;
        *((void *)this + 1) = v13;
LABEL_34:
        unsigned int v22 = 0;
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v17 = v22;
          unsigned int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v17 = *v13;
          unsigned int v18 = v13 + 1;
          *((void *)this + 1) = v18;
        }
        *(unsigned char *)(a1 + 10) = v17 != 0;
        *(_DWORD *)(a1 + 16) |= 4u;
        if ((unint64_t)v18 >= v8 || *v18 != 32) {
          continue;
        }
        uint64_t v14 = v18 + 1;
        *((void *)this + 1) = v14;
LABEL_42:
        unsigned int v22 = 0;
        if ((unint64_t)v14 >= v8 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v19 = v22;
          unsigned int v20 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v19 = *v14;
          unsigned int v20 = (unsigned __int8 *)(v14 + 1);
          *((void *)this + 1) = v20;
        }
        *(unsigned char *)(a1 + 11) = v19 != 0;
        *(_DWORD *)(a1 + 16) |= 8u;
        if (v20 != (unsigned __int8 *)v8 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        int v13 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_34;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_42;
      default:
        int v7 = TagFallback & 7;
LABEL_17:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_100E1EA20(uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 16);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 16);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), a2, a4);
      if ((*(_DWORD *)(v5 + 16) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), a2, a4);
  int v6 = *(_DWORD *)(v5 + 16);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  int v7 = *(unsigned __int8 *)(v5 + 11);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
}

uint64_t sub_100E1EAC8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  unsigned int v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0) {
    v2 += 2;
  }
  if ((v1 & 4) != 0) {
    v2 += 2;
  }
  if ((v1 & 8) != 0) {
    v2 += 2;
  }
  if (*(_DWORD *)(a1 + 16)) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  *(_DWORD *)(a1 + 12) = v3;
  return v3;
}

void sub_100E1EB08(uint64_t a1, unsigned char *lpsrc)
{
  sub_100E1E558(a1, lpsrc);
}

uint64_t sub_100E1EB90()
{
  return 1;
}

void *sub_100E1EB98@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.BeidouB2SyncState");
}

void sub_100E1EBA8(uint64_t a1, unsigned char *a2)
{
  if (a2 == (unsigned char *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = a2[16];
  if ((_BYTE)v4)
  {
    if (a2[16])
    {
      char v6 = a2[8];
      *(_DWORD *)(a1 + 16) |= 1u;
      *(unsigned char *)(a1 + 8) = v6;
      int v4 = *((_DWORD *)a2 + 4);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((a2[16] & 2) == 0)
    {
      goto LABEL_6;
    }
    char v7 = a2[9];
    *(_DWORD *)(a1 + 16) |= 2u;
    *(unsigned char *)(a1 + 9) = v7;
    int v4 = *((_DWORD *)a2 + 4);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }
LABEL_12:
    char v8 = a2[10];
    *(_DWORD *)(a1 + 16) |= 4u;
    *(unsigned char *)(a1 + 10) = v8;
    if ((*((_DWORD *)a2 + 4) & 8) == 0) {
      return;
    }
LABEL_8:
    char v5 = a2[11];
    *(_DWORD *)(a1 + 16) |= 8u;
    *(unsigned char *)(a1 + 11) = v5;
  }
}

void sub_100E1EC9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E1ECB4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FA7B0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E1ECD4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FA7B0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E1ED28()
{
}

uint64_t sub_100E1ED74(uint64_t result)
{
  if (*(unsigned char *)(result + 16)) {
    *(_DWORD *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_100E1ED88(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    char v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        unsigned int v22 = 0;
        char v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 < v8 && (*v9 & 0x80000000) == 0)
        {
          unsigned int v10 = *v9;
          int v11 = v9 + 1;
          *((void *)this + 1) = v11;
LABEL_23:
          *(unsigned char *)(a1 + 8) = v10 != 0;
          *(_DWORD *)(a1 + 16) |= 1u;
          if ((unint64_t)v11 < v8 && *v11 == 16)
          {
            int v12 = v11 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_26;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
        if (result)
        {
          unsigned int v10 = v22;
          int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
          goto LABEL_23;
        }
        break;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        int v12 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
LABEL_26:
        unsigned int v22 = 0;
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v15 = v22;
          unsigned int v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v15 = *v12;
          unsigned int v16 = v12 + 1;
          *((void *)this + 1) = v16;
        }
        *(unsigned char *)(a1 + 9) = v15 != 0;
        *(_DWORD *)(a1 + 16) |= 2u;
        if ((unint64_t)v16 >= v8 || *v16 != 24) {
          continue;
        }
        int v13 = v16 + 1;
        *((void *)this + 1) = v13;
LABEL_34:
        unsigned int v22 = 0;
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v17 = v22;
          unsigned int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v17 = *v13;
          unsigned int v18 = v13 + 1;
          *((void *)this + 1) = v18;
        }
        *(unsigned char *)(a1 + 10) = v17 != 0;
        *(_DWORD *)(a1 + 16) |= 4u;
        if ((unint64_t)v18 >= v8 || *v18 != 32) {
          continue;
        }
        uint64_t v14 = v18 + 1;
        *((void *)this + 1) = v14;
LABEL_42:
        unsigned int v22 = 0;
        if ((unint64_t)v14 >= v8 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v19 = v22;
          unsigned int v20 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v19 = *v14;
          unsigned int v20 = (unsigned __int8 *)(v14 + 1);
          *((void *)this + 1) = v20;
        }
        *(unsigned char *)(a1 + 11) = v19 != 0;
        *(_DWORD *)(a1 + 16) |= 8u;
        if (v20 != (unsigned __int8 *)v8 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        int v13 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_34;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_42;
      default:
        int v7 = TagFallback & 7;
LABEL_17:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_100E1F070(uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 16);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 16);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), a2, a4);
      if ((*(_DWORD *)(v5 + 16) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), a2, a4);
  int v6 = *(_DWORD *)(v5 + 16);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  int v7 = *(unsigned __int8 *)(v5 + 11);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
}

uint64_t sub_100E1F118(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  unsigned int v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0) {
    v2 += 2;
  }
  if ((v1 & 4) != 0) {
    v2 += 2;
  }
  if ((v1 & 8) != 0) {
    v2 += 2;
  }
  if (*(_DWORD *)(a1 + 16)) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  *(_DWORD *)(a1 + 12) = v3;
  return v3;
}

void sub_100E1F158(uint64_t a1, unsigned char *lpsrc)
{
  sub_100E1EBA8(a1, lpsrc);
}

uint64_t sub_100E1F1E0()
{
  return 1;
}

void *sub_100E1F1E8@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.GalileoE1SyncState");
}

void sub_100E1F1F8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  int v4 = *(_DWORD *)(a2 + 24);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    char v8 = *(unsigned char *)(a2 + 8);
    *(_DWORD *)(a1 + 24) |= 1u;
    *(unsigned char *)(a1 + 8) = v8;
    int v4 = *(_DWORD *)(a2 + 24);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_21;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  char v9 = *(unsigned char *)(a2 + 9);
  *(_DWORD *)(a1 + 24) |= 2u;
  *(unsigned char *)(a1 + 9) = v9;
  int v4 = *(_DWORD *)(a2 + 24);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  char v10 = *(unsigned char *)(a2 + 10);
  *(_DWORD *)(a1 + 24) |= 4u;
  *(unsigned char *)(a1 + 10) = v10;
  int v4 = *(_DWORD *)(a2 + 24);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  char v11 = *(unsigned char *)(a2 + 11);
  *(_DWORD *)(a1 + 24) |= 8u;
  *(unsigned char *)(a1 + 11) = v11;
  int v4 = *(_DWORD *)(a2 + 24);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_24:
    char v13 = *(unsigned char *)(a2 + 13);
    *(_DWORD *)(a1 + 24) |= 0x20u;
    *(unsigned char *)(a1 + 13) = v13;
    int v4 = *(_DWORD *)(a2 + 24);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_23:
  char v12 = *(unsigned char *)(a2 + 12);
  *(_DWORD *)(a1 + 24) |= 0x10u;
  *(unsigned char *)(a1 + 12) = v12;
  int v4 = *(_DWORD *)(a2 + 24);
  if ((v4 & 0x20) != 0) {
    goto LABEL_24;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_25:
  char v14 = *(unsigned char *)(a2 + 14);
  *(_DWORD *)(a1 + 24) |= 0x40u;
  *(unsigned char *)(a1 + 14) = v14;
  int v4 = *(_DWORD *)(a2 + 24);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    char v5 = *(unsigned char *)(a2 + 15);
    *(_DWORD *)(a1 + 24) |= 0x80u;
    *(unsigned char *)(a1 + 15) = v5;
    int v4 = *(_DWORD *)(a2 + 24);
  }
LABEL_13:
  if ((v4 & 0xFF00) != 0)
  {
    if ((v4 & 0x100) != 0)
    {
      char v6 = *(unsigned char *)(a2 + 16);
      *(_DWORD *)(a1 + 24) |= 0x100u;
      *(unsigned char *)(a1 + 16) = v6;
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 0x200) != 0)
    {
      char v7 = *(unsigned char *)(a2 + 17);
      *(_DWORD *)(a1 + 24) |= 0x200u;
      *(unsigned char *)(a1 + 17) = v7;
    }
  }
}

void sub_100E1F3B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E1F3C8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FA828;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E1F3E8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FA828;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E1F43C()
{
}

uint64_t sub_100E1F48C(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 24);
  if ((_BYTE)v1) {
    *(void *)(result + 8) = 0;
  }
  if ((v1 & 0xFF00) != 0) {
    *(_WORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_100E1F4B0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    char v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        unsigned int v40 = 0;
        char v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 < v8 && (*v9 & 0x80000000) == 0)
        {
          unsigned int v10 = *v9;
          char v11 = v9 + 1;
          *((void *)this + 1) = v11;
LABEL_35:
          *(unsigned char *)(a1 + 8) = v10 != 0;
          *(_DWORD *)(a1 + 24) |= 1u;
          if ((unint64_t)v11 < v8 && *v11 == 16)
          {
            char v12 = v11 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_38;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
        if (result)
        {
          unsigned int v10 = v40;
          char v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
          goto LABEL_35;
        }
        break;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        char v12 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
LABEL_38:
        unsigned int v40 = 0;
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
          if (!result) {
            return result;
          }
          unsigned int v21 = v40;
          unsigned int v22 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v21 = *v12;
          unsigned int v22 = v12 + 1;
          *((void *)this + 1) = v22;
        }
        *(unsigned char *)(a1 + 9) = v21 != 0;
        *(_DWORD *)(a1 + 24) |= 2u;
        if ((unint64_t)v22 >= v8 || *v22 != 24) {
          continue;
        }
        char v13 = v22 + 1;
        *((void *)this + 1) = v13;
LABEL_46:
        unsigned int v40 = 0;
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
          if (!result) {
            return result;
          }
          unsigned int v23 = v40;
          unsigned int v24 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v23 = *v13;
          unsigned int v24 = v13 + 1;
          *((void *)this + 1) = v24;
        }
        *(unsigned char *)(a1 + 10) = v23 != 0;
        *(_DWORD *)(a1 + 24) |= 4u;
        if ((unint64_t)v24 >= v8 || *v24 != 32) {
          continue;
        }
        char v14 = v24 + 1;
        *((void *)this + 1) = v14;
LABEL_54:
        unsigned int v40 = 0;
        if ((unint64_t)v14 >= v8 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
          if (!result) {
            return result;
          }
          unsigned int v25 = v40;
          int v26 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v25 = *v14;
          int v26 = v14 + 1;
          *((void *)this + 1) = v26;
        }
        *(unsigned char *)(a1 + 11) = v25 != 0;
        *(_DWORD *)(a1 + 24) |= 8u;
        if ((unint64_t)v26 >= v8 || *v26 != 40) {
          continue;
        }
        unsigned int v15 = v26 + 1;
        *((void *)this + 1) = v15;
LABEL_62:
        unsigned int v40 = 0;
        if ((unint64_t)v15 >= v8 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
          if (!result) {
            return result;
          }
          unsigned int v27 = v40;
          int v28 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v27 = *v15;
          int v28 = v15 + 1;
          *((void *)this + 1) = v28;
        }
        *(unsigned char *)(a1 + 12) = v27 != 0;
        *(_DWORD *)(a1 + 24) |= 0x10u;
        if ((unint64_t)v28 >= v8 || *v28 != 48) {
          continue;
        }
        unsigned int v16 = v28 + 1;
        *((void *)this + 1) = v16;
LABEL_70:
        unsigned int v40 = 0;
        if ((unint64_t)v16 >= v8 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
          if (!result) {
            return result;
          }
          unsigned int v29 = v40;
          unsigned int v30 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v29 = *v16;
          unsigned int v30 = v16 + 1;
          *((void *)this + 1) = v30;
        }
        *(unsigned char *)(a1 + 13) = v29 != 0;
        *(_DWORD *)(a1 + 24) |= 0x20u;
        if ((unint64_t)v30 >= v8 || *v30 != 56) {
          continue;
        }
        unsigned int v17 = v30 + 1;
        *((void *)this + 1) = v17;
LABEL_78:
        unsigned int v40 = 0;
        if ((unint64_t)v17 >= v8 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
          if (!result) {
            return result;
          }
          unsigned int v31 = v40;
          BOOL v32 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v31 = *v17;
          BOOL v32 = v17 + 1;
          *((void *)this + 1) = v32;
        }
        *(unsigned char *)(a1 + 14) = v31 != 0;
        *(_DWORD *)(a1 + 24) |= 0x40u;
        if ((unint64_t)v32 >= v8 || *v32 != 64) {
          continue;
        }
        unsigned int v18 = v32 + 1;
        *((void *)this + 1) = v18;
LABEL_86:
        unsigned int v40 = 0;
        if ((unint64_t)v18 >= v8 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
          if (!result) {
            return result;
          }
          unsigned int v33 = v40;
          __int16 v34 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v33 = *v18;
          __int16 v34 = v18 + 1;
          *((void *)this + 1) = v34;
        }
        *(unsigned char *)(a1 + 15) = v33 != 0;
        *(_DWORD *)(a1 + 24) |= 0x80u;
        if ((unint64_t)v34 >= v8 || *v34 != 72) {
          continue;
        }
        unsigned int v19 = v34 + 1;
        *((void *)this + 1) = v19;
LABEL_94:
        unsigned int v40 = 0;
        if ((unint64_t)v19 >= v8 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
          if (!result) {
            return result;
          }
          unsigned int v35 = v40;
          __int16 v36 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v35 = *v19;
          __int16 v36 = v19 + 1;
          *((void *)this + 1) = v36;
        }
        *(unsigned char *)(a1 + 16) = v35 != 0;
        *(_DWORD *)(a1 + 24) |= 0x100u;
        if ((unint64_t)v36 >= v8 || *v36 != 80) {
          continue;
        }
        unsigned int v20 = v36 + 1;
        *((void *)this + 1) = v20;
LABEL_102:
        unsigned int v40 = 0;
        if ((unint64_t)v20 >= v8 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
          if (!result) {
            return result;
          }
          unsigned int v37 = v40;
          double v38 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v37 = *v20;
          double v38 = (unsigned __int8 *)(v20 + 1);
          *((void *)this + 1) = v38;
        }
        *(unsigned char *)(a1 + 17) = v37 != 0;
        *(_DWORD *)(a1 + 24) |= 0x200u;
        if (v38 != (unsigned __int8 *)v8 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        char v13 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_46;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        char v14 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_54;
      case 5u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        unsigned int v15 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_62;
      case 6u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        unsigned int v16 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_70;
      case 7u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        unsigned int v17 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_78;
      case 8u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        unsigned int v18 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_86;
      case 9u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        unsigned int v19 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_94;
      case 0xAu:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        unsigned int v20 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_102;
      default:
        int v7 = TagFallback & 7;
LABEL_29:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_100E1FAB0(uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 24);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), a2, a4);
  int v6 = *(_DWORD *)(v5 + 24);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), a2, a4);
  int v6 = *(_DWORD *)(v5 + 24);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 11), a2, a4);
  int v6 = *(_DWORD *)(v5 + 24);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 12), a2, a4);
  int v6 = *(_DWORD *)(v5 + 24);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 13), a2, a4);
  int v6 = *(_DWORD *)(v5 + 24);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 14), a2, a4);
  int v6 = *(_DWORD *)(v5 + 24);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
LABEL_20:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned __int8 *)(v5 + 16), a2, a4);
    if ((*(_DWORD *)(v5 + 24) & 0x200) == 0) {
      return result;
    }
    goto LABEL_21;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 15), a2, a4);
  int v6 = *(_DWORD *)(v5 + 24);
  if ((v6 & 0x100) != 0) {
    goto LABEL_20;
  }
LABEL_10:
  if ((v6 & 0x200) == 0) {
    return result;
  }
LABEL_21:
  int v7 = *(unsigned __int8 *)(v5 + 17);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v7, a2, a4);
}

uint64_t sub_100E1FC00(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24);
  if ((_BYTE)v1)
  {
    unsigned int v2 = 2 * (v1 & 1);
    if ((v1 & 2) != 0) {
      v2 += 2;
    }
    if ((v1 & 4) != 0) {
      v2 += 2;
    }
    if ((v1 & 8) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x10) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x20) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x40) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x80) != 0) {
      v2 += 2;
    }
  }
  else
  {
    unsigned int v2 = 0;
  }
  unsigned int v3 = v2 + 2;
  if ((v1 & 0x100) == 0) {
    unsigned int v3 = v2;
  }
  if ((v1 & 0x200) != 0) {
    v3 += 2;
  }
  if ((v1 & 0xFF00) != 0) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = v2;
  }
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_100E1FC98(uint64_t a1, void *lpsrc)
{
  sub_100E1F1F8(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E1FD20()
{
  return 1;
}

void *sub_100E1FD28@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.GalileoE5SyncState");
}

void sub_100E1FD38(uint64_t a1, unsigned char *a2)
{
  if (a2 == (unsigned char *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = a2[16];
  if ((_BYTE)v4)
  {
    if (a2[16])
    {
      char v6 = a2[8];
      *(_DWORD *)(a1 + 16) |= 1u;
      *(unsigned char *)(a1 + 8) = v6;
      int v4 = *((_DWORD *)a2 + 4);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_7;
      }
    }
    else if ((a2[16] & 2) == 0)
    {
      goto LABEL_6;
    }
    char v7 = a2[9];
    *(_DWORD *)(a1 + 16) |= 2u;
    *(unsigned char *)(a1 + 9) = v7;
    if ((*((_DWORD *)a2 + 4) & 4) == 0) {
      return;
    }
LABEL_7:
    char v5 = a2[10];
    *(_DWORD *)(a1 + 16) |= 4u;
    *(unsigned char *)(a1 + 10) = v5;
  }
}

void sub_100E1FE0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E1FE24(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FA8A0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E1FE44(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FA8A0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E1FE98()
{
}

uint64_t sub_100E1FEEC(uint64_t result)
{
  if (*(unsigned char *)(result + 16))
  {
    *(_WORD *)(result + 8) = 0;
    *(unsigned char *)(result + 10) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_100E1FF04(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        char v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacuint64_t k = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v7 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        unsigned int v22 = 0;
        char v11 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v11 >= v9 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v12 = v22;
          char v13 = (unsigned char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unsigned int v12 = *v11;
          char v13 = v11 + 1;
          *((void *)this + 1) = v13;
        }
        *(unsigned char *)(a1 + 8) = v12 != 0;
        *(_DWORD *)(a1 + 16) |= 1u;
        if ((unint64_t)v13 < v9 && *v13 == 16)
        {
          char v14 = v13 + 1;
          *((void *)this + 1) = v14;
          goto LABEL_26;
        }
      }
      if (v7 != 2) {
        break;
      }
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_18;
      }
      char v14 = (char *)*((void *)this + 1);
      unint64_t v9 = *((void *)this + 2);
LABEL_26:
      unsigned int v21 = 0;
      if ((unint64_t)v14 >= v9 || *v14 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
        if (!result) {
          return result;
        }
        unsigned int v15 = v21;
        unsigned int v16 = (unsigned char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
      }
      else
      {
        unsigned int v15 = *v14;
        unsigned int v16 = v14 + 1;
        *((void *)this + 1) = v16;
      }
      *(unsigned char *)(a1 + 9) = v15 != 0;
      *(_DWORD *)(a1 + 16) |= 2u;
      if ((unint64_t)v16 < v9 && *v16 == 24)
      {
        unsigned int v10 = v16 + 1;
        *((void *)this + 1) = v10;
LABEL_34:
        unsigned int v20 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v20);
          if (!result) {
            return result;
          }
          unsigned int v17 = v20;
          unsigned int v18 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unsigned int v17 = *v10;
          unsigned int v18 = (unsigned __int8 *)(v10 + 1);
          *((void *)this + 1) = v18;
        }
        *(unsigned char *)(a1 + 10) = v17 != 0;
        *(_DWORD *)(a1 + 16) |= 4u;
        if (v18 == (unsigned __int8 *)v9 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v7 == 3)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        unsigned int v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_34;
      }
    }
    else
    {
      int v8 = TagFallback & 7;
    }
LABEL_18:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_100E20144(uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 16);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), a2, a4);
    if ((*(_DWORD *)(v5 + 16) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
  int v6 = *(_DWORD *)(v5 + 16);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  int v7 = *(unsigned __int8 *)(v5 + 10);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t sub_100E201D0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  unsigned int v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0) {
    v2 += 2;
  }
  if ((v1 & 4) != 0) {
    v2 += 2;
  }
  if (*(_DWORD *)(a1 + 16)) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  *(_DWORD *)(a1 + 12) = v3;
  return v3;
}

void sub_100E20204(uint64_t a1, unsigned char *lpsrc)
{
  sub_100E1FD38(a1, lpsrc);
}

uint64_t sub_100E2028C()
{
  return 1;
}

void *sub_100E20294@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.SbasL1SyncState");
}

void sub_100E202A4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v26);
  }
  int v4 = *(_DWORD *)(a2 + 96);
  if (!(_BYTE)v4) {
    goto LABEL_50;
  }
  if (v4)
  {
    unsigned int v5 = *(_DWORD *)(a2 + 88);
    if (v5 >= 0xD) {
      sub_101A90278();
    }
    *(_DWORD *)(a1 + 96) |= 1u;
    *(_DWORD *)(a1 + 88) = v5;
    int v4 = *(_DWORD *)(a2 + 96);
  }
  if ((v4 & 2) != 0)
  {
    *(_DWORD *)(a1 + 96) |= 2u;
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      operator new();
    }
    int v7 = *(unsigned char **)(a2 + 8);
    if (!v7) {
      int v7 = *(unsigned char **)(qword_10248ACC8 + 8);
    }
    sub_100E1C408(v6, v7);
    int v4 = *(_DWORD *)(a2 + 96);
    if ((v4 & 4) == 0)
    {
LABEL_9:
      if ((v4 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_25;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_9;
  }
  *(_DWORD *)(a1 + 96) |= 4u;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    operator new();
  }
  unint64_t v9 = *(unsigned char **)(a2 + 16);
  if (!v9) {
    unint64_t v9 = *(unsigned char **)(qword_10248ACC8 + 16);
  }
  sub_100E1CA58(v8, v9);
  int v4 = *(_DWORD *)(a2 + 96);
  if ((v4 & 8) == 0)
  {
LABEL_10:
    if ((v4 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_25:
  *(_DWORD *)(a1 + 96) |= 8u;
  uint64_t v10 = *(void *)(a1 + 24);
  if (!v10) {
    operator new();
  }
  char v11 = *(unsigned char **)(a2 + 24);
  if (!v11) {
    char v11 = *(unsigned char **)(qword_10248ACC8 + 24);
  }
  sub_100E1D188(v10, v11);
  int v4 = *(_DWORD *)(a2 + 96);
  if ((v4 & 0x10) == 0)
  {
LABEL_11:
    if ((v4 & 0x20) == 0) {
      goto LABEL_12;
    }
LABEL_35:
    *(_DWORD *)(a1 + 96) |= 0x20u;
    uint64_t v14 = *(void *)(a1 + 40);
    if (!v14) {
      operator new();
    }
    unsigned int v15 = *(unsigned char **)(a2 + 40);
    if (!v15) {
      unsigned int v15 = *(unsigned char **)(qword_10248ACC8 + 40);
    }
    sub_100E1DF08(v14, v15);
    int v4 = *(_DWORD *)(a2 + 96);
    if ((v4 & 0x40) == 0)
    {
LABEL_13:
      if ((v4 & 0x80) == 0) {
        goto LABEL_50;
      }
      goto LABEL_45;
    }
    goto LABEL_40;
  }
LABEL_30:
  *(_DWORD *)(a1 + 96) |= 0x10u;
  uint64_t v12 = *(void *)(a1 + 32);
  if (!v12) {
    operator new();
  }
  char v13 = *(unsigned char **)(a2 + 32);
  if (!v13) {
    char v13 = *(unsigned char **)(qword_10248ACC8 + 32);
  }
  sub_100E1D7D8(v12, v13);
  int v4 = *(_DWORD *)(a2 + 96);
  if ((v4 & 0x20) != 0) {
    goto LABEL_35;
  }
LABEL_12:
  if ((v4 & 0x40) == 0) {
    goto LABEL_13;
  }
LABEL_40:
  *(_DWORD *)(a1 + 96) |= 0x40u;
  uint64_t v16 = *(void *)(a1 + 48);
  if (!v16) {
    operator new();
  }
  unsigned int v17 = *(unsigned char **)(a2 + 48);
  if (!v17) {
    unsigned int v17 = *(unsigned char **)(qword_10248ACC8 + 48);
  }
  sub_100E1E558(v16, v17);
  int v4 = *(_DWORD *)(a2 + 96);
  if ((v4 & 0x80) != 0)
  {
LABEL_45:
    *(_DWORD *)(a1 + 96) |= 0x80u;
    uint64_t v18 = *(void *)(a1 + 56);
    if (!v18) {
      operator new();
    }
    unsigned int v19 = *(unsigned char **)(a2 + 56);
    if (!v19) {
      unsigned int v19 = *(unsigned char **)(qword_10248ACC8 + 56);
    }
    sub_100E1EBA8(v18, v19);
    int v4 = *(_DWORD *)(a2 + 96);
  }
LABEL_50:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 96) |= 0x100u;
    uint64_t v20 = *(void *)(a1 + 64);
    if (!v20) {
      operator new();
    }
    uint64_t v21 = *(void *)(a2 + 64);
    if (!v21) {
      uint64_t v21 = *(void *)(qword_10248ACC8 + 64);
    }
    sub_100E1F1F8(v20, v21);
    int v4 = *(_DWORD *)(a2 + 96);
    if ((v4 & 0x200) == 0)
    {
LABEL_53:
      if ((v4 & 0x400) == 0) {
        return;
      }
      goto LABEL_65;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_53;
  }
  *(_DWORD *)(a1 + 96) |= 0x200u;
  uint64_t v22 = *(void *)(a1 + 72);
  if (!v22) {
    operator new();
  }
  unsigned int v23 = *(unsigned char **)(a2 + 72);
  if (!v23) {
    unsigned int v23 = *(unsigned char **)(qword_10248ACC8 + 72);
  }
  sub_100E1FD38(v22, v23);
  if ((*(_DWORD *)(a2 + 96) & 0x400) != 0)
  {
LABEL_65:
    *(_DWORD *)(a1 + 96) |= 0x400u;
    uint64_t v24 = *(void *)(a1 + 80);
    if (!v24) {
      operator new();
    }
    unsigned int v25 = *(unsigned char **)(a2 + 80);
    if (!v25) {
      unsigned int v25 = *(unsigned char **)(qword_10248ACC8 + 80);
    }
    sub_100E1C408(v24, v25);
  }
}

void sub_100E207F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_100E20808(void *result)
{
  if ((void *)qword_10248ACC8 != result)
  {
    int v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[3];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = v1[4];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = v1[5];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = v1[6];
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = v1[7];
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = v1[8];
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
    uint64_t v10 = v1[9];
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
    uint64_t result = (void *)v1[10];
    if (result)
    {
      char v11 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v11();
    }
  }
  return result;
}

void sub_100E20A08(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FA918;
  sub_100E20808(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E20A5C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FA918;
  sub_100E20808(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E20AC4()
{
}

uint64_t sub_100E20B28(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 96);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(result + 88) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(result + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 16)) {
          *(_DWORD *)(v2 + 8) = 0;
        }
        *(_DWORD *)(v2 + 16) = 0;
        int v1 = *(_DWORD *)(result + 96);
      }
    }
    if ((v1 & 4) != 0)
    {
      uint64_t v3 = *(void *)(result + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 20))
        {
          *(unsigned char *)(v3 + 12) = 0;
          *(_DWORD *)(v3 + 8) = 0;
        }
        *(_DWORD *)(v3 + 20) = 0;
        int v1 = *(_DWORD *)(result + 96);
      }
    }
    if ((v1 & 8) != 0)
    {
      uint64_t v4 = *(void *)(result + 24);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 16)) {
          *(_DWORD *)(v4 + 8) = 0;
        }
        *(_DWORD *)(v4 + 16) = 0;
        int v1 = *(_DWORD *)(result + 96);
      }
    }
    if ((v1 & 0x10) != 0)
    {
      uint64_t v5 = *(void *)(result + 32);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 20))
        {
          *(unsigned char *)(v5 + 12) = 0;
          *(_DWORD *)(v5 + 8) = 0;
        }
        *(_DWORD *)(v5 + 20) = 0;
        int v1 = *(_DWORD *)(result + 96);
      }
    }
    if ((v1 & 0x20) != 0)
    {
      uint64_t v6 = *(void *)(result + 40);
      if (v6)
      {
        if (*(unsigned char *)(v6 + 16)) {
          *(_DWORD *)(v6 + 8) = 0;
        }
        *(_DWORD *)(v6 + 16) = 0;
        int v1 = *(_DWORD *)(result + 96);
      }
    }
    if ((v1 & 0x40) != 0)
    {
      uint64_t v7 = *(void *)(result + 48);
      if (v7)
      {
        if (*(unsigned char *)(v7 + 16)) {
          *(_DWORD *)(v7 + 8) = 0;
        }
        *(_DWORD *)(v7 + 16) = 0;
        int v1 = *(_DWORD *)(result + 96);
      }
    }
    if ((v1 & 0x80) != 0)
    {
      uint64_t v8 = *(void *)(result + 56);
      if (v8)
      {
        if (*(unsigned char *)(v8 + 16)) {
          *(_DWORD *)(v8 + 8) = 0;
        }
        *(_DWORD *)(v8 + 16) = 0;
        int v1 = *(_DWORD *)(result + 96);
      }
    }
  }
  if ((v1 & 0xFF00) != 0)
  {
    if ((v1 & 0x100) != 0)
    {
      uint64_t v9 = *(void *)(result + 64);
      if (v9)
      {
        int v10 = *(_DWORD *)(v9 + 24);
        if ((_BYTE)v10) {
          *(void *)(v9 + 8) = 0;
        }
        if ((v10 & 0xFF00) != 0) {
          *(_WORD *)(v9 + 16) = 0;
        }
        *(_DWORD *)(v9 + 24) = 0;
        int v1 = *(_DWORD *)(result + 96);
      }
    }
    if ((v1 & 0x200) != 0)
    {
      uint64_t v11 = *(void *)(result + 72);
      if (v11)
      {
        if (*(unsigned char *)(v11 + 16))
        {
          *(_WORD *)(v11 + 8) = 0;
          *(unsigned char *)(v11 + 10) = 0;
        }
        *(_DWORD *)(v11 + 16) = 0;
        int v1 = *(_DWORD *)(result + 96);
      }
    }
    if ((v1 & 0x400) != 0)
    {
      uint64_t v12 = *(void *)(result + 80);
      if (v12)
      {
        if (*(unsigned char *)(v12 + 16)) {
          *(_DWORD *)(v12 + 8) = 0;
        }
        *(_DWORD *)(v12 + 16) = 0;
      }
    }
  }
  *(_DWORD *)(result + 96) = 0;
  return result;
}

uint64_t sub_100E20CA0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 < *((void *)this + 2) && (*v5 & 0x80000000) == 0)
    {
      TagFallbacuint64_t k = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_6;
    }
    TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_31;
        }
        unsigned int v102 = 0;
        uint64_t v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102);
          if (!result) {
            return result;
          }
          unsigned int v9 = v102;
        }
        else
        {
          unsigned int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
        }
        if (v9 <= 0xC)
        {
          *(_DWORD *)(a1 + 96) |= 1u;
          *(_DWORD *)(a1 + 88) = v9;
        }
        uint64_t v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 18)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_41;
        }
        continue;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_31;
        }
LABEL_41:
        *(_DWORD *)(a1 + 96) |= 2u;
        uint64_t v12 = *(void *)(a1 + 8);
        if (!v12) {
          operator new();
        }
        unsigned int v102 = 0;
        char v13 = (char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102))return 0; {
        }
          }
        else
        {
          unsigned int v102 = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        int v14 = *((_DWORD *)this + 14);
        int v15 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v14 + 1;
        if (v14 >= v15) {
          return 0;
        }
        int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        if (!sub_100E1C5E8(v12, this, v17) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
        int v18 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v18, 1);
        int v20 = v18 - 1;
        if (v20 < 0 == v19) {
          *((_DWORD *)this + 14) = v20;
        }
        uint64_t v21 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 != 26) {
          continue;
        }
        *((void *)this + 1) = v21 + 1;
LABEL_55:
        *(_DWORD *)(a1 + 96) |= 4u;
        uint64_t v22 = *(void *)(a1 + 16);
        if (!v22) {
          operator new();
        }
        unsigned int v102 = 0;
        unsigned int v23 = (char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102))return 0; {
        }
          }
        else
        {
          unsigned int v102 = *v23;
          *((void *)this + 1) = v23 + 1;
        }
        int v24 = *((_DWORD *)this + 14);
        int v25 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v24 + 1;
        if (v24 >= v25) {
          return 0;
        }
        int v26 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        if (!sub_100E1CC64(v22, this, v27) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v26);
        int v28 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v28, 1);
        int v29 = v28 - 1;
        if (v29 < 0 == v19) {
          *((_DWORD *)this + 14) = v29;
        }
        unsigned int v30 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v30 >= *((void *)this + 2) || *v30 != 34) {
          continue;
        }
        *((void *)this + 1) = v30 + 1;
LABEL_69:
        *(_DWORD *)(a1 + 96) |= 8u;
        uint64_t v31 = *(void *)(a1 + 24);
        if (!v31) {
          operator new();
        }
        unsigned int v102 = 0;
        BOOL v32 = (char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102))return 0; {
        }
          }
        else
        {
          unsigned int v102 = *v32;
          *((void *)this + 1) = v32 + 1;
        }
        int v33 = *((_DWORD *)this + 14);
        int v34 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v33 + 1;
        if (v33 >= v34) {
          return 0;
        }
        int v35 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        if (!sub_100E1D368(v31, this, v36) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v35);
        int v37 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v37, 1);
        int v38 = v37 - 1;
        if (v38 < 0 == v19) {
          *((_DWORD *)this + 14) = v38;
        }
        __int16 v39 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v39 >= *((void *)this + 2) || *v39 != 42) {
          continue;
        }
        *((void *)this + 1) = v39 + 1;
LABEL_83:
        *(_DWORD *)(a1 + 96) |= 0x10u;
        uint64_t v40 = *(void *)(a1 + 32);
        if (!v40) {
          operator new();
        }
        unsigned int v102 = 0;
        __int16 v41 = (char *)*((void *)this + 1);
        if ((unint64_t)v41 >= *((void *)this + 2) || *v41 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102))return 0; {
        }
          }
        else
        {
          unsigned int v102 = *v41;
          *((void *)this + 1) = v41 + 1;
        }
        int v42 = *((_DWORD *)this + 14);
        int v43 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v42 + 1;
        if (v42 >= v43) {
          return 0;
        }
        int v44 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        if (!sub_100E1D9E4(v40, this, v45) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v44);
        int v46 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v46, 1);
        int v47 = v46 - 1;
        if (v47 < 0 == v19) {
          *((_DWORD *)this + 14) = v47;
        }
        double v48 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v48 >= *((void *)this + 2) || *v48 != 50) {
          continue;
        }
        *((void *)this + 1) = v48 + 1;
LABEL_97:
        *(_DWORD *)(a1 + 96) |= 0x20u;
        uint64_t v49 = *(void *)(a1 + 40);
        if (!v49) {
          operator new();
        }
        unsigned int v102 = 0;
        int v50 = (char *)*((void *)this + 1);
        if ((unint64_t)v50 >= *((void *)this + 2) || *v50 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102))return 0; {
        }
          }
        else
        {
          unsigned int v102 = *v50;
          *((void *)this + 1) = v50 + 1;
        }
        int v51 = *((_DWORD *)this + 14);
        int v52 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v51 + 1;
        if (v51 >= v52) {
          return 0;
        }
        int v53 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        if (!sub_100E1E0E8(v49, this, v54) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v53);
        int v55 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v55, 1);
        int v56 = v55 - 1;
        if (v56 < 0 == v19) {
          *((_DWORD *)this + 14) = v56;
        }
        double v57 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v57 >= *((void *)this + 2) || *v57 != 58) {
          continue;
        }
        *((void *)this + 1) = v57 + 1;
LABEL_111:
        *(_DWORD *)(a1 + 96) |= 0x40u;
        uint64_t v58 = *(void *)(a1 + 48);
        if (!v58) {
          operator new();
        }
        unsigned int v102 = 0;
        double v59 = (char *)*((void *)this + 1);
        if ((unint64_t)v59 >= *((void *)this + 2) || *v59 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102))return 0; {
        }
          }
        else
        {
          unsigned int v102 = *v59;
          *((void *)this + 1) = v59 + 1;
        }
        int v60 = *((_DWORD *)this + 14);
        int v61 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v60 + 1;
        if (v60 >= v61) {
          return 0;
        }
        int v62 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        if (!sub_100E1E738(v58, this, v63) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v62);
        int v64 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v64, 1);
        int v65 = v64 - 1;
        if (v65 < 0 == v19) {
          *((_DWORD *)this + 14) = v65;
        }
        long long v66 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v66 >= *((void *)this + 2) || *v66 != 66) {
          continue;
        }
        *((void *)this + 1) = v66 + 1;
LABEL_125:
        *(_DWORD *)(a1 + 96) |= 0x80u;
        uint64_t v67 = *(void *)(a1 + 56);
        if (!v67) {
          operator new();
        }
        unsigned int v102 = 0;
        long long v68 = (char *)*((void *)this + 1);
        if ((unint64_t)v68 >= *((void *)this + 2) || *v68 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102))return 0; {
        }
          }
        else
        {
          unsigned int v102 = *v68;
          *((void *)this + 1) = v68 + 1;
        }
        int v69 = *((_DWORD *)this + 14);
        int v70 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v69 + 1;
        if (v69 >= v70) {
          return 0;
        }
        int v71 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        if (!sub_100E1ED88(v67, this, v72) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v71);
        int v73 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v73, 1);
        int v74 = v73 - 1;
        if (v74 < 0 == v19) {
          *((_DWORD *)this + 14) = v74;
        }
        unint64_t v75 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v75 >= *((void *)this + 2) || *v75 != 74) {
          continue;
        }
        *((void *)this + 1) = v75 + 1;
LABEL_139:
        *(_DWORD *)(a1 + 96) |= 0x100u;
        uint64_t v76 = *(void *)(a1 + 64);
        if (!v76) {
          operator new();
        }
        unsigned int v102 = 0;
        long long v77 = (char *)*((void *)this + 1);
        if ((unint64_t)v77 >= *((void *)this + 2) || *v77 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102))return 0; {
        }
          }
        else
        {
          unsigned int v102 = *v77;
          *((void *)this + 1) = v77 + 1;
        }
        int v78 = *((_DWORD *)this + 14);
        int v79 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v78 + 1;
        if (v78 >= v79) {
          return 0;
        }
        int v80 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        if (!sub_100E1F4B0(v76, this, v81) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v80);
        int v82 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v82, 1);
        int v83 = v82 - 1;
        if (v83 < 0 == v19) {
          *((_DWORD *)this + 14) = v83;
        }
        uint64_t v84 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v84 >= *((void *)this + 2) || *v84 != 82) {
          continue;
        }
        *((void *)this + 1) = v84 + 1;
LABEL_153:
        *(_DWORD *)(a1 + 96) |= 0x200u;
        uint64_t v85 = *(void *)(a1 + 72);
        if (!v85) {
          operator new();
        }
        unsigned int v102 = 0;
        unint64_t v86 = (char *)*((void *)this + 1);
        if ((unint64_t)v86 >= *((void *)this + 2) || *v86 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102))return 0; {
        }
          }
        else
        {
          unsigned int v102 = *v86;
          *((void *)this + 1) = v86 + 1;
        }
        int v87 = *((_DWORD *)this + 14);
        int v88 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v87 + 1;
        if (v87 >= v88) {
          return 0;
        }
        int v89 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        if (!sub_100E1FF04(v85, this, v90) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v89);
        int v91 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v91, 1);
        int v92 = v91 - 1;
        if (v92 < 0 == v19) {
          *((_DWORD *)this + 14) = v92;
        }
        long long v93 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v93 >= *((void *)this + 2) || *v93 != 90) {
          continue;
        }
        *((void *)this + 1) = v93 + 1;
LABEL_167:
        *(_DWORD *)(a1 + 96) |= 0x400u;
        uint64_t v94 = *(void *)(a1 + 80);
        if (!v94) {
          operator new();
        }
        unsigned int v102 = 0;
        long long v95 = (char *)*((void *)this + 1);
        if ((unint64_t)v95 >= *((void *)this + 2) || *v95 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102))return 0; {
        }
          }
        else
        {
          unsigned int v102 = *v95;
          *((void *)this + 1) = v95 + 1;
        }
        int v96 = *((_DWORD *)this + 14);
        int v97 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v96 + 1;
        if (v96 >= v97) {
          return 0;
        }
        int v98 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        if (!sub_100E1C5E8(v94, this, v99) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v98);
        int v100 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v100, 1);
        int v101 = v100 - 1;
        if (v101 < 0 == v19) {
          *((_DWORD *)this + 14) = v101;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_55;
        }
        goto LABEL_31;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_69;
        }
        goto LABEL_31;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_83;
        }
        goto LABEL_31;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_97;
        }
        goto LABEL_31;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_111;
        }
        goto LABEL_31;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_125;
        }
        goto LABEL_31;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_139;
        }
        goto LABEL_31;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_153;
        }
        goto LABEL_31;
      case 0xBu:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_31;
        }
        goto LABEL_167;
      default:
        int v7 = TagFallback & 7;
LABEL_31:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100E21934(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 96);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 88), (int)a2, a4);
    int v6 = *(_DWORD *)(v5 + 96);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248ACC8 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_17:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_10248ACC8 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
LABEL_20:
  uint64_t v9 = *(void *)(v5 + 24);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_10248ACC8 + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_26;
  }
LABEL_23:
  uint64_t v10 = *(void *)(v5 + 32);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_10248ACC8 + 32);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_29;
  }
LABEL_26:
  uint64_t v11 = *(void *)(v5 + 40);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_10248ACC8 + 40);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v11, a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_32;
  }
LABEL_29:
  uint64_t v12 = *(void *)(v5 + 48);
  if (!v12) {
    uint64_t v12 = *(void *)(qword_10248ACC8 + 48);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v12, a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_35;
  }
LABEL_32:
  uint64_t v13 = *(void *)(v5 + 56);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_10248ACC8 + 56);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v13, a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_38;
  }
LABEL_35:
  uint64_t v14 = *(void *)(v5 + 64);
  if (!v14) {
    uint64_t v14 = *(void *)(qword_10248ACC8 + 64);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v14, a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      return result;
    }
    goto LABEL_41;
  }
LABEL_38:
  uint64_t v15 = *(void *)(v5 + 72);
  if (!v15) {
    uint64_t v15 = *(void *)(qword_10248ACC8 + 72);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v15, a2, a4);
  if ((*(_DWORD *)(v5 + 96) & 0x400) != 0)
  {
LABEL_41:
    uint64_t v16 = *(void *)(v5 + 80);
    if (!v16) {
      uint64_t v16 = *(void *)(qword_10248ACC8 + 80);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v16, a2, a4);
  }
  return result;
}

uint64_t sub_100E21B40(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 96);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_61;
  }
  if (v3)
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 88);
    if ((v5 & 0x80000000) != 0)
    {
      int v6 = 10;
    }
    else if (v5 >= 0x80)
    {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
      int v3 = *(_DWORD *)(a1 + 96);
    }
    else
    {
      int v6 = 1;
    }
    uint64_t v4 = (v6 + 1);
    if ((v3 & 2) == 0) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_18;
    }
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248ACC8 + 8);
  }
  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E1C978(v7);
  int v10 = (int)v8;
  if (v8 >= 0x80) {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, v9);
  }
  else {
    int v11 = 1;
  }
  uint64_t v4 = (v4 + v10 + v11 + 1);
  int v3 = *(_DWORD *)(a1 + 96);
LABEL_18:
  if ((v3 & 4) != 0)
  {
    uint64_t v12 = *(void *)(a1 + 16);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_10248ACC8 + 16);
    }
    uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E1D094(v12);
    int v15 = (int)v13;
    if (v13 >= 0x80) {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, v14);
    }
    else {
      int v16 = 1;
    }
    uint64_t v4 = (v4 + v15 + v16 + 1);
    int v3 = *(_DWORD *)(a1 + 96);
    if ((v3 & 8) == 0)
    {
LABEL_20:
      if ((v3 & 0x10) == 0) {
        goto LABEL_21;
      }
      goto LABEL_37;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)(a1 + 24);
  if (!v17) {
    uint64_t v17 = *(void *)(qword_10248ACC8 + 24);
  }
  int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E1D6F8(v17);
  int v20 = (int)v18;
  if (v18 >= 0x80) {
    int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, v19);
  }
  else {
    int v21 = 1;
  }
  uint64_t v4 = (v4 + v20 + v21 + 1);
  int v3 = *(_DWORD *)(a1 + 96);
  if ((v3 & 0x10) == 0)
  {
LABEL_21:
    if ((v3 & 0x20) == 0) {
      goto LABEL_22;
    }
    goto LABEL_43;
  }
LABEL_37:
  uint64_t v22 = *(void *)(a1 + 32);
  if (!v22) {
    uint64_t v22 = *(void *)(qword_10248ACC8 + 32);
  }
  unsigned int v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E1DE14(v22);
  int v25 = (int)v23;
  if (v23 >= 0x80) {
    int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23, v24);
  }
  else {
    int v26 = 1;
  }
  uint64_t v4 = (v4 + v25 + v26 + 1);
  int v3 = *(_DWORD *)(a1 + 96);
  if ((v3 & 0x20) == 0)
  {
LABEL_22:
    if ((v3 & 0x40) == 0) {
      goto LABEL_23;
    }
    goto LABEL_49;
  }
LABEL_43:
  uint64_t v27 = *(void *)(a1 + 40);
  if (!v27) {
    uint64_t v27 = *(void *)(qword_10248ACC8 + 40);
  }
  int v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E1E478(v27);
  int v30 = (int)v28;
  if (v28 >= 0x80) {
    int v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28, v29);
  }
  else {
    int v31 = 1;
  }
  uint64_t v4 = (v4 + v30 + v31 + 1);
  int v3 = *(_DWORD *)(a1 + 96);
  if ((v3 & 0x40) == 0)
  {
LABEL_23:
    if ((v3 & 0x80) == 0) {
      goto LABEL_61;
    }
    goto LABEL_55;
  }
LABEL_49:
  uint64_t v32 = *(void *)(a1 + 48);
  if (!v32) {
    uint64_t v32 = *(void *)(qword_10248ACC8 + 48);
  }
  int v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E1EAC8(v32);
  int v35 = (int)v33;
  if (v33 >= 0x80) {
    int v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33, v34);
  }
  else {
    int v36 = 1;
  }
  uint64_t v4 = (v4 + v35 + v36 + 1);
  int v3 = *(_DWORD *)(a1 + 96);
  if ((v3 & 0x80) != 0)
  {
LABEL_55:
    uint64_t v37 = *(void *)(a1 + 56);
    if (!v37) {
      uint64_t v37 = *(void *)(qword_10248ACC8 + 56);
    }
    int v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E1F118(v37);
    int v40 = (int)v38;
    if (v38 >= 0x80) {
      int v41 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v38, v39);
    }
    else {
      int v41 = 1;
    }
    uint64_t v4 = (v4 + v40 + v41 + 1);
    int v3 = *(_DWORD *)(a1 + 96);
  }
LABEL_61:
  if ((v3 & 0xFF00) == 0) {
    goto LABEL_88;
  }
  if ((v3 & 0x100) != 0)
  {
    uint64_t v42 = *(void *)(a1 + 64);
    if (!v42) {
      uint64_t v42 = *(void *)(qword_10248ACC8 + 64);
    }
    int v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E1FC00(v42);
    int v45 = (int)v43;
    if (v43 >= 0x80) {
      int v46 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v43, v44);
    }
    else {
      int v46 = 1;
    }
    uint64_t v4 = (v4 + v45 + v46 + 1);
    int v3 = *(_DWORD *)(a1 + 96);
    if ((v3 & 0x200) == 0)
    {
LABEL_64:
      if ((v3 & 0x400) == 0) {
        goto LABEL_88;
      }
      goto LABEL_82;
    }
  }
  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_64;
  }
  uint64_t v47 = *(void *)(a1 + 72);
  if (!v47) {
    uint64_t v47 = *(void *)(qword_10248ACC8 + 72);
  }
  int v48 = *(_DWORD *)(v47 + 16);
  int v49 = 2 * (v48 & 1);
  if ((v48 & 2) != 0) {
    v49 += 2;
  }
  if ((v48 & 4) != 0) {
    v49 += 2;
  }
  if (*(_DWORD *)(v47 + 16)) {
    int v50 = v49;
  }
  else {
    int v50 = 0;
  }
  *(_DWORD *)(v47 + 12) = v50;
  uint64_t v4 = (v4 + v50 + 2);
  if ((*(_DWORD *)(a1 + 96) & 0x400) != 0)
  {
LABEL_82:
    uint64_t v51 = *(void *)(a1 + 80);
    if (!v51) {
      uint64_t v51 = *(void *)(qword_10248ACC8 + 80);
    }
    int v52 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E1C978(v51);
    int v54 = (int)v52;
    if (v52 >= 0x80) {
      int v55 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v52, v53);
    }
    else {
      int v55 = 1;
    }
    uint64_t v4 = (v4 + v54 + v55 + 1);
  }
LABEL_88:
  *(_DWORD *)(a1 + 92) = v4;
  return v4;
}

void sub_100E21EC0(uint64_t a1, void *lpsrc)
{
  sub_100E202A4(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E21F48()
{
  return 1;
}

void *sub_100E21F50@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.SyncState");
}

double sub_100E21F60(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(double *)(a1 + 8) = result;
      int v5 = *(_DWORD *)(a2 + 32);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(double *)(a1 + 16) = result;
    if ((*(_DWORD *)(a2 + 32) & 4) == 0) {
      return result;
    }
LABEL_7:
    char v6 = *(unsigned char *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 4u;
    *(unsigned char *)(a1 + 24) = v6;
  }
  return result;
}

void sub_100E22034(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E2204C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FA990;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E2206C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FA990;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E220C0()
{
}

uint64_t sub_100E22114(uint64_t result)
{
  if (*(unsigned char *)(result + 32))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_100E2212C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacuint64_t k = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v7 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_25;
        }
        *(void *)int v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v16) & 1) == 0)return 0; {
        *(void *)(a1 + 8) = *(void *)v16;
        }
        *(_DWORD *)(a1 + 32) |= 1u;
        int v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 17)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_17;
        }
      }
      if (v7 != 2) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 1) {
        goto LABEL_25;
      }
LABEL_17:
      *(void *)int v16 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v16) & 1) == 0)return 0; {
      *(void *)(a1 + 16) = *(void *)v16;
      }
      *(_DWORD *)(a1 + 32) |= 2u;
      uint64_t v12 = (unsigned char *)*((void *)this + 1);
      unint64_t v9 = *((void *)this + 2);
      if ((unint64_t)v12 < v9 && *v12 == 24)
      {
        int v10 = v12 + 1;
        *((void *)this + 1) = v10;
LABEL_21:
        v16[0] = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v16);
          if (!result) {
            return result;
          }
          unsigned int v13 = v16[0];
          unsigned int v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unsigned int v13 = *v10;
          unsigned int v14 = (unsigned __int8 *)(v10 + 1);
          *((void *)this + 1) = v14;
        }
        *(unsigned char *)(a1 + 24) = v13 != 0;
        *(_DWORD *)(a1 + 32) |= 4u;
        if (v14 == (unsigned __int8 *)v9 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v7 == 3)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_21;
      }
    }
    else
    {
      int v8 = TagFallback & 7;
    }
LABEL_25:
    if (v8 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return 0;
}

uint64_t sub_100E2231C(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v5 + 16), a3);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(result + 8), a3);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  int v7 = *(unsigned __int8 *)(v5 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t sub_100E223A8(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 32);
  if (*(unsigned char *)(a1 + 32))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      uint64_t v1 = v2 + 2;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *(_DWORD *)(a1 + 28) = v1;
  return v1;
}

double sub_100E223E0(uint64_t a1, void *lpsrc)
{
  return sub_100E21F60(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E22468()
{
  return 1;
}

void *sub_100E22470@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.SvTime");
}

double sub_100E22480(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(double *)(a1 + 8) = result;
      int v5 = *(_DWORD *)(a2 + 32);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(double *)(a1 + 16) = result;
    if ((*(_DWORD *)(a2 + 32) & 4) == 0) {
      return result;
    }
LABEL_7:
    char v6 = *(unsigned char *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 4u;
    *(unsigned char *)(a1 + 24) = v6;
  }
  return result;
}

void sub_100E22554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E2256C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FAA08;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E2258C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FAA08;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E225E0()
{
}

uint64_t sub_100E22634(uint64_t result)
{
  if (*(unsigned char *)(result + 32))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_100E2264C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacuint64_t k = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v7 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_25;
        }
        *(void *)int v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v16) & 1) == 0)return 0; {
        *(void *)(a1 + 8) = *(void *)v16;
        }
        *(_DWORD *)(a1 + 32) |= 1u;
        int v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 17)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_17;
        }
      }
      if (v7 != 2) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 1) {
        goto LABEL_25;
      }
LABEL_17:
      *(void *)int v16 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v16) & 1) == 0)return 0; {
      *(void *)(a1 + 16) = *(void *)v16;
      }
      *(_DWORD *)(a1 + 32) |= 2u;
      uint64_t v12 = (unsigned char *)*((void *)this + 1);
      unint64_t v9 = *((void *)this + 2);
      if ((unint64_t)v12 < v9 && *v12 == 24)
      {
        int v10 = v12 + 1;
        *((void *)this + 1) = v10;
LABEL_21:
        v16[0] = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v16);
          if (!result) {
            return result;
          }
          unsigned int v13 = v16[0];
          unsigned int v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unsigned int v13 = *v10;
          unsigned int v14 = (unsigned __int8 *)(v10 + 1);
          *((void *)this + 1) = v14;
        }
        *(unsigned char *)(a1 + 24) = v13 != 0;
        *(_DWORD *)(a1 + 32) |= 4u;
        if (v14 == (unsigned __int8 *)v9 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v7 == 3)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_21;
      }
    }
    else
    {
      int v8 = TagFallback & 7;
    }
LABEL_25:
    if (v8 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return 0;
}

uint64_t sub_100E2283C(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v5 + 16), a3);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(result + 8), a3);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  int v7 = *(unsigned __int8 *)(v5 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t sub_100E228C8(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 32);
  if (*(unsigned char *)(a1 + 32))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      uint64_t v1 = v2 + 2;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *(_DWORD *)(a1 + 28) = v1;
  return v1;
}

double sub_100E22900(uint64_t a1, void *lpsrc)
{
  return sub_100E22480(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E22988()
{
  return 1;
}

void *sub_100E22990@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.FrequencyOffset");
}

void sub_100E229A0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(void *)(a1 + 8) = v6;
      int v4 = *(_DWORD *)(a2 + 32);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v7 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(void *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }
LABEL_12:
    char v8 = *(unsigned char *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 4u;
    *(unsigned char *)(a1 + 24) = v8;
    if ((*(_DWORD *)(a2 + 32) & 8) == 0) {
      return;
    }
LABEL_8:
    char v5 = *(unsigned char *)(a2 + 25);
    *(_DWORD *)(a1 + 32) |= 8u;
    *(unsigned char *)(a1 + 25) = v5;
  }
}

void sub_100E22A94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E22AAC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FAA80;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E22ACC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FAA80;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E22B20()
{
}

uint64_t sub_100E22B74(uint64_t result)
{
  if (*(unsigned char *)(result + 32))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_100E22B8C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    char v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_24;
        }
        *(void *)int v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v18) & 1) == 0)return 0; {
        *(void *)(a1 + 8) = *(void *)v18;
        }
        *(_DWORD *)(a1 + 32) |= 1u;
        char v8 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 != 17) {
          continue;
        }
        *((void *)this + 1) = v8 + 1;
        goto LABEL_14;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_24;
        }
LABEL_14:
        *(void *)int v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v18) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v18;
        }
        *(_DWORD *)(a1 + 32) |= 2u;
        int v10 = (unsigned char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v10 >= v9 || *v10 != 24) {
          continue;
        }
        int v11 = v10 + 1;
        *((void *)this + 1) = v11;
LABEL_20:
        v18[0] = 0;
        if ((unint64_t)v11 >= v9 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v18);
          if (!result) {
            return result;
          }
          unsigned int v12 = v18[0];
          unsigned int v13 = (unsigned char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unsigned int v12 = *v11;
          unsigned int v13 = v11 + 1;
          *((void *)this + 1) = v13;
        }
        *(unsigned char *)(a1 + 24) = v12 != 0;
        *(_DWORD *)(a1 + 32) |= 4u;
        if ((unint64_t)v13 >= v9 || *v13 != 32) {
          continue;
        }
        unsigned int v14 = v13 + 1;
        *((void *)this + 1) = v14;
LABEL_33:
        v18[0] = 0;
        if ((unint64_t)v14 >= v9 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v18);
          if (!result) {
            return result;
          }
          unsigned int v16 = v18[0];
          uint64_t v17 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unsigned int v16 = *v14;
          uint64_t v17 = (unsigned __int8 *)(v14 + 1);
          *((void *)this + 1) = v17;
        }
        *(unsigned char *)(a1 + 25) = v16 != 0;
        *(_DWORD *)(a1 + 32) |= 8u;
        if (v17 != (unsigned __int8 *)v9 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v11 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_20;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        unsigned int v14 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_33;
      default:
        int v7 = TagFallback & 7;
LABEL_24:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_100E22E24(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(result + 8), a3);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 24), a2, a4);
      if ((*(_DWORD *)(v5 + 32) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  int v7 = *(unsigned __int8 *)(v5 + 25);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
}

uint64_t sub_100E22ECC(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 32);
  if (*(unsigned char *)(a1 + 32))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      v2 += 2;
    }
    if ((v1 & 8) != 0) {
      uint64_t v1 = v2 + 2;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *(_DWORD *)(a1 + 28) = v1;
  return v1;
}

void sub_100E22F10(uint64_t a1, void *lpsrc)
{
  sub_100E229A0(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E22F98()
{
  return 1;
}

void *sub_100E22FA0@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.FrequencyOffsetFromPhaseTracking");
}

double sub_100E22FB0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 48);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 48))
    {
      uint64_t v7 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 48) |= 1u;
      *(void *)(a1 + 8) = v7;
      int v5 = *(_DWORD *)(a2 + 48);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }
    else if ((*(unsigned char *)(a2 + 48) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v8 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 48) |= 2u;
    *(void *)(a1 + 16) = v8;
    int v5 = *(_DWORD *)(a2 + 48);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }
LABEL_13:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 48) |= 4u;
    *(double *)(a1 + 24) = result;
    int v5 = *(_DWORD *)(a2 + 48);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0) {
        return result;
      }
      goto LABEL_9;
    }
LABEL_14:
    double result = *(double *)(a2 + 32);
    *(_DWORD *)(a1 + 48) |= 8u;
    *(double *)(a1 + 32) = result;
    if ((*(_DWORD *)(a2 + 48) & 0x10) == 0) {
      return result;
    }
LABEL_9:
    char v6 = *(unsigned char *)(a2 + 40);
    *(_DWORD *)(a1 + 48) |= 0x10u;
    *(unsigned char *)(a1 + 40) = v6;
  }
  return result;
}

void sub_100E230C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E230DC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FAAF8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E230FC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FAAF8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E23150()
{
}

uint64_t sub_100E231AC(uint64_t result)
{
  if (*(unsigned char *)(result + 48))
  {
    *(unsigned char *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  *(_DWORD *)(result + 48) = 0;
  return result;
}

uint64_t sub_100E231CC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unint64_t *)(a1 + 8);
  char v6 = (unint64_t *)(a1 + 16);
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!result) {
            return result;
          }
          unsigned int v12 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unint64_t *v5 = *v11;
          unsigned int v12 = v11 + 1;
          *((void *)this + 1) = v12;
        }
        *(_DWORD *)(a1 + 48) |= 1u;
        if ((unint64_t)v12 < v10 && *v12 == 16)
        {
          unsigned int v13 = v12 + 1;
          *((void *)this + 1) = v13;
          goto LABEL_29;
        }
        continue;
      case 2u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        unsigned int v13 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_29:
        if ((unint64_t)v13 >= v10 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!result) {
            return result;
          }
          uint64_t v17 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          *char v6 = *v13;
          uint64_t v17 = v13 + 1;
          *((void *)this + 1) = v17;
        }
        *(_DWORD *)(a1 + 48) |= 2u;
        if ((unint64_t)v17 >= v10 || *v17 != 25) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
LABEL_37:
        *(void *)uint64_t v22 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v22) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v22;
        }
        *(_DWORD *)(a1 + 48) |= 4u;
        int v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 != 33) {
          continue;
        }
        *((void *)this + 1) = v18 + 1;
LABEL_41:
        *(void *)uint64_t v22 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v22))
        {
          *(void *)(a1 + 32) = *(void *)v22;
          *(_DWORD *)(a1 + 48) |= 8u;
          unsigned int v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
          if ((unint64_t)v19 < v14 && *v19 == 40)
          {
            int v15 = v19 + 1;
            *((void *)this + 1) = v15;
LABEL_45:
            v22[0] = 0;
            if ((unint64_t)v15 >= v14 || *v15 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v22);
              if (!result) {
                return result;
              }
              unsigned int v20 = v22[0];
              int v21 = (unsigned __int8 *)*((void *)this + 1);
              unint64_t v14 = *((void *)this + 2);
            }
            else
            {
              unsigned int v20 = *v15;
              int v21 = (unsigned __int8 *)(v15 + 1);
              *((void *)this + 1) = v21;
            }
            *(unsigned char *)(a1 + 40) = v20 != 0;
            *(_DWORD *)(a1 + 48) |= 0x10u;
            if (v21 == (unsigned __int8 *)v14
              && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)this + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_37;
        }
        goto LABEL_20;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_41;
        }
        goto LABEL_20;
      case 5u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_45;
      default:
        int v9 = TagFallback & 7;
LABEL_20:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100E234D8(uint64_t result, unint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 48);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 16), a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, a2, *(double *)(v5 + 32), a3);
    if ((*(_DWORD *)(v5 + 48) & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return result;
  }
LABEL_11:
  int v7 = *(unsigned __int8 *)(v5 + 40);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, a2, a4);
}

uint64_t sub_100E2359C(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 48);
  if (!(_BYTE)v3)
  {
    uint64_t result = 0;
    goto LABEL_15;
  }
  if ((*(unsigned char *)(a1 + 48) & 1) == 0)
  {
    unsigned int v4 = 0;
    if ((*(unsigned char *)(a1 + 48) & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8), a2)+ 1;
  int v3 = *(_DWORD *)(a1 + 48);
  if ((v3 & 2) != 0)
  {
LABEL_7:
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16), a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 48);
  }
LABEL_8:
  unsigned int v6 = v4 + 9;
  if ((v3 & 4) == 0) {
    unsigned int v6 = v4;
  }
  if ((v3 & 8) != 0) {
    v6 += 9;
  }
  if ((v3 & 0x10) != 0) {
    uint64_t result = v6 + 2;
  }
  else {
    uint64_t result = v6;
  }
LABEL_15:
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

double sub_100E2362C(uint64_t a1, void *lpsrc)
{
  return sub_100E22FB0(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E236B4()
{
  return 1;
}

void *sub_100E236BC@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.PhaseTracking");
}

double sub_100E236CC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      *(_DWORD *)(a1 + 32) |= 1u;
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_10248ACF0 + 8);
      }
      double result = sub_100E21F60(v6, v7);
      int v5 = *(_DWORD *)(a2 + 32);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    *(_DWORD *)(a1 + 32) |= 2u;
    uint64_t v8 = *(void *)(a1 + 16);
    if (!v8) {
      operator new();
    }
    uint64_t v9 = *(void *)(a2 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_10248ACF0 + 16);
    }
    double result = sub_100E22480(v8, v9);
    if ((*(_DWORD *)(a2 + 32) & 4) != 0)
    {
LABEL_7:
      LODWORD(result) = *(_DWORD *)(a2 + 24);
      *(_DWORD *)(a1 + 32) |= 4u;
      *(_DWORD *)(a1 + 24) = LODWORD(result);
    }
  }
  return result;
}

void sub_100E23858(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_100E23870(void *result)
{
  if ((void *)qword_10248ACF0 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    double result = (void *)v1[2];
    if (result)
    {
      int v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_100E23910(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FAB70;
  sub_100E23870(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E23964(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FAB70;
  sub_100E23870(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E239CC()
{
}

uint64_t sub_100E23A1C(uint64_t result)
{
  LOBYTE(v1) = *(unsigned char *)(result + 32);
  if ((_BYTE)v1)
  {
    if (*(unsigned char *)(result + 32))
    {
      uint64_t v2 = *(void *)(result + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 32))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
          *(unsigned char *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 32) = 0;
        int v1 = *(_DWORD *)(result + 32);
      }
    }
    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(result + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 32))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(unsigned char *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 32) = 0;
      }
    }
    *(_DWORD *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_100E23A74(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          int v5 = (char *)*((void *)this + 1);
          if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
          {
            TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            TagFallbacuint64_t k = *v5;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v5 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v8 = TagFallback & 7;
          if (v8 != 2) {
            goto LABEL_20;
          }
          *(_DWORD *)(a1 + 32) |= 1u;
          uint64_t v9 = *(void *)(a1 + 8);
          if (!v9) {
            operator new();
          }
          unsigned int v30 = 0;
          unint64_t v10 = (char *)*((void *)this + 1);
          if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v30))return 0; {
          }
            }
          else
          {
            unsigned int v30 = *v10;
            *((void *)this + 1) = v10 + 1;
          }
          int v11 = *((_DWORD *)this + 14);
          int v12 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v11 + 1;
          if (v11 >= v12) {
            return 0;
          }
          int v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v30);
          if (!sub_100E2212C(v9, this, v14) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
          int v15 = *((_DWORD *)this + 14);
          BOOL v16 = __OFSUB__(v15, 1);
          int v17 = v15 - 1;
          if (v17 < 0 == v16) {
            *((_DWORD *)this + 14) = v17;
          }
          int v18 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v18 < *((void *)this + 2) && *v18 == 18)
          {
            *((void *)this + 1) = v18 + 1;
            goto LABEL_32;
          }
        }
        if (v7 != 2) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_20;
        }
LABEL_32:
        *(_DWORD *)(a1 + 32) |= 2u;
        uint64_t v19 = *(void *)(a1 + 16);
        if (!v19) {
          operator new();
        }
        unsigned int v31 = 0;
        unsigned int v20 = (char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v31))return 0; {
        }
          }
        else
        {
          unsigned int v31 = *v20;
          *((void *)this + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)this + 14);
        int v22 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v21 + 1;
        if (v21 >= v22) {
          return 0;
        }
        int v23 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v31);
        if (!sub_100E2264C(v19, this, v24) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v23);
        int v25 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v25, 1);
        int v26 = v25 - 1;
        if (v26 < 0 == v16) {
          *((_DWORD *)this + 14) = v26;
        }
        uint64_t v27 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v27 < *((void *)this + 2) && *v27 == 29)
        {
          *((void *)this + 1) = v27 + 1;
          goto LABEL_46;
        }
      }
      if (v7 != 3) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 5) {
        goto LABEL_20;
      }
LABEL_46:
      unsigned int v29 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v29) & 1) == 0) {
        return 0;
      }
      *(_DWORD *)(a1 + 24) = v29;
      *(_DWORD *)(a1 + 32) |= 4u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v8 = TagFallback & 7;
LABEL_20:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_100E23DD4(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_10248ACF0 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        return result;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_10248ACF0 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  if ((*(_DWORD *)(v5 + 32) & 4) != 0)
  {
LABEL_11:
    float v9 = *(float *)(v5 + 24);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, v9, a3);
  }
  return result;
}

uint64_t sub_100E23E80(uint64_t a1)
{
  LOBYTE(v1) = *(unsigned char *)(a1 + 32);
  if (!(_BYTE)v1)
  {
    uint64_t v2 = 0;
    goto LABEL_27;
  }
  if (*(unsigned char *)(a1 + 32))
  {
    uint64_t v2 = *(void *)(a1 + 8);
    if (!v2) {
      uint64_t v2 = *(void *)(qword_10248ACF0 + 8);
    }
    int v3 = *(unsigned __int8 *)(v2 + 32);
    if (*(unsigned char *)(v2 + 32))
    {
      int v4 = (v3 << 31 >> 31) & 9;
      if ((v3 & 2) != 0) {
        v4 += 9;
      }
      if ((v3 & 4) != 0) {
        int v3 = v4 + 2;
      }
      else {
        int v3 = v4;
      }
    }
    *(_DWORD *)(v2 + 28) = v3;
    LODWORD(v2) = v3 + 2;
    int v1 = *(_DWORD *)(a1 + 32);
    if ((v1 & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }
  LODWORD(v2) = 0;
  if ((*(unsigned char *)(a1 + 32) & 2) != 0)
  {
LABEL_15:
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_10248ACF0 + 16);
    }
    int v6 = *(unsigned __int8 *)(v5 + 32);
    if (*(unsigned char *)(v5 + 32))
    {
      int v7 = (v6 << 31 >> 31) & 9;
      if ((v6 & 2) != 0) {
        v7 += 9;
      }
      if ((v6 & 4) != 0) {
        int v6 = v7 + 2;
      }
      else {
        int v6 = v7;
      }
    }
    *(_DWORD *)(v5 + 28) = v6;
    LODWORD(v2) = v2 + v6 + 2;
    int v1 = *(_DWORD *)(a1 + 32);
  }
LABEL_24:
  if ((v1 & 4) != 0) {
    uint64_t v2 = (v2 + 5);
  }
  else {
    uint64_t v2 = v2;
  }
LABEL_27:
  *(_DWORD *)(a1 + 28) = v2;
  return v2;
}

double sub_100E23F58(uint64_t a1, void *lpsrc)
{
  return sub_100E236CC(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E23FE0()
{
  return 1;
}

void *sub_100E23FE8@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.SignalCorrelationPeak");
}

void sub_100E23FF8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      uint64_t v5 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(void *)(a1 + 8) = v5;
      int v4 = *(_DWORD *)(a2 + 32);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
LABEL_10:
        unsigned int v7 = *(_DWORD *)(a2 + 24);
        if (v7 >= 6) {
          sub_101A902A4();
        }
        *(_DWORD *)(a1 + 32) |= 4u;
        *(_DWORD *)(a1 + 24) = v7;
        return;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v6 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(void *)(a1 + 16) = v6;
    if ((*(_DWORD *)(a2 + 32) & 4) == 0) {
      return;
    }
    goto LABEL_10;
  }
}

void sub_100E240D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E240F0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FABE8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E24110(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FABE8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E24164()
{
}

uint64_t sub_100E241B4(uint64_t result)
{
  if (*(unsigned char *)(result + 32))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_100E241CC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacuint64_t k = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v7 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_25;
        }
        *(void *)int v15 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v15) & 1) == 0)return 0; {
        *(void *)(a1 + 8) = *(void *)v15;
        }
        *(_DWORD *)(a1 + 32) |= 1u;
        int v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 17)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_17;
        }
      }
      if (v7 != 2) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 1) {
        goto LABEL_25;
      }
LABEL_17:
      *(void *)int v15 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v15) & 1) == 0)return 0; {
      *(void *)(a1 + 16) = *(void *)v15;
      }
      *(_DWORD *)(a1 + 32) |= 2u;
      int v12 = (unsigned char *)*((void *)this + 1);
      unint64_t v9 = *((void *)this + 2);
      if ((unint64_t)v12 < v9 && *v12 == 24)
      {
        unint64_t v10 = v12 + 1;
        *((void *)this + 1) = v10;
LABEL_21:
        v15[0] = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v15);
          if (!result) {
            return result;
          }
          unsigned int v13 = v15[0];
        }
        else
        {
          unsigned int v13 = *v10;
          *((void *)this + 1) = v10 + 1;
        }
        if (v13 <= 5)
        {
          *(_DWORD *)(a1 + 32) |= 4u;
          *(_DWORD *)(a1 + 24) = v13;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v7 == 3)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        unint64_t v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_21;
      }
    }
    else
    {
      int v8 = TagFallback & 7;
    }
LABEL_25:
    if (v8 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return 0;
}

uint64_t sub_100E243BC(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v5 + 16), a3);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(result + 8), a3);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  int v7 = *(_DWORD *)(v5 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t sub_100E24448(uint64_t a1, unsigned int a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 32);
  if (*(unsigned char *)(a1 + 32))
  {
    unsigned int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 4) != 0)
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
      if ((v6 & 0x80000000) != 0)
      {
        int v7 = 11;
      }
      else if (v6 >= 0x80)
      {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
      }
      else
      {
        int v7 = 2;
      }
      uint64_t v5 = (v7 + v5);
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  *(_DWORD *)(a1 + 28) = v5;
  return v5;
}

void sub_100E244C8(uint64_t a1, void *lpsrc)
{
  sub_100E23FF8(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E24550()
{
  return 1;
}

void *sub_100E24558@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.FullSvTime");
}

float sub_100E24568(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      float result = *(float *)(a2 + 8);
      *(_DWORD *)(a1 + 24) |= 1u;
      *(float *)(a1 + 8) = result;
      int v5 = *(_DWORD *)(a2 + 24);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 24) & 2) == 0)
    {
      goto LABEL_6;
    }
    float result = *(float *)(a2 + 12);
    *(_DWORD *)(a1 + 24) |= 2u;
    *(float *)(a1 + 12) = result;
    if ((*(_DWORD *)(a2 + 24) & 4) == 0) {
      return result;
    }
LABEL_7:
    float result = *(float *)(a2 + 16);
    *(_DWORD *)(a1 + 24) |= 4u;
    *(float *)(a1 + 16) = result;
  }
  return result;
}

void sub_100E2463C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E24654(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FAC60;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E24674(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FAC60;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E246C8()
{
}

uint64_t sub_100E24718(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    *(void *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_100E24730(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacuint64_t k = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v7 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 5) {
          goto LABEL_27;
        }
        unsigned int v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v14) & 1) == 0) {
          return 0;
        }
        a1[2] = v14;
        a1[6] |= 1u;
        unint64_t v9 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v9 < *((void *)this + 2) && *v9 == 21)
        {
          *((void *)this + 1) = v9 + 1;
LABEL_17:
          unsigned int v13 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v13) & 1) == 0) {
            return 0;
          }
          a1[3] = v13;
          a1[6] |= 2u;
          unint64_t v10 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v10 < *((void *)this + 2) && *v10 == 29)
          {
            *((void *)this + 1) = v10 + 1;
            goto LABEL_21;
          }
        }
      }
      if (v7 == 2)
      {
        int v8 = TagFallback & 7;
        if (v8 != 5) {
          goto LABEL_27;
        }
        goto LABEL_17;
      }
      if (v7 != 3)
      {
        int v8 = TagFallback & 7;
        goto LABEL_27;
      }
      int v8 = TagFallback & 7;
      if (v8 == 5) {
        break;
      }
LABEL_27:
      if (v8 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
LABEL_21:
    unsigned int v12 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v12) & 1) == 0) {
      return 0;
    }
    a1[4] = v12;
    a1[6] |= 4u;
  }
  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_100E248F8(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 24);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(float *)(v4 + 12), a3);
    if ((*(_DWORD *)(v4 + 24) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(float *)(result + 8), a3);
  int v5 = *(_DWORD *)(v4 + 24);
  if ((v5 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 4) == 0) {
    return result;
  }
LABEL_7:
  float v6 = *(float *)(v4 + 16);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, v6, a3);
}

uint64_t sub_100E24984(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 24);
  if (*(unsigned char *)(a1 + 24))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 5;
    if ((v1 & 2) != 0) {
      v2 += 5;
    }
    if ((v1 & 4) != 0) {
      uint64_t v1 = v2 + 5;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

float sub_100E249BC(uint64_t a1, void *lpsrc)
{
  return sub_100E24568(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E24A44()
{
  return 1;
}

void *sub_100E24A4C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.SvMeasurementUsage");
}

void sub_100E24A5C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v30);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 88), *(_DWORD *)(a2 + 96) + *(_DWORD *)(a1 + 96));
  if (*(int *)(a2 + 96) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 88) + 8 * v4);
      int v6 = *(_DWORD *)(a1 + 100);
      uint64_t v7 = *(int *)(a1 + 96);
      if ((int)v7 >= v6)
      {
        if (v6 == *(_DWORD *)(a1 + 104))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 88), v6 + 1);
          int v6 = *(_DWORD *)(a1 + 100);
        }
        *(_DWORD *)(a1 + 100) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *(void *)(a1 + 88);
      *(_DWORD *)(a1 + 96) = v7 + 1;
      sub_100E236CC(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 96));
  }
  int v9 = *(_DWORD *)(a2 + 116);
  if (!(_BYTE)v9) {
    goto LABEL_21;
  }
  if (v9)
  {
    int v14 = *(_DWORD *)(a2 + 8);
    *(_DWORD *)(a1 + 116) |= 1u;
    *(_DWORD *)(a1 + 8) = v14;
    int v9 = *(_DWORD *)(a2 + 116);
    if ((v9 & 2) == 0)
    {
LABEL_14:
      if ((v9 & 4) == 0) {
        goto LABEL_15;
      }
      goto LABEL_37;
    }
  }
  else if ((v9 & 2) == 0)
  {
    goto LABEL_14;
  }
  int v15 = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 116) |= 2u;
  *(_DWORD *)(a1 + 12) = v15;
  int v9 = *(_DWORD *)(a2 + 116);
  if ((v9 & 4) == 0)
  {
LABEL_15:
    if ((v9 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_42;
  }
LABEL_37:
  *(_DWORD *)(a1 + 116) |= 4u;
  uint64_t v16 = *(void *)(a1 + 16);
  if (!v16) {
    operator new();
  }
  uint64_t v17 = *(void *)(a2 + 16);
  if (!v17) {
    uint64_t v17 = *(void *)(qword_10248AD08 + 16);
  }
  sub_100E23FF8(v16, v17);
  int v9 = *(_DWORD *)(a2 + 116);
  if ((v9 & 8) == 0)
  {
LABEL_16:
    if ((v9 & 0x10) == 0) {
      goto LABEL_17;
    }
    goto LABEL_47;
  }
LABEL_42:
  *(_DWORD *)(a1 + 116) |= 8u;
  uint64_t v18 = *(void *)(a1 + 24);
  if (!v18) {
    operator new();
  }
  uint64_t v19 = *(void *)(a2 + 24);
  if (!v19) {
    uint64_t v19 = *(void *)(qword_10248AD08 + 24);
  }
  sub_100E24568(v18, v19);
  int v9 = *(_DWORD *)(a2 + 116);
  if ((v9 & 0x10) == 0)
  {
LABEL_17:
    if ((v9 & 0x20) == 0) {
      goto LABEL_18;
    }
LABEL_52:
    *(_DWORD *)(a1 + 116) |= 0x20u;
    uint64_t v22 = *(void *)(a1 + 40);
    if (!v22) {
      operator new();
    }
    uint64_t v23 = *(void *)(a2 + 40);
    if (!v23) {
      uint64_t v23 = *(void *)(qword_10248AD08 + 40);
    }
    sub_100E24568(v22, v23);
    int v9 = *(_DWORD *)(a2 + 116);
    if ((v9 & 0x40) == 0)
    {
LABEL_19:
      if ((v9 & 0x80) == 0) {
        goto LABEL_21;
      }
      goto LABEL_20;
    }
    goto LABEL_57;
  }
LABEL_47:
  *(_DWORD *)(a1 + 116) |= 0x10u;
  uint64_t v20 = *(void *)(a1 + 32);
  if (!v20) {
    operator new();
  }
  uint64_t v21 = *(void *)(a2 + 32);
  if (!v21) {
    uint64_t v21 = *(void *)(qword_10248AD08 + 32);
  }
  sub_100E24568(v20, v21);
  int v9 = *(_DWORD *)(a2 + 116);
  if ((v9 & 0x20) != 0) {
    goto LABEL_52;
  }
LABEL_18:
  if ((v9 & 0x40) == 0) {
    goto LABEL_19;
  }
LABEL_57:
  int v24 = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 116) |= 0x40u;
  *(_DWORD *)(a1 + 48) = v24;
  int v9 = *(_DWORD *)(a2 + 116);
  if ((v9 & 0x80) != 0)
  {
LABEL_20:
    int v10 = *(_DWORD *)(a2 + 52);
    *(_DWORD *)(a1 + 116) |= 0x80u;
    *(_DWORD *)(a1 + 52) = v10;
    int v9 = *(_DWORD *)(a2 + 116);
  }
LABEL_21:
  if ((v9 & 0xFF00) == 0) {
    return;
  }
  if ((v9 & 0x100) != 0)
  {
    unsigned int v11 = *(_DWORD *)(a2 + 56);
    if (v11 >= 7) {
      sub_101A902FC();
    }
    *(_DWORD *)(a1 + 116) |= 0x100u;
    *(_DWORD *)(a1 + 56) = v11;
    int v9 = *(_DWORD *)(a2 + 116);
  }
  if ((v9 & 0x200) != 0)
  {
    unsigned int v12 = *(_DWORD *)(a2 + 60);
    if (v12 >= 7) {
      sub_101A902D0();
    }
    *(_DWORD *)(a1 + 116) |= 0x200u;
    *(_DWORD *)(a1 + 60) = v12;
    int v9 = *(_DWORD *)(a2 + 116);
  }
  if ((v9 & 0x400) != 0)
  {
    int v25 = *(_DWORD *)(a2 + 64);
    *(_DWORD *)(a1 + 116) |= 0x400u;
    *(_DWORD *)(a1 + 64) = v25;
    int v9 = *(_DWORD *)(a2 + 116);
    if ((v9 & 0x800) == 0)
    {
LABEL_30:
      if ((v9 & 0x1000) == 0) {
        goto LABEL_31;
      }
      goto LABEL_61;
    }
  }
  else if ((v9 & 0x800) == 0)
  {
    goto LABEL_30;
  }
  int v26 = *(_DWORD *)(a2 + 68);
  *(_DWORD *)(a1 + 116) |= 0x800u;
  *(_DWORD *)(a1 + 68) = v26;
  int v9 = *(_DWORD *)(a2 + 116);
  if ((v9 & 0x1000) == 0)
  {
LABEL_31:
    if ((v9 & 0x2000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_62;
  }
LABEL_61:
  int v27 = *(_DWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 116) |= 0x1000u;
  *(_DWORD *)(a1 + 72) = v27;
  int v9 = *(_DWORD *)(a2 + 116);
  if ((v9 & 0x2000) == 0)
  {
LABEL_32:
    if ((v9 & 0x4000) == 0) {
      return;
    }
    goto LABEL_33;
  }
LABEL_62:
  int v28 = *(const std::string **)(a2 + 80);
  *(_DWORD *)(a1 + 116) |= 0x2000u;
  unsigned int v29 = *(std::string **)(a1 + 80);
  if (v29 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v29, v28);
  if ((*(_DWORD *)(a2 + 116) & 0x4000) != 0)
  {
LABEL_33:
    int v13 = *(_DWORD *)(a2 + 76);
    *(_DWORD *)(a1 + 116) |= 0x4000u;
    *(_DWORD *)(a1 + 76) = v13;
  }
}

void sub_100E24F58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E24F70(uint64_t *a1)
{
  *a1 = (uint64_t)off_1022FACD8;
  unsigned int v2 = a1 + 11;
  sub_100E24FD4(a1);
  sub_10016B2E8(v2);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void *sub_100E24FD4(void *result)
{
  uint64_t v1 = result;
  uint64_t v2 = result[10];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  if ((void *)qword_10248AD08 != result)
  {
    uint64_t v4 = result[2];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = v1[3];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = v1[4];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t result = (void *)v1[5];
    if (result)
    {
      uint64_t v7 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v7();
    }
  }
  return result;
}

void sub_100E25110(uint64_t *a1)
{
  sub_100E24F70(a1);

  operator delete();
}

void sub_100E25148()
{
}

uint64_t sub_100E251BC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 116);
  if ((_BYTE)v2)
  {
    *(void *)(a1 + 8) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t v3 = *(void *)(a1 + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 32))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(_DWORD *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 32) = 0;
        int v2 = *(_DWORD *)(a1 + 116);
      }
    }
    if ((v2 & 8) != 0)
    {
      uint64_t v4 = *(void *)(a1 + 24);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 24))
        {
          *(void *)(v4 + 8) = 0;
          *(_DWORD *)(v4 + 16) = 0;
        }
        *(_DWORD *)(v4 + 24) = 0;
        int v2 = *(_DWORD *)(a1 + 116);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      uint64_t v5 = *(void *)(a1 + 32);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 24))
        {
          *(void *)(v5 + 8) = 0;
          *(_DWORD *)(v5 + 16) = 0;
        }
        *(_DWORD *)(v5 + 24) = 0;
        int v2 = *(_DWORD *)(a1 + 116);
      }
    }
    if ((v2 & 0x20) != 0)
    {
      uint64_t v6 = *(void *)(a1 + 40);
      if (v6)
      {
        if (*(unsigned char *)(v6 + 24))
        {
          *(void *)(v6 + 8) = 0;
          *(_DWORD *)(v6 + 16) = 0;
        }
        *(_DWORD *)(v6 + 24) = 0;
        int v2 = *(_DWORD *)(a1 + 116);
      }
    }
    *(void *)(a1 + 48) = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(void *)(a1 + 56) = 0;
    *(void *)(a1 + 64) = 0;
    *(_DWORD *)(a1 + 72) = 0;
    if ((v2 & 0x2000) != 0)
    {
      uint64_t v7 = *(void *)(a1 + 80);
      if ((_UNKNOWN *)v7 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v7 + 23) < 0)
        {
          **(unsigned char **)uint64_t v7 = 0;
          *(void *)(v7 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v7 = 0;
          *(unsigned char *)(v7 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(a1 + 76) = 0;
  }
  uint64_t result = sub_10026DEDC(a1 + 88);
  *(_DWORD *)(a1 + 116) = 0;
  return result;
}

uint64_t sub_100E252D8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)(a1 + 48);
  uint64_t v6 = (unsigned int *)(a1 + 52);
  uint64_t v7 = (unsigned int *)(a1 + 76);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 88);
  while (2)
  {
    int v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v9;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v9 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if (v11 != 5) {
          goto LABEL_51;
        }
        unsigned int v88 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v88) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 8) = v88;
        *(_DWORD *)(a1 + 116) |= 1u;
        unsigned int v12 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 != 21) {
          continue;
        }
        *((void *)this + 1) = v12 + 1;
        goto LABEL_15;
      case 2u:
        int v11 = TagFallback & 7;
        if (v11 != 5) {
          goto LABEL_51;
        }
LABEL_15:
        unsigned int v88 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v88) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 12) = v88;
        int v13 = *(_DWORD *)(a1 + 116) | 2;
        *(_DWORD *)(a1 + 116) = v13;
        int v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 != 26) {
          continue;
        }
        *((void *)this + 1) = v14 + 1;
LABEL_21:
        *(_DWORD *)(a1 + 116) = v13 | 4;
        uint64_t v15 = *(void *)(a1 + 16);
        if (!v15) {
          operator new();
        }
        unsigned int v88 = 0;
        uint64_t v16 = (char *)*((void *)this + 1);
        if ((unint64_t)v16 >= *((void *)this + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v88))return 0; {
        }
          }
        else
        {
          unsigned int v88 = *v16;
          *((void *)this + 1) = v16 + 1;
        }
        int v28 = *((_DWORD *)this + 14);
        int v29 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v28 + 1;
        if (v28 >= v29) {
          return 0;
        }
        int v30 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v88);
        if (!sub_100E241CC(v15, this, v31) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v30);
        int v32 = *((_DWORD *)this + 14);
        BOOL v33 = __OFSUB__(v32, 1);
        int v34 = v32 - 1;
        if (v34 < 0 == v33) {
          *((_DWORD *)this + 14) = v34;
        }
        int v35 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v35 >= *((void *)this + 2) || *v35 != 34) {
          continue;
        }
        *((void *)this + 1) = v35 + 1;
LABEL_63:
        *(_DWORD *)(a1 + 116) |= 8u;
        int v36 = *(_DWORD **)(a1 + 24);
        if (!v36) {
          operator new();
        }
        unsigned int v88 = 0;
        uint64_t v37 = (char *)*((void *)this + 1);
        if ((unint64_t)v37 >= *((void *)this + 2) || *v37 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v88))return 0; {
        }
          }
        else
        {
          unsigned int v88 = *v37;
          *((void *)this + 1) = v37 + 1;
        }
        int v38 = *((_DWORD *)this + 14);
        int v39 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v38 + 1;
        if (v38 >= v39) {
          return 0;
        }
        int v40 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v88);
        if (!sub_100E24730(v36, this, v41) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v40);
        int v42 = *((_DWORD *)this + 14);
        BOOL v33 = __OFSUB__(v42, 1);
        int v43 = v42 - 1;
        if (v43 < 0 == v33) {
          *((_DWORD *)this + 14) = v43;
        }
        unsigned int v44 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v44 >= *((void *)this + 2) || *v44 != 42) {
          continue;
        }
        *((void *)this + 1) = v44 + 1;
LABEL_77:
        *(_DWORD *)(a1 + 116) |= 0x10u;
        int v45 = *(_DWORD **)(a1 + 32);
        if (!v45) {
          operator new();
        }
        unsigned int v88 = 0;
        int v46 = (char *)*((void *)this + 1);
        if ((unint64_t)v46 >= *((void *)this + 2) || *v46 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v88))return 0; {
        }
          }
        else
        {
          unsigned int v88 = *v46;
          *((void *)this + 1) = v46 + 1;
        }
        int v47 = *((_DWORD *)this + 14);
        int v48 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v47 + 1;
        if (v47 >= v48) {
          return 0;
        }
        int v49 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v88);
        if (!sub_100E24730(v45, this, v50) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v49);
        int v51 = *((_DWORD *)this + 14);
        BOOL v33 = __OFSUB__(v51, 1);
        int v52 = v51 - 1;
        if (v52 < 0 == v33) {
          *((_DWORD *)this + 14) = v52;
        }
        unsigned int v53 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v53 >= *((void *)this + 2) || *v53 != 50) {
          continue;
        }
        *((void *)this + 1) = v53 + 1;
LABEL_91:
        *(_DWORD *)(a1 + 116) |= 0x20u;
        int v54 = *(_DWORD **)(a1 + 40);
        if (!v54) {
          operator new();
        }
        unsigned int v88 = 0;
        int v55 = (char *)*((void *)this + 1);
        if ((unint64_t)v55 >= *((void *)this + 2) || *v55 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v88))return 0; {
        }
          }
        else
        {
          unsigned int v88 = *v55;
          *((void *)this + 1) = v55 + 1;
        }
        int v56 = *((_DWORD *)this + 14);
        int v57 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v56 + 1;
        if (v56 >= v57) {
          return 0;
        }
        int v58 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v88);
        if (!sub_100E24730(v54, this, v59) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v58);
        int v60 = *((_DWORD *)this + 14);
        BOOL v33 = __OFSUB__(v60, 1);
        int v61 = v60 - 1;
        if (v61 < 0 == v33) {
          *((_DWORD *)this + 14) = v61;
        }
        int v62 = (unsigned char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        if ((unint64_t)v62 >= v17 || *v62 != 56) {
          continue;
        }
        uint64_t v18 = v62 + 1;
        *((void *)this + 1) = v18;
LABEL_105:
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          unsigned int v63 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v18;
          unsigned int v63 = v18 + 1;
          *((void *)this + 1) = v63;
        }
        *(_DWORD *)(a1 + 116) |= 0x40u;
        if ((unint64_t)v63 >= v17 || *v63 != 64) {
          continue;
        }
        uint64_t v19 = v63 + 1;
        *((void *)this + 1) = v19;
LABEL_113:
        if ((unint64_t)v19 >= v17 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v65 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v6 = *v19;
          int v65 = v19 + 1;
          *((void *)this + 1) = v65;
        }
        *(_DWORD *)(a1 + 116) |= 0x80u;
        if ((unint64_t)v65 >= v17 || *v65 != 72) {
          continue;
        }
        uint64_t v20 = v65 + 1;
        *((void *)this + 1) = v20;
LABEL_121:
        unsigned int v88 = 0;
        if ((unint64_t)v20 >= v17 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v88);
          if (!result) {
            return result;
          }
          unsigned int v66 = v88;
        }
        else
        {
          unsigned int v66 = *v20;
          *((void *)this + 1) = v20 + 1;
        }
        if (v66 <= 6)
        {
          *(_DWORD *)(a1 + 116) |= 0x100u;
          *(_DWORD *)(a1 + 56) = v66;
        }
        uint64_t v67 = (unsigned char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        if ((unint64_t)v67 >= v21 || *v67 != 80) {
          continue;
        }
        uint64_t v22 = v67 + 1;
        *((void *)this + 1) = v22;
LABEL_131:
        unsigned int v88 = 0;
        if ((unint64_t)v22 >= v21 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v88);
          if (!result) {
            return result;
          }
          unsigned int v68 = v88;
        }
        else
        {
          unsigned int v68 = *v22;
          *((void *)this + 1) = v22 + 1;
        }
        if (v68 <= 6)
        {
          *(_DWORD *)(a1 + 116) |= 0x200u;
          *(_DWORD *)(a1 + 60) = v68;
        }
        int v69 = (unsigned char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        if ((unint64_t)v69 >= v23 || *v69 != 88) {
          continue;
        }
        int v24 = v69 + 1;
        *((void *)this + 1) = v24;
LABEL_141:
        unsigned int v88 = 0;
        if ((unint64_t)v24 >= v23 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v88);
          if (!result) {
            return result;
          }
          unsigned int v70 = v88;
          int v71 = (unsigned char *)*((void *)this + 1);
          unint64_t v23 = *((void *)this + 2);
        }
        else
        {
          unsigned int v70 = *v24;
          int v71 = v24 + 1;
          *((void *)this + 1) = v71;
        }
        *(_DWORD *)(a1 + 64) = v70;
        *(_DWORD *)(a1 + 116) |= 0x400u;
        if ((unint64_t)v71 >= v23 || *v71 != 101) {
          continue;
        }
        *((void *)this + 1) = v71 + 1;
LABEL_149:
        unsigned int v88 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v88) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 68) = v88;
        *(_DWORD *)(a1 + 116) |= 0x800u;
        unsigned int v72 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v72 >= *((void *)this + 2) || *v72 != 109) {
          continue;
        }
        *((void *)this + 1) = v72 + 1;
LABEL_153:
        unsigned int v88 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v88))
        {
          *(_DWORD *)(a1 + 72) = v88;
          int v25 = *(_DWORD *)(a1 + 116) | 0x1000;
          *(_DWORD *)(a1 + 116) = v25;
          int v73 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v73 < *((void *)this + 2) && *v73 == 114)
          {
            *((void *)this + 1) = v73 + 1;
LABEL_157:
            *(_DWORD *)(a1 + 116) = v25 | 0x2000;
            if (*(_UNKNOWN **)(a1 + 80) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
              operator new();
            }
            uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
            if (!result) {
              return result;
            }
            int v74 = (unsigned char *)*((void *)this + 1);
            unint64_t v26 = *((void *)this + 2);
            if ((unint64_t)v74 < v26 && *v74 == 120)
            {
              int v27 = v74 + 1;
              *((void *)this + 1) = v27;
LABEL_163:
              if ((unint64_t)v27 >= v26 || (char)*v27 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
                if (!result) {
                  return result;
                }
                unint64_t v75 = (unsigned __int8 *)*((void *)this + 1);
                unint64_t v26 = *((void *)this + 2);
              }
              else
              {
                unsigned int *v7 = *v27;
                unint64_t v75 = v27 + 1;
                *((void *)this + 1) = v75;
              }
              *(_DWORD *)(a1 + 116) |= 0x4000u;
              if ((int)v26 - (int)v75 >= 2 && *v75 == 130 && v75[1] == 1)
              {
                do
                {
                  *((void *)this + 1) = v75 + 2;
LABEL_172:
                  int v76 = *(_DWORD *)(a1 + 100);
                  uint64_t v77 = *(int *)(a1 + 96);
                  if ((int)v77 >= v76)
                  {
                    if (v76 == *(_DWORD *)(a1 + 104))
                    {
                      wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v8, v76 + 1);
                      int v76 = *(_DWORD *)(a1 + 100);
                    }
                    *(_DWORD *)(a1 + 100) = v76 + 1;
                    operator new();
                  }
                  uint64_t v78 = *(void *)(a1 + 88);
                  *(_DWORD *)(a1 + 96) = v77 + 1;
                  uint64_t v79 = *(void *)(v78 + 8 * v77);
                  unsigned int v88 = 0;
                  int v80 = (char *)*((void *)this + 1);
                  if ((unint64_t)v80 >= *((void *)this + 2) || *v80 < 0)
                  {
                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v88))return 0; {
                  }
                    }
                  else
                  {
                    unsigned int v88 = *v80;
                    *((void *)this + 1) = v80 + 1;
                  }
                  int v81 = *((_DWORD *)this + 14);
                  int v82 = *((_DWORD *)this + 15);
                  *((_DWORD *)this + 14) = v81 + 1;
                  if (v81 >= v82) {
                    return 0;
                  }
                  int v83 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v88);
                  if (!sub_100E23A74(v79, this, v84) || !*((unsigned char *)this + 36)) {
                    return 0;
                  }
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v83);
                  int v85 = *((_DWORD *)this + 14);
                  BOOL v33 = __OFSUB__(v85, 1);
                  int v86 = v85 - 1;
                  if (v86 < 0 == v33) {
                    *((_DWORD *)this + 14) = v86;
                  }
                  unint64_t v75 = (unsigned __int8 *)*((void *)this + 1);
                  int v87 = (unsigned __int8 *)*((void *)this + 2);
                }
                while ((int)v87 - (int)v75 > 1 && *v75 == 130 && v75[1] == 1);
                if (v75 == v87 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                {
                  *((_DWORD *)this + 8) = 0;
                  uint64_t result = 1;
                  *((unsigned char *)this + 36) = 1;
                  return result;
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_51;
        }
        int v13 = *(_DWORD *)(a1 + 116);
        goto LABEL_21;
      case 4u:
        int v11 = TagFallback & 7;
        if (v11 == 2) {
          goto LABEL_63;
        }
        goto LABEL_51;
      case 5u:
        int v11 = TagFallback & 7;
        if (v11 == 2) {
          goto LABEL_77;
        }
        goto LABEL_51;
      case 6u:
        int v11 = TagFallback & 7;
        if (v11 == 2) {
          goto LABEL_91;
        }
        goto LABEL_51;
      case 7u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_51;
        }
        uint64_t v18 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_105;
      case 8u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_51;
        }
        uint64_t v19 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_113;
      case 9u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_51;
        }
        uint64_t v20 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_121;
      case 0xAu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_51;
        }
        uint64_t v22 = (char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        goto LABEL_131;
      case 0xBu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_51;
        }
        int v24 = (char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        goto LABEL_141;
      case 0xCu:
        int v11 = TagFallback & 7;
        if (v11 == 5) {
          goto LABEL_149;
        }
        goto LABEL_51;
      case 0xDu:
        int v11 = TagFallback & 7;
        if (v11 == 5) {
          goto LABEL_153;
        }
        goto LABEL_51;
      case 0xEu:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_51;
        }
        int v25 = *(_DWORD *)(a1 + 116);
        goto LABEL_157;
      case 0xFu:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_51;
        }
        int v27 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v26 = *((void *)this + 2);
        goto LABEL_163;
      case 0x10u:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_51;
        }
        goto LABEL_172;
      default:
        int v11 = TagFallback & 7;
LABEL_51:
        if (v11 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100E25ECC(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 116);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(result + 8), a3);
    int v6 = *(_DWORD *)(v5 + 116);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_23;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v5 + 12), a3);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_26;
  }
LABEL_23:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_10248AD08 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_29;
  }
LABEL_26:
  uint64_t v9 = *(void *)(v5 + 24);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_10248AD08 + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_32;
  }
LABEL_29:
  uint64_t v10 = *(void *)(v5 + 32);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_10248AD08 + 32);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_35;
  }
LABEL_32:
  uint64_t v11 = *(void *)(v5 + 40);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_10248AD08 + 40);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v11, a2, a4);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 48), a2, a4);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(v5 + 52), a2, a4);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_DWORD *)(v5 + 56), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_DWORD *)(v5 + 60), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(_DWORD *)(v5 + 64), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (int)a2, *(float *)(v5 + 68), a3);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, (int)a2, *(float *)(v5 + 72), a3);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_42:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  if ((*(_DWORD *)(v5 + 116) & 0x4000) != 0) {
LABEL_16:
  }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(_DWORD *)(v5 + 76), a2, a4);
LABEL_17:
  if (*(int *)(v5 + 96) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(void *)(*(void *)(v5 + 88) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 96));
  }
  return result;
}

uint64_t sub_100E26110(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 116);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    goto LABEL_57;
  }
  if ((v3 & 2) != 0) {
    int v4 = ((v3 << 31 >> 31) & 5) + 5;
  }
  else {
    int v4 = (v3 << 31 >> 31) & 5;
  }
  if ((v3 & 4) != 0)
  {
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_10248AD08 + 16);
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E24448(v5, a2);
    int v7 = (int)v6;
    if (v6 >= 0x80) {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
    }
    else {
      int v8 = 1;
    }
    v4 += v7 + v8 + 1;
    int v3 = *(_DWORD *)(a1 + 116);
    if ((v3 & 8) == 0)
    {
LABEL_7:
      if ((v3 & 0x10) == 0) {
        goto LABEL_8;
      }
      goto LABEL_29;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_7;
  }
  uint64_t v9 = *(void *)(a1 + 24);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_10248AD08 + 24);
  }
  int v10 = *(unsigned __int8 *)(v9 + 24);
  int v11 = (v10 << 31 >> 31) & 5;
  if ((v10 & 2) != 0) {
    v11 += 5;
  }
  if ((v10 & 4) != 0) {
    v11 += 5;
  }
  if (*(unsigned char *)(v9 + 24)) {
    int v12 = v11;
  }
  else {
    int v12 = 0;
  }
  *(_DWORD *)(v9 + 20) = v12;
  v4 += v12 + 2;
  int v3 = *(_DWORD *)(a1 + 116);
  if ((v3 & 0x10) == 0)
  {
LABEL_8:
    if ((v3 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_39;
  }
LABEL_29:
  uint64_t v13 = *(void *)(a1 + 32);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_10248AD08 + 32);
  }
  int v14 = *(unsigned __int8 *)(v13 + 24);
  int v15 = (v14 << 31 >> 31) & 5;
  if ((v14 & 2) != 0) {
    v15 += 5;
  }
  if ((v14 & 4) != 0) {
    v15 += 5;
  }
  if (*(unsigned char *)(v13 + 24)) {
    int v16 = v15;
  }
  else {
    int v16 = 0;
  }
  *(_DWORD *)(v13 + 20) = v16;
  v4 += v16 + 2;
  int v3 = *(_DWORD *)(a1 + 116);
  if ((v3 & 0x20) == 0)
  {
LABEL_9:
    if ((v3 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_49;
  }
LABEL_39:
  uint64_t v17 = *(void *)(a1 + 40);
  if (!v17) {
    uint64_t v17 = *(void *)(qword_10248AD08 + 40);
  }
  int v18 = *(unsigned __int8 *)(v17 + 24);
  int v19 = (v18 << 31 >> 31) & 5;
  if ((v18 & 2) != 0) {
    v19 += 5;
  }
  if ((v18 & 4) != 0) {
    v19 += 5;
  }
  if (*(unsigned char *)(v17 + 24)) {
    int v20 = v19;
  }
  else {
    int v20 = 0;
  }
  *(_DWORD *)(v17 + 20) = v20;
  v4 += v20 + 2;
  int v3 = *(_DWORD *)(a1 + 116);
  if ((v3 & 0x40) == 0)
  {
LABEL_10:
    if ((v3 & 0x80) == 0) {
      goto LABEL_57;
    }
    goto LABEL_53;
  }
LABEL_49:
  unint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
  if (v21 >= 0x80)
  {
    int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2);
    int v3 = *(_DWORD *)(a1 + 116);
  }
  else
  {
    int v22 = 1;
  }
  v4 += v22 + 1;
  if ((v3 & 0x80) != 0)
  {
LABEL_53:
    unint64_t v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
    if (v23 >= 0x80)
    {
      int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 116);
    }
    else
    {
      int v24 = 2;
    }
    v4 += v24;
  }
LABEL_57:
  if ((v3 & 0xFF00) == 0) {
    goto LABEL_100;
  }
  if ((v3 & 0x100) == 0)
  {
    if ((v3 & 0x200) == 0) {
      goto LABEL_60;
    }
LABEL_68:
    int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
    if ((v27 & 0x80000000) != 0)
    {
      int v28 = 11;
    }
    else if (v27 >= 0x80)
    {
      int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 116);
    }
    else
    {
      int v28 = 2;
    }
    v4 += v28;
    if ((v3 & 0x400) == 0) {
      goto LABEL_80;
    }
    goto LABEL_74;
  }
  int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
  if ((v25 & 0x80000000) != 0)
  {
    int v26 = 11;
  }
  else if (v25 >= 0x80)
  {
    int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 116);
  }
  else
  {
    int v26 = 2;
  }
  v4 += v26;
  if ((v3 & 0x200) != 0) {
    goto LABEL_68;
  }
LABEL_60:
  if ((v3 & 0x400) != 0)
  {
LABEL_74:
    int v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
    if ((v29 & 0x80000000) != 0)
    {
      int v30 = 11;
    }
    else if (v29 >= 0x80)
    {
      int v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 116);
    }
    else
    {
      int v30 = 2;
    }
    v4 += v30;
  }
LABEL_80:
  int v31 = v4 + 5;
  if ((v3 & 0x800) == 0) {
    int v31 = v4;
  }
  if ((v3 & 0x1000) != 0) {
    int v4 = v31 + 5;
  }
  else {
    int v4 = v31;
  }
  if ((v3 & 0x2000) != 0)
  {
    uint64_t v32 = *(void *)(a1 + 80);
    int v33 = *(unsigned __int8 *)(v32 + 23);
    char v34 = v33;
    uint64_t v35 = *(void *)(v32 + 8);
    if ((v33 & 0x80u) == 0) {
      unint64_t v36 = *(unsigned __int8 *)(v32 + 23);
    }
    else {
      unint64_t v36 = v35;
    }
    if (v36 >= 0x80)
    {
      int v37 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v36, a2);
      int v33 = *(unsigned __int8 *)(v32 + 23);
      uint64_t v35 = *(void *)(v32 + 8);
      int v3 = *(_DWORD *)(a1 + 116);
      char v34 = *(unsigned char *)(v32 + 23);
    }
    else
    {
      int v37 = 1;
    }
    if (v34 < 0) {
      int v33 = v35;
    }
    v4 += v37 + v33 + 1;
  }
  if ((v3 & 0x4000) != 0)
  {
    int v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 76);
    if (v38 >= 0x80) {
      int v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v38, a2) + 1;
    }
    else {
      int v39 = 2;
    }
    v4 += v39;
  }
LABEL_100:
  int v40 = *(_DWORD *)(a1 + 96);
  uint64_t v41 = (v4 + 2 * v40);
  if (v40 >= 1)
  {
    uint64_t v42 = 0;
    do
    {
      int v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E23E80(*(void *)(*(void *)(a1 + 88) + 8 * v42));
      int v45 = (int)v43;
      if (v43 >= 0x80) {
        int v46 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v43, v44);
      }
      else {
        int v46 = 1;
      }
      uint64_t v41 = (v45 + v41 + v46);
      ++v42;
    }
    while (v42 < *(int *)(a1 + 96));
  }
  *(_DWORD *)(a1 + 112) = v41;
  return v41;
}

void sub_100E264BC(uint64_t a1, void *lpsrc)
{
  sub_100E24A5C(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E26544()
{
  return 1;
}

void *sub_100E2654C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.MeasurementExtension");
}

void sub_100E2655C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v27);
  }
  int v4 = *(_DWORD *)(a2 + 112);
  if (!(_BYTE)v4) {
    goto LABEL_41;
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 112) |= 1u;
    uint64_t v5 = *(void *)(a1 + 8);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10248AD10 + 8);
    }
    sub_100E1BD54(v5, v6);
    int v4 = *(_DWORD *)(a2 + 112);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_23;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  *(_DWORD *)(a1 + 112) |= 2u;
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7) {
    operator new();
  }
  uint64_t v8 = *(void *)(a2 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_10248AD10 + 16);
  }
  sub_100E202A4(v7, v8);
  int v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t v9 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 112) |= 4u;
  *(void *)(a1 + 24) = v9;
  int v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t v10 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 112) |= 8u;
  *(void *)(a1 + 32) = v10;
  int v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_26:
    *(_DWORD *)(a1 + 112) |= 0x20u;
    uint64_t v12 = *(void *)(a1 + 48);
    if (!v12) {
      operator new();
    }
    uint64_t v13 = *(void *)(a2 + 48);
    if (!v13) {
      uint64_t v13 = *(void *)(qword_10248AD10 + 48);
    }
    sub_100E21F60(v12, v13);
    int v4 = *(_DWORD *)(a2 + 112);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_41;
      }
      goto LABEL_36;
    }
    goto LABEL_31;
  }
LABEL_25:
  uint64_t v11 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 112) |= 0x10u;
  *(void *)(a1 + 40) = v11;
  int v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 0x20) != 0) {
    goto LABEL_26;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_31:
  *(_DWORD *)(a1 + 112) |= 0x40u;
  uint64_t v14 = *(void *)(a1 + 56);
  if (!v14) {
    operator new();
  }
  uint64_t v15 = *(void *)(a2 + 56);
  if (!v15) {
    uint64_t v15 = *(void *)(qword_10248AD10 + 56);
  }
  sub_100E22480(v14, v15);
  int v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 0x80) != 0)
  {
LABEL_36:
    *(_DWORD *)(a1 + 112) |= 0x80u;
    uint64_t v16 = *(void *)(a1 + 64);
    if (!v16) {
      operator new();
    }
    uint64_t v17 = *(void *)(a2 + 64);
    if (!v17) {
      uint64_t v17 = *(void *)(qword_10248AD10 + 64);
    }
    sub_100E22FB0(v16, v17);
    int v4 = *(_DWORD *)(a2 + 112);
  }
LABEL_41:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 112) |= 0x100u;
    uint64_t v18 = *(void *)(a1 + 72);
    if (!v18) {
      operator new();
    }
    uint64_t v19 = *(void *)(a2 + 72);
    if (!v19) {
      uint64_t v19 = *(void *)(qword_10248AD10 + 72);
    }
    sub_100E24A5C(v18, v19);
    int v4 = *(_DWORD *)(a2 + 112);
    if ((v4 & 0x200) == 0)
    {
LABEL_44:
      if ((v4 & 0x400) == 0) {
        goto LABEL_45;
      }
      goto LABEL_55;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_44;
  }
  int v20 = *(_DWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 112) |= 0x200u;
  *(_DWORD *)(a1 + 80) = v20;
  int v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 0x400) == 0)
  {
LABEL_45:
    if ((v4 & 0x800) == 0) {
      goto LABEL_46;
    }
    goto LABEL_57;
  }
LABEL_55:
  unsigned int v21 = *(_DWORD *)(a2 + 84);
  if (v21 >= 5) {
    sub_101A90328();
  }
  *(_DWORD *)(a1 + 112) |= 0x400u;
  *(_DWORD *)(a1 + 84) = v21;
  int v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 0x800) == 0)
  {
LABEL_46:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_47;
    }
LABEL_62:
    char v24 = *(unsigned char *)(a2 + 104);
    *(_DWORD *)(a1 + 112) |= 0x1000u;
    *(unsigned char *)(a1 + 104) = v24;
    if ((*(_DWORD *)(a2 + 112) & 0x2000) == 0) {
      return;
    }
    goto LABEL_63;
  }
LABEL_57:
  *(_DWORD *)(a1 + 112) |= 0x800u;
  uint64_t v22 = *(void *)(a1 + 88);
  if (!v22) {
    operator new();
  }
  uint64_t v23 = *(void *)(a2 + 88);
  if (!v23) {
    uint64_t v23 = *(void *)(qword_10248AD10 + 88);
  }
  sub_100E22480(v22, v23);
  int v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 0x1000) != 0) {
    goto LABEL_62;
  }
LABEL_47:
  if ((v4 & 0x2000) == 0) {
    return;
  }
LABEL_63:
  *(_DWORD *)(a1 + 112) |= 0x2000u;
  uint64_t v25 = *(void *)(a1 + 96);
  if (!v25) {
    operator new();
  }
  uint64_t v26 = *(void *)(a2 + 96);
  if (!v26) {
    uint64_t v26 = *(void *)(qword_10248AD10 + 96);
  }
  sub_100E229A0(v25, v26);
}

void sub_100E26ABC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_100E26AD4(void *result)
{
  if ((void *)qword_10248AD10 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[6];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = v1[7];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = v1[8];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = v1[9];
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = v1[11];
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t result = (void *)v1[12];
    if (result)
    {
      uint64_t v9 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v9();
    }
  }
  return result;
}

void sub_100E26C7C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FAD50;
  sub_100E26AD4(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E26CD0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FAD50;
  sub_100E26AD4(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E26D38()
{
}

uint64_t sub_100E26DA4(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 112);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t result = *(void *)(result + 8);
      if (result)
      {
        uint64_t result = sub_100E1BF90(result);
        int v2 = *(_DWORD *)(v1 + 112);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t result = *(void *)(v1 + 16);
      if (result)
      {
        uint64_t result = sub_100E20B28(result);
        int v2 = *(_DWORD *)(v1 + 112);
      }
    }
    *(void *)(v1 + 24) = 0;
    *(void *)(v1 + 32) = 0;
    *(void *)(v1 + 40) = 0;
    if ((v2 & 0x20) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 48);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 32))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(unsigned char *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 32) = 0;
        int v2 = *(_DWORD *)(v1 + 112);
      }
    }
    if ((v2 & 0x40) != 0)
    {
      uint64_t v4 = *(void *)(v1 + 56);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 32))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
          *(unsigned char *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 32) = 0;
        int v2 = *(_DWORD *)(v1 + 112);
      }
    }
    if ((v2 & 0x80) != 0)
    {
      uint64_t v5 = *(void *)(v1 + 64);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 48))
        {
          *(unsigned char *)(v5 + 40) = 0;
          *(_OWORD *)(v5 + 24) = 0u;
          *(_OWORD *)(v5 + 8) = 0u;
        }
        *(_DWORD *)(v5 + 48) = 0;
        int v2 = *(_DWORD *)(v1 + 112);
      }
    }
  }
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      uint64_t result = *(void *)(v1 + 72);
      if (result)
      {
        uint64_t result = sub_100E251BC(result);
        int v2 = *(_DWORD *)(v1 + 112);
      }
    }
    *(void *)(v1 + 80) = 0;
    if ((v2 & 0x800) != 0)
    {
      uint64_t v6 = *(void *)(v1 + 88);
      if (v6)
      {
        if (*(unsigned char *)(v6 + 32))
        {
          *(void *)(v6 + 8) = 0;
          *(void *)(v6 + 16) = 0;
          *(unsigned char *)(v6 + 24) = 0;
        }
        *(_DWORD *)(v6 + 32) = 0;
        int v2 = *(_DWORD *)(v1 + 112);
      }
    }
    *(unsigned char *)(v1 + 104) = 0;
    if ((v2 & 0x2000) != 0)
    {
      uint64_t v7 = *(void *)(v1 + 96);
      if (v7)
      {
        if (*(unsigned char *)(v7 + 32))
        {
          *(void *)(v7 + 8) = 0;
          *(void *)(v7 + 16) = 0;
          *(_WORD *)(v7 + 24) = 0;
        }
        *(_DWORD *)(v7 + 32) = 0;
      }
    }
  }
  *(_DWORD *)(v1 + 112) = 0;
  return result;
}

uint64_t sub_100E26EE0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)(a1 + 24);
  uint64_t v6 = (unint64_t *)(a1 + 32);
  uint64_t v7 = (unint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 < *((void *)this + 2) && (*v8 & 0x80000000) == 0)
    {
      TagFallbacuint64_t k = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 112) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        if (!v11) {
          operator new();
        }
        unsigned int v102 = 0;
        uint64_t v12 = (char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102))return 0; {
        }
          }
        else
        {
          unsigned int v102 = *v12;
          *((void *)this + 1) = v12 + 1;
        }
        int v23 = *((_DWORD *)this + 14);
        int v24 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v23 + 1;
        if (v23 >= v24) {
          return 0;
        }
        int v25 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        if (!sub_100E1BFD0(v11, this, v26) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v25);
        int v27 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v27, 1);
        int v29 = v27 - 1;
        if (v29 < 0 == v28) {
          *((_DWORD *)this + 14) = v29;
        }
        int v30 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v30 >= *((void *)this + 2) || *v30 != 18) {
          continue;
        }
        *((void *)this + 1) = v30 + 1;
        goto LABEL_53;
      case 2u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_41;
        }
LABEL_53:
        *(_DWORD *)(a1 + 112) |= 2u;
        uint64_t v31 = *(void *)(a1 + 16);
        if (!v31) {
          operator new();
        }
        unsigned int v102 = 0;
        uint64_t v32 = (char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102))return 0; {
        }
          }
        else
        {
          unsigned int v102 = *v32;
          *((void *)this + 1) = v32 + 1;
        }
        int v33 = *((_DWORD *)this + 14);
        int v34 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v33 + 1;
        if (v33 >= v34) {
          return 0;
        }
        int v35 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        if (!sub_100E20CA0(v31, this, v36) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v35);
        int v37 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v37, 1);
        int v38 = v37 - 1;
        if (v38 < 0 == v28) {
          *((_DWORD *)this + 14) = v38;
        }
        int v39 = (unsigned char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((unint64_t)v39 >= v13 || *v39 != 24) {
          continue;
        }
        uint64_t v14 = v39 + 1;
        *((void *)this + 1) = v14;
LABEL_67:
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v40 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          unint64_t *v5 = *v14;
          int v40 = v14 + 1;
          *((void *)this + 1) = v40;
        }
        *(_DWORD *)(a1 + 112) |= 4u;
        if ((unint64_t)v40 >= v13 || *v40 != 32) {
          continue;
        }
        uint64_t v15 = v40 + 1;
        *((void *)this + 1) = v15;
LABEL_75:
        if ((unint64_t)v15 >= v13 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!result) {
            return result;
          }
          uint64_t v42 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v6 = *v15;
          uint64_t v42 = v15 + 1;
          *((void *)this + 1) = v42;
        }
        *(_DWORD *)(a1 + 112) |= 8u;
        if ((unint64_t)v42 >= v13 || *v42 != 40) {
          continue;
        }
        uint64_t v16 = v42 + 1;
        *((void *)this + 1) = v16;
LABEL_83:
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v43 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          unint64_t *v7 = *v16;
          int v43 = v16 + 1;
          *((void *)this + 1) = v43;
        }
        int v17 = *(_DWORD *)(a1 + 112) | 0x10;
        *(_DWORD *)(a1 + 112) = v17;
        if ((unint64_t)v43 >= v13 || *v43 != 50) {
          continue;
        }
        *((void *)this + 1) = v43 + 1;
LABEL_91:
        *(_DWORD *)(a1 + 112) = v17 | 0x20;
        uint64_t v44 = *(void *)(a1 + 48);
        if (!v44) {
          operator new();
        }
        unsigned int v102 = 0;
        int v45 = (char *)*((void *)this + 1);
        if ((unint64_t)v45 >= *((void *)this + 2) || *v45 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102))return 0; {
        }
          }
        else
        {
          unsigned int v102 = *v45;
          *((void *)this + 1) = v45 + 1;
        }
        int v46 = *((_DWORD *)this + 14);
        int v47 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v46 + 1;
        if (v46 >= v47) {
          return 0;
        }
        int v48 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        if (!sub_100E2212C(v44, this, v49) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v48);
        int v50 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v50, 1);
        int v51 = v50 - 1;
        if (v51 < 0 == v28) {
          *((_DWORD *)this + 14) = v51;
        }
        int v52 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v52 >= *((void *)this + 2) || *v52 != 58) {
          continue;
        }
        *((void *)this + 1) = v52 + 1;
LABEL_105:
        *(_DWORD *)(a1 + 112) |= 0x40u;
        uint64_t v53 = *(void *)(a1 + 56);
        if (!v53) {
          operator new();
        }
        unsigned int v102 = 0;
        int v54 = (char *)*((void *)this + 1);
        if ((unint64_t)v54 >= *((void *)this + 2) || *v54 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102))return 0; {
        }
          }
        else
        {
          unsigned int v102 = *v54;
          *((void *)this + 1) = v54 + 1;
        }
        int v55 = *((_DWORD *)this + 14);
        int v56 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v55 + 1;
        if (v55 >= v56) {
          return 0;
        }
        int v57 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        if (!sub_100E2264C(v53, this, v58) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v57);
        int v59 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v59, 1);
        int v60 = v59 - 1;
        if (v60 < 0 == v28) {
          *((_DWORD *)this + 14) = v60;
        }
        int v61 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v61 >= *((void *)this + 2) || *v61 != 66) {
          continue;
        }
        *((void *)this + 1) = v61 + 1;
LABEL_119:
        *(_DWORD *)(a1 + 112) |= 0x80u;
        uint64_t v62 = *(void *)(a1 + 64);
        if (!v62) {
          operator new();
        }
        unsigned int v102 = 0;
        unsigned int v63 = (char *)*((void *)this + 1);
        if ((unint64_t)v63 >= *((void *)this + 2) || *v63 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102))return 0; {
        }
          }
        else
        {
          unsigned int v102 = *v63;
          *((void *)this + 1) = v63 + 1;
        }
        int v64 = *((_DWORD *)this + 14);
        int v65 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v64 + 1;
        if (v64 >= v65) {
          return 0;
        }
        int v66 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        if (!sub_100E231CC(v62, this, v67) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v66);
        int v68 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v68, 1);
        int v69 = v68 - 1;
        if (v69 < 0 == v28) {
          *((_DWORD *)this + 14) = v69;
        }
        unsigned int v70 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v70 >= *((void *)this + 2) || *v70 != 74) {
          continue;
        }
        *((void *)this + 1) = v70 + 1;
LABEL_133:
        *(_DWORD *)(a1 + 112) |= 0x100u;
        uint64_t v71 = *(void *)(a1 + 72);
        if (!v71) {
          operator new();
        }
        unsigned int v102 = 0;
        unsigned int v72 = (char *)*((void *)this + 1);
        if ((unint64_t)v72 >= *((void *)this + 2) || *v72 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102))return 0; {
        }
          }
        else
        {
          unsigned int v102 = *v72;
          *((void *)this + 1) = v72 + 1;
        }
        int v73 = *((_DWORD *)this + 14);
        int v74 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v73 + 1;
        if (v73 >= v74) {
          return 0;
        }
        int v75 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        if (!sub_100E252D8(v71, this, v76) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v75);
        int v77 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v77, 1);
        int v78 = v77 - 1;
        if (v78 < 0 == v28) {
          *((_DWORD *)this + 14) = v78;
        }
        uint64_t v79 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v79 >= *((void *)this + 2) || *v79 != 85) {
          continue;
        }
        *((void *)this + 1) = v79 + 1;
LABEL_147:
        unsigned int v102 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v102) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 80) = v102;
        *(_DWORD *)(a1 + 112) |= 0x200u;
        int v80 = (unsigned char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        if ((unint64_t)v80 >= v18 || *v80 != 88) {
          continue;
        }
        uint64_t v19 = v80 + 1;
        *((void *)this + 1) = v19;
LABEL_151:
        unsigned int v102 = 0;
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102);
          if (!result) {
            return result;
          }
          unsigned int v81 = v102;
        }
        else
        {
          unsigned int v81 = *v19;
          *((void *)this + 1) = v19 + 1;
        }
        if (v81 <= 4)
        {
          *(_DWORD *)(a1 + 112) |= 0x400u;
          *(_DWORD *)(a1 + 84) = v81;
        }
        int v82 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v82 >= *((void *)this + 2) || *v82 != 98) {
          continue;
        }
        *((void *)this + 1) = v82 + 1;
LABEL_161:
        *(_DWORD *)(a1 + 112) |= 0x800u;
        uint64_t v83 = *(void *)(a1 + 88);
        if (!v83) {
          operator new();
        }
        unsigned int v102 = 0;
        unsigned int v84 = (char *)*((void *)this + 1);
        if ((unint64_t)v84 >= *((void *)this + 2) || *v84 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102))return 0; {
        }
          }
        else
        {
          unsigned int v102 = *v84;
          *((void *)this + 1) = v84 + 1;
        }
        int v85 = *((_DWORD *)this + 14);
        int v86 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v85 + 1;
        if (v85 >= v86) {
          return 0;
        }
        int v87 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        if (!sub_100E2264C(v83, this, v88) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v87);
        int v89 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v89, 1);
        int v90 = v89 - 1;
        if (v90 < 0 == v28) {
          *((_DWORD *)this + 14) = v90;
        }
        int v91 = (unsigned char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        if ((unint64_t)v91 >= v20 || *v91 != 104) {
          continue;
        }
        unsigned int v21 = v91 + 1;
        *((void *)this + 1) = v21;
LABEL_175:
        unsigned int v102 = 0;
        if ((unint64_t)v21 >= v20 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102);
          if (!result) {
            return result;
          }
          unsigned int v92 = v102;
          long long v93 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
        }
        else
        {
          unsigned int v92 = *v21;
          long long v93 = v21 + 1;
          *((void *)this + 1) = v93;
        }
        *(unsigned char *)(a1 + 104) = v92 != 0;
        int v22 = *(_DWORD *)(a1 + 112) | 0x1000;
        *(_DWORD *)(a1 + 112) = v22;
        if ((unint64_t)v93 >= v20 || *v93 != 114) {
          continue;
        }
        *((void *)this + 1) = v93 + 1;
LABEL_183:
        *(_DWORD *)(a1 + 112) = v22 | 0x2000;
        uint64_t v94 = *(void *)(a1 + 96);
        if (!v94) {
          operator new();
        }
        unsigned int v102 = 0;
        long long v95 = (char *)*((void *)this + 1);
        if ((unint64_t)v95 >= *((void *)this + 2) || *v95 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v102))return 0; {
        }
          }
        else
        {
          unsigned int v102 = *v95;
          *((void *)this + 1) = v95 + 1;
        }
        int v96 = *((_DWORD *)this + 14);
        int v97 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v96 + 1;
        if (v96 >= v97) {
          return 0;
        }
        int v98 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v102);
        if (!sub_100E22B8C(v94, this, v99) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v98);
        int v100 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v100, 1);
        int v101 = v100 - 1;
        if (v101 < 0 == v28) {
          *((_DWORD *)this + 14) = v101;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_67;
      case 4u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        uint64_t v15 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_75;
      case 5u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        uint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_83;
      case 6u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_41;
        }
        int v17 = *(_DWORD *)(a1 + 112);
        goto LABEL_91;
      case 7u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_105;
        }
        goto LABEL_41;
      case 8u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_119;
        }
        goto LABEL_41;
      case 9u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_133;
        }
        goto LABEL_41;
      case 0xAu:
        int v10 = TagFallback & 7;
        if (v10 == 5) {
          goto LABEL_147;
        }
        goto LABEL_41;
      case 0xBu:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        uint64_t v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_151;
      case 0xCu:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_161;
        }
        goto LABEL_41;
      case 0xDu:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v21 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_175;
      case 0xEu:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_41;
        }
        int v22 = *(_DWORD *)(a1 + 112);
        goto LABEL_183;
      default:
        int v10 = TagFallback & 7;
LABEL_41:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100E27BF0(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 112);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_10248AD10 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 112);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_22;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_10248AD10 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(v5 + 24), (unint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(v5 + 32), (unint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(v5 + 40), (unint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_28;
  }
LABEL_25:
  uint64_t v9 = *(void *)(v5 + 48);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_10248AD10 + 48);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_31;
  }
LABEL_28:
  uint64_t v10 = *(void *)(v5 + 56);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_10248AD10 + 56);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_34;
  }
LABEL_31:
  uint64_t v11 = *(void *)(v5 + 64);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_10248AD10 + 64);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v11, a2, a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_37;
  }
LABEL_34:
  uint64_t v12 = *(void *)(v5 + 72);
  if (!v12) {
    uint64_t v12 = *(void *)(qword_10248AD10 + 72);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v12, a2, a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (int)a2, *(float *)(v5 + 80), a3);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(_DWORD *)(v5 + 84), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
LABEL_42:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned __int8 *)(v5 + 104), (BOOL)a2, a4);
    if ((*(_DWORD *)(v5 + 112) & 0x2000) == 0) {
      return result;
    }
    goto LABEL_43;
  }
LABEL_39:
  uint64_t v13 = *(void *)(v5 + 88);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_10248AD10 + 88);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v13, a2, a4);
  int v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x1000) != 0) {
    goto LABEL_42;
  }
LABEL_14:
  if ((v6 & 0x2000) == 0) {
    return result;
  }
LABEL_43:
  uint64_t v14 = *(void *)(v5 + 96);
  if (!v14) {
    uint64_t v14 = *(void *)(qword_10248AD10 + 96);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v14, a2, a4);
}

uint64_t sub_100E27E30(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 112);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_52;
  }
  if ((v3 & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_10248AD10 + 8);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E1C2B0(v5, a2);
  int v7 = (int)v6;
  if (v6 >= 0x80) {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
  }
  else {
    int v8 = 1;
  }
  uint64_t v4 = (v7 + v8 + 1);
  int v3 = *(_DWORD *)(a1 + 112);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_10248AD10 + 16);
    }
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E21B40(v9, a2);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    }
    else {
      int v12 = 1;
    }
    uint64_t v4 = (v4 + v11 + v12 + 1);
    int v3 = *(_DWORD *)(a1 + 112);
  }
LABEL_18:
  if ((v3 & 4) != 0)
  {
    uint64_t v4 = v4
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 24), a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 112);
    if ((v3 & 8) == 0)
    {
LABEL_20:
      if ((v3 & 0x10) == 0) {
        goto LABEL_21;
      }
      goto LABEL_27;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_20;
  }
  uint64_t v4 = v4
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 32), a2)+ 1;
  int v3 = *(_DWORD *)(a1 + 112);
  if ((v3 & 0x10) == 0)
  {
LABEL_21:
    if ((v3 & 0x20) == 0) {
      goto LABEL_22;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t v4 = v4
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 40), a2)+ 1;
  int v3 = *(_DWORD *)(a1 + 112);
  if ((v3 & 0x20) == 0)
  {
LABEL_22:
    if ((v3 & 0x40) == 0) {
      goto LABEL_23;
    }
    goto LABEL_37;
  }
LABEL_28:
  uint64_t v13 = *(void *)(a1 + 48);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_10248AD10 + 48);
  }
  int v14 = *(unsigned __int8 *)(v13 + 32);
  if (*(unsigned char *)(v13 + 32))
  {
    int v15 = (v14 << 31 >> 31) & 9;
    if ((v14 & 2) != 0) {
      v15 += 9;
    }
    if ((v14 & 4) != 0) {
      int v14 = v15 + 2;
    }
    else {
      int v14 = v15;
    }
  }
  *(_DWORD *)(v13 + 28) = v14;
  uint64_t v4 = (v4 + v14 + 2);
  int v3 = *(_DWORD *)(a1 + 112);
  if ((v3 & 0x40) == 0)
  {
LABEL_23:
    if ((v3 & 0x80) == 0) {
      goto LABEL_52;
    }
    goto LABEL_46;
  }
LABEL_37:
  uint64_t v16 = *(void *)(a1 + 56);
  if (!v16) {
    uint64_t v16 = *(void *)(qword_10248AD10 + 56);
  }
  int v17 = *(unsigned __int8 *)(v16 + 32);
  if (*(unsigned char *)(v16 + 32))
  {
    int v18 = (v17 << 31 >> 31) & 9;
    if ((v17 & 2) != 0) {
      v18 += 9;
    }
    if ((v17 & 4) != 0) {
      int v17 = v18 + 2;
    }
    else {
      int v17 = v18;
    }
  }
  *(_DWORD *)(v16 + 28) = v17;
  uint64_t v4 = (v4 + v17 + 2);
  int v3 = *(_DWORD *)(a1 + 112);
  if ((v3 & 0x80) != 0)
  {
LABEL_46:
    uint64_t v19 = *(void *)(a1 + 64);
    if (!v19) {
      uint64_t v19 = *(void *)(qword_10248AD10 + 64);
    }
    unint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E2359C(v19, a2);
    int v21 = (int)v20;
    if (v20 >= 0x80) {
      int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20, a2);
    }
    else {
      int v22 = 1;
    }
    uint64_t v4 = (v4 + v21 + v22 + 1);
    int v3 = *(_DWORD *)(a1 + 112);
  }
LABEL_52:
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      uint64_t v23 = *(void *)(a1 + 72);
      if (!v23) {
        uint64_t v23 = *(void *)(qword_10248AD10 + 72);
      }
      int v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E26110(v23, a2);
      int v25 = (int)v24;
      if (v24 >= 0x80) {
        int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24, a2);
      }
      else {
        int v26 = 1;
      }
      LODWORD(v4) = v4 + v25 + v26 + 1;
      int v3 = *(_DWORD *)(a1 + 112);
    }
    if ((v3 & 0x200) != 0) {
      LODWORD(v4) = v4 + 5;
    }
    if ((v3 & 0x400) != 0)
    {
      int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 84);
      if ((v27 & 0x80000000) != 0)
      {
        int v28 = 11;
      }
      else if (v27 >= 0x80)
      {
        int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 112);
      }
      else
      {
        int v28 = 2;
      }
      LODWORD(v4) = v28 + v4;
    }
    if ((v3 & 0x800) != 0)
    {
      uint64_t v29 = *(void *)(a1 + 88);
      if (!v29) {
        uint64_t v29 = *(void *)(qword_10248AD10 + 88);
      }
      int v30 = *(unsigned __int8 *)(v29 + 32);
      int v31 = (v30 << 31 >> 31) & 9;
      if ((v30 & 2) != 0) {
        v31 += 9;
      }
      if ((v30 & 4) != 0) {
        v31 += 2;
      }
      if (*(unsigned char *)(v29 + 32)) {
        int v32 = v31;
      }
      else {
        int v32 = 0;
      }
      *(_DWORD *)(v29 + 28) = v32;
      LODWORD(v4) = v4 + v32 + 2;
      int v3 = *(_DWORD *)(a1 + 112);
    }
    if ((v3 & 0x1000) != 0) {
      uint64_t v4 = (v4 + 2);
    }
    else {
      uint64_t v4 = v4;
    }
    if ((v3 & 0x2000) != 0)
    {
      uint64_t v33 = *(void *)(a1 + 96);
      if (!v33) {
        uint64_t v33 = *(void *)(qword_10248AD10 + 96);
      }
      int v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E22ECC(v33);
      int v36 = (int)v34;
      if (v34 >= 0x80) {
        int v37 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v34, v35);
      }
      else {
        int v37 = 1;
      }
      uint64_t v4 = (v4 + v36 + v37 + 1);
    }
  }
  *(_DWORD *)(a1 + 108) = v4;
  return v4;
}

void sub_100E28194(uint64_t a1, void *lpsrc)
{
  sub_100E2655C(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E2821C()
{
  return 1;
}

void *sub_100E28224@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.Measurement");
}

float sub_100E28234(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      float result = *(float *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(float *)(a1 + 8) = result;
      int v5 = *(_DWORD *)(a2 + 32);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    float result = *(float *)(a2 + 12);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(float *)(a1 + 12) = result;
    int v5 = *(_DWORD *)(a2 + 32);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }
LABEL_13:
    float result = *(float *)(a2 + 16);
    *(_DWORD *)(a1 + 32) |= 4u;
    *(float *)(a1 + 16) = result;
    int v5 = *(_DWORD *)(a2 + 32);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0) {
        return result;
      }
      goto LABEL_9;
    }
LABEL_14:
    float result = *(float *)(a2 + 20);
    *(_DWORD *)(a1 + 32) |= 8u;
    *(float *)(a1 + 20) = result;
    if ((*(_DWORD *)(a2 + 32) & 0x10) == 0) {
      return result;
    }
LABEL_9:
    char v6 = *(unsigned char *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 0x10u;
    *(unsigned char *)(a1 + 24) = v6;
  }
  return result;
}

void sub_100E28348(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E28360(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FADC8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E28380(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FADC8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E283D4()
{
}

uint64_t sub_100E28428(uint64_t result)
{
  if (*(unsigned char *)(result + 32))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_100E28440(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_29;
        }
        unsigned int v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v17) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 8) = v17;
        *(_DWORD *)(a1 + 32) |= 1u;
        int v8 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 != 21) {
          continue;
        }
        *((void *)this + 1) = v8 + 1;
        goto LABEL_14;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_29;
        }
LABEL_14:
        unsigned int v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v17) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 12) = v17;
        *(_DWORD *)(a1 + 32) |= 2u;
        uint64_t v9 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 != 29) {
          continue;
        }
        *((void *)this + 1) = v9 + 1;
LABEL_19:
        unsigned int v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v17) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 16) = v17;
        *(_DWORD *)(a1 + 32) |= 4u;
        uint64_t v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 != 37) {
          continue;
        }
        *((void *)this + 1) = v10 + 1;
LABEL_24:
        unsigned int v17 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v17))
        {
          *(_DWORD *)(a1 + 20) = v17;
          *(_DWORD *)(a1 + 32) |= 8u;
          int v12 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
          if ((unint64_t)v12 < v11 && *v12 == 40)
          {
            uint64_t v13 = v12 + 1;
            *((void *)this + 1) = v13;
LABEL_33:
            unsigned int v17 = 0;
            if ((unint64_t)v13 >= v11 || *v13 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v17);
              if (!result) {
                return result;
              }
              unsigned int v14 = v17;
              int v15 = (unsigned __int8 *)*((void *)this + 1);
              unint64_t v11 = *((void *)this + 2);
            }
            else
            {
              unsigned int v14 = *v13;
              int v15 = (unsigned __int8 *)(v13 + 1);
              *((void *)this + 1) = v15;
            }
            *(unsigned char *)(a1 + 24) = v14 != 0;
            *(_DWORD *)(a1 + 32) |= 0x10u;
            if (v15 == (unsigned __int8 *)v11
              && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)this + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_19;
        }
        goto LABEL_29;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_24;
        }
        goto LABEL_29;
      case 5u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_33;
      default:
        int v7 = TagFallback & 7;
LABEL_29:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100E2870C(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(float *)(result + 8), a3);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(float *)(v5 + 12), a3);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, a2, *(float *)(v5 + 20), a3);
    if ((*(_DWORD *)(v5 + 32) & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(float *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return result;
  }
LABEL_11:
  int v7 = *(unsigned __int8 *)(v5 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, a2, a4);
}

uint64_t sub_100E287D0(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 32);
  if (*(unsigned char *)(a1 + 32))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 5;
    if ((v1 & 2) != 0) {
      v2 += 5;
    }
    if ((v1 & 4) != 0) {
      v2 += 5;
    }
    if ((v1 & 8) != 0) {
      v2 += 5;
    }
    if ((v1 & 0x10) != 0) {
      uint64_t v1 = v2 + 2;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *(_DWORD *)(a1 + 28) = v1;
  return v1;
}

float sub_100E28820(uint64_t a1, void *lpsrc)
{
  return sub_100E28234(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E288A8()
{
  return 1;
}

void *sub_100E288B0@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.ReceiverClockModel");
}

double sub_100E288C0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 52);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 52))
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 52) |= 1u;
      *(double *)(a1 + 8) = result;
      int v5 = *(_DWORD *)(a2 + 52);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }
    else if ((*(unsigned char *)(a2 + 52) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 52) |= 2u;
    *(double *)(a1 + 16) = result;
    int v5 = *(_DWORD *)(a2 + 52);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }
LABEL_13:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 52) |= 4u;
    *(double *)(a1 + 24) = result;
    int v5 = *(_DWORD *)(a2 + 52);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0) {
        return result;
      }
      goto LABEL_9;
    }
LABEL_14:
    double result = *(double *)(a2 + 32);
    *(_DWORD *)(a1 + 52) |= 8u;
    *(double *)(a1 + 32) = result;
    if ((*(_DWORD *)(a2 + 52) & 0x10) == 0) {
      return result;
    }
LABEL_9:
    double result = *(double *)(a2 + 40);
    *(_DWORD *)(a1 + 52) |= 0x10u;
    *(double *)(a1 + 40) = result;
  }
  return result;
}

void sub_100E289D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E289EC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FAE40;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E28A0C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FAE40;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E28A60()
{
}

uint64_t sub_100E28AB8(uint64_t result)
{
  if (*(unsigned char *)(result + 52))
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  *(_DWORD *)(result + 52) = 0;
  return result;
}

uint64_t sub_100E28AD8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_34;
        }
        unint64_t v13 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v13) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 8) = v13;
        *(_DWORD *)(a1 + 52) |= 1u;
        int v8 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 != 17) {
          continue;
        }
        *((void *)this + 1) = v8 + 1;
        goto LABEL_14;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_34;
        }
LABEL_14:
        unint64_t v13 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v13) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v13;
        *(_DWORD *)(a1 + 52) |= 2u;
        uint64_t v9 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 != 25) {
          continue;
        }
        *((void *)this + 1) = v9 + 1;
LABEL_19:
        unint64_t v13 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v13) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 24) = v13;
        *(_DWORD *)(a1 + 52) |= 4u;
        uint64_t v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 != 33) {
          continue;
        }
        *((void *)this + 1) = v10 + 1;
LABEL_24:
        unint64_t v13 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v13) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 32) = v13;
        *(_DWORD *)(a1 + 52) |= 8u;
        unint64_t v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 != 41) {
          continue;
        }
        *((void *)this + 1) = v11 + 1;
LABEL_29:
        unint64_t v13 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v13) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 40) = v13;
        *(_DWORD *)(a1 + 52) |= 0x10u;
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_19;
        }
        goto LABEL_34;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_24;
        }
        goto LABEL_34;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_29;
        }
        goto LABEL_34;
      default:
        int v7 = TagFallback & 7;
LABEL_34:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
    return result;
  }
}

uint64_t sub_100E28D7C(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 52);
  if (v5)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(result + 8), a3);
    int v5 = *(_DWORD *)(v4 + 52);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v4 + 16), a3);
  int v5 = *(_DWORD *)(v4 + 52);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, a2, *(double *)(v4 + 32), a3);
    if ((*(_DWORD *)(v4 + 52) & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(double *)(v4 + 24), a3);
  int v5 = *(_DWORD *)(v4 + 52);
  if ((v5 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v5 & 0x10) == 0) {
    return result;
  }
LABEL_11:
  double v6 = *(double *)(v4 + 40);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, a2, v6, a3);
}

uint64_t sub_100E28E40(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 52);
  if (*(unsigned char *)(a1 + 52))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      v2 += 9;
    }
    if ((v1 & 8) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x10) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *(_DWORD *)(a1 + 48) = v1;
  return v1;
}

double sub_100E28E90(uint64_t a1, void *lpsrc)
{
  return sub_100E288C0(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E28F18()
{
  return 1;
}

void *sub_100E28F20@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.ReceiverClockCorrections");
}

double sub_100E28F30(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 40);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 40))
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 40) |= 1u;
      *(void *)(a1 + 8) = v6;
      int v5 = *(_DWORD *)(a2 + 40);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }
    else if ((*(unsigned char *)(a2 + 40) & 2) == 0)
    {
      goto LABEL_6;
    }
    LODWORD(result) = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 40) |= 2u;
    *(_DWORD *)(a1 + 16) = LODWORD(result);
    int v5 = *(_DWORD *)(a2 + 40);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }
LABEL_13:
    LODWORD(result) = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 40) |= 4u;
    *(_DWORD *)(a1 + 20) = LODWORD(result);
    int v5 = *(_DWORD *)(a2 + 40);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0) {
        return result;
      }
      goto LABEL_9;
    }
LABEL_14:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 40) |= 8u;
    *(double *)(a1 + 24) = result;
    if ((*(_DWORD *)(a2 + 40) & 0x10) == 0) {
      return result;
    }
LABEL_9:
    LODWORD(result) = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 40) |= 0x10u;
    *(_DWORD *)(a1 + 32) = LODWORD(result);
  }
  return result;
}

void sub_100E29044(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E2905C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FAEB8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E2907C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FAEB8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E290D0()
{
}

uint64_t sub_100E29128(uint64_t result)
{
  if (*(unsigned char *)(result + 40))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(void *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_100E29144(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        *(void *)uint64_t v16 = 0;
        uint64_t v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, (unint64_t *)v16);
          if (!result) {
            return result;
          }
          uint64_t v10 = *(void *)v16;
          unint64_t v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          uint64_t v10 = *v9;
          unint64_t v11 = v9 + 1;
          *((void *)this + 1) = v11;
        }
        *(void *)(a1 + 8) = v10;
        *(_DWORD *)(a1 + 40) |= 1u;
        if ((unint64_t)v11 < v8 && *v11 == 21)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_27;
        }
        continue;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_19;
        }
LABEL_27:
        v16[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v16) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 16) = v16[0];
        *(_DWORD *)(a1 + 40) |= 2u;
        unint64_t v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 != 29) {
          continue;
        }
        *((void *)this + 1) = v13 + 1;
LABEL_31:
        v16[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v16) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 20) = v16[0];
        *(_DWORD *)(a1 + 40) |= 4u;
        unsigned int v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 != 33) {
          continue;
        }
        *((void *)this + 1) = v14 + 1;
LABEL_35:
        *(void *)uint64_t v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v16) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v16;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        int v15 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 != 45) {
          continue;
        }
        *((void *)this + 1) = v15 + 1;
LABEL_39:
        v16[0] = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v16))
        {
          *(_DWORD *)(a1 + 32) = v16[0];
          *(_DWORD *)(a1 + 40) |= 0x10u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_31;
        }
        goto LABEL_19;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_35;
        }
        goto LABEL_19;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_19;
        }
        goto LABEL_39;
      default:
        int v7 = TagFallback & 7;
LABEL_19:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100E29404(uint64_t result, uint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = a2;
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 40);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v4, *(float *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v4, *(double *)(v5 + 24), a3);
    if ((*(_DWORD *)(v5 + 40) & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v4, *(float *)(v5 + 20), a3);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return result;
  }
LABEL_11:
  float v7 = *(float *)(v5 + 32);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v4, v7, a3);
}

uint64_t sub_100E294C8(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 40);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 40))
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8), a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 40);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 5;
    }
    if ((v3 & 4) != 0) {
      v4 += 5;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      uint64_t result = v4 + 5;
    }
    else {
      uint64_t result = v4;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 36) = result;
  return result;
}

double sub_100E29548(uint64_t a1, void *lpsrc)
{
  return sub_100E28F30(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E295D0()
{
  return 1;
}

void *sub_100E295D8@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.ReceiverToGpsTimeConversion");
}

double sub_100E295E8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 44);
  if (!(_BYTE)v5) {
    return result;
  }
  if ((*(unsigned char *)(a2 + 44) & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 44) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_10:
    *(_DWORD *)(a1 + 44) |= 2u;
    uint64_t v7 = *(void *)(a1 + 16);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = *(void *)(a2 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_10248AD30 + 16);
    }
    *(float *)&double result = sub_100E28234(v7, v8);
    int v5 = *(_DWORD *)(a2 + 44);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        return result;
      }
      goto LABEL_20;
    }
    goto LABEL_15;
  }
  uint64_t v6 = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 44) |= 1u;
  *(void *)(a1 + 8) = v6;
  int v5 = *(_DWORD *)(a2 + 44);
  if ((v5 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_6:
  if ((v5 & 4) == 0) {
    goto LABEL_7;
  }
LABEL_15:
  *(_DWORD *)(a1 + 44) |= 4u;
  uint64_t v9 = *(void *)(a1 + 24);
  if (!v9) {
    operator new();
  }
  uint64_t v10 = *(void *)(a2 + 24);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_10248AD30 + 24);
  }
  double result = sub_100E288C0(v9, v10);
  if ((*(_DWORD *)(a2 + 44) & 8) != 0)
  {
LABEL_20:
    *(_DWORD *)(a1 + 44) |= 8u;
    uint64_t v11 = *(void *)(a1 + 32);
    if (!v11) {
      operator new();
    }
    uint64_t v12 = *(void *)(a2 + 32);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_10248AD30 + 32);
    }
    return sub_100E28F30(v11, v12);
  }
  return result;
}

void sub_100E297F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_100E29810(void *result)
{
  if ((void *)qword_10248AD30 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[3];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    double result = (void *)v1[4];
    if (result)
    {
      unsigned int v4 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v4();
    }
  }
  return result;
}

void sub_100E298DC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FAF30;
  sub_100E29810(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E29930(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FAF30;
  sub_100E29810(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E29998()
{
}

uint64_t sub_100E299F0(uint64_t result)
{
  LOBYTE(v1) = *(unsigned char *)(result + 44);
  if ((_BYTE)v1)
  {
    *(void *)(result + 8) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(result + 16);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 32))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
          *(unsigned char *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 32) = 0;
        int v1 = *(_DWORD *)(result + 44);
      }
    }
    if ((v1 & 4) != 0)
    {
      uint64_t v3 = *(void *)(result + 24);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 52))
        {
          *(void *)(v3 + 40) = 0;
          *(_OWORD *)(v3 + 24) = 0u;
          *(_OWORD *)(v3 + 8) = 0u;
        }
        *(_DWORD *)(v3 + 52) = 0;
        int v1 = *(_DWORD *)(result + 44);
      }
    }
    if ((v1 & 8) != 0)
    {
      uint64_t v4 = *(void *)(result + 32);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 40))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
          *(_DWORD *)(v4 + 32) = 0;
          *(void *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 40) = 0;
      }
    }
  }
  *(_DWORD *)(result + 44) = 0;
  return result;
}

uint64_t sub_100E29A78(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unint64_t *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 < *((void *)this + 2) && (*v6 & 0x80000000) == 0)
    {
      TagFallbacuint64_t k = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        uint64_t v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!result) {
            return result;
          }
          uint64_t v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unint64_t *v5 = *v10;
          uint64_t v11 = v10 + 1;
          *((void *)this + 1) = v11;
        }
        int v12 = *(_DWORD *)(a1 + 44) | 1;
        *(_DWORD *)(a1 + 44) = v12;
        if ((unint64_t)v11 < v9 && *v11 == 18)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_26;
        }
        continue;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_18;
        }
        int v12 = *(_DWORD *)(a1 + 44);
LABEL_26:
        *(_DWORD *)(a1 + 44) = v12 | 2;
        uint64_t v14 = *(void *)(a1 + 16);
        if (!v14) {
          operator new();
        }
        unsigned int v41 = 0;
        int v15 = (char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v41))return 0; {
        }
          }
        else
        {
          unsigned int v41 = *v15;
          *((void *)this + 1) = v15 + 1;
        }
        int v16 = *((_DWORD *)this + 14);
        int v17 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v16 + 1;
        if (v16 >= v17) {
          return 0;
        }
        int v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v41);
        if (!sub_100E28440(v14, this, v19) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
        int v20 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v20, 1);
        int v22 = v20 - 1;
        if (v22 < 0 == v21) {
          *((_DWORD *)this + 14) = v22;
        }
        uint64_t v23 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 != 26) {
          continue;
        }
        *((void *)this + 1) = v23 + 1;
LABEL_40:
        *(_DWORD *)(a1 + 44) |= 4u;
        uint64_t v24 = *(void *)(a1 + 24);
        if (!v24) {
          operator new();
        }
        unsigned int v42 = 0;
        int v25 = (char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v42))return 0; {
        }
          }
        else
        {
          unsigned int v42 = *v25;
          *((void *)this + 1) = v25 + 1;
        }
        int v26 = *((_DWORD *)this + 14);
        int v27 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v26 + 1;
        if (v26 >= v27) {
          return 0;
        }
        int v28 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v42);
        if (!sub_100E28AD8(v24, this, v29) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v28);
        int v30 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v30, 1);
        int v31 = v30 - 1;
        if (v31 < 0 == v21) {
          *((_DWORD *)this + 14) = v31;
        }
        int v32 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 != 34) {
          continue;
        }
        *((void *)this + 1) = v32 + 1;
LABEL_54:
        *(_DWORD *)(a1 + 44) |= 8u;
        uint64_t v33 = *(void *)(a1 + 32);
        if (!v33) {
          operator new();
        }
        unsigned int v43 = 0;
        int v34 = (char *)*((void *)this + 1);
        if ((unint64_t)v34 >= *((void *)this + 2) || *v34 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v43))return 0; {
        }
          }
        else
        {
          unsigned int v43 = *v34;
          *((void *)this + 1) = v34 + 1;
        }
        int v35 = *((_DWORD *)this + 14);
        int v36 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v35 + 1;
        if (v35 >= v36) {
          return 0;
        }
        int v37 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v43);
        if (!sub_100E29144(v33, this, v38) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v37);
        int v39 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v39, 1);
        int v40 = v39 - 1;
        if (v40 < 0 == v21) {
          *((_DWORD *)this + 14) = v40;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_40;
        }
        goto LABEL_18;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_18;
        }
        goto LABEL_54;
      default:
        int v8 = TagFallback & 7;
LABEL_18:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100E29F48(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 44);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), (unint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248AD30 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_10:
  uint64_t v8 = *(void *)(v5 + 24);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_10248AD30 + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  if ((*(_DWORD *)(v5 + 44) & 8) != 0)
  {
LABEL_13:
    uint64_t v9 = *(void *)(v5 + 32);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_10248AD30 + 32);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
  }
  return result;
}

uint64_t sub_100E2A020(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 44);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_28;
  }
  if (*(unsigned char *)(a1 + 44))
  {
    uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8), a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 44);
    if ((v3 & 2) == 0) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 44) & 2) == 0) {
      goto LABEL_13;
    }
  }
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_10248AD30 + 16);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E287D0(v5);
  int v7 = (int)v6;
  if (v6 >= 0x80) {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
  }
  else {
    int v8 = 1;
  }
  uint64_t v4 = (v4 + v7 + v8 + 1);
  int v3 = *(_DWORD *)(a1 + 44);
LABEL_13:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_28;
    }
    goto LABEL_22;
  }
  uint64_t v9 = *(void *)(a1 + 24);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_10248AD30 + 24);
  }
  uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E28E40(v9);
  int v11 = (int)v10;
  if (v10 >= 0x80) {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
  }
  else {
    int v12 = 1;
  }
  uint64_t v4 = (v4 + v11 + v12 + 1);
  if ((*(_DWORD *)(a1 + 44) & 8) != 0)
  {
LABEL_22:
    uint64_t v13 = *(void *)(a1 + 32);
    if (!v13) {
      uint64_t v13 = *(void *)(qword_10248AD30 + 32);
    }
    uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E294C8(v13, a2);
    int v16 = (int)v14;
    if (v14 >= 0x80) {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, v15);
    }
    else {
      int v17 = 1;
    }
    uint64_t v4 = (v4 + v16 + v17 + 1);
  }
LABEL_28:
  *(_DWORD *)(a1 + 40) = v4;
  return v4;
}

double sub_100E2A15C(uint64_t a1, void *lpsrc)
{
  return sub_100E295E8(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E2A1E4()
{
  return 1;
}

void *sub_100E2A1EC@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.Clock");
}

double sub_100E2A1FC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), *(_DWORD *)(a2 + 24) + *(_DWORD *)(a1 + 24));
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(a2 + 16) + 8 * v5);
      int v7 = *(_DWORD *)(a1 + 28);
      uint64_t v8 = *(int *)(a1 + 24);
      if ((int)v8 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), v7 + 1);
          int v7 = *(_DWORD *)(a1 + 28);
        }
        *(_DWORD *)(a1 + 28) = v7 + 1;
        operator new();
      }
      uint64_t v9 = *(void *)(a1 + 16);
      *(_DWORD *)(a1 + 24) = v8 + 1;
      sub_100E2655C(*(void *)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 24));
  }
  if (*(unsigned char *)(a2 + 44))
  {
    *(_DWORD *)(a1 + 44) |= 1u;
    uint64_t v10 = *(void *)(a1 + 8);
    if (!v10) {
      operator new();
    }
    uint64_t v11 = *(void *)(a2 + 8);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_10248AD38 + 8);
    }
    return sub_100E295E8(v10, v11);
  }
  return result;
}

void sub_100E2A3F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E2A40C(uint64_t *a1)
{
  *a1 = (uint64_t)off_1022FAFA8;
  if ((uint64_t *)qword_10248AD38 != a1)
  {
    uint64_t v2 = a1[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  sub_10016B2E8(a1 + 2);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_100E2A4A8(uint64_t *a1)
{
  sub_100E2A40C(a1);

  operator delete();
}

void sub_100E2A4E0()
{
}

uint64_t sub_100E2A534(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 44))
  {
    uint64_t v2 = *(void *)(a1 + 8);
    if (v2) {
      sub_100E299F0(v2);
    }
  }
  uint64_t result = sub_10026DEDC(a1 + 16);
  *(_DWORD *)(a1 + 44) = 0;
  return result;
}

uint64_t sub_100E2A574(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = (char *)*((void *)this + 1);
        if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
        {
          TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacuint64_t k = *v6;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v6 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_18;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v9 = *(void *)(a1 + 8);
        if (!v9) {
          operator new();
        }
        unsigned int v32 = 0;
        uint64_t v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v32))return 0; {
        }
          }
        else
        {
          unsigned int v32 = *v10;
          *((void *)this + 1) = v10 + 1;
        }
        int v11 = *((_DWORD *)this + 14);
        int v12 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v11 + 1;
        if (v11 >= v12) {
          return 0;
        }
        int v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v32);
        if (!sub_100E29A78(v9, this, v14) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
        int v15 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v15, 1);
        int v17 = v15 - 1;
        if (v17 < 0 == v16) {
          *((_DWORD *)this + 14) = v17;
        }
        int v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 < *((void *)this + 2) && *v18 == 18) {
          goto LABEL_29;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_18;
      }
      while (1)
      {
        int v19 = *(_DWORD *)(a1 + 28);
        uint64_t v20 = *(int *)(a1 + 24);
        if ((int)v20 >= v19)
        {
          if (v19 == *(_DWORD *)(a1 + 32))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v19 + 1);
            int v19 = *(_DWORD *)(a1 + 28);
          }
          *(_DWORD *)(a1 + 28) = v19 + 1;
          operator new();
        }
        uint64_t v21 = *(void *)(a1 + 16);
        *(_DWORD *)(a1 + 24) = v20 + 1;
        uint64_t v22 = *(void *)(v21 + 8 * v20);
        unsigned int v33 = 0;
        uint64_t v23 = (char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v33))return 0; {
        }
          }
        else
        {
          unsigned int v33 = *v23;
          *((void *)this + 1) = v23 + 1;
        }
        int v24 = *((_DWORD *)this + 14);
        int v25 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v24 + 1;
        if (v24 >= v25) {
          return 0;
        }
        int v26 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v33);
        if (!sub_100E26EE0(v22, this, v27) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v26);
        int v28 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v28, 1);
        int v29 = v28 - 1;
        if (v29 < 0 == v16) {
          *((_DWORD *)this + 14) = v29;
        }
        int v18 = (unsigned char *)*((void *)this + 1);
        int v30 = (unsigned char *)*((void *)this + 2);
        if (v18 >= v30 || *v18 != 18) {
          break;
        }
LABEL_29:
        *((void *)this + 1) = v18 + 1;
      }
      if (v18 == v30 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v8 = TagFallback & 7;
LABEL_18:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_100E2A8F4(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 44))
  {
    uint64_t v6 = *(void *)(result + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10248AD38 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  return result;
}

uint64_t sub_100E2A97C(uint64_t a1, unint64_t a2)
{
  if (*(unsigned char *)(a1 + 44))
  {
    uint64_t v4 = *(void *)(a1 + 8);
    if (!v4) {
      uint64_t v4 = *(void *)(qword_10248AD38 + 8);
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E2A020(v4, a2);
    int v6 = (int)v5;
    if (v5 >= 0x80) {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    }
    else {
      int v7 = 1;
    }
    int v3 = v6 + v7 + 1;
  }
  else
  {
    int v3 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 24);
  uint64_t v9 = (v8 + v3);
  if (v8 >= 1)
  {
    uint64_t v10 = 0;
    do
    {
      int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E27E30(*(void *)(*(void *)(a1 + 16) + 8 * v10), a2);
      int v12 = (int)v11;
      if (v11 >= 0x80) {
        int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
      }
      else {
        int v13 = 1;
      }
      uint64_t v9 = (v12 + v9 + v13);
      ++v10;
    }
    while (v10 < *(int *)(a1 + 24));
  }
  *(_DWORD *)(a1 + 40) = v9;
  return v9;
}

double sub_100E2AA4C(uint64_t a1, void *lpsrc)
{
  return sub_100E2A1FC(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E2AAD4()
{
  return 1;
}

void *sub_100E2AADC@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.MeasurementReport");
}

double sub_100E2AAEC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(double *)(a1 + 8) = result;
      int v5 = *(_DWORD *)(a2 + 36);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(double *)(a1 + 16) = result;
    if ((*(_DWORD *)(a2 + 36) & 4) == 0) {
      return result;
    }
LABEL_7:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 4u;
    *(double *)(a1 + 24) = result;
  }
  return result;
}

void sub_100E2ABC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E2ABD8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FB020;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E2ABF8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FB020;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E2AC4C()
{
}

uint64_t sub_100E2ACA0(uint64_t result)
{
  if (*(unsigned char *)(result + 36))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_100E2ACB8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacuint64_t k = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v7 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_27;
        }
        unint64_t v12 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 8) = v12;
        *(_DWORD *)(a1 + 36) |= 1u;
        uint64_t v9 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v9 < *((void *)this + 2) && *v9 == 17)
        {
          *((void *)this + 1) = v9 + 1;
LABEL_17:
          unint64_t v12 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
            return 0;
          }
          *(void *)(a1 + 16) = v12;
          *(_DWORD *)(a1 + 36) |= 2u;
          uint64_t v10 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v10 < *((void *)this + 2) && *v10 == 25)
          {
            *((void *)this + 1) = v10 + 1;
            goto LABEL_21;
          }
        }
      }
      if (v7 == 2)
      {
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_27;
        }
        goto LABEL_17;
      }
      if (v7 != 3)
      {
        int v8 = TagFallback & 7;
        goto LABEL_27;
      }
      int v8 = TagFallback & 7;
      if (v8 == 1) {
        break;
      }
LABEL_27:
      if (v8 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
LABEL_21:
    unint64_t v12 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
      return 0;
    }
    *(void *)(a1 + 24) = v12;
    *(_DWORD *)(a1 + 36) |= 4u;
  }
  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_100E2AE80(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 36);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v4 + 16), a3);
    if ((*(_DWORD *)(v4 + 36) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(result + 8), a3);
  int v5 = *(_DWORD *)(v4 + 36);
  if ((v5 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 4) == 0) {
    return result;
  }
LABEL_7:
  double v6 = *(double *)(v4 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, v6, a3);
}

uint64_t sub_100E2AF0C(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 36);
  if (*(unsigned char *)(a1 + 36))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *(_DWORD *)(a1 + 32) = v1;
  return v1;
}

double sub_100E2AF44(uint64_t a1, void *lpsrc)
{
  return sub_100E2AAEC(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E2AFCC()
{
  return 1;
}

void *sub_100E2AFD4@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.Wgs84Ecef");
}

void sub_100E2AFE4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 44);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 44))
    {
      unsigned int v5 = *(_DWORD *)(a2 + 24);
      if (v5 >= 0xD) {
        sub_101A90380();
      }
      *(_DWORD *)(a1 + 44) |= 1u;
      *(_DWORD *)(a1 + 24) = v5;
      int v4 = *(_DWORD *)(a2 + 44);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 44) |= 2u;
      *(void *)(a1 + 8) = v6;
      int v4 = *(_DWORD *)(a2 + 44);
      if ((v4 & 4) == 0)
      {
LABEL_9:
        if ((v4 & 8) == 0) {
          goto LABEL_10;
        }
        goto LABEL_14;
      }
    }
    else if ((v4 & 4) == 0)
    {
      goto LABEL_9;
    }
    uint64_t v7 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 44) |= 4u;
    *(void *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 44);
    if ((v4 & 8) == 0)
    {
LABEL_10:
      if ((v4 & 0x10) == 0) {
        return;
      }
LABEL_15:
      unsigned int v9 = *(_DWORD *)(a2 + 28);
      if (v9 >= 3) {
        sub_101A90354();
      }
      *(_DWORD *)(a1 + 44) |= 0x10u;
      *(_DWORD *)(a1 + 28) = v9;
      return;
    }
LABEL_14:
    uint64_t v8 = *(void *)(a2 + 32);
    *(_DWORD *)(a1 + 44) |= 8u;
    *(void *)(a1 + 32) = v8;
    if ((*(_DWORD *)(a2 + 44) & 0x10) == 0) {
      return;
    }
    goto LABEL_15;
  }
}

void sub_100E2B10C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E2B124(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FB098;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E2B144(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FB098;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E2B198()
{
}

uint64_t sub_100E2B1F0(uint64_t result)
{
  if (*(unsigned char *)(result + 44))
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  *(_DWORD *)(result + 44) = 0;
  return result;
}

uint64_t sub_100E2B20C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    unsigned int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        v18[0] = 0;
        uint64_t v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v18);
          if (!result) {
            return result;
          }
          unsigned int v9 = v18[0];
        }
        else
        {
          unsigned int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
        }
        if (v9 <= 0xC)
        {
          *(_DWORD *)(a1 + 44) |= 1u;
          *(_DWORD *)(a1 + 24) = v9;
        }
        int v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 < *((void *)this + 2) && *v13 == 17)
        {
          *((void *)this + 1) = v13 + 1;
          goto LABEL_30;
        }
        continue;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_19;
        }
LABEL_30:
        *(void *)int v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v18) & 1) == 0)return 0; {
        *(void *)(a1 + 8) = *(void *)v18;
        }
        *(_DWORD *)(a1 + 44) |= 2u;
        unsigned int v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 != 25) {
          continue;
        }
        *((void *)this + 1) = v14 + 1;
LABEL_34:
        *(void *)int v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v18) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v18;
        }
        *(_DWORD *)(a1 + 44) |= 4u;
        int v15 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 != 33) {
          continue;
        }
        *((void *)this + 1) = v15 + 1;
LABEL_38:
        *(void *)int v18 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v18))
        {
          *(void *)(a1 + 32) = *(void *)v18;
          *(_DWORD *)(a1 + 44) |= 8u;
          BOOL v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v16 < v10 && *v16 == 40)
          {
            int v11 = v16 + 1;
            *((void *)this + 1) = v11;
LABEL_42:
            v18[0] = 0;
            if ((unint64_t)v11 >= v10 || *v11 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v18);
              if (!result) {
                return result;
              }
              unsigned int v17 = v18[0];
            }
            else
            {
              unsigned int v17 = *v11;
              *((void *)this + 1) = v11 + 1;
            }
            if (v17 <= 2)
            {
              *(_DWORD *)(a1 + 44) |= 0x10u;
              *(_DWORD *)(a1 + 28) = v17;
            }
            if (*((void *)this + 1) == *((void *)this + 2)
              && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)this + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_34;
        }
        goto LABEL_19;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_38;
        }
        goto LABEL_19;
      case 5u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_42;
      default:
        int v7 = TagFallback & 7;
LABEL_19:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100E2B500(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 44);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 24), a2, a4);
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v5 + 8), a3);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, a2, *(double *)(v5 + 32), a3);
    if ((*(_DWORD *)(v5 + 44) & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return result;
  }
LABEL_11:
  int v7 = *(_DWORD *)(v5 + 28);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, a2, a4);
}

uint64_t sub_100E2B5C4(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 44);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 44))
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
      if ((v6 & 0x80000000) != 0)
      {
        unsigned int v4 = 11;
      }
      else if (v6 >= 0x80)
      {
        unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 44);
      }
      else
      {
        unsigned int v4 = 2;
      }
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 0x10) != 0)
    {
      int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
      if ((v7 & 0x80000000) != 0)
      {
        int v8 = 11;
      }
      else if (v7 >= 0x80)
      {
        int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
      }
      else
      {
        int v8 = 2;
      }
      uint64_t v5 = (v8 + v5);
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  *(_DWORD *)(a1 + 40) = v5;
  return v5;
}

void sub_100E2B688(uint64_t a1, void *lpsrc)
{
  sub_100E2AFE4(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E2B710()
{
  return 1;
}

void *sub_100E2B718@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.SvBandCorrections");
}

double sub_100E2B728(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 28) |= 1u;
      *(double *)(a1 + 8) = result;
      int v5 = *(_DWORD *)(a2 + 28);
    }
    if ((v5 & 2) != 0)
    {
      *(_DWORD *)(a1 + 28) |= 2u;
      uint64_t v6 = *(void *)(a1 + 16);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 16);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_10248AD50 + 16);
      }
      return sub_100E2AAEC(v6, v7);
    }
  }
  return result;
}

void sub_100E2B830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E2B848(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022FB110;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_10248AD50 != this)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_100E2B8D8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_100E2B848(a1);

  operator delete();
}

void sub_100E2B910()
{
}

uint64_t sub_100E2B95C(uint64_t result)
{
  char v1 = *(unsigned char *)(result + 28);
  if (v1)
  {
    *(void *)(result + 8) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(result + 16);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
          *(void *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
      }
    }
  }
  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_100E2B990(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    do
    {
      while (1)
      {
        int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacuint64_t k = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 == 1) {
          break;
        }
        if (TagFallback >> 3 == 2)
        {
          int v7 = TagFallback & 7;
          if (v7 == 2)
          {
            int v8 = *(_DWORD *)(a1 + 28);
            goto LABEL_15;
          }
        }
        else
        {
          int v7 = TagFallback & 7;
        }
LABEL_21:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
      }
        }
      int v7 = TagFallback & 7;
      if (v7 != 1) {
        goto LABEL_21;
      }
      unint64_t v20 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v20) & 1) == 0) {
        return 0;
      }
      *(void *)(a1 + 8) = v20;
      int v8 = *(_DWORD *)(a1 + 28) | 1;
      *(_DWORD *)(a1 + 28) = v8;
      unsigned int v9 = (unsigned char *)*((void *)this + 1);
    }
    while ((unint64_t)v9 >= *((void *)this + 2) || *v9 != 18);
    *((void *)this + 1) = v9 + 1;
LABEL_15:
    *(_DWORD *)(a1 + 28) = v8 | 2;
    uint64_t v10 = *(void *)(a1 + 16);
    if (!v10) {
      operator new();
    }
    unsigned int v21 = 0;
    int v11 = (char *)*((void *)this + 1);
    if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21)) {
        return 0;
      }
    }
    else
    {
      unsigned int v21 = *v11;
      *((void *)this + 1) = v11 + 1;
    }
    int v12 = *((_DWORD *)this + 14);
    int v13 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v12 + 1;
    if (v12 >= v13) {
      return 0;
    }
    int v14 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v21);
    if (!sub_100E2ACB8(v10, this, v15) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v14);
    int v16 = *((_DWORD *)this + 14);
    BOOL v17 = __OFSUB__(v16, 1);
    int v18 = v16 - 1;
    if (v18 < 0 == v17) {
      *((_DWORD *)this + 14) = v18;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_100E2BBC8(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 28);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(result + 8), a3);
    if ((*(_DWORD *)(v5 + 28) & 2) == 0) {
      return result;
    }
  }
  else if ((v6 & 2) == 0)
  {
    return result;
  }
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248AD50 + 16);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
}

uint64_t sub_100E2BC48(uint64_t a1)
{
  int v1 = *(unsigned __int8 *)(a1 + 28);
  if (*(unsigned char *)(a1 + 28))
  {
    uint64_t v2 = (v1 << 31 >> 31) & 9;
    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(a1 + 16);
      if (!v3) {
        uint64_t v3 = *(void *)(qword_10248AD50 + 16);
      }
      int v4 = *(unsigned __int8 *)(v3 + 36);
      int v5 = (v4 << 31 >> 31) & 9;
      if ((v4 & 2) != 0) {
        v5 += 9;
      }
      if ((v4 & 4) != 0) {
        v5 += 9;
      }
      if (*(unsigned char *)(v3 + 36)) {
        int v6 = v5;
      }
      else {
        int v6 = 0;
      }
      *(_DWORD *)(v3 + 32) = v6;
      uint64_t v2 = (v2 | 2) + v6;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 24) = v2;
  return v2;
}

double sub_100E2BCC4(uint64_t a1, void *lpsrc)
{
  return sub_100E2B728(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E2BD4C()
{
  return 1;
}

void *sub_100E2BD54@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.SvPositionAtTime");
}

double sub_100E2BD64(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  int v5 = *(_DWORD *)(a2 + 32);
  if (v5)
  {
    sub_10026DE30(a1 + 24, *(_DWORD *)(a1 + 32) + v5);
    memcpy((void *)(*(void *)(a1 + 24) + 8 * *(int *)(a1 + 32)), *(const void **)(a2 + 24), 8 * *(int *)(a2 + 32));
    *(_DWORD *)(a1 + 32) += *(_DWORD *)(a2 + 32);
  }
  int v6 = *(_DWORD *)(a2 + 48);
  if (v6)
  {
    sub_10026DE30(a1 + 40, *(_DWORD *)(a1 + 48) + v6);
    memcpy((void *)(*(void *)(a1 + 40) + 8 * *(int *)(a1 + 48)), *(const void **)(a2 + 40), 8 * *(int *)(a2 + 48));
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
  }
  int v7 = *(_DWORD *)(a2 + 64);
  if (v7)
  {
    sub_10026DE30(a1 + 56, *(_DWORD *)(a1 + 64) + v7);
    memcpy((void *)(*(void *)(a1 + 56) + 8 * *(int *)(a1 + 64)), *(const void **)(a2 + 56), 8 * *(int *)(a2 + 64));
    *(_DWORD *)(a1 + 64) += *(_DWORD *)(a2 + 64);
  }
  LOBYTE(v8) = *(unsigned char *)(a2 + 76);
  if ((_BYTE)v8)
  {
    if (*(unsigned char *)(a2 + 76))
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 76) |= 1u;
      *(double *)(a1 + 8) = result;
      int v8 = *(_DWORD *)(a2 + 76);
    }
    if ((v8 & 2) != 0)
    {
      double result = *(double *)(a2 + 16);
      *(_DWORD *)(a1 + 76) |= 2u;
      *(double *)(a1 + 16) = result;
    }
  }
  return result;
}

void sub_100E2BEDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E2BEF4(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022FB188;
  if (*((void *)this + 7)) {
    operator delete[]();
  }
  if (*((void *)this + 5)) {
    operator delete[]();
  }
  if (*((void *)this + 3)) {
    operator delete[]();
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_100E2BF9C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_100E2BEF4(a1);

  operator delete();
}

void sub_100E2BFD4()
{
}

uint64_t sub_100E2C034(uint64_t result)
{
  if (*(unsigned char *)(result + 76))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 48) = 0;
  *(_DWORD *)(result + 64) = 0;
  *(_DWORD *)(result + 76) = 0;
  return result;
}

uint64_t sub_100E2C054(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unsigned int a3)
{
  uint64_t v5 = a1 + 56;
  uint64_t v45 = a1 + 24;
  uint64_t v46 = a1 + 40;
LABEL_2:
  while (2)
  {
    int v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_31;
        }
        v47[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, v47) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 8) = v47[0];
        *(_DWORD *)(a1 + 76) |= 1u;
        unsigned int v9 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 != 25) {
          continue;
        }
        *((void *)this + 1) = v9 + 1;
        goto LABEL_15;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_31;
        }
LABEL_15:
        v47[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, v47) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v47[0];
        *(_DWORD *)(a1 + 76) |= 2u;
        uint64_t v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 < *((void *)this + 2) && *v10 == 33) {
          goto LABEL_34;
        }
        continue;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_35;
        }
        if (v8 != 2) {
          goto LABEL_31;
        }
        uint64_t result = sub_100249F20(this, v45);
        if (!result) {
          return result;
        }
        while (2)
        {
          uint64_t v10 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v10 < *((void *)this + 2))
          {
            int v22 = *v10;
            if (v22 == 33)
            {
LABEL_34:
              *((void *)this + 1) = v10 + 1;
LABEL_35:
              v47[0] = 0;
              if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, v47) & 1) == 0) {
                return 0;
              }
              unint64_t v12 = v47[0];
              int v13 = *(_DWORD *)(a1 + 32);
              if (v13 == *(_DWORD *)(a1 + 36))
              {
                sub_10026DE30(v45, v13 + 1);
                int v13 = *(_DWORD *)(a1 + 32);
              }
              uint64_t v14 = *(void *)(a1 + 24);
              int v15 = v13 + 1;
              *(_DWORD *)(a1 + 32) = v13 + 1;
              *(void *)(v14 + 8 * v13) = v12;
              uint64_t v16 = *((void *)this + 1);
              int v17 = *((_DWORD *)this + 4) - v16;
              if (v17 >= 1)
              {
                signed int v18 = v17 / 9u;
                int v19 = v18 >= *(_DWORD *)(a1 + 36) - v15 ? *(_DWORD *)(a1 + 36) - v15 : v18;
                if (v19 >= 1)
                {
                  for (int i = 0; i != v19; ++i)
                  {
                    if (*(unsigned char *)v16 != 33) {
                      goto LABEL_49;
                    }
                    uint64_t v21 = *(void *)(v16 + 1);
                    if (v15 >= *(_DWORD *)(a1 + 36))
                    {
                      wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                      wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                      wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v47);
                      int v15 = *(_DWORD *)(a1 + 32);
                      uint64_t v14 = *(void *)(a1 + 24);
                    }
                    *(_DWORD *)(a1 + 32) = v15 + 1;
                    *(void *)(v14 + 8 * v15) = v21;
                    v16 += 9;
                    ++v15;
                  }
                  int i = v19;
LABEL_49:
                  if (i) {
                    wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 9 * i);
                  }
                  continue;
                }
              }
              continue;
            }
            if (v22 == 41)
            {
              do
              {
                *((void *)this + 1) = v10 + 1;
LABEL_55:
                v47[0] = 0;
                if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, v47) & 1) == 0)return 0; {
                unint64_t v23 = v47[0];
                }
                int v24 = *(_DWORD *)(a1 + 48);
                if (v24 == *(_DWORD *)(a1 + 52))
                {
                  sub_10026DE30(v46, v24 + 1);
                  int v24 = *(_DWORD *)(a1 + 48);
                }
                uint64_t v25 = *(void *)(a1 + 40);
                int v26 = v24 + 1;
                *(_DWORD *)(a1 + 48) = v24 + 1;
                *(void *)(v25 + 8 * v24) = v23;
                uint64_t v27 = *((void *)this + 1);
                int v28 = *((_DWORD *)this + 4) - v27;
                if (v28 >= 1)
                {
                  signed int v29 = v28 / 9u;
                  int v30 = v29 >= *(_DWORD *)(a1 + 52) - v26 ? *(_DWORD *)(a1 + 52) - v26 : v29;
                  if (v30 >= 1)
                  {
                    int v31 = 0;
                    while (*(unsigned char *)v27 == 41)
                    {
                      uint64_t v32 = *(void *)(v27 + 1);
                      if (v26 >= *(_DWORD *)(a1 + 52))
                      {
                        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                        wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v47);
                        int v26 = *(_DWORD *)(a1 + 48);
                        uint64_t v25 = *(void *)(a1 + 40);
                      }
                      *(_DWORD *)(a1 + 48) = v26 + 1;
                      *(void *)(v25 + 8 * v26) = v32;
                      ++v31;
                      v27 += 9;
                      ++v26;
                      if (v30 == v31)
                      {
                        int v31 = v30;
                        break;
                      }
                    }
                    if (v31) {
                      wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 9 * v31);
                    }
                  }
                }
LABEL_71:
                uint64_t v10 = (unsigned char *)*((void *)this + 1);
                if ((unint64_t)v10 >= *((void *)this + 2)) {
                  goto LABEL_2;
                }
                int v33 = *v10;
              }
              while (v33 == 41);
              if (v33 == 49) {
                goto LABEL_74;
              }
            }
          }
          goto LABEL_2;
        }
      case 5u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_55;
        }
        if (v8 != 2) {
          goto LABEL_31;
        }
        uint64_t result = sub_100249F20(this, v46);
        if (!result) {
          return result;
        }
        goto LABEL_71;
      case 6u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_75;
        }
        if (v8 == 2)
        {
          uint64_t result = sub_100249F20(this, v5);
          if (!result) {
            return result;
          }
          while (1)
          {
            uint64_t v10 = (unsigned char *)*((void *)this + 1);
            uint64_t v44 = (unsigned char *)*((void *)this + 2);
            if (v10 >= v44 || *v10 != 49) {
              break;
            }
LABEL_74:
            *((void *)this + 1) = v10 + 1;
LABEL_75:
            v47[0] = 0;
            if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, v47) & 1) == 0) {
              return 0;
            }
            unint64_t v34 = v47[0];
            int v35 = *(_DWORD *)(a1 + 64);
            if (v35 == *(_DWORD *)(a1 + 68))
            {
              sub_10026DE30(v5, v35 + 1);
              int v35 = *(_DWORD *)(a1 + 64);
            }
            uint64_t v36 = *(void *)(a1 + 56);
            int v37 = v35 + 1;
            *(_DWORD *)(a1 + 64) = v35 + 1;
            *(void *)(v36 + 8 * v35) = v34;
            uint64_t v38 = *((void *)this + 1);
            int v39 = *((_DWORD *)this + 4) - v38;
            if (v39 >= 1)
            {
              signed int v40 = v39 / 9u;
              int v41 = v40 >= *(_DWORD *)(a1 + 68) - v37 ? *(_DWORD *)(a1 + 68) - v37 : v40;
              if (v41 >= 1)
              {
                int v42 = 0;
                while (*(unsigned char *)v38 == 49)
                {
                  uint64_t v43 = *(void *)(v38 + 1);
                  if (v37 >= *(_DWORD *)(a1 + 68))
                  {
                    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v47);
                    int v37 = *(_DWORD *)(a1 + 64);
                    uint64_t v36 = *(void *)(a1 + 56);
                  }
                  *(_DWORD *)(a1 + 64) = v37 + 1;
                  *(void *)(v36 + 8 * v37) = v43;
                  ++v42;
                  v38 += 9;
                  ++v37;
                  if (v41 == v42)
                  {
                    int v42 = v41;
                    break;
                  }
                }
                if (v42) {
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 9 * v42);
                }
              }
            }
          }
          if (v10 == v44 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
LABEL_31:
        if (v8 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
          continue;
          }
        }
        return 1;
      default:
        int v8 = TagFallback & 7;
        goto LABEL_31;
    }
  }
}

void sub_100E2C644(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100E2C680(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 76);
  if (v5)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(result + 8), a3);
    int v5 = *(_DWORD *)(v4 + 76);
  }
  if ((v5 & 2) != 0) {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(double *)(v4 + 16), a3);
  }
  if (*(int *)(v4 + 32) >= 1)
  {
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, a2, *(double *)(*(void *)(v4 + 24) + 8 * v6++), a3);
    while (v6 < *(int *)(v4 + 32));
  }
  if (*(int *)(v4 + 48) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, a2, *(double *)(*(void *)(v4 + 40) + 8 * v7++), a3);
    while (v7 < *(int *)(v4 + 48));
  }
  if (*(int *)(v4 + 64) >= 1)
  {
    uint64_t v8 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, a2, *(double *)(*(void *)(v4 + 56) + 8 * v8++), a3);
    while (v8 < *(int *)(v4 + 64));
  }
  return result;
}

uint64_t sub_100E2C778(uint64_t a1)
{
  int v1 = *(unsigned __int8 *)(a1 + 76);
  int v2 = (v1 << 31 >> 31) & 9;
  if ((v1 & 2) != 0) {
    v2 += 9;
  }
  if (*(unsigned char *)(a1 + 76)) {
    int v3 = v2;
  }
  else {
    int v3 = 0;
  }
  uint64_t v4 = (9 * (*(_DWORD *)(a1 + 48) + *(_DWORD *)(a1 + 32) + *(_DWORD *)(a1 + 64)) + v3);
  *(_DWORD *)(a1 + 72) = v4;
  return v4;
}

double sub_100E2C7C4(uint64_t a1, void *lpsrc)
{
  return sub_100E2BD64(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E2C84C()
{
  return 1;
}

void *sub_100E2C854@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.PolynomialOrbit");
}

void sub_100E2C864(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v38);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), *(_DWORD *)(a2 + 32) + *(_DWORD *)(a1 + 32));
  if (*(int *)(a2 + 32) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 24) + 8 * v4);
      int v6 = *(_DWORD *)(a1 + 36);
      uint64_t v7 = *(int *)(a1 + 32);
      if ((int)v7 >= v6)
      {
        if (v6 == *(_DWORD *)(a1 + 40))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), v6 + 1);
          int v6 = *(_DWORD *)(a1 + 36);
        }
        *(_DWORD *)(a1 + 36) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *(void *)(a1 + 24);
      *(_DWORD *)(a1 + 32) = v7 + 1;
      sub_100E2B728(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 32));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 104), *(_DWORD *)(a2 + 112) + *(_DWORD *)(a1 + 112));
  if (*(int *)(a2 + 112) >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      uint64_t v10 = *(void *)(*(void *)(a2 + 104) + 8 * v9);
      int v11 = *(_DWORD *)(a1 + 116);
      uint64_t v12 = *(int *)(a1 + 112);
      if ((int)v12 >= v11)
      {
        if (v11 == *(_DWORD *)(a1 + 120))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 104), v11 + 1);
          int v11 = *(_DWORD *)(a1 + 116);
        }
        *(_DWORD *)(a1 + 116) = v11 + 1;
        operator new();
      }
      uint64_t v13 = *(void *)(a1 + 104);
      *(_DWORD *)(a1 + 112) = v12 + 1;
      sub_100E2AFE4(*(void *)(v13 + 8 * v12), v10);
      ++v9;
    }
    while (v9 < *(int *)(a2 + 112));
  }
  int v14 = *(_DWORD *)(a2 + 172);
  if (!(_BYTE)v14) {
    goto LABEL_28;
  }
  if (v14)
  {
    *(_DWORD *)(a1 + 172) |= 1u;
    uint64_t v31 = *(void *)(a1 + 8);
    if (!v31) {
      operator new();
    }
    uint64_t v32 = *(void *)(a2 + 8);
    if (!v32) {
      uint64_t v32 = *(void *)(qword_10248AD60 + 8);
    }
    sub_100E1BD54(v31, v32);
    int v14 = *(_DWORD *)(a2 + 172);
    if ((v14 & 2) == 0)
    {
LABEL_22:
      if ((v14 & 4) == 0) {
        goto LABEL_23;
      }
      goto LABEL_80;
    }
  }
  else if ((v14 & 2) == 0)
  {
    goto LABEL_22;
  }
  uint64_t v33 = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 172) |= 2u;
  *(void *)(a1 + 16) = v33;
  int v14 = *(_DWORD *)(a2 + 172);
  if ((v14 & 4) == 0)
  {
LABEL_23:
    if ((v14 & 0x10) == 0) {
      goto LABEL_24;
    }
    goto LABEL_82;
  }
LABEL_80:
  unsigned int v34 = *(_DWORD *)(a2 + 56);
  if (v34 >= 7) {
    sub_101A90590();
  }
  *(_DWORD *)(a1 + 172) |= 4u;
  *(_DWORD *)(a1 + 56) = v34;
  int v14 = *(_DWORD *)(a2 + 172);
  if ((v14 & 0x10) == 0)
  {
LABEL_24:
    if ((v14 & 0x20) == 0) {
      goto LABEL_25;
    }
LABEL_83:
    uint64_t v36 = *(void *)(a2 + 64);
    *(_DWORD *)(a1 + 172) |= 0x20u;
    *(void *)(a1 + 64) = v36;
    int v14 = *(_DWORD *)(a2 + 172);
    if ((v14 & 0x40) == 0)
    {
LABEL_26:
      if ((v14 & 0x80) == 0) {
        goto LABEL_28;
      }
      goto LABEL_27;
    }
    goto LABEL_84;
  }
LABEL_82:
  uint64_t v35 = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 172) |= 0x10u;
  *(void *)(a1 + 48) = v35;
  int v14 = *(_DWORD *)(a2 + 172);
  if ((v14 & 0x20) != 0) {
    goto LABEL_83;
  }
LABEL_25:
  if ((v14 & 0x40) == 0) {
    goto LABEL_26;
  }
LABEL_84:
  uint64_t v37 = *(void *)(a2 + 72);
  *(_DWORD *)(a1 + 172) |= 0x40u;
  *(void *)(a1 + 72) = v37;
  int v14 = *(_DWORD *)(a2 + 172);
  if ((v14 & 0x80) != 0)
  {
LABEL_27:
    int v15 = *(_DWORD *)(a2 + 60);
    *(_DWORD *)(a1 + 172) |= 0x80u;
    *(_DWORD *)(a1 + 60) = v15;
    int v14 = *(_DWORD *)(a2 + 172);
  }
LABEL_28:
  if ((v14 & 0xFF00) != 0)
  {
    if ((v14 & 0x100) != 0)
    {
      int v16 = *(_DWORD *)(a2 + 80);
      *(_DWORD *)(a1 + 172) |= 0x100u;
      *(_DWORD *)(a1 + 80) = v16;
      int v14 = *(_DWORD *)(a2 + 172);
    }
    if ((v14 & 0x200) != 0)
    {
      unsigned int v17 = *(_DWORD *)(a2 + 84);
      if (v17 >= 5) {
        sub_101A90564();
      }
      *(_DWORD *)(a1 + 172) |= 0x200u;
      *(_DWORD *)(a1 + 84) = v17;
      int v14 = *(_DWORD *)(a2 + 172);
    }
    if ((v14 & 0x400) != 0)
    {
      unsigned int v18 = *(_DWORD *)(a2 + 88);
      if (v18 >= 5) {
        sub_101A90538();
      }
      *(_DWORD *)(a1 + 172) |= 0x400u;
      *(_DWORD *)(a1 + 88) = v18;
      int v14 = *(_DWORD *)(a2 + 172);
    }
    if ((v14 & 0x800) != 0)
    {
      unsigned int v19 = *(_DWORD *)(a2 + 92);
      if (v19 >= 5) {
        sub_101A9050C();
      }
      *(_DWORD *)(a1 + 172) |= 0x800u;
      *(_DWORD *)(a1 + 92) = v19;
      int v14 = *(_DWORD *)(a2 + 172);
    }
    if ((v14 & 0x1000) != 0)
    {
      unsigned int v20 = *(_DWORD *)(a2 + 96);
      if (v20 >= 5) {
        sub_101A904E0();
      }
      *(_DWORD *)(a1 + 172) |= 0x1000u;
      *(_DWORD *)(a1 + 96) = v20;
      int v14 = *(_DWORD *)(a2 + 172);
    }
    if ((v14 & 0x2000) != 0)
    {
      unsigned int v21 = *(_DWORD *)(a2 + 100);
      if (v21 >= 5) {
        sub_101A904B4();
      }
      *(_DWORD *)(a1 + 172) |= 0x2000u;
      *(_DWORD *)(a1 + 100) = v21;
      int v14 = *(_DWORD *)(a2 + 172);
    }
    if ((v14 & 0x8000) != 0)
    {
      *(_DWORD *)(a1 + 172) |= 0x8000u;
      uint64_t v22 = *(void *)(a1 + 128);
      if (!v22) {
        operator new();
      }
      uint64_t v23 = *(void *)(a2 + 128);
      if (!v23) {
        uint64_t v23 = *(void *)(qword_10248AD60 + 128);
      }
      sub_100E2BD64(v22, v23);
      int v14 = *(_DWORD *)(a2 + 172);
    }
  }
  if ((v14 & 0xFF0000) != 0)
  {
    if ((v14 & 0x10000) != 0)
    {
      unsigned int v24 = *(_DWORD *)(a2 + 136);
      if (v24 >= 5) {
        sub_101A90488();
      }
      *(_DWORD *)(a1 + 172) |= 0x10000u;
      *(_DWORD *)(a1 + 136) = v24;
      int v14 = *(_DWORD *)(a2 + 172);
    }
    if ((v14 & 0x20000) != 0)
    {
      unsigned int v25 = *(_DWORD *)(a2 + 140);
      if (v25 >= 5) {
        sub_101A9045C();
      }
      *(_DWORD *)(a1 + 172) |= 0x20000u;
      *(_DWORD *)(a1 + 140) = v25;
      int v14 = *(_DWORD *)(a2 + 172);
    }
    if ((v14 & 0x40000) != 0)
    {
      unsigned int v26 = *(_DWORD *)(a2 + 144);
      if (v26 >= 5) {
        sub_101A90430();
      }
      *(_DWORD *)(a1 + 172) |= 0x40000u;
      *(_DWORD *)(a1 + 144) = v26;
      int v14 = *(_DWORD *)(a2 + 172);
    }
    if ((v14 & 0x80000) != 0)
    {
      unsigned int v27 = *(_DWORD *)(a2 + 148);
      if (v27 >= 5) {
        sub_101A90404();
      }
      *(_DWORD *)(a1 + 172) |= 0x80000u;
      *(_DWORD *)(a1 + 148) = v27;
      int v14 = *(_DWORD *)(a2 + 172);
    }
    if ((v14 & 0x100000) != 0)
    {
      unsigned int v28 = *(_DWORD *)(a2 + 160);
      if (v28 >= 5) {
        sub_101A903D8();
      }
      *(_DWORD *)(a1 + 172) |= 0x100000u;
      *(_DWORD *)(a1 + 160) = v28;
      int v14 = *(_DWORD *)(a2 + 172);
    }
    if ((v14 & 0x200000) != 0)
    {
      uint64_t v29 = *(void *)(a2 + 152);
      *(_DWORD *)(a1 + 172) |= 0x200000u;
      *(void *)(a1 + 152) = v29;
      int v14 = *(_DWORD *)(a2 + 172);
    }
    if ((v14 & 0x400000) != 0)
    {
      unsigned int v30 = *(_DWORD *)(a2 + 164);
      if (v30 >= 4) {
        sub_101A903AC();
      }
      *(_DWORD *)(a1 + 172) |= 0x400000u;
      *(_DWORD *)(a1 + 164) = v30;
    }
  }
}

void sub_100E2CE78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E2CE90(uint64_t *a1)
{
  *a1 = (uint64_t)off_1022FB200;
  int v2 = a1 + 13;
  sub_100E2CF00(a1);
  sub_10016B2E8(v2);
  sub_10016B2E8(a1 + 3);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void *sub_100E2CF00(void *result)
{
  if ((void *)qword_10248AD60 != result)
  {
    int v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t result = (void *)v1[16];
    if (result)
    {
      int v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_100E2CFA4(uint64_t *a1)
{
  sub_100E2CE90(a1);

  operator delete();
}

void sub_100E2CFDC()
{
}

uint64_t sub_100E2D048(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 172);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t v3 = *(void *)(a1 + 8);
      if (v3)
      {
        sub_100E1BF90(v3);
        int v2 = *(_DWORD *)(a1 + 172);
      }
    }
    *(void *)(a1 + 16) = 0;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(void *)(a1 + 80) = 0;
    *(void *)(a1 + 88) = 0;
    *(void *)(a1 + 96) = 0;
    if ((v2 & 0x8000) != 0)
    {
      uint64_t v4 = *(void *)(a1 + 128);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 76))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
        }
        *(_DWORD *)(v4 + 32) = 0;
        *(_DWORD *)(v4 + 48) = 0;
        *(_DWORD *)(v4 + 64) = 0;
        *(_DWORD *)(v4 + 76) = 0;
        int v2 = *(_DWORD *)(a1 + 172);
      }
    }
  }
  if ((v2 & 0xFF0000) != 0)
  {
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
  }
  sub_10026DEDC(a1 + 24);
  uint64_t result = sub_10026DEDC(a1 + 104);
  *(_DWORD *)(a1 + 172) = 0;
  return result;
}

uint64_t sub_100E2D0F8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24);
  int v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 104);
LABEL_2:
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_62;
        }
        *(_DWORD *)(a1 + 172) |= 1u;
        uint64_t v10 = *(void *)(a1 + 8);
        if (!v10) {
          operator new();
        }
        v108[0] = 0;
        int v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v108))return 0; {
        }
          }
        else
        {
          v108[0] = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        int v39 = *((_DWORD *)this + 14);
        int v40 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v39 + 1;
        if (v39 >= v40) {
          return 0;
        }
        int v41 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v108[0]);
        if (!sub_100E1BFD0(v10, this, v42) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v41);
        int v43 = *((_DWORD *)this + 14);
        BOOL v44 = __OFSUB__(v43, 1);
        int v45 = v43 - 1;
        if (v45 < 0 == v44) {
          *((_DWORD *)this + 14) = v45;
        }
        uint64_t v46 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v46 >= *((void *)this + 2) || *v46 != 17) {
          continue;
        }
        *((void *)this + 1) = v46 + 1;
        goto LABEL_86;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_62;
        }
LABEL_86:
        *(void *)uint64_t v108 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v108) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v108;
        }
        *(_DWORD *)(a1 + 172) |= 2u;
        int v47 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v47 >= v12 || *v47 != 24) {
          continue;
        }
        uint64_t v13 = v47 + 1;
        *((void *)this + 1) = v13;
LABEL_90:
        v108[0] = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v108);
          if (!result) {
            return result;
          }
          unsigned int v48 = v108[0];
        }
        else
        {
          unsigned int v48 = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        if (v48 <= 6)
        {
          *(_DWORD *)(a1 + 172) |= 4u;
          *(_DWORD *)(a1 + 56) = v48;
        }
        unsigned int v49 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v49 >= *((void *)this + 2) || *v49 != 34) {
          continue;
        }
        do
        {
          *((void *)this + 1) = v49 + 1;
LABEL_100:
          int v50 = *(_DWORD *)(a1 + 36);
          uint64_t v51 = *(int *)(a1 + 32);
          if ((int)v51 >= v50)
          {
            if (v50 == *(_DWORD *)(a1 + 40))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v50 + 1);
              int v50 = *(_DWORD *)(a1 + 36);
            }
            *(_DWORD *)(a1 + 36) = v50 + 1;
            operator new();
          }
          uint64_t v52 = *(void *)(a1 + 24);
          *(_DWORD *)(a1 + 32) = v51 + 1;
          uint64_t v53 = *(void *)(v52 + 8 * v51);
          v108[0] = 0;
          int v54 = (char *)*((void *)this + 1);
          if ((unint64_t)v54 >= *((void *)this + 2) || *v54 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v108))return 0; {
          }
            }
          else
          {
            v108[0] = *v54;
            *((void *)this + 1) = v54 + 1;
          }
          int v55 = *((_DWORD *)this + 14);
          int v56 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v55 + 1;
          if (v55 >= v56) {
            return 0;
          }
          int v57 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v108[0]);
          if (!sub_100E2B990(v53, this, v58) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v57);
          int v59 = *((_DWORD *)this + 14);
          BOOL v44 = __OFSUB__(v59, 1);
          int v60 = v59 - 1;
          if (v60 < 0 == v44) {
            *((_DWORD *)this + 14) = v60;
          }
          unsigned int v49 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v49 >= *((void *)this + 2)) {
            goto LABEL_2;
          }
          int v61 = *v49;
        }
        while (v61 == 34);
        if (v61 != 41) {
          continue;
        }
        *((void *)this + 1) = v49 + 1;
LABEL_118:
        *(void *)uint64_t v108 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v108) & 1) == 0)return 0; {
        *(void *)(a1 + 48) = *(void *)v108;
        }
        *(_DWORD *)(a1 + 172) |= 0x10u;
        uint64_t v62 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v62 >= *((void *)this + 2) || *v62 != 49) {
          continue;
        }
        *((void *)this + 1) = v62 + 1;
LABEL_122:
        *(void *)uint64_t v108 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v108) & 1) == 0)return 0; {
        *(void *)(a1 + 64) = *(void *)v108;
        }
        *(_DWORD *)(a1 + 172) |= 0x20u;
        unsigned int v63 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v63 >= *((void *)this + 2) || *v63 != 57) {
          continue;
        }
        *((void *)this + 1) = v63 + 1;
LABEL_126:
        *(void *)uint64_t v108 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v108) & 1) == 0)return 0; {
        *(void *)(a1 + 72) = *(void *)v108;
        }
        *(_DWORD *)(a1 + 172) |= 0x40u;
        int v64 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v64 >= *((void *)this + 2) || *v64 != 69) {
          continue;
        }
        *((void *)this + 1) = v64 + 1;
LABEL_130:
        v108[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v108) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 60) = v108[0];
        *(_DWORD *)(a1 + 172) |= 0x80u;
        int v65 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v65 >= *((void *)this + 2) || *v65 != 77) {
          continue;
        }
        *((void *)this + 1) = v65 + 1;
LABEL_134:
        v108[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v108) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 80) = v108[0];
        *(_DWORD *)(a1 + 172) |= 0x100u;
        int v66 = (unsigned char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v66 >= v14 || *v66 != 80) {
          continue;
        }
        int v15 = v66 + 1;
        *((void *)this + 1) = v15;
LABEL_138:
        v108[0] = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v108);
          if (!result) {
            return result;
          }
          unsigned int v67 = v108[0];
        }
        else
        {
          unsigned int v67 = *v15;
          *((void *)this + 1) = v15 + 1;
        }
        if (v67 <= 4)
        {
          *(_DWORD *)(a1 + 172) |= 0x200u;
          *(_DWORD *)(a1 + 84) = v67;
        }
        int v68 = (unsigned char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        if ((unint64_t)v68 >= v16 || *v68 != 88) {
          continue;
        }
        unsigned int v17 = v68 + 1;
        *((void *)this + 1) = v17;
LABEL_148:
        v108[0] = 0;
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v108);
          if (!result) {
            return result;
          }
          unsigned int v69 = v108[0];
        }
        else
        {
          unsigned int v69 = *v17;
          *((void *)this + 1) = v17 + 1;
        }
        if (v69 <= 4)
        {
          *(_DWORD *)(a1 + 172) |= 0x400u;
          *(_DWORD *)(a1 + 88) = v69;
        }
        unsigned int v70 = (unsigned char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        if ((unint64_t)v70 >= v18 || *v70 != 96) {
          continue;
        }
        unsigned int v19 = v70 + 1;
        *((void *)this + 1) = v19;
LABEL_158:
        v108[0] = 0;
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v108);
          if (!result) {
            return result;
          }
          unsigned int v71 = v108[0];
        }
        else
        {
          unsigned int v71 = *v19;
          *((void *)this + 1) = v19 + 1;
        }
        if (v71 <= 4)
        {
          *(_DWORD *)(a1 + 172) |= 0x800u;
          *(_DWORD *)(a1 + 92) = v71;
        }
        unsigned int v72 = (unsigned char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        if ((unint64_t)v72 >= v20 || *v72 != 104) {
          continue;
        }
        unsigned int v21 = v72 + 1;
        *((void *)this + 1) = v21;
LABEL_168:
        v108[0] = 0;
        if ((unint64_t)v21 >= v20 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v108);
          if (!result) {
            return result;
          }
          unsigned int v73 = v108[0];
        }
        else
        {
          unsigned int v73 = *v21;
          *((void *)this + 1) = v21 + 1;
        }
        if (v73 <= 4)
        {
          *(_DWORD *)(a1 + 172) |= 0x1000u;
          *(_DWORD *)(a1 + 96) = v73;
        }
        int v74 = (unsigned char *)*((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        if ((unint64_t)v74 >= v22 || *v74 != 112) {
          continue;
        }
        uint64_t v23 = v74 + 1;
        *((void *)this + 1) = v23;
LABEL_178:
        v108[0] = 0;
        if ((unint64_t)v23 >= v22 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v108);
          if (!result) {
            return result;
          }
          unsigned int v75 = v108[0];
        }
        else
        {
          unsigned int v75 = *v23;
          *((void *)this + 1) = v23 + 1;
        }
        if (v75 <= 4)
        {
          *(_DWORD *)(a1 + 172) |= 0x2000u;
          *(_DWORD *)(a1 + 100) = v75;
        }
        unsigned int v76 = (unsigned __int8 *)*((void *)this + 1);
        if ((unint64_t)v76 >= *((void *)this + 2) || *v76 != 122) {
          continue;
        }
        do
        {
          *((void *)this + 1) = v76 + 1;
LABEL_188:
          int v77 = *(_DWORD *)(a1 + 116);
          uint64_t v78 = *(int *)(a1 + 112);
          if ((int)v78 >= v77)
          {
            if (v77 == *(_DWORD *)(a1 + 120))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v77 + 1);
              int v77 = *(_DWORD *)(a1 + 116);
            }
            *(_DWORD *)(a1 + 116) = v77 + 1;
            operator new();
          }
          uint64_t v79 = *(void *)(a1 + 104);
          *(_DWORD *)(a1 + 112) = v78 + 1;
          uint64_t v80 = *(void *)(v79 + 8 * v78);
          v108[0] = 0;
          unsigned int v81 = (char *)*((void *)this + 1);
          if ((unint64_t)v81 >= *((void *)this + 2) || *v81 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v108))return 0; {
          }
            }
          else
          {
            v108[0] = *v81;
            *((void *)this + 1) = v81 + 1;
          }
          int v82 = *((_DWORD *)this + 14);
          int v83 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v82 + 1;
          if (v82 >= v83) {
            return 0;
          }
          int v84 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v108[0]);
          if (!sub_100E2B20C(v80, this, v85) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v84);
          int v86 = *((_DWORD *)this + 14);
          BOOL v44 = __OFSUB__(v86, 1);
          int v87 = v86 - 1;
          if (v87 < 0 == v44) {
            *((_DWORD *)this + 14) = v87;
          }
          unsigned int v76 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v88 = *((void *)this + 2);
        }
        while ((unint64_t)v76 < v88 && *v76 == 122);
        if ((int)v88 - (int)v76 < 2 || *v76 != 130 || v76[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v76 + 2;
LABEL_208:
        *(_DWORD *)(a1 + 172) |= 0x8000u;
        uint64_t v89 = *(void *)(a1 + 128);
        if (!v89) {
          operator new();
        }
        v108[0] = 0;
        int v90 = (char *)*((void *)this + 1);
        if ((unint64_t)v90 >= *((void *)this + 2) || *v90 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v108))return 0; {
        }
          }
        else
        {
          v108[0] = *v90;
          *((void *)this + 1) = v90 + 1;
        }
        int v91 = *((_DWORD *)this + 14);
        int v92 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v91 + 1;
        if (v91 >= v92) {
          return 0;
        }
        int v93 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v108[0]);
        if (!sub_100E2C054(v89, this, v94) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v93);
        int v95 = *((_DWORD *)this + 14);
        BOOL v44 = __OFSUB__(v95, 1);
        int v96 = v95 - 1;
        if (v96 < 0 == v44) {
          *((_DWORD *)this + 14) = v96;
        }
        int v97 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        if ((int)v24 - (int)v97 <= 1 || *v97 != 144 || v97[1] != 1) {
          continue;
        }
        unsigned int v25 = (char *)(v97 + 2);
        *((void *)this + 1) = v25;
LABEL_223:
        v108[0] = 0;
        if ((unint64_t)v25 >= v24 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v108);
          if (!result) {
            return result;
          }
          unsigned int v98 = v108[0];
        }
        else
        {
          unsigned int v98 = *v25;
          *((void *)this + 1) = v25 + 1;
        }
        if (v98 <= 4)
        {
          *(_DWORD *)(a1 + 172) |= 0x10000u;
          *(_DWORD *)(a1 + 136) = v98;
        }
        unsigned int v99 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v26 = *((void *)this + 2);
        if ((int)v26 - (int)v99 < 2 || *v99 != 152 || v99[1] != 1) {
          continue;
        }
        unsigned int v27 = (char *)(v99 + 2);
        *((void *)this + 1) = v27;
LABEL_234:
        v108[0] = 0;
        if ((unint64_t)v27 >= v26 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v108);
          if (!result) {
            return result;
          }
          unsigned int v100 = v108[0];
        }
        else
        {
          unsigned int v100 = *v27;
          *((void *)this + 1) = v27 + 1;
        }
        if (v100 <= 4)
        {
          *(_DWORD *)(a1 + 172) |= 0x20000u;
          *(_DWORD *)(a1 + 140) = v100;
        }
        int v101 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v28 = *((void *)this + 2);
        if ((int)v28 - (int)v101 < 2 || *v101 != 160 || v101[1] != 1) {
          continue;
        }
        uint64_t v29 = (char *)(v101 + 2);
        *((void *)this + 1) = v29;
LABEL_245:
        v108[0] = 0;
        if ((unint64_t)v29 >= v28 || *v29 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v108);
          if (!result) {
            return result;
          }
          unsigned int v102 = v108[0];
        }
        else
        {
          unsigned int v102 = *v29;
          *((void *)this + 1) = v29 + 1;
        }
        if (v102 <= 4)
        {
          *(_DWORD *)(a1 + 172) |= 0x40000u;
          *(_DWORD *)(a1 + 144) = v102;
        }
        long long v103 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v30 = *((void *)this + 2);
        if ((int)v30 - (int)v103 < 2 || *v103 != 168 || v103[1] != 1) {
          continue;
        }
        uint64_t v31 = (char *)(v103 + 2);
        *((void *)this + 1) = v31;
LABEL_256:
        v108[0] = 0;
        if ((unint64_t)v31 >= v30 || *v31 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v108);
          if (!result) {
            return result;
          }
          unsigned int v104 = v108[0];
        }
        else
        {
          unsigned int v104 = *v31;
          *((void *)this + 1) = v31 + 1;
        }
        if (v104 <= 4)
        {
          *(_DWORD *)(a1 + 172) |= 0x80000u;
          *(_DWORD *)(a1 + 148) = v104;
        }
        long long v105 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v32 = *((void *)this + 2);
        if ((int)v32 - (int)v105 < 2 || *v105 != 176 || v105[1] != 1) {
          continue;
        }
        uint64_t v33 = (char *)(v105 + 2);
        *((void *)this + 1) = v33;
LABEL_267:
        v108[0] = 0;
        if ((unint64_t)v33 >= v32 || *v33 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v108);
          if (!result) {
            return result;
          }
          unsigned int v106 = v108[0];
        }
        else
        {
          unsigned int v106 = *v33;
          *((void *)this + 1) = v33 + 1;
        }
        if (v106 <= 4)
        {
          *(_DWORD *)(a1 + 172) |= 0x100000u;
          *(_DWORD *)(a1 + 160) = v106;
        }
        int v107 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v107 < 2 || *v107 != 185 || v107[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v107 + 2;
LABEL_56:
        *(void *)uint64_t v108 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v108))
        {
          *(void *)(a1 + 152) = *(void *)v108;
          *(_DWORD *)(a1 + 172) |= 0x200000u;
          uint64_t v35 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v34 = *((void *)this + 2);
          if ((int)v34 - (int)v35 >= 2 && *v35 == 192 && v35[1] == 1)
          {
            uint64_t v36 = (char *)(v35 + 2);
            *((void *)this + 1) = v36;
LABEL_66:
            v108[0] = 0;
            if ((unint64_t)v36 >= v34 || *v36 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v108);
              if (!result) {
                return result;
              }
              unsigned int v37 = v108[0];
            }
            else
            {
              unsigned int v37 = *v36;
              *((void *)this + 1) = v36 + 1;
            }
            if (v37 <= 3)
            {
              *(_DWORD *)(a1 + 172) |= 0x400000u;
              *(_DWORD *)(a1 + 164) = v37;
            }
            if (*((void *)this + 1) == *((void *)this + 2)
              && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)this + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_62;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_90;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_100;
        }
        goto LABEL_62;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_118;
        }
        goto LABEL_62;
      case 6u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_122;
        }
        goto LABEL_62;
      case 7u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_126;
        }
        goto LABEL_62;
      case 8u:
        int v9 = TagFallback & 7;
        if (v9 == 5) {
          goto LABEL_130;
        }
        goto LABEL_62;
      case 9u:
        int v9 = TagFallback & 7;
        if (v9 == 5) {
          goto LABEL_134;
        }
        goto LABEL_62;
      case 0xAu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_62;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_138;
      case 0xBu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_62;
        }
        unsigned int v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_148;
      case 0xCu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_62;
        }
        unsigned int v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_158;
      case 0xDu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_62;
        }
        unsigned int v21 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_168;
      case 0xEu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_62;
        }
        uint64_t v23 = (char *)*((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        goto LABEL_178;
      case 0xFu:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_188;
        }
        goto LABEL_62;
      case 0x10u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_208;
        }
        goto LABEL_62;
      case 0x12u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_62;
        }
        unsigned int v25 = (char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_223;
      case 0x13u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_62;
        }
        unsigned int v27 = (char *)*((void *)this + 1);
        unint64_t v26 = *((void *)this + 2);
        goto LABEL_234;
      case 0x14u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_62;
        }
        uint64_t v29 = (char *)*((void *)this + 1);
        unint64_t v28 = *((void *)this + 2);
        goto LABEL_245;
      case 0x15u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_62;
        }
        uint64_t v31 = (char *)*((void *)this + 1);
        unint64_t v30 = *((void *)this + 2);
        goto LABEL_256;
      case 0x16u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_62;
        }
        uint64_t v33 = (char *)*((void *)this + 1);
        unint64_t v32 = *((void *)this + 2);
        goto LABEL_267;
      case 0x17u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_56;
        }
        goto LABEL_62;
      case 0x18u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_62;
        }
        uint64_t v36 = (char *)*((void *)this + 1);
        unint64_t v34 = *((void *)this + 2);
        goto LABEL_66;
      default:
        int v9 = TagFallback & 7;
LABEL_62:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100E2E060(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 172);
  if (v6)
  {
    uint64_t v11 = *(void *)(result + 8);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_10248AD60 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v11, a2, a4);
    int v6 = *(_DWORD *)(v5 + 172);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 16), a3);
  if ((*(_DWORD *)(v5 + 172) & 4) != 0) {
LABEL_4:
  }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 56), (int)a2, a4);
LABEL_5:
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(*(void *)(v5 + 24) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  int v8 = *(_DWORD *)(v5 + 172);
  if ((v8 & 0x10) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 48), a3);
    int v8 = *(_DWORD *)(v5 + 172);
    if ((v8 & 0x20) == 0)
    {
LABEL_10:
      if ((v8 & 0x40) == 0) {
        goto LABEL_11;
      }
      goto LABEL_38;
    }
  }
  else if ((v8 & 0x20) == 0)
  {
    goto LABEL_10;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 64), a3);
  int v8 = *(_DWORD *)(v5 + 172);
  if ((v8 & 0x40) == 0)
  {
LABEL_11:
    if ((v8 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(double *)(v5 + 72), a3);
  int v8 = *(_DWORD *)(v5 + 172);
  if ((v8 & 0x80) == 0)
  {
LABEL_12:
    if ((v8 & 0x100) == 0) {
      goto LABEL_13;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, *(float *)(v5 + 60), a3);
  int v8 = *(_DWORD *)(v5 + 172);
  if ((v8 & 0x100) == 0)
  {
LABEL_13:
    if ((v8 & 0x200) == 0) {
      goto LABEL_14;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(float *)(v5 + 80), a3);
  int v8 = *(_DWORD *)(v5 + 172);
  if ((v8 & 0x200) == 0)
  {
LABEL_14:
    if ((v8 & 0x400) == 0) {
      goto LABEL_15;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_DWORD *)(v5 + 84), (int)a2, a4);
  int v8 = *(_DWORD *)(v5 + 172);
  if ((v8 & 0x400) == 0)
  {
LABEL_15:
    if ((v8 & 0x800) == 0) {
      goto LABEL_16;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(_DWORD *)(v5 + 88), (int)a2, a4);
  int v8 = *(_DWORD *)(v5 + 172);
  if ((v8 & 0x800) == 0)
  {
LABEL_16:
    if ((v8 & 0x1000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(_DWORD *)(v5 + 92), (int)a2, a4);
  int v8 = *(_DWORD *)(v5 + 172);
  if ((v8 & 0x1000) == 0)
  {
LABEL_17:
    if ((v8 & 0x2000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
LABEL_44:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(_DWORD *)(v5 + 96), (int)a2, a4);
  if ((*(_DWORD *)(v5 + 172) & 0x2000) != 0) {
LABEL_18:
  }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(_DWORD *)(v5 + 100), (int)a2, a4);
LABEL_19:
  if (*(int *)(v5 + 112) >= 1)
  {
    uint64_t v9 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(void *)(*(void *)(v5 + 104) + 8 * v9++), a2, a4);
    while (v9 < *(int *)(v5 + 112));
  }
  int v10 = *(_DWORD *)(v5 + 172);
  if ((v10 & 0x8000) != 0)
  {
    uint64_t v12 = *(void *)(v5 + 128);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_10248AD60 + 128);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v12, a2, a4);
    int v10 = *(_DWORD *)(v5 + 172);
    if ((v10 & 0x10000) == 0)
    {
LABEL_24:
      if ((v10 & 0x20000) == 0) {
        goto LABEL_25;
      }
      goto LABEL_50;
    }
  }
  else if ((v10 & 0x10000) == 0)
  {
    goto LABEL_24;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, *(_DWORD *)(v5 + 136), (int)a2, a4);
  int v10 = *(_DWORD *)(v5 + 172);
  if ((v10 & 0x20000) == 0)
  {
LABEL_25:
    if ((v10 & 0x40000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, *(_DWORD *)(v5 + 140), (int)a2, a4);
  int v10 = *(_DWORD *)(v5 + 172);
  if ((v10 & 0x40000) == 0)
  {
LABEL_26:
    if ((v10 & 0x80000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, *(_DWORD *)(v5 + 144), (int)a2, a4);
  int v10 = *(_DWORD *)(v5 + 172);
  if ((v10 & 0x80000) == 0)
  {
LABEL_27:
    if ((v10 & 0x100000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, *(_DWORD *)(v5 + 148), (int)a2, a4);
  int v10 = *(_DWORD *)(v5 + 172);
  if ((v10 & 0x100000) == 0)
  {
LABEL_28:
    if ((v10 & 0x200000) == 0) {
      goto LABEL_29;
    }
LABEL_54:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, (int)a2, *(double *)(v5 + 152), a3);
    if ((*(_DWORD *)(v5 + 172) & 0x400000) == 0) {
      return result;
    }
    goto LABEL_55;
  }
LABEL_53:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, *(_DWORD *)(v5 + 160), (int)a2, a4);
  int v10 = *(_DWORD *)(v5 + 172);
  if ((v10 & 0x200000) != 0) {
    goto LABEL_54;
  }
LABEL_29:
  if ((v10 & 0x400000) == 0) {
    return result;
  }
LABEL_55:
  int v13 = *(_DWORD *)(v5 + 164);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, v13, (int)a2, a4);
}

uint64_t sub_100E2E378(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 172);
  if ((_BYTE)v3)
  {
    if (v3)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_10248AD60 + 8);
      }
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E1C2B0(v6, a2);
      int v8 = (int)v7;
      if (v7 >= 0x80) {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      }
      else {
        int v9 = 1;
      }
      int v4 = v8 + v9 + 1;
      int v3 = *(_DWORD *)(a1 + 172);
    }
    else
    {
      int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      int v10 = v4 + 9;
    }
    else {
      int v10 = v4;
    }
    if ((v3 & 4) != 0)
    {
      uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
      if ((v11 & 0x80000000) != 0)
      {
        int v12 = 10;
      }
      else if (v11 >= 0x80)
      {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
        int v3 = *(_DWORD *)(a1 + 172);
      }
      else
      {
        int v12 = 1;
      }
      v10 += v12 + 1;
    }
    int v13 = v10 + 9;
    if ((v3 & 0x10) == 0) {
      int v13 = v10;
    }
    if ((v3 & 0x20) != 0) {
      v13 += 9;
    }
    if ((v3 & 0x40) != 0) {
      v13 += 9;
    }
    if ((v3 & 0x80) != 0) {
      int v5 = v13 + 5;
    }
    else {
      int v5 = v13;
    }
  }
  else
  {
    int v5 = 0;
  }
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0) {
      v5 += 5;
    }
    if ((v3 & 0x200) != 0)
    {
      unint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 84);
      if ((v14 & 0x80000000) != 0)
      {
        int v15 = 10;
      }
      else if (v14 >= 0x80)
      {
        int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
        int v3 = *(_DWORD *)(a1 + 172);
      }
      else
      {
        int v15 = 1;
      }
      v5 += v15 + 1;
      if ((v3 & 0x400) == 0)
      {
LABEL_35:
        if ((v3 & 0x800) == 0) {
          goto LABEL_36;
        }
        goto LABEL_52;
      }
    }
    else if ((v3 & 0x400) == 0)
    {
      goto LABEL_35;
    }
    unint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 88);
    if ((v16 & 0x80000000) != 0)
    {
      int v17 = 10;
    }
    else if (v16 >= 0x80)
    {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
      int v3 = *(_DWORD *)(a1 + 172);
    }
    else
    {
      int v17 = 1;
    }
    v5 += v17 + 1;
    if ((v3 & 0x800) == 0)
    {
LABEL_36:
      if ((v3 & 0x1000) == 0) {
        goto LABEL_37;
      }
      goto LABEL_58;
    }
LABEL_52:
    unint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 92);
    if ((v18 & 0x80000000) != 0)
    {
      int v19 = 10;
    }
    else if (v18 >= 0x80)
    {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
      int v3 = *(_DWORD *)(a1 + 172);
    }
    else
    {
      int v19 = 1;
    }
    v5 += v19 + 1;
    if ((v3 & 0x1000) == 0)
    {
LABEL_37:
      if ((v3 & 0x2000) == 0) {
        goto LABEL_38;
      }
      goto LABEL_64;
    }
LABEL_58:
    unint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 96);
    if ((v20 & 0x80000000) != 0)
    {
      int v21 = 10;
    }
    else if (v20 >= 0x80)
    {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20, a2);
      int v3 = *(_DWORD *)(a1 + 172);
    }
    else
    {
      int v21 = 1;
    }
    v5 += v21 + 1;
    if ((v3 & 0x2000) == 0)
    {
LABEL_38:
      if ((v3 & 0x8000) == 0) {
        goto LABEL_76;
      }
LABEL_70:
      uint64_t v24 = *(void *)(a1 + 128);
      if (!v24) {
        uint64_t v24 = *(void *)(qword_10248AD60 + 128);
      }
      unsigned int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E2C778(v24);
      int v26 = (int)v25;
      if (v25 >= 0x80) {
        int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2);
      }
      else {
        int v27 = 1;
      }
      v5 += v26 + v27 + 2;
      int v3 = *(_DWORD *)(a1 + 172);
      goto LABEL_76;
    }
LABEL_64:
    unint64_t v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 100);
    if ((v22 & 0x80000000) != 0)
    {
      int v23 = 10;
    }
    else if (v22 >= 0x80)
    {
      int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, a2);
      int v3 = *(_DWORD *)(a1 + 172);
    }
    else
    {
      int v23 = 1;
    }
    v5 += v23 + 1;
    if ((v3 & 0x8000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_70;
  }
LABEL_76:
  if ((v3 & 0xFF0000) == 0) {
    goto LABEL_122;
  }
  if ((v3 & 0x10000) != 0)
  {
    unint64_t v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 136);
    if ((v28 & 0x80000000) != 0)
    {
      int v29 = 10;
    }
    else if (v28 >= 0x80)
    {
      int v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28, a2);
      int v3 = *(_DWORD *)(a1 + 172);
    }
    else
    {
      int v29 = 1;
    }
    v5 += v29 + 2;
    if ((v3 & 0x20000) == 0)
    {
LABEL_79:
      if ((v3 & 0x40000) == 0) {
        goto LABEL_80;
      }
      goto LABEL_95;
    }
  }
  else if ((v3 & 0x20000) == 0)
  {
    goto LABEL_79;
  }
  unint64_t v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 140);
  if ((v30 & 0x80000000) != 0)
  {
    int v31 = 10;
  }
  else if (v30 >= 0x80)
  {
    int v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30, a2);
    int v3 = *(_DWORD *)(a1 + 172);
  }
  else
  {
    int v31 = 1;
  }
  v5 += v31 + 2;
  if ((v3 & 0x40000) == 0)
  {
LABEL_80:
    if ((v3 & 0x80000) == 0) {
      goto LABEL_81;
    }
LABEL_101:
    unint64_t v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 148);
    if ((v34 & 0x80000000) != 0)
    {
      int v35 = 12;
    }
    else if (v34 >= 0x80)
    {
      int v35 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v34, a2) + 2;
      int v3 = *(_DWORD *)(a1 + 172);
    }
    else
    {
      int v35 = 3;
    }
    v5 += v35;
    if ((v3 & 0x100000) == 0) {
      goto LABEL_113;
    }
    goto LABEL_107;
  }
LABEL_95:
  unint64_t v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 144);
  if ((v32 & 0x80000000) != 0)
  {
    int v33 = 12;
  }
  else if (v32 >= 0x80)
  {
    int v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v32, a2) + 2;
    int v3 = *(_DWORD *)(a1 + 172);
  }
  else
  {
    int v33 = 3;
  }
  v5 += v33;
  if ((v3 & 0x80000) != 0) {
    goto LABEL_101;
  }
LABEL_81:
  if ((v3 & 0x100000) != 0)
  {
LABEL_107:
    uint64_t v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 160);
    if ((v36 & 0x80000000) != 0)
    {
      int v37 = 12;
    }
    else if (v36 >= 0x80)
    {
      int v37 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v36, a2) + 2;
      int v3 = *(_DWORD *)(a1 + 172);
    }
    else
    {
      int v37 = 3;
    }
    v5 += v37;
  }
LABEL_113:
  if ((v3 & 0x200000) != 0) {
    v5 += 10;
  }
  if ((v3 & 0x400000) != 0)
  {
    uint64_t v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 164);
    if ((v38 & 0x80000000) != 0)
    {
      int v39 = 12;
    }
    else if (v38 >= 0x80)
    {
      int v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v38, a2) + 2;
    }
    else
    {
      int v39 = 3;
    }
    v5 += v39;
  }
LABEL_122:
  int v40 = *(_DWORD *)(a1 + 32);
  int v41 = v40 + v5;
  if (v40 >= 1)
  {
    uint64_t v42 = 0;
    do
    {
      int v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E2BC48(*(void *)(*(void *)(a1 + 24) + 8 * v42));
      int v44 = (int)v43;
      if (v43 >= 0x80) {
        int v45 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v43, a2);
      }
      else {
        int v45 = 1;
      }
      v41 += v44 + v45;
      ++v42;
    }
    while (v42 < *(int *)(a1 + 32));
  }
  int v46 = *(_DWORD *)(a1 + 112);
  uint64_t v47 = (v46 + v41);
  if (v46 >= 1)
  {
    uint64_t v48 = 0;
    do
    {
      unsigned int v49 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E2B5C4(*(void *)(*(void *)(a1 + 104)+ 8 * v48), a2);
      int v50 = (int)v49;
      if (v49 >= 0x80) {
        int v51 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v49, a2);
      }
      else {
        int v51 = 1;
      }
      uint64_t v47 = (v50 + v47 + v51);
      ++v48;
    }
    while (v48 < *(int *)(a1 + 112));
  }
  *(_DWORD *)(a1 + 168) = v47;
  return v47;
}

void sub_100E2E7F4(uint64_t a1, void *lpsrc)
{
  sub_100E2C864(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E2E87C()
{
  return 1;
}

void *sub_100E2E884@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.SvInfo");
}

float sub_100E2E894(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 32);
  if (!(_BYTE)v5) {
    return *(float *)&v4;
  }
  if (*(unsigned char *)(a2 + 32))
  {
    unsigned int v6 = *(_DWORD *)(a2 + 16);
    if (v6 >= 0xD) {
      sub_101A905BC();
    }
    *(_DWORD *)(a1 + 32) |= 1u;
    *(_DWORD *)(a1 + 16) = v6;
    int v5 = *(_DWORD *)(a2 + 32);
  }
  if ((v5 & 2) == 0)
  {
    if ((v5 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_13:
    LODWORD(v4) = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 32) |= 4u;
    *(_DWORD *)(a1 + 20) = v4;
    if ((*(_DWORD *)(a2 + 32) & 8) == 0) {
      return *(float *)&v4;
    }
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 32) |= 2u;
  *(void *)(a1 + 8) = v4;
  int v5 = *(_DWORD *)(a2 + 32);
  if ((v5 & 4) != 0) {
    goto LABEL_13;
  }
LABEL_9:
  if ((v5 & 8) != 0)
  {
LABEL_10:
    LODWORD(v4) = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 8u;
    *(_DWORD *)(a1 + 24) = v4;
  }
  return *(float *)&v4;
}

void sub_100E2E990(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E2E9A8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FB278;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E2E9C8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FB278;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E2EA1C()
{
}

uint64_t sub_100E2EA6C(uint64_t result)
{
  if (*(unsigned char *)(result + 32))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_100E2EA84(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        v14[0] = 0;
        int v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v14);
          if (!result) {
            return result;
          }
          unsigned int v9 = v14[0];
        }
        else
        {
          unsigned int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
        }
        if (v9 <= 0xC)
        {
          *(_DWORD *)(a1 + 32) |= 1u;
          *(_DWORD *)(a1 + 16) = v9;
        }
        uint64_t v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 17)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_27;
        }
        continue;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_17;
        }
LABEL_27:
        *(void *)unint64_t v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v14) & 1) == 0)return 0; {
        *(void *)(a1 + 8) = *(void *)v14;
        }
        *(_DWORD *)(a1 + 32) |= 2u;
        int v12 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 != 29) {
          continue;
        }
        *((void *)this + 1) = v12 + 1;
LABEL_31:
        v14[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v14) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 20) = v14[0];
        *(_DWORD *)(a1 + 32) |= 4u;
        int v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 != 37) {
          continue;
        }
        *((void *)this + 1) = v13 + 1;
LABEL_35:
        v14[0] = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v14))
        {
          *(_DWORD *)(a1 + 24) = v14[0];
          *(_DWORD *)(a1 + 32) |= 8u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_31;
        }
        goto LABEL_17;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_17;
        }
        goto LABEL_35;
      default:
        int v7 = TagFallback & 7;
LABEL_17:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100E2ECF0(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(float *)(v5 + 20), a3);
      if ((*(_DWORD *)(v5 + 32) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v5 + 8), a3);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  float v7 = *(float *)(v5 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, a2, v7, a3);
}

uint64_t sub_100E2ED98(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 32);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 32))
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
      if ((v6 & 0x80000000) != 0)
      {
        unsigned int v4 = 11;
      }
      else if (v6 >= 0x80)
      {
        unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 32);
      }
      else
      {
        unsigned int v4 = 2;
      }
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 5;
    }
    if ((v3 & 8) != 0) {
      uint64_t result = v4 + 5;
    }
    else {
      uint64_t result = v4;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 28) = result;
  return result;
}

float sub_100E2EE28(uint64_t a1, void *lpsrc)
{
  return sub_100E2E894(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E2EEB0()
{
  return 1;
}

void *sub_100E2EEB8@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.ReceiverBandCorrections");
}

void sub_100E2EEC8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      uint64_t v5 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 24) |= 1u;
      *(void *)(a1 + 8) = v5;
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 24) |= 2u;
      *(_DWORD *)(a1 + 16) = v6;
    }
  }
}

void sub_100E2EF74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E2EF8C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FB2F0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E2EFAC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FB2F0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E2F000()
{
}

uint64_t sub_100E2F050(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    *(void *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_100E2F068(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)(a1 + 8);
  while (1)
  {
    while (1)
    {
      int v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        TagFallbacuint64_t k = *v6;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v6 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      uint64_t v11 = (char *)*((void *)this + 1);
      unint64_t v9 = *((void *)this + 2);
      if ((unint64_t)v11 >= v9 || *v11 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
        if (!result) {
          return result;
        }
        int v12 = (unsigned char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
      }
      else
      {
        unint64_t *v5 = *v11;
        int v12 = v11 + 1;
        *((void *)this + 1) = v12;
      }
      *(_DWORD *)(a1 + 24) |= 1u;
      if ((unint64_t)v12 < v9 && *v12 == 16)
      {
        int v10 = v12 + 1;
        *((void *)this + 1) = v10;
LABEL_24:
        unsigned int v16 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v16);
          if (!result) {
            return result;
          }
          unsigned int v13 = v16;
          unint64_t v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unsigned int v13 = *v10;
          unint64_t v14 = (unsigned __int8 *)(v10 + 1);
          *((void *)this + 1) = v14;
        }
        *(_DWORD *)(a1 + 16) = v13;
        *(_DWORD *)(a1 + 24) |= 2u;
        if (v14 == (unsigned __int8 *)v9 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v8 = TagFallback & 7;
    }
LABEL_16:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_100E2F214(uint64_t result, unint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = a2;
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(_DWORD *)(v5 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, v4, a4);
  }
  return result;
}

uint64_t sub_100E2F280(uint64_t a1, unint64_t a2)
{
  if (*(unsigned char *)(a1 + 24))
  {
    if (*(unsigned char *)(a1 + 24))
    {
      uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8), a2)+ 1;
      if ((*(_DWORD *)(a1 + 24) & 2) == 0) {
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v3 = 0;
      if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
        goto LABEL_13;
      }
    }
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v4 & 0x80000000) != 0)
    {
      int v5 = 11;
    }
    else if (v4 >= 0x80)
    {
      int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4, a2) + 1;
    }
    else
    {
      int v5 = 2;
    }
    uint64_t v3 = (v5 + v3);
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_13:
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_100E2F308(uint64_t a1, void *lpsrc)
{
  sub_100E2EEC8(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E2F390()
{
  return 1;
}

void *sub_100E2F398@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.LeapSecondChange");
}

void sub_100E2F3A8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      int v5 = *(_DWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 28) |= 1u;
      *(_DWORD *)(a1 + 8) = v5;
      int v4 = *(_DWORD *)(a2 + 28);
    }
    if ((v4 & 2) != 0)
    {
      unsigned int v6 = *(_DWORD *)(a2 + 12);
      if (v6 >= 5) {
        sub_101A905E8();
      }
      *(_DWORD *)(a1 + 28) |= 2u;
      *(_DWORD *)(a1 + 12) = v6;
      int v4 = *(_DWORD *)(a2 + 28);
    }
    if ((v4 & 4) != 0)
    {
      *(_DWORD *)(a1 + 28) |= 4u;
      uint64_t v7 = *(void *)(a1 + 16);
      if (!v7) {
        operator new();
      }
      uint64_t v8 = *(void *)(a2 + 16);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_10248AD78 + 16);
      }
      sub_100E2EEC8(v7, v8);
    }
  }
}

void sub_100E2F4D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E2F4EC(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022FB368;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_10248AD78 != this)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_100E2F57C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_100E2F4EC(a1);

  operator delete();
}

void sub_100E2F5B4()
{
}

uint64_t sub_100E2F600(uint64_t result)
{
  char v1 = *(unsigned char *)(result + 28);
  if (v1)
  {
    *(void *)(result + 8) = 0;
    if ((v1 & 4) != 0)
    {
      uint64_t v2 = *(void *)(result + 16);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 24))
        {
          *(void *)(v2 + 8) = 0;
          *(_DWORD *)(v2 + 16) = 0;
        }
        *(_DWORD *)(v2 + 24) = 0;
      }
    }
  }
  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_100E2F634(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 8);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          unsigned int v6 = (char *)*((void *)this + 1);
          if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
          {
            TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            TagFallbacuint64_t k = *v6;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v6 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v8 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v9 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_19;
          }
          uint64_t v11 = (char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v11 >= v10 || *v11 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
            if (!result) {
              return result;
            }
            int v12 = (unsigned char *)*((void *)this + 1);
            unint64_t v10 = *((void *)this + 2);
          }
          else
          {
            unsigned int *v5 = *v11;
            int v12 = v11 + 1;
            *((void *)this + 1) = v12;
          }
          *(_DWORD *)(a1 + 28) |= 1u;
          if ((unint64_t)v12 < v10 && *v12 == 16)
          {
            unsigned int v13 = v12 + 1;
            *((void *)this + 1) = v13;
            goto LABEL_27;
          }
        }
        if (v8 != 2) {
          break;
        }
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unsigned int v13 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_27:
        unsigned int v26 = 0;
        if ((unint64_t)v13 >= v10 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26);
          if (!result) {
            return result;
          }
          unsigned int v15 = v26;
        }
        else
        {
          unsigned int v15 = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        if (v15 <= 4)
        {
          *(_DWORD *)(a1 + 28) |= 2u;
          *(_DWORD *)(a1 + 12) = v15;
        }
        unsigned int v16 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v16 < *((void *)this + 2) && *v16 == 26)
        {
          *((void *)this + 1) = v16 + 1;
          goto LABEL_37;
        }
      }
      if (v8 != 3)
      {
        int v9 = TagFallback & 7;
        goto LABEL_19;
      }
      int v9 = TagFallback & 7;
      if (v9 == 2) {
        break;
      }
LABEL_19:
      if (v9 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
LABEL_37:
    *(_DWORD *)(a1 + 28) |= 4u;
    uint64_t v17 = *(void *)(a1 + 16);
    if (!v17) {
      operator new();
    }
    unsigned int v27 = 0;
    unint64_t v18 = (char *)*((void *)this + 1);
    if ((unint64_t)v18 >= *((void *)this + 2) || *v18 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27)) {
        return 0;
      }
    }
    else
    {
      unsigned int v27 = *v18;
      *((void *)this + 1) = v18 + 1;
    }
    int v19 = *((_DWORD *)this + 14);
    int v20 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v19 + 1;
    if (v19 >= v20) {
      return 0;
    }
    int v21 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27);
    if (!sub_100E2F068(v17, this, v22) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v21);
    int v23 = *((_DWORD *)this + 14);
    BOOL v24 = __OFSUB__(v23, 1);
    int v25 = v23 - 1;
    if (v25 < 0 == v24) {
      *((_DWORD *)this + 14) = v25;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_100E2F914(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 28) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
  int v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248AD78 + 16);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t sub_100E2F9B0(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 28);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_23;
  }
  if (*(unsigned char *)(a1 + 28))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 28);
      if ((v3 & 2) == 0) {
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_16;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 28) & 2) == 0) {
      goto LABEL_16;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if ((v6 & 0x80000000) != 0)
  {
    int v7 = 11;
  }
  else if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 28);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_16:
  if ((v3 & 4) != 0)
  {
    uint64_t v8 = *(void *)(a1 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_10248AD78 + 16);
    }
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E2F280(v8, a2);
    int v11 = (int)v9;
    if (v9 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, v10);
    }
    else {
      int v12 = 1;
    }
    uint64_t v4 = (v4 + v11 + v12 + 1);
  }
LABEL_23:
  *(_DWORD *)(a1 + 24) = v4;
  return v4;
}

void sub_100E2FA9C(uint64_t a1, void *lpsrc)
{
  sub_100E2F3A8(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E2FB24()
{
  return 1;
}

void *sub_100E2FB2C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.LeapSecondInfo");
}

double sub_100E2FB3C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 44);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 44))
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 44) |= 1u;
      *(void *)(a1 + 8) = v6;
      int v5 = *(_DWORD *)(a2 + 44);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((*(unsigned char *)(a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 44) |= 2u;
    *(double *)(a1 + 16) = result;
    int v5 = *(_DWORD *)(a2 + 44);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        return result;
      }
      goto LABEL_8;
    }
LABEL_12:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 44) |= 4u;
    *(double *)(a1 + 24) = result;
    if ((*(_DWORD *)(a2 + 44) & 8) == 0) {
      return result;
    }
LABEL_8:
    double result = *(double *)(a2 + 32);
    *(_DWORD *)(a1 + 44) |= 8u;
    *(double *)(a1 + 32) = result;
  }
  return result;
}

void sub_100E2FC30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E2FC48(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FB3E0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E2FC68(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FB3E0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E2FCBC()
{
}

uint64_t sub_100E2FD14(uint64_t result)
{
  if (*(unsigned char *)(result + 44))
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  *(_DWORD *)(result + 44) = 0;
  return result;
}

uint64_t sub_100E2FD30(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unint64_t *)(a1 + 8);
  while (2)
  {
    uint64_t v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        unsigned int v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unint64_t *v5 = *v10;
          int v11 = v10 + 1;
          *((void *)this + 1) = v11;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 17)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_26;
        }
        continue;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_18;
        }
LABEL_26:
        unint64_t v15 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v15) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v15;
        *(_DWORD *)(a1 + 44) |= 2u;
        unsigned int v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 != 25) {
          continue;
        }
        *((void *)this + 1) = v13 + 1;
LABEL_30:
        unint64_t v15 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v15) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 24) = v15;
        *(_DWORD *)(a1 + 44) |= 4u;
        unint64_t v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 != 33) {
          continue;
        }
        *((void *)this + 1) = v14 + 1;
LABEL_34:
        unint64_t v15 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v15))
        {
          *(void *)(a1 + 32) = v15;
          *(_DWORD *)(a1 + 44) |= 8u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_30;
        }
        goto LABEL_18;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_18;
        }
        goto LABEL_34;
      default:
        int v8 = TagFallback & 7;
LABEL_18:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100E2FF98(uint64_t result, unint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = a2;
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 44);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v4, *(double *)(v5 + 24), a3);
      if ((*(_DWORD *)(v5 + 44) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v4, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  double v7 = *(double *)(v5 + 32);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v4, v7, a3);
}

uint64_t sub_100E30040(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 44);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 44))
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8), a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 44);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      uint64_t result = v4 + 9;
    }
    else {
      uint64_t result = v4;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

double sub_100E300B4(uint64_t a1, void *lpsrc)
{
  return sub_100E2FB3C(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E3013C()
{
  return 1;
}

void *sub_100E30144@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.GpsToUtcConversion");
}

double sub_100E30154(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      int v6 = *(_DWORD *)(a2 + 24);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(_DWORD *)(a1 + 24) = v6;
      int v5 = *(_DWORD *)(a2 + 32);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_14;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    *(_DWORD *)(a1 + 32) |= 2u;
    uint64_t v7 = *(void *)(a1 + 8);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = *(void *)(a2 + 8);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_10248AD88 + 8);
    }
    sub_100E2F3A8(v7, v8);
    if ((*(_DWORD *)(a2 + 32) & 4) != 0)
    {
LABEL_14:
      *(_DWORD *)(a1 + 32) |= 4u;
      uint64_t v9 = *(void *)(a1 + 16);
      if (!v9) {
        operator new();
      }
      uint64_t v10 = *(void *)(a2 + 16);
      if (!v10) {
        uint64_t v10 = *(void *)(qword_10248AD88 + 16);
      }
      return sub_100E2FB3C(v9, v10);
    }
  }
  return result;
}

void sub_100E302DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_100E302F4(void *result)
{
  if ((void *)qword_10248AD88 != result)
  {
    char v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    double result = (void *)v1[2];
    if (result)
    {
      int v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_100E30394(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FB458;
  sub_100E302F4(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E303E8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FB458;
  sub_100E302F4(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E30450()
{
}

uint64_t sub_100E304A0(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(unsigned char *)(result + 32);
  if ((_BYTE)v2)
  {
    *(_DWORD *)(result + 24) = 0;
    if ((v2 & 2) != 0)
    {
      double result = *(void *)(result + 8);
      if (result)
      {
        double result = sub_100E2F600(result);
        int v2 = *(_DWORD *)(v1 + 32);
      }
    }
    if ((v2 & 4) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 44))
        {
          *(_OWORD *)(v3 + 24) = 0u;
          *(_OWORD *)(v3 + 8) = 0u;
        }
        *(_DWORD *)(v3 + 44) = 0;
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  return result;
}

uint64_t sub_100E30508(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 24);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          int v6 = (char *)*((void *)this + 1);
          if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
          {
            TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            TagFallbacuint64_t k = *v6;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v6 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v8 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v9 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_19;
          }
          int v11 = (char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v11 >= v10 || *v11 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
            if (!result) {
              return result;
            }
            int v12 = (unsigned char *)*((void *)this + 1);
            unint64_t v10 = *((void *)this + 2);
          }
          else
          {
            unsigned int *v5 = *v11;
            int v12 = v11 + 1;
            *((void *)this + 1) = v12;
          }
          int v13 = *(_DWORD *)(a1 + 32) | 1;
          *(_DWORD *)(a1 + 32) = v13;
          if ((unint64_t)v12 < v10 && *v12 == 18)
          {
            *((void *)this + 1) = v12 + 1;
            goto LABEL_27;
          }
        }
        if (v8 != 2) {
          break;
        }
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_19;
        }
        int v13 = *(_DWORD *)(a1 + 32);
LABEL_27:
        *(_DWORD *)(a1 + 32) = v13 | 2;
        uint64_t v15 = *(void *)(a1 + 8);
        if (!v15) {
          operator new();
        }
        unsigned int v33 = 0;
        unsigned int v16 = (char *)*((void *)this + 1);
        if ((unint64_t)v16 >= *((void *)this + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v33))return 0; {
        }
          }
        else
        {
          unsigned int v33 = *v16;
          *((void *)this + 1) = v16 + 1;
        }
        int v17 = *((_DWORD *)this + 14);
        int v18 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v17 + 1;
        if (v17 >= v18) {
          return 0;
        }
        int v19 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v33);
        if (!sub_100E2F634(v15, this, v20) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v19);
        int v21 = *((_DWORD *)this + 14);
        BOOL v22 = __OFSUB__(v21, 1);
        int v23 = v21 - 1;
        if (v23 < 0 == v22) {
          *((_DWORD *)this + 14) = v23;
        }
        BOOL v24 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v24 < *((void *)this + 2) && *v24 == 26)
        {
          *((void *)this + 1) = v24 + 1;
          goto LABEL_41;
        }
      }
      if (v8 != 3) {
        break;
      }
      int v9 = TagFallback & 7;
      if (v9 != 2) {
        goto LABEL_19;
      }
LABEL_41:
      *(_DWORD *)(a1 + 32) |= 4u;
      uint64_t v25 = *(void *)(a1 + 16);
      if (!v25) {
        operator new();
      }
      unsigned int v34 = 0;
      unsigned int v26 = (char *)*((void *)this + 1);
      if ((unint64_t)v26 >= *((void *)this + 2) || *v26 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v34))return 0; {
      }
        }
      else
      {
        unsigned int v34 = *v26;
        *((void *)this + 1) = v26 + 1;
      }
      int v27 = *((_DWORD *)this + 14);
      int v28 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v27 + 1;
      if (v27 >= v28) {
        return 0;
      }
      int v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34);
      if (!sub_100E2FD30(v25, this, v30) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
      int v31 = *((_DWORD *)this + 14);
      BOOL v22 = __OFSUB__(v31, 1);
      int v32 = v31 - 1;
      if (v32 < 0 == v22) {
        *((_DWORD *)this + 14) = v32;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v9 = TagFallback & 7;
LABEL_19:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_100E30888(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 24), a2, a4);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248AD88 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 32) & 4) != 0)
  {
LABEL_9:
    uint64_t v8 = *(void *)(v5 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_10248AD88 + 16);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  }
  return result;
}

uint64_t sub_100E30934(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 32);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_23;
  }
  if ((*(unsigned char *)(a1 + 32) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 32) & 2) == 0) {
      goto LABEL_16;
    }
LABEL_10:
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10248AD88 + 8);
    }
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E2F9B0(v6, a2);
    int v8 = (int)v7;
    if (v7 >= 0x80) {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
    }
    else {
      int v9 = 1;
    }
    uint64_t v4 = (v4 + v8 + v9 + 1);
    int v3 = *(_DWORD *)(a1 + 32);
    goto LABEL_16;
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v5 >= 0x80)
  {
    uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 32);
    if ((v3 & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_10;
  }
  uint64_t v4 = 2;
  if ((v3 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_16:
  if ((v3 & 4) != 0)
  {
    uint64_t v10 = *(void *)(a1 + 16);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_10248AD88 + 16);
    }
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E30040(v10, a2);
    int v13 = (int)v11;
    if (v11 >= 0x80) {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, v12);
    }
    else {
      int v14 = 1;
    }
    uint64_t v4 = (v4 + v13 + v14 + 1);
  }
LABEL_23:
  *(_DWORD *)(a1 + 28) = v4;
  return v4;
}

double sub_100E30A34(uint64_t a1, void *lpsrc)
{
  return sub_100E30154(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E30ABC()
{
  return 1;
}

void *sub_100E30AC4@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.GpsTimeInfo");
}

double sub_100E30AD4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 28) |= 1u;
      *(void *)(a1 + 8) = v6;
      int v5 = *(_DWORD *)(a2 + 28);
    }
    if ((v5 & 2) != 0)
    {
      double result = *(double *)(a2 + 16);
      *(_DWORD *)(a1 + 28) |= 2u;
      *(double *)(a1 + 16) = result;
    }
  }
  return result;
}

void sub_100E30B80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E30B98(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FB4D0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E30BB8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FB4D0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E30C0C()
{
}

uint64_t sub_100E30C58(uint64_t result)
{
  if (*(unsigned char *)(result + 28))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_100E30C6C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unint64_t *)(a1 + 8);
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = (char *)*((void *)this + 1);
        if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
        {
          TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacuint64_t k = *v6;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v6 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_16;
        }
        uint64_t v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unint64_t *v5 = *v10;
          int v11 = v10 + 1;
          *((void *)this + 1) = v11;
        }
        *(_DWORD *)(a1 + 28) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 17)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_24;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 1) {
        goto LABEL_16;
      }
LABEL_24:
      unint64_t v13 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v13) & 1) == 0) {
        return 0;
      }
      *(void *)(a1 + 16) = v13;
      *(_DWORD *)(a1 + 28) |= 2u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v8 = TagFallback & 7;
LABEL_16:
    if (v8 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return 0;
}

uint64_t sub_100E30DF8(uint64_t result, unint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = a2;
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 28);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if ((v6 & 2) != 0)
  {
    double v7 = *(double *)(v5 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v4, v7, a3);
  }
  return result;
}

uint64_t sub_100E30E64(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 28);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 28))
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8), a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 28);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      uint64_t result = v4 + 9;
    }
    else {
      uint64_t result = v4;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 24) = result;
  return result;
}

double sub_100E30EC0(uint64_t a1, void *lpsrc)
{
  return sub_100E30AD4(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E30F48()
{
  return 1;
}

void *sub_100E30F50@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.GlonassSubsecondConversion");
}

double sub_100E30F60(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 40);
  if (!(_BYTE)v5) {
    return result;
  }
  if (*(unsigned char *)(a2 + 40))
  {
    int v6 = *(_DWORD *)(a2 + 8);
    *(_DWORD *)(a1 + 40) |= 1u;
    *(_DWORD *)(a1 + 8) = v6;
    int v5 = *(_DWORD *)(a2 + 40);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_12:
      unsigned int v8 = *(_DWORD *)(a2 + 32);
      if (v8 >= 6) {
        sub_101A90614();
      }
      *(_DWORD *)(a1 + 40) |= 4u;
      *(_DWORD *)(a1 + 32) = v8;
      int v5 = *(_DWORD *)(a2 + 40);
      if ((v5 & 8) == 0)
      {
LABEL_8:
        if ((v5 & 0x10) == 0) {
          return result;
        }
        goto LABEL_19;
      }
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(a2 + 40) & 2) == 0)
  {
    goto LABEL_6;
  }
  int v7 = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 40) |= 2u;
  *(_DWORD *)(a1 + 12) = v7;
  int v5 = *(_DWORD *)(a2 + 40);
  if ((v5 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_7:
  if ((v5 & 8) == 0) {
    goto LABEL_8;
  }
LABEL_14:
  *(_DWORD *)(a1 + 40) |= 8u;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9) {
    operator new();
  }
  uint64_t v10 = *(void *)(a2 + 16);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_10248AD98 + 16);
  }
  double result = sub_100E30AD4(v9, v10);
  if ((*(_DWORD *)(a2 + 40) & 0x10) != 0)
  {
LABEL_19:
    *(_DWORD *)(a1 + 40) |= 0x10u;
    uint64_t v11 = *(void *)(a1 + 24);
    if (!v11) {
      operator new();
    }
    uint64_t v12 = *(void *)(a2 + 24);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_10248AD98 + 24);
    }
    return sub_100E30AD4(v11, v12);
  }
  return result;
}

void sub_100E31128(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_100E31140(void *result)
{
  if ((void *)qword_10248AD98 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    double result = (void *)v1[3];
    if (result)
    {
      int v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_100E311E0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FB548;
  sub_100E31140(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E31234(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FB548;
  sub_100E31140(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E3129C()
{
}

uint64_t sub_100E312F4(uint64_t result)
{
  LOBYTE(v1) = *(unsigned char *)(result + 40);
  if ((_BYTE)v1)
  {
    *(void *)(result + 8) = 0;
    *(_DWORD *)(result + 32) = 0;
    if ((v1 & 8) != 0)
    {
      uint64_t v2 = *(void *)(result + 16);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 28))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
        }
        *(_DWORD *)(v2 + 28) = 0;
        int v1 = *(_DWORD *)(result + 40);
      }
    }
    if ((v1 & 0x10) != 0)
    {
      uint64_t v3 = *(void *)(result + 24);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 28))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 28) = 0;
      }
    }
  }
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_100E31348(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 8);
  int v6 = (unsigned int *)(a1 + 12);
  while (2)
  {
    int v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        uint64_t v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          uint64_t v12 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v11;
          uint64_t v12 = v11 + 1;
          *((void *)this + 1) = v12;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        if ((unint64_t)v12 < v10 && *v12 == 16)
        {
          unint64_t v13 = v12 + 1;
          *((void *)this + 1) = v13;
          goto LABEL_28;
        }
        continue;
      case 2u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        unint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_28:
        if ((unint64_t)v13 >= v10 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          unsigned int v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v13;
          unsigned int v16 = v13 + 1;
          *((void *)this + 1) = v16;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        if ((unint64_t)v16 >= v10 || *v16 != 24) {
          continue;
        }
        int v14 = v16 + 1;
        *((void *)this + 1) = v14;
LABEL_36:
        unsigned int v37 = 0;
        if ((unint64_t)v14 >= v10 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v37);
          if (!result) {
            return result;
          }
          unsigned int v17 = v37;
        }
        else
        {
          unsigned int v17 = *v14;
          *((void *)this + 1) = v14 + 1;
        }
        if (v17 <= 5)
        {
          *(_DWORD *)(a1 + 40) |= 4u;
          *(_DWORD *)(a1 + 32) = v17;
        }
        int v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 != 34) {
          continue;
        }
        *((void *)this + 1) = v18 + 1;
LABEL_46:
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v19 = *(void *)(a1 + 16);
        if (!v19) {
          operator new();
        }
        unsigned int v38 = 0;
        unsigned int v20 = (char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v38))return 0; {
        }
          }
        else
        {
          unsigned int v38 = *v20;
          *((void *)this + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)this + 14);
        int v22 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v21 + 1;
        if (v21 >= v22) {
          return 0;
        }
        int v23 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v38);
        if (!sub_100E30C6C(v19, this, v24) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v23);
        int v25 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v25, 1);
        int v27 = v25 - 1;
        if (v27 < 0 == v26) {
          *((_DWORD *)this + 14) = v27;
        }
        int v28 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 != 42) {
          continue;
        }
        *((void *)this + 1) = v28 + 1;
LABEL_60:
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v29 = *(void *)(a1 + 24);
        if (!v29) {
          operator new();
        }
        unsigned int v39 = 0;
        unsigned int v30 = (char *)*((void *)this + 1);
        if ((unint64_t)v30 >= *((void *)this + 2) || *v30 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v39))return 0; {
        }
          }
        else
        {
          unsigned int v39 = *v30;
          *((void *)this + 1) = v30 + 1;
        }
        int v31 = *((_DWORD *)this + 14);
        int v32 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v31 + 1;
        if (v31 < v32)
        {
          int v33 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v39);
          if (sub_100E30C6C(v29, this, v34))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v33);
              int v35 = *((_DWORD *)this + 14);
              BOOL v26 = __OFSUB__(v35, 1);
              int v36 = v35 - 1;
              if (v36 < 0 == v26) {
                *((_DWORD *)this + 14) = v36;
              }
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_36;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_46;
        }
        goto LABEL_20;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_20;
        }
        goto LABEL_60;
      default:
        int v9 = TagFallback & 7;
LABEL_20:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100E317D8(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 40);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 32), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_10:
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248AD98 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 40) & 0x10) != 0)
  {
LABEL_13:
    uint64_t v8 = *(void *)(v5 + 24);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_10248AD98 + 24);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v8, a2, a4);
  }
  return result;
}

uint64_t sub_100E318BC(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 40);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_36;
  }
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 40);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 40) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 40);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if ((v8 & 0x80000000) != 0)
    {
      int v9 = 11;
    }
    else if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 40);
    }
    else
    {
      int v9 = 2;
    }
    uint64_t v4 = (v9 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_16:
      if ((v3 & 0x10) == 0) {
        goto LABEL_36;
      }
      goto LABEL_30;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_16;
  }
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_10248AD98 + 16);
  }
  uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E30E64(v10, a2);
  int v12 = (int)v11;
  if (v11 >= 0x80) {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
  }
  else {
    int v13 = 1;
  }
  uint64_t v4 = (v4 + v12 + v13 + 1);
  if ((*(_DWORD *)(a1 + 40) & 0x10) != 0)
  {
LABEL_30:
    uint64_t v14 = *(void *)(a1 + 24);
    if (!v14) {
      uint64_t v14 = *(void *)(qword_10248AD98 + 24);
    }
    uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E30E64(v14, a2);
    int v17 = (int)v15;
    if (v15 >= 0x80) {
      int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, v16);
    }
    else {
      int v18 = 1;
    }
    uint64_t v4 = (v4 + v17 + v18 + 1);
  }
LABEL_36:
  *(_DWORD *)(a1 + 36) = v4;
  return v4;
}

double sub_100E31A24(uint64_t a1, void *lpsrc)
{
  return sub_100E30F60(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E31AAC()
{
  return 1;
}

void *sub_100E31AB4@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.GlonassTimeInfo");
}

double sub_100E31AC4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(void *)(a1 + 8) = v6;
      int v5 = *(_DWORD *)(a2 + 36);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(double *)(a1 + 16) = result;
    if ((*(_DWORD *)(a2 + 36) & 4) == 0) {
      return result;
    }
LABEL_7:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 4u;
    *(double *)(a1 + 24) = result;
  }
  return result;
}

void sub_100E31B98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E31BB0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FB5C0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E31BD0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FB5C0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E31C24()
{
}

uint64_t sub_100E31C78(uint64_t result)
{
  if (*(unsigned char *)(result + 36))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_100E31C90(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unint64_t *)(a1 + 8);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v6 = (char *)*((void *)this + 1);
          if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
          {
            TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            TagFallbacuint64_t k = *v6;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v6 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v8 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v9 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_19;
          }
          uint64_t v11 = (char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v11 >= v10 || *v11 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
            if (!result) {
              return result;
            }
            int v12 = (unsigned char *)*((void *)this + 1);
            unint64_t v10 = *((void *)this + 2);
          }
          else
          {
            unint64_t *v5 = *v11;
            int v12 = v11 + 1;
            *((void *)this + 1) = v12;
          }
          *(_DWORD *)(a1 + 36) |= 1u;
          if ((unint64_t)v12 < v10 && *v12 == 17)
          {
            *((void *)this + 1) = v12 + 1;
            goto LABEL_27;
          }
        }
        if (v8 != 2) {
          break;
        }
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_19;
        }
LABEL_27:
        unint64_t v15 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v15) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v15;
        *(_DWORD *)(a1 + 36) |= 2u;
        uint64_t v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 < *((void *)this + 2) && *v14 == 25)
        {
          *((void *)this + 1) = v14 + 1;
          goto LABEL_31;
        }
      }
      if (v8 != 3) {
        break;
      }
      int v9 = TagFallback & 7;
      if (v9 != 1) {
        goto LABEL_19;
      }
LABEL_31:
      unint64_t v15 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v15) & 1) == 0) {
        return 0;
      }
      *(void *)(a1 + 24) = v15;
      *(_DWORD *)(a1 + 36) |= 4u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v9 = TagFallback & 7;
LABEL_19:
    if (v9 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return 0;
}

uint64_t sub_100E31E7C(uint64_t result, unint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = a2;
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v4, *(double *)(v5 + 16), a3);
    if ((*(_DWORD *)(v5 + 36) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  double v7 = *(double *)(v5 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v4, v7, a3);
}

uint64_t sub_100E31F08(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 36))
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8), a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      uint64_t result = v4 + 9;
    }
    else {
      uint64_t result = v4;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 32) = result;
  return result;
}

double sub_100E31F70(uint64_t a1, void *lpsrc)
{
  return sub_100E31AC4(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E31FF8()
{
  return 1;
}

void *sub_100E32000@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.SubSecondConversion");
}

double sub_100E32010(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 56);
  if (!(_BYTE)v5) {
    return result;
  }
  if (*(unsigned char *)(a2 + 56))
  {
    int v6 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 56) |= 1u;
    *(_DWORD *)(a1 + 48) = v6;
    int v5 = *(_DWORD *)(a2 + 56);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_17;
    }
  }
  else if ((*(unsigned char *)(a2 + 56) & 2) == 0)
  {
    goto LABEL_6;
  }
  *(_DWORD *)(a1 + 56) |= 2u;
  uint64_t v7 = *(void *)(a1 + 8);
  if (!v7) {
    operator new();
  }
  uint64_t v8 = *(void *)(a2 + 8);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_10248ADA8 + 8);
  }
  sub_100E2F3A8(v7, v8);
  int v5 = *(_DWORD *)(a2 + 56);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
LABEL_22:
    *(_DWORD *)(a1 + 56) |= 8u;
    uint64_t v11 = *(void *)(a1 + 24);
    if (!v11) {
      operator new();
    }
    uint64_t v12 = *(void *)(a2 + 24);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_10248ADA8 + 24);
    }
    double result = sub_100E31AC4(v11, v12);
    int v5 = *(_DWORD *)(a2 + 56);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0) {
        return result;
      }
      goto LABEL_32;
    }
    goto LABEL_27;
  }
LABEL_17:
  *(_DWORD *)(a1 + 56) |= 4u;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9) {
    operator new();
  }
  uint64_t v10 = *(void *)(a2 + 16);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_10248ADA8 + 16);
  }
  double result = sub_100E31AC4(v9, v10);
  int v5 = *(_DWORD *)(a2 + 56);
  if ((v5 & 8) != 0) {
    goto LABEL_22;
  }
LABEL_8:
  if ((v5 & 0x10) == 0) {
    goto LABEL_9;
  }
LABEL_27:
  *(_DWORD *)(a1 + 56) |= 0x10u;
  uint64_t v13 = *(void *)(a1 + 32);
  if (!v13) {
    operator new();
  }
  uint64_t v14 = *(void *)(a2 + 32);
  if (!v14) {
    uint64_t v14 = *(void *)(qword_10248ADA8 + 32);
  }
  double result = sub_100E31AC4(v13, v14);
  if ((*(_DWORD *)(a2 + 56) & 0x20) != 0)
  {
LABEL_32:
    *(_DWORD *)(a1 + 56) |= 0x20u;
    uint64_t v15 = *(void *)(a1 + 40);
    if (!v15) {
      operator new();
    }
    uint64_t v16 = *(void *)(a2 + 40);
    if (!v16) {
      uint64_t v16 = *(void *)(qword_10248ADA8 + 40);
    }
    return sub_100E31AC4(v15, v16);
  }
  return result;
}

void sub_100E32308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_100E32320(void *result)
{
  if ((void *)qword_10248ADA8 != result)
  {
    int v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[3];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = v1[4];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    double result = (void *)v1[5];
    if (result)
    {
      int v6 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v6();
    }
  }
  return result;
}

void sub_100E32444(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FB638;
  sub_100E32320(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E32498(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FB638;
  sub_100E32320(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E32500()
{
}

uint64_t sub_100E3255C(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(unsigned char *)(result + 56);
  if ((_BYTE)v2)
  {
    *(_DWORD *)(result + 48) = 0;
    if ((v2 & 2) != 0)
    {
      double result = *(void *)(result + 8);
      if (result)
      {
        double result = sub_100E2F600(result);
        int v2 = *(_DWORD *)(v1 + 56);
      }
    }
    if ((v2 & 4) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(v1 + 56);
      }
    }
    if ((v2 & 8) != 0)
    {
      uint64_t v4 = *(void *)(v1 + 24);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 36))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
          *(void *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 36) = 0;
        int v2 = *(_DWORD *)(v1 + 56);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      uint64_t v5 = *(void *)(v1 + 32);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 36))
        {
          *(void *)(v5 + 8) = 0;
          *(void *)(v5 + 16) = 0;
          *(void *)(v5 + 24) = 0;
        }
        *(_DWORD *)(v5 + 36) = 0;
        int v2 = *(_DWORD *)(v1 + 56);
      }
    }
    if ((v2 & 0x20) != 0)
    {
      uint64_t v6 = *(void *)(v1 + 40);
      if (v6)
      {
        if (*(unsigned char *)(v6 + 36))
        {
          *(void *)(v6 + 8) = 0;
          *(void *)(v6 + 16) = 0;
          *(void *)(v6 + 24) = 0;
        }
        *(_DWORD *)(v6 + 36) = 0;
      }
    }
  }
  *(_DWORD *)(v1 + 56) = 0;
  return result;
}

uint64_t sub_100E3262C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)(a1 + 48);
  while (1)
  {
    uint64_t v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 < *((void *)this + 2) && (*v6 & 0x80000000) == 0)
    {
      TagFallbacuint64_t k = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        uint64_t v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          uint64_t v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v10;
          uint64_t v11 = v10 + 1;
          *((void *)this + 1) = v11;
        }
        int v12 = *(_DWORD *)(a1 + 56) | 1;
        *(_DWORD *)(a1 + 56) = v12;
        if ((unint64_t)v11 < v9 && *v11 == 18)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_30;
        }
        continue;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_22;
        }
        int v12 = *(_DWORD *)(a1 + 56);
LABEL_30:
        *(_DWORD *)(a1 + 56) = v12 | 2;
        uint64_t v14 = *(void *)(a1 + 8);
        if (!v14) {
          operator new();
        }
        unsigned int v59 = 0;
        uint64_t v15 = (char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v59))return 0; {
        }
          }
        else
        {
          unsigned int v59 = *v15;
          *((void *)this + 1) = v15 + 1;
        }
        int v16 = *((_DWORD *)this + 14);
        int v17 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v16 + 1;
        if (v16 >= v17) {
          return 0;
        }
        int v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v59);
        if (!sub_100E2F634(v14, this, v19) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
        int v20 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v20, 1);
        int v22 = v20 - 1;
        if (v22 < 0 == v21) {
          *((_DWORD *)this + 14) = v22;
        }
        int v23 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 != 26) {
          continue;
        }
        *((void *)this + 1) = v23 + 1;
LABEL_44:
        *(_DWORD *)(a1 + 56) |= 4u;
        uint64_t v24 = *(void *)(a1 + 16);
        if (!v24) {
          operator new();
        }
        unsigned int v59 = 0;
        int v25 = (char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v59))return 0; {
        }
          }
        else
        {
          unsigned int v59 = *v25;
          *((void *)this + 1) = v25 + 1;
        }
        int v26 = *((_DWORD *)this + 14);
        int v27 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v26 + 1;
        if (v26 >= v27) {
          return 0;
        }
        int v28 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v59);
        if (!sub_100E31C90(v24, this, v29) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v28);
        int v30 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v30, 1);
        int v31 = v30 - 1;
        if (v31 < 0 == v21) {
          *((_DWORD *)this + 14) = v31;
        }
        int v32 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 != 34) {
          continue;
        }
        *((void *)this + 1) = v32 + 1;
LABEL_58:
        *(_DWORD *)(a1 + 56) |= 8u;
        uint64_t v33 = *(void *)(a1 + 24);
        if (!v33) {
          operator new();
        }
        unsigned int v59 = 0;
        unsigned int v34 = (char *)*((void *)this + 1);
        if ((unint64_t)v34 >= *((void *)this + 2) || *v34 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v59))return 0; {
        }
          }
        else
        {
          unsigned int v59 = *v34;
          *((void *)this + 1) = v34 + 1;
        }
        int v35 = *((_DWORD *)this + 14);
        int v36 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v35 + 1;
        if (v35 >= v36) {
          return 0;
        }
        int v37 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v59);
        if (!sub_100E31C90(v33, this, v38) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v37);
        int v39 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v39, 1);
        int v40 = v39 - 1;
        if (v40 < 0 == v21) {
          *((_DWORD *)this + 14) = v40;
        }
        int v41 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v41 >= *((void *)this + 2) || *v41 != 42) {
          continue;
        }
        *((void *)this + 1) = v41 + 1;
LABEL_72:
        *(_DWORD *)(a1 + 56) |= 0x10u;
        uint64_t v42 = *(void *)(a1 + 32);
        if (!v42) {
          operator new();
        }
        unsigned int v59 = 0;
        int v43 = (char *)*((void *)this + 1);
        if ((unint64_t)v43 >= *((void *)this + 2) || *v43 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v59))return 0; {
        }
          }
        else
        {
          unsigned int v59 = *v43;
          *((void *)this + 1) = v43 + 1;
        }
        int v44 = *((_DWORD *)this + 14);
        int v45 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v44 + 1;
        if (v44 >= v45) {
          return 0;
        }
        int v46 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v59);
        if (!sub_100E31C90(v42, this, v47) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v46);
        int v48 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v48, 1);
        int v49 = v48 - 1;
        if (v49 < 0 == v21) {
          *((_DWORD *)this + 14) = v49;
        }
        int v50 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v50 >= *((void *)this + 2) || *v50 != 50) {
          continue;
        }
        *((void *)this + 1) = v50 + 1;
LABEL_86:
        *(_DWORD *)(a1 + 56) |= 0x20u;
        uint64_t v51 = *(void *)(a1 + 40);
        if (!v51) {
          operator new();
        }
        unsigned int v59 = 0;
        uint64_t v52 = (char *)*((void *)this + 1);
        if ((unint64_t)v52 >= *((void *)this + 2) || *v52 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v59))return 0; {
        }
          }
        else
        {
          unsigned int v59 = *v52;
          *((void *)this + 1) = v52 + 1;
        }
        int v53 = *((_DWORD *)this + 14);
        int v54 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v53 + 1;
        if (v53 >= v54) {
          return 0;
        }
        int v55 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v59);
        if (!sub_100E31C90(v51, this, v56) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v55);
        int v57 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v57, 1);
        int v58 = v57 - 1;
        if (v58 < 0 == v21) {
          *((_DWORD *)this + 14) = v58;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_44;
        }
        goto LABEL_22;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_58;
        }
        goto LABEL_22;
      case 5u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_72;
        }
        goto LABEL_22;
      case 6u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_22;
        }
        goto LABEL_86;
      default:
        int v8 = TagFallback & 7;
LABEL_22:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100E32D34(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 56);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 48), a2, a4);
    int v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248ADA8 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_12:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_10248ADA8 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_15:
  uint64_t v9 = *(void *)(v5 + 24);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_10248ADA8 + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      return result;
    }
    goto LABEL_21;
  }
LABEL_18:
  uint64_t v10 = *(void *)(v5 + 32);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_10248ADA8 + 32);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v10, a2, a4);
  if ((*(_DWORD *)(v5 + 56) & 0x20) != 0)
  {
LABEL_21:
    uint64_t v11 = *(void *)(v5 + 40);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_10248ADA8 + 40);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v11, a2, a4);
  }
  return result;
}

uint64_t sub_100E32E64(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 56);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_45;
  }
  if (*(unsigned char *)(a1 + 56))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
    if (v5 >= 0x80)
    {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
      int v3 = *(_DWORD *)(a1 + 56);
    }
    else
    {
      int v6 = 1;
    }
    uint64_t v4 = (v6 + 1);
    if ((v3 & 2) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 56) & 2) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248ADA8 + 8);
  }
  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E2F9B0(v7, a2);
  int v9 = (int)v8;
  if (v8 >= 0x80) {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2);
  }
  else {
    int v10 = 1;
  }
  uint64_t v4 = (v4 + v9 + v10 + 1);
  int v3 = *(_DWORD *)(a1 + 56);
LABEL_16:
  if ((v3 & 4) != 0)
  {
    uint64_t v11 = *(void *)(a1 + 16);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_10248ADA8 + 16);
    }
    int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E31F08(v11, a2);
    int v13 = (int)v12;
    if (v12 >= 0x80) {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2);
    }
    else {
      int v14 = 1;
    }
    uint64_t v4 = (v4 + v13 + v14 + 1);
    int v3 = *(_DWORD *)(a1 + 56);
    if ((v3 & 8) == 0)
    {
LABEL_18:
      if ((v3 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_33;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_18;
  }
  uint64_t v15 = *(void *)(a1 + 24);
  if (!v15) {
    uint64_t v15 = *(void *)(qword_10248ADA8 + 24);
  }
  int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E31F08(v15, a2);
  int v17 = (int)v16;
  if (v16 >= 0x80) {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
  }
  else {
    int v18 = 1;
  }
  uint64_t v4 = (v4 + v17 + v18 + 1);
  int v3 = *(_DWORD *)(a1 + 56);
  if ((v3 & 0x10) == 0)
  {
LABEL_19:
    if ((v3 & 0x20) == 0) {
      goto LABEL_45;
    }
    goto LABEL_39;
  }
LABEL_33:
  uint64_t v19 = *(void *)(a1 + 32);
  if (!v19) {
    uint64_t v19 = *(void *)(qword_10248ADA8 + 32);
  }
  int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E31F08(v19, a2);
  int v21 = (int)v20;
  if (v20 >= 0x80) {
    int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20, a2);
  }
  else {
    int v22 = 1;
  }
  uint64_t v4 = (v4 + v21 + v22 + 1);
  if ((*(_DWORD *)(a1 + 56) & 0x20) != 0)
  {
LABEL_39:
    uint64_t v23 = *(void *)(a1 + 40);
    if (!v23) {
      uint64_t v23 = *(void *)(qword_10248ADA8 + 40);
    }
    uint64_t v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E31F08(v23, a2);
    int v26 = (int)v24;
    if (v24 >= 0x80) {
      int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24, v25);
    }
    else {
      int v27 = 1;
    }
    uint64_t v4 = (v4 + v26 + v27 + 1);
  }
LABEL_45:
  *(_DWORD *)(a1 + 52) = v4;
  return v4;
}

double sub_100E33048(uint64_t a1, void *lpsrc)
{
  return sub_100E32010(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E330D0()
{
  return 1;
}

void *sub_100E330D8@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.BeidouTimeInfo");
}

double sub_100E330E8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 40);
  if (!(_BYTE)v5) {
    return result;
  }
  if ((*(unsigned char *)(a2 + 40) & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 40) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_10:
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v7 = *(void *)(a1 + 8);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = *(void *)(a2 + 8);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_10248ADB0 + 8);
    }
    sub_100E2F3A8(v7, v8);
    int v5 = *(_DWORD *)(a2 + 40);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        return result;
      }
      goto LABEL_20;
    }
    goto LABEL_15;
  }
  int v6 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 40) |= 1u;
  *(_DWORD *)(a1 + 32) = v6;
  int v5 = *(_DWORD *)(a2 + 40);
  if ((v5 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_6:
  if ((v5 & 4) == 0) {
    goto LABEL_7;
  }
LABEL_15:
  *(_DWORD *)(a1 + 40) |= 4u;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9) {
    operator new();
  }
  uint64_t v10 = *(void *)(a2 + 16);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_10248ADB0 + 16);
  }
  double result = sub_100E31AC4(v9, v10);
  if ((*(_DWORD *)(a2 + 40) & 8) != 0)
  {
LABEL_20:
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v11 = *(void *)(a1 + 24);
    if (!v11) {
      operator new();
    }
    uint64_t v12 = *(void *)(a2 + 24);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_10248ADB0 + 24);
    }
    return sub_100E31AC4(v11, v12);
  }
  return result;
}

void sub_100E332E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_100E33300(void *result)
{
  if ((void *)qword_10248ADB0 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    double result = (void *)v1[3];
    if (result)
    {
      uint64_t v4 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v4();
    }
  }
  return result;
}

void sub_100E333CC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FB6B0;
  sub_100E33300(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E33420(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FB6B0;
  sub_100E33300(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E33488()
{
}

uint64_t sub_100E334E0(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(unsigned char *)(result + 40);
  if ((_BYTE)v2)
  {
    *(_DWORD *)(result + 32) = 0;
    if ((v2 & 2) != 0)
    {
      double result = *(void *)(result + 8);
      if (result)
      {
        double result = sub_100E2F600(result);
        int v2 = *(_DWORD *)(v1 + 40);
      }
    }
    if ((v2 & 4) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(v1 + 40);
      }
    }
    if ((v2 & 8) != 0)
    {
      uint64_t v4 = *(void *)(v1 + 24);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 36))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
          *(void *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 36) = 0;
      }
    }
  }
  *(_DWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t sub_100E33568(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 32);
  while (1)
  {
    int v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 < *((void *)this + 2) && (*v6 & 0x80000000) == 0)
    {
      TagFallbacuint64_t k = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        uint64_t v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          uint64_t v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v5 = *v10;
          uint64_t v11 = v10 + 1;
          *((void *)this + 1) = v11;
        }
        int v12 = *(_DWORD *)(a1 + 40) | 1;
        *(_DWORD *)(a1 + 40) = v12;
        if ((unint64_t)v11 < v9 && *v11 == 18)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_26;
        }
        continue;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_18;
        }
        int v12 = *(_DWORD *)(a1 + 40);
LABEL_26:
        *(_DWORD *)(a1 + 40) = v12 | 2;
        uint64_t v14 = *(void *)(a1 + 8);
        if (!v14) {
          operator new();
        }
        unsigned int v41 = 0;
        uint64_t v15 = (char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v41))return 0; {
        }
          }
        else
        {
          unsigned int v41 = *v15;
          *((void *)this + 1) = v15 + 1;
        }
        int v16 = *((_DWORD *)this + 14);
        int v17 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v16 + 1;
        if (v16 >= v17) {
          return 0;
        }
        int v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v41);
        if (!sub_100E2F634(v14, this, v19) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
        int v20 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v20, 1);
        int v22 = v20 - 1;
        if (v22 < 0 == v21) {
          *((_DWORD *)this + 14) = v22;
        }
        uint64_t v23 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 != 26) {
          continue;
        }
        *((void *)this + 1) = v23 + 1;
LABEL_40:
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v24 = *(void *)(a1 + 16);
        if (!v24) {
          operator new();
        }
        unsigned int v42 = 0;
        unsigned int v25 = (char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v42))return 0; {
        }
          }
        else
        {
          unsigned int v42 = *v25;
          *((void *)this + 1) = v25 + 1;
        }
        int v26 = *((_DWORD *)this + 14);
        int v27 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v26 + 1;
        if (v26 >= v27) {
          return 0;
        }
        int v28 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v42);
        if (!sub_100E31C90(v24, this, v29) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v28);
        int v30 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v30, 1);
        int v31 = v30 - 1;
        if (v31 < 0 == v21) {
          *((_DWORD *)this + 14) = v31;
        }
        int v32 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 != 34) {
          continue;
        }
        *((void *)this + 1) = v32 + 1;
LABEL_54:
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v33 = *(void *)(a1 + 24);
        if (!v33) {
          operator new();
        }
        unsigned int v43 = 0;
        unsigned int v34 = (char *)*((void *)this + 1);
        if ((unint64_t)v34 >= *((void *)this + 2) || *v34 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v43))return 0; {
        }
          }
        else
        {
          unsigned int v43 = *v34;
          *((void *)this + 1) = v34 + 1;
        }
        int v35 = *((_DWORD *)this + 14);
        int v36 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v35 + 1;
        if (v35 >= v36) {
          return 0;
        }
        int v37 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v43);
        if (!sub_100E31C90(v33, this, v38) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v37);
        int v39 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v39, 1);
        int v40 = v39 - 1;
        if (v40 < 0 == v21) {
          *((_DWORD *)this + 14) = v40;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_40;
        }
        goto LABEL_18;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_18;
        }
        goto LABEL_54;
      default:
        int v8 = TagFallback & 7;
LABEL_18:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100E33A28(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 40);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 32), a2, a4);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248ADB0 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_10:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_10248ADB0 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  if ((*(_DWORD *)(v5 + 40) & 8) != 0)
  {
LABEL_13:
    uint64_t v9 = *(void *)(v5 + 24);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_10248ADB0 + 24);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
  }
  return result;
}

uint64_t sub_100E33B00(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 40);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_31;
  }
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 40);
      if ((v3 & 2) == 0) {
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_16;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 40) & 2) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (!v6) {
    uint64_t v6 = *(void *)(qword_10248ADB0 + 8);
  }
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E2F9B0(v6, a2);
  int v8 = (int)v7;
  if (v7 >= 0x80) {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
  }
  else {
    int v9 = 1;
  }
  uint64_t v4 = (v4 + v8 + v9 + 1);
  int v3 = *(_DWORD *)(a1 + 40);
LABEL_16:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_31;
    }
    goto LABEL_25;
  }
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_10248ADB0 + 16);
  }
  uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E31F08(v10, a2);
  int v12 = (int)v11;
  if (v11 >= 0x80) {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
  }
  else {
    int v13 = 1;
  }
  uint64_t v4 = (v4 + v12 + v13 + 1);
  if ((*(_DWORD *)(a1 + 40) & 8) != 0)
  {
LABEL_25:
    uint64_t v14 = *(void *)(a1 + 24);
    if (!v14) {
      uint64_t v14 = *(void *)(qword_10248ADB0 + 24);
    }
    uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E31F08(v14, a2);
    int v17 = (int)v15;
    if (v15 >= 0x80) {
      int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, v16);
    }
    else {
      int v18 = 1;
    }
    uint64_t v4 = (v4 + v17 + v18 + 1);
  }
LABEL_31:
  *(_DWORD *)(a1 + 36) = v4;
  return v4;
}

double sub_100E33C50(uint64_t a1, void *lpsrc)
{
  return sub_100E330E8(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E33CD8()
{
  return 1;
}

void *sub_100E33CE0@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.GalileoTimeInfo");
}

void sub_100E33CF0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      *(_DWORD *)(a1 + 24) |= 1u;
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_10248ADB8 + 8);
      }
      sub_100E31AC4(v5, v6);
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      int v7 = *(_DWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 24) |= 2u;
      *(_DWORD *)(a1 + 16) = v7;
    }
  }
}

void sub_100E33DF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E33E10(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022FB728;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_10248ADB8 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_100E33EA0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_100E33E10(a1);

  operator delete();
}

void sub_100E33ED8()
{
}

uint64_t sub_100E33F28(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    if (*(unsigned char *)(result + 24))
    {
      uint64_t v1 = *(void *)(result + 8);
      if (v1)
      {
        if (*(unsigned char *)(v1 + 36))
        {
          *(void *)(v1 + 8) = 0;
          *(void *)(v1 + 16) = 0;
          *(void *)(v1 + 24) = 0;
        }
        *(_DWORD *)(v1 + 36) = 0;
      }
    }
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_100E33F5C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)(a1 + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        TagFallbacuint64_t k = *v6;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v6 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 == 1) {
        break;
      }
      if (TagFallback >> 3 == 2)
      {
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) == 0)
        {
          uint64_t v10 = (char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
          goto LABEL_30;
        }
      }
      else
      {
        int v8 = TagFallback & 7;
      }
LABEL_18:
      if (v8 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
    int v8 = TagFallback & 7;
    if (v8 != 2) {
      goto LABEL_18;
    }
    *(_DWORD *)(a1 + 24) |= 1u;
    uint64_t v11 = *(void *)(a1 + 8);
    if (!v11) {
      operator new();
    }
    unsigned int v23 = 0;
    int v12 = (char *)*((void *)this + 1);
    if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23)) {
        return 0;
      }
    }
    else
    {
      unsigned int v23 = *v12;
      *((void *)this + 1) = v12 + 1;
    }
    int v13 = *((_DWORD *)this + 14);
    int v14 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v13 + 1;
    if (v13 >= v14) {
      return 0;
    }
    int v15 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v23);
    if (!sub_100E31C90(v11, this, v16) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v15);
    int v17 = *((_DWORD *)this + 14);
    BOOL v18 = __OFSUB__(v17, 1);
    int v19 = v17 - 1;
    if (v19 < 0 == v18) {
      *((_DWORD *)this + 14) = v19;
    }
    int v20 = (unsigned char *)*((void *)this + 1);
    unint64_t v9 = *((void *)this + 2);
    if ((unint64_t)v20 < v9 && *v20 == 16)
    {
      uint64_t v10 = v20 + 1;
      *((void *)this + 1) = v10;
LABEL_30:
      if ((unint64_t)v10 >= v9 || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!result) {
          return result;
        }
        BOOL v21 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
      }
      else
      {
        unsigned int *v5 = *v10;
        BOOL v21 = (unsigned __int8 *)(v10 + 1);
        *((void *)this + 1) = v21;
      }
      *(_DWORD *)(a1 + 24) |= 2u;
      if (v21 == (unsigned __int8 *)v9 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
  }
}

uint64_t sub_100E341B8(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(result + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248ADB8 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 24) & 2) != 0)
  {
LABEL_7:
    int v8 = *(_DWORD *)(v5 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  }
  return result;
}

uint64_t sub_100E34238(uint64_t a1, unint64_t a2)
{
  if (!*(unsigned char *)(a1 + 24))
  {
    uint64_t v3 = 0;
    goto LABEL_16;
  }
  if ((*(unsigned char *)(a1 + 24) & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (!v4) {
    uint64_t v4 = *(void *)(qword_10248ADB8 + 8);
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E31F08(v4, a2);
  int v6 = (int)v5;
  if (v5 >= 0x80) {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
  }
  else {
    int v7 = 1;
  }
  uint64_t v3 = (v6 + v7 + 1);
  if ((*(_DWORD *)(a1 + 24) & 2) != 0)
  {
LABEL_12:
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80) {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    }
    else {
      int v9 = 2;
    }
    uint64_t v3 = (v9 + v3);
  }
LABEL_16:
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_100E342E4(uint64_t a1, void *lpsrc)
{
  sub_100E33CF0(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E3436C()
{
  return 1;
}

void *sub_100E34374@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.NavicTimeInfo");
}

void sub_100E34384(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 52);
  if (!(_BYTE)v4) {
    return;
  }
  if (*(unsigned char *)(a2 + 52))
  {
    *(_DWORD *)(a1 + 52) |= 1u;
    uint64_t v5 = *(void *)(a1 + 8);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10248ADC0 + 8);
    }
    sub_100E30154(v5, v6);
    int v4 = *(_DWORD *)(a2 + 52);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_20:
      *(_DWORD *)(a1 + 52) |= 4u;
      uint64_t v9 = *(void *)(a1 + 24);
      if (!v9) {
        operator new();
      }
      uint64_t v10 = *(void *)(a2 + 24);
      if (!v10) {
        uint64_t v10 = *(void *)(qword_10248ADC0 + 24);
      }
      sub_100E32010(v9, v10);
      int v4 = *(_DWORD *)(a2 + 52);
      if ((v4 & 8) == 0)
      {
LABEL_8:
        if ((v4 & 0x10) == 0) {
          return;
        }
        goto LABEL_30;
      }
      goto LABEL_25;
    }
  }
  else if ((*(unsigned char *)(a2 + 52) & 2) == 0)
  {
    goto LABEL_6;
  }
  *(_DWORD *)(a1 + 52) |= 2u;
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7) {
    operator new();
  }
  uint64_t v8 = *(void *)(a2 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_10248ADC0 + 16);
  }
  sub_100E30F60(v7, v8);
  int v4 = *(_DWORD *)(a2 + 52);
  if ((v4 & 4) != 0) {
    goto LABEL_20;
  }
LABEL_7:
  if ((v4 & 8) == 0) {
    goto LABEL_8;
  }
LABEL_25:
  *(_DWORD *)(a1 + 52) |= 8u;
  uint64_t v11 = *(void *)(a1 + 32);
  if (!v11) {
    operator new();
  }
  uint64_t v12 = *(void *)(a2 + 32);
  if (!v12) {
    uint64_t v12 = *(void *)(qword_10248ADC0 + 32);
  }
  sub_100E330E8(v11, v12);
  if ((*(_DWORD *)(a2 + 52) & 0x10) != 0)
  {
LABEL_30:
    *(_DWORD *)(a1 + 52) |= 0x10u;
    uint64_t v13 = *(void *)(a1 + 40);
    if (!v13) {
      operator new();
    }
    uint64_t v14 = *(void *)(a2 + 40);
    if (!v14) {
      uint64_t v14 = *(void *)(qword_10248ADC0 + 40);
    }
    sub_100E33CF0(v13, v14);
  }
}

void sub_100E3466C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_100E34684(void *result)
{
  if ((void *)qword_10248ADC0 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[3];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = v1[4];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t result = (void *)v1[5];
    if (result)
    {
      uint64_t v6 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v6();
    }
  }
  return result;
}

void sub_100E347A8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FB7A0;
  sub_100E34684(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E347FC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FB7A0;
  sub_100E34684(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E34864()
{
}

uint64_t sub_100E348BC(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(unsigned char *)(result + 52);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(result + 52))
    {
      uint64_t result = *(void *)(result + 8);
      if (result)
      {
        uint64_t result = sub_100E304A0(result);
        int v2 = *(_DWORD *)(v1 + 52);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t result = *(void *)(v1 + 16);
      if (result)
      {
        uint64_t result = sub_100E312F4(result);
        int v2 = *(_DWORD *)(v1 + 52);
      }
    }
    if ((v2 & 4) != 0)
    {
      uint64_t result = *(void *)(v1 + 24);
      if (result)
      {
        uint64_t result = sub_100E3255C(result);
        int v2 = *(_DWORD *)(v1 + 52);
      }
    }
    if ((v2 & 8) != 0)
    {
      uint64_t result = *(void *)(v1 + 32);
      if (result)
      {
        uint64_t result = sub_100E334E0(result);
        int v2 = *(_DWORD *)(v1 + 52);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      uint64_t result = *(void *)(v1 + 40);
      if (result) {
        uint64_t result = sub_100E33F28(result);
      }
    }
  }
  *(_DWORD *)(v1 + 52) = 0;
  return result;
}

uint64_t sub_100E34948(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 < *((void *)this + 2) && (*v5 & 0x80000000) == 0)
    {
      TagFallbacuint64_t k = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_6;
    }
    TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_21;
        }
        *(_DWORD *)(a1 + 52) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        unsigned int v54 = 0;
        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v54))return 0; {
        }
          }
        else
        {
          unsigned int v54 = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v54);
        if (!sub_100E30508(v8, this, v13) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        int v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 != 18) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
        goto LABEL_33;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_21;
        }
LABEL_33:
        *(_DWORD *)(a1 + 52) |= 2u;
        uint64_t v18 = *(void *)(a1 + 16);
        if (!v18) {
          operator new();
        }
        unsigned int v54 = 0;
        int v19 = (char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v54))return 0; {
        }
          }
        else
        {
          unsigned int v54 = *v19;
          *((void *)this + 1) = v19 + 1;
        }
        int v20 = *((_DWORD *)this + 14);
        int v21 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v20 + 1;
        if (v20 >= v21) {
          return 0;
        }
        int v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v54);
        if (!sub_100E31348(v18, this, v23) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v22);
        int v24 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v24, 1);
        int v25 = v24 - 1;
        if (v25 < 0 == v15) {
          *((_DWORD *)this + 14) = v25;
        }
        int v26 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v26 >= *((void *)this + 2) || *v26 != 26) {
          continue;
        }
        *((void *)this + 1) = v26 + 1;
LABEL_47:
        *(_DWORD *)(a1 + 52) |= 4u;
        uint64_t v27 = *(void *)(a1 + 24);
        if (!v27) {
          operator new();
        }
        unsigned int v54 = 0;
        int v28 = (char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v54))return 0; {
        }
          }
        else
        {
          unsigned int v54 = *v28;
          *((void *)this + 1) = v28 + 1;
        }
        int v29 = *((_DWORD *)this + 14);
        int v30 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v29 + 1;
        if (v29 >= v30) {
          return 0;
        }
        int v31 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v54);
        if (!sub_100E3262C(v27, this, v32) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v31);
        int v33 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v33, 1);
        int v34 = v33 - 1;
        if (v34 < 0 == v15) {
          *((_DWORD *)this + 14) = v34;
        }
        int v35 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v35 >= *((void *)this + 2) || *v35 != 34) {
          continue;
        }
        *((void *)this + 1) = v35 + 1;
LABEL_61:
        *(_DWORD *)(a1 + 52) |= 8u;
        uint64_t v36 = *(void *)(a1 + 32);
        if (!v36) {
          operator new();
        }
        unsigned int v54 = 0;
        int v37 = (char *)*((void *)this + 1);
        if ((unint64_t)v37 >= *((void *)this + 2) || *v37 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v54))return 0; {
        }
          }
        else
        {
          unsigned int v54 = *v37;
          *((void *)this + 1) = v37 + 1;
        }
        int v38 = *((_DWORD *)this + 14);
        int v39 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v38 + 1;
        if (v38 >= v39) {
          return 0;
        }
        int v40 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v54);
        if (!sub_100E33568(v36, this, v41) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v40);
        int v42 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v42, 1);
        int v43 = v42 - 1;
        if (v43 < 0 == v15) {
          *((_DWORD *)this + 14) = v43;
        }
        int v44 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v44 >= *((void *)this + 2) || *v44 != 42) {
          continue;
        }
        *((void *)this + 1) = v44 + 1;
LABEL_75:
        *(_DWORD *)(a1 + 52) |= 0x10u;
        uint64_t v45 = *(void *)(a1 + 40);
        if (!v45) {
          operator new();
        }
        unsigned int v54 = 0;
        int v46 = (char *)*((void *)this + 1);
        if ((unint64_t)v46 >= *((void *)this + 2) || *v46 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v54))return 0; {
        }
          }
        else
        {
          unsigned int v54 = *v46;
          *((void *)this + 1) = v46 + 1;
        }
        int v47 = *((_DWORD *)this + 14);
        int v48 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v47 + 1;
        if (v47 >= v48) {
          return 0;
        }
        int v49 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v54);
        if (!sub_100E33F5C(v45, this, v50) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v49);
        int v51 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v51, 1);
        int v52 = v51 - 1;
        if (v52 < 0 == v15) {
          *((_DWORD *)this + 14) = v52;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_47;
        }
        goto LABEL_21;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_61;
        }
        goto LABEL_21;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_21;
        }
        goto LABEL_75;
      default:
        int v7 = TagFallback & 7;
LABEL_21:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100E34FE0(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 52);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_10248ADC0 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_10248ADC0 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_13:
  uint64_t v9 = *(void *)(v5 + 24);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_10248ADC0 + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      return result;
    }
    goto LABEL_19;
  }
LABEL_16:
  uint64_t v10 = *(void *)(v5 + 32);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_10248ADC0 + 32);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  if ((*(_DWORD *)(v5 + 52) & 0x10) != 0)
  {
LABEL_19:
    uint64_t v11 = *(void *)(v5 + 40);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_10248ADC0 + 40);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v11, a2, a4);
  }
  return result;
}

uint64_t sub_100E350F4(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 52);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_40;
  }
  if ((*(unsigned char *)(a1 + 52) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 52) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_10248ADC0 + 8);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E30934(v5, a2);
  int v7 = (int)v6;
  if (v6 >= 0x80) {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
  }
  else {
    int v8 = 1;
  }
  uint64_t v4 = (v7 + v8 + 1);
  int v3 = *(_DWORD *)(a1 + 52);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_10248ADC0 + 16);
    }
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E318BC(v9, a2);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    }
    else {
      int v12 = 1;
    }
    uint64_t v4 = (v4 + v11 + v12 + 1);
    int v3 = *(_DWORD *)(a1 + 52);
  }
LABEL_18:
  if ((v3 & 4) != 0)
  {
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13) {
      uint64_t v13 = *(void *)(qword_10248ADC0 + 24);
    }
    int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E32E64(v13, a2);
    int v15 = (int)v14;
    if (v14 >= 0x80) {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
    }
    else {
      int v16 = 1;
    }
    uint64_t v4 = (v4 + v15 + v16 + 1);
    int v3 = *(_DWORD *)(a1 + 52);
    if ((v3 & 8) == 0)
    {
LABEL_20:
      if ((v3 & 0x10) == 0) {
        goto LABEL_40;
      }
      goto LABEL_34;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)(a1 + 32);
  if (!v17) {
    uint64_t v17 = *(void *)(qword_10248ADC0 + 32);
  }
  uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E33B00(v17, a2);
  int v19 = (int)v18;
  if (v18 >= 0x80) {
    int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
  }
  else {
    int v20 = 1;
  }
  uint64_t v4 = (v4 + v19 + v20 + 1);
  if ((*(_DWORD *)(a1 + 52) & 0x10) != 0)
  {
LABEL_34:
    uint64_t v21 = *(void *)(a1 + 40);
    if (!v21) {
      uint64_t v21 = *(void *)(qword_10248ADC0 + 40);
    }
    int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E34238(v21, a2);
    int v24 = (int)v22;
    if (v22 >= 0x80) {
      int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, v23);
    }
    else {
      int v25 = 1;
    }
    uint64_t v4 = (v4 + v24 + v25 + 1);
  }
LABEL_40:
  *(_DWORD *)(a1 + 48) = v4;
  return v4;
}

void sub_100E352AC(uint64_t a1, void *lpsrc)
{
  sub_100E34384(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E35334()
{
  return 1;
}

void *sub_100E3533C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.TimeConversionInfo");
}

float sub_100E3534C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  int v5 = *(_DWORD *)(a2 + 52);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 8);
    *(_DWORD *)(a1 + 52) |= 1u;
    *(void *)(a1 + 8) = v6;
    int v5 = *(_DWORD *)(a2 + 52);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_18;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  float result = *(float *)(a2 + 16);
  *(_DWORD *)(a1 + 52) |= 2u;
  *(float *)(a1 + 16) = result;
  int v5 = *(_DWORD *)(a2 + 52);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  float result = *(float *)(a2 + 20);
  *(_DWORD *)(a1 + 52) |= 4u;
  *(float *)(a1 + 20) = result;
  int v5 = *(_DWORD *)(a2 + 52);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  float result = *(float *)(a2 + 24);
  *(_DWORD *)(a1 + 52) |= 8u;
  *(float *)(a1 + 24) = result;
  int v5 = *(_DWORD *)(a2 + 52);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_21:
    float result = *(float *)(a2 + 32);
    *(_DWORD *)(a1 + 52) |= 0x20u;
    *(float *)(a1 + 32) = result;
    int v5 = *(_DWORD *)(a2 + 52);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_20:
  float result = *(float *)(a2 + 28);
  *(_DWORD *)(a1 + 52) |= 0x10u;
  *(float *)(a1 + 28) = result;
  int v5 = *(_DWORD *)(a2 + 52);
  if ((v5 & 0x20) != 0) {
    goto LABEL_21;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_22:
  float result = *(float *)(a2 + 36);
  *(_DWORD *)(a1 + 52) |= 0x40u;
  *(float *)(a1 + 36) = result;
  int v5 = *(_DWORD *)(a2 + 52);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    float result = *(float *)(a2 + 40);
    *(_DWORD *)(a1 + 52) |= 0x80u;
    *(float *)(a1 + 40) = result;
    int v5 = *(_DWORD *)(a2 + 52);
  }
LABEL_13:
  if ((v5 & 0x100) != 0)
  {
    float result = *(float *)(a2 + 44);
    *(_DWORD *)(a1 + 52) |= 0x100u;
    *(float *)(a1 + 44) = result;
  }
  return result;
}

void sub_100E354E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E354F8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FB818;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E35518(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FB818;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E3556C()
{
}

uint64_t sub_100E355C4(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 52);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0) {
    *(_DWORD *)(result + 44) = 0;
  }
  *(_DWORD *)(result + 52) = 0;
  return result;
}

uint64_t sub_100E355F4(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unint64_t *)(a1 + 2);
  while (2)
  {
    uint64_t v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        uint64_t v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unint64_t *v5 = *v10;
          int v11 = v10 + 1;
          *((void *)this + 1) = v11;
        }
        a1[13] |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 21)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_36;
        }
        continue;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 5) {
          goto LABEL_28;
        }
LABEL_36:
        unsigned int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v20) & 1) == 0) {
          return 0;
        }
        a1[4] = v20;
        a1[13] |= 2u;
        uint64_t v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 != 29) {
          continue;
        }
        *((void *)this + 1) = v13 + 1;
LABEL_40:
        unsigned int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v20) & 1) == 0) {
          return 0;
        }
        a1[5] = v20;
        a1[13] |= 4u;
        int v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 != 37) {
          continue;
        }
        *((void *)this + 1) = v14 + 1;
LABEL_44:
        unsigned int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v20) & 1) == 0) {
          return 0;
        }
        a1[6] = v20;
        a1[13] |= 8u;
        int v15 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 != 45) {
          continue;
        }
        *((void *)this + 1) = v15 + 1;
LABEL_48:
        unsigned int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v20) & 1) == 0) {
          return 0;
        }
        a1[7] = v20;
        a1[13] |= 0x10u;
        int v16 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v16 >= *((void *)this + 2) || *v16 != 53) {
          continue;
        }
        *((void *)this + 1) = v16 + 1;
LABEL_52:
        unsigned int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v20) & 1) == 0) {
          return 0;
        }
        a1[8] = v20;
        a1[13] |= 0x20u;
        uint64_t v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 != 61) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
LABEL_56:
        unsigned int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v20) & 1) == 0) {
          return 0;
        }
        a1[9] = v20;
        a1[13] |= 0x40u;
        uint64_t v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 != 69) {
          continue;
        }
        *((void *)this + 1) = v18 + 1;
LABEL_60:
        unsigned int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v20) & 1) == 0) {
          return 0;
        }
        a1[10] = v20;
        a1[13] |= 0x80u;
        int v19 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 != 77) {
          continue;
        }
        *((void *)this + 1) = v19 + 1;
LABEL_64:
        unsigned int v20 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v20))
        {
          a1[11] = v20;
          a1[13] |= 0x100u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_40;
        }
        goto LABEL_28;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_44;
        }
        goto LABEL_28;
      case 5u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_48;
        }
        goto LABEL_28;
      case 6u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_52;
        }
        goto LABEL_28;
      case 7u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_56;
        }
        goto LABEL_28;
      case 8u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_60;
        }
        goto LABEL_28;
      case 9u:
        int v8 = TagFallback & 7;
        if (v8 != 5) {
          goto LABEL_28;
        }
        goto LABEL_64;
      default:
        int v8 = TagFallback & 7;
LABEL_28:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100E35A28(uint64_t result, unint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = a2;
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 52);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v4, *(float *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v4, *(float *)(v5 + 20), a3);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v4, *(float *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v4, *(float *)(v5 + 28), a3);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v4, *(float *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
LABEL_18:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v4, *(float *)(v5 + 40), a3);
    if ((*(_DWORD *)(v5 + 52) & 0x100) == 0) {
      return result;
    }
    goto LABEL_19;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v4, *(float *)(v5 + 36), a3);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x80) != 0) {
    goto LABEL_18;
  }
LABEL_9:
  if ((v6 & 0x100) == 0) {
    return result;
  }
LABEL_19:
  float v7 = *(float *)(v5 + 44);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v4, v7, a3);
}

uint64_t sub_100E35B5C(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 52);
  if ((_BYTE)v3)
  {
    if (v3)
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8), a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 52);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 5;
    }
    if ((v3 & 4) != 0) {
      v4 += 5;
    }
    if ((v3 & 8) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x80) != 0) {
      v4 += 5;
    }
  }
  else
  {
    unsigned int v4 = 0;
  }
  if ((v3 & 0x100) != 0) {
    uint64_t result = v4 + 5;
  }
  else {
    uint64_t result = v4;
  }
  *(_DWORD *)(a1 + 48) = result;
  return result;
}

float sub_100E35C10(uint64_t a1, void *lpsrc)
{
  return sub_100E3534C(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E35C98()
{
  return 1;
}

void *sub_100E35CA0@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.KlobucharModelParameters");
}

double sub_100E35CB0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(double *)(a1 + 8) = result;
      int v5 = *(_DWORD *)(a2 + 36);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(double *)(a1 + 16) = result;
    if ((*(_DWORD *)(a2 + 36) & 4) == 0) {
      return result;
    }
LABEL_7:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 4u;
    *(double *)(a1 + 24) = result;
  }
  return result;
}

void sub_100E35D84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E35D9C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FB890;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E35DBC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FB890;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E35E10()
{
}

uint64_t sub_100E35E64(uint64_t result)
{
  if (*(unsigned char *)(result + 36))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_100E35E7C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacuint64_t k = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v7 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_27;
        }
        unint64_t v12 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 8) = v12;
        *(_DWORD *)(a1 + 36) |= 1u;
        unint64_t v9 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v9 < *((void *)this + 2) && *v9 == 17)
        {
          *((void *)this + 1) = v9 + 1;
LABEL_17:
          unint64_t v12 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
            return 0;
          }
          *(void *)(a1 + 16) = v12;
          *(_DWORD *)(a1 + 36) |= 2u;
          uint64_t v10 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v10 < *((void *)this + 2) && *v10 == 25)
          {
            *((void *)this + 1) = v10 + 1;
            goto LABEL_21;
          }
        }
      }
      if (v7 == 2)
      {
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_27;
        }
        goto LABEL_17;
      }
      if (v7 != 3)
      {
        int v8 = TagFallback & 7;
        goto LABEL_27;
      }
      int v8 = TagFallback & 7;
      if (v8 == 1) {
        break;
      }
LABEL_27:
      if (v8 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
LABEL_21:
    unint64_t v12 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
      return 0;
    }
    *(void *)(a1 + 24) = v12;
    *(_DWORD *)(a1 + 36) |= 4u;
  }
  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_100E36044(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 36);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v4 + 16), a3);
    if ((*(_DWORD *)(v4 + 36) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(result + 8), a3);
  int v5 = *(_DWORD *)(v4 + 36);
  if ((v5 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 4) == 0) {
    return result;
  }
LABEL_7:
  double v6 = *(double *)(v4 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, v6, a3);
}

uint64_t sub_100E360D0(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 36);
  if (*(unsigned char *)(a1 + 36))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *(_DWORD *)(a1 + 32) = v1;
  return v1;
}

double sub_100E36108(uint64_t a1, void *lpsrc)
{
  return sub_100E35CB0(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E36190()
{
  return 1;
}

void *sub_100E36198@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.SfcfXyz");
}

double sub_100E361A8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      *(_DWORD *)(a1 + 36) |= 1u;
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_10248ADD8 + 8);
      }
      sub_100E1BD54(v6, v7);
      int v5 = *(_DWORD *)(a2 + 36);
    }
    if ((v5 & 2) != 0)
    {
      unsigned int v8 = *(_DWORD *)(a2 + 16);
      if (v8 >= 0xD) {
        sub_101A9066C();
      }
      *(_DWORD *)(a1 + 36) |= 2u;
      *(_DWORD *)(a1 + 16) = v8;
      int v5 = *(_DWORD *)(a2 + 36);
    }
    if ((v5 & 4) != 0)
    {
      unsigned int v9 = *(_DWORD *)(a2 + 20);
      if (v9 >= 4) {
        sub_101A90640();
      }
      *(_DWORD *)(a1 + 36) |= 4u;
      *(_DWORD *)(a1 + 20) = v9;
      int v5 = *(_DWORD *)(a2 + 36);
    }
    if ((v5 & 8) != 0)
    {
      *(_DWORD *)(a1 + 36) |= 8u;
      uint64_t v10 = *(void *)(a1 + 24);
      if (!v10) {
        operator new();
      }
      uint64_t v11 = *(void *)(a2 + 24);
      if (!v11) {
        uint64_t v11 = *(void *)(qword_10248ADD8 + 24);
      }
      return sub_100E35CB0(v10, v11);
    }
  }
  return result;
}

void sub_100E36358(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_100E36370(void *result)
{
  if ((void *)qword_10248ADD8 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    double result = (void *)v1[3];
    if (result)
    {
      int v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_100E36410(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FB908;
  sub_100E36370(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E36464(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FB908;
  sub_100E36370(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E364CC()
{
}

uint64_t sub_100E36520(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(unsigned char *)(result + 36);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(result + 36))
    {
      double result = *(void *)(result + 8);
      if (result)
      {
        double result = sub_100E1BF90(result);
        int v2 = *(_DWORD *)(v1 + 36);
      }
    }
    *(void *)(v1 + 16) = 0;
    if ((v2 & 8) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 24);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
      }
    }
  }
  *(_DWORD *)(v1 + 36) = 0;
  return result;
}

uint64_t sub_100E36584(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_19;
        }
        *(_DWORD *)(a1 + 36) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        unsigned int v35 = 0;
        unsigned int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v35))return 0; {
        }
          }
        else
        {
          unsigned int v35 = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v14 = *((_DWORD *)this + 14);
        int v15 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v14 + 1;
        if (v14 >= v15) {
          return 0;
        }
        int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v35);
        if (!sub_100E1BFD0(v8, this, v17) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
        int v18 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v18, 1);
        int v20 = v18 - 1;
        if (v20 < 0 == v19) {
          *((_DWORD *)this + 14) = v20;
        }
        uint64_t v21 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v21 >= v10 || *v21 != 16) {
          continue;
        }
        uint64_t v11 = v21 + 1;
        *((void *)this + 1) = v11;
        goto LABEL_31;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        uint64_t v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_31:
        unsigned int v35 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v35);
          if (!result) {
            return result;
          }
          unsigned int v22 = v35;
        }
        else
        {
          unsigned int v22 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        if (v22 <= 0xC)
        {
          *(_DWORD *)(a1 + 36) |= 2u;
          *(_DWORD *)(a1 + 16) = v22;
        }
        int v24 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v24 >= v12 || *v24 != 24) {
          continue;
        }
        uint64_t v13 = v24 + 1;
        *((void *)this + 1) = v13;
LABEL_41:
        unsigned int v35 = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v35);
          if (!result) {
            return result;
          }
          unsigned int v25 = v35;
        }
        else
        {
          unsigned int v25 = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        if (v25 <= 3)
        {
          *(_DWORD *)(a1 + 36) |= 4u;
          *(_DWORD *)(a1 + 20) = v25;
        }
        int v26 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v26 >= *((void *)this + 2) || *v26 != 34) {
          continue;
        }
        *((void *)this + 1) = v26 + 1;
LABEL_51:
        *(_DWORD *)(a1 + 36) |= 8u;
        uint64_t v27 = *(void *)(a1 + 24);
        if (!v27) {
          operator new();
        }
        unsigned int v35 = 0;
        int v28 = (char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v35))return 0; {
        }
          }
        else
        {
          unsigned int v35 = *v28;
          *((void *)this + 1) = v28 + 1;
        }
        int v29 = *((_DWORD *)this + 14);
        int v30 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v29 + 1;
        if (v29 < v30)
        {
          int v31 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v35);
          if (sub_100E35E7C(v27, this, v32))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v31);
              int v33 = *((_DWORD *)this + 14);
              BOOL v19 = __OFSUB__(v33, 1);
              int v34 = v33 - 1;
              if (v34 < 0 == v19) {
                *((_DWORD *)this + 14) = v34;
              }
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_41;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_19;
        }
        goto LABEL_51;
      default:
        int v7 = TagFallback & 7;
LABEL_19:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100E369AC(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_10248ADD8 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_10:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 20), (int)a2, a4);
      if ((*(_DWORD *)(v5 + 36) & 8) == 0) {
        return result;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 16), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) != 0) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_11:
  uint64_t v8 = *(void *)(v5 + 24);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_10248ADD8 + 24);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v8, a2, a4);
}

uint64_t sub_100E36A74(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_36;
  }
  if ((*(unsigned char *)(a1 + 36) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 36) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_10248ADD8 + 8);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E1C2B0(v5, a2);
  int v7 = (int)v6;
  if (v6 >= 0x80) {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
  }
  else {
    int v8 = 1;
  }
  uint64_t v4 = (v7 + v8 + 1);
  int v3 = *(_DWORD *)(a1 + 36);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    unsigned int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v9 & 0x80000000) != 0)
    {
      int v10 = 11;
    }
    else if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      int v10 = 2;
    }
    uint64_t v4 = (v10 + v4);
  }
LABEL_18:
  if ((v3 & 4) != 0)
  {
    uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if ((v11 & 0x80000000) != 0)
    {
      int v12 = 11;
    }
    else if (v11 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      int v12 = 2;
    }
    uint64_t v4 = (v12 + v4);
    if ((v3 & 8) == 0) {
      goto LABEL_36;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_36;
  }
  uint64_t v13 = *(void *)(a1 + 24);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_10248ADD8 + 24);
  }
  int v14 = *(unsigned __int8 *)(v13 + 36);
  if (*(unsigned char *)(v13 + 36))
  {
    int v15 = (v14 << 31 >> 31) & 9;
    if ((v14 & 2) != 0) {
      v15 += 9;
    }
    if ((v14 & 4) != 0) {
      int v14 = v15 + 9;
    }
    else {
      int v14 = v15;
    }
  }
  *(_DWORD *)(v13 + 32) = v14;
  uint64_t v4 = (v4 + v14 + 2);
LABEL_36:
  *(_DWORD *)(a1 + 32) = v4;
  return v4;
}

double sub_100E36BBC(uint64_t a1, void *lpsrc)
{
  return sub_100E361A8(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E36C44()
{
  return 1;
}

void *sub_100E36C4C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.AntennaPhaseCenterSvOffset");
}

double sub_100E36C5C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(double *)(a1 + 8) = result;
      int v5 = *(_DWORD *)(a2 + 36);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(double *)(a1 + 16) = result;
    if ((*(_DWORD *)(a2 + 36) & 4) == 0) {
      return result;
    }
LABEL_7:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 4u;
    *(double *)(a1 + 24) = result;
  }
  return result;
}

void sub_100E36D30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E36D48(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FB980;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100E36D68(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022FB980;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100E36DBC()
{
}

uint64_t sub_100E36E10(uint64_t result)
{
  if (*(unsigned char *)(result + 36))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_100E36E28(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacuint64_t k = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v7 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_27;
        }
        unint64_t v12 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 8) = v12;
        *(_DWORD *)(a1 + 36) |= 1u;
        unsigned int v9 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v9 < *((void *)this + 2) && *v9 == 17)
        {
          *((void *)this + 1) = v9 + 1;
LABEL_17:
          unint64_t v12 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
            return 0;
          }
          *(void *)(a1 + 16) = v12;
          *(_DWORD *)(a1 + 36) |= 2u;
          int v10 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v10 < *((void *)this + 2) && *v10 == 25)
          {
            *((void *)this + 1) = v10 + 1;
            goto LABEL_21;
          }
        }
      }
      if (v7 == 2)
      {
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_27;
        }
        goto LABEL_17;
      }
      if (v7 != 3)
      {
        int v8 = TagFallback & 7;
        goto LABEL_27;
      }
      int v8 = TagFallback & 7;
      if (v8 == 1) {
        break;
      }
LABEL_27:
      if (v8 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
LABEL_21:
    unint64_t v12 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
      return 0;
    }
    *(void *)(a1 + 24) = v12;
    *(_DWORD *)(a1 + 36) |= 4u;
  }
  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_100E36FF0(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 36);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v4 + 16), a3);
    if ((*(_DWORD *)(v4 + 36) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(result + 8), a3);
  int v5 = *(_DWORD *)(v4 + 36);
  if ((v5 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 4) == 0) {
    return result;
  }
LABEL_7:
  double v6 = *(double *)(v4 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, v6, a3);
}

uint64_t sub_100E3707C(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 36);
  if (*(unsigned char *)(a1 + 36))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *(_DWORD *)(a1 + 32) = v1;
  return v1;
}

double sub_100E370B4(uint64_t a1, void *lpsrc)
{
  return sub_100E36C5C(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E3713C()
{
  return 1;
}

void *sub_100E37144@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.ReceivedTimeStamp");
}

float sub_100E37154(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v30);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), *(_DWORD *)(a2 + 32) + *(_DWORD *)(a1 + 32));
  if (*(int *)(a2 + 32) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 24) + 8 * v4);
      int v6 = *(_DWORD *)(a1 + 36);
      uint64_t v7 = *(int *)(a1 + 32);
      if ((int)v7 >= v6)
      {
        if (v6 == *(_DWORD *)(a1 + 40))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), v6 + 1);
          int v6 = *(_DWORD *)(a1 + 36);
        }
        *(_DWORD *)(a1 + 36) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *(void *)(a1 + 24);
      *(_DWORD *)(a1 + 32) = v7 + 1;
      sub_100E2C864(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 32));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 48), *(_DWORD *)(a2 + 56) + *(_DWORD *)(a1 + 56));
  if (*(int *)(a2 + 56) >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      uint64_t v10 = *(void *)(*(void *)(a2 + 48) + 8 * v9);
      int v11 = *(_DWORD *)(a1 + 60);
      uint64_t v12 = *(int *)(a1 + 56);
      if ((int)v12 >= v11)
      {
        if (v11 == *(_DWORD *)(a1 + 64))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 48), v11 + 1);
          int v11 = *(_DWORD *)(a1 + 60);
        }
        *(_DWORD *)(a1 + 60) = v11 + 1;
        operator new();
      }
      uint64_t v13 = *(void *)(a1 + 48);
      *(_DWORD *)(a1 + 56) = v12 + 1;
      sub_100E2E894(*(void *)(v13 + 8 * v12), v10);
      ++v9;
    }
    while (v9 < *(int *)(a2 + 56));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 104), *(_DWORD *)(a2 + 112) + *(_DWORD *)(a1 + 112));
  if (*(int *)(a2 + 112) >= 1)
  {
    uint64_t v15 = 0;
    do
    {
      uint64_t v16 = *(void *)(*(void *)(a2 + 104) + 8 * v15);
      int v17 = *(_DWORD *)(a1 + 116);
      uint64_t v18 = *(int *)(a1 + 112);
      if ((int)v18 >= v17)
      {
        if (v17 == *(_DWORD *)(a1 + 120))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 104), v17 + 1);
          int v17 = *(_DWORD *)(a1 + 116);
        }
        *(_DWORD *)(a1 + 116) = v17 + 1;
        operator new();
      }
      uint64_t v19 = *(void *)(a1 + 104);
      *(_DWORD *)(a1 + 112) = v18 + 1;
      double v14 = sub_100E361A8(*(void *)(v19 + 8 * v18), v16);
      ++v15;
    }
    while (v15 < *(int *)(a2 + 112));
  }
  LOBYTE(v20) = *(unsigned char *)(a2 + 132);
  if ((_BYTE)v20)
  {
    if (*(unsigned char *)(a2 + 132))
    {
      *(_DWORD *)(a1 + 132) |= 1u;
      uint64_t v21 = *(void *)(a1 + 8);
      if (!v21) {
        operator new();
      }
      uint64_t v22 = *(void *)(a2 + 8);
      if (!v22) {
        uint64_t v22 = *(void *)(qword_10248ADE8 + 8);
      }
      double v14 = sub_100E36C5C(v21, v22);
      int v20 = *(_DWORD *)(a2 + 132);
      if ((v20 & 2) == 0)
      {
LABEL_30:
        if ((v20 & 0x10) == 0) {
          goto LABEL_31;
        }
        goto LABEL_45;
      }
    }
    else if ((*(unsigned char *)(a2 + 132) & 2) == 0)
    {
      goto LABEL_30;
    }
    *(_DWORD *)(a1 + 132) |= 2u;
    uint64_t v23 = *(void *)(a1 + 16);
    if (!v23) {
      operator new();
    }
    uint64_t v24 = *(void *)(a2 + 16);
    if (!v24) {
      uint64_t v24 = *(void *)(qword_10248ADE8 + 16);
    }
    double v14 = sub_100E2A1FC(v23, v24);
    int v20 = *(_DWORD *)(a2 + 132);
    if ((v20 & 0x10) == 0)
    {
LABEL_31:
      if ((v20 & 0x20) == 0) {
        goto LABEL_32;
      }
      goto LABEL_50;
    }
LABEL_45:
    *(_DWORD *)(a1 + 132) |= 0x10u;
    uint64_t v25 = *(void *)(a1 + 72);
    if (!v25) {
      operator new();
    }
    uint64_t v26 = *(void *)(a2 + 72);
    if (!v26) {
      uint64_t v26 = *(void *)(qword_10248ADE8 + 72);
    }
    sub_100E34384(v25, v26);
    int v20 = *(_DWORD *)(a2 + 132);
    if ((v20 & 0x20) == 0)
    {
LABEL_32:
      if ((v20 & 0x40) == 0) {
        goto LABEL_33;
      }
      goto LABEL_51;
    }
LABEL_50:
    double v14 = *(double *)(a2 + 80);
    *(_DWORD *)(a1 + 132) |= 0x20u;
    *(double *)(a1 + 80) = v14;
    int v20 = *(_DWORD *)(a2 + 132);
    if ((v20 & 0x40) == 0)
    {
LABEL_33:
      if ((v20 & 0x80) == 0) {
        return *(float *)&v14;
      }
LABEL_52:
      *(_DWORD *)(a1 + 132) |= 0x80u;
      uint64_t v27 = *(void *)(a1 + 96);
      if (!v27) {
        operator new();
      }
      uint64_t v28 = *(void *)(a2 + 96);
      if (!v28) {
        uint64_t v28 = *(void *)(qword_10248ADE8 + 96);
      }
      *(float *)&double v14 = sub_100E3534C(v27, v28);
      return *(float *)&v14;
    }
LABEL_51:
    double v14 = *(double *)(a2 + 88);
    *(_DWORD *)(a1 + 132) |= 0x40u;
    *(double *)(a1 + 88) = v14;
    if ((*(_DWORD *)(a2 + 132) & 0x80) == 0) {
      return *(float *)&v14;
    }
    goto LABEL_52;
  }
  return *(float *)&v14;
}

void sub_100E376D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100E376E8(uint64_t *a1)
{
  *a1 = (uint64_t)off_1022FB9F8;
  unsigned int v2 = a1 + 13;
  sub_100E37764(a1);
  sub_10016B2E8(v2);
  sub_10016B2E8(a1 + 6);
  sub_10016B2E8(a1 + 3);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void *sub_100E37764(void *result)
{
  if ((void *)qword_10248ADE8 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[9];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t result = (void *)v1[12];
    if (result)
    {
      uint64_t v5 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v5();
    }
  }
  return result;
}

void sub_100E37860(uint64_t *a1)
{
  sub_100E376E8(a1);

  operator delete();
}

uint64_t sub_100E37898(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10248ADE8;
  if (!qword_10248ADE8)
  {
    sub_100E18714(0, a2, a3, a4);
    return qword_10248ADE8;
  }
  return result;
}

void sub_100E378C8()
{
}

uint64_t sub_100E3793C(uint64_t a1)
{
  LOBYTE(v2) = *(unsigned char *)(a1 + 132);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(a1 + 132))
    {
      uint64_t v3 = *(void *)(a1 + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(a1 + 132);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v4 = *(void *)(a1 + 16);
      if (v4)
      {
        sub_100E2A534(v4);
        int v2 = *(_DWORD *)(a1 + 132);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      uint64_t v5 = *(void *)(a1 + 72);
      if (v5)
      {
        sub_100E348BC(v5);
        int v2 = *(_DWORD *)(a1 + 132);
      }
    }
    *(void *)(a1 + 80) = 0;
    *(void *)(a1 + 88) = 0;
    if ((v2 & 0x80) != 0)
    {
      uint64_t v6 = *(void *)(a1 + 96);
      if (v6)
      {
        int v7 = *(_DWORD *)(v6 + 52);
        if ((_BYTE)v7)
        {
          *(_DWORD *)(v6 + 40) = 0;
          *(_OWORD *)(v6 + 24) = 0u;
          *(_OWORD *)(v6 + 8) = 0u;
        }
        if ((v7 & 0xFF00) != 0) {
          *(_DWORD *)(v6 + 44) = 0;
        }
        *(_DWORD *)(v6 + 52) = 0;
      }
    }
  }
  sub_10026DEDC(a1 + 24);
  sub_10026DEDC(a1 + 48);
  uint64_t result = sub_10026DEDC(a1 + 104);
  *(_DWORD *)(a1 + 132) = 0;
  return result;
}

uint64_t sub_100E37A08(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24);
  uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 48);
  int v7 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 104);
  while (1)
  {
LABEL_2:
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 < *((void *)this + 2) && (*v8 & 0x80000000) == 0)
    {
      TagFallbacuint64_t k = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 132) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        if (!v11) {
          operator new();
        }
        v88[0] = 0;
        uint64_t v12 = (char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v88))return 0; {
        }
          }
        else
        {
          v88[0] = *v12;
          *((void *)this + 1) = v12 + 1;
        }
        int v14 = *((_DWORD *)this + 14);
        int v15 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v14 + 1;
        if (v14 >= v15) {
          return 0;
        }
        int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v88[0]);
        if (!sub_100E36E28(v11, this, v17) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
        int v18 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v18, 1);
        int v20 = v18 - 1;
        if (v20 < 0 == v19) {
          *((_DWORD *)this + 14) = v20;
        }
        uint64_t v21 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 != 18) {
          continue;
        }
        *((void *)this + 1) = v21 + 1;
        goto LABEL_42;
      case 2u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_30;
        }
LABEL_42:
        *(_DWORD *)(a1 + 132) |= 2u;
        uint64_t v22 = *(void *)(a1 + 16);
        if (!v22) {
          operator new();
        }
        v88[0] = 0;
        uint64_t v23 = (char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v88))return 0; {
        }
          }
        else
        {
          v88[0] = *v23;
          *((void *)this + 1) = v23 + 1;
        }
        int v24 = *((_DWORD *)this + 14);
        int v25 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v24 + 1;
        if (v24 >= v25) {
          return 0;
        }
        int v26 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v88[0]);
        if (!sub_100E2A574(v22, this, v27) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v26);
        int v28 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v28, 1);
        int v29 = v28 - 1;
        if (v29 < 0 == v19) {
          *((_DWORD *)this + 14) = v29;
        }
        int v30 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v30 >= *((void *)this + 2) || *v30 != 26) {
          continue;
        }
        do
        {
          *((void *)this + 1) = v30 + 1;
LABEL_56:
          int v31 = *(_DWORD *)(a1 + 36);
          uint64_t v32 = *(int *)(a1 + 32);
          if ((int)v32 >= v31)
          {
            if (v31 == *(_DWORD *)(a1 + 40))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v31 + 1);
              int v31 = *(_DWORD *)(a1 + 36);
            }
            *(_DWORD *)(a1 + 36) = v31 + 1;
            operator new();
          }
          uint64_t v33 = *(void *)(a1 + 24);
          *(_DWORD *)(a1 + 32) = v32 + 1;
          uint64_t v34 = *(void *)(v33 + 8 * v32);
          v88[0] = 0;
          unsigned int v35 = (char *)*((void *)this + 1);
          if ((unint64_t)v35 >= *((void *)this + 2) || *v35 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v88))return 0; {
          }
            }
          else
          {
            v88[0] = *v35;
            *((void *)this + 1) = v35 + 1;
          }
          int v36 = *((_DWORD *)this + 14);
          int v37 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v36 + 1;
          if (v36 >= v37) {
            return 0;
          }
          int v38 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v88[0]);
          if (!sub_100E2D0F8(v34, this, v39) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v38);
          int v40 = *((_DWORD *)this + 14);
          BOOL v19 = __OFSUB__(v40, 1);
          int v41 = v40 - 1;
          if (v41 < 0 == v19) {
            *((_DWORD *)this + 14) = v41;
          }
          int v30 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v30 >= *((void *)this + 2)) {
            goto LABEL_2;
          }
          int v42 = *v30;
        }
        while (v42 == 26);
        if (v42 != 34) {
          continue;
        }
        do
        {
          *((void *)this + 1) = v30 + 1;
LABEL_74:
          int v43 = *(_DWORD *)(a1 + 60);
          uint64_t v44 = *(int *)(a1 + 56);
          if ((int)v44 >= v43)
          {
            if (v43 == *(_DWORD *)(a1 + 64))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v43 + 1);
              int v43 = *(_DWORD *)(a1 + 60);
            }
            *(_DWORD *)(a1 + 60) = v43 + 1;
            operator new();
          }
          uint64_t v45 = *(void *)(a1 + 48);
          *(_DWORD *)(a1 + 56) = v44 + 1;
          uint64_t v46 = *(void *)(v45 + 8 * v44);
          v88[0] = 0;
          int v47 = (char *)*((void *)this + 1);
          if ((unint64_t)v47 >= *((void *)this + 2) || *v47 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v88))return 0; {
          }
            }
          else
          {
            v88[0] = *v47;
            *((void *)this + 1) = v47 + 1;
          }
          int v48 = *((_DWORD *)this + 14);
          int v49 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v48 + 1;
          if (v48 >= v49) {
            return 0;
          }
          int v50 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v88[0]);
          if (!sub_100E2EA84(v46, this, v51) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v50);
          int v52 = *((_DWORD *)this + 14);
          BOOL v19 = __OFSUB__(v52, 1);
          int v53 = v52 - 1;
          if (v53 < 0 == v19) {
            *((_DWORD *)this + 14) = v53;
          }
          int v30 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v30 >= *((void *)this + 2)) {
            goto LABEL_2;
          }
          int v54 = *v30;
        }
        while (v54 == 34);
        if (v54 != 42) {
          continue;
        }
        *((void *)this + 1) = v30 + 1;
LABEL_92:
        *(_DWORD *)(a1 + 132) |= 0x10u;
        uint64_t v55 = *(void *)(a1 + 72);
        if (!v55) {
          operator new();
        }
        v88[0] = 0;
        unsigned int v56 = (char *)*((void *)this + 1);
        if ((unint64_t)v56 >= *((void *)this + 2) || *v56 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v88))return 0; {
        }
          }
        else
        {
          v88[0] = *v56;
          *((void *)this + 1) = v56 + 1;
        }
        int v57 = *((_DWORD *)this + 14);
        int v58 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v57 + 1;
        if (v57 >= v58) {
          return 0;
        }
        int v59 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v88[0]);
        if (!sub_100E34948(v55, this, v60) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v59);
        int v61 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v61, 1);
        int v62 = v61 - 1;
        if (v62 < 0 == v19) {
          *((_DWORD *)this + 14) = v62;
        }
        unsigned int v63 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v63 >= *((void *)this + 2) || *v63 != 49) {
          continue;
        }
        *((void *)this + 1) = v63 + 1;
LABEL_106:
        *(void *)unint64_t v88 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v88) & 1) == 0)return 0; {
        *(void *)(a1 + 80) = *(void *)v88;
        }
        *(_DWORD *)(a1 + 132) |= 0x20u;
        int v64 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v64 >= *((void *)this + 2) || *v64 != 57) {
          continue;
        }
        *((void *)this + 1) = v64 + 1;
LABEL_110:
        *(void *)unint64_t v88 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v88) & 1) == 0)return 0; {
        *(void *)(a1 + 88) = *(void *)v88;
        }
        int v13 = *(_DWORD *)(a1 + 132) | 0x40;
        *(_DWORD *)(a1 + 132) = v13;
        int v65 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v65 >= *((void *)this + 2) || *v65 != 66) {
          continue;
        }
        *((void *)this + 1) = v65 + 1;
LABEL_114:
        *(_DWORD *)(a1 + 132) = v13 | 0x80;
        int v66 = *(_DWORD **)(a1 + 96);
        if (!v66) {
          operator new();
        }
        v88[0] = 0;
        unsigned int v67 = (char *)*((void *)this + 1);
        if ((unint64_t)v67 >= *((void *)this + 2) || *v67 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v88))return 0; {
        }
          }
        else
        {
          v88[0] = *v67;
          *((void *)this + 1) = v67 + 1;
        }
        int v68 = *((_DWORD *)this + 14);
        int v69 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v68 + 1;
        if (v68 >= v69) {
          return 0;
        }
        int v70 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v88[0]);
        if (!sub_100E355F4(v66, this, v71) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v70);
        int v72 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v72, 1);
        int v73 = v72 - 1;
        if (v73 < 0 == v19) {
          *((_DWORD *)this + 14) = v73;
        }
        int v74 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v74 < *((void *)this + 2) && *v74 == 74)
        {
          do
          {
            *((void *)this + 1) = v74 + 1;
LABEL_128:
            int v75 = *(_DWORD *)(a1 + 116);
            uint64_t v76 = *(int *)(a1 + 112);
            if ((int)v76 >= v75)
            {
              if (v75 == *(_DWORD *)(a1 + 120))
              {
                wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7, v75 + 1);
                int v75 = *(_DWORD *)(a1 + 116);
              }
              *(_DWORD *)(a1 + 116) = v75 + 1;
              operator new();
            }
            uint64_t v77 = *(void *)(a1 + 104);
            *(_DWORD *)(a1 + 112) = v76 + 1;
            uint64_t v78 = *(void *)(v77 + 8 * v76);
            v88[0] = 0;
            uint64_t v79 = (char *)*((void *)this + 1);
            if ((unint64_t)v79 >= *((void *)this + 2) || *v79 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v88))return 0; {
            }
              }
            else
            {
              v88[0] = *v79;
              *((void *)this + 1) = v79 + 1;
            }
            int v80 = *((_DWORD *)this + 14);
            int v81 = *((_DWORD *)this + 15);
            *((_DWORD *)this + 14) = v80 + 1;
            if (v80 >= v81) {
              return 0;
            }
            int v82 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v88[0]);
            if (!sub_100E36584(v78, this, v83) || !*((unsigned char *)this + 36)) {
              return 0;
            }
            wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v82);
            int v84 = *((_DWORD *)this + 14);
            BOOL v19 = __OFSUB__(v84, 1);
            int v85 = v84 - 1;
            if (v85 < 0 == v19) {
              *((_DWORD *)this + 14) = v85;
            }
            int v74 = (unsigned char *)*((void *)this + 1);
            int v86 = (unsigned char *)*((void *)this + 2);
          }
          while (v74 < v86 && *v74 == 74);
          if (v74 == v86 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
        }
        break;
      case 3u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_56;
        }
        goto LABEL_30;
      case 4u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_74;
        }
        goto LABEL_30;
      case 5u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_92;
        }
        goto LABEL_30;
      case 6u:
        int v10 = TagFallback & 7;
        if (v10 == 1) {
          goto LABEL_106;
        }
        goto LABEL_30;
      case 7u:
        int v10 = TagFallback & 7;
        if (v10 == 1) {
          goto LABEL_110;
        }
        goto LABEL_30;
      case 8u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_30;
        }
        int v13 = *(_DWORD *)(a1 + 132);
        goto LABEL_114;
      case 9u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_30;
        }
        goto LABEL_128;
      default:
        int v10 = TagFallback & 7;
LABEL_30:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100E384C0(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 132);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_10248ADE8 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 132);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v8 = *(void *)(v5 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_10248ADE8 + 16);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  }
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v9 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(*(void *)(v5 + 24) + 8 * v9++), a2, a4);
    while (v9 < *(int *)(v5 + 32));
  }
  if (*(int *)(v5 + 56) >= 1)
  {
    uint64_t v10 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(*(void *)(v5 + 48) + 8 * v10++), a2, a4);
    while (v10 < *(int *)(v5 + 56));
  }
  int v11 = *(_DWORD *)(v5 + 132);
  if ((v11 & 0x10) != 0)
  {
    uint64_t v12 = *(void *)(v5 + 72);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_10248ADE8 + 72);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v12, a2, a4);
    int v11 = *(_DWORD *)(v5 + 132);
    if ((v11 & 0x20) == 0)
    {
LABEL_17:
      if ((v11 & 0x40) == 0) {
        goto LABEL_18;
      }
      goto LABEL_24;
    }
  }
  else if ((v11 & 0x20) == 0)
  {
    goto LABEL_17;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 80), a3);
  int v11 = *(_DWORD *)(v5 + 132);
  if ((v11 & 0x40) == 0)
  {
LABEL_18:
    if ((v11 & 0x80) == 0) {
      goto LABEL_28;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(double *)(v5 + 88), a3);
  if ((*(_DWORD *)(v5 + 132) & 0x80) == 0) {
    goto LABEL_28;
  }
LABEL_25:
  uint64_t v13 = *(void *)(v5 + 96);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_10248ADE8 + 96);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v13, a2, a4);
LABEL_28:
  if (*(int *)(v5 + 112) >= 1)
  {
    uint64_t v14 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(void *)(*(void *)(v5 + 104) + 8 * v14++), a2, a4);
    while (v14 < *(int *)(v5 + 112));
  }
  return result;
}

uint64_t sub_100E38668(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 132);
  if (!(_BYTE)v3)
  {
    int v5 = 0;
    goto LABEL_40;
  }
  if (*(unsigned char *)(a1 + 132))
  {
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10248ADE8 + 8);
    }
    int v7 = *(unsigned __int8 *)(v6 + 36);
    if (*(unsigned char *)(v6 + 36))
    {
      int v8 = (v7 << 31 >> 31) & 9;
      if ((v7 & 2) != 0) {
        v8 += 9;
      }
      if ((v7 & 4) != 0) {
        int v7 = v8 + 9;
      }
      else {
        int v7 = v8;
      }
    }
    *(_DWORD *)(v6 + 32) = v7;
    int v4 = v7 + 2;
    int v3 = *(_DWORD *)(a1 + 132);
    if ((v3 & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }
  int v4 = 0;
  if ((*(unsigned char *)(a1 + 132) & 2) != 0)
  {
LABEL_15:
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_10248ADE8 + 16);
    }
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E2A97C(v9, a2);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    }
    else {
      int v12 = 1;
    }
    v4 += v11 + v12 + 1;
    int v3 = *(_DWORD *)(a1 + 132);
  }
LABEL_21:
  if ((v3 & 0x10) != 0)
  {
    uint64_t v13 = *(void *)(a1 + 72);
    if (!v13) {
      uint64_t v13 = *(void *)(qword_10248ADE8 + 72);
    }
    uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E350F4(v13, a2);
    int v15 = (int)v14;
    if (v14 >= 0x80) {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
    }
    else {
      int v16 = 1;
    }
    v4 += v15 + v16 + 1;
    int v3 = *(_DWORD *)(a1 + 132);
  }
  int v17 = v4 + 9;
  if ((v3 & 0x20) == 0) {
    int v17 = v4;
  }
  if ((v3 & 0x40) != 0) {
    int v5 = v17 + 9;
  }
  else {
    int v5 = v17;
  }
  if ((v3 & 0x80) != 0)
  {
    uint64_t v18 = *(void *)(a1 + 96);
    if (!v18) {
      uint64_t v18 = *(void *)(qword_10248ADE8 + 96);
    }
    BOOL v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E35B5C(v18, a2);
    int v20 = (int)v19;
    if (v19 >= 0x80) {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2);
    }
    else {
      int v21 = 1;
    }
    v5 += v20 + v21 + 1;
  }
LABEL_40:
  int v22 = *(_DWORD *)(a1 + 32);
  int v23 = v22 + v5;
  if (v22 >= 1)
  {
    uint64_t v24 = 0;
    do
    {
      int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E2E378(*(void *)(*(void *)(a1 + 24) + 8 * v24), a2);
      int v26 = (int)v25;
      if (v25 >= 0x80) {
        int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2);
      }
      else {
        int v27 = 1;
      }
      v23 += v26 + v27;
      ++v24;
    }
    while (v24 < *(int *)(a1 + 32));
  }
  int v28 = *(_DWORD *)(a1 + 56);
  int v29 = v28 + v23;
  if (v28 >= 1)
  {
    uint64_t v30 = 0;
    do
    {
      int v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E2ED98(*(void *)(*(void *)(a1 + 48) + 8 * v30), a2);
      int v32 = (int)v31;
      if (v31 >= 0x80) {
        int v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31, a2);
      }
      else {
        int v33 = 1;
      }
      v29 += v32 + v33;
      ++v30;
    }
    while (v30 < *(int *)(a1 + 56));
  }
  int v34 = *(_DWORD *)(a1 + 112);
  uint64_t v35 = (v34 + v29);
  if (v34 >= 1)
  {
    uint64_t v36 = 0;
    do
    {
      int v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100E36A74(*(void *)(*(void *)(a1 + 104)+ 8 * v36), a2);
      int v38 = (int)v37;
      if (v37 >= 0x80) {
        int v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37, a2);
      }
      else {
        int v39 = 1;
      }
      uint64_t v35 = (v38 + v35 + v39);
      ++v36;
    }
    while (v36 < *(int *)(a1 + 112));
  }
  *(_DWORD *)(a1 + 128) = v35;
  return v35;
}

float sub_100E388EC(uint64_t a1, void *lpsrc)
{
  return sub_100E37154(a1, (uint64_t)lpsrc);
}

uint64_t sub_100E38974()
{
  return 1;
}

void *sub_100E3897C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.MeasurementReportCallbackContents");
}

uint64_t sub_100E3898C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 168);
}

void sub_100E38998(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1 + 5020;
  sub_1000DEB28((_DWORD *)a2, a1);
  if (*(unsigned char *)(v4 + 1356) && *(int *)(a1 + 6400) >= 1)
  {
    if (*(unsigned char *)(v4 + 1359))
    {
      unsigned int v5 = *(_DWORD *)(a1 + 6368) - 1;
      double v6 = *(double *)(a1 + 6384) - *(double *)v4;
      BOOL v7 = v6 < 300.0 && *(double *)(a1 + 5952) < *(double *)v4;
      int v8 = sub_1000E6DB4(a1 + 4944);
      if (v5 < 2) {
        int v9 = v8;
      }
      else {
        int v9 = 0;
      }
      *(unsigned char *)(a2 + 5960) = 0;
      if (*(unsigned char *)(v4 + 940)) {
        BOOL v10 = 0;
      }
      else {
        BOOL v10 = v7;
      }
      if (qword_1024193B0 != -1) {
        dispatch_once(&qword_1024193B0, &stru_1022FBF70);
      }
      int v11 = v10 & v9;
      int v12 = qword_1024193B8;
      if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
      {
        int v13 = *(unsigned __int8 *)(v4 + 940);
        double v14 = *(double *)v4;
        uint64_t v15 = *(void *)(a1 + 5952);
        *(_DWORD *)std::string buf = 67241984;
        int v18 = v11;
        __int16 v19 = 1026;
        int v20 = v13;
        __int16 v21 = 1026;
        BOOL v22 = v7;
        __int16 v23 = 2050;
        double v24 = v14;
        __int16 v25 = 2050;
        uint64_t v26 = v15;
        __int16 v27 = 2050;
        double v28 = v6;
        __int16 v29 = 1026;
        int v30 = v9;
        __int16 v31 = 1026;
        BOOL v32 = v5 < 2;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "WifiTimer, reissue, %{public}d, force, %{public}d, time, %{public}d, %{public}.1f, %{public}.1f, %{public}.1f, place, %{public}d, %{public}d", buf, 0x3Eu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193B0 != -1) {
          dispatch_once(&qword_1024193B0, &stru_1022FBF70);
        }
        int v16 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Client::UpdateTimer &) const", "%s\n", v16);
        if (v16 != (char *)buf) {
          free(v16);
        }
      }
      *(unsigned char *)(a2 + 810) = v11;
    }
    else
    {
      *(void *)(a2 + 6160) = 0x4018000000000000;
    }
  }
}

void sub_100E38CA4(_Unwind_Exception *a1)
{
  sub_10050BAA0(v1);
  _Unwind_Resume(a1);
}

void sub_100E38CBC(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  double v6 = (unsigned char *)(a1 + 6172);
  BOOL v7 = (unsigned char *)(a3 + 5960);
  sub_1000DEB28((_DWORD *)a3, a1);
  *(unsigned char *)(a3 + 6379) = *a2 == 0;
  if (*v6)
  {
    *(_OWORD *)(a3 + 6184) = *(_OWORD *)(a1 + 6184);
    *(_OWORD *)(a3 + 6168) = *(_OWORD *)(a1 + 6168);
    *(_OWORD *)(a3 + 6216) = *(_OWORD *)(a1 + 6216);
    *(_OWORD *)(a3 + 6232) = *(_OWORD *)(a1 + 6232);
    *(_OWORD *)(a3 + 6248) = *(_OWORD *)(a1 + 6248);
    *(_OWORD *)(a3 + 6200) = *(_OWORD *)(a1 + 6200);
    *(_OWORD *)(a3 + 6257) = *(_OWORD *)(a1 + 6257);
    if (*(double *)(a3 + 6192) <= *(double *)(a3 + 6176))
    {
      *(void *)(a3 + 6192) = *(void *)(a1 + 6384);
      if (qword_1024193B0 != -1) {
        dispatch_once(&qword_1024193B0, &stru_1022FBF70);
      }
      int v8 = qword_1024193B8;
      if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
      {
        double v9 = *(double *)(a3 + 6192) - *(double *)(a3 + 6176);
        *(_DWORD *)std::string buf = 134349056;
        double v12 = v9;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "@EmerTick, wifi, %{public}.1f", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193B0 != -1) {
          dispatch_once(&qword_1024193B0, &stru_1022FBF70);
        }
        BOOL v10 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Wifi::Power &) const", "%s\n", v10);
        if (v10 != (char *)buf) {
          free(v10);
        }
      }
    }
  }
  if (v6[204])
  {
    unsigned char *v7 = 0;
    *(void *)(a3 + 6160) = 0x4018000000000000;
  }
}

void sub_100E38F38(_Unwind_Exception *a1)
{
  sub_10050BAA0(v1);
  _Unwind_Resume(a1);
}

void sub_100E38F50(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1000DEB28((_DWORD *)a3, a1);
  if (*(unsigned char *)(a1 + 6376))
  {
    sub_1000E23EC(v11, a2);
    sub_100F91E7C(v15, v11);
    sub_1000E23EC(&v20, a2);
    LODWORD(v19) = 5;
    double v6 = sub_1000E0EF0((int *)&v19);
    sub_100E39188(a3 + 3208, (uint64_t)v15, (uint64_t)v6);
    sub_1000D7B80((uint64_t)&v19);
    if (v18 && v17 < 0) {
      operator delete(__p);
    }
    if (v14 && v13 < 0) {
      operator delete(v12);
    }
    sub_1000E23EC(v15, a2);
    sub_100F91E7C(&v19, v15);
    sub_1000E2DB0(a3 + 3208, (uint64_t)&v19);
    *(_WORD *)(a3 + 3304) = v23;
    if (v22 && v21 < 0) {
      operator delete(v20);
    }
    if (v18 && v17 < 0) {
      operator delete(__p);
    }
    int v7 = sub_100F91E80(a3 + 3208);
    int v8 = *(void **)(a3 + 3312);
    if (v7)
    {
      uint64_t v19 = sub_1000D8908(a3 + 3208);
      double Current = CFAbsoluteTimeGetCurrent();
      sub_1013F99A0(v8, (unint64_t *)&v19, Current);
    }
    else
    {
      double v10 = CFAbsoluteTimeGetCurrent();
      sub_1013FA2B8(v8, v10);
    }
  }
}

void sub_100E390EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,char a41)
{
  if (a2) {
    sub_1001C7F8C(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100E39188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100E46634(a1, &__s1);
  sub_100E46634(a2, &__p);
  uint64_t v5 = HIBYTE(__s1.__r_.__value_.__r.__words[2]);
  if ((__s1.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__s1.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __s1.__r_.__value_.__l.__size_;
  }
  std::string::size_type v7 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type v7 = __p.__r_.__value_.__l.__size_;
  }
  if (size == v7)
  {
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((*((unsigned char *)&__s1.__r_.__value_.__s + 23) & 0x80) != 0)
    {
      if (!memcmp(__s1.__r_.__value_.__l.__data_, p_p, __s1.__r_.__value_.__l.__size_)) {
        goto LABEL_26;
      }
    }
    else
    {
      if (!*((unsigned char *)&__s1.__r_.__value_.__s + 23)) {
        goto LABEL_26;
      }
      p_s1 = &__s1;
      while (p_s1->__r_.__value_.__s.__data_[0] == p_p->__r_.__value_.__s.__data_[0])
      {
        p_s1 = (std::string *)((char *)p_s1 + 1);
        p_p = (std::string *)((char *)p_p + 1);
        if (!--v5) {
          goto LABEL_26;
        }
      }
    }
  }
  if (qword_1024193B0 != -1) {
    dispatch_once(&qword_1024193B0, &stru_1022FBF70);
  }
  double v10 = qword_1024193B8;
  if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
  {
    int v11 = &__s1;
    if ((__s1.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v11 = (std::string *)__s1.__r_.__value_.__r.__words[0];
    }
    double v12 = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      double v12 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)std::string buf = 136381187;
    __int16 v25 = v11;
    __int16 v26 = 2081;
    __int16 v27 = v12;
    __int16 v28 = 2081;
    uint64_t v29 = a3;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "WifiFlow, updating associated AP from %{private}s to %{private}s using event %{private}s", buf, 0x20u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022FBF70);
    }
    char v13 = &__s1;
    if ((__s1.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      char v13 = (std::string *)__s1.__r_.__value_.__r.__words[0];
    }
    char v14 = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      char v14 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    int v18 = 136381187;
    uint64_t v19 = v13;
    __int16 v20 = 2081;
    char v21 = v14;
    __int16 v22 = 2081;
    uint64_t v23 = a3;
    uint64_t v15 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CL::Wifi1::Policies::PrePositionCalculationStateUpdate::logAssociatedApUpdate(const Types::AssociatedAp &, const Types::AssociatedAp &, const char *)", "%s\n", v15);
    if (v15 != (char *)buf) {
      free(v15);
    }
  }
LABEL_26:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__s1.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__s1.__r_.__value_.__l.__data_);
  }
}

void sub_100E39460(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

void sub_100E394A0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1000DEB28((_DWORD *)a3, a1);
  if (*(unsigned char *)(a1 + 6376))
  {
    sub_1000E23EC(v11, a2);
    sub_100F91E7C(v15, v11);
    sub_1000E23EC(&v20, a2);
    LODWORD(v19) = 6;
    double v6 = sub_1000E0EF0((int *)&v19);
    sub_100E39188(a3 + 3208, (uint64_t)v15, (uint64_t)v6);
    sub_1000D7B80((uint64_t)&v19);
    if (v18 && v17 < 0) {
      operator delete(__p);
    }
    if (v14 && v13 < 0) {
      operator delete(v12);
    }
    sub_1000E23EC(v15, a2);
    sub_100F91E7C(&v19, v15);
    sub_1000E2DB0(a3 + 3208, (uint64_t)&v19);
    *(_WORD *)(a3 + 3304) = v23;
    if (v22 && v21 < 0) {
      operator delete(v20);
    }
    if (v18 && v17 < 0) {
      operator delete(__p);
    }
    int v7 = sub_100F91E80(a3 + 3208);
    int v8 = *(void **)(a3 + 3312);
    if (v7)
    {
      uint64_t v19 = sub_1000D8908(a3 + 3208);
      double Current = CFAbsoluteTimeGetCurrent();
      sub_1013F99A0(v8, (unint64_t *)&v19, Current);
    }
    else
    {
      double v10 = CFAbsoluteTimeGetCurrent();
      sub_1013FA2B8(v8, v10);
    }
  }
}

void sub_100E3963C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,char a41)
{
  if (a2) {
    sub_1001C7F8C(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100E396D8(uint64_t a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t v5 = a3;
  double v6 = a3 + 794;
  sub_1000DEB28(a3, a1);
  int v7 = *(unsigned __int8 *)(a2 + 48);
  if (v7 != 5) {
    *((unsigned char *)v5 + 6152) = 1;
  }
  if (*(unsigned char *)(a1 + 6376))
  {
    sub_1000E23EC(__p, a2 + 56);
    if (v134)
    {
      if ((v124[7] & 0x80000000) != 0) {
        operator delete(*(void **)&__p[8]);
      }
      sub_1000E23EC(v104, a2 + 56);
      if (!v109) {
        sub_10020D700();
      }
      long long v111 = *(_OWORD *)&v104[8];
      long long v113 = v105;
      uint64_t v110 = *(void *)v104;
      uint64_t v112 = *(void *)&v104[24];
      memset(&v104[8], 0, 24);
      long long v114 = v106;
      long long v115 = v107;
      uint64_t v116 = v108;
      sub_100F91C60(v117, &v110);
      *(_DWORD *)std::string __p = sub_100E47060((uint64_t)&__p[8], a2);
      int v8 = sub_1000E0EF0((int *)__p);
      sub_100E39188((uint64_t)(v5 + 802), (uint64_t)v117, (uint64_t)v8);
      sub_1000D7B80((uint64_t)__p);
      if (v121 && (v118[7] & 0x80000000) != 0) {
        operator delete(*(void **)&v117[8]);
      }
      if (SHIBYTE(v112) < 0) {
        operator delete((void *)v111);
      }
      if (v109 && (v104[31] & 0x80000000) != 0) {
        operator delete(*(void **)&v104[8]);
      }
      sub_1000E23EC(v117, a2 + 56);
      if (!v121) {
        sub_10020D700();
      }
      uint64_t v97 = *(void *)v117;
      *(_OWORD *)unsigned int v98 = *(_OWORD *)&v117[8];
      uint64_t v99 = *(void *)v118;
      *(void *)&v117[8] = 0;
      *(void *)&v117[16] = 0;
      *(void *)long long v118 = 0;
      long long v100 = *(_OWORD *)&v118[8];
      long long v101 = *(_OWORD *)&v118[24];
      long long v102 = v119;
      uint64_t v103 = v120;
      sub_100F91C60(__p, &v97);
      sub_1000E2DB0((uint64_t)(v5 + 802), (uint64_t)__p);
      *((_WORD *)v5 + 1652) = v135;
      if (v134 && (v124[7] & 0x80000000) != 0) {
        operator delete(*(void **)&__p[8]);
      }
      if (SHIBYTE(v99) < 0) {
        operator delete(v98[0]);
      }
      if (v121 && (v118[7] & 0x80000000) != 0) {
        operator delete(*(void **)&v117[8]);
      }
      int v9 = sub_100F91E80((uint64_t)(v5 + 802));
      double v10 = (void *)*((void *)v5 + 414);
      if (v9)
      {
        *(void *)std::string __p = sub_1000D8908((uint64_t)(v5 + 802));
        double Current = CFAbsoluteTimeGetCurrent();
        sub_1013F99A0(v10, (unint64_t *)__p, Current);
      }
      else
      {
        double v14 = CFAbsoluteTimeGetCurrent();
        sub_1013FA2B8(v10, v14);
      }
    }
    int v15 = *(_DWORD *)(a1 + 6168);
    int v16 = *(_DWORD *)(a1 + 6172);
    double v17 = *(double *)(a1 + 6176);
    long long v18 = *(_OWORD *)(a1 + 6184);
    uint64_t v96 = *(void *)(a1 + 6200);
    double v19 = *(double *)(a1 + 6208);
    long long v94 = *(_OWORD *)(a1 + 6216);
    long long v95 = v18;
    double v20 = *(double *)(a1 + 6232);
    long long v21 = *(_OWORD *)(a1 + 6256);
    *(_OWORD *)unsigned int v104 = *(_OWORD *)(a1 + 6240);
    *(_OWORD *)&v104[16] = v21;
    char v22 = (_DWORD *)(a1 + 5968);
    *(void *)&long long v105 = *(void *)(a1 + 6272);
    if (sub_1006D30F0((_DWORD *)(a1 + 5968)))
    {
      if (v7 == 12)
      {
        if ((v15 - 3) <= 1)
        {
          if (v15 == 4) {
            int v27 = 6;
          }
          else {
            int v27 = 5;
          }
          if (v20 < v17)
          {
            double v20 = *(double *)(a1 + 6384);
            if (qword_1024193B0 != -1) {
              dispatch_once(&qword_1024193B0, &stru_1022FBF70);
            }
            __int16 v28 = qword_1024193B8;
            if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)std::string __p = 134349056;
              *(double *)&__p[4] = v20 - v17;
              _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "@EmerTick, scanreply5ghz, %{public}.1f", __p, 0xCu);
            }
            if (sub_10013D1A0(115, 2))
            {
              bzero(__p, 0x65CuLL);
              if (qword_1024193B0 != -1) {
                dispatch_once(&qword_1024193B0, &stru_1022FBF70);
              }
              *(_DWORD *)long long v117 = 134349056;
              *(double *)&v117[4] = v20 - v17;
              unint64_t v88 = (char *)_os_log_send_and_compose_impl();
              sub_1004BA5E4("Generic", 1, 0, 2, "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Wifi::Scan &) const", "%s\n", v88);
              if (v88 != __p) {
                free(v88);
              }
              char v22 = (_DWORD *)(a1 + 5968);
            }
          }
          if (qword_1024193B0 != -1) {
            dispatch_once(&qword_1024193B0, &stru_1022FBF70);
          }
          uint64_t v29 = qword_1024193B8;
          if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
          {
            int v30 = sub_100D54EB0(0xCu);
            __int16 v31 = "ScanReply5GHzWithPendingAls";
            if (v15 == 4) {
              __int16 v31 = "ScanReply5GHzWithAlsReply";
            }
            uint64_t v32 = *(void *)(a2 + 24);
            *(_DWORD *)std::string __p = 136446978;
            *(void *)&__p[4] = v31;
            *(_WORD *)&unsigned char __p[12] = 2082;
            *(void *)&__p[14] = v30;
            __int16 v123 = 2050;
            *(void *)long long v124 = v32;
            *(_WORD *)&v124[8] = 2050;
            *(double *)long long v125 = v20 - v17;
            _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, "@EmerFlow, %{public}s, %{public}s, aps, %{public}lu, tte, %{public}.1f", __p, 0x2Au);
          }
          if (!sub_10013D1A0(115, 2))
          {
            int v15 = v27;
            goto LABEL_90;
          }
          int v90 = v5;
          uint64_t v35 = v22;
          bzero(__p, 0x65CuLL);
          if (qword_1024193B0 != -1) {
            dispatch_once(&qword_1024193B0, &stru_1022FBF70);
          }
          unsigned int v83 = sub_100D54EB0(0xCu);
          int v84 = "ScanReply5GHzWithPendingAls";
          if (v15 == 4) {
            int v84 = "ScanReply5GHzWithAlsReply";
          }
          uint64_t v85 = *(void *)(a2 + 24);
          *(_DWORD *)long long v117 = 136446978;
          *(void *)&v117[4] = v84;
          *(_WORD *)&v117[12] = 2082;
          *(void *)&v117[14] = v83;
          *(_WORD *)&v117[22] = 2050;
          *(void *)long long v118 = v85;
          *(_WORD *)&v118[8] = 2050;
          *(double *)&v118[10] = v20 - v17;
          int v86 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Wifi::Scan &) const", "%s\n", v86);
          if (v86 != __p) {
            free(v86);
          }
          int v15 = v27;
          goto LABEL_146;
        }
        if (qword_1024193B0 != -1) {
          dispatch_once(&qword_1024193B0, &stru_1022FBF70);
        }
        int v39 = qword_1024193B8;
        if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)std::string __p = 67240192;
          *(_DWORD *)&__p[4] = v15;
          _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, "@EmerWarn, unexpected state, onWifiNotification, %{public}d, #CloneMe", __p, 8u);
        }
        if (sub_10013D1A0(115, 2))
        {
          int v90 = v5;
          uint64_t v35 = (_DWORD *)(a1 + 5968);
          bzero(__p, 0x65CuLL);
          if (qword_1024193B0 == -1)
          {
LABEL_131:
            *(_DWORD *)long long v117 = 67240192;
            *(_DWORD *)&v117[4] = v15;
            int v37 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 2, "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Wifi::Scan &) const", "%s\n", v37);
LABEL_132:
            if (v37 != __p) {
              free(v37);
            }
LABEL_146:
            char v22 = v35;
            uint64_t v5 = v90;
            goto LABEL_90;
          }
LABEL_159:
          dispatch_once(&qword_1024193B0, &stru_1022FBF70);
          goto LABEL_131;
        }
      }
      else if (v7 == 10)
      {
        if (v15 == 1)
        {
          if (v19 < v17)
          {
            double v19 = *(double *)(a1 + 6384);
            if (qword_1024193B0 != -1) {
              dispatch_once(&qword_1024193B0, &stru_1022FBF70);
            }
            __int16 v23 = qword_1024193B8;
            if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)std::string __p = 134349056;
              *(double *)&__p[4] = v19 - v17;
              _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "@EmerTick, scanreply, %{public}.1f", __p, 0xCu);
            }
            if (sub_10013D1A0(115, 2))
            {
              bzero(__p, 0x65CuLL);
              if (qword_1024193B0 != -1) {
                dispatch_once(&qword_1024193B0, &stru_1022FBF70);
              }
              *(_DWORD *)long long v117 = 134349056;
              *(double *)&v117[4] = v19 - v17;
              int v87 = (char *)_os_log_send_and_compose_impl();
              sub_1004BA5E4("Generic", 1, 0, 2, "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Wifi::Scan &) const", "%s\n", v87);
              if (v87 != __p) {
                free(v87);
              }
              char v22 = (_DWORD *)(a1 + 5968);
            }
          }
          if (qword_1024193B0 != -1) {
            dispatch_once(&qword_1024193B0, &stru_1022FBF70);
          }
          double v24 = qword_1024193B8;
          if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
          {
            __int16 v25 = sub_100D54EB0(0xAu);
            uint64_t v26 = *(void *)(a2 + 24);
            *(_DWORD *)std::string __p = 136446722;
            *(void *)&__p[4] = v25;
            *(_WORD *)&unsigned char __p[12] = 2050;
            *(void *)&__p[14] = v26;
            __int16 v123 = 2050;
            *(double *)long long v124 = v19 - v17;
            _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "@EmerFlow, ScanReply, %{public}s, aps, %{public}lu, tte, %{public}.1f", __p, 0x20u);
          }
          if (!sub_10013D1A0(115, 2))
          {
            int v15 = 2;
            goto LABEL_90;
          }
          int v90 = v5;
          uint64_t v35 = v22;
          bzero(__p, 0x65CuLL);
          if (qword_1024193B0 != -1) {
            dispatch_once(&qword_1024193B0, &stru_1022FBF70);
          }
          int v80 = sub_100D54EB0(0xAu);
          uint64_t v81 = *(void *)(a2 + 24);
          *(_DWORD *)long long v117 = 136446722;
          *(void *)&v117[4] = v80;
          *(_WORD *)&v117[12] = 2050;
          *(void *)&v117[14] = v81;
          *(_WORD *)&v117[22] = 2050;
          *(double *)long long v118 = v19 - v17;
          int v82 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Wifi::Scan &) const", "%s\n", v82);
          if (v82 != __p) {
            free(v82);
          }
          int v15 = 2;
          goto LABEL_146;
        }
        if (qword_1024193B0 != -1) {
          dispatch_once(&qword_1024193B0, &stru_1022FBF70);
        }
        int v38 = qword_1024193B8;
        if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)std::string __p = 67240192;
          *(_DWORD *)&__p[4] = v15;
          _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEFAULT, "@EmerWarn, unexpected state, onWifiNotification, %{public}d, #CloneMe", __p, 8u);
        }
        if (sub_10013D1A0(115, 2))
        {
          int v90 = v5;
          uint64_t v35 = (_DWORD *)(a1 + 5968);
          bzero(__p, 0x65CuLL);
          if (qword_1024193B0 == -1) {
            goto LABEL_131;
          }
          goto LABEL_159;
        }
      }
      else
      {
        if (qword_1024193B0 != -1) {
          dispatch_once(&qword_1024193B0, &stru_1022FBF70);
        }
        int v33 = qword_1024193B8;
        if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
        {
          int v34 = sub_100D54EB0((char)v7);
          *(_DWORD *)std::string __p = 136446210;
          *(void *)&__p[4] = v34;
          _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "@EmerWarn, ignore scan, %{public}s", __p, 0xCu);
        }
        if (sub_10013D1A0(115, 2))
        {
          int v90 = v5;
          uint64_t v35 = (_DWORD *)(a1 + 5968);
          bzero(__p, 0x65CuLL);
          if (qword_1024193B0 != -1) {
            dispatch_once(&qword_1024193B0, &stru_1022FBF70);
          }
          uint64_t v36 = sub_100D54EB0((char)v7);
          *(_DWORD *)long long v117 = 136446210;
          *(void *)&v117[4] = v36;
          int v37 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Wifi::Scan &) const", "%s\n", v37);
          goto LABEL_132;
        }
      }
    }
LABEL_90:
    v5[1542] = v15;
    v5[1543] = v16;
    *((double *)v5 + 772) = v17;
    *((void *)v5 + 775) = v96;
    *(_OWORD *)(v5 + 1546) = v95;
    *((double *)v5 + 776) = v19;
    *(_OWORD *)(v5 + 1554) = v94;
    *((double *)v5 + 779) = v20;
    long long v40 = *(_OWORD *)&v104[16];
    *((_OWORD *)v5 + 390) = *(_OWORD *)v104;
    *((_OWORD *)v5 + 391) = v40;
    *((unsigned char *)v5 + 6272) = v105;
    double v41 = *(double *)(*(void *)(a1 + 3176) + 40);
    double v42 = *(double *)(a1 + 6384);
    BOOL v43 = sub_1006D30F0(v22);
    double v44 = v42 - v41;
    char v45 = *(unsigned char *)(a2 + 48) != 5 || v43;
    double v46 = *(double *)(a2 + 40);
    double v47 = *(double *)(a1 + 6144);
    double v48 = v46 - v47;
    if (v45)
    {
      if (v46 - v47 >= 0.0)
      {
        *((unsigned char *)v5 + 808) = 1;
        goto LABEL_105;
      }
    }
    else if (v46 - v47 >= 0.0)
    {
      double v53 = fabs(v44);
      *((unsigned char *)v5 + 808) = v53 > 6.0;
      if (v53 <= 6.0)
      {
        int v52 = 0;
LABEL_110:
        int v56 = *(_DWORD *)(a1 + 6368);
        int v57 = sub_1000E6DB4(a1 + 4944);
        *((double *)v5 + 770) = sub_100E3AD00(a1, v56, v57);
        double v58 = *(double *)(a1 + 6384);
        int v59 = (std::__shared_weak_count *)*((void *)v5 + 396);
        v93[0] = *((void **)v5 + 395);
        v93[1] = &v59->__vftable;
        if (v59) {
          atomic_fetch_add_explicit(&v59->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        sub_100E3AFB4(v93, v58);
        if (v59) {
          sub_1000DB0A0(v59);
        }
        sub_100E3B1FC(*((void **)v5 + 395), a2);
        sub_100AC2FC0((unsigned __int8 *)v5 + 6444, *(unsigned char *)(a2 + 48));
        if (qword_1024193B0 != -1) {
          dispatch_once(&qword_1024193B0, &stru_1022FBF70);
        }
        unsigned int v60 = qword_1024193B8;
        if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v89 = a2;
          int v91 = v5;
          int v61 = v22;
          uint64_t v62 = *(void *)(a2 + 24);
          unsigned int v63 = sub_100D54EB0(*(char *)(a2 + 48));
          uint64_t v64 = *(void *)(*((void *)v91 + 395) + 24);
          int v65 = *(_DWORD *)(a1 + 6400);
          int v66 = *(_DWORD *)(a1 + 6404);
          int v67 = *(_DWORD *)(a1 + 6408);
          int v68 = sub_1006D40F4(v61);
          *(_DWORD *)std::string __p = 134351106;
          *(void *)&__p[4] = v62;
          *(_WORD *)&unsigned char __p[12] = 2082;
          *(void *)&__p[14] = v63;
          __int16 v123 = 1026;
          *(_DWORD *)long long v124 = (int)v44;
          *(_WORD *)&v124[4] = 1026;
          *(_DWORD *)&v124[6] = v52;
          *(_WORD *)long long v125 = 2050;
          *(void *)&v125[2] = v64;
          __int16 v126 = 1026;
          int v127 = v65;
          __int16 v128 = 1026;
          int v129 = v66;
          __int16 v130 = 1026;
          int v131 = v67;
          __int16 v132 = 2082;
          long long v133 = v68;
          _os_log_impl((void *)&_mh_execute_header, v60, OS_LOG_TYPE_DEFAULT, "@WifiFlow, scanreply, aps, %{public}lu, type, %{public}s, lastused, %{public}d, use, %{public}d, history, %{public}ld, lsbclients, %{public}d, %{public}d, %{public}d, reqtype, %{public}s", __p, 0x48u);
          char v22 = v61;
          a2 = v89;
          uint64_t v5 = v91;
        }
        if (!sub_10013D1A0(115, 2)) {
          return;
        }
        int v92 = v5;
        bzero(__p, 0x65CuLL);
        int v69 = v22;
        if (qword_1024193B0 != -1) {
          dispatch_once(&qword_1024193B0, &stru_1022FBF70);
        }
        uint64_t v70 = *(void *)(a2 + 24);
        unsigned int v71 = sub_100D54EB0(*(char *)(a2 + 48));
        uint64_t v72 = *(void *)(*((void *)v92 + 395) + 24);
        int v73 = *(_DWORD *)(a1 + 6400);
        int v74 = *(_DWORD *)(a1 + 6404);
        int v75 = *(_DWORD *)(a1 + 6408);
        uint64_t v76 = sub_1006D40F4(v69);
        *(_DWORD *)long long v117 = 134351106;
        *(void *)&v117[4] = v70;
        *(_WORD *)&v117[12] = 2082;
        *(void *)&v117[14] = v71;
        *(_WORD *)&v117[22] = 1026;
        *(_DWORD *)long long v118 = (int)v44;
        *(_WORD *)&v118[4] = 1026;
        *(_DWORD *)&v118[6] = v52;
        *(_WORD *)&v118[10] = 2050;
        *(void *)&v118[12] = v72;
        *(_WORD *)&unsigned char v118[20] = 1026;
        *(_DWORD *)&v118[22] = v73;
        *(_WORD *)&v118[26] = 1026;
        *(_DWORD *)&v118[28] = v74;
        *(_WORD *)&v118[32] = 1026;
        *(_DWORD *)&v118[34] = v75;
        *(_WORD *)&v118[38] = 2082;
        *(void *)&long long v119 = v76;
        char v13 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Wifi::Scan &) const", "%s\n", v13);
LABEL_123:
        if (v13 != __p) {
          free(v13);
        }
        return;
      }
LABEL_105:
      sub_100E470BC(a2, __p);
      long long v54 = *(_OWORD *)__p;
      *(void *)std::string __p = 0;
      *(void *)&__p[8] = 0;
      uint64_t v55 = (std::__shared_weak_count *)*((void *)v5 + 398);
      *double v6 = v54;
      if (v55)
      {
        sub_1000DB0A0(v55);
        if (*(void *)&__p[8]) {
          sub_1000DB0A0(*(std::__shared_weak_count **)&__p[8]);
        }
      }
      int v52 = 1;
      goto LABEL_110;
    }
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022FBF70);
    }
    int v49 = qword_1024193B8;
    if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
    {
      int v50 = (int)*(double *)(a2 + 40);
      int v51 = (int)*(double *)(a1 + 6144);
      *(_DWORD *)std::string __p = 67240704;
      *(_DWORD *)&__p[4] = (int)v48;
      *(_WORD *)&__p[8] = 1026;
      *(_DWORD *)&unsigned char __p[10] = v50;
      *(_WORD *)&__p[14] = 1026;
      *(_DWORD *)&__p[16] = v51;
      _os_log_impl((void *)&_mh_execute_header, v49, OS_LOG_TYPE_DEFAULT, "WifiFlow, scanreply, warn, pre-privacy, %{public}d, scan, %{public}d, privacy, %{public}d", __p, 0x14u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_1024193B0 != -1) {
        dispatch_once(&qword_1024193B0, &stru_1022FBF70);
      }
      int v77 = (int)*(double *)(a2 + 40);
      int v78 = (int)*(double *)(a1 + 6144);
      *(_DWORD *)long long v117 = 67240704;
      *(_DWORD *)&v117[4] = (int)v48;
      *(_WORD *)&v117[8] = 1026;
      *(_DWORD *)&v117[10] = v77;
      *(_WORD *)&v117[14] = 1026;
      *(_DWORD *)&v117[16] = v78;
      uint64_t v79 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Wifi::Scan &) const", "%s\n", v79);
      if (v79 != __p) {
        free(v79);
      }
    }
    int v52 = 0;
    *((unsigned char *)v5 + 808) = 0;
    goto LABEL_110;
  }
  *((unsigned char *)v5 + 808) = 0;
  if (qword_1024193B0 != -1) {
    dispatch_once(&qword_1024193B0, &stru_1022FBF70);
  }
  double v12 = qword_1024193B8;
  if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::string __p = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "WifiFlow, scanreply, warn, ToggleOff", __p, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022FBF70);
    }
    *(_WORD *)long long v117 = 0;
    char v13 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Wifi::Scan &) const", "%s\n", v13);
    goto LABEL_123;
  }
}

void sub_100E3ABA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
}

double sub_100E3AD00(uint64_t a1, int a2, int a3)
{
  if (*(unsigned char *)(a1 + 6172))
  {
    uint64_t v4 = "Emer";
LABEL_3:
    uint64_t v5 = 6;
    goto LABEL_17;
  }
  if (*(unsigned char *)(a1 + 6421))
  {
    double v6 = "Motion";
    uint64_t v7 = 6;
    uint64_t v8 = 60;
    if (a3) {
      uint64_t v8 = 15;
    }
    uint64_t v9 = 300;
    if (a3) {
      uint64_t v9 = 15;
    }
    if (a2 == 1)
    {
      uint64_t v7 = v9;
      double v6 = "Frozen";
    }
    if (a2 == 2) {
      uint64_t v5 = v8;
    }
    else {
      uint64_t v5 = v7;
    }
    if (a2 == 2) {
      uint64_t v4 = "Static";
    }
    else {
      uint64_t v4 = v6;
    }
  }
  else
  {
    uint64_t v12 = a1 + 3208;
    if (!sub_100F91E80(a1 + 3208))
    {
      uint64_t v4 = "Unassociated";
      goto LABEL_3;
    }
    if sub_100F91E88(v12) && (sub_100F91EA0(v12))
    {
      uint64_t v4 = "InvalidAssoc";
      goto LABEL_3;
    }
    uint64_t v4 = "Assoc";
    uint64_t v5 = 300;
  }
LABEL_17:
  if (qword_1024193B0 != -1) {
    dispatch_once(&qword_1024193B0, &stru_1022FBF70);
  }
  double v10 = qword_1024193B8;
  if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::string buf = 67240706;
    int v15 = v5;
    __int16 v16 = 1026;
    int v17 = a3;
    __int16 v18 = 2082;
    double v19 = v4;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "WifiTimer, nextscan, %{public}d, haveLoc, %{public}d, codepath, %{public}s", buf, 0x18u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022FBF70);
    }
    char v13 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "cl::chrono::secondsf CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::selectNextScanInterval(CLMotionActivity::Type, BOOL) const", "%s\n", v13);
    if (v13 != (char *)buf) {
      free(v13);
    }
  }
  return (double)v5;
}

void sub_100E3AFB4(void **a1, double a2)
{
  sub_100F91578(*a1, &v4, a2, 30.0);
  if (qword_1024193B0 != -1) {
    dispatch_once(&qword_1024193B0, &stru_1022FBF70);
  }
  int v2 = qword_1024193B8;
  if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::string buf = 134349312;
    *(void *)&uint8_t buf[4] = 0x2E8BA2E8BA2E8BA3 * ((v5 - v4) >> 3);
    __int16 v11 = 2050;
    uint64_t v12 = 30;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "remove old APs from scan history, count, %{public}ld, max_secs, %{public}lld", buf, 0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022FBF70);
    }
    int v6 = 134349312;
    uint64_t v7 = 0x2E8BA2E8BA2E8BA3 * ((v5 - v4) >> 3);
    __int16 v8 = 2050;
    uint64_t v9 = 30;
    int v3 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "static void CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::removeOldApsFromWifiScanHistory(cl::chrono::CFAbsoluteTimeClock::time_point, std::shared_ptr<Types::WifiScanHistory>)", "%s\n", v3);
    if (v3 != buf) {
      free(v3);
    }
  }
  *(void *)std::string buf = &v4;
  sub_1000D7F78((void ***)buf);
}

void sub_100E3B1D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void **a19)
{
  a19 = (void **)&a12;
  sub_1000D7F78(&a19);
  _Unwind_Resume(a1);
}

void sub_100E3B1FC(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a2 + 16);
  if (v4)
  {
    do
    {
      sub_100E466AC(a1, v4 + 2);
      uint64_t v4 = (void *)*v4;
    }
    while (v4);
    for (int i = *(void **)(a2 + 16); i; int i = (void *)*i)
      sub_10050EED0((uint64_t)a1, i + 2, (uint64_t)(i + 2));
  }
  if (qword_1024193B0 != -1) {
    dispatch_once(&qword_1024193B0, &stru_1022FBF70);
  }
  int v6 = qword_1024193B8;
  if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = a1[3];
    uint64_t v8 = *(void *)(a2 + 24);
    *(_DWORD *)std::string buf = 134349312;
    uint64_t v11 = v7;
    __int16 v12 = 2050;
    uint64_t v13 = v8;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "@WifiAps, history, %{public}lu, add, %{public}lu", buf, 0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022FBF70);
    }
    uint64_t v9 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CL::Wifi1::Types::WifiScanHistory::addScan(const WifiScan &)", "%s\n", v9);
    if (v9 != (char *)buf) {
      free(v9);
    }
  }
}

void sub_100E3B410(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000DEB28((_DWORD *)a2, a1);
  if (qword_1024193B0 != -1) {
    dispatch_once(&qword_1024193B0, &stru_1022FBF70);
  }
  uint64_t v4 = qword_1024193B8;
  if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "WifiFlow, scanreply, warn, error", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022FBF70);
    }
    double v10 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Wifi::ScanError &) const", "%s\n", v10);
    if (v10 != (char *)buf) {
      free(v10);
    }
  }
  *(unsigned char *)(a2 + 6152) = 0;
  if (*(unsigned char *)(a1 + 6376))
  {
    ++*(_DWORD *)(*(void *)(a2 + 6424) + 208);
    uint64_t v5 = (void *)(a1 + 5968);
    if (sub_100054BBC((_DWORD *)(a1 + 5968)))
    {
      *(unsigned char *)(a2 + 5960) = 1;
      *(void *)std::string buf = *v5;
      char v12 = *(unsigned char *)(a1 + 5976);
      if (*(char *)(a1 + 6007) < 0) {
        sub_1000DC48C(&v13, *(void **)(a1 + 5984), *(void *)(a1 + 5992));
      }
      else {
        std::string v13 = *(std::string *)(a1 + 5984);
      }
      long long v15 = *(_OWORD *)(a1 + 6024);
      long long v16 = *(_OWORD *)(a1 + 6040);
      v17[0] = *(_OWORD *)(a1 + 6056);
      *(_OWORD *)((char *)v17 + 12) = *(_OWORD *)(a1 + 6068);
      long long v14 = *(_OWORD *)(a1 + 6008);
      if (*(char *)(a1 + 6111) < 0) {
        sub_1000DC48C(__p, *(void **)(a1 + 6088), *(void *)(a1 + 6096));
      }
      else {
        __p[0] = *(std::string *)(a1 + 6088);
      }
      if (sub_1006D30F0(buf)) {
        *(_DWORD *)(a2 + 6112) = sub_1006D40B0((unsigned int *)buf);
      }
      if (sub_1006D4090((uint64_t)buf)) {
        sub_1006D331C(a2 + 5968, 5, 8u, *(double *)(a1 + 6384));
      }
      *(void *)(a2 + 816) = *v5;
      *(unsigned char *)(a2 + 824) = *(unsigned char *)(a1 + 5976);
      std::string::operator=((std::string *)(a2 + 832), (const std::string *)(a1 + 5984));
      long long v6 = *(_OWORD *)(a1 + 6056);
      *(_OWORD *)(a2 + 888) = *(_OWORD *)(a1 + 6040);
      *(_OWORD *)(a2 + 904) = v6;
      *(_OWORD *)(a2 + 916) = *(_OWORD *)(a1 + 6068);
      long long v7 = *(_OWORD *)(a1 + 6024);
      *(_OWORD *)(a2 + 856) = *(_OWORD *)(a1 + 6008);
      *(_OWORD *)(a2 + 872) = v7;
      std::string::operator=((std::string *)(a2 + 936), (const std::string *)(a1 + 6088));
      sub_1006D3144((int *)buf);
      *(unsigned char *)(a2 + 5976) = v12;
      *(void *)(a2 + 5968) = *(void *)buf;
      std::string::operator=((std::string *)(a2 + 5984), &v13);
      *(_OWORD *)(a2 + 6068) = *(_OWORD *)((char *)v17 + 12);
      long long v8 = v14;
      *(_OWORD *)(a2 + 6024) = v15;
      long long v9 = v17[0];
      *(_OWORD *)(a2 + 6040) = v16;
      *(_OWORD *)(a2 + 6056) = v9;
      *(_OWORD *)(a2 + 6008) = v8;
      std::string::operator=((std::string *)(a2 + 6088), __p);
      if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p[0].__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v13.__r_.__value_.__l.__data_);
      }
    }
  }
}

void sub_100E3B7D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  sub_10050BAA0(v20);
  _Unwind_Resume(a1);
}

void sub_100E3B818(uint64_t a1@<X0>, unsigned char *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1000DEB28((_DWORD *)a3, a1);
  if (qword_1024193B0 != -1) {
    dispatch_once(&qword_1024193B0, &stru_1022FBF70);
  }
  long long v6 = qword_1024193B8;
  if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "WifiFlow, scanreply, warn, busy", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022FBF70);
    }
    char v12 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "Output CL::Wifi1::Policies::PrePositionCalculationStateUpdate::HandleEvent::operator()(const Events::Wifi::ScanBusy &) const", "%s\n", v12);
    if (v12 != (char *)buf) {
      free(v12);
    }
  }
  if (*(unsigned char *)(a1 + 6376))
  {
    ++*(_DWORD *)(*(void *)(a3 + 6424) + 212);
    *(void *)(a3 + 816) = *(void *)(a1 + 5968);
    *(unsigned char *)(a3 + 824) = *(unsigned char *)(a1 + 5976);
    std::string::operator=((std::string *)(a3 + 832), (const std::string *)(a1 + 5984));
    long long v7 = *(_OWORD *)(a1 + 6024);
    long long v8 = *(_OWORD *)(a1 + 6056);
    *(_OWORD *)(a3 + 888) = *(_OWORD *)(a1 + 6040);
    *(_OWORD *)(a3 + 904) = v8;
    *(_OWORD *)(a3 + 916) = *(_OWORD *)(a1 + 6068);
    *(_OWORD *)(a3 + 856) = *(_OWORD *)(a1 + 6008);
    *(_OWORD *)(a3 + 872) = v7;
    std::string::operator=((std::string *)(a3 + 936), (const std::string *)(a1 + 6088));
    long long v9 = (unsigned int *)(a1 + 5968);
    *(unsigned char *)(a3 + 5960) = 1;
    if (sub_100054BBC(v9))
    {
      BOOL v10 = sub_1006D30F0(v9);
      if (*a2 == 10 && v10)
      {
        *(_DWORD *)(a3 + 6112) = sub_1006D40B0(v9);
        sub_1006D3144((int *)(a3 + 5968));
      }
    }
  }
}

void sub_100E3BA98(_Unwind_Exception *a1)
{
  sub_10050BAA0(v1);
  _Unwind_Resume(a1);
}