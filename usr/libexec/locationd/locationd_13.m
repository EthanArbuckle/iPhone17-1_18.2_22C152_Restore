uint64_t sub_1008A420C(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(void *)a1 = off_1022CF148;
  v2 = *(void *)(a1 + 3520);
  if (v2) {
    sub_1019134F8(v2);
  }
  v3 = *(void **)(a1 + 3640);
  if (v3)
  {
    [v3 invalidate];

    *(void *)(a1 + 3640) = 0;
  }
  v4 = *(void *)(a1 + 3200);
  *(void *)(a1 + 3200) = 0;
  if (v4) {
    (*(void (**)(void))(a1 + 3208))();
  }
  (*(void (**)(uint64_t))(*(void *)a1 + 408))(a1);
  sub_100762CEC(*(void **)(a1 + 3168));

  sub_100DEE0B0((id *)(a1 + 3232));
  sub_100681F74((void *)(a1 + 3656));
  v5 = *(void **)(a1 + 3592);
  if (v5)
  {
    *(void *)(a1 + 3600) = v5;
    operator delete(v5);
  }
  sub_1008A9C84((uint64_t *)(a1 + 3576), 0);
  v6 = *(void *)(a1 + 3568);
  *(void *)(a1 + 3568) = 0;
  if (v6) {
    operator delete();
  }
  sub_1008A9C34((uint64_t *)(a1 + 3520), 0);
  nullsub_41(a1 + 3272, v7);
  sub_100DEE0E0(a1 + 3232);
  v8 = *(void *)(a1 + 3200);
  *(void *)(a1 + 3200) = 0;
  if (v8) {
    (*(void (**)(void))(a1 + 3208))();
  }
  v9 = *(void *)(a1 + 3144);
  *(void *)(a1 + 3144) = 0;
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
  }
  sub_1008A990C(a1 + 456);
  sub_1013F04FC(a1 + 48);
  *(void *)a1 = off_102302A90;
  sub_100681F74((void *)(a1 + 16));
  return a1;
}

void sub_1008A43C4(uint64_t a1)
{
  sub_1008A420C(a1);

  operator delete();
}

double sub_1008A43FC(uint64_t a1)
{
  *(_DWORD *)(a1 + 2824) = 0xFFFF;
  *(void *)(a1 + 2836) = 0;
  *(void *)(a1 + 2828) = 0;
  __asm { FMOV            V1.2D, #-1.0 }
  *(_OWORD *)(a1 + 2844) = xmmword_101D1C320;
  *(_OWORD *)(a1 + 2860) = _Q1;
  *(_OWORD *)(a1 + 2876) = _Q1;
  *(_OWORD *)(a1 + 2892) = _Q1;
  *(_DWORD *)(a1 + 2908) = 0;
  *(void *)(a1 + 2912) = 0xBFF0000000000000;
  *(void *)(a1 + 2928) = 0;
  *(void *)(a1 + 2920) = 0;
  *(_DWORD *)(a1 + 2936) = 0;
  *(void *)(a1 + 2940) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 2948) = 0x7FFFFFFF;
  *(void *)(a1 + 2952) = 0;
  *(void *)(a1 + 2968) = 0;
  *(void *)(a1 + 2960) = 0;
  *(unsigned char *)(a1 + 2976) = 0;
  sub_100E97EA4(a1 + 456);
  sub_1013F0500(a1 + 48);
  uint64_t v8 = *(void *)(a1 + 3520);
  if (v8)
  {
    return sub_1019134F8(v8);
  }
  return result;
}

uint64_t sub_1008A44B0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 3144);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 48))();
  }
  return result;
}

uint64_t sub_1008A44E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(a1 + 3512)) {
    return 0;
  }
  if (!*(void *)(a1 + 3144) || *(unsigned char *)(a3 + 425) != 0) {
    return 0;
  }
  int v8 = *(_DWORD *)(a2 + 96);
  if ((v8 & 0xFFFFFFF7) != 1 && (v8 | 8) != 11 && (v8 != 2 || *(unsigned char *)(a1 + 3264) == 0)) {
    return 0;
  }
  sub_1008A4774(a1);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 3320) = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 3336) = v10;
  long long v11 = *(_OWORD *)(a2 + 32);
  long long v12 = *(_OWORD *)(a2 + 48);
  long long v13 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 3384) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 3400) = v13;
  *(_OWORD *)(a1 + 3352) = v11;
  *(_OWORD *)(a1 + 3368) = v12;
  long long v14 = *(_OWORD *)(a2 + 96);
  long long v15 = *(_OWORD *)(a2 + 112);
  long long v16 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 3460) = *(_OWORD *)(a2 + 140);
  *(_OWORD *)(a1 + 3432) = v15;
  *(_OWORD *)(a1 + 3448) = v16;
  *(_OWORD *)(a1 + 3416) = v14;
  uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t))(**(void **)(a1 + 3144) + 40))(*(void *)(a1 + 3144), a2, a3);
  v17 = *(void **)(a1 + 3640);
  if (v17 && result)
  {
    if (!*(void *)(a1 + 3648))
    {
      if (qword_102419430 != -1) {
        dispatch_once(&qword_102419430, &stru_1022CF448);
      }
      v18 = qword_102419438;
      if (os_log_type_enabled((os_log_t)qword_102419438, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "CLMM,Creating mapmatcher OS transaction", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419430 != -1) {
          dispatch_once(&qword_102419430, &stru_1022CF448);
        }
        v20 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLLocationControllerFusion::mapMatch(CLDaemonLocation &, CLDaemonLocationPrivate &)", "%s\n", v20);
        if (v20 != (char *)buf) {
          free(v20);
        }
      }
      *(void *)(a1 + 3648) = os_transaction_create();
      v17 = *(void **)(a1 + 3640);
    }
    [v17 setNextFireDelay:300.0];
    return 1;
  }
  return result;
}

uint64_t sub_1008A4774(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 3144);
  if (result)
  {
    if (*(unsigned char *)(a1 + 3632)
      && (uint64_t v3 = sub_10016BA10(),
          int v7 = 1,
          double v4 = sub_10016BA54(v3, &v7),
          BOOL v5 = sub_100178CCC((_DWORD *)(a1 + 3584), v4),
          uint64_t result = *(void *)(a1 + 3144),
          !v5))
    {
      BOOL v6 = sub_1011F1590(result);
      uint64_t result = *(void *)(a1 + 3144);
    }
    else
    {
      BOOL v6 = 0;
    }
    return sub_1011F1240(result, v6);
  }
  return result;
}

double sub_1008A47F0(uint64_t a1)
{
  uint64_t v2 = a1 + 3340;
  uint64_t v3 = *(void *)(a1 + 3144);
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 16))(v3);
  }
  *(_DWORD *)(a1 + 3320) = 0xFFFF;
  *(void *)(a1 + 3332) = 0;
  *(void *)(a1 + 3324) = 0;
  double result = -1.0;
  __asm { FMOV            V1.2D, #-1.0 }
  *(_OWORD *)uint64_t v2 = xmmword_101D1C320;
  *(_OWORD *)(v2 + 16) = _Q1;
  *(_OWORD *)(v2 + 32) = _Q1;
  *(_OWORD *)(v2 + 48) = _Q1;
  *(_DWORD *)(a1 + 3404) = 0;
  *(void *)(a1 + 3408) = 0xBFF0000000000000;
  *(void *)(a1 + 3424) = 0;
  *(void *)(a1 + 3416) = 0;
  *(_DWORD *)(a1 + 3432) = 0;
  *(void *)(v2 + 96) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 3444) = 0x7FFFFFFF;
  *(void *)(a1 + 3448) = 0;
  *(void *)(a1 + 3464) = 0;
  *(void *)(a1 + 3456) = 0;
  *(unsigned char *)(a1 + 3472) = 0;
  return result;
}

uint64_t sub_1008A489C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 3144);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 24))();
  }
  return result;
}

uint64_t sub_1008A48CC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 3144);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 32))();
  }
  return result;
}

uint64_t sub_1008A48FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 456;
  uint64_t v5 = sub_10016BA10();
  *(_DWORD *)buf = 1;
  *(void *)buf = sub_10016BA54(v5, buf);
  uint64_t result = sub_100EA06E0(v4, (double *)buf, a2);
  if (*(void *)(a1 + 3144))
  {
    if (qword_102419430 != -1) {
      dispatch_once(&qword_102419430, &stru_1022CF448);
    }
    int v7 = qword_102419438;
    if (os_log_type_enabled((os_log_t)qword_102419438, OS_LOG_TYPE_DEBUG))
    {
      int v8 = *(_DWORD *)a2;
      unint64_t v9 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
      uint64_t v10 = sub_10016BA10();
      *(_DWORD *)buf = 1;
      double v11 = sub_10016BA54(v10, buf);
      uint64_t v12 = sub_10016BA10();
      double v13 = sub_10018202C(v12);
      *(_DWORD *)buf = 67240960;
      *(_DWORD *)&buf[4] = v8;
      __int16 v17 = 2050;
      unint64_t v18 = v9;
      __int16 v19 = 2050;
      double v20 = v11;
      __int16 v21 = 2050;
      double v22 = v13;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "CLMM,RouteHints,CLLocationFilterController,setMapMatchingRouteHint,type,%{public}d,sz,%{public}zu,mct,%{public}.3f,propagation_us,%{public}.3f", buf, 0x26u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419430 != -1) {
        dispatch_once(&qword_102419430, &stru_1022CF448);
      }
      sub_1005B5034();
      uint64_t v14 = sub_10016BA10();
      sub_10018202C(v14);
      long long v15 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedMapMatchingRouteHint(const CLMapsRouteHintData &)", "%s\n", v15);
      if (v15 != (char *)buf) {
        free(v15);
      }
    }
    uint64_t result = sub_1011F0FF8(*(void *)(a1 + 3144), a2);
  }
  *(void *)(a1 + 3584) = *(void *)a2;
  if (a1 + 3584 != a2) {
    uint64_t result = (uint64_t)sub_1008A9A00((char *)(a1 + 3592), *(char **)(a2 + 8), *(void *)(a2 + 16), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3));
  }
  *(_OWORD *)(a1 + 3616) = *(_OWORD *)(a2 + 32);
  return result;
}

uint64_t sub_1008A4BDC(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 3144);
  if (result) {
    return sub_1011F1170(result, a2);
  }
  return result;
}

void sub_1008A4BEC(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  if (!*a2)
  {
    uint64_t v5 = a1 + 456;
    uint64_t v6 = sub_10016BA10();
    *(_DWORD *)buf = 1;
    *(void *)buf = sub_10016BA54(v6, buf);
    sub_100EA046C(v5, (uint64_t **)buf, a3);
    uint64_t v7 = *(void *)(a1 + 3144);
    if (v7)
    {
      BOOL v8 = (*(void *)a3 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000;
      if (*(_DWORD *)(a3 + 8) != 71
        && (*(void *)a3 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000
        && *(double *)a3 > 0.0)
      {
        long long v9 = *(_OWORD *)(a3 + 16);
        v26[0] = *(_OWORD *)a3;
        v26[1] = v9;
        int v27 = *(_DWORD *)(a3 + 32);
        sub_1011EA72C(v7, (uint64_t)v26);
      }
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022CF408);
      }
      uint64_t v10 = qword_102419388;
      if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
      {
        int v11 = *(_DWORD *)(a3 + 8);
        if (v8) {
          unint64_t v12 = *(void *)a3;
        }
        else {
          unint64_t v12 = 0xBFF0000000000000;
        }
        uint64_t v13 = sub_10016BA10();
        *(_DWORD *)buf = 1;
        double v14 = sub_10016BA54(v13, buf);
        uint64_t v15 = sub_10016BA10();
        double v16 = sub_10018202C(v15);
        *(_DWORD *)buf = 67240960;
        *(_DWORD *)&buf[4] = v11;
        __int16 v20 = 2050;
        unint64_t v21 = v12;
        __int16 v22 = 2050;
        double v23 = v14;
        __int16 v24 = 2050;
        double v25 = v16;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "CLMM,CLLocationFilterController,Received NotificationWorkoutSessionOverride,fitnessSession,%{public}d,startTime,%{public}.1lf,now,%{public}.3f,propagation_us,%{public}.3f", buf, 0x26u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419380 != -1) {
          dispatch_once(&qword_102419380, &stru_1022CF408);
        }
        sub_1005B5034();
        uint64_t v17 = sub_10016BA10();
        sub_10018202C(v17);
        unint64_t v18 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedMotionStateObserverNotification(const CLMotionStateObserver_Type::Notification &, const CLMotionStateObserver_Type::NotificationData &)", "%s\n", v18);
        if (v18 != (char *)buf) {
          free(v18);
        }
      }
    }
  }
}

void sub_1008A4EF0(uint64_t a1, int *a2, long long *a3)
{
  if ((*a2 - 1) >= 2)
  {
    if (*a2)
    {
      if (qword_102419510 != -1) {
        dispatch_once(&qword_102419510, &stru_1022CF3E8);
      }
      v45 = qword_102419518;
      if (os_log_type_enabled((os_log_t)qword_102419518, OS_LOG_TYPE_FAULT))
      {
        int v46 = *a2;
        *(_DWORD *)buf = 67240192;
        *(_DWORD *)&buf[4] = v46;
        _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_FAULT, "#Warning, Fusion Controller, received unhandled motion notification %{public}d", buf, 8u);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419510 != -1) {
          dispatch_once(&qword_102419510, &stru_1022CF3E8);
        }
        int v47 = *a2;
        LODWORD(v62) = 67240192;
        DWORD1(v62) = v47;
        v48 = (uint8_t *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "virtual void CLLocationControllerFusion::feedMotionNotification(const CLMotionState_Type::Notification &, const CLMotionState_Type::NotificationData &)", "%s\n");
        goto LABEL_78;
      }
    }
    else
    {
      if (qword_102419510 != -1) {
        dispatch_once(&qword_102419510, &stru_1022CF3E8);
      }
      __int16 v24 = qword_102419518;
      if (os_log_type_enabled((os_log_t)qword_102419518, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "#Warning, Fusion Controller, unexpected kNotificationMovementCoarse", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419510 != -1) {
          dispatch_once(&qword_102419510, &stru_1022CF3E8);
        }
        LOWORD(v62) = 0;
        goto LABEL_77;
      }
    }
    return;
  }
  uint64_t v5 = sub_10016BA10();
  *(_DWORD *)buf = 0;
  double v6 = sub_10016BA54(v5, buf);
  double v53 = v6;
  long long v7 = a3[6];
  long long v8 = a3[7];
  long long v9 = a3[4];
  long long v67 = a3[5];
  long long v68 = v7;
  long long v69 = v8;
  uint64_t v70 = *((void *)a3 + 16);
  long long v10 = a3[3];
  long long v64 = a3[2];
  long long v65 = v10;
  long long v66 = v9;
  long long v11 = a3[1];
  long long v62 = *a3;
  long long v63 = v11;
  double v12 = vabdd_f64(v6, *(double *)(a1 + 3488));
  if (v12 >= 1.5)
  {
    int v17 = v62;
    goto LABEL_34;
  }
  BOOL v16 = *(double *)(a1 + 3480) == 0.0
     && ((uint64_t v13 = (double *)(a1 + 3364), v14 = vabdd_f64(v6, *(double *)(a1 + 3396)), v12 < 0.5)
       ? (BOOL v15 = v14 < 1.5)
       : (BOOL v15 = 0),
         v15 && *v13 >= 0.0)
     && *v13 + *(double *)(a1 + 3372) * -2.0 < 0.0;
  int v17 = v62;
  if ((int)v62 <= 40)
  {
    switch((int)v62)
    {
      case 1:
        int v17 = 10;
        goto LABEL_72;
      case 2:
        int v17 = 11;
LABEL_72:
        LODWORD(v62) = v17;
        if (!v16) {
          goto LABEL_15;
        }
        goto LABEL_14;
      case 3:
      case 4:
      case 7:
      case 8:
      case 9:
        goto LABEL_13;
      case 5:
        goto LABEL_14;
      case 10:
      case 11:
        if (v16) {
          goto LABEL_14;
        }
        goto LABEL_15;
      default:
        goto LABEL_15;
    }
  }
  if (v62 == 41)
  {
LABEL_13:
    int v17 = 5;
    LODWORD(v62) = 5;
  }
  else if (v62 != 52 && v62 != 56)
  {
    goto LABEL_15;
  }
LABEL_14:
  DWORD1(v62) = 2;
LABEL_15:
  if (qword_102419510 != -1) {
    dispatch_once(&qword_102419510, &stru_1022CF3E8);
  }
  unint64_t v18 = qword_102419518;
  if (os_log_type_enabled((os_log_t)qword_102419518, OS_LOG_TYPE_DEBUG))
  {
    int v19 = *(_DWORD *)a3;
    int v20 = *((_DWORD *)a3 + 1);
    *(_DWORD *)buf = 67241216;
    *(_DWORD *)&buf[4] = v19;
    __int16 v72 = 1026;
    *(_DWORD *)v73 = v20;
    *(_WORD *)&v73[4] = 1026;
    *(_DWORD *)&v73[6] = v17;
    LOWORD(v74) = 1026;
    *(_DWORD *)((char *)&v74 + 2) = DWORD1(v62);
    HIWORD(v74) = 1026;
    LODWORD(v75) = v16;
    _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEBUG, "In vehicle detected Adjusting motion state,type,%{public}d,confidence,%{public}d,to type,%{public}d,confidence,%{public}d,isSpeedZero,%{public}d", buf, 0x20u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419510 != -1) {
      dispatch_once(&qword_102419510, &stru_1022CF3E8);
    }
    int v21 = *(_DWORD *)a3;
    int v22 = *((_DWORD *)a3 + 1);
    int v54 = 67241216;
    int v55 = v21;
    __int16 v56 = 1026;
    *(_DWORD *)v57 = v22;
    *(_WORD *)&v57[4] = 1026;
    *(_DWORD *)&v57[6] = v17;
    LOWORD(v58) = 1026;
    *(_DWORD *)((char *)&v58 + 2) = DWORD1(v62);
    HIWORD(v58) = 1026;
    LODWORD(v59) = v16;
    double v23 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedMotionNotification(const CLMotionState_Type::Notification &, const CLMotionState_Type::NotificationData &)", "%s\n", v23);
    if (v23 != (char *)buf) {
      free(v23);
    }
  }
LABEL_34:
  if (*(unsigned char *)(a1 + 3504)
    && v17
    && ((double v25 = v6 - *(double *)(a1 + 3496), v25 >= 0.0) ? (v26 = v25 < 10.0) : (v26 = 0), v26))
  {
    if (qword_102419510 != -1) {
      dispatch_once(&qword_102419510, &stru_1022CF3E8);
    }
    v49 = qword_102419518;
    if (os_log_type_enabled((os_log_t)qword_102419518, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v50 = sub_10016BA10();
      double v51 = sub_10018202C(v50);
      *(_DWORD *)buf = 67240704;
      *(_DWORD *)&buf[4] = v17;
      __int16 v72 = 2050;
      *(double *)v73 = v6;
      *(_WORD *)&v73[8] = 2050;
      double v74 = v51;
      _os_log_impl((void *)&_mh_execute_header, v49, OS_LOG_TYPE_DEBUG, "Going to sleep. Not providing motion state, %{public}d, to the location KF,now,%{public}.3f,propagation_us,%{public}.3f", buf, 0x1Cu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419510 != -1) {
        dispatch_once(&qword_102419510, &stru_1022CF3E8);
      }
      uint64_t v52 = sub_10016BA10();
      int v54 = 67240704;
      int v55 = v17;
      __int16 v56 = 2050;
      *(double *)v57 = v6;
      *(_WORD *)&v57[8] = 2050;
      double v58 = sub_10018202C(v52);
      goto LABEL_77;
    }
  }
  else
  {
    sub_1013F0980(a1 + 48, &v53, &v62, (int *)&v62 + 1);
    uint64_t v27 = sub_10016BA10();
    *(_DWORD *)buf = 1;
    *(void *)buf = sub_10016BA54(v27, buf);
    sub_100191444(a1 + 456, (double *)buf, (int *)&v62);
    uint64_t v28 = *(void *)(a1 + 3144);
    if (v28)
    {
      (*(void (**)(uint64_t, double *, long long *))(*(void *)v28 + 64))(v28, &v53, &v62);
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022CF408);
      }
      v29 = qword_102419388;
      if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
      {
        int v30 = v62;
        int v31 = DWORD1(v62);
        int v32 = HIDWORD(v62);
        int v33 = v63;
        double v34 = v53;
        uint64_t v35 = sub_10016BA10();
        double v36 = sub_10018202C(v35);
        *(_DWORD *)buf = 67241472;
        *(_DWORD *)&buf[4] = v30;
        __int16 v72 = 1026;
        *(_DWORD *)v73 = v31;
        *(_WORD *)&v73[4] = 1026;
        *(_DWORD *)&v73[6] = v32;
        LOWORD(v74) = 1026;
        *(_DWORD *)((char *)&v74 + 2) = v33;
        HIWORD(v74) = 2050;
        double v75 = v34;
        __int16 v76 = 2050;
        double v77 = v36;
        _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEBUG, "CLMM, MotionState,type,%{public}d,confidence,%{public}d,mountedState,%{public}d,mountedConfidence,%{public}d,now,%{public}.3f,propagation_us,%{public}.3f", buf, 0x2Eu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419380 != -1) {
          dispatch_once(&qword_102419380, &stru_1022CF408);
        }
        int v37 = v62;
        int v38 = DWORD1(v62);
        int v39 = HIDWORD(v62);
        int v40 = v63;
        double v41 = v53;
        uint64_t v42 = sub_10016BA10();
        double v43 = sub_10018202C(v42);
        int v54 = 67241472;
        int v55 = v37;
        __int16 v56 = 1026;
        *(_DWORD *)v57 = v38;
        *(_WORD *)&v57[4] = 1026;
        *(_DWORD *)&v57[6] = v39;
        LOWORD(v58) = 1026;
        *(_DWORD *)((char *)&v58 + 2) = v40;
        HIWORD(v58) = 2050;
        double v59 = v41;
        __int16 v60 = 2050;
        double v61 = v43;
LABEL_77:
        v48 = (uint8_t *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedMotionNotification(const CLMotionState_Type::Notification &, const CLMotionState_Type::NotificationData &)", "%s\n");
LABEL_78:
        if (v48 != buf) {
          free(v48);
        }
      }
    }
  }
}

void sub_1008A5848(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a1 + 3144);
  switch(*a2)
  {
    case 2:
      uint64_t v6 = sub_10016BA10();
      *(_DWORD *)buf = 0;
      *(double *)(a1 + 3496) = sub_10016BA54(v6, buf);
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022CF408);
      }
      long long v7 = qword_102419388;
      if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v8 = sub_10016BA10();
        *(_DWORD *)buf = 0;
        double v9 = sub_10016BA54(v8, buf);
        uint64_t v10 = sub_10016BA10();
        double v11 = sub_10018202C(v10);
        *(_DWORD *)buf = 134349312;
        *(double *)&buf[4] = v9;
        __int16 v64 = 2050;
        *(double *)long long v65 = v11;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "device entering sleep,now,%{public}.3f,propagation_us,%{public}.3f", buf, 0x16u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419380 != -1) {
          dispatch_once(&qword_102419380, &stru_1022CF408);
        }
        double v40 = sub_1005BFA38();
        uint64_t v41 = sub_10016BA10();
        int v57 = 134349312;
        double v58 = v40;
        __int16 v59 = 2050;
        *(void *)__int16 v60 = sub_10018202C(v41);
        uint64_t v42 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedDaemonStatusNotification(const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v42);
        if (v42 != buf) {
          free(v42);
        }
      }
      *(_DWORD *)buf = 0;
      int v57 = 2;
      sub_1013F0980(a1 + 48, (void *)(a1 + 3496), buf, &v57);
      uint64_t v12 = sub_10016BA10();
      *(_DWORD *)buf = 1;
      *(void *)buf = sub_10016BA54(v12, buf);
      sub_100E9B57C(a1 + 456, (double *)buf);
      *(unsigned char *)(a1 + 3504) = 1;
      break;
    case 3:
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022CF408);
      }
      uint64_t v13 = qword_102419388;
      if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v14 = sub_10016BA10();
        *(_DWORD *)buf = 0;
        double v15 = sub_10016BA54(v14, buf);
        uint64_t v16 = sub_10016BA10();
        double v17 = sub_10018202C(v16);
        *(_DWORD *)buf = 134349312;
        *(double *)&buf[4] = v15;
        __int16 v64 = 2050;
        *(double *)long long v65 = v17;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "device wake - checking for corresponding sleep,now,%{public}.3f,propagation_us,%{public}.3f", buf, 0x16u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419380 != -1) {
          dispatch_once(&qword_102419380, &stru_1022CF408);
        }
        double v43 = sub_1005BFA38();
        uint64_t v44 = sub_10016BA10();
        int v57 = 134349312;
        double v58 = v43;
        __int16 v59 = 2050;
        *(void *)__int16 v60 = sub_10018202C(v44);
        v45 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedDaemonStatusNotification(const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v45);
        if (v45 != buf) {
          free(v45);
        }
      }
      if (!*(unsigned char *)(a1 + 3504))
      {
        if (qword_102419380 != -1) {
          dispatch_once(&qword_102419380, &stru_1022CF408);
        }
        unint64_t v18 = qword_102419388;
        if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v19 = *(void *)(a1 + 3136);
          uint64_t v20 = sub_10016BA10();
          double v21 = sub_10018202C(v20);
          *(_DWORD *)buf = 134349312;
          *(void *)&buf[4] = v19;
          __int16 v64 = 2050;
          *(double *)long long v65 = v21;
          _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "#Warning wake detected with no prior sleep known, toggling LC Fusion at MCT time, %{public}.3lf,propagation_us,%{public}.3f", buf, 0x16u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419380 != -1) {
            dispatch_once(&qword_102419380, &stru_1022CF408);
          }
          double v54 = *(double *)(a1 + 3136);
          uint64_t v55 = sub_10016BA10();
          int v57 = 134349312;
          double v58 = v54;
          __int16 v59 = 2050;
          *(void *)__int16 v60 = sub_10018202C(v55);
          __int16 v56 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedDaemonStatusNotification(const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v56);
          if (v56 != buf) {
            free(v56);
          }
        }
        if ((*(_DWORD *)(a1 + 2616) & 0xFFFFFFFE) != 2) {
          sub_100E9B57C(a1 + 456, (double *)(a1 + 3136));
        }
      }
      uint64_t v22 = sub_10016BA10();
      *(_DWORD *)buf = 1;
      *(void *)buf = sub_10016BA54(v22, buf);
      sub_100E9B998(a1 + 456, (double *)buf);
      *(unsigned char *)(a1 + 3504) = 0;
      break;
    case 6:
      if ((*(_DWORD *)(a3 + 4) - 1) > 1)
      {
        if (qword_102418FB0 != -1) {
          dispatch_once(&qword_102418FB0, &stru_1022CF428);
        }
        int v39 = qword_102418FB8;
        if (os_log_type_enabled((os_log_t)qword_102418FB8, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEBUG, "#cltr,device does not have reachability", buf, 2u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102418FB0 != -1) {
            dispatch_once(&qword_102418FB0, &stru_1022CF428);
          }
          LOWORD(v57) = 0;
          double v53 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedDaemonStatusNotification(const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v53);
          if (v53 != buf) {
            free(v53);
          }
        }
      }
      else
      {
        if (qword_102418FB0 != -1) {
          dispatch_once(&qword_102418FB0, &stru_1022CF428);
        }
        double v23 = qword_102418FB8;
        if (os_log_type_enabled((os_log_t)qword_102418FB8, OS_LOG_TYPE_DEBUG))
        {
          int v24 = *(_DWORD *)(a3 + 4);
          *(_DWORD *)buf = 67109120;
          *(_DWORD *)&buf[4] = v24;
          _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEBUG, "#cltr,device has reachability,type,%d,clearing backoff timer if one exists", buf, 8u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102418FB0 != -1) {
            dispatch_once(&qword_102418FB0, &stru_1022CF428);
          }
          int v51 = *(_DWORD *)(a3 + 4);
          int v57 = 67109120;
          LODWORD(v58) = v51;
          uint64_t v52 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedDaemonStatusNotification(const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v52);
          if (v52 != buf) {
            free(v52);
          }
        }
        (*(void (**)(uint64_t))(*(void *)a1 + 408))(a1);
      }
      break;
    case 7:
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022CF408);
      }
      double v25 = qword_102419388;
      if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
      {
        double v26 = *(double *)a3;
        int v27 = *(unsigned __int8 *)(a3 + 8);
        int v28 = *(unsigned __int8 *)(a3 + 9);
        int v29 = *(unsigned __int8 *)(a3 + 16);
        *(_DWORD *)buf = 134349824;
        *(double *)&buf[4] = v26;
        __int16 v64 = 1026;
        *(_DWORD *)long long v65 = v27;
        *(_WORD *)&v65[4] = 1026;
        *(_DWORD *)&v65[6] = v28;
        __int16 v66 = 1026;
        int v67 = v29;
        _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEBUG, "CLMM,Battery notification,level,%{public}.2lf,charged,%{public}d,connected,%{public}d,wasConnected,%{public}d", buf, 0x1Eu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419380 != -1) {
          dispatch_once(&qword_102419380, &stru_1022CF408);
        }
        double v46 = *(double *)a3;
        int v47 = *(unsigned __int8 *)(a3 + 8);
        int v48 = *(unsigned __int8 *)(a3 + 9);
        int v49 = *(unsigned __int8 *)(a3 + 16);
        int v57 = 134349824;
        double v58 = v46;
        __int16 v59 = 1026;
        *(_DWORD *)__int16 v60 = v47;
        *(_WORD *)&v60[4] = 1026;
        *(_DWORD *)&v60[6] = v48;
        __int16 v61 = 1026;
        int v62 = v49;
        uint64_t v50 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedDaemonStatusNotification(const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v50);
        if (v50 != buf) {
          free(v50);
        }
      }
      if (v5)
      {
        double v30 = *(double *)a3;
        if (*(double *)a3 >= 0.0 && v30 <= 100.0)
        {
          sub_100F342A0(a1 + 3536, v30);
          int v31 = *(void **)(a1 + 3144);
          if (v31) {
            sub_1001706DC(v31, *(unsigned char *)(a1 + 3551) == 0);
          }
        }
      }
      uint64_t v32 = *(void *)(a1 + 3568);
      if (v32)
      {
        double v33 = *(double *)a3;
        if (*(double *)a3 >= 0.0 && v33 <= 100.0)
        {
          char v34 = *(unsigned char *)(a3 + 9);
          *(double *)(v32 + 8) = v33;
          *(unsigned char *)(v32 + 16) = v34;
          sub_10078C168(v32);
        }
      }
      break;
    case 0xD:
      if (v5)
      {
        sub_100F3419C(a1 + 3536, *(_DWORD *)a3);
        uint64_t v35 = *(void **)(a1 + 3144);
        if (v35) {
          sub_1001706DC(v35, *(unsigned char *)(a1 + 3551) == 0);
        }
      }
      double v36 = *(_DWORD **)(a1 + 3568);
      if (v36)
      {
        *double v36 = *(_DWORD *)a3;
        goto LABEL_55;
      }
      break;
    case 0xF:
      if (v5)
      {
        sub_100F34228(a1 + 3536, *(unsigned char *)a3);
        int v37 = *(void **)(a1 + 3144);
        if (v37)
        {
          BOOL v38 = *(unsigned char *)(a1 + 3551) == 0;
          sub_1001706DC(v37, v38);
        }
      }
      break;
    case 0x12:
      double v36 = *(_DWORD **)(a1 + 3568);
      if (v36)
      {
        v36[1] = *(_DWORD *)a3;
LABEL_55:
        sub_10078C168((uint64_t)v36);
      }
      break;
    default:
      return;
  }
}

uint64_t sub_1008A646C(uint64_t result, uint64_t a2, int *a3)
{
  if (!*(unsigned char *)(result + 3505))
  {
    uint64_t v4 = result;
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022CF408);
    }
    uint64_t v5 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
    {
      int v6 = *(_DWORD *)(v4 + 3560);
      int v7 = *a3;
      int v8 = a3[1];
      *(_DWORD *)buf = 67240704;
      *(_DWORD *)&buf[4] = v6;
      __int16 v13 = 1026;
      int v14 = v7;
      __int16 v15 = 1026;
      int v16 = v8;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "priorSignalEnvironment,%{public}d,newSignalEnvironment,%{public}d,fidelity,%{public}d", buf, 0x14u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022CF408);
      }
      double v11 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedSignalEnvironmentNotification(const CLSignalEnvironmentProvider_Type::Notification &, const CLSignalEnvironmentProvider_Type::NotificationData &)", "%s\n", v11);
      if (v11 != (char *)buf) {
        free(v11);
      }
    }
    sub_100F34264((int *)(v4 + 3536), *a3);
    double v9 = *(void **)(v4 + 3144);
    if (v9) {
      sub_1001706DC(v9, *(unsigned char *)(v4 + 3551) == 0);
    }
    *(_DWORD *)(v4 + 3508) = *a3;
    uint64_t v10 = sub_10016BA10();
    *(_DWORD *)buf = 1;
    *(void *)buf = sub_10016BA54(v10, buf);
    sub_100EA0B04(v4 + 456, (uint64_t *)buf, *(void *)a3);
    uint64_t result = *(void *)(v4 + 3144);
    if (result) {
      return sub_1011EA41C(result, *(void *)a3);
    }
  }
  return result;
}

void sub_1008A66C4(uint64_t a1, int *a2)
{
  uint64_t v3 = (const void *)sub_1000FA17C(a2);
  if (CFEqual(v3, kCTRegistrationStatusChangedNotification))
  {
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022CF408);
    }
    uint64_t v4 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "device lost registration - no longer has active cell", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419380 == -1)
      {
LABEL_17:
        int v7 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedTelephonyNotification(const CLTelephonyService_Type::Notification &, const CLTelephonyService_Type::NotificationData &)", "%s\n", v7);
        if (v7 != (char *)buf) {
          free(v7);
        }
        return;
      }
LABEL_19:
      dispatch_once(&qword_102419380, &stru_1022CF408);
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v5 = (const void *)sub_1000FA17C(a2);
    if (CFEqual(v5, kCTCallStatusChangeNotification))
    {
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022CF408);
      }
      int v6 = qword_102419388;
      if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "device on active call - no longer has active cell", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419380 == -1) {
          goto LABEL_17;
        }
        goto LABEL_19;
      }
    }
  }
}

uint64_t sub_1008A695C(uint64_t result, int a2)
{
  int v5 = a2;
  uint64_t v2 = *(void *)(result + 3144);
  if (v2)
  {
    uint64_t v3 = sub_10016BA10();
    LODWORD(v4) = 0;
    double v4 = sub_10016BA54(v3, &v4);
    return (*(uint64_t (**)(uint64_t, int *, double *))(*(void *)v2 + 72))(v2, &v5, &v4);
  }
  return result;
}

void sub_1008A69D0(uint64_t a1, void *a2, double *a3, unsigned char *a4, void *a5)
{
  uint64_t v10 = (unsigned char *)sub_10067B400();
  double v11 = 16.6666;
  if (v10)
  {
    if (v10[1])
    {
      double v11 = 50.0;
      if (!*v10) {
        double v11 = 16.6666;
      }
    }
  }
  if (*a3 >= 0.0 && *a3 < v11)
  {
    uint64_t v13 = sub_10016BA10();
    *(_DWORD *)buf = 0;
    *(double *)(a1 + 3488) = sub_10016BA54(v13, buf);
    *(double *)(a1 + 3480) = *a3;
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022CF408);
    }
    int v14 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v15 = *(void *)a3;
      uint64_t v16 = sub_10016BA10();
      *(_DWORD *)buf = 0;
      double v17 = sub_10016BA54(v16, buf);
      uint64_t v18 = sub_10016BA10();
      double v19 = sub_10018202C(v18);
      *(_DWORD *)buf = 134218496;
      uint64_t v23 = v15;
      __int16 v24 = 2048;
      double v25 = v17;
      __int16 v26 = 2048;
      double v27 = v19;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "LocationController,updateVehicleSpeedFilter,vehicleSpeed,%.3f,now,%.3f,propagation_us,%.3f", buf, 0x20u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022CF408);
      }
      sub_1005BFA38();
      uint64_t v20 = sub_10016BA10();
      sub_10018202C(v20);
      double v21 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::updateVehicleSpeedFilter(const CFAbsoluteTime &, const double &, BOOL &, double &)", "%s\n", v21);
      if (v21 != (char *)buf) {
        free(v21);
      }
    }
  }
  sub_101246BC4(a1 + 3272, a2, a3, a4, a5);
}

uint64_t sub_1008A6C78(uint64_t a1, _DWORD *a2, char a3)
{
  uint64_t result = *(void *)(a1 + 3144);
  if (result) {
    return sub_1011F0F10(result, a2, a3);
  }
  return result;
}

void sub_1008A6C88(uint64_t a1, int a2)
{
  uint64_t v4 = a1 + 456;
  uint64_t v5 = sub_10016BA10();
  *(_DWORD *)buf = 1;
  *(void *)buf = sub_10016BA54(v5, buf);
  sub_100EA0DD8(v4, (double *)buf, a2);
  *(unsigned char *)(a1 + 3512) = a2;
  if (qword_1024193D0 != -1) {
    dispatch_once(&qword_1024193D0, &stru_1022CF468);
  }
  int v6 = qword_1024193D8;
  if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 67240192;
    *(_DWORD *)&uint8_t buf[4] = a2;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "CLMM,isAirborne,%{public}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022CF468);
    }
    int v7 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::updateAirborneClientStatus(const BOOL)", "%s\n", v7);
    if (v7 != (char *)buf) {
      free(v7);
    }
  }
}

void sub_1008A6E68(uint64_t a1, int a2)
{
}

void sub_1008A6E70(uint64_t a1)
{
  *(unsigned char *)(a1 + 3217) = 0;
  if (qword_102418FB0 != -1) {
    dispatch_once(&qword_102418FB0, &stru_1022CF428);
  }
  v1 = qword_102418FB8;
  if (os_log_type_enabled((os_log_t)qword_102418FB8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "#cltr,backoff timer fired,allow region support queries.", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102418FB0 != -1) {
      dispatch_once(&qword_102418FB0, &stru_1022CF428);
    }
    uint64_t v2 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::onGeoMapQueryBackoffTimer()", "%s\n", v2);
    if (v2 != (char *)buf) {
      free(v2);
    }
  }
}

id sub_1008A6FFC(uint64_t a1, double a2)
{
  if (!*(void *)(a1 + 3224))
  {
    id v4 = [[objc_msgSend(*(id *)(a1 + 8), "silo") newTimer];
    *(void *)(a1 + 3224) = v4;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_1008A737C;
    v12[3] = &unk_1022A3020;
    v12[4] = a1;
    [v4 setHandler:v12];
  }
  if (a2 > 0.0 && a2 < 1.79769313e308)
  {
    if (qword_102418FB0 != -1) {
      dispatch_once(&qword_102418FB0, &stru_1022CF428);
    }
    int v8 = qword_102418FB8;
    if (os_log_type_enabled((os_log_t)qword_102418FB8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 134217984;
      double v16 = a2;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "#cltr,backoff timer set for %lf seconds", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418FB0 != -1) {
        dispatch_once(&qword_102418FB0, &stru_1022CF428);
      }
      int v13 = 134217984;
      double v14 = a2;
      double v11 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::setGeoMapQueryBackoffTimer(double)", "%s\n", v11);
      if (v11 != (char *)buf) {
        free(v11);
      }
    }
    char v7 = 1;
  }
  else
  {
    if (qword_102418FB0 != -1) {
      dispatch_once(&qword_102418FB0, &stru_1022CF428);
    }
    int v6 = qword_102418FB8;
    if (os_log_type_enabled((os_log_t)qword_102418FB8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "#cltr,backoff timer disabled", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418FB0 != -1) {
        dispatch_once(&qword_102418FB0, &stru_1022CF428);
      }
      LOWORD(v13) = 0;
      uint64_t v10 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::setGeoMapQueryBackoffTimer(double)", "%s\n", v10);
      if (v10 != (char *)buf) {
        free(v10);
      }
    }
    char v7 = 0;
    a2 = 1.79769313e308;
  }
  id result = [*(id *)(a1 + 3224) setNextFireDelay:a2];
  *(unsigned char *)(a1 + 3217) = v7;
  return result;
}

uint64_t sub_1008A737C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 32) + 384))();
}

void sub_1008A73AC(uint64_t a1)
{
  if (*(void *)(a1 + 3224))
  {
    (*(void (**)(uint64_t, double))(*(void *)a1 + 416))(a1, 1.79769313e308);
    uint64_t v2 = *(void **)(a1 + 3224);
    *(void *)(a1 + 3160) = 0x4082C00000000000;
    *(unsigned char *)(a1 + 3217) = 0;
    if (v2)
    {

      *(void *)(a1 + 3224) = 0;
    }
  }
  else
  {
    *(void *)(a1 + 3160) = 0x4082C00000000000;
    *(unsigned char *)(a1 + 3217) = 0;
  }
}

void sub_1008A7440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_102418FB0 != -1) {
    dispatch_once(&qword_102418FB0, &stru_1022CF428);
  }
  uint64_t v5 = qword_102418FB8;
  if (os_log_type_enabled((os_log_t)qword_102418FB8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134349056;
    uint64_t v8 = a3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#cltr,Entered handler,flags,%{public}lu", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102418FB0 != -1) {
      dispatch_once(&qword_102418FB0, &stru_1022CF428);
    }
    int v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLLocationControllerFusion::isTrackRunControllerEnabled(const CLDaemonLocation &)_block_invoke", "%s\n", v6);
    if (v6 != (char *)buf) {
      free(v6);
    }
  }
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) |= a3;
}

void sub_1008A7604(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = [objc_msgSend(*(id *)(v4 + 8), "silo") queue];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1008A76A0;
  block[3] = &unk_1022CF388;
  uint64_t v6 = *(void *)(a1 + 32);
  block[4] = a2;
  block[5] = v6;
  block[6] = v4;
  dispatch_async(v5, block);
}

void sub_1008A76A0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  *(unsigned char *)(v2 + 3216) = 0;
  if (*(void *)(a1 + 32))
  {
    (*(void (**)(uint64_t, double))(*(void *)v2 + 416))(v2, *(double *)(v2 + 3160));
    if (qword_102418FB0 != -1) {
      dispatch_once(&qword_102418FB0, &stru_1022CF428);
    }
    uint64_t v3 = qword_102418FB8;
    if (os_log_type_enabled((os_log_t)qword_102418FB8, OS_LOG_TYPE_ERROR))
    {
      id v4 = [*(id *)(a1 + 32) code];
      id v5 = [*(id *)(a1 + 32) domain];
      id v6 = [*(id *)(a1 + 32) localizedDescription];
      uint64_t v7 = *(void *)(v2 + 3160);
      *(_DWORD *)buf = 134349827;
      id v15 = v4;
      __int16 v16 = 2114;
      id v17 = v5;
      __int16 v18 = 2113;
      id v19 = v6;
      __int16 v20 = 2048;
      uint64_t v21 = v7;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "#cltr,RunningTrackFlags query,error:%{public}lld (%{public}@) \"%{private}@\",setting backoff to,%.0lf", buf, 0x2Au);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418FB0 != -1) {
        dispatch_once(&qword_102418FB0, &stru_1022CF428);
      }
      [*(id *)(a1 + 32) code];
      [*(id *)(a1 + 32) domain];
      [*(id *)(a1 + 32) localizedDescription];
      uint64_t v12 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "virtual BOOL CLLocationControllerFusion::isTrackRunControllerEnabled(const CLDaemonLocation &)_block_invoke", "%s\n", v12);
      if (v12 != (char *)buf) {
        free(v12);
      }
    }
    *(unsigned char *)(v2 + 3217) = 1;
    double v8 = *(double *)(v2 + 3160) + *(double *)(v2 + 3160);
    if (v8 > 86400.0) {
      double v8 = 86400.0;
    }
    *(double *)(v2 + 3160) = v8;
  }
  else
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 408))(v2);
    if (qword_102418FB0 != -1) {
      dispatch_once(&qword_102418FB0, &stru_1022CF428);
    }
    double v9 = qword_102418FB8;
    if (os_log_type_enabled((os_log_t)qword_102418FB8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
      *(_DWORD *)buf = 134349056;
      id v15 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "#cltr,Entered completionHandler,combinedAvailabilityFlags,%{public}lu", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418FB0 != -1) {
        dispatch_once(&qword_102418FB0, &stru_1022CF428);
      }
      int v13 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLLocationControllerFusion::isTrackRunControllerEnabled(const CLDaemonLocation &)_block_invoke", "%s\n", v13);
      if (v13 != (char *)buf) {
        free(v13);
      }
    }
    if (*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) == 1) {
      __int16 v11 = 256;
    }
    else {
      __int16 v11 = 257;
    }
    *(_WORD *)(v2 + 3152) = v11;
    (*(void (**)(uint64_t))(*(void *)v2 + 432))(v2);
  }
  sub_100762CEC(*(void **)(v2 + 3168));
  sub_100DEE0B0((id *)(v2 + 3232));
}

uint64_t sub_1008A7B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = *(void *)(a1 + 3200);
  if (result) {
    return sub_101491210(result, a2, a3);
  }
  return result;
}

void sub_1008A7B5C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 3200);
  if (v1)
  {
    sub_101490FB0(v1);
  }
  else
  {
    if (qword_102418FB0 != -1) {
      dispatch_once(&qword_102418FB0, &stru_1022CF428);
    }
    uint64_t v2 = qword_102418FB8;
    if (os_log_type_enabled((os_log_t)qword_102418FB8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "#cltr,cannot send GNSS turned off notification to TrackRunController,TrackRunController not instantiated", buf, 2u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418FB0 != -1) {
        dispatch_once(&qword_102418FB0, &stru_1022CF428);
      }
      uint64_t v3 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "virtual void CLLocationControllerFusion::notifyGnssTurnedOff()", "%s\n", v3);
      if (v3 != (char *)buf) {
        free(v3);
      }
    }
  }
}

void sub_1008A7D28(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 3200);
  if (v2)
  {
    sub_1014926A8(v2, a2);
  }
  else
  {
    if (qword_102418FB0 != -1) {
      dispatch_once(&qword_102418FB0, &stru_1022CF428);
    }
    uint64_t v3 = qword_102418FB8;
    if (os_log_type_enabled((os_log_t)qword_102418FB8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "#cltr,cannot send unfiltered location to TrackRunController,TrackRunController not instantiated", buf, 2u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418FB0 != -1) {
        dispatch_once(&qword_102418FB0, &stru_1022CF428);
      }
      id v4 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "virtual void CLLocationControllerFusion::sendUnfilteredLocationToTrackRunController(const CLLocationProvider_Type::NotificationData &)", "%s\n", v4);
      if (v4 != (char *)buf) {
        free(v4);
      }
    }
  }
}

void sub_1008A7EF4(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 3200))
  {
    if (qword_102418FB0 != -1) {
      dispatch_once(&qword_102418FB0, &stru_1022CF428);
    }
    id v4 = qword_102418FB8;
    if (os_log_type_enabled((os_log_t)qword_102418FB8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = *(void *)a2;
      int v6 = *(_DWORD *)(a2 + 8);
      int v7 = *(_DWORD *)(a2 + 12);
      *(_DWORD *)buf = 134349569;
      uint64_t v12 = v5;
      __int16 v13 = 1025;
      int v14 = v6;
      __int16 v15 = 1025;
      int v16 = v7;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#cltr,TrackRunHint,CLLocationFilterController,setTrackRunHint,mctime,%{public}.1lf,lane,%{private}d,notification,%{private}d", buf, 0x18u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418FB0 != -1) {
        dispatch_once(&qword_102418FB0, &stru_1022CF428);
      }
      double v9 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::setTrackRunHint(const CLTrackRunHint &)", "%s\n", v9);
      if (v9 != (char *)buf) {
        free(v9);
      }
    }
    sub_101491A78(*(void *)(a1 + 3200), (uint64_t *)a2);
  }
  else
  {
    if (qword_102418FB0 != -1) {
      dispatch_once(&qword_102418FB0, &stru_1022CF428);
    }
    double v8 = qword_102418FB8;
    if (os_log_type_enabled((os_log_t)qword_102418FB8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#cltr,Warning,TrackRunHint,CLLocationFilterController not instantiated", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418FB0 != -1) {
        dispatch_once(&qword_102418FB0, &stru_1022CF428);
      }
      uint64_t v10 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::setTrackRunHint(const CLTrackRunHint &)", "%s\n", v10);
      if (v10 != (char *)buf) {
        free(v10);
      }
    }
  }
}

void sub_1008A821C(unsigned char *a1)
{
  if (a1[3153]) {
    BOOL v1 = a1[3152] == 0;
  }
  else {
    BOOL v1 = 0;
  }
  if (a1[3155]) {
    BOOL v2 = a1[3154] != 0;
  }
  else {
    BOOL v2 = 0;
  }
  if (v1 || v2)
  {
    if (qword_102418FB0 != -1) {
      dispatch_once(&qword_102418FB0, &stru_1022CF428);
    }
    uint64_t v3 = qword_102418FB8;
    if (os_log_type_enabled((os_log_t)qword_102418FB8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 67109376;
      BOOL v8 = v1;
      __int16 v9 = 1024;
      BOOL v10 = v2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#cltr,disabling trackrun,is_unsupported_region,%d,is_unsupported_phone,%d", buf, 0xEu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418FB0 == -1)
      {
LABEL_22:
        int v6 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::updateTrackRunEnablementState() const", "%s\n", v6);
        if (v6 != (char *)buf) {
          free(v6);
        }
        goto LABEL_20;
      }
LABEL_24:
      dispatch_once(&qword_102418FB0, &stru_1022CF428);
      goto LABEL_22;
    }
  }
  else
  {
    if (qword_102418FB0 != -1) {
      dispatch_once(&qword_102418FB0, &stru_1022CF428);
    }
    id v4 = qword_102418FB8;
    if (os_log_type_enabled((os_log_t)qword_102418FB8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 67109376;
      BOOL v8 = 0;
      __int16 v9 = 1024;
      BOOL v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#cltr,enabling trackrun,is_unsupported_region,%d,is_unsupported_phone,%d", buf, 0xEu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418FB0 == -1) {
        goto LABEL_22;
      }
      goto LABEL_24;
    }
  }
LABEL_20:
  uint64_t v5 = sub_100D530F0();
  sub_100D53ABC(v5, !v1 && !v2);
}

void sub_1008A8534(uint64_t a1, double a2)
{
  if (*(unsigned char *)(a1 + 3528))
  {
    uint64_t v2 = *(void *)(a1 + 3520);
    if (v2) {
      sub_101924F78(v2, a2);
    }
  }
}

void *sub_1008A854C(void *result, uint64_t a2)
{
  if (*((unsigned char *)result + 3528))
  {
    uint64_t v2 = result[440];
    if (v2)
    {
      sub_1008A9CD4((uint64_t)v3, a2);
      sub_10191B0C4(v2, (uint64_t)v3);
      return sub_100682438(v3);
    }
  }
  return result;
}

void sub_1008A85C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100682438((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_1008A85E4(uint64_t a1, long long *a2)
{
  if (*(unsigned char *)(a1 + 3528))
  {
    uint64_t v2 = *(void *)(a1 + 3520);
    if (v2)
    {
      long long v3 = *a2;
      int v4 = *((_DWORD *)a2 + 4);
      sub_10191AB44(v2, &v3);
    }
  }
}

void sub_1008A8628(uint64_t a1, int *a2, uint64_t a3)
{
  if (qword_102419430 != -1) {
    dispatch_once(&qword_102419430, &stru_1022CF448);
  }
  int v6 = qword_102419438;
  if (os_log_type_enabled((os_log_t)qword_102419438, OS_LOG_TYPE_INFO))
  {
    int v7 = *a2;
    *(_DWORD *)buf = 67240192;
    int v22 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "CLMM,MA-OTA,notification,%{public}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419430 != -1) {
      dispatch_once(&qword_102419430, &stru_1022CF448);
    }
    int v15 = *a2;
    LODWORD(v20[0]) = 67240192;
    HIDWORD(v20[0]) = v15;
    int v16 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedMobileAssetNotification(const CLMobileAssetManager_Type::Notification &, const CLMobileAssetManager_Type::NotificationData &)", "%s\n", v16);
    if (v16 != (char *)buf) {
      free(v16);
    }
  }
  if (*(void *)(a1 + 3144))
  {
    if (*a2 == 2)
    {
      sub_1000E9354(v20);
      if (!sub_100012960(a3, "MapMatcherConfig", v20))
      {
        if (qword_102419430 != -1) {
          dispatch_once(&qword_102419430, &stru_1022CF448);
        }
        BOOL v8 = qword_102419438;
        if (os_log_type_enabled((os_log_t)qword_102419438, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "CLMM,MA-OTA,map matcher config not available", buf, 2u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419430 != -1) {
            dispatch_once(&qword_102419430, &stru_1022CF448);
          }
          LOWORD(v19[0]) = 0;
          __int16 v18 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedMobileAssetNotification(const CLMobileAssetManager_Type::Notification &, const CLMobileAssetManager_Type::NotificationData &)", "%s\n", v18);
          if (v18 != (char *)buf) {
            free(v18);
          }
        }
      }
      sub_1011EDA24(*(void *)(a1 + 3144), (uint64_t)v20);
      sub_1000E9354(v19);
      if (*(void *)(a1 + 3568) && sub_100012960(a3, "LCFusionCarPlayConfig", v19))
      {
        sub_10078C78C(*(_DWORD **)(a1 + 3568), (uint64_t)v19);
      }
      else
      {
        if (qword_102419380 != -1) {
          dispatch_once(&qword_102419380, &stru_1022CF408);
        }
        int v14 = qword_102419388;
        if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "CLLocationController,MA-OTA,LCFusionCarPlayConfig config not available", buf, 2u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419380 != -1) {
            dispatch_once(&qword_102419380, &stru_1022CF408);
          }
          id v17 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedMobileAssetNotification(const CLMobileAssetManager_Type::Notification &, const CLMobileAssetManager_Type::NotificationData &)", "%s\n", v17);
          if (v17 != (char *)buf) {
            free(v17);
          }
        }
      }
      sub_10013F3C4(v19);
      sub_10013F3C4(v20);
      return;
    }
    if (qword_102419430 != -1) {
      dispatch_once(&qword_102419430, &stru_1022CF448);
    }
    __int16 v11 = qword_102419438;
    if (os_log_type_enabled((os_log_t)qword_102419438, OS_LOG_TYPE_ERROR))
    {
      int v12 = *a2;
      *(_DWORD *)buf = 67240192;
      int v22 = v12;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "CLMM,MA-OTA,invalid notification,%{public}d", buf, 8u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419430 != -1) {
        dispatch_once(&qword_102419430, &stru_1022CF448);
      }
      int v13 = *a2;
      LODWORD(v20[0]) = 67240192;
      HIDWORD(v20[0]) = v13;
      BOOL v10 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "virtual void CLLocationControllerFusion::feedMobileAssetNotification(const CLMobileAssetManager_Type::Notification &, const CLMobileAssetManager_Type::NotificationData &)", "%s\n", v10);
LABEL_33:
      if (v10 != (char *)buf) {
        free(v10);
      }
    }
  }
  else
  {
    if (qword_102419430 != -1) {
      dispatch_once(&qword_102419430, &stru_1022CF448);
    }
    __int16 v9 = qword_102419438;
    if (os_log_type_enabled((os_log_t)qword_102419438, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "CLMM,MA-OTA,platform does not support MM", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419430 != -1) {
        dispatch_once(&qword_102419430, &stru_1022CF448);
      }
      LOWORD(v20[0]) = 0;
      BOOL v10 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLLocationControllerFusion::feedMobileAssetNotification(const CLMobileAssetManager_Type::Notification &, const CLMobileAssetManager_Type::NotificationData &)", "%s\n", v10);
      goto LABEL_33;
    }
  }
}

void sub_1008A8D34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  sub_10013F3C4(va);
  _Unwind_Resume(a1);
}

id sub_1008A8D6C(void *a1, int a2)
{
  uint64_t v4 = a1[30];
  if (v4) {
    sub_101188004(v4, a2);
  }
  uint64_t v5 = a1[74];
  if (v5) {
    sub_101188004(v5, a2);
  }
  id result = (id)a1[77];
  if (result)
  {
    return sub_101188004((uint64_t)result, a2);
  }
  return result;
}

BOOL sub_1008A8DD8(uint64_t a1, char **a2)
{
  return sub_100E980FC(a1 + 456, a2);
}

void sub_1008A8DE0(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 96)) {
    BOOL v2 = *(_DWORD *)(a2 + 48) <= 0;
  }
  else {
    BOOL v2 = 1;
  }
  char v4 = !v2 && *(unsigned char *)(a2 + 73) == 0;
  sub_100EA128C(a1 + 456, v4);
}

BOOL sub_1008A8E04(uint64_t a1, uint64_t a2)
{
  return sub_100E9A1F4(a1 + 456, a2);
}

BOOL sub_1008A8E0C(uint64_t a1, uint64_t a2)
{
  return sub_100E9AC2C(a1 + 456, a2);
}

void sub_1008A8E14(uint64_t a1, int a2)
{
}

void sub_1008A8E1C(uint64_t a1)
{
}

void sub_1008A8E24(uint64_t a1)
{
}

void sub_1008A8E2C(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 3568);
  if (v3) {
    sub_1008A8E3C(v3, a2, a3);
  }
}

void sub_1008A8E3C(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  if (*a2 == 9) {
    goto LABEL_9;
  }
  if (*a2 || (*(_DWORD *)(a3 + 792) & 0xFFFFFFFE) != 2) {
    return;
  }
  int v3 = *(_DWORD *)(a3 + 132);
  if (v3 == 2)
  {
LABEL_9:
    char v4 = (unsigned char *)sub_10067B400();
    if (v4 && v4[1] && *v4) {
      v4[1] = 0;
    }
  }
  else if (v3 == 1)
  {
    *(void *)(a1 + 24) = *(void *)(a3 + 504);
    sub_10078C168(a1);
  }
}

uint64_t sub_1008A8EC0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 3568);
  if (v1) {
    return *(unsigned int *)(v1 + 48);
  }
  if (qword_102419360 != -1) {
    dispatch_once(&qword_102419360, &stru_1022CF488);
  }
  int v3 = qword_102419368;
  if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Object pointer does not exist fLCFusionAccessoryConditions", buf, 2u);
  }
  if (sub_10013D1A0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022CF488);
    }
    char v4 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "virtual int CLLocationControllerFusion::getProactiveMinSessionInterval()", "%s\n", v4);
    if (v4 != (char *)buf) {
      free(v4);
    }
  }
  return 0x7FFFFFFFLL;
}

void sub_1008A905C(uint64_t a1)
{
  *(_DWORD *)a1 = 0xFFFF;
  *(_OWORD *)(a1 + 4) = 0u;
  *(_OWORD *)(a1 + 20) = xmmword_101D1C320;
  __asm { FMOV            V1.2D, #-1.0 }
  *(_OWORD *)(a1 + 36) = _Q1;
  *(_OWORD *)(a1 + 52) = _Q1;
  *(_OWORD *)(a1 + 68) = _Q1;
  long long v8 = _Q1;
  *(_DWORD *)(a1 + 84) = 0;
  *(void *)(a1 + 88) = 0xBFF0000000000000;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_DWORD *)(a1 + 112) = 0;
  *(void *)(a1 + 116) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 124) = 0x7FFFFFFF;
  *(void *)(a1 + 128) = 0;
  *(_OWORD *)(a1 + 136) = 0u;
  *(unsigned char *)(a1 + 152) = 0;
  *(_DWORD *)(a1 + 163) = 0;
  *(void *)(a1 + 156) = 0;
  *(_OWORD *)(a1 + 200) = 0u;
  uint64_t v7 = a1 + 200;
  *(_OWORD *)(a1 + 168) = _Q1;
  *(void *)(a1 + 184) = 0xBFF0000000000000;
  *(void *)(a1 + 192) = a1 + 200;
  *(_OWORD *)(a1 + 224) = 0u;
  *(void *)(a1 + 216) = a1 + 224;
  *(void *)(a1 + 240) = 0;
  sub_1008A93D4(a1 + 248);
  *(void *)(v7 + 768) = off_10232A710;
  *(_OWORD *)(v7 + 776) = v8;
  *(_OWORD *)(v7 + 808) = xmmword_101D1C320;
  *(_OWORD *)(v7 + 824) = xmmword_101D1C320;
  *(void *)(v7 + 848) = 0xBFF0000000000000;
  *(_OWORD *)(v7 + 856) = v8;
  *(_OWORD *)(v7 + 872) = v8;
  *(_DWORD *)(v7 + 888) = 0;
  *(unsigned char *)(v7 + 892) = 0;
  *(_DWORD *)(v7 + 896) = 0;
  *(_DWORD *)(v7 + 904) = 0;
  sub_1008A9438(v7 + 912);
  *(_OWORD *)(v7 + 1496) = 0u;
  *(void *)(v7 + 1512) = 0xBFF0000000000000;
  *(_OWORD *)(v7 + 1520) = 0u;
  *(_OWORD *)(v7 + 1536) = 0u;
  *(_DWORD *)(v7 + 1552) = 0;
  *(_OWORD *)(v7 + 1560) = v8;
  *(void *)(v7 + 1576) = 0;
  *(_OWORD *)(v7 + 1584) = 0u;
  sub_101171D90(v7 + 1600);
  sub_10068DAA8(a1 + 1840);
  *(void *)(a1 + 1968) = 0x600000006;
  *(void *)(a1 + 1976) = 0;
  *(_OWORD *)(a1 + 1984) = 0u;
  *(_OWORD *)(a1 + 2000) = v8;
  *(_OWORD *)(a1 + 2016) = 0u;
  *(_OWORD *)(a1 + 2032) = 0u;
  *(_OWORD *)(a1 + 2048) = 0u;
  *(_OWORD *)(a1 + 2061) = 0u;
  *(void *)(a1 + 2080) = 0xBFF0000000000000;
  *(void *)(a1 + 2088) = 0;
  *(unsigned char *)(a1 + 2096) = 0;
  *(void *)(a1 + 2104) = 0xBFF0000000000000;
  *(_OWORD *)(a1 + 2112) = 0u;
  *(_OWORD *)(a1 + 2128) = xmmword_101D1C320;
  *(unsigned char *)(a1 + 2144) = 0;
  *(void *)(a1 + 2152) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 2160) = 0;
  *(unsigned char *)(a1 + 2164) = 0;
  *(void *)(a1 + 2168) = 0x402C000000000000;
  *(_DWORD *)(a1 + 2176) = 0;
  *(void *)(a1 + 2200) = 0;
  *(void *)(a1 + 2192) = 0;
  *(void *)(a1 + 2184) = a1 + 2192;
  *(unsigned char *)(a1 + 2208) = 0;
  *(void *)(a1 + 2232) = 0;
  *(void *)(a1 + 2224) = 0;
  *(void *)(a1 + 2216) = a1 + 2224;
  *(void *)(a1 + 2248) = 0;
  *(void *)(a1 + 2256) = 0;
  *(void *)(a1 + 2240) = a1 + 2248;
  *(unsigned char *)(a1 + 2264) = 0;
  sub_10095A578(a1 + 2272);
  operator new();
}

void sub_1008A92CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, void **a11, uint64_t a12, uint64_t a13, uint64_t a14, _Unwind_Exception *exception_object)
{
  sub_1000F5BB0(v15 + 2320, *(void **)(v15 + 2328));
  sub_1000F5BB0(v15 + 2240, *v17);
  sub_1000F5BB0(v15 + 2216, *v22);
  sub_10054E0C0(v15 + 2184, *v18);
  sub_100507624(v21);
  __int16 v24 = *(void **)(v15 + 1976);
  if (v24)
  {
    *(void *)(v15 + 1984) = v24;
    operator delete(v24);
  }
  sub_1008A9394(v20);
  sub_1008A95C4(v19, 0);
  double v25 = *(std::__shared_weak_count **)(v15 + 1656);
  if (v25) {
    sub_1000DB0A0(v25);
  }
  sub_1008A9614(a10);
  sub_100179680(a11);
  sub_1008A97C0(a12, *v23);
  sub_1008A981C((uint64_t)(v16 - 1), *v16);
  _Unwind_Resume(a1);
}

uint64_t sub_1008A9394(uint64_t a1)
{
  sub_1000F5BB0(a1 + 48, *(void **)(a1 + 56));

  return sub_1006585C8((void *)a1);
}

uint64_t sub_1008A93D4(uint64_t a1)
{
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  sub_1008A9438(a1 + 48);
  *(void *)(a1 + 632) = 0x3FF0000000000000;
  *(void *)(a1 + 640) = 0;
  *(_DWORD *)(a1 + 648) = -1;
  *(void *)(a1 + 652) = 0;
  *(void *)(a1 + 657) = 0;
  sub_101171D90(a1 + 672);
  *(_DWORD *)(a1 + 712) = 0;
  return a1;
}

uint64_t sub_1008A9438(uint64_t a1)
{
  *(unsigned char *)a1 = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(void *)(a1 + 296) = 0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  *(_OWORD *)(a1 + 304) = xmmword_101D1C320;
  *(_OWORD *)(a1 + 320) = xmmword_101D1C320;
  *(unsigned char *)(a1 + 336) = 0;
  *(void *)(a1 + 344) = 0x200000004;
  __asm { FMOV            V1.2D, #-1.0 }
  *(_OWORD *)(a1 + 352) = _Q1;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 400) = _Q1;
  *(unsigned char *)(a1 + 416) = 0;
  *(unsigned char *)(a1 + 424) = 0;
  *(unsigned char *)(a1 + 432) = 0;
  *(unsigned char *)(a1 + 440) = 0;
  *(unsigned char *)(a1 + 448) = 0;
  *(unsigned char *)(a1 + 456) = 0;
  *(unsigned char *)(a1 + 464) = 0;
  *(unsigned char *)(a1 + 472) = 0;
  sub_101171D90(a1 + 480);
  *(void *)(a1 + 520) = 0xBFF0000000000000;
  *(void *)(a1 + 528) = 0;
  *(void *)(a1 + 544) = 0;
  *(void *)(a1 + 536) = 0;
  *(void *)(a1 + 552) = 0xBFF0000000000000;
  *(unsigned char *)(a1 + 560) = 0;
  *(_DWORD *)(a1 + 564) = 0;
  *(unsigned char *)(a1 + 568) = 0;
  *(void *)(a1 + 576) = 0xBFF0000000000000;
  return a1;
}

double sub_1008A952C(uint64_t a1, uint64_t a2)
{
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a1 + 320) = _Q0;
  *(_OWORD *)(a1 + 336) = _Q0;
  *(_OWORD *)(a1 + 352) = xmmword_101D1C320;
  *(_OWORD *)(a1 + 368) = xmmword_101D1C320;
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(unsigned char *)(a1 + 48) = 1;
  *(void *)(a1 + 56) = 0xBFF0000000000000;
  *(unsigned char *)(a1 + 64) = 1;
  *(void *)(a1 + 72) = 0xBFF0000000000000;
  *(void *)(a1 + 80) = 0;
  *(_DWORD *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(_DWORD *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  *(_DWORD *)(a1 + 136) = 0;
  *(unsigned char *)(a1 + 144) = 1;
  *(void *)(a1 + 152) = 0xBFF0000000000000;
  *(void *)(a1 + 224) = 0;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(void *)(a1 + 240) = 0xBFF0000000000000;
  *(_OWORD *)(a1 + 248) = 0u;
  *(void *)(a1 + 312) = 0;
  *(void *)(a1 + 384) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 392) = 0;
  *(void *)(a1 + 400) = a2;
  *(unsigned char *)(a1 + 408) = 0;
  *(unsigned char *)(a1 + 416) = 0;
  *(void *)(a1 + 424) = 0;
  *(void *)(a1 + 432) = 0;
  *(unsigned char *)(a1 + 232) = 1;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  *(_OWORD *)(a1 + 296) = 0u;
  return result;
}

void *sub_1008A95C4(void **a1, void *a2)
{
  double result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_10050757C(result);
    operator delete();
  }
  return result;
}

uint64_t sub_1008A9614(void *a1)
{
  BOOL v2 = (std::__shared_weak_count *)a1[74];
  if (v2) {
    sub_1000DB0A0(v2);
  }

  return sub_1008A9654(a1);
}

uint64_t sub_1008A9654(void *a1)
{
  BOOL v2 = (void **)a1[1];
  int v3 = (void **)a1[2];
  if (v3 == v2)
  {
    char v4 = a1 + 5;
    int v3 = (void **)a1[1];
  }
  else
  {
    char v4 = a1 + 5;
    unint64_t v5 = a1[4];
    int v6 = &v2[v5 / 0x17];
    unint64_t v7 = (unint64_t)*v6;
    unint64_t v8 = (unint64_t)*v6 + 176 * (v5 % 0x17);
    unint64_t v9 = (unint64_t)v2[(a1[5] + v5) / 0x17] + 176 * ((a1[5] + v5) % 0x17);
    if (v8 != v9)
    {
      do
      {
        BOOL v10 = *(std::__shared_weak_count **)(v8 + 24);
        if (v10)
        {
          std::__shared_weak_count::__release_weak(v10);
          unint64_t v7 = (unint64_t)*v6;
        }
        v8 += 176;
        if (v8 - v7 == 4048)
        {
          unint64_t v11 = (unint64_t)v6[1];
          ++v6;
          unint64_t v7 = v11;
          unint64_t v8 = v11;
        }
      }
      while (v8 != v9);
      BOOL v2 = (void **)a1[1];
      int v3 = (void **)a1[2];
    }
  }
  *char v4 = 0;
  unint64_t v12 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      int v3 = (void **)a1[2];
      BOOL v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      unint64_t v12 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v13 = v12 >> 3;
  if (v13 == 1)
  {
    uint64_t v14 = 11;
  }
  else
  {
    if (v13 != 2) {
      goto LABEL_18;
    }
    uint64_t v14 = 23;
  }
  a1[4] = v14;
LABEL_18:
  while (v2 != v3)
  {
    uint64_t v15 = *v2++;
    operator delete(v15);
  }

  return sub_1000D7EB4((uint64_t)a1);
}

void sub_1008A97C0(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1008A97C0(a1, *a2);
    sub_1008A97C0(a1, a2[1]);
    sub_1008A9614(a2 + 5);
    operator delete(a2);
  }
}

void sub_1008A981C(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1008A981C(a1, *a2);
    sub_1008A981C(a1, a2[1]);
    sub_10003E950((void **)a2 + 5);
    operator delete(a2);
  }
}

void sub_1008A987C(id a1)
{
  qword_102419518 = (uint64_t)os_log_create("com.apple.locationd.Position", "LCFusion");
}

void sub_1008A98AC(id a1)
{
  qword_102419388 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

void sub_1008A98DC(id a1)
{
  qword_102418FB8 = (uint64_t)os_log_create("com.apple.locationd.Position", "TrackRun");
}

uint64_t sub_1008A990C(uint64_t a1)
{
  sub_1000F5BB0(a1 + 2320, *(void **)(a1 + 2328));
  sub_1000F5BB0(a1 + 2240, *(void **)(a1 + 2248));
  sub_1000F5BB0(a1 + 2216, *(void **)(a1 + 2224));
  sub_10054E0C0(a1 + 2184, *(void **)(a1 + 2192));
  sub_100507624((void *)(a1 + 2016));
  BOOL v2 = *(void **)(a1 + 1976);
  if (v2)
  {
    *(void *)(a1 + 1984) = v2;
    operator delete(v2);
  }
  sub_1000F5BB0(a1 + 1888, *(void **)(a1 + 1896));
  sub_1006585C8((void *)(a1 + 1840));
  sub_1008A95C4((void **)(a1 + 1696), 0);
  int v3 = *(std::__shared_weak_count **)(a1 + 1656);
  if (v3) {
    sub_1000DB0A0(v3);
  }
  sub_1008A9614((void *)(a1 + 248));
  sub_100179680((void **)(a1 + 240));
  sub_1008A97C0(a1 + 216, *(void **)(a1 + 224));
  sub_1008A981C(a1 + 192, *(void **)(a1 + 200));
  return a1;
}

void sub_1008A99D0(id a1)
{
  qword_102419438 = (uint64_t)os_log_create("com.apple.locationd.Position", "MapMatcher");
}

char *sub_1008A9A00(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  unint64_t v7 = result;
  uint64_t v8 = *((void *)result + 2);
  unint64_t v9 = *(char **)result;
  if (0xCCCCCCCCCCCCCCCDLL * ((v8 - *(void *)result) >> 3) < a4)
  {
    if (v9)
    {
      *((void *)result + 1) = v9;
      operator delete(v9);
      uint64_t v8 = 0;
      *unint64_t v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 > 0x666666666666666) {
      sub_1001D7FD4();
    }
    unint64_t v10 = 0xCCCCCCCCCCCCCCCDLL * (v8 >> 3);
    uint64_t v11 = 2 * v10;
    if (2 * v10 <= a4) {
      uint64_t v11 = a4;
    }
    if (v10 >= 0x333333333333333) {
      unint64_t v12 = 0x666666666666666;
    }
    else {
      unint64_t v12 = v11;
    }
    double result = sub_10054E250(v7, v12);
    uint64_t v14 = (char *)v7[1];
    unint64_t v13 = (void **)(v7 + 1);
    unint64_t v9 = v14;
LABEL_16:
    size_t v17 = a3 - (void)__src;
    if (v17)
    {
      __int16 v18 = v9;
      id v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  unint64_t v13 = (void **)(result + 8);
  uint64_t v15 = (unsigned char *)*((void *)result + 1);
  if (0xCCCCCCCCCCCCCCCDLL * ((v15 - v9) >> 3) >= a4) {
    goto LABEL_16;
  }
  int v16 = &__src[8 * ((v15 - v9) >> 3)];
  if (v15 != v9)
  {
    double result = (char *)memmove(*(void **)result, __src, v15 - v9);
    unint64_t v9 = (char *)*v13;
  }
  size_t v17 = a3 - (void)v16;
  if (v17)
  {
    __int16 v18 = v9;
    id v19 = v16;
LABEL_18:
    double result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  *unint64_t v13 = &v9[v17];
  return result;
}

void sub_1008A9B3C(id a1)
{
  qword_1024193D8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Gnss");
}

void sub_1008A9B6C(id a1)
{
  qword_102419368 = (uint64_t)os_log_create("com.apple.locationd.Position", "GpsAccessory");
}

uint64_t sub_1008A9B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_1008A9C34(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_101917334();
    operator delete();
  }
  return result;
}

uint64_t sub_1008A9C84(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_100969E44();
    operator delete();
  }
  return result;
}

uint64_t sub_1008A9CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_1008A9D6C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241ADF0, memory_order_acquire) & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_10241ADF0))
    {
      uint64_t v1 = 0x7FFFFFFF00000000;
      v0[2] = xmmword_101D514D8;
      v0[3] = unk_101D514E8;
      v0[4] = xmmword_101D514F8;
      v0[0] = xmmword_101D514B8;
      v0[1] = unk_101D514C8;
      sub_1003BFBA4((uint64_t)&unk_10241ADD8, (int *)v0, 11);
      __cxa_atexit((void (*)(void *))sub_1003BE998, &unk_10241ADD8, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_10241ADF0);
    }
  }
}

void sub_1008A9E4C(_Unwind_Exception *a1)
{
}

uint64_t sub_1008A9E64()
{
  sub_100134750(qword_10247E788, "RoadAndBuildingPrecachingEnabled");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247E788, (void *)&_mh_execute_header);
  sub_100134750(qword_10247E7A0, "RoadTilesRadiusInMetersHome");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247E7A0, (void *)&_mh_execute_header);
  sub_100134750(qword_10247E7B8, "BuildingTilesRadiusInMetersHome");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247E7B8, (void *)&_mh_execute_header);
  sub_100134750(qword_10247E7D0, "RunningTrackTilesRadiusInMetersHome");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247E7D0, (void *)&_mh_execute_header);
  sub_100134750(qword_10247E7E8, "RoadTilesRadiusInMetersWork");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247E7E8, (void *)&_mh_execute_header);
  sub_100134750(qword_10247E800, "BuildingTilesRadiusInMetersWork");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247E800, (void *)&_mh_execute_header);
  sub_100134750(qword_10247E818, "RunningTrackTilesRadiusInMetersWork");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247E818, (void *)&_mh_execute_header);
  sub_100134750(qword_10247E830, "RoadTilesRadiusInMetersSchool");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247E830, (void *)&_mh_execute_header);
  sub_100134750(qword_10247E848, "BuildingTilesRadiusInMetersSchool");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247E848, (void *)&_mh_execute_header);
  sub_100134750(qword_10247E860, "RunningTrackTilesRadiusInMetersSchool");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247E860, (void *)&_mh_execute_header);
  sub_100134750(qword_10247E878, "PrecachingTileRefreshPeriodV2");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247E878, (void *)&_mh_execute_header);
  sub_100134750(qword_10247E890, "PrecachingTileRefreshPeriodNPLOIAndTouristV2");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247E890, (void *)&_mh_execute_header);
  sub_100134750(qword_10247E8A8, "PrecachingMinimumBatteryLevel");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247E8A8, (void *)&_mh_execute_header);
  sub_100134750(qword_10247E8C0, "PrecachingMinimumBatteryLevelAggressiveMode");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247E8C0, (void *)&_mh_execute_header);
  sub_100134750(qword_10247E8D8, "PrecachingXPCDownloadInterval");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247E8D8, (void *)&_mh_execute_header);
  sub_100134750(qword_10247E8F0, "PrecachingDownloadSizePerSection");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247E8F0, (void *)&_mh_execute_header);
  sub_100134750(qword_10247E908, "PrecachingUploadSizePerSection");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247E908, (void *)&_mh_execute_header);
  sub_100134750(qword_10247E920, "PrecachingDownloadTimePerSection");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247E920, (void *)&_mh_execute_header);
  sub_100134750(qword_10247E938, "UseInsideOutTileDownload");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247E938, (void *)&_mh_execute_header);
  sub_100134750(qword_10247E950, "IsDiskIntensiveActivity");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247E950, (void *)&_mh_execute_header);
  sub_100134750(qword_10247E968, "PrecachingAllowSignalEnvironmentMode");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247E968, (void *)&_mh_execute_header);
  sub_100134750(qword_10247E980, "RoadTileDownloadRadiusSE");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247E980, (void *)&_mh_execute_header);
  sub_100134750(qword_10247E998, "BuildingTileDownloadRadiusSE");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247E998, (void *)&_mh_execute_header);
  sub_100134750(qword_10247E9B0, "RunningTrackTileDownloadRadiusSE");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247E9B0, (void *)&_mh_execute_header);
  sub_100134750(qword_10247E9C8, "PrecachingAllowAggressiveSettingInTouristMode");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247E9C8, (void *)&_mh_execute_header);
  sub_100134750(qword_10247E9E0, "RoadTileDownloadRadiusTouristSE");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247E9E0, (void *)&_mh_execute_header);
  sub_100134750(qword_10247E9F8, "BuildingTileDownloadRadiusTouristSE");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247E9F8, (void *)&_mh_execute_header);
  sub_100134750(qword_10247EA10, "RunningTrackTileDownloadRadiusTouristSE");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247EA10, (void *)&_mh_execute_header);
  sub_100134750(qword_10247EA28, "MaxSectionDownloadAllowedForTouristSE");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247EA28, (void *)&_mh_execute_header);
  sub_100134750(qword_10247EA40, "TimeWindowToCheckForMaxSectionDownloadForTouristSE");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247EA40, (void *)&_mh_execute_header);
  sub_100134750(qword_10247EA58, "PrecachingAllowTouristMode");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247EA58, (void *)&_mh_execute_header);
  sub_100134750(qword_10247EA70, "RoadTilesRadiusInMetersTourist");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247EA70, (void *)&_mh_execute_header);
  sub_100134750(qword_10247EA88, "BuildingTilesRadiusInMetersTourist");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247EA88, (void *)&_mh_execute_header);
  sub_100134750(qword_10247EAA0, "RunningTrackTilesRadiusInMetersTourist");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247EAA0, (void *)&_mh_execute_header);
  sub_100134750(qword_10247EAB8, "MaxLocationAgeForTouristMode");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247EAB8, (void *)&_mh_execute_header);
  sub_100134750(qword_10247EAD0, "SectionsToDownloadPerXPCCall");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247EAD0, (void *)&_mh_execute_header);
  sub_100134750(qword_10247EAE8, "SectionsToDownloadPerXPCCallForTourist");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247EAE8, (void *)&_mh_execute_header);
  sub_100134750(qword_10247EB00, "SectionsToDownloadPerXPCCallForNPLOI");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247EB00, (void *)&_mh_execute_header);
  sub_100134750(qword_10247EB18, "SectionsToDownloadPerXPCCallForSignalEnvironment");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247EB18, (void *)&_mh_execute_header);
  sub_100134750(qword_10247EB30, "PrecachngAllowNPLOI");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247EB30, (void *)&_mh_execute_header);
  sub_100134750(qword_10247EB48, "RoadTileDownloadRadiusNPLOI");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247EB48, (void *)&_mh_execute_header);
  sub_100134750(qword_10247EB60, "BuildingTileDownloadRadiusNPLOI");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247EB60, (void *)&_mh_execute_header);
  sub_100134750(qword_10247EB78, "RunningTrackTileDownloadRadiusNPLOI");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247EB78, (void *)&_mh_execute_header);
  sub_100134750(qword_10247EB90, "DistanceFromHomeForTouristModeMeters");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247EB90, (void *)&_mh_execute_header);
  sub_100134750(qword_10247EBA8, "NumDaysLookbackForWorkouts");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247EBA8, (void *)&_mh_execute_header);
  sub_100134750(qword_10247EBC0, "[");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247EBC0, (void *)&_mh_execute_header);
  sub_100134750(qword_10247EBD8, "]");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247EBD8, (void *)&_mh_execute_header);
  sub_100134750(qword_10247EBF0, " ");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247EBF0, (void *)&_mh_execute_header);
  sub_100134750(qword_10247EC08, ";");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247EC08, (void *)&_mh_execute_header);
  sub_100134750(qword_10247EC20, ", ");

  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247EC20, (void *)&_mh_execute_header);
}

void sub_1008AA67C(uint64_t a1, void *a2)
{
}

void sub_1008AAA70(_Unwind_Exception *a1)
{
  uint64_t v5 = *(void *)(v1 + 1920);
  *(void *)(v1 + 1920) = 0;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  sub_100C0AB60(v2);
  uint64_t v6 = *(void *)(v1 + 1720);
  *(void *)(v1 + 1720) = 0;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  uint64_t v7 = *v3;
  *uint64_t v3 = 0;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  if (*(char *)(v1 + 1639) < 0) {
    operator delete(*(void **)(v1 + 1616));
  }
  sub_10049FFA8(v1);
  _Unwind_Resume(a1);
}

void sub_1008AAB6C(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022CF600);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLOdometerNotifierCompanion::onLocationNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022CF600);
    }
    unint64_t v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      size_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLOdometerNotifierCompanion::onLocationNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_1008AC24C(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1008AAD28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1008AAD48(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(v2 + 40);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3321888768;
  v6[2] = sub_1008AAE00;
  v6[3] = &unk_1022C88A0;
  uint64_t v5 = *a2;
  char v4 = (std::__shared_weak_count *)a2[1];
  v6[4] = v2;
  v6[5] = v5;
  uint64_t v7 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  [v3 async:v6];
  if (v7) {
    sub_1000DB0A0(v7);
  }
}

void sub_1008AADE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  if (a16) {
    sub_1000DB0A0(a16);
  }
  _Unwind_Resume(exception_object);
}

void sub_1008AAE00(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 48);
  v4[0] = *(uint64_t ***)(a1 + 40);
  v4[1] = (uint64_t **)v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  sub_1008AAE8C(v2, v4);
  if (v3)
  {
    sub_1000DB0A0((std::__shared_weak_count *)v3);
  }
}

void sub_1008AAE74(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_1000DB0A0(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1008AAE8C(uint64_t a1, uint64_t ***a2)
{
  *(_DWORD *)buf = 5;
  if (sub_1001072EC(a1, (int *)buf, 1))
  {
    for (i = **a2; i != (*a2)[1]; i += 2)
    {
      if (qword_1024190D0 != -1) {
        dispatch_once(&qword_1024190D0, &stru_1022CF660);
      }
      uint64_t v5 = qword_1024190D8;
      if (os_log_type_enabled((os_log_t)qword_1024190D8, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v6 = *i;
        int v7 = *((_DWORD *)i + 2);
        *(_DWORD *)buf = 134349569;
        *(void *)&uint8_t buf[4] = v6;
        *(_WORD *)&unsigned char buf[12] = 1025;
        *(_DWORD *)&buf[14] = v7;
        *(_WORD *)&buf[18] = 1025;
        *(_DWORD *)&buf[20] = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "onCoarseElevation,startTime,%{public}f,ascended,%{private}d,source,%{private}d", buf, 0x18u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024190D0 != -1) {
          dispatch_once(&qword_1024190D0, &stru_1022CF660);
        }
        uint64_t v10 = *i;
        int v11 = *((_DWORD *)i + 2);
        int v15 = 134349569;
        uint64_t v16 = v10;
        __int16 v17 = 1025;
        int v18 = v11;
        __int16 v19 = 1025;
        int v20 = 0;
        unint64_t v12 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLOdometerNotifierCompanion::notifyCoarseElevation(std::shared_ptr<CLCoarseElevationVector>)", "%s\n", v12);
        if (v12 != buf) {
          free(v12);
        }
      }
      long long v30 = 0u;
      long long v31 = 0u;
      long long v28 = 0u;
      long long v29 = 0u;
      long long v26 = 0u;
      long long v27 = 0u;
      long long v24 = 0u;
      long long v25 = 0u;
      long long v22 = 0u;
      long long v23 = 0u;
      *(_OWORD *)&buf[16] = 0u;
      *(_OWORD *)buf = *(_OWORD *)i;
      int v15 = 5;
      (*(void (**)(uint64_t, int *, unsigned char *, void, uint64_t, void))(*(void *)a1 + 152))(a1, &v15, buf, 0, 0xFFFFFFFFLL, 0);
      unint64_t v9 = objc_alloc_init(ALActivityLog);
      [(ALActivityLog *)v9 setTimestamp:*(double *)i];
      [(ALActivityLog *)v9 setCoarseElevation:objc_alloc_init(ALCMCoarseElevation)];
      [(ALCMCoarseElevation *)[(ALActivityLog *)v9 coarseElevation] setElevationAscended:*((unsigned int *)i + 2)];
      [+[CLServiceVendor sharedInstance](CLServiceVendor, "sharedInstance") proxyForService:@"CLActivityLogger"] logData:v9;
    }
  }
  else
  {
    uint64_t v13 = sub_1000D2E34(0);
    if (v13 && (*(unsigned int (**)(void))(*(void *)(v13 + 72) + 16))())
    {
      uint64_t v14 = sub_1000D2E34(0);
      (*(void (**)(void))(*(void *)(v14 + 72) + 40))();
    }
  }
}

void sub_1008AB220(uint64_t a1, int a2)
{
  if (qword_102419150 != -1) {
    dispatch_once(&qword_102419150, &stru_1022CF620);
  }
  char v4 = qword_102419158;
  if (os_log_type_enabled((os_log_t)qword_102419158, OS_LOG_TYPE_DEBUG))
  {
    int v5 = *(unsigned __int8 *)(a1 + 920);
    *(_DWORD *)buf = 67240448;
    *(_DWORD *)&uint8_t buf[4] = v5;
    __int16 v9 = 1026;
    int v10 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Update location authorization, current, %{public}d, new, %{public}d", buf, 0xEu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419150 != -1) {
      dispatch_once(&qword_102419150, &stru_1022CF620);
    }
    int v7 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLOdometerNotifierCompanion::updateStateOnAuthorization(BOOL)", "%s\n", v7);
    if (v7 != (char *)buf) {
      free(v7);
    }
  }
  if (*(unsigned __int8 *)(a1 + 920) != a2)
  {
    uint64_t v6 = *(void *)(a1 + 1712);
    *(void *)(a1 + 1712) = 0;
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    sub_100681630();
  }
}

uint64_t sub_1008AB62C(uint64_t a1)
{
  *(void *)a1 = off_1022CF4B8;
  uint64_t v2 = *(void *)(a1 + 1712);
  *(void *)(a1 + 1712) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(void *)(a1 + 1720);
  *(void *)(a1 + 1720) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  uint64_t v4 = *(void *)(a1 + 1920);
  *(void *)(a1 + 1920) = 0;
  if (v4)
  {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    uint64_t v5 = *(void *)(a1 + 1920);
    *(void *)(a1 + 1920) = 0;
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
  }
  sub_100C0AB60(a1 + 1728);
  uint64_t v6 = *(void *)(a1 + 1720);
  *(void *)(a1 + 1720) = 0;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  uint64_t v7 = *(void *)(a1 + 1712);
  *(void *)(a1 + 1712) = 0;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  if (*(char *)(a1 + 1639) < 0) {
    operator delete(*(void **)(a1 + 1616));
  }

  return sub_10049FFA8(a1);
}

void sub_1008AB7B8(uint64_t a1)
{
  sub_1008AB62C(a1);

  operator delete();
}

uint64_t sub_1008AB7F0(unsigned char *a1)
{
  int v5 = 2;
  if (sub_1001072EC((uint64_t)a1, &v5, 1) && a1[920]) {
    sub_1008AB8D0(a1);
  }
  else {
    sub_1008ABBE0(a1);
  }
  uint64_t result = sub_1000D2E34(0);
  if (result)
  {
    uint64_t v3 = result + 72;
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(result + 72) + 16))(result + 72);
    if (result)
    {
      int v6 = 5;
      BOOL v4 = (int)sub_1001072EC((uint64_t)a1, &v6, 1) > 0;
      return (*(uint64_t (**)(uint64_t, BOOL))(*(void *)v3 + 40))(v3, v4);
    }
  }
  return result;
}

unsigned char *sub_1008AB8D0(unsigned char *result)
{
  if (!result[921])
  {
    uint64_t v1 = result;
    if (qword_102419150 != -1) {
      dispatch_once(&qword_102419150, &stru_1022CF620);
    }
    uint64_t v2 = qword_102419158;
    if (os_log_type_enabled((os_log_t)qword_102419158, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Enable GPS; Start GPS subscription", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419150 != -1) {
        dispatch_once(&qword_102419150, &stru_1022CF620);
      }
      BOOL v4 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLOdometerNotifierCompanion::enableGPS()", "%s\n", v4);
      if (v4 != (char *)buf) {
        free(v4);
      }
    }
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022CF640);
    }
    uint64_t v3 = qword_1024193D8;
    if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#wigo,on,OdometerNotifierCompanion", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193D0 != -1) {
        dispatch_once(&qword_1024193D0, &stru_1022CF640);
      }
      int v5 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLOdometerNotifierCompanion::enableGPS()", "%s\n", v5);
      if (v5 != (char *)buf) {
        free(v5);
      }
    }
    AnalyticsSendEventLazy();
    [*(id *)(*((void *)v1 + 215) + 16) register:*(void *)(*((void *)v1 + 215) + 8) forNotification:0 registrationInfo:0];
    uint64_t result = [*(id *)(*((void *)v1 + 240) + 16) register:*(void *)(*((void *)v1 + 240) + 8) forNotification:0 registrationInfo:0];
    v1[921] = 1;
  }
  return result;
}

unsigned char *sub_1008ABBE0(unsigned char *result)
{
  if (result[921])
  {
    uint64_t v1 = result;
    if (qword_102419150 != -1) {
      dispatch_once(&qword_102419150, &stru_1022CF620);
    }
    uint64_t v2 = qword_102419158;
    if (os_log_type_enabled((os_log_t)qword_102419158, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Disable GPS; Stop GPS subscription", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419150 != -1) {
        dispatch_once(&qword_102419150, &stru_1022CF620);
      }
      BOOL v4 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLOdometerNotifierCompanion::disableGPS()", "%s\n", v4);
      if (v4 != (char *)buf) {
        free(v4);
      }
    }
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022CF640);
    }
    uint64_t v3 = qword_1024193D8;
    if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#wigo,off,OdometerNotifierCompanion", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193D0 != -1) {
        dispatch_once(&qword_1024193D0, &stru_1022CF640);
      }
      int v5 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLOdometerNotifierCompanion::disableGPS()", "%s\n", v5);
      if (v5 != (char *)buf) {
        free(v5);
      }
    }
    AnalyticsSendEventLazy();
    [*(id *)(*((void *)v1 + 215) + 16) unregister:*(void *)(*((void *)v1 + 215) + 8) forNotification:0];
    uint64_t result = [*(id *)(*((void *)v1 + 240) + 16) unregister:*(void *)(*((void *)v1 + 240) + 8) forNotification:0];
    v1[921] = 0;
  }
  return result;
}

NSDictionary *__cdecl sub_1008ABEE4(id a1)
{
  return (NSDictionary *)&off_102397310;
}

NSDictionary *__cdecl sub_1008ABEF0(id a1)
{
  return (NSDictionary *)&off_102397338;
}

uint64_t sub_1008ABEFC(uint64_t result, uint64_t a2, uint64_t a3)
{
  double v3 = *(double *)a3;
  if (*(double *)a3 >= 0.0)
  {
    double v4 = *(double *)(a3 + 8);
    if (v4 >= 0.0)
    {
      double v5 = *(double *)(a3 + 16);
      if (v5 >= 0.0)
      {
        uint64_t v6 = result;
        memset(&v22[72], 0, 40);
        *(_OWORD *)&v22[56] = 0u;
        *(_OWORD *)&v22[40] = 0u;
        *(_OWORD *)&v22[24] = 0u;
        *(_OWORD *)&v22[8] = 0u;
        *(void *)&long long v17 = *(void *)(a2 + 76);
        *((double *)&v17 + 1) = v4;
        uint64_t v7 = *(void *)(a2 + 28);
        *(double *)&long long v18 = v5;
        *((void *)&v18 + 1) = v7;
        *(void *)&long long v19 = *(void *)(a2 + 44);
        *((void *)&v19 + 1) = v19;
        uint64_t v8 = *(void *)(a2 + 52);
        *(double *)&long long v20 = v3;
        *((void *)&v20 + 1) = v8;
        uint64_t v9 = *(void *)(a3 + 344);
        *(void *)&long long v21 = *(void *)(a3 + 24);
        *((void *)&v21 + 1) = v9;
        int v10 = *(_DWORD *)(a3 + 352);
        *(_DWORD *)long long v22 = 0;
        *(_DWORD *)&v22[4] = v10;
        *(_DWORD *)&v22[8] = *(_DWORD *)(a2 + 96);
        long long v11 = *(_OWORD *)(a3 + 496);
        long long v12 = *(_OWORD *)(a3 + 360);
        *(_OWORD *)&v22[16] = *(_OWORD *)(a3 + 376);
        *(_OWORD *)&v22[32] = v11;
        uint64_t v13 = *(void *)(a2 + 68);
        *(double *)&v22[48] = *(double *)(a2 + 60) * 0.0174532924;
        *(void *)&v22[56] = v13;
        *(_OWORD *)&v22[64] = v12;
        *(void *)&v22[80] = 0;
        sub_1004A15EC(result, (uint64_t)&v17);
        *(void *)&long long v19 = v14;
        if (qword_102419150 != -1) {
          dispatch_once(&qword_102419150, &stru_1022CF620);
        }
        int v15 = qword_102419158;
        if (os_log_type_enabled((os_log_t)qword_102419158, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 134350081;
          *(void *)&uint8_t buf[4] = v17;
          *(_WORD *)&unsigned char buf[12] = 2049;
          *(void *)&buf[14] = *((void *)&v17 + 1);
          *(_WORD *)&buf[22] = 2050;
          *(void *)&buf[24] = v18;
          *(_WORD *)char v34 = 2049;
          *(void *)&v34[2] = *((void *)&v18 + 1);
          *(_WORD *)&v34[10] = 2049;
          *(void *)&v34[12] = v19;
          _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "Odometer(GPS),%{public}f,%{private}f,%{public}f,%{private}f,%{private}f", buf, 0x34u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419150 != -1) {
            dispatch_once(&qword_102419150, &stru_1022CF620);
          }
          int v23 = 134350081;
          uint64_t v24 = v17;
          __int16 v25 = 2049;
          uint64_t v26 = *((void *)&v17 + 1);
          __int16 v27 = 2050;
          uint64_t v28 = v18;
          __int16 v29 = 2049;
          uint64_t v30 = *((void *)&v18 + 1);
          __int16 v31 = 2049;
          uint64_t v32 = v19;
          uint64_t v16 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLOdometerNotifierCompanion::notifyLocation(const CLDaemonLocation &, const CLDaemonLocationPrivate &)", "%s\n", v16);
          if (v16 != buf) {
            free(v16);
          }
        }
        long long v39 = *(_OWORD *)&v22[48];
        long long v40 = *(_OWORD *)&v22[64];
        long long v41 = *(_OWORD *)&v22[80];
        long long v42 = *(_OWORD *)&v22[96];
        long long v35 = v21;
        long long v36 = *(_OWORD *)v22;
        long long v37 = *(_OWORD *)&v22[16];
        long long v38 = *(_OWORD *)&v22[32];
        *(_OWORD *)buf = v17;
        *(_OWORD *)&buf[16] = v18;
        *(_OWORD *)char v34 = v19;
        *(_OWORD *)&v34[16] = v20;
        int v23 = 4;
        return (*(uint64_t (**)(uint64_t, int *, unsigned char *, void, uint64_t, void))(*(void *)v6 + 152))(v6, &v23, buf, 0, 0xFFFFFFFFLL, 0);
      }
    }
  }
  return result;
}

void sub_1008AC24C(uint64_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  int v5 = *a3;
  if (*a3 == 23)
  {
    uint64_t v8 = *(int **)(a4 + 800);
    if (v8 && (unint64_t)sub_1010FB9FC(v8) >= 2)
    {
      if (qword_102419150 != -1) {
        dispatch_once(&qword_102419150, &stru_1022CF620);
      }
      uint64_t v9 = qword_102419158;
      if (os_log_type_enabled((os_log_t)qword_102419158, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v10 = sub_1010FB9FC(*(int **)(a4 + 800));
        *(_DWORD *)buf = 134349056;
        uint64_t v23 = v10;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "Location batch notification size %{public}ld", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419150 != -1) {
          dispatch_once(&qword_102419150, &stru_1022CF620);
        }
        uint64_t v18 = sub_1010FB9FC(*(int **)(a4 + 800));
        int v20 = 134349056;
        uint64_t v21 = v18;
        long long v19 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLOdometerNotifierCompanion::onLocationNotification(int, const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)", "%s\n", v19);
        if (v19 != (char *)buf) {
          free(v19);
        }
      }
      if (sub_1010FB9FC(*(int **)(a4 + 800)))
      {
        unint64_t v11 = 0;
        do
        {
          sub_1010FB258(*(void *)(a4 + 800), v11, (uint64_t)&v20);
          sub_1010FB770(*(void *)(a4 + 800), v11, (uint64_t)buf);
          sub_1008ABEFC(a1, (uint64_t)&v20, (uint64_t)buf);
          if (v24) {
            sub_1000DB0A0(v24);
          }
          ++v11;
        }
        while (v11 < sub_1010FB9FC(*(int **)(a4 + 800)));
      }
    }
    else
    {
      sub_1008ABEFC(a1, a4, a4 + 160);
    }
  }
  else if (v5 == 14)
  {
    int v12 = sub_1004A1418(a1);
    sub_1008AB220(a1, v12);
  }
  else if (v5)
  {
    if (qword_102419150 != -1) {
      dispatch_once(&qword_102419150, &stru_1022CF620);
    }
    uint64_t v14 = qword_102419158;
    if (os_log_type_enabled((os_log_t)qword_102419158, OS_LOG_TYPE_ERROR))
    {
      int v15 = *a3;
      *(_DWORD *)buf = 67240192;
      LODWORD(v23) = v15;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "#Warning Received unhandled location notification, %{public}d", buf, 8u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419150 != -1) {
        dispatch_once(&qword_102419150, &stru_1022CF620);
      }
      int v16 = *a3;
      int v20 = 67240192;
      LODWORD(v21) = v16;
      long long v17 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "void CLOdometerNotifierCompanion::onLocationNotification(int, const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)", "%s\n", v17);
      if (v17 != (char *)buf) {
        free(v17);
      }
    }
  }
  else
  {
    uint64_t v6 = a1 + 1728;
    sub_100C0C648(v6);
  }
}

void sub_1008AC6D8(_Unwind_Exception *a1)
{
  if (STACK[0x2C0]) {
    sub_1000DB0A0((std::__shared_weak_count *)STACK[0x2C0]);
  }
  _Unwind_Resume(a1);
}

void sub_1008AC6F8(id a1)
{
  qword_102419588 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_1008AC728(id a1)
{
  qword_102419158 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Odometer");
}

void sub_1008AC758(id a1)
{
  qword_1024193D8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Gnss");
}

void sub_1008AC788(id a1)
{
  qword_1024190D8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Pressure");
}

void sub_1008AC7B8(id a1)
{
  qword_102418FD8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Motion");
}

__n128 sub_1008AC7E8(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 8 * (v4 - v5) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_1008AC8B0(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }
  unint64_t v8 = *(void *)(v5 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8)) + ((v7 & 0x3F) << 6);
  __n128 result = *(__n128 *)a2;
  long long v10 = *(_OWORD *)(a2 + 16);
  long long v11 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v8 + 48) = v11;
  *(__n128 *)unint64_t v8 = result;
  *(_OWORD *)(v8 + 16) = v10;
  ++a1[5];
  return result;
}

void sub_1008AC880(id a1)
{
  qword_102419038 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Pedometer");
}

void sub_1008AC8B0(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x40;
  unint64_t v4 = v2 - 64;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    unint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    uint64_t v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      char v34 = (char *)sub_1000DA54C(v5, v33);
      long long v35 = &v34[8 * (v33 >> 2)];
      long long v37 = &v34[8 * v36];
      long long v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        long long v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)long long v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    long long v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }
    unint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0x1000uLL);
      sub_10017F0B4(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0x1000uLL);
    sub_1002D02D8((uint64_t)a1, &v54);
    uint64_t v44 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      char v34 = (char *)sub_1000DA54C((uint64_t)(a1 + 3), v46);
      long long v35 = &v34[8 * (v46 >> 2)];
      long long v37 = &v34[8 * v47];
      int v48 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        unint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        int v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)int v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      double v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        unint64_t v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  __int16 v56 = a1 + 3;
  *(void *)&long long v54 = sub_1000DA54C((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  double v53 = operator new(0x1000uLL);
  sub_1000DA434(&v54, &v53);
  __int16 v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    sub_1002D03F8((uint64_t)&v54, v27);
  }
  __int16 v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_1008ACB7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_1008ACBC8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241ADF0, memory_order_acquire) & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_10241ADF0))
    {
      uint64_t v1 = 0x7FFFFFFF00000000;
      v0[2] = xmmword_101D51568;
      v0[3] = unk_101D51578;
      v0[4] = xmmword_101D51588;
      v0[0] = xmmword_101D51548;
      v0[1] = unk_101D51558;
      sub_1003BFBA4((uint64_t)&unk_10241ADD8, (int *)v0, 11);
      __cxa_atexit((void (*)(void *))sub_1003BE998, &unk_10241ADD8, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_10241ADF0);
    }
  }
}

void sub_1008ACCA8(_Unwind_Exception *a1)
{
}

void sub_1008ACCC0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241AD20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10241AD20))
  {
    qword_10241AD08 = 0;
    qword_10241AD10 = 0;
    qword_10241AD18 = 0;
    __cxa_atexit((void (*)(void *))sub_1003BE920, &qword_10241AD08, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10241AD20);
  }
}

void sub_1008ACD40()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241ADD0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10241ADD0))
  {
    std::__shared_mutex_base::__shared_mutex_base(&stru_10241AD28);
    __cxa_atexit((void (*)(void *))sub_1003BE954, &stru_10241AD28, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10241ADD0);
  }
}

void sub_1008ACDD0(_Unwind_Exception *a1)
{
}

uint64_t sub_1008ACDE8()
{
  sub_100134750(qword_10247EC38, "VO2MaxPowerBudgetEstimatorLastExtendedBudgetAllotmentReason");

  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247EC38, (void *)&_mh_execute_header);
}

void sub_1008ACE8C(id a1)
{
  if (sub_10010145C())
  {
    sub_100103240();
    if ((sub_1000A16E8() & 0x2000000000000) != 0) {
      byte_10247EC90 = 1;
    }
  }
}

void sub_1008AD5FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1008ADCA4(id a1)
{
  qword_102419318 = (uint64_t)os_log_create("com.apple.locationd.Motion", "BatchedSensor");
}

uint64_t sub_1008ADCD4()
{
  sub_100134750(&qword_10247EC50, "Acc800Fp");
  dword_10247EC68 = 800;
  __cxa_atexit((void (*)(void *))sub_10058C198, &qword_10247EC50, (void *)&_mh_execute_header);
  sub_100134750(&qword_10247EC70, "DmFp");
  dword_10247EC88 = 200;

  return __cxa_atexit((void (*)(void *))sub_10058C198, &qword_10247EC70, (void *)&_mh_execute_header);
}

void sub_1008ADFE4(id a1)
{
  qword_10247ECA8 = (uint64_t)[objc_alloc((Class)CLDispatchSilo) initWithIdentifier:@"CLATVAirplayMonitorSilo"];
}

id sub_1008AE190(uint64_t a1)
{
  [*(id *)(a1 + 32) sendBufferedScanNotifications];
  double v2 = (*(double *)&qword_10247ECA0 + j__CFAbsoluteTimeGetCurrent_5() * 1000.0) / 1000.0;
  id v3 = [*(id *)(a1 + 32) scanDeliveryDelayTimer];

  return [v3 setNextFireTime:v2];
}

id sub_1008AE9E8(uint64_t a1, void *a2)
{
  return _[a2 clATVAirplayMonitorService:*(void *)(a1 + 32) didFindDevices:*(void *)(a1 + 40)];
}

void sub_1008AF550(id a1)
{
  qword_102419608 = (uint64_t)os_log_create("com.apple.locationd.Utility", "Utility");
}

double sub_1008AF580()
{
  double v0 = (double)(int)[&off_102392BA0 intValue] * 0.625;
  double result = v0 + (double)(int)[&off_102392BB8 intValue] * 0.625;
  *(double *)&qword_10247ECA0 = result;
  return result;
}

void *sub_1008AF5D4(void *a1, uint64_t a2, long long *a3)
{
  *a1 = a2;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0;
  unint64_t v4 = a1 + 4;
  if (*((char *)a3 + 23) < 0)
  {
    sub_1000DC48C(v4, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v5 = *a3;
    v4[2] = *((void *)a3 + 2);
    *(_OWORD *)unint64_t v4 = v5;
  }
  return a1;
}

void sub_1008AF638(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

id sub_1008AF65C(uint64_t a1)
{
  double v2 = sub_1004BE230();
  double v3 = 0.0;
  if (v2 < sub_1008AF8CC(a1))
  {
    double v4 = sub_1008AF8CC(a1);
    double v3 = v4 - sub_1004BE230();
  }
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022CF768);
  }
  long long v5 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v6 = (void *)(a1 + 32);
    if (*(char *)(a1 + 55) < 0) {
      uint64_t v6 = (void *)*v6;
    }
    *(_DWORD *)buf = 136446466;
    uint64_t v10 = v6;
    __int16 v11 = 2050;
    double v12 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "VO2MaxPowerBudgetEstimator, updating budgetRefreshTimer, cacheKey, %{public}s, delay, %{public}.2f", buf, 0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022CF768);
    }
    unint64_t v8 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLBudgetTracker::updateTimer()", "%s\n", v8);
    if (v8 != (char *)buf) {
      free(v8);
    }
  }
  return [*(id *)a1 setNextFireDelay:v3 interval:7200.0];
}

BOOL sub_1008AF88C(uint64_t a1)
{
  double v2 = sub_1004BE230();
  return v2 >= sub_1008AF8CC(a1);
}

double sub_1008AF8CC(uint64_t a1)
{
  double v5 = 0.0;
  uint64_t v2 = sub_1000A6958();
  double v3 = (const char *)(a1 + 32);
  if (*(char *)(a1 + 55) < 0) {
    double v3 = *(const char **)v3;
  }
  if (sub_1000A699C(v2, v3, &v5)) {
    return v5;
  }
  else {
    return sub_1004BE230();
  }
}

id sub_1008AF928(uint64_t a1, double a2)
{
  double v12 = a2;
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022CF768);
  }
  double v4 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEBUG))
  {
    double v5 = (void *)(a1 + 32);
    if (*(char *)(a1 + 55) < 0) {
      double v5 = (void *)*v5;
    }
    *(_DWORD *)buf = 136446466;
    uint64_t v18 = v5;
    __int16 v19 = 2050;
    double v20 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "VO2MaxPowerBudgetEstimator, scheduling next budget refresh, cacheKey, %{public}s, time, %{public}.2f", buf, 0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022CF768);
    }
    uint64_t v10 = (void *)(a1 + 32);
    if (*(char *)(a1 + 55) < 0) {
      uint64_t v10 = (void *)*v10;
    }
    int v13 = 136446466;
    BOOL v14 = v10;
    __int16 v15 = 2050;
    double v16 = a2;
    __int16 v11 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLBudgetTracker::scheduleBudgetRefresh(CFTimeInterval)", "%s\n", v11);
    if (v11 != (char *)buf) {
      free(v11);
    }
  }
  uint64_t v6 = sub_1000A6958();
  unint64_t v7 = (const char *)(a1 + 32);
  if (*(char *)(a1 + 55) < 0) {
    unint64_t v7 = *(const char **)v7;
  }
  sub_10016332C(v6, v7, &v12);
  uint64_t v8 = *(void *)sub_1000A6958();
  (*(void (**)(void))(v8 + 944))();
  return sub_1008AF65C(a1);
}

void sub_1008AFB7C(id a1)
{
  qword_1024191C8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Workout");
}

uint64_t sub_1008AFBAC(_DWORD *a1)
{
  if (*a1 == 1) {
    return 1;
  }
  else {
    return 2;
  }
}

uint64_t sub_1008AFBC0(uint64_t a1, long long *a2)
{
  *(void *)a1 = 0x500000000;
  sub_101118974(a1 + 48);
  *(_DWORD *)(a1 + 568) = 0;
  *(_OWORD *)(a1 + 576) = xmmword_101D515D0;
  *(_OWORD *)(a1 + 624) = 0u;
  *(void *)(a1 + 640) = 0x7FEFFFFFFFFFFFFFLL;
  *(unsigned char *)(a1 + 648) = 1;
  *(void *)(a1 + 656) = 0;
  *(unsigned char *)(a1 + 664) = 0;
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000DC48C((unsigned char *)(a1 + 672), *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    *(void *)(a1 + 688) = *((void *)a2 + 2);
    *(_OWORD *)(a1 + 672) = v4;
  }
  sub_1008AFC80(a1);
  return a1;
}

void sub_1008AFC64(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 695) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_1008AFC80(uint64_t a1)
{
  *(_OWORD *)(a1 + 536) = 0u;
  *(_OWORD *)(a1 + 552) = 0u;
  *(_OWORD *)(a1 + 504) = 0u;
  *(_OWORD *)(a1 + 520) = 0u;
  *(void *)(a1 + 640) = 0x7FEFFFFFFFFFFFFFLL;
  sub_1008AFE94(a1);
  if (qword_1024190D0 != -1) {
    dispatch_once(&qword_1024190D0, &stru_1022CF788);
  }
  uint64_t v2 = qword_1024190D8;
  if (os_log_type_enabled((os_log_t)qword_1024190D8, OS_LOG_TYPE_INFO))
  {
    double v3 = (void *)(a1 + 672);
    if (*(char *)(a1 + 695) < 0) {
      double v3 = (void *)*v3;
    }
    *(_DWORD *)buf = 136315394;
    uint64_t v6 = "ElevationLabel";
    __int16 v7 = 2080;
    uint64_t v8 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "init %s, %s", buf, 0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024190D0 != -1) {
      dispatch_once(&qword_1024190D0, &stru_1022CF788);
    }
    long long v4 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLSignificantElevationEstimator::init()", "%s\n", v4);
    if (v4 != (char *)buf) {
      free(v4);
    }
  }
}

void sub_1008AFE94(uint64_t a1)
{
  *(_DWORD *)a1 = 0;
  sub_1011189A4(a1 + 48);
  *(_DWORD *)(a1 + 568) = 0;
  *(void *)(a1 + 608) = 0;
  *(_DWORD *)(a1 + 616) = 0;
  *(void *)(a1 + 592) = 0;
  *(void *)(a1 + 584) = 0;
  *(_DWORD *)(a1 + 600) = 0;
  *(unsigned char *)(a1 + 648) = 1;
  if (qword_1024190D0 != -1) {
    dispatch_once(&qword_1024190D0, &stru_1022CF788);
  }
  uint64_t v2 = qword_1024190D8;
  if (os_log_type_enabled((os_log_t)qword_1024190D8, OS_LOG_TYPE_INFO))
  {
    double v3 = (void *)(a1 + 672);
    if (*(char *)(a1 + 695) < 0) {
      double v3 = (void *)*v3;
    }
    *(_DWORD *)buf = 136315394;
    uint64_t v6 = "ElevationLabel";
    __int16 v7 = 2080;
    uint64_t v8 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Resetting significant elevation %s, %s", buf, 0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024190D0 != -1) {
      dispatch_once(&qword_1024190D0, &stru_1022CF788);
    }
    long long v4 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLSignificantElevationEstimator::reset()", "%s\n", v4);
    if (v4 != (char *)buf) {
      free(v4);
    }
  }
}

double sub_1008B00B0(uint64_t a1, double a2, double a3, double a4)
{
  double v4 = *(double *)(a1 + 640);
  double result = 1.79769313e308;
  if (v4 != 1.79769313e308)
  {
    LODWORD(result) = *(_DWORD *)(a1 + 544);
    LODWORD(a4) = *(_DWORD *)(a1 + 548);
    return v4 + ((double)*(unint64_t *)&result - (double)*(unint64_t *)&a4) / 100.0;
  }
  return result;
}

void sub_1008B00F0(uint64_t a1, double a2, double a3, double a4, double a5)
{
  double v6 = *(double *)(a1 + 640);
  unsigned int v7 = *(_DWORD *)(a1 + 544);
  HIDWORD(v8) = 2146435071;
  if (v6 == 1.79769313e308)
  {
    LODWORD(v8) = *(_DWORD *)(a1 + 548);
    double v9 = ((double)v7 - (double)v8) / 100.0;
    double v10 = 1.79769313e308;
  }
  else
  {
    LODWORD(a5) = *(_DWORD *)(a1 + 548);
    double v9 = ((double)v7 - (double)*(unint64_t *)&a5) / 100.0;
    double v10 = v6 + v9;
  }
  *(double *)(a1 + 640) = a2 - v9;
  if (qword_1024190D0 != -1) {
    dispatch_once(&qword_1024190D0, &stru_1022CF788);
  }
  __int16 v11 = qword_1024190D8;
  if (os_log_type_enabled((os_log_t)qword_1024190D8, OS_LOG_TYPE_DEFAULT))
  {
    double v14 = *(double *)(a1 + 640);
    double v15 = 1.79769313e308;
    if (v14 != 1.79769313e308)
    {
      LODWORD(v12) = *(_DWORD *)(a1 + 544);
      LODWORD(v13) = *(_DWORD *)(a1 + 548);
      double v15 = ((double)v12 - (double)v13) / 100.0 + v14;
    }
    *(_DWORD *)buf = 136316930;
    uint64_t v18 = "biasOfSigElevation";
    __int16 v19 = 2048;
    double v20 = v14;
    __int16 v21 = 2080;
    unint64_t v22 = "preAbsSigElevation";
    __int16 v23 = 2048;
    double v24 = v10;
    __int16 v25 = 2080;
    uint64_t v26 = "curAbsSigElevation";
    __int16 v27 = 2048;
    double v28 = v15;
    __int16 v29 = 2080;
    long long v30 = "rebaseTime";
    __int16 v31 = 2048;
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%s,%f,%s,%f,%s,%f,%s,%f", buf, 0x52u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024190D0 != -1) {
      dispatch_once(&qword_1024190D0, &stru_1022CF788);
    }
    CFAbsoluteTimeGetCurrent();
    double v16 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLSignificantElevationEstimator::rebaseAbsSignificantElevation(double)", "%s\n", v16);
    if (v16 != (char *)buf) {
      free(v16);
    }
  }
}

double sub_1008B045C(uint64_t a1)
{
  double result = *(double *)(a1 + 632);
  *(double *)(a1 + 656) = result;
  return result;
}

void sub_1008B0468(uint64_t a1, double a2, double a3)
{
  double v6 = a3 - *(double *)(a1 + 584);
  double v7 = *(double *)(a1 + 592) + v6;
  *(double *)(a1 + 592) = v7;
  *(double *)(a1 + 608) = a2;
  if (fabs(v7) > 2.0)
  {
    if (qword_1024190D0 != -1) {
      dispatch_once(&qword_1024190D0, &stru_1022CF788);
    }
    unint64_t v8 = qword_1024190D8;
    if (os_log_type_enabled((os_log_t)qword_1024190D8, OS_LOG_TYPE_INFO))
    {
      uint64_t v9 = *(void *)(a1 + 584);
      uint64_t v10 = *(void *)(a1 + 528);
      uint64_t v11 = *(void *)(a1 + 536);
      double v12 = (float)*(unsigned int *)(a1 + 544);
      double v13 = (float)*(unsigned int *)(a1 + 548);
      double v14 = (float)*(int *)(a1 + 616);
      double v15 = (void *)(a1 + 672);
      if (*(char *)(a1 + 695) < 0) {
        double v15 = (void *)*v15;
      }
      *(_DWORD *)buf = 136319490;
      __int16 v19 = "Altitude";
      __int16 v20 = 2048;
      double v21 = a3;
      __int16 v22 = 2080;
      __int16 v23 = "ReferenceAltitude";
      __int16 v24 = 2048;
      uint64_t v25 = v9;
      __int16 v26 = 2080;
      __int16 v27 = "ElevationStartTime";
      __int16 v28 = 2048;
      uint64_t v29 = v10;
      __int16 v30 = 2080;
      __int16 v31 = "ElevationEndTime";
      __int16 v32 = 2048;
      uint64_t v33 = v11;
      __int16 v34 = 2080;
      long long v35 = "AscendedElevation";
      __int16 v36 = 2048;
      double v37 = v12;
      __int16 v38 = 2080;
      uint64_t v39 = "DescendedElevation";
      __int16 v40 = 2048;
      double v41 = v13;
      __int16 v42 = 2080;
      double v43 = "AscendingState";
      __int16 v44 = 2048;
      double v45 = v14;
      __int16 v46 = 2080;
      uint64_t v47 = "ElevationLabel";
      __int16 v48 = 2080;
      uint64_t v49 = v15;
      __int16 v50 = 2080;
      int v51 = "Time";
      __int16 v52 = 2048;
      double v53 = a2;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "%s,%f,%s,%f,%s,%f,%s,%f,%s,%f,%s,%f,%s,%f,%s,%s,%s,%f", buf, 0xB6u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024190D0 != -1) {
        dispatch_once(&qword_1024190D0, &stru_1022CF788);
      }
      uint64_t v17 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLSignificantElevationEstimator::bufferCurrentElevation(CFAbsoluteTime, double)", "%s\n", v17);
      if (v17 != (char *)buf) {
        free(v17);
      }
    }
    double v16 = *(double *)(a1 + 592);
    if (v16 != 0.0) {
      sub_1008B08C8(a1, *(double *)(a1 + 608), v16);
    }
    *(void *)(a1 + 592) = 0;
    *(_DWORD *)(a1 + 600) = 0;
    double v6 = a3 - *(double *)(a1 + 584);
  }
  *(double *)(a1 + 624) = *(double *)(a1 + 624) - v6;
  *(double *)(a1 + 584) = a3;
  *(_DWORD *)(a1 + 568) = 3;
}

uint64_t sub_1008B08C8(uint64_t result, double a2, double a3)
{
  if (a3 <= 0.0)
  {
    *(_DWORD *)(result + 548) += (a3 * -100.0);
    int v3 = -1;
  }
  else
  {
    *(_DWORD *)(result + 544) += (a3 * 100.0);
    int v3 = 1;
  }
  *(_DWORD *)(result + 616) = v3;
  double v4 = a2 + -2.56;
  double v5 = *(double *)(result + 536);
  if (v5 < a2 + -2.56) {
    double v5 = a2 + -2.56;
  }
  if (v5 <= a2) {
    double v4 = v5;
  }
  *(double *)(result + 528) = v4;
  *(double *)(result + 536) = a2;
  return result;
}

double sub_1008B0944(uint64_t a1, double a2)
{
  double result = -a2;
  *(double *)(a1 + 656) = result;
  return result;
}

uint64_t sub_1008B0950(uint64_t result, double a2)
{
  *(double *)(result + 640) = a2;
  return result;
}

void sub_1008B0958(id a1)
{
  qword_1024190D8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Pressure");
}

void sub_1008B0988(id a1)
{
  qword_1024191E8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Altimeter");
}

void sub_1008B1070(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  if (a14) {
    sub_1000DB0A0(a14);
  }
  _Unwind_Resume(exception_object);
}

id sub_1008B1094(uint64_t a1)
{
  return [*(id *)(a1 + 32) quitForcedLocationState];
}

void sub_1008B35A0(id a1)
{
  qword_102419038 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Pedometer");
}

void *sub_1008B35D4@<X0>(unsigned __int8 *a1@<X1>, unsigned __int8 *a2@<X2>, void *a3@<X8>)
{
  double v6 = operator new(0x60uLL);
  double result = sub_1008B3638(v6, a1, a2);
  *a3 = v6 + 3;
  a3[1] = v6;
  return result;
}

void sub_1008B3624(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1008B3638(void *a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_1022CF818;
  sub_10039F440(a1 + 3, *a2, *a3);
  return a1;
}

void sub_1008B3688(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1008B369C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1022CF818;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1008B36BC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1022CF818;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_1008B3710(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 16))();
}

void sub_1008B3738()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241ADF0, memory_order_acquire) & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_10241ADF0))
    {
      uint64_t v1 = 0x7FFFFFFF00000000;
      v0[2] = xmmword_101D51628;
      v0[3] = unk_101D51638;
      v0[4] = xmmword_101D51648;
      v0[0] = xmmword_101D51608;
      v0[1] = unk_101D51618;
      sub_1003BFBA4((uint64_t)&unk_10241ADD8, (int *)v0, 11);
      __cxa_atexit((void (*)(void *))sub_1003BE998, &unk_10241ADD8, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_10241ADF0);
    }
  }
}

void sub_1008B3818(_Unwind_Exception *a1)
{
}

uint64_t sub_1008B3830()
{
  sub_100134750(qword_10247ECB8, "VO2MaxPowerBudgetEstimatorLastExtendedBudgetAllotmentReason");

  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247ECB8, (void *)&_mh_execute_header);
}

void sub_1008B3890(uint64_t **a1, uint64_t a2)
{
  double v4 = (unsigned int *)(a2 + 32);
  if (sub_1001447B8((unsigned int *)(a2 + 32)))
  {
    sub_1008B3B1C((uint64_t)a1, v4);
    sub_1000F0A30(a1, (uint64_t *)a2);
    sub_1008B4638((uint64_t)v4);
    operator delete((void *)a2);
  }
  else
  {
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022CF858);
    }
    double v5 = qword_1024193A8;
    if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_FAULT))
    {
      sub_100C094CC((uint64_t)v4);
      double v6 = v14 >= 0 ? __p : (void **)__p[0];
      *(_DWORD *)buf = 136380675;
      *(void *)&uint8_t buf[4] = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "Invalid tile ID: %{private}s, #CloneMe", buf, 0xCu);
      if (v14 < 0) {
        operator delete(__p[0]);
      }
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(__p, 0x65CuLL);
      if (qword_1024193A0 != -1) {
        dispatch_once(&qword_1024193A0, &stru_1022CF858);
      }
      sub_100C094CC((uint64_t)v4);
      if (v10 >= 0) {
        double v7 = buf;
      }
      else {
        double v7 = *(unsigned char **)buf;
      }
      int v11 = 136380675;
      double v12 = v7;
      unint64_t v8 = (char *)_os_log_send_and_compose_impl();
      if (v10 < 0) {
        operator delete(*(void **)buf);
      }
      sub_1004BA5E4("Generic", 1, 0, 0, "void CLTilesMap::erase(CLTilesMap::ConstIterator)", "%s\n", v8);
      if (v8 != (char *)__p) {
        free(v8);
      }
    }
  }
}

void sub_1008B3B1C(uint64_t a1, unsigned int *a2)
{
  if (sub_1001447B8(a2))
  {
    if ((void *)(a1 + 8) == sub_100144248(a1, (uint64_t)a2)) {
      sub_101A72D04();
    }
    double v4 = sub_100144248(a1 + 24, (uint64_t)a2);
    if ((void *)(a1 + 32) != v4)
    {
      sub_1008B470C((uint64_t **)(a1 + 24), (uint64_t)v4);
    }
  }
  else
  {
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022CF858);
    }
    double v5 = qword_1024193A8;
    if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_FAULT))
    {
      sub_100C094CC((uint64_t)a2);
      double v6 = v14 >= 0 ? __p : (void **)__p[0];
      *(_DWORD *)buf = 136380675;
      *(void *)&uint8_t buf[4] = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "Invalid tile ID: %{private}s, #CloneMe", buf, 0xCu);
      if (v14 < 0) {
        operator delete(__p[0]);
      }
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(__p, 0x65CuLL);
      if (qword_1024193A0 != -1) {
        dispatch_once(&qword_1024193A0, &stru_1022CF858);
      }
      sub_100C094CC((uint64_t)a2);
      if (v10 >= 0) {
        double v7 = buf;
      }
      else {
        double v7 = *(unsigned char **)buf;
      }
      int v11 = 136380675;
      double v12 = v7;
      unint64_t v8 = (char *)_os_log_send_and_compose_impl();
      if (v10 < 0) {
        operator delete(*(void **)buf);
      }
      sub_1004BA5E4("Generic", 1, 0, 0, "void CLTilesMap::unprotectedErase(const TileId &)", "%s\n", v8);
      if (v8 != (char *)__p) {
        free(v8);
      }
    }
  }
}

void sub_1008B3DC4(uint64_t **a1, unsigned int *a2)
{
  if (sub_1001447B8(a2))
  {
    sub_1008B3B1C((uint64_t)a1, a2);
    sub_1008B46B0(a1, (uint64_t)a2);
  }
  else
  {
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022CF858);
    }
    double v4 = qword_1024193A8;
    if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_FAULT))
    {
      sub_100C094CC((uint64_t)a2);
      double v5 = v13 >= 0 ? __p : (void **)__p[0];
      *(_DWORD *)buf = 136380675;
      *(void *)&uint8_t buf[4] = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_FAULT, "Invalid tile ID: %{private}s, #CloneMe", buf, 0xCu);
      if (v13 < 0) {
        operator delete(__p[0]);
      }
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(__p, 0x65CuLL);
      if (qword_1024193A0 != -1) {
        dispatch_once(&qword_1024193A0, &stru_1022CF858);
      }
      sub_100C094CC((uint64_t)a2);
      if (v9 >= 0) {
        double v6 = buf;
      }
      else {
        double v6 = *(unsigned char **)buf;
      }
      int v10 = 136380675;
      int v11 = v6;
      double v7 = (char *)_os_log_send_and_compose_impl();
      if (v9 < 0) {
        operator delete(*(void **)buf);
      }
      sub_1004BA5E4("Generic", 1, 0, 0, "void CLTilesMap::erase(const TileId &)", "%s\n", v7);
      if (v7 != (char *)__p) {
        free(v7);
      }
    }
  }
}

void sub_1008B403C(uint64_t a1, unsigned int *a2)
{
  if (sub_1001447B8(a2))
  {
    if ((void *)(a1 + 8) == sub_100144248(a1, (uint64_t)a2)) {
      sub_101A72E90();
    }
    sub_10014F464((uint64_t **)(a1 + 24), (uint64_t)a2, (uint64_t)a2);
  }
  else
  {
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022CF858);
    }
    double v4 = qword_1024193A8;
    if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_FAULT))
    {
      sub_100C094CC((uint64_t)a2);
      double v5 = v13 >= 0 ? __p : (void **)__p[0];
      *(_DWORD *)buf = 136380675;
      *(void *)&uint8_t buf[4] = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_FAULT, "Invalid tile ID: %{private}s, #CloneMe", buf, 0xCu);
      if (v13 < 0) {
        operator delete(__p[0]);
      }
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(__p, 0x65CuLL);
      if (qword_1024193A0 != -1) {
        dispatch_once(&qword_1024193A0, &stru_1022CF858);
      }
      sub_100C094CC((uint64_t)a2);
      if (v9 >= 0) {
        double v6 = buf;
      }
      else {
        double v6 = *(unsigned char **)buf;
      }
      int v10 = 136380675;
      int v11 = v6;
      double v7 = (char *)_os_log_send_and_compose_impl();
      if (v9 < 0) {
        operator delete(*(void **)buf);
      }
      sub_1004BA5E4("Generic", 1, 0, 0, "void CLTilesMap::unprotectedAdd(const TileId &)", "%s\n", v7);
      if (v7 != (char *)__p) {
        free(v7);
      }
    }
  }
}

uint64_t *sub_1008B42CC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1008B47B0(a2, a1 + 24);
}

uint64_t sub_1008B42D8(uint64_t a1)
{
  return *(void *)(a1 + 40);
}

void sub_1008B42E0(uint64_t a1)
{
  uint64_t v2 = (void *)(a1 + 32);
  sub_10014F400(a1 + 24, *(char **)(a1 + 32));
  *(void *)(a1 + 24) = v2;
  *(void *)(a1 + 40) = 0;
  *uint64_t v2 = 0;
  sub_1008B4894(a1, *(void **)(a1 + 8));
  *(void *)a1 = a1 + 8;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 8) = 0;
}

void sub_1008B4338(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + 32);
  sub_10014F400(a1 + 24, *(char **)(a1 + 32));
  *(v1 - 1) = v1;
  void *v1 = 0;
  v1[1] = 0;
}

uint64_t *sub_1008B436C(uint64_t **a1, unsigned int *a2)
{
  if (!*a2)
  {
    if (sub_1001447B8(a2))
    {
      sub_10014F464(a1 + 3, (uint64_t)a2, (uint64_t)a2);
    }
    else
    {
      if (qword_1024193A0 != -1) {
        dispatch_once(&qword_1024193A0, &stru_1022CF858);
      }
      double v4 = qword_1024193A8;
      if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_FAULT))
      {
        sub_100C094CC((uint64_t)a2);
        double v5 = v14 >= 0 ? __p : (void **)__p[0];
        *(_DWORD *)buf = 136380675;
        *(void *)&uint8_t buf[4] = v5;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_FAULT, "Invalid tile ID: %{private}s, #CloneMe", buf, 0xCu);
        if (v14 < 0) {
          operator delete(__p[0]);
        }
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(__p, 0x65CuLL);
        if (qword_1024193A0 != -1) {
          dispatch_once(&qword_1024193A0, &stru_1022CF858);
        }
        sub_100C094CC((uint64_t)a2);
        if (v10 >= 0) {
          double v7 = buf;
        }
        else {
          double v7 = *(unsigned char **)buf;
        }
        int v11 = 136380675;
        double v12 = v7;
        unint64_t v8 = (char *)_os_log_send_and_compose_impl();
        if (v10 < 0) {
          operator delete(*(void **)buf);
        }
        sub_1004BA5E4("Generic", 1, 0, 0, "std::unique_ptr<CLTileFile> &CLTilesMap::operator[](const TileId &)", "%s\n", v8);
        if (v8 != (char *)__p) {
          free(v8);
        }
      }
    }
  }
  __p[0] = a2;
  return sub_1008B48F0(a1, (uint64_t)a2, (uint64_t)&unk_101D0B290, (_OWORD **)__p) + 10;
}

void sub_1008B45D8(id a1)
{
  qword_1024193A8 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

void sub_1008B4608(id a1)
{
  qword_1024193B8 = (uint64_t)os_log_create("com.apple.locationd.Position", "WifiPosition");
}

void sub_1008B4638(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  if (*(char *)(a1 + 47) < 0)
  {
    int v3 = *(void **)(a1 + 24);
    operator delete(v3);
  }
}

uint64_t sub_1008B46B0(uint64_t **a1, uint64_t a2)
{
  int v3 = sub_100144248((uint64_t)a1, a2);
  if (a1 + 1 == (uint64_t **)v3) {
    return 0;
  }
  double v4 = v3;
  sub_1000F0A30(a1, v3);
  sub_1008B4638((uint64_t)(v4 + 4));
  operator delete(v4);
  return 1;
}

uint64_t *sub_1008B470C(uint64_t **a1, uint64_t a2)
{
  int v3 = sub_1000F0A30(a1, (uint64_t *)a2);
  if (*(char *)(a2 + 79) < 0) {
    operator delete(*(void **)(a2 + 56));
  }
  operator delete((void *)a2);
  return v3;
}

void sub_1008B4750(uint64_t a1, void **__p)
{
  if (*(unsigned char *)(a1 + 8))
  {
    if (*((char *)__p + 79) < 0) {
      operator delete(__p[7]);
    }
  }
  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

uint64_t *sub_1008B47B0(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = (uint64_t)(a1 + 1);
  sub_1008B4808(a1, *(void **)a2, (void *)(a2 + 8));
  return a1;
}

void sub_1008B47F0(_Unwind_Exception *a1)
{
  sub_10014F400(v1, *(char **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_1008B4808(uint64_t *result, void *a2, void *a3)
{
  if (a2 != a3)
  {
    double v4 = a2;
    double v5 = (uint64_t **)result;
    double v6 = result + 1;
    do
    {
      double result = sub_100060170(v5, v6, (uint64_t)(v4 + 4), (uint64_t)(v4 + 4));
      double v7 = (void *)v4[1];
      if (v7)
      {
        do
        {
          unint64_t v8 = v7;
          double v7 = (void *)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          unint64_t v8 = (void *)v4[2];
          BOOL v9 = *v8 == (void)v4;
          double v4 = v8;
        }
        while (!v9);
      }
      double v4 = v8;
    }
    while (v8 != a3);
  }
  return result;
}

void sub_1008B4894(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1008B4894(a1, *a2);
    sub_1008B4894(a1, a2[1]);
    sub_1008B4638((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

uint64_t *sub_1008B48F0(uint64_t **a1, uint64_t a2, uint64_t a3, _OWORD **a4)
{
  double v6 = (uint64_t **)sub_10014F4E4((uint64_t)a1, &v11, a2);
  double v7 = *v6;
  if (!*v6)
  {
    unint64_t v8 = v6;
    sub_1008B499C((uint64_t)a1, a4, (uint64_t)v10);
    sub_1000EDF90(a1, v11, v8, v10[0]);
    double v7 = v10[0];
    v10[0] = 0;
    sub_1008B4A40((uint64_t)v10, 0);
  }
  return v7;
}

unsigned char *sub_1008B499C@<X0>(uint64_t a1@<X0>, _OWORD **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  double v6 = (char *)operator new(0x58uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  double v7 = *a2;
  uint64_t v8 = *((void *)*a2 + 2);
  *((_OWORD *)v6 + 2) = **a2;
  *((void *)v6 + 6) = v8;
  double result = v6 + 56;
  if (*((char *)v7 + 47) < 0)
  {
    double result = sub_1000DC48C(result, *((void **)v7 + 3), *((void *)v7 + 4));
  }
  else
  {
    long long v10 = *(_OWORD *)((char *)v7 + 24);
    *((void *)v6 + 9) = *((void *)v7 + 5);
    *(_OWORD *)double result = v10;
  }
  *((void *)v6 + 10) = 0;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_1008B4A28(_Unwind_Exception *a1)
{
  sub_1008B4A40(v1, 0);
  _Unwind_Resume(a1);
}

void sub_1008B4A40(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_1008B4638((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

BOOL sub_1008B4A98()
{
  uint64_t v1 = qword_1024193B8;
  return os_log_type_enabled(v1, OS_LOG_TYPE_FAULT);
}

void sub_1008B4AB8(uint64_t a1)
{
  if (qword_102419380 != -1) {
    dispatch_once(&qword_102419380, &stru_1022CF898);
  }
  uint64_t v2 = qword_102419388;
  if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "DEM,clear AVL status cache", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022CF898);
    }
    int v3 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLDemTileAvailability::clearAvlCache()", "%s\n", v3);
    if (v3 != (char *)buf) {
      free(v3);
    }
  }
  *(unsigned char *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 28) = 0;
  *(unsigned char *)(a1 + 32) = 0;
}

void *sub_1008B4C78(uint64_t a1)
{
  double result = sub_1003B2350((void *)a1);
  *(unsigned char *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 28) = 0;
  *(unsigned char *)(a1 + 32) = 0;
  return result;
}

void sub_1008B4CA8(id a1)
{
  qword_102419388 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

void sub_1008B4CD8(id a1)
{
  qword_1024193D8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Gnss");
}

uint64_t sub_1008B4D08(uint64_t a1, void *a2, uint64_t a3, int a4, uint64_t a5, const std::string *a6, uint64_t a7, double a8, double a9)
{
  sub_100134750(__p, "ff:ff:ff:ff:ff:ff");
  *(void *)a1 = sub_100B38F04((uint64_t)__p);
  if (v21 < 0) {
    operator delete(__p[0]);
  }
  *(int64x2_t *)(a1 + 8) = vdupq_n_s64(0xC076800000000000);
  *(_OWORD *)(a1 + 24) = xmmword_101D51770;
  *(void *)(a1 + 40) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 48) = -1;
  *(void *)(a1 + 56) = 0xBFF0000000000000;
  *(void *)(a1 + 64) = -1;
  *(void *)(a1 + 72) = 0xBFF0000000000000;
  uint64_t v18 = (std::string *)sub_100134750((void *)(a1 + 80), "");
  *(void *)(a1 + 104) = 0;
  *(void *)a1 = *a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a3 + 4);
  *(int8x16_t *)(a1 + 24) = vextq_s8(*(int8x16_t *)(a3 + 20), *(int8x16_t *)(a3 + 20), 8uLL);
  *(void *)(a1 + 40) = *(void *)(a3 + 36);
  *(_DWORD *)(a1 + 48) = a4;
  *(double *)(a1 + 56) = a8;
  *(void *)(a1 + 64) = a5;
  *(double *)(a1 + 72) = a9;
  std::string::operator=(v18, a6);
  *(void *)(a1 + 104) = a7;
  return a1;
}

void sub_1008B4E30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (*(char *)(v15 + 103) < 0) {
    operator delete(*v16);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1008B4E64(uint64_t a1, void *a2)
{
  sub_100134750(__p, "ff:ff:ff:ff:ff:ff");
  *(void *)a1 = sub_100B38F04((uint64_t)__p);
  if (SHIBYTE(v14) < 0) {
    operator delete(__p[0]);
  }
  *(int64x2_t *)(a1 + 8) = vdupq_n_s64(0xC076800000000000);
  *(_OWORD *)(a1 + 24) = xmmword_101D51770;
  *(void *)(a1 + 40) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 48) = -1;
  *(void *)(a1 + 56) = 0xBFF0000000000000;
  *(void *)(a1 + 64) = -1;
  *(void *)(a1 + 72) = 0xBFF0000000000000;
  double v4 = (void **)(a1 + 80);
  sub_100134750((void *)(a1 + 80), "");
  *(void *)(a1 + 104) = 0;
  if (a2)
  {
    sub_100134750(__p, (char *)[[[objc_msgSend(objc_msgSend(objc_msgSend(a2, "encryptedValues"), "objectForKey:", @"mac"), "UTF8String"]
    *(void *)a1 = sub_100B38F04((uint64_t)__p);
    if (SHIBYTE(v14) < 0) {
      operator delete(__p[0]);
    }
    [objc_msgSend(objc_msgSend(objc_msgSend(a2, "encryptedValues"), "objectForKey:", @"latitude"), "doubleValue");
    *(void *)(a1 + 8) = v5;
    [objc_msgSend(objc_msgSend(objc_msgSend(a2, "encryptedValues"), "objectForKey:", @"longitude"), "doubleValue");
    *(void *)(a1 + 16) = v6;
    [objc_msgSend(objc_msgSend(objc_msgSend(a2, "encryptedValues"), "objectForKey:", @"altitude"), "doubleValue");
    *(void *)(a1 + 24) = v7;
    [objc_msgSend(objc_msgSend(objc_msgSend(a2, "encryptedValues"), "objectForKey:", @"horizontalAccuracy"), "doubleValue"]
    *(void *)(a1 + 32) = v8;
    [objc_msgSend(objc_msgSend(objc_msgSend(a2, "encryptedValues"), "objectForKey:", @"verticalAccuracy"), "doubleValue"]
    *(void *)(a1 + 40) = v9;
    *(_DWORD *)(a1 + 48) = [[objc_msgSend(objc_msgSend(objc_msgSend(a2, "encryptedValues"), "objectForKey:", @"reach"), "intValue");
    [objc_msgSend(objc_msgSend(objc_msgSend(a2, "encryptedValues"), "objectForKey:", @"stationaryTimeInSeconds"), "doubleValue"];
    *(void *)(a1 + 56) = v10;
    *(void *)(a1 + 64) = (int)[objc_msgSend(objc_msgSend(objc_msgSend(a2, "encryptedValues"), "objectForKey:", @"loiType"), "intValue"];
    [objc_msgSend(objc_msgSend(objc_msgSend(a2, "encryptedValues"), "objectForKey:", @"lastUpdated"), "doubleValue"];
    *(void *)(a1 + 72) = v11;
    sub_100134750(__p, (char *)[objc_msgSend(objc_msgSend(objc_msgSend(a2, "recordID"), "recordName"), "UTF8String"]);
    if (*(char *)(a1 + 103) < 0) {
      operator delete(*v4);
    }
    *(_OWORD *)double v4 = *(_OWORD *)__p;
    *(void *)(a1 + 96) = v14;
    *(void *)(a1 + 104) = sub_1008B50F4(a2);
  }
  return a1;
}

void sub_1008B50A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v15 + 103) < 0) {
    operator delete(*v16);
  }
  _Unwind_Resume(exception_object);
}

id sub_1008B50F4(void *a1)
{
  id result = [a1 recordChangeTag];
  if (result)
  {
    id v3 = [objc_alloc((Class)NSKeyedArchiver) initRequiringSecureCoding:1];
    [a1 encodeSystemFieldsWithCoder:v3];
    [v3 finishEncoding];
    id v4 = [objc_alloc((Class)NSData) initWithData:[v3 encodedData]];

    return v4;
  }
  return result;
}

uint64_t sub_1008B517C(uint64_t a1, void *a2)
{
  sub_100134750(__p, "ff:ff:ff:ff:ff:ff");
  *(void *)a1 = sub_100B38F04((uint64_t)__p);
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p[0].__r_.__value_.__l.__data_);
  }
  *(int64x2_t *)(a1 + 8) = vdupq_n_s64(0xC076800000000000);
  *(_OWORD *)(a1 + 24) = xmmword_101D51770;
  *(void *)(a1 + 40) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 48) = -1;
  *(void *)(a1 + 56) = 0xBFF0000000000000;
  *(void *)(a1 + 64) = -1;
  *(void *)(a1 + 72) = 0xBFF0000000000000;
  id v4 = (void **)(a1 + 80);
  sub_100134750((void *)(a1 + 80), "");
  *(void *)(a1 + 104) = 0;
  if (a2)
  {
    sub_100134750(__p, (char *)[[objc_msgSend(objc_msgSend(a2, "objectForKey:", @"mac"), "UTF8String");
    *(void *)a1 = sub_100B38F04((uint64_t)__p);
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p[0].__r_.__value_.__l.__data_);
    }
    [objc_msgSend(a2, "objectForKey:", @"latitude") doubleValue];
    *(void *)(a1 + 8) = v5;
    [objc_msgSend(a2, "objectForKey:", @"longitude") doubleValue];
    *(void *)(a1 + 16) = v6;
    [objc_msgSend(a2, "objectForKey:", @"altitude") doubleValue];
    *(void *)(a1 + 24) = v7;
    [objc_msgSend(a2, "objectForKey:", @"horizontalAccuracy") doubleValue];
    *(void *)(a1 + 32) = v8;
    [objc_msgSend(a2, "objectForKey:", @"verticalAccuracy") doubleValue];
    *(void *)(a1 + 40) = v9;
    *(_DWORD *)(a1 + 48) = [objc_msgSend(objc_msgSend(a2, "objectForKey:", @"reach"), "intValue");
    [objc_msgSend(a2, "objectForKey:", @"stationaryTimeInSeconds") doubleValue];
    *(void *)(a1 + 56) = v10;
    id v11 = [a2 objectForKey:@"loiType"];
    if ([v11 isEqualToString:@"Home"])
    {
      uint64_t v12 = 0;
    }
    else if ([v11 isEqualToString:@"Work"])
    {
      uint64_t v12 = 1;
    }
    else if ([v11 isEqualToString:@"School"])
    {
      uint64_t v12 = 2;
    }
    else if ([v11 isEqualToString:@"Gym"])
    {
      uint64_t v12 = 3;
    }
    else
    {
      if (([v11 isEqualToString:@"Unknown"] & 1) == 0)
      {
        if (qword_1024193A0 != -1) {
          dispatch_once(&qword_1024193A0, &stru_1022CF8D8);
        }
        char v13 = qword_1024193A8;
        if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_ERROR))
        {
          LODWORD(__p[0].__r_.__value_.__l.__data_) = 138543362;
          *(std::string::size_type *)((char *)__p[0].__r_.__value_.__r.__words + 4) = (std::string::size_type)v11;
          _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "warning, unknown LOI type: %{public}@", (uint8_t *)__p, 0xCu);
        }
        if (sub_10013D1A0(115, 0))
        {
          bzero(__p, 0x65CuLL);
          if (qword_1024193A0 != -1) {
            dispatch_once(&qword_1024193A0, &stru_1022CF8D8);
          }
          double v16 = (std::string *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 0, "RTLocationOfInterestType getLocationOfInterestType(NSString *)", "%s\n", (const char *)v16);
          if (v16 != __p) {
            free(v16);
          }
        }
      }
      uint64_t v12 = -1;
    }
    *(void *)(a1 + 64) = v12;
    [objc_msgSend(a2, "objectForKey:", @"lastUpdated") doubleValue];
    *(void *)(a1 + 72) = v14;
    sub_1008B55D4(__p);
    if (*(char *)(a1 + 103) < 0) {
      operator delete(*v4);
    }
    *(_OWORD *)id v4 = *(_OWORD *)&__p[0].__r_.__value_.__l.__data_;
    *(void *)(a1 + 96) = *((void *)&__p[0].__r_.__value_.__l + 2);
    *(void *)(a1 + 104) = 0;
  }
  return a1;
}

void sub_1008B557C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (*(char *)(v18 + 103) < 0) {
    operator delete(*v19);
  }
  _Unwind_Resume(exception_object);
}

void sub_1008B55D4(std::string *a1@<X8>)
{
  sub_100134750(&__str, (char *)[(NSString *)[+[NSUUID UUID] UUIDString] UTF8String]);
  std::string::basic_string(&v2, &__str, 0, 0x12uLL, (std::allocator<char> *)&v4);
  if (SHIBYTE(v2.__r_.__value_.__r.__words[2]) < 0)
  {
    sub_1000DC48C(a1, v2.__r_.__value_.__l.__data_, v2.__r_.__value_.__l.__size_);
    if (SHIBYTE(v2.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v2.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    *a1 = v2;
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
}

void sub_1008B567C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1008B56B4(uint64_t a1, uint64_t a2)
{
  sub_100134750(__p, "ff:ff:ff:ff:ff:ff");
  *(void *)a1 = sub_100B38F04((uint64_t)__p);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  *(int64x2_t *)(a1 + 8) = vdupq_n_s64(0xC076800000000000);
  *(_OWORD *)(a1 + 24) = xmmword_101D51770;
  *(void *)(a1 + 40) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 48) = -1;
  *(void *)(a1 + 56) = 0xBFF0000000000000;
  *(void *)(a1 + 64) = -1;
  *(void *)(a1 + 72) = 0xBFF0000000000000;
  char v4 = (std::string *)sub_100134750((void *)(a1 + 80), "");
  *(void *)(a1 + 104) = 0;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  std::string::operator=(v4, (const std::string *)(a2 + 80));
  uint64_t v5 = *(void **)(a1 + 104);
  if (v5)
  {

    *(void *)(a1 + 104) = 0;
  }
  if (*(void *)(a2 + 104)) {
    id v6 = [objc_alloc((Class)NSData) initWithData:*(void *)(a2 + 104)];
  }
  else {
    id v6 = 0;
  }
  *(void *)(a1 + 104) = v6;
  return a1;
}

void sub_1008B57E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1008B581C(uint64_t a1, uint64_t a2)
{
  sub_100134750(__p, "ff:ff:ff:ff:ff:ff");
  *(void *)a1 = sub_100B38F04((uint64_t)__p);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  *(int64x2_t *)(a1 + 8) = vdupq_n_s64(0xC076800000000000);
  *(_OWORD *)(a1 + 24) = xmmword_101D51770;
  *(void *)(a1 + 40) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 48) = -1;
  *(void *)(a1 + 56) = 0xBFF0000000000000;
  *(void *)(a1 + 64) = -1;
  *(void *)(a1 + 72) = 0xBFF0000000000000;
  char v4 = (void **)(a1 + 80);
  sub_100134750((void *)(a1 + 80), "");
  *(void *)(a1 + 104) = 0;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  if (*(char *)(a1 + 103) < 0) {
    operator delete(*v4);
  }
  long long v5 = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_OWORD *)char v4 = v5;
  *(unsigned char *)(a2 + 103) = 0;
  *(unsigned char *)(a2 + 80) = 0;
  id v6 = *(void **)(a1 + 104);
  if (v6)
  {

    *(void *)(a1 + 104) = 0;
  }
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a2 + 104) = 0;
  return a1;
}

uint64_t sub_1008B5960(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    *(void *)a1 = *(void *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    char v4 = (long long *)(a2 + 80);
    long long v5 = (void **)(a1 + 80);
    if (*(char *)(a1 + 103) < 0) {
      operator delete(*v5);
    }
    long long v6 = *v4;
    *(void *)(a1 + 96) = *((void *)v4 + 2);
    *(_OWORD *)long long v5 = v6;
    *(unsigned char *)(a2 + 103) = 0;
    *(unsigned char *)(a2 + 80) = 0;
    uint64_t v7 = *(void **)(a1 + 104);
    if (v7)
    {

      *(void *)(a1 + 104) = 0;
    }
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a2 + 104) = 0;
  }
  return a1;
}

uint64_t sub_1008B5A28(uint64_t a1)
{
  std::string v2 = *(void **)(a1 + 104);
  if (v2)
  {

    *(void *)(a1 + 104) = 0;
  }
  if (*(char *)(a1 + 103) < 0) {
    operator delete(*(void **)(a1 + 80));
  }
  return a1;
}

id sub_1008B5A74(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 104);
  id v3 = (void *)(a1 + 80);
  if (*(char *)(a1 + 103) < 0) {
    id v3 = (void *)*v3;
  }
  id v4 = [objc_alloc((Class)CKRecordID) initWithRecordName:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v3) zoneID:[objc_alloc((Class)CKRecordZoneID) initWithZoneName:@"com.apple.clx.cloudkit.zone" ownerName:CKCurrentUserDefaultName]];
  if (v2)
  {
    uint64_t v10 = 0;
    id v5 = [objc_alloc((Class)NSKeyedUnarchiver) initForReadingFromData:v2 error:&v10];
    [v5 setRequiresSecureCoding:1];
    id v6 = [objc_alloc((Class)CKRecord) initWithCoder:v5];
    [v5 finishDecoding];
    if (!v6)
    {
      if (qword_1024193A0 != -1) {
        dispatch_once(&qword_1024193A0, &stru_1022CF8D8);
      }
      uint64_t v7 = qword_1024193A8;
      if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138543362;
        uint64_t v14 = v10;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Failed to decode record from system fields data: %{public}@", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193A0 != -1) {
          dispatch_once(&qword_1024193A0, &stru_1022CF8D8);
        }
        int v11 = 138543362;
        uint64_t v12 = v10;
        uint64_t v8 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "CKRecord *CLWifiAssociatedApCentroidDatabaseEntry::toCKRecord() const", "%s\n", v8);
        if (v8 != (char *)buf) {
          free(v8);
        }
      }
    }
  }
  else
  {
    id v6 = [objc_alloc((Class)CKRecord) initWithRecordType:@"WifiAssociatedApCentroid" recordID:v4];
  }
  sub_1008B5D24(a1, v6);
  return v6;
}

id sub_1008B5D24(uint64_t a1, void *a2)
{
  id v4 = [a2 encryptedValues];
  sub_100B39278(&__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  [v4 setObject:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", p_p) forKey:@"mac"];
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  [objc_msgSend(objc_msgSend(a2, "encryptedValues"), "setObject:forKey:", +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)(a1 + 8)), @"latitude");
  [objc_msgSend(objc_msgSend(a2, "encryptedValues"), "setObject:forKey:", +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)(a1 + 16)), @"longitude");
  [objc_msgSend(objc_msgSend(a2, "encryptedValues"), "setObject:forKey:", +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)(a1 + 24)), @"altitude");
  [objc_msgSend(objc_msgSend(a2, "encryptedValues"), "setObject:forKey:", +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)(a1 + 32)), @"horizontalAccuracy");
  [objc_msgSend(a2, "encryptedValues") setObject:[NSNumber numberWithDouble:*(double *)(a1 + 40)] forKey:@"verticalAccuracy"];
  [objc_msgSend(objc_msgSend(a2, "encryptedValues"), "setObject:forKey:", +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", *(unsigned int *)(a1 + 48)), @"reach"]
  [objc_msgSend(objc_msgSend(a2, "encryptedValues"), "setObject:forKey:", +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)(a1 + 56)), @"stationaryTimeInSeconds"];
  [objc_msgSend(objc_msgSend(a2, "encryptedValues"), "setObject:forKey:", +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", *(unsigned int *)(a1 + 64)), @"loiType");
  return [objc_msgSend(objc_msgSend(a2, "encryptedValues"), "setObject:forKey:", +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)(a1 + 72)), @"lastUpdated");
}

void sub_1008B5F50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

id sub_1008B5F6C(uint64_t a1)
{
  id v2 = +[NSMutableDictionary dictionary];
  sub_100B39278(&__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  [v2 setObject:[NSString stringWithUTF8String:p_p] forKey:@"mac"];
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  [v2 setObject:[NSNumber numberWithDouble:*((double *)(a1 + 8))] forKey:@"latitude"];
  [v2 setObject:[NSNumber numberWithDouble:*((double *)(a1 + 16))] forKey:@"longitude"];
  [v2 setObject:[NSNumber numberWithDouble:*(double *)(a1 + 24)] forKey:@"altitude"];
  [v2 setObject:[NSNumber numberWithDouble:*((double *)(a1 + 32))] forKey:@"horizontalAccuracy"];
  [v2 setObject:[NSNumber numberWithDouble:*((double *)(a1 + 40))] forKey:@"verticalAccuracy"];
  [v2 setObject:[NSNumber numberWithInt:*((unsigned int *)(a1 + 48))] forKey:@"reach"];
  [v2 setObject:[NSNumber numberWithDouble:*((double *)(a1 + 56))] forKey:@"stationaryTimeInSeconds"];
  sub_1008B6940(*(void *)(a1 + 64), &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    id v4 = &__p;
  }
  else {
    id v4 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  id v5 = +[NSString stringWithUTF8String:v4];
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  [v2 setObject:v5 forKey:@"loiType"];
  [v2 setObject:[NSNumber numberWithDouble:*((double *)(a1 + 72))] forKey:@"lastUpdated"];
  return v2;
}

void sub_1008B6160(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1008B6180(void *result, void *a2)
{
  if (a2)
  {
    id v3 = result;
    id v4 = (void *)result[13];
    if (v4)
    {

      v3[13] = 0;
    }
    id result = sub_1008B50F4(a2);
    v3[13] = result;
  }
  return result;
}

double sub_1008B61C8(uint64_t a1, double *a2)
{
  return vabdd_f64(*a2, *(double *)(a1 + 72));
}

double sub_1008B61D8(uint64_t a1, double *a2)
{
  return vabdd_f64(*a2, *(double *)(a1 + 72)) / 3600.0;
}

uint64_t sub_1008B61F4(uint64_t a1)
{
  sub_10010F274((uint64_t)v33);
  sub_100B39278(&__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  sub_100132EFC(v34, (uint64_t)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  id v4 = sub_100132EFC(v34, (uint64_t)", ", 2);
  uint64_t v5 = *v4;
  *(uint64_t *)((char *)v4 + *(void *)(*v4 - 24) + 16) = 8;
  *(_DWORD *)((char *)v4 + *(void *)(v5 - 24) + 8) = *(_DWORD *)((unsigned char *)v4 + *(void *)(v5 - 24) + 8) & 0xFFFFFEFB | 4;
  std::ostream::operator<<();
  id v6 = sub_100132EFC(v34, (uint64_t)", ", 2);
  uint64_t v7 = *v6;
  *(uint64_t *)((char *)v6 + *(void *)(*v6 - 24) + 16) = 8;
  *(_DWORD *)((char *)v6 + *(void *)(v7 - 24) + 8) = *(_DWORD *)((unsigned char *)v6 + *(void *)(v7 - 24) + 8) & 0xFFFFFEFB | 4;
  std::ostream::operator<<();
  uint64_t v8 = sub_100132EFC(v34, (uint64_t)", alt, ", 7);
  uint64_t v9 = *v8;
  *(uint64_t *)((char *)v8 + *(void *)(*v8 - 24) + 16) = 1;
  *(_DWORD *)((char *)v8 + *(void *)(v9 - 24) + 8) = *(_DWORD *)((unsigned char *)v8 + *(void *)(v9 - 24) + 8) & 0xFFFFFEFB | 4;
  std::ostream::operator<<();
  uint64_t v10 = sub_100132EFC(v34, (uint64_t)", hacc, ", 8);
  uint64_t v11 = *v10;
  *(uint64_t *)((char *)v10 + *(void *)(*v10 - 24) + 16) = 1;
  *(_DWORD *)((char *)v10 + *(void *)(v11 - 24) + 8) = *(_DWORD *)((unsigned char *)v10 + *(void *)(v11 - 24) + 8) & 0xFFFFFEFB | 4;
  std::ostream::operator<<();
  uint64_t v12 = sub_100132EFC(v34, (uint64_t)", vacc, ", 8);
  uint64_t v13 = *v12;
  *(uint64_t *)((char *)v12 + *(void *)(*v12 - 24) + 16) = 1;
  *(_DWORD *)((char *)v12 + *(void *)(v13 - 24) + 8) = *(_DWORD *)((unsigned char *)v12 + *(void *)(v13 - 24) + 8) & 0xFFFFFEFB | 4;
  std::ostream::operator<<();
  uint64_t v14 = sub_100132EFC(v34, (uint64_t)", reach, ", 9);
  uint64_t v15 = *v14;
  *(uint64_t *)((char *)v14 + *(void *)(*v14 - 24) + 16) = 0;
  *(_DWORD *)((char *)v14 + *(void *)(v15 - 24) + 8) = *(_DWORD *)((unsigned char *)v14 + *(void *)(v15 - 24) + 8) & 0xFFFFFEFB | 4;
  std::ostream::operator<<();
  double v16 = sub_100132EFC(v34, (uint64_t)", stationaryTime, ", 18);
  uint64_t v17 = *v16;
  *(uint64_t *)((char *)v16 + *(void *)(*v16 - 24) + 16) = 1;
  *(_DWORD *)((char *)v16 + *(void *)(v17 - 24) + 8) = *(_DWORD *)((unsigned char *)v16 + *(void *)(v17 - 24) + 8) & 0xFFFFFEFB | 4;
  std::ostream::operator<<();
  uint64_t v18 = sub_100132EFC(v34, (uint64_t)", loiType, ", 11);
  sub_1008B6940(*(void *)(a1 + 64), &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    __int16 v19 = &__p;
  }
  else {
    __int16 v19 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v20 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v20 = __p.__r_.__value_.__l.__size_;
  }
  sub_100132EFC(v18, (uint64_t)v19, v20);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  char v21 = sub_100132EFC(v34, (uint64_t)", lastUpdated, ", 15);
  uint64_t v22 = *v21;
  *(uint64_t *)((char *)v21 + *(void *)(*v21 - 24) + 16) = 1;
  *(_DWORD *)((char *)v21 + *(void *)(v22 - 24) + 8) = *(_DWORD *)((unsigned char *)v21 + *(void *)(v22 - 24) + 8) & 0xFFFFFEFB | 4;
  std::ostream::operator<<();
  __int16 v23 = sub_100132EFC(v34, (uint64_t)", age, ", 7);
  uint64_t v24 = *v23;
  *(uint64_t *)((char *)v23 + *(void *)(*v23 - 24) + 16) = 1;
  *(_DWORD *)((char *)v23 + *(void *)(v24 - 24) + 8) = *(_DWORD *)((unsigned char *)v23 + *(void *)(v24 - 24) + 8) & 0xFFFFFEFB | 4;
  CFAbsoluteTimeGetCurrent();
  uint64_t v25 = (void *)std::ostream::operator<<();
  sub_100132EFC(v25, (uint64_t)"s", 1);
  __int16 v26 = sub_100132EFC(v34, (uint64_t)", recordName, ", 14);
  int v27 = *(char *)(a1 + 103);
  if (v27 >= 0) {
    uint64_t v28 = a1 + 80;
  }
  else {
    uint64_t v28 = *(void *)(a1 + 80);
  }
  if (v27 >= 0) {
    uint64_t v29 = *(unsigned __int8 *)(a1 + 103);
  }
  else {
    uint64_t v29 = *(void *)(a1 + 88);
  }
  sub_100132EFC(v26, v28, v29);
  sub_100132EFC(v34, (uint64_t)", systemFields, ", 16);
  std::ostream::operator<<();
  std::stringbuf::str();
  *(void *)((char *)v33
  v34[0] = v30;
  if (v35 < 0) {
    operator delete((void *)v34[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return std::ios::~ios();
}

void sub_1008B68E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
}

void *sub_1008B6940@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_100134750(a2, (&off_1022CF8F8)[a1 + 1]);
}

uint64_t sub_1008B6958(uint64_t a1, uint64_t a2)
{
  return sub_1000A3D9C(*(double *)(a1 + 8), *(double *)(a1 + 16), *(double *)(a2 + 4), *(double *)(a2 + 12));
}

void sub_1008B6968(id a1)
{
  qword_1024193A8 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

uint64_t sub_1008B6998()
{
  if (qword_10247ECD0 != -1) {
    dispatch_once(&qword_10247ECD0, &stru_1022CF920);
  }
  return qword_10248A408;
}

void sub_1008B69DC(id a1)
{
}

void sub_1008B6A20()
{
}

uint64_t sub_1008B6A44(uint64_t a1)
{
  *(void *)a1 = off_1022CF950;
  *(void *)(a1 + 8) = 850045863;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(unsigned char *)(a1 + 96) = 0;
  BOOL v8 = 0;
  sub_1000C7F88(buf);
  int v2 = sub_1000D2988(*(uint64_t *)buf, "DisableMapMatchingRouteHints", &v8);
  if (v12) {
    sub_1000DB0A0(v12);
  }
  if (v2) {
    *(unsigned char *)(a1 + 96) = v8;
  }
  if (qword_102419430 != -1) {
    dispatch_once(&qword_102419430, &stru_1022CF9A0);
  }
  id v3 = qword_102419438;
  if (os_log_type_enabled((os_log_t)qword_102419438, OS_LOG_TYPE_DEBUG))
  {
    int v4 = *(unsigned __int8 *)(a1 + 96);
    *(_DWORD *)buf = 67240192;
    *(_DWORD *)&uint8_t buf[4] = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "CLMM, DisableMapMatchingRouteHints, %{public}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419430 != -1) {
      dispatch_once(&qword_102419430, &stru_1022CF9A0);
    }
    int v6 = *(unsigned __int8 *)(a1 + 96);
    int v9 = 67240192;
    int v10 = v6;
    uint64_t v7 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "CLMapRouteHintController::CLMapRouteHintController()", "%s\n", v7);
    if (v7 != (char *)buf) {
      free(v7);
    }
  }
  return a1;
}

void sub_1008B6C7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void **a13)
{
  a13 = (void **)(v13 + 72);
  sub_1008B7AD4(&a13);
  std::mutex::~mutex(v14);
  _Unwind_Resume(a1);
}

void sub_1008B6CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v8 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  if (!*(unsigned char *)(a1 + 96))
  {
    if (*(char *)(a2 + 23) < 0)
    {
      sub_1000DC48C(&__dst, *(void **)a2, *(void *)(a2 + 8));
    }
    else
    {
      long long __dst = *(_OWORD *)a2;
      uint64_t v20 = *(void *)(a2 + 16);
    }
    uint64_t v21 = a3;
    sub_1008B7BBC((uint64_t)v22, a4);
    unint64_t v9 = *(void *)(a1 + 80);
    if (v9 >= *(void *)(a1 + 88))
    {
      uint64_t v10 = sub_1008B7C54((uint64_t *)(a1 + 72), &__dst);
    }
    else
    {
      sub_1008B7D44(a1 + 88, *(void **)(a1 + 80), &__dst);
      uint64_t v10 = v9 + 64;
      *(void *)(a1 + 80) = v9 + 64;
    }
    *(void *)(a1 + 80) = v10;
    if (qword_102419430 != -1) {
      dispatch_once(&qword_102419430, &stru_1022CF9A0);
    }
    uint64_t v11 = qword_102419438;
    if (os_log_type_enabled((os_log_t)qword_102419438, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v12 = (void *)a2;
      if (*(char *)(a2 + 23) < 0) {
        uint64_t v12 = *(void **)a2;
      }
      uint64_t v13 = (uint64_t)(*(void *)(a1 + 80) - *(void *)(a1 + 72)) >> 6;
      *(_DWORD *)buf = 136315394;
      double v16 = v12;
      __int16 v17 = 2048;
      uint64_t v18 = v13;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "CLMM,RouteHints,addObserver,%s,size,%lu", buf, 0x16u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419430 != -1) {
        dispatch_once(&qword_102419430, &stru_1022CF9A0);
      }
      uint64_t v14 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLMapRouteHintController::addObserver(std::string, dispatch_queue_t, std::function<void (const CLMapsRouteHintData &)>)", "%s\n", v14);
      if (v14 != (char *)buf) {
        free(v14);
      }
    }
    sub_1006821B0(v22);
    if (SHIBYTE(v20) < 0) {
      operator delete((void *)__dst);
    }
  }
  std::mutex::unlock(v8);
}

void sub_1008B6F78(_Unwind_Exception *a1)
{
  sub_1008B6FC4(v2 - 144);
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1008B6FC4(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_1008B7000(uint64_t a1, uint64_t *a2)
{
  int v4 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  if (*(unsigned char *)(a1 + 96)) {
    goto LABEL_31;
  }
  uint64_t v5 = *(void *)(a1 + 72);
  uint64_t v6 = *(void *)(a1 + 80);
  if (v5 == v6) {
    goto LABEL_31;
  }
  int v7 = *((char *)a2 + 23);
  if (v7 >= 0) {
    uint64_t v8 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    uint64_t v8 = a2[1];
  }
  while (1)
  {
    uint64_t v9 = *(unsigned __int8 *)(v5 + 23);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = *(unsigned __int8 *)(v5 + 23);
    }
    else {
      uint64_t v10 = *(void *)(v5 + 8);
    }
    if (v10 != v8) {
      goto LABEL_20;
    }
    uint64_t v11 = v7 >= 0 ? (unsigned __int8 *)a2 : (unsigned __int8 *)*a2;
    if ((v9 & 0x80) != 0) {
      break;
    }
    if (!*(unsigned char *)(v5 + 23)) {
      goto LABEL_22;
    }
    uint64_t v12 = 0;
    while (*(unsigned __int8 *)(v5 + v12) == v11[v12])
    {
      if (v9 == ++v12) {
        goto LABEL_22;
      }
    }
LABEL_20:
    v5 += 64;
    if (v5 == v6) {
      goto LABEL_31;
    }
  }
  if (memcmp(*(const void **)v5, v11, *(void *)(v5 + 8))) {
    goto LABEL_20;
  }
LABEL_22:
  sub_1008B808C((uint64_t)buf, v5 + 64, v6, v5);
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(a1 + 80);
  if (v15 != v13)
  {
    do
    {
      v15 -= 64;
      sub_1008B7B6C(a1 + 88, v15);
    }
    while (v15 != v14);
  }
  *(void *)(a1 + 80) = v14;
  if (qword_102419430 != -1) {
    dispatch_once(&qword_102419430, &stru_1022CF9A0);
  }
  double v16 = qword_102419438;
  if (os_log_type_enabled((os_log_t)qword_102419438, OS_LOG_TYPE_DEBUG))
  {
    __int16 v17 = a2;
    if (*((char *)a2 + 23) < 0) {
      __int16 v17 = (uint64_t *)*a2;
    }
    uint64_t v18 = (uint64_t)(*(void *)(a1 + 80) - *(void *)(a1 + 72)) >> 6;
    *(_DWORD *)buf = 136315394;
    uint64_t v21 = v17;
    __int16 v22 = 2048;
    uint64_t v23 = v18;
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEBUG, "CLMM,RouteHints,removeObserver,%s,size,%lu", buf, 0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419430 != -1) {
      dispatch_once(&qword_102419430, &stru_1022CF9A0);
    }
    __int16 v19 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLMapRouteHintController::removeObserver(std::string)", "%s\n", v19);
    if (v19 != (char *)buf) {
      free(v19);
    }
  }
LABEL_31:
  std::mutex::unlock(v4);
}

void sub_1008B72F4(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1008B730C(uint64_t a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  if (!*(unsigned char *)(a1 + 96))
  {
    if (qword_102419430 != -1) {
      dispatch_once(&qword_102419430, &stru_1022CF9A0);
    }
    uint64_t v9 = qword_102419438;
    if (os_log_type_enabled((os_log_t)qword_102419438, OS_LOG_TYPE_DEBUG))
    {
      int v10 = -858993459 * ((*(void *)(a4 + 8) - *(void *)a4) >> 3);
      *(_DWORD *)buf = 67240704;
      *(_DWORD *)&uint8_t buf[4] = v10;
      *(_WORD *)&uint8_t buf[8] = 1026;
      *(_DWORD *)&buf[10] = a2;
      *(_WORD *)&buf[14] = 1026;
      LODWORD(v37) = a3;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "CLMM,RouteHints,updateMapRouteHint,%{public}d,routingType,%{public}d,stepType,%{public}d", buf, 0x14u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419430 != -1) {
        dispatch_once(&qword_102419430, &stru_1022CF9A0);
      }
      int v20 = -858993459 * ((*(void *)(a4 + 8) - *(void *)a4) >> 3);
      LODWORD(v31) = 67240704;
      HIDWORD(v31) = v20;
      LOWORD(v32) = 1026;
      *(_DWORD *)((char *)&v32 + 2) = a2;
      HIWORD(v32) = 1026;
      LODWORD(v33) = a3;
      uint64_t v21 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLMapRouteHintController::updateMapRouteHint(CLClientLocationRouteHintType, CLClientLocationRouteHintType, std::vector<CLMapsRouteHint> &)", "%s\n", v21);
      if (v21 != (char *)buf) {
        free(v21);
      }
    }
    __int16 v32 = 0;
    uint64_t v33 = 0;
    uint64_t v34 = 0;
    __asm { FMOV            V0.2D, #-1.0 }
    long long v35 = _Q0;
    __int16 v31 = (void *)__PAIR64__(a3, a2);
    *(void *)&long long v35 = CFAbsoluteTimeGetCurrent();
    *((void *)&v35 + 1) = sub_10016C458();
    if (&v32 != (void **)a4) {
      sub_1008A9A00((char *)&v32, *(char **)a4, *(void *)(a4 + 8), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(a4 + 8) - *(void *)a4) >> 3));
    }
    double v16 = *(long long **)(a1 + 72);
    for (i = *(long long **)(a1 + 80); v16 != i; v16 += 4)
    {
      if (*((char *)v16 + 23) < 0)
      {
        sub_1000DC48C(buf, *(void **)v16, *((void *)v16 + 1));
      }
      else
      {
        long long v18 = *v16;
        uint64_t v37 = *((void *)v16 + 2);
        *(_OWORD *)buf = v18;
      }
      __int16 v38 = *((void *)v16 + 3);
      sub_1008B7BBC((uint64_t)v39, (uint64_t)(v16 + 2));
      __int16 v19 = v38;
      block[0] = _NSConcreteStackBlock;
      block[1] = 3321888768;
      block[2] = sub_1008B77C0;
      block[3] = &unk_1022CF960;
      if (SHIBYTE(v37) < 0)
      {
        sub_1000DC48C(&v23, *(void **)buf, *(unint64_t *)&buf[8]);
      }
      else
      {
        long long v23 = *(_OWORD *)buf;
        uint64_t v24 = v37;
      }
      uint64_t v25 = v38;
      sub_1008B7BBC((uint64_t)v26, (uint64_t)v39);
      v26[4] = v31;
      uint64_t v28 = 0;
      uint64_t v29 = 0;
      std::string __p = 0;
      sub_1008B7A58(&__p, v32, (uint64_t)v33, 0xCCCCCCCCCCCCCCCDLL * ((v33 - (unsigned char *)v32) >> 3));
      long long v30 = v35;
      dispatch_async(v19, block);
      if (__p)
      {
        uint64_t v28 = __p;
        operator delete(__p);
      }
      sub_1006821B0(v26);
      if (SHIBYTE(v24) < 0) {
        operator delete((void *)v23);
      }
      sub_1006821B0(v39);
      if (SHIBYTE(v37) < 0) {
        operator delete(*(void **)buf);
      }
    }
    if (v32)
    {
      uint64_t v33 = v32;
      operator delete(v32);
    }
  }
  std::mutex::unlock(v8);
}

void sub_1008B773C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::mutex *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *__p,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45)
{
}

uint64_t sub_1008B77C0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 88);
  if (!v1) {
    sub_10015E48C();
  }
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);

  return v2();
}

__n128 sub_1008B7818(__n128 *a1, uint64_t a2)
{
  if (*(char *)(a2 + 55) < 0)
  {
    sub_1000DC48C(&a1[2], *(void **)(a2 + 32), *(void *)(a2 + 40));
  }
  else
  {
    __n128 v4 = *(__n128 *)(a2 + 32);
    a1[3].n128_u64[0] = *(void *)(a2 + 48);
    a1[2] = v4;
  }
  a1[3].n128_u64[1] = *(void *)(a2 + 56);
  sub_1008B7BBC((uint64_t)&a1[4], a2 + 64);
  unint64_t v5 = *(void *)(a2 + 96);
  a1[6].n128_u64[1] = 0;
  a1[6].n128_u64[0] = v5;
  a1[7].n128_u64[0] = 0;
  a1[7].n128_u64[1] = 0;
  sub_1008B7A58(&a1[6].n128_u64[1], *(const void **)(a2 + 104), *(void *)(a2 + 112), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(a2 + 112) - *(void *)(a2 + 104)) >> 3));
  __n128 result = *(__n128 *)(a2 + 128);
  a1[8] = result;
  return result;
}

void sub_1008B78C0(_Unwind_Exception *a1)
{
  sub_1008B6FC4(v1);
  _Unwind_Resume(a1);
}

void sub_1008B78EC(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 104);
  if (v2)
  {
    *(void *)(a1 + 112) = v2;
    operator delete(v2);
  }
  sub_1006821B0((void *)(a1 + 64));
  if (*(char *)(a1 + 55) < 0)
  {
    id v3 = *(void **)(a1 + 32);
    operator delete(v3);
  }
}

uint64_t sub_1008B794C(uint64_t a1)
{
  *(void *)a1 = off_1022CF950;
  uint64_t v2 = (std::mutex *)(a1 + 8);
  __n128 v4 = (void **)(a1 + 72);
  sub_1008B7AD4(&v4);
  std::mutex::~mutex(v2);
  return a1;
}

void sub_1008B79B0(uint64_t a1)
{
  *(void *)a1 = off_1022CF950;
  uint64_t v1 = (std::mutex *)(a1 + 8);
  uint64_t v2 = (void **)(a1 + 72);
  sub_1008B7AD4(&v2);
  std::mutex::~mutex(v1);
  operator delete();
}

void sub_1008B7A28(id a1)
{
  qword_102419438 = (uint64_t)os_log_create("com.apple.locationd.Position", "MapMatcher");
}

void *sub_1008B7A58(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    __n128 result = sub_10054E250(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      __n128 result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1008B7AB8(_Unwind_Exception *exception_object)
{
  id v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_1008B7AD4(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    unint64_t v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 64;
        sub_1008B7B6C((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      unint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_1008B7B6C(uint64_t a1, uint64_t a2)
{
  sub_1006821B0((void *)(a2 + 32));
  if (*(char *)(a2 + 23) < 0)
  {
    id v3 = *(void **)a2;
    operator delete(v3);
  }
}

uint64_t sub_1008B7BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_1008B7C54(uint64_t *a1, long long *a2)
{
  uint64_t v3 = (a1[1] - *a1) >> 6;
  unint64_t v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) >> 58) {
    sub_1001D7FD4();
  }
  uint64_t v6 = a1[2] - *a1;
  if (v6 >> 5 > v4) {
    unint64_t v4 = v6 >> 5;
  }
  if ((unint64_t)v6 >= 0x7FFFFFFFFFFFFFC0) {
    unint64_t v7 = 0x3FFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v7 = v4;
  }
  uint64_t v15 = a1 + 2;
  if (v7) {
    size_t v8 = (char *)sub_10017EAF0((uint64_t)(a1 + 2), v7);
  }
  else {
    size_t v8 = 0;
  }
  uint64_t v11 = v8;
  uint64_t v12 = &v8[64 * v3];
  uint64_t v14 = &v8[64 * v7];
  sub_1008B7D44(a1 + 16, v12, a2);
  uint64_t v13 = v12 + 64;
  sub_1008B7DC0(a1, &v11);
  uint64_t v9 = a1[1];
  sub_1008B8010(&v11);
  return v9;
}

void sub_1008B7D30(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1008B8010((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1008B7D44(int a1, void *__dst, long long *a3)
{
  if (*((char *)a3 + 23) < 0)
  {
    sub_1000DC48C(__dst, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v5 = *a3;
    __dst[2] = *((void *)a3 + 2);
    *(_OWORD *)long long __dst = v5;
  }
  __dst[3] = *((void *)a3 + 3);
  return sub_1008B7BBC((uint64_t)(__dst + 4), (uint64_t)(a3 + 2));
}

void sub_1008B7DA4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1008B7DC0(uint64_t *a1, void *a2)
{
  uint64_t result = sub_1008B7E38((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_1008B7E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v17 = a6;
  *((void *)&v17 + 1) = a7;
  long long v16 = v17;
  v14[0] = a1;
  v14[1] = &v16;
  v14[2] = &v17;
  char v15 = 0;
  if (a3 == a5)
  {
    uint64_t v12 = a6;
  }
  else
  {
    uint64_t v9 = a3 - 32;
    do
    {
      uint64_t v10 = v9 - 32;
      long long v11 = *(_OWORD *)(v9 - 32);
      *(void *)(v7 - 48) = *(void *)(v9 - 16);
      *(_OWORD *)(v7 - 64) = v11;
      *(void *)(v9 - 24) = 0;
      *(void *)(v9 - 16) = 0;
      *(void *)(v9 - 32) = 0;
      *(void *)(v7 - 40) = *(void *)(v9 - 8);
      sub_1008B7F04(v7 - 32, v9);
      uint64_t v7 = *((void *)&v17 + 1) - 64;
      *((void *)&v17 + 1) -= 64;
      v9 -= 64;
    }
    while (v10 != a5);
    uint64_t v12 = v17;
  }
  char v15 = 1;
  sub_1008B7F84((uint64_t)v14);
  return v12;
}

uint64_t sub_1008B7F04(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(*(void *)*v3 + 24))(*v3, a1);
      return a1;
    }
    *(void *)(a1 + 24) = v4;
  }
  else
  {
    uint64_t v3 = (void *)(a1 + 24);
  }
  *uint64_t v3 = 0;
  return a1;
}

uint64_t sub_1008B7F84(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_1008B7FBC((uint64_t *)a1);
  }
  return a1;
}

void sub_1008B7FBC(uint64_t *a1)
{
  uint64_t v1 = *(void *)(a1[2] + 8);
  uint64_t v2 = *(void *)(a1[1] + 8);
  if (v1 != v2)
  {
    uint64_t v3 = *a1;
    do
    {
      sub_1008B7B6C(v3, v1);
      v1 += 64;
    }
    while (v1 != v2);
  }
}

void **sub_1008B8010(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void sub_1008B8044(void *a1)
{
  uint64_t v2 = a1[1];
  for (uint64_t i = a1[2]; i != v2; uint64_t i = a1[2])
  {
    uint64_t v4 = a1[4];
    a1[2] = i - 64;
    sub_1008B7B6C(v4, i - 64);
  }
}

uint64_t sub_1008B808C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a2;
  if (a2 != a3)
  {
    do
    {
      if (*(char *)(a4 + 23) < 0) {
        operator delete(*(void **)a4);
      }
      long long v7 = *(_OWORD *)v5;
      *(void *)(a4 + 16) = *(void *)(v5 + 16);
      *(_OWORD *)a4 = v7;
      *(unsigned char *)(v5 + 23) = 0;
      *(unsigned char *)uint64_t v5 = 0;
      *(void *)(a4 + 24) = *(void *)(v5 + 24);
      uint64_t v8 = v5 + 32;
      sub_1008B8124((void *)(a4 + 32), v8);
      a4 += 64;
      uint64_t v5 = v8 + 32;
    }
    while (v5 != a3);
    return a3;
  }
  return v5;
}

void *sub_1008B8124(void *a1, uint64_t a2)
{
  sub_1008B81A8(a1);
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      a1[3] = a1;
      (*(void (**)(void, void *))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      a1[3] = v4;
      *(void *)(a2 + 24) = 0;
    }
  }
  else
  {
    a1[3] = 0;
  }
  return a1;
}

void *sub_1008B81A8(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  a1[3] = 0;
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_1008B82E0(id a1)
{
  qword_10247ECD8 = (uint64_t)[objc_alloc((Class)CLDispatchSilo) initWithIdentifier:@"CLFitnessTrackingNotifierSilo"];
}

uint64_t sub_1008B83A0(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1008B8600;
  block[3] = &unk_10229FED8;
  void block[4] = a1;
  if (qword_10247ECE8 != -1) {
    dispatch_once(&qword_10247ECE8, block);
  }
  return qword_10248A410;
}

uint64_t sub_1008B8600()
{
  sub_100103240();
  if (sub_10010145C()) {
    operator new();
  }
  sub_100103240();
  if ((sub_10016CCBC() & 1) != 0 || (sub_100103240(), uint64_t result = sub_1001B7C64(), result)) {
    operator new();
  }
  return result;
}

void sub_1008B8698()
{
}

uint64_t sub_1008B86D8(uint64_t result)
{
  *(unsigned char *)(result + 108) = 1;
  return result;
}

uint64_t sub_1008B86E4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 120);
}

const void *sub_1008B86EC(const void *a1, void *a2)
{
  uint64_t v3 = sub_1008B8874((uint64_t)a1, "CLFitnessTrackingNotifier", a2);
  *(void *)uint64_t v3 = off_1022CF9F0;
  *(unsigned char *)(v3 + 109) = 0;
  uint64_t v4 = (BOOL *)(v3 + 109);
  *(void *)(v3 + 112) = 0;
  *(unsigned char *)(v3 + 120) = 1;
  uint64_t v5 = sub_1000D3E78();
  sub_10006B564(v5, &v9);
  sub_1000D2988(v9, "AllowUnactivatedFitnessTracking", v4);
  if (v10) {
    sub_1000DB0A0(v10);
  }
  if (qword_10247ECF0 != -1) {
    dispatch_once(&qword_10247ECF0, &stru_1022CFB90);
  }
  if (qword_10247ECF8 && off_10241E938())
  {
    DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
    CFStringRef v7 = +[NSString stringWithUTF8String:off_10241E938()];
    CFNotificationCenterAddObserver(DarwinNotifyCenter, a1, (CFNotificationCallback)sub_1008B8920, v7, 0, CFNotificationSuspensionBehaviorDeliverImmediately);
  }
  (*(void (**)(const void *))(*(void *)a1 + 240))(a1);
  return a1;
}

void sub_1008B8848(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1000DB0A0(a10);
  }
  sub_1008B8B5C(v10);
  _Unwind_Resume(a1);
}

uint64_t sub_1008B8874(uint64_t a1, char *a2, void *a3)
{
  *(void *)a1 = off_1022CFC00;
  sub_100134750((void *)(a1 + 8), a2);
  *(void *)(a1 + 32) = a3;
  *(void *)(a1 + 40) = [a3 silo];
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(unsigned char *)(a1 + 108) = 0;
  return a1;
}

void sub_1008B8904(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_1008B8920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a2 + 32), "silo") assertOutside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022CFB70);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v15 = 1;
    uint64_t v10 = _os_activity_create((void *)&_mh_execute_header, "CL: CLFitnessTrackingNotifier::activityMoveModeChanged", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v10, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022CFB70);
    }
    long long v11 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289538;
      int v17 = 0;
      __int16 v18 = 2082;
      __int16 v19 = "";
      __int16 v20 = 2082;
      uint64_t v21 = "activity";
      __int16 v22 = 2050;
      uint64_t v23 = a2;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLFitnessTrackingNotifier::activityMoveModeChanged\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v15 = 0;
  }
  id v12 = [*(id *)(a2 + 32) silo];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_1008B97D8;
  v13[3] = &unk_1022ACFE0;
  v13[4] = a2;
  v13[5] = a1;
  v13[6] = a3;
  v13[7] = a4;
  v13[8] = a5;
  [v12 sync:v13];
  if (v15) {
    os_activity_scope_leave(&state);
  }
}

void sub_1008B8B3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, os_activity_scope_state_s state, char a19)
{
  if (a19) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1008B8B5C(uint64_t a1)
{
  *(void *)a1 = off_1022CFC00;
  [*(id *)(a1 + 48) invalidate];

  sub_1004459BC(a1 + 80, *(void **)(a1 + 88));
  sub_100445A1C(a1 + 56, *(void **)(a1 + 64));
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

uint64_t sub_1008B8BE0(void *a1)
{
  *(void *)a1 = off_1022CF9F0;
  if (qword_10247ECF0 != -1) {
    dispatch_once(&qword_10247ECF0, &stru_1022CFB90);
  }
  if (qword_10247ECF8 && off_10241E938())
  {
    DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
    CFStringRef v3 = +[NSString stringWithUTF8String:off_10241E938()];
    CFNotificationCenterRemoveObserver(DarwinNotifyCenter, a1, v3, 0);
  }
  (*(void (**)(void *))(*(void *)a1 + 16))(a1);

  return sub_1008B8B5C((uint64_t)a1);
}

void *sub_1008B8CE8@<X0>(_DWORD *a1@<X1>, void *a2@<X8>)
{
  snprintf(__str, 0x20uLL, "%d", *a1);
  return sub_100134750(a2, __str);
}

BOOL sub_1008B8D64(uint64_t a1, int *a2)
{
  int v2 = *a2;
  if (*a2 <= 7) {
    (*(void (**)(uint64_t))(*(void *)a1 + 224))(a1);
  }
  return v2 < 8;
}

BOOL sub_1008B8DB8(uint64_t a1, int *a2)
{
  int v2 = *a2;
  if (*a2 >= 8)
  {
    if (qword_102419270 != -1) {
      dispatch_once(&qword_102419270, &stru_1022CFBB0);
    }
    uint64_t v4 = qword_102419278;
    if (os_log_type_enabled((os_log_t)qword_102419278, OS_LOG_TYPE_FAULT))
    {
      int v5 = *a2;
      *(_DWORD *)buf = 67240192;
      int v9 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_FAULT, "Unknown notification during unregistration: %{public}d", buf, 8u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419270 != -1) {
        dispatch_once(&qword_102419270, &stru_1022CFBB0);
      }
      CFStringRef v7 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "virtual BOOL CLFitnessTrackingNotifier::unregisterForNotificationInternal(const CLFitnessTrackingNotifier_Type::Notification &)", "%s\n", v7);
      if (v7 != (char *)buf) {
        free(v7);
      }
    }
  }
  return v2 < 8;
}

uint64_t sub_1008B8F80(uint64_t result, char a2)
{
  *(unsigned char *)(result + 120) = a2;
  return result;
}

uint64_t sub_1008B8F88(uint64_t result, int a2)
{
  if (*(_DWORD *)(result + 112) != a2)
  {
    uint64_t v3 = result;
    *(_DWORD *)(result + 112) = a2;
    BOOL v5 = a2 == 2;
    if (qword_102418FD0 != -1) {
      dispatch_once(&qword_102418FD0, &stru_1022CFBD0);
    }
    uint64_t v4 = qword_102418FD8;
    if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 68289282;
      int v7 = 0;
      __int16 v8 = 2082;
      int v9 = "";
      __int16 v10 = 1026;
      BOOL v11 = a2 == 2;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"Motion Sensor Logging\", \"Always On\":%{public}hhd}", buf, 0x18u);
    }
    *(_DWORD *)buf = 3;
    return (*(uint64_t (**)(uint64_t, uint8_t *, BOOL *, uint64_t, uint64_t, void))(*(void *)v3 + 152))(v3, buf, &v5, 1, 0xFFFFFFFFLL, 0);
  }
  return result;
}

uint64_t sub_1008B90E8(unsigned char *a1)
{
  a1[120] = (*(uint64_t (**)(unsigned char *))(*(void *)a1 + 216))(a1);
  int v2 = *(uint64_t (**)(unsigned char *))(*(void *)a1 + 224);

  return v2(a1);
}

uint64_t sub_1008B9164()
{
  if (qword_10247ECF0 != -1) {
    dispatch_once(&qword_10247ECF0, &stru_1022CFB90);
  }
  if (!qword_10247ECF8 || !off_10241E938()) {
    return 1;
  }
  int v3 = 0;
  sub_10051F6A8((uint64_t)v2, @"com.apple.nanolifestyle", 1, @"mobile");
  uint64_t v0 = (const char *)[(id)off_10241E940() UTF8String];
  sub_10006EF84((uint64_t)v2, v0, &v3);
  sub_10051F740(v2);
  if (v3 == 2) {
    return 2;
  }
  else {
    return 1;
  }
}

void sub_1008B9234(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1008B9248(_DWORD *a1)
{
  uint64_t result = sub_1008B9164();
  if (a1[29] != result)
  {
    a1[29] = result;
    v7[0] = result;
    if (qword_102418FD0 != -1) {
      dispatch_once(&qword_102418FD0, &stru_1022CFBD0);
    }
    int v3 = qword_102418FD8;
    if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_DEFAULT))
    {
      if (a1[29] == 1) {
        uint64_t v4 = "ActiveEnergy";
      }
      else {
        uint64_t v4 = "MoveMinute";
      }
      *(_DWORD *)buf = 136446210;
      __int16 v10 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "CM Activity Move Mode,%{public}s", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418FD0 != -1) {
        dispatch_once(&qword_102418FD0, &stru_1022CFBD0);
      }
      if (a1[29] == 1) {
        BOOL v5 = "ActiveEnergy";
      }
      else {
        BOOL v5 = "MoveMinute";
      }
      v7[1] = 136446210;
      __int16 v8 = v5;
      uint64_t v6 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLFitnessTrackingNotifier::updateActivityMoveMode()", "%s\n", v6);
      if (v6 != (char *)buf) {
        free(v6);
      }
    }
    *(_DWORD *)buf = 4;
    return (*(uint64_t (**)(_DWORD *, uint8_t *, _DWORD *, uint64_t, uint64_t, void))(*(void *)a1 + 152))(a1, buf, v7, 1, 0xFFFFFFFFLL, 0);
  }
  return result;
}

uint64_t sub_1008B9488(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, uint64_t a5, uint64_t a6)
{
  *(void *)a1 = off_1022CFCE0;
  *(void *)(a1 + 8) = [[CLNotifierClientAdapter alloc] initWithClient:a1];
  *(void *)(a1 + 24) = a5;
  *(void *)(a1 + 32) = a6;
  if (*((char *)a3 + 23) >= 0) {
    id v12 = a3;
  }
  else {
    id v12 = (uint64_t *)*a3;
  }
  id v13 = [objc_msgSend(a4, "vendor") proxyForService:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12)];
  *(void *)(a1 + 16) = v13;
  id v14 = v13;
  if (a2) {
    [*(id *)(a1 + 16) setDelegateEntityName:a2];
  }
  [*(id *)(a1 + 16) registerDelegate:*(void *)(a1 + 8) inSilo:[a4 silo]];
  return a1;
}

void sub_1008B956C()
{
}

void sub_1008B9628(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete();
}

void sub_1008B9668(uint64_t a1)
{
  sub_1008B98EC(a1);

  operator delete();
}

id sub_1008B96A0(uint64_t a1, int a2, void *a3)
{
  id result = sub_10081589C(a3);
  if (result)
  {
    int v6 = a2;
    return (id)(*(uint64_t (**)(void, int *, id, void))(a1 + 24))(0, &v6, result, *(void *)(a1 + 32));
  }
  return result;
}

void sub_1008B96F0(id a1)
{
  qword_102419588 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_1008B9720(id a1)
{
  qword_10247ECF8 = (uint64_t)dlopen("/System/Library/Frameworks/HealthKit.framework/HealthKit", 2);
}

uint64_t sub_1008B974C()
{
  if (qword_10247ECF0 != -1) {
    dispatch_once(&qword_10247ECF0, &stru_1022CFB90);
  }
  uint64_t v0 = (uint64_t *)dlsym((void *)qword_10247ECF8, "HKActivityMoveModeDidUpdateNotification");
  if (v0)
  {
    uint64_t result = *v0;
    qword_10247ED00 = result;
  }
  else
  {
    uint64_t result = qword_10247ED00;
  }
  off_10241E938 = sub_1008B97CC;
  return result;
}

uint64_t sub_1008B97CC()
{
  return qword_10247ED00;
}

uint64_t sub_1008B97D8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 32) + 240))();
}

void sub_1008B9800(id a1)
{
  qword_102419278 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Fitness");
}

void sub_1008B9830(id a1)
{
  qword_102418FD8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Motion");
}

uint64_t sub_1008B9860()
{
  if (qword_10247ECF0 != -1) {
    dispatch_once(&qword_10247ECF0, &stru_1022CFB90);
  }
  uint64_t v0 = (uint64_t *)dlsym((void *)qword_10247ECF8, "HKActivityMoveModeDefaultsKey");
  if (v0)
  {
    uint64_t result = *v0;
    qword_10247ED08 = result;
  }
  else
  {
    uint64_t result = qword_10247ED08;
  }
  off_10241E940 = sub_1008B98E0;
  return result;
}

uint64_t sub_1008B98E0()
{
  return qword_10247ED08;
}

uint64_t sub_1008B98EC(uint64_t a1)
{
  *(void *)a1 = off_1022CFCE0;
  int v2 = (id *)(a1 + 8);
  [*(id *)(a1 + 16) forget:*(void *)(a1 + 8)];

  [*v2 invalidate];
  *int v2 = 0;
  *(void *)(a1 + 16) = 0;
  return a1;
}

void sub_1008B9BAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1008B9BC4(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id result = [[[objc_msgSend(objc_msgSend(objc_msgSend(a2, "startDate"), "laterDate:", *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)), "isEqualToDate:", objc_msgSend(a2, "startDate"))]
  if ((result & 1) == 0)
  {
    if (objc_msgSend(objc_msgSend(objc_msgSend(a2, "startDate"), "earlierDate:", objc_msgSend(*(id *)(a1 + 32), "startDate")), "isEqualToDate:", objc_msgSend(a2, "startDate")))
    {
      id v8 = [*(id *)(a1 + 32) startDate];
      *a4 = 1;
    }
    else
    {
      id v8 = [a2 startDate];
    }
    int v9 = *(void **)(a1 + 40);
    [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) timeIntervalSinceDate:v8];
    [v9 addInterval:[CLFenceAnalyticsCommon motionTypeFromMotionActivity:a2] confidence:[a2 confidence] type:v10];

    id result = [[[a2 startDate] copy];
    *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) = result;
  }
  return result;
}

int64_t sub_1008B9D7C(id a1, CLFenceAnalyticsMotionActivityHistogramBin *a2, CLFenceAnalyticsMotionActivityHistogramBin *a3)
{
  [(CLFenceAnalyticsMotionActivityHistogramBin *)a2 interval];
  double v5 = v4;
  [(CLFenceAnalyticsMotionActivityHistogramBin *)a3 interval];
  if (v5 <= v6) {
    return 1;
  }
  else {
    return -1;
  }
}

void sub_1008BA0F4(id a1)
{
  qword_10247ED28 = (uint64_t)[objc_alloc((Class)CLDispatchSilo) initWithIdentifier:@"CLUsageSyncManagerSilo"];
}

void sub_1008BA16C(id a1)
{
  if (objc_opt_class())
  {
    sub_100103240();
    if (sub_100106424() || (sub_100103240(), sub_10010145C())) {
      byte_10247ED38 = 1;
    }
  }
}

void sub_1008BA3F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    if (qword_102419530 != -1) {
      dispatch_once(&qword_102419530, &stru_1022CFED0);
    }
    double v4 = qword_102419538;
    if (os_log_type_enabled((os_log_t)qword_102419538, OS_LOG_TYPE_ERROR))
    {
      int v8 = 68289282;
      int v9 = 0;
      __int16 v10 = 2082;
      BOOL v11 = "";
      __int16 v12 = 2114;
      uint64_t v13 = a3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"#usesync IDS service failed to initialize\", \"Error\":%{public, location:escape_only}@}", (uint8_t *)&v8, 0x1Cu);
      if (qword_102419530 != -1) {
        dispatch_once(&qword_102419530, &stru_1022CFED0);
      }
    }
    double v5 = qword_102419538;
    if (os_signpost_enabled((os_log_t)qword_102419538))
    {
      int v8 = 68289282;
      int v9 = 0;
      __int16 v10 = 2082;
      BOOL v11 = "";
      __int16 v12 = 2114;
      uint64_t v13 = a3;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v5, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "#usesync IDS service failed to initialize", "{\"msg%{public}.0s\":\"#usesync IDS service failed to initialize\", \"Error\":%{public, location:escape_only}@}", (uint8_t *)&v8, 0x1Cu);
    }
  }
  else
  {
    [*(id *)(a1 + 32) setService:a2];
    if (qword_102419530 != -1) {
      dispatch_once(&qword_102419530, &stru_1022CFED0);
    }
    int v7 = qword_102419538;
    if (os_log_type_enabled((os_log_t)qword_102419538, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = 68289026;
      int v9 = 0;
      __int16 v10 = 2082;
      BOOL v11 = "";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#usesync IDS became available so resuming silo\"}", (uint8_t *)&v8, 0x12u);
    }
    [*(id *)(a1 + 40) resume];
  }
}

void sub_1008BAC84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,char a27)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  _Unwind_Resume(exception_object);
}

id sub_1008BACF0(uint64_t a1, unsigned int *a2, uint64_t a3, void *a4)
{
  return [a4 onClientManagerNotification:*a2 data:a3];
}

id sub_1008BAD00(uint64_t a1)
{
  return _[*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) drainErrorQueue];
}

id sub_1008BAF34(uint64_t a1)
{
  return [*(id *)(a1 + 32) handleUnpair];
}

id sub_1008BAFBC(uint64_t a1)
{
  return [*(id *)(a1 + 32) handlePair];
}

void sub_1008BB270(id a1, void *a2)
{
}

id sub_1008BB504(uint64_t a1)
{
  return [*(id *)(a1 + 32) handlePair];
}

id sub_1008BB58C(uint64_t a1)
{
  return [*(id *)(a1 + 32) handleUnpair];
}

void sub_1008BC6B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1008BC6D0(uint64_t a1)
{
  sub_100103240();
  if (sub_100106424())
  {
    if (qword_10247EDA8 != -1) {
      dispatch_once(&qword_10247EDA8, &stru_1022CFF10);
    }
    id v2 = [(id)qword_10247EDA0 objectForKeyedSubscript:a1];
    if (v2) {
      return v2;
    }
  }
  return (id)a1;
}

id sub_1008BC740(uint64_t a1, uint64_t a2)
{
  sub_100134750(__p, (char *)[*(id *)(a1 + 32) UTF8String]);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = sub_1007C9344(a2, (uint64_t *)__p);
  if (v6 < 0) {
    operator delete(__p[0]);
  }
  return *(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
}

void sub_1008BC7B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

id sub_1008BC7D4(void *a1)
{
  id result = *(id *)(*(void *)(a1[6] + 8) + 40);
  if (*(void *)(*(void *)(a1[6] + 8) + 40))
  {
    int v3 = (void *)a1[4];
    uint64_t v4 = a1[5];
    return [v3 client:didChangeUsageData:v4];
  }
  return result;
}

id sub_1008BD524(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) onStatusBarIconChangeInternal:dword_10247ED48];
  *(unsigned char *)(*(void *)(a1 + 32) + 20) = 0;
  return result;
}

void sub_1008BD9E8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

id sub_1008BDA00(uint64_t a1, uint64_t a2)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) = sub_1007C9010(a2);
  int v3 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);

  return v3;
}

void sub_1008BDA50(uint64_t a1)
{
  id v2 = *(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  if (([*(id *)(a1 + 32) isPaired] & 1) == 0)
  {
    if (qword_102419530 != -1) {
      dispatch_once(&qword_102419530, &stru_1022CFED0);
    }
    int v3 = qword_102419538;
    if (os_log_type_enabled((os_log_t)qword_102419538, OS_LOG_TYPE_INFO))
    {
      uint64_t buf = 68289026;
      __int16 v19 = 2082;
      __int16 v20 = "";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"#usesync Dropping full sync due to being unpaired\"}", (uint8_t *)&buf, 0x12u);
    }
  }
  id v4 = +[NSMutableDictionary dictionary];
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  double v5 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  id v6 = [v5 countByEnumeratingWithState:&v11 objects:v17 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v7; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v12 != v8) {
          objc_enumerationMutation(v5);
        }
        [v4 setObject:*(id *)(*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) + 40) forKeyedSubscript:*(void *)(*((void *)&v11 + 1) + 8 * i)];
      }
      id v7 = [v5 countByEnumeratingWithState:&v11 objects:v17 count:16];
    }
    while (v7);
  }
  v15[0] = IDSSendMessageOptionTimeoutKey;
  v15[1] = IDSSendMessageOptionEncryptPayloadKey;
  v16[0] = &off_102392BE8;
  v16[1] = &__kCFBooleanTrue;
  v15[2] = IDSSendMessageOptionForceLocalDeliveryKey;
  v15[3] = IDSSendMessageOptionQueueOneIdentifierKey;
  v16[2] = &__kCFBooleanTrue;
  v16[3] = @"kCLUsageSyncResyncResponseQueueIdentifierKey";
  [*(id *)(a1 + 32) sendMessageWithMessageType:@"kCLUsageSyncMessageResyncResponseKey" dataPayload:v4 priority:300 idsOptions:[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v16, v15, 4)];
  if (qword_102419530 != -1) {
    dispatch_once(&qword_102419530, &stru_1022CFED0);
  }
  __int16 v10 = qword_102419538;
  if (os_log_type_enabled((os_log_t)qword_102419538, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t buf = 68289026;
    __int16 v19 = 2082;
    __int16 v20 = "";
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#usesync Enqueued all usage data\"}", (uint8_t *)&buf, 0x12u);
  }
}

void sub_1008BE8D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL sub_1008BE8F0(uint64_t a1, uint64_t a2)
{
  sub_100134750(__p, (char *)[*(id *)(a1 + 32) UTF8String]);
  sub_1007C95AC(a2, (uint64_t *)__p, *(void **)(a1 + 40));
  if (v6 < 0) {
    operator delete(__p[0]);
  }
  BOOL result = sub_1007C9BCC(a2, *(void **)(a1 + 40));
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = result;
  return result;
}

void sub_1008BE968(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1008BE984(uint64_t result)
{
  if (*(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24)) {
    *(unsigned char *)(*(void *)(result + 32) + 21) = 1;
  }
  return result;
}

void sub_1008BED20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

id sub_1008BED40(uint64_t a1, uint64_t a2)
{
  sub_1007C9AA0(a2, *(void *)(a1 + 32));
  long long v11 = 0u;
  long long v12 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v4 = *(void **)(a1 + 32);
  id result = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (result)
  {
    id v6 = result;
    uint64_t v7 = *(void *)v10;
    do
    {
      uint64_t v8 = 0;
      do
      {
        if (*(void *)v10 != v7) {
          objc_enumerationMutation(v4);
        }
        *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = sub_1007C9BCC(a2, [*(id *)(a1 + 32) objectForKeyedSubscript:*(void *)(*((void *)&v9 + 1)+ 8 * (void)v8)]);
        uint64_t v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      id result = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
      id v6 = result;
    }
    while (result);
  }
  return result;
}

uint64_t sub_1008BEE5C(uint64_t result)
{
  if (*(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24)) {
    *(unsigned char *)(*(void *)(result + 32) + 21) = 1;
  }
  return result;
}

id sub_1008BF5B0(uint64_t a1, void *a2)
{
  return [a2 isEqualToString:*(void *)(a1 + 32)];
}

void sub_1008BF7E8(id a1, void *a2)
{
  if (qword_102419530 != -1) {
    dispatch_once(&qword_102419530, &stru_1022CFED0);
  }
  int v3 = qword_102419538;
  if (os_log_type_enabled((os_log_t)qword_102419538, OS_LOG_TYPE_DEFAULT))
  {
    v4[0] = 68289026;
    v4[1] = 0;
    __int16 v5 = 2082;
    id v6 = "";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#usesync paired device is no longer nearby.  Removing usage\"}", (uint8_t *)v4, 0x12u);
  }
  sub_1007DAB68((uint64_t)a2);
}

uint64_t sub_1008BF8CC(uint64_t result)
{
  *(unsigned char *)(*(void *)(result + 32) + 21) = 0;
  *(unsigned char *)(*(void *)(result + 32) + 22) = 1;
  return result;
}

id sub_1008BF8F4(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) requestFullResync];
  *(unsigned char *)(*(void *)(a1 + 32) + 22) = 0;
  return result;
}

void sub_1008BFAA4(id a1)
{
  qword_102419538 = (uint64_t)os_log_create("com.apple.locationd.Core", "Core");
}

Class sub_1008BFAD4()
{
  if (qword_10247ED58 != -1) {
    dispatch_once(&qword_10247ED58, &stru_1022CFEF0);
  }
  Class result = objc_getClass("NRPairedDeviceRegistry");
  qword_10247ED50 = (uint64_t)result;
  off_10241EA08 = sub_1008BFB38;
  return result;
}

uint64_t sub_1008BFB38()
{
  return qword_10247ED50;
}

void sub_1008BFB44(id a1)
{
  qword_10247ED60 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry", 2);
}

uint64_t sub_1008BFB70()
{
  if (qword_10247ED58 != -1) {
    dispatch_once(&qword_10247ED58, &stru_1022CFEF0);
  }
  uint64_t v0 = (uint64_t *)dlsym((void *)qword_10247ED60, "NRPairedDeviceRegistryDeviceDidUnpairNotification");
  if (v0)
  {
    uint64_t result = *v0;
    qword_10247ED68 = result;
  }
  else
  {
    uint64_t result = qword_10247ED68;
  }
  off_10241EA10 = sub_1008BFBF0;
  return result;
}

uint64_t sub_1008BFBF0()
{
  return qword_10247ED68;
}

uint64_t sub_1008BFBFC()
{
  if (qword_10247ED58 != -1) {
    dispatch_once(&qword_10247ED58, &stru_1022CFEF0);
  }
  uint64_t v0 = (uint64_t *)dlsym((void *)qword_10247ED60, "NRPairedDeviceRegistryDeviceDidPairNotification");
  if (v0)
  {
    uint64_t result = *v0;
    qword_10247ED70 = result;
  }
  else
  {
    uint64_t result = qword_10247ED70;
  }
  off_10241EA18 = sub_1008BFC7C;
  return result;
}

uint64_t sub_1008BFC7C()
{
  return qword_10247ED70;
}

uint64_t sub_1008BFC88()
{
  if (qword_10247ED58 != -1) {
    dispatch_once(&qword_10247ED58, &stru_1022CFEF0);
  }
  uint64_t v0 = (uint64_t *)dlsym((void *)qword_10247ED60, "NRPairedDeviceRegistryDeviceDidBecomeActive");
  if (v0)
  {
    uint64_t result = *v0;
    qword_10247ED78 = result;
  }
  else
  {
    uint64_t result = qword_10247ED78;
  }
  off_10241EA20 = sub_1008BFD08;
  return result;
}

uint64_t sub_1008BFD08()
{
  return qword_10247ED78;
}

uint64_t sub_1008BFD14()
{
  if (qword_10247ED58 != -1) {
    dispatch_once(&qword_10247ED58, &stru_1022CFEF0);
  }
  uint64_t v0 = (uint64_t *)dlsym((void *)qword_10247ED60, "NRPairedDeviceRegistryDeviceDidBecomeInactive");
  if (v0)
  {
    uint64_t result = *v0;
    qword_10247ED80 = result;
  }
  else
  {
    uint64_t result = qword_10247ED80;
  }
  off_10241EA28 = sub_1008BFD94;
  return result;
}

uint64_t sub_1008BFD94()
{
  return qword_10247ED80;
}

uint64_t sub_1008BFDA0()
{
  if (qword_10247ED58 != -1) {
    dispatch_once(&qword_10247ED58, &stru_1022CFEF0);
  }
  uint64_t v0 = (uint64_t *)dlsym((void *)qword_10247ED60, "NRDevicePropertyPairingID");
  if (v0)
  {
    uint64_t result = *v0;
    qword_10247ED88 = result;
  }
  else
  {
    uint64_t result = qword_10247ED88;
  }
  off_10241EA30 = sub_1008BFE20;
  return result;
}

uint64_t sub_1008BFE20()
{
  return qword_10247ED88;
}

uint64_t sub_1008BFE2C()
{
  if (qword_10247ED58 != -1) {
    dispatch_once(&qword_10247ED58, &stru_1022CFEF0);
  }
  uint64_t v0 = (uint64_t *)dlsym((void *)qword_10247ED60, "NRDevicePropertySerialNumber");
  if (v0)
  {
    uint64_t result = *v0;
    qword_10247ED90 = result;
  }
  else
  {
    uint64_t result = qword_10247ED90;
  }
  off_10241EA38 = sub_1008BFEAC;
  return result;
}

uint64_t sub_1008BFEAC()
{
  return qword_10247ED90;
}

uint64_t sub_1008BFEB8()
{
  if (qword_10247ED58 != -1) {
    dispatch_once(&qword_10247ED58, &stru_1022CFEF0);
  }
  uint64_t v0 = (uint64_t *)dlsym((void *)qword_10247ED60, "_NRDevicePropertyBluetoothIdentifier");
  if (v0)
  {
    uint64_t result = *v0;
    qword_10247ED98 = result;
  }
  else
  {
    uint64_t result = qword_10247ED98;
  }
  off_10241EA40 = sub_1008BFF38;
  return result;
}

uint64_t sub_1008BFF38()
{
  return qword_10247ED98;
}

void sub_1008BFF44(id a1)
{
  qword_10247EDA0 = (uint64_t)objc_alloc_init((Class)NSMutableDictionary);
  uint64_t v1 = (void *)sub_1007C4A4C();

  [v1 enumerateKeysAndObjectsUsingBlock:&stru_1022CFF30];
}

void sub_1008BFF88(id a1, id a2, id a3, BOOL *a4)
{
}

uint64_t sub_1008BFF9C()
{
  sub_100134750(qword_10247ED10, "UsageSyncManager");

  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247ED10, (void *)&_mh_execute_header);
}

uint64_t sub_1008BFFFC(uint64_t a1)
{
  *(void *)a1 = 0;
  uint64_t v2 = a1 + 32;
  sub_100134750((void *)(a1 + 8), "CLRavenGeoMapBuildingDataManager, query for buildings");
  sub_101171D90(v2);
  *(unsigned char *)(a1 + 72) = 0;
  *(unsigned char *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(unsigned char *)(a1 + 96) = 0;
  *(unsigned char *)(a1 + 112) = 0;
  *(_DWORD *)(a1 + 120) = 1;
  *(void *)(a1 + 128) = 0x403E000000000000;
  *(void *)(a1 + 272) = 0x5FFFFFFFFLL;
  *(_DWORD *)(a1 + 280) = 3;
  *(_DWORD *)(a1 + 284) = 16777217;
  *(void *)(a1 + 288) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 296) = 0;
  *(_WORD *)(a1 + 304) = 1;
  *(unsigned char *)(a1 + 306) = 0;
  *(void *)(a1 + 328) = 0;
  *(void *)(a1 + 336) = 0;
  *(void *)(a1 + 312) = 0x4069000000000000;
  *(void *)(a1 + 320) = a1 + 328;
  id v3 = objc_alloc_init((Class)GEOMapFeatureAccess);
  *(void *)(a1 + 88) = v3;
  if (v3)
  {
    [v3 setAllowNetworkTileLoad:1];
    [*(id *)(a1 + 88) setAllowStaleData:1];
  }
  sub_1000C7F88(buf);
  double v4 = *(double *)(a1 + 128);
  double v26 = 0.0;
  int v5 = sub_1000A699C(*(uint64_t *)buf, "MinimumDistanceForNewBuildingQueryInRaven", &v26);
  double v6 = v26;
  if (!v5) {
    double v6 = v4;
  }
  *(double *)(a1 + 128) = v6;
  if (v25) {
    sub_1000DB0A0(v25);
  }
  CLMotionActivity::init((CLMotionActivity *)(a1 + 136));
  sub_1000C7F88(buf);
  char v7 = *(unsigned char *)(a1 + 305);
  LOBYTE(v26) = 0;
  int v8 = sub_1000D2988(*(uint64_t *)buf, "EnableRavenBuildingDataQueryInNonDUSignalEnvironment", (BOOL *)&v26);
  char v9 = LOBYTE(v26);
  if (!v8) {
    char v9 = v7;
  }
  *(unsigned char *)(a1 + 305) = v9;
  if (v25) {
    sub_1000DB0A0(v25);
  }
  sub_1000C7F88(buf);
  char v10 = *(unsigned char *)(a1 + 304);
  LOBYTE(v26) = 0;
  int v11 = sub_1000D2988(*(uint64_t *)buf, "EnableRavenBuildingDataAndRayTracingTileQueryForOnlyPedestrianActivity", (BOOL *)&v26);
  char v12 = LOBYTE(v26);
  if (!v11) {
    char v12 = v10;
  }
  *(unsigned char *)(a1 + 304) = v12;
  if (v25) {
    sub_1000DB0A0(v25);
  }
  sub_1000C7F88(buf);
  double v13 = *(double *)(a1 + 312);
  double v26 = 0.0;
  int v14 = sub_1000A699C(*(uint64_t *)buf, "BuildingQueryRadiusInRaven", &v26);
  double v15 = v26;
  if (!v14) {
    double v15 = v13;
  }
  *(double *)(a1 + 312) = v15;
  if (v25) {
    sub_1000DB0A0(v25);
  }
  sub_100103240();
  if (sub_10010145C()) {
    goto LABEL_26;
  }
  sub_1000C7F88(buf);
  LOBYTE(v26) = 0;
  int v16 = sub_1000D2988(*(uint64_t *)buf, "UseMapsBuildingTileStyleBasic", (BOOL *)&v26);
  if (LOBYTE(v26)) {
    int v17 = v16;
  }
  else {
    int v17 = 0;
  }
  if (v25) {
    sub_1000DB0A0(v25);
  }
  if (v17) {
LABEL_26:
  }
    int v18 = 0;
  else {
    int v18 = 1;
  }
  *(_DWORD *)(a1 + 120) = v18;
  if (qword_102419400 != -1) {
    dispatch_once(&qword_102419400, &stru_1022CFFB0);
  }
  __int16 v19 = qword_102419408;
  if (os_log_type_enabled((os_log_t)qword_102419408, OS_LOG_TYPE_DEBUG))
  {
    int v20 = *(_DWORD *)(a1 + 120);
    *(_DWORD *)uint64_t buf = 67240192;
    *(_DWORD *)&uint8_t buf[4] = v20;
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEBUG, "clrgmd,mapsBuildingTileStyleToUse,%{public}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419400 != -1) {
      dispatch_once(&qword_102419400, &stru_1022CFFB0);
    }
    int v22 = *(_DWORD *)(a1 + 120);
    LODWORD(v26) = 67240192;
    HIDWORD(v26) = v22;
    uint64_t v23 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "CLRavenGeoMapBuildingDataManager::CLRavenGeoMapBuildingDataManager()", "%s\n", v23);
    if (v23 != (char *)buf) {
      free(v23);
    }
  }
  sub_10019DAB8(a1 + 272, 1);
  return a1;
}

void sub_1008C03EC(_Unwind_Exception *a1)
{
  sub_1000F5BB0(v1 + 320, *v2);
  sub_1007632B8(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1008C0454(uint64_t a1)
{
  if (*(void *)(a1 + 88))
  {
    if (qword_102419430 != -1) {
      dispatch_once(&qword_102419430, &stru_1022CFFD0);
    }
    uint64_t v2 = qword_102419438;
    if (os_log_type_enabled((os_log_t)qword_102419438, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "CLGCZ,destroy geocodec malloc zone,~CLRavenGeoMapBuildingDataManager()", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419430 != -1) {
        dispatch_once(&qword_102419430, &stru_1022CFFD0);
      }
      double v4 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "CLRavenGeoMapBuildingDataManager::~CLRavenGeoMapBuildingDataManager()", "%s\n", v4);
      if (v4 != (char *)buf) {
        free(v4);
      }
    }
    [*(id *)(a1 + 88) clearBuildingTiles];
    GEOResetGeoCodecsAllocator();

    *(void *)(a1 + 88) = 0;
  }
  sub_1000F5BB0(a1 + 320, *(void **)(a1 + 328));
  sub_1007632B8(a1);
  return a1;
}

void sub_1008C0620(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_1001C7F8C(a1);
}

BOOL sub_1008C0630(CLMotionActivity *this, double *a2)
{
  if (BYTE2(this[3].vehicleType))
  {
    if (qword_102419400 != -1) {
      dispatch_once(&qword_102419400, &stru_1022CFFB0);
    }
    uint64_t v2 = qword_102419408;
    if (os_log_type_enabled((os_log_t)qword_102419408, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "clrgmd,Query in progress, can't start new query", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419400 != -1) {
        dispatch_once(&qword_102419400, &stru_1022CFFB0);
      }
      id v3 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLRavenGeoMapBuildingDataManager::IsQueryNeeded(const CLClientLocationCoordinate &) const", "%s\n", v3);
      if (v3 != (char *)buf) {
        free(v3);
      }
    }
    return 0;
  }
  if (BYTE1(this[3].vehicleType)) {
    BOOL v5 = 0;
  }
  else {
    BOOL v5 = (LODWORD(this[3].estExitTime) - 3) > 1;
  }
  if (v5) {
    return 0;
  }
  char v7 = (CLMotionActivity *)((char *)this + 136);
  if (LODWORD(this[1].estExitTime))
  {
    if ((CLMotionActivity::isWalking((CLMotionActivity *)((char *)this + 136)) & 1) == 0
      && (CLMotionActivity::isRunning((CLMotionActivity *)((char *)this + 136)) & 1) == 0)
    {
      int type = v7->type;
      if (v7->type != 3 && type != 11805 && type != 90603 && LOBYTE(this[3].vehicleType)) {
        return 0;
      }
    }
  }
  uint64_t v8 = 1;
  if (this[1].isStanding)
  {
    long double v9 = sub_1000F1648((double *)&this->isStanding, *a2, a2[1], *(double *)&this[1].mountedConfidence, this[1].conservativeMountedProbability, 0.0);
    *(long double *)&this->fsmTransitionData.fConsecStatic = v9;
    LOBYTE(this[1].type) = 1;
    return v9 >= *(double *)&this[1].isVehicleConnected;
  }
  return v8;
}

void sub_1008C0874(uint64_t a1, double *a2, uint64_t *a3)
{
  if (sub_1008C0630((CLMotionActivity *)a1, a2))
  {
    if (qword_102419400 != -1) {
      dispatch_once(&qword_102419400, &stru_1022CFFB0);
    }
    double v6 = qword_102419408;
    if (os_log_type_enabled((os_log_t)qword_102419408, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "clrgmd,Query required", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419400 != -1) {
        dispatch_once(&qword_102419400, &stru_1022CFFB0);
      }
      LOWORD(v26) = 0;
      int v17 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLRavenGeoMapBuildingDataManager::QueryAndSerializeBuildingData(const CLClientLocationCoordinate &, std::weak_ptr<CLRavenController>)", "%s\n", v17);
      if (v17 != (char *)buf) {
        free(v17);
      }
    }
    double v8 = *a2;
    double v9 = a2[1];
    long long v25 = *(_OWORD *)a2;
    id v10 = +[NSMutableArray array];
    int v11 = *(void **)(a1 + 88);
    if (v11) {
      [v11 setAllowNetworkTileLoad:*(unsigned __int8 *)(a1 + 287)];
    }
    double v12 = sub_10016C458();
    uint64_t v13 = *a3;
    int v14 = (std::__shared_weak_count *)a3[1];
    if (v14) {
      atomic_fetch_add_explicit(&v14->__shared_weak_owners_, 1uLL, memory_order_relaxed);
    }
    v24[0] = _NSConcreteStackBlock;
    v24[1] = 3221225472;
    v24[2] = sub_1008C0E4C;
    v24[3] = &unk_1022CFF58;
    v24[4] = v10;
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3321888768;
    void v20[2] = sub_1008C1110;
    v20[3] = &unk_1022CFF80;
    v20[5] = a1;
    v20[6] = v13;
    uint64_t v21 = v14;
    if (v14) {
      atomic_fetch_add_explicit(&v14->__shared_weak_owners_, 1uLL, memory_order_relaxed);
    }
    v20[4] = v10;
    long long v22 = v25;
    double v23 = v12;
    if (*(void *)(a1 + 88))
    {
      if (sub_1000EF68C(v8, v9))
      {
        *(unsigned char *)(a1 + 306) = 1;
        sub_1008C1798((CLOSTransaction *)a1);
        if (qword_102419400 != -1) {
          dispatch_once(&qword_102419400, &stru_1022CFFB0);
        }
        double v15 = qword_102419408;
        if (os_log_type_enabled((os_log_t)qword_102419408, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)uint64_t buf = 134283777;
          double v31 = v8;
          __int16 v32 = 2049;
          double v33 = v9;
          _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "clrgmd,starting building data query at lat,%{private}.7lf,lon,%{private}.7lf", buf, 0x16u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419400 != -1) {
            dispatch_once(&qword_102419400, &stru_1022CFFB0);
          }
          int v26 = 134283777;
          double v27 = v8;
          __int16 v28 = 2049;
          double v29 = v9;
          int v18 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLRavenGeoMapBuildingDataManager::QueryAndSerializeBuildingData(const CLClientLocationCoordinate &, std::weak_ptr<CLRavenController>)", "%s\n", v18);
          if (v18 != (char *)buf) {
            free(v18);
          }
        }
        [*(id *)(a1 + 88) findBuildingsNear:*(unsigned int *)(a1 + 120) radius:v24 tileSetStyle:v20 handler:v8 completionHandler:v9];
      }
      else
      {
        if (qword_102419400 != -1) {
          dispatch_once(&qword_102419400, &stru_1022CFFB0);
        }
        int v16 = qword_102419408;
        if (os_log_type_enabled((os_log_t)qword_102419408, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)uint64_t buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "clrgmd,Invalid query center coordinate", buf, 2u);
        }
        if (sub_10013D1A0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419400 != -1) {
            dispatch_once(&qword_102419400, &stru_1022CFFB0);
          }
          LOWORD(v26) = 0;
          __int16 v19 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 0, "void CLRavenGeoMapBuildingDataManager::QueryAndSerializeBuildingData(const CLClientLocationCoordinate &, std::weak_ptr<CLRavenController>)", "%s\n", v19);
          if (v19 != (char *)buf) {
            free(v19);
          }
        }
      }
    }
    if (v21) {
      std::__shared_weak_count::__release_weak(v21);
    }
    if (v14) {
      std::__shared_weak_count::__release_weak(v14);
    }
  }
}

void sub_1008C0E18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, std::__shared_weak_count *a18)
{
  if (a18) {
    std::__shared_weak_count::__release_weak(a18);
  }
  if (v18) {
    std::__shared_weak_count::__release_weak(v18);
  }
  _Unwind_Resume(exception_object);
}

void sub_1008C0E4C(uint64_t a1, void *a2)
{
  if (!a2)
  {
    if (qword_102419400 != -1) {
      dispatch_once(&qword_102419400, &stru_1022CFFB0);
    }
    BOOL v5 = qword_102419408;
    if (os_log_type_enabled((os_log_t)qword_102419408, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "clrgmd,Returned building data has invalid memory location", buf, 2u);
    }
    if (!sub_10013D1A0(115, 0)) {
      return;
    }
    bzero(buf, 0x65CuLL);
    if (qword_102419400 == -1)
    {
LABEL_20:
      char v7 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "void CLRavenGeoMapBuildingDataManager::QueryAndSerializeBuildingData(const CLClientLocationCoordinate &, std::weak_ptr<CLRavenController>)_block_invoke", "%s\n", v7);
      if (v7 != (char *)buf) {
        free(v7);
      }
      return;
    }
LABEL_22:
    dispatch_once(&qword_102419400, &stru_1022CFFB0);
    goto LABEL_20;
  }
  if (objc_msgSend(objc_msgSend(a2, "sections"), "count"))
  {
    double v4 = *(void **)(a1 + 32);
    [v4 addObject:a2];
    return;
  }
  if (qword_102419400 != -1) {
    dispatch_once(&qword_102419400, &stru_1022CFFB0);
  }
  double v6 = qword_102419408;
  if (os_log_type_enabled((os_log_t)qword_102419408, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "clrgmd,No sections found in the building data", buf, 2u);
  }
  if (sub_10013D1A0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419400 == -1) {
      goto LABEL_20;
    }
    goto LABEL_22;
  }
}

void sub_1008C1110(uint64_t a1, void *a2)
{
  id v3 = *(std::__shared_weak_count **)(a1 + 56);
  if (v3)
  {
    uint64_t v5 = *(void *)(a1 + 40);
    double v6 = std::__shared_weak_count::lock(v3);
    if (v6)
    {
      uint64_t v7 = *(void *)(a1 + 48);
      if (v7)
      {
        if (a2)
        {
          if (qword_102419400 != -1) {
            dispatch_once(&qword_102419400, &stru_1022CFFB0);
          }
          double v8 = qword_102419408;
          if (os_log_type_enabled((os_log_t)qword_102419408, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)uint64_t buf = 134349571;
            id v16 = [a2 code];
            __int16 v17 = 2114;
            id v18 = [a2 domain];
            __int16 v19 = 2113;
            id v20 = [a2 localizedDescription];
            _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "clrgmd,Building data query, error:%{public}lld (%{public}@) \"%{private}@\"", buf, 0x20u);
          }
          if (!sub_10013D1A0(115, 0)) {
            goto LABEL_29;
          }
          bzero(buf, 0x65CuLL);
          if (qword_102419400 != -1) {
            dispatch_once(&qword_102419400, &stru_1022CFFB0);
          }
          [a2 code];
          [a2 domain];
          [a2 localizedDescription];
          double v9 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 0, "void CLRavenGeoMapBuildingDataManager::QueryAndSerializeBuildingData(const CLClientLocationCoordinate &, std::weak_ptr<CLRavenController>)_block_invoke", "%s\n", v9);
          if (v9 == (char *)buf) {
            goto LABEL_29;
          }
        }
        else
        {
          if ([*(id *)(a1 + 32) count])
          {
            sub_100CDEE84(v7, *(void **)(a1 + 32), (double *)(a1 + 64), (double *)(a1 + 80));
            goto LABEL_29;
          }
          if (qword_102419400 != -1) {
            dispatch_once(&qword_102419400, &stru_1022CFFB0);
          }
          int v11 = qword_102419408;
          if (os_log_type_enabled((os_log_t)qword_102419408, OS_LOG_TYPE_DEBUG))
          {
            *(_WORD *)uint64_t buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "clrgmd,No building data obtained from the query", buf, 2u);
          }
          if (!sub_10013D1A0(115, 2)) {
            goto LABEL_29;
          }
          bzero(buf, 0x65CuLL);
          if (qword_102419400 != -1) {
            dispatch_once(&qword_102419400, &stru_1022CFFB0);
          }
          double v9 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLRavenGeoMapBuildingDataManager::QueryAndSerializeBuildingData(const CLClientLocationCoordinate &, std::weak_ptr<CLRavenController>)_block_invoke", "%s\n", v9);
          if (v9 == (char *)buf) {
            goto LABEL_29;
          }
        }
        free(v9);
LABEL_29:
        [*(id *)(v5 + 88) clearBuildingTiles];
        if (*(void *)v5)
        {

          *(void *)uint64_t v5 = 0;
        }
        if (qword_102419400 != -1) {
          dispatch_once(&qword_102419400, &stru_1022CFFB0);
        }
        double v12 = qword_102419408;
        if (os_log_type_enabled((os_log_t)qword_102419408, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)uint64_t buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "clrgmd,Completed Handling of building data in GEOMapFeatureAccessCompletionHandler", buf, 2u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419400 != -1) {
            dispatch_once(&qword_102419400, &stru_1022CFFB0);
          }
          int v14 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLRavenGeoMapBuildingDataManager::QueryAndSerializeBuildingData(const CLClientLocationCoordinate &, std::weak_ptr<CLRavenController>)_block_invoke", "%s\n", v14);
          if (v14 != (char *)buf) {
            free(v14);
          }
        }
        *(unsigned char *)(v5 + 306) = 0;
LABEL_37:
        sub_1000DB0A0(v6);
        return;
      }
    }
  }
  else
  {
    double v6 = 0;
  }
  if (qword_102419400 != -1) {
    dispatch_once(&qword_102419400, &stru_1022CFFB0);
  }
  id v10 = qword_102419408;
  if (os_log_type_enabled((os_log_t)qword_102419408, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "clrgmd,Building data query's CompletionHandler called after Raven controller deletion", buf, 2u);
  }
  if (sub_10013D1A0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419400 != -1) {
      dispatch_once(&qword_102419400, &stru_1022CFFB0);
    }
    uint64_t v13 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "void CLRavenGeoMapBuildingDataManager::QueryAndSerializeBuildingData(const CLClientLocationCoordinate &, std::weak_ptr<CLRavenController>)_block_invoke", "%s\n", v13);
    if (v13 != (char *)buf) {
      free(v13);
    }
  }
  if (v6) {
    goto LABEL_37;
  }
}

void sub_1008C1734(_Unwind_Exception *a1)
{
  sub_1000DB0A0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1008C176C(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 56);
  *(void *)(result + 48) = *(void *)(a2 + 48);
  *(void *)(result + 56) = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 16), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_1008C1788(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 56);
  if (v1) {
    std::__shared_weak_count::__release_weak(v1);
  }
}

CLOSTransaction *sub_1008C1798(CLOSTransaction *result)
{
  if (!result->super.isa)
  {
    p_isa = &result->super.isa;
    p_description = &result->_description;
    if (SHIBYTE(result[1].super.isa) < 0) {
      p_description = (NSString **)*p_description;
    }
    uint64_t result = [[CLOSTransaction alloc] initWithDescription:p_description];
    void *p_isa = result;
  }
  return result;
}

id sub_1008C17E8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 80)) {
    *(unsigned char *)(a1 + 80) = 0;
  }
  id result = *(id *)(a1 + 88);
  if (result)
  {
    [result setAllowNetworkTileLoad:1];
    id result = [*(id *)(a1 + 88) setAllowStaleData:1];
  }
  if (*(unsigned char *)(a1 + 112)) {
    *(unsigned char *)(a1 + 112) = 0;
  }
  *(unsigned char *)(a1 + 306) = 0;
  return result;
}

__n128 sub_1008C1840(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 136) = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 184) = v4;
  *(_OWORD *)(a1 + 168) = v3;
  *(_OWORD *)(a1 + 152) = v2;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 264) = *(void *)(a2 + 128);
  *(_OWORD *)(a1 + 248) = v7;
  *(_OWORD *)(a1 + 232) = v6;
  *(__n128 *)(a1 + 216) = result;
  return result;
}

void sub_1008C1880(uint64_t a1, int a2)
{
}

void sub_1008C1888(uint64_t a1, int *a2, char *a3)
{
  int v3 = *a2;
  if (*a2 == 15)
  {
    sub_100F34228(a1 + 272, *a3);
  }
  else if (v3 == 13)
  {
    sub_100F3419C(a1 + 272, *(_DWORD *)a3);
  }
  else if (v3 == 7)
  {
    double v4 = *(double *)a3;
    if (*(double *)a3 >= 0.0 && v4 <= 100.0) {
      sub_100F342A0(a1 + 272, v4);
    }
  }
}

void sub_1008C18E8(id a1)
{
  qword_102419408 = (uint64_t)os_log_create("com.apple.locationd.Position", "Raven");
}

void sub_1008C1918(id a1)
{
  qword_102419438 = (uint64_t)os_log_create("com.apple.locationd.Position", "MapMatcher");
}

uint64_t sub_1008C1948()
{
  sub_100134750(qword_10247EDB0, "VO2MaxPowerBudgetEstimatorLastExtendedBudgetAllotmentReason");

  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247EDB0, (void *)&_mh_execute_header);
}

void sub_1008C19A8(void *a1, uint64_t a2)
{
  a1[2] = 0;
  *a1 = 0;
  a1[1] = a2;
  a1[3] = 0;
  a1[4] = 0;
  if (qword_1024193E0 != -1) {
    dispatch_once(&qword_1024193E0, &stru_1022CFFF0);
  }
  long long v2 = qword_1024193E8;
  if (os_log_type_enabled((os_log_t)qword_1024193E8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = 68289026;
    __int16 v4 = 2082;
    uint64_t v5 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#emgalert,init\"}", (uint8_t *)&v3, 0x12u);
  }
  sub_10060F068();
}

void sub_1008C1C24(_Unwind_Exception *a1)
{
  uint64_t v4 = v1[4];
  v1[4] = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  uint64_t v5 = *v2;
  *long long v2 = 0;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  sub_1008C25D0(v1, 0);
  _Unwind_Resume(a1);
}

void sub_1008C1CD0(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 8), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022D0010);
  }
  BOOL v6 = os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG);
  if (v6)
  {
    char v11 = 1;
    double v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLEmergencyAlertInterface::onDaemonStatusNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022D0010);
    }
    double v9 = qword_102419588;
    BOOL v6 = os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG);
    if (v6)
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      double v15 = "";
      __int16 v16 = 2082;
      __int16 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLEmergencyAlertInterface::onDaemonStatusNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_1008C2128(v6, v7, a2);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1008C1E80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1008C1EA0(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 8), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022D0010);
  }
  BOOL v6 = os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG);
  if (v6)
  {
    char v11 = 1;
    double v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLEmergencyAlertInterface::onClientManagerNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022D0010);
    }
    double v9 = qword_102419588;
    BOOL v6 = os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG);
    if (v6)
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      double v15 = "";
      __int16 v16 = 2082;
      __int16 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLEmergencyAlertInterface::onClientManagerNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_1008C2220(v6, v7, a2);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1008C2050(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1008C2074(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2) {
    [*(id *)(v2 + 16) unregister:*(void *)(v2 + 8) forNotification:4];
  }

  uint64_t v3 = *(void *)(a1 + 32);
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  uint64_t v4 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  sub_1008C25D0((uint64_t *)a1, 0);
  return a1;
}

void sub_1008C2128(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  if (*a3 == 6)
  {
    if (qword_1024193E0 != -1) {
      dispatch_once(&qword_1024193E0, &stru_1022CFFF0);
    }
    uint64_t v3 = qword_1024193E8;
    if (os_log_type_enabled((os_log_t)qword_1024193E8, OS_LOG_TYPE_DEFAULT))
    {
      v4[0] = 68289026;
      v4[1] = 0;
      __int16 v5 = 2082;
      BOOL v6 = "";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#emgalert,kNotificationReachability\"}", (uint8_t *)v4, 0x12u);
    }
    [+[SafetyAlerts sharedInterface](SafetyAlerts, "sharedInterface") onNetworkConnectivityChanged:0];
  }
}

void sub_1008C2220(uint64_t a1, uint64_t a2, int *a3)
{
  if (qword_1024193D0 != -1) {
    dispatch_once(&qword_1024193D0, &stru_1022D0030);
  }
  uint64_t v4 = qword_1024193D8;
  if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEBUG))
  {
    int v5 = *a3;
    *(_DWORD *)uint64_t buf = 67240192;
    int v11 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "#emgalert,LS Notification,type,%{public}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022D0030);
    }
    double v8 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLEmergencyAlertInterface::onClientManagerNotification(int, const CLClientManager_Type::Notification &, const CLClientManager_Type::NotificationData &)", "%s\n", v8);
    if (v8 != (char *)buf) {
      free(v8);
    }
  }
  if (*a3 == 4)
  {
    [+[SafetyAlerts sharedInterface](SafetyAlerts, "sharedInterface") onSignificantEventDetected:0];
  }
  else
  {
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022D0030);
    }
    BOOL v6 = qword_1024193D8;
    if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEBUG))
    {
      int v7 = *a3;
      *(_DWORD *)uint64_t buf = 67240192;
      int v11 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "#emgalert,#Warning,unhandled LS notification,%{public}d", buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193D0 != -1) {
        dispatch_once(&qword_1024193D0, &stru_1022D0030);
      }
      double v9 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLEmergencyAlertInterface::onClientManagerNotification(int, const CLClientManager_Type::Notification &, const CLClientManager_Type::NotificationData &)", "%s\n", v9);
      if (v9 != (char *)buf) {
        free(v9);
      }
    }
  }
}

void sub_1008C2540(id a1)
{
  qword_1024193E8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Emergency");
}

void sub_1008C2570(id a1)
{
  qword_102419588 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_1008C25A0(id a1)
{
  qword_1024193D8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Gnss");
}

uint64_t sub_1008C25D0(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_100F7D624();
    operator delete();
  }
  return result;
}

uint64_t sub_1008C2BC4(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        unint64_t v6 = 0;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        char v13 = 0;
        unsigned int v14 = 0;
        uint64_t v15 = 0;
        *(unsigned char *)(a1 + 44) |= 0x10u;
        while (1)
        {
          uint64_t v16 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v17 = v16 + 1;
          if (v16 == -1 || v17 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v18 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v16);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v17;
          v15 |= (unint64_t)(v18 & 0x7F) << v13;
          if ((v18 & 0x80) == 0) {
            goto LABEL_55;
          }
          v13 += 7;
          BOOL v10 = v14++ >= 9;
          if (v10)
          {
            LODWORD(v15) = 0;
            goto LABEL_57;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_55:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v15) = 0;
        }
LABEL_57:
        uint64_t v38 = 40;
        goto LABEL_70;
      case 2u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v15 = 0;
        *(unsigned char *)(a1 + 44) |= 4u;
        while (2)
        {
          uint64_t v21 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v22 = v21 + 1;
          if (v21 == -1 || v22 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v23 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v21);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v22;
            v15 |= (unint64_t)(v23 & 0x7F) << v19;
            if (v23 < 0)
            {
              v19 += 7;
              BOOL v10 = v20++ >= 9;
              if (v10)
              {
                LODWORD(v15) = 0;
                goto LABEL_61;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v15) = 0;
        }
LABEL_61:
        uint64_t v38 = 32;
        goto LABEL_70;
      case 3u:
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v15 = 0;
        *(unsigned char *)(a1 + 44) |= 8u;
        while (2)
        {
          uint64_t v26 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v27 = v26 + 1;
          if (v26 == -1 || v27 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v28 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v26);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v27;
            v15 |= (unint64_t)(v28 & 0x7F) << v24;
            if (v28 < 0)
            {
              v24 += 7;
              BOOL v10 = v25++ >= 9;
              if (v10)
              {
                LODWORD(v15) = 0;
                goto LABEL_65;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v15) = 0;
        }
LABEL_65:
        uint64_t v38 = 36;
        goto LABEL_70;
      case 4u:
        *(unsigned char *)(a1 + 44) |= 1u;
        unint64_t v29 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v29 <= 0xFFFFFFFFFFFFFFF7 && v29 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v30 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v29);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v29 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v30 = 0;
        }
        *(void *)(a1 + 8) = v30;
        goto LABEL_71;
      case 5u:
        char v31 = 0;
        unsigned int v32 = 0;
        uint64_t v15 = 0;
        *(unsigned char *)(a1 + 44) |= 2u;
        while (2)
        {
          uint64_t v33 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v34 = v33 + 1;
          if (v33 == -1 || v34 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v35 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v33);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v34;
            v15 |= (unint64_t)(v35 & 0x7F) << v31;
            if (v35 < 0)
            {
              v31 += 7;
              BOOL v10 = v32++ >= 9;
              if (v10)
              {
                LODWORD(v15) = 0;
                goto LABEL_69;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v15) = 0;
        }
LABEL_69:
        uint64_t v38 = 16;
LABEL_70:
        *(_DWORD *)(a1 + v38) = v15;
        goto LABEL_71;
      case 7u:
        uint64_t v37 = objc_alloc_init(TRANSITPbTransitMac);
        [(id)a1 addMacs:v37];

        if PBReaderPlaceMark() && (sub_100DE7038((uint64_t)v37, a2))
        {
          PBReaderRecallMark();
LABEL_71:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_71;
    }
  }
}

uint64_t sub_1008C3A80()
{
  if (qword_10248A418) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A418 + 8))(qword_10248A418);
  }
  if (qword_10248A420) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A420 + 8))(qword_10248A420);
  }
  if (qword_10248A428) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A428 + 8))(qword_10248A428);
  }
  if (qword_10248A430) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A430 + 8))(qword_10248A430);
  }
  if (qword_10248A438) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A438 + 8))(qword_10248A438);
  }
  if (qword_10248A440) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A440 + 8))(qword_10248A440);
  }
  if (qword_10248A448) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A448 + 8))(qword_10248A448);
  }
  if (qword_10248A450) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A450 + 8))(qword_10248A450);
  }
  if (qword_10248A458) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A458 + 8))(qword_10248A458);
  }
  if (qword_10248A460) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A460 + 8))(qword_10248A460);
  }
  if (qword_10248A468) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A468 + 8))(qword_10248A468);
  }
  if (qword_10248A470) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A470 + 8))(qword_10248A470);
  }
  if (qword_10248A478) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A478 + 8))(qword_10248A478);
  }
  if (qword_10248A480) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A480 + 8))(qword_10248A480);
  }
  if (qword_10248A488) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A488 + 8))(qword_10248A488);
  }
  if (qword_10248A490) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A490 + 8))(qword_10248A490);
  }
  if (qword_10248A498) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A498 + 8))(qword_10248A498);
  }
  if (qword_10248A4A0) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A4A0 + 8))(qword_10248A4A0);
  }
  if (qword_10248A4A8) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A4A8 + 8))(qword_10248A4A8);
  }
  if (qword_10248A4B0) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A4B0 + 8))(qword_10248A4B0);
  }
  if (qword_10248A4B8) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A4B8 + 8))(qword_10248A4B8);
  }
  if (qword_10248A4C0) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A4C0 + 8))(qword_10248A4C0);
  }
  if (qword_10248A4C8) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A4C8 + 8))(qword_10248A4C8);
  }
  if (qword_10248A4D0) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A4D0 + 8))(qword_10248A4D0);
  }
  if (qword_10248A4D8) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A4D8 + 8))(qword_10248A4D8);
  }
  if (qword_10248A4E0) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A4E0 + 8))(qword_10248A4E0);
  }
  if (qword_10248A4E8) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A4E8 + 8))(qword_10248A4E8);
  }
  if (qword_10248A4F0) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A4F0 + 8))(qword_10248A4F0);
  }
  if (qword_10248A4F8) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A4F8 + 8))(qword_10248A4F8);
  }
  if (qword_10248A500) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A500 + 8))(qword_10248A500);
  }
  if (qword_10248A508) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A508 + 8))(qword_10248A508);
  }
  if (qword_10248A510) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A510 + 8))(qword_10248A510);
  }
  if (qword_10248A518) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A518 + 8))(qword_10248A518);
  }
  if (qword_10248A520) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A520 + 8))(qword_10248A520);
  }
  if (qword_10248A528) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A528 + 8))(qword_10248A528);
  }
  if (qword_10248A530) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A530 + 8))(qword_10248A530);
  }
  if (qword_10248A538) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A538 + 8))(qword_10248A538);
  }
  if (qword_10248A540) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A540 + 8))(qword_10248A540);
  }
  if (qword_10248A548) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A548 + 8))(qword_10248A548);
  }
  if (qword_10248A550) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A550 + 8))(qword_10248A550);
  }
  if (qword_10248A558) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A558 + 8))(qword_10248A558);
  }
  if (qword_10248A560) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A560 + 8))(qword_10248A560);
  }
  if (qword_10248A568) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A568 + 8))(qword_10248A568);
  }
  if (qword_10248A570) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A570 + 8))(qword_10248A570);
  }
  if (qword_10248A578) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A578 + 8))(qword_10248A578);
  }
  if (qword_10248A580) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A580 + 8))(qword_10248A580);
  }
  if (qword_10248A588) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A588 + 8))(qword_10248A588);
  }
  if (qword_10248A590) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A590 + 8))(qword_10248A590);
  }
  if (qword_10248A598) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A598 + 8))(qword_10248A598);
  }
  if (qword_10248A5A0) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A5A0 + 8))(qword_10248A5A0);
  }
  if (qword_10248A5A8) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A5A8 + 8))(qword_10248A5A8);
  }
  if (qword_10248A5B0) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A5B0 + 8))(qword_10248A5B0);
  }
  if (qword_10248A5B8) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A5B8 + 8))(qword_10248A5B8);
  }
  if (qword_10248A5C0) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A5C0 + 8))(qword_10248A5C0);
  }
  if (qword_10248A5C8) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A5C8 + 8))(qword_10248A5C8);
  }
  if (qword_10248A5D0) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A5D0 + 8))(qword_10248A5D0);
  }
  if (qword_10248A5D8) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A5D8 + 8))(qword_10248A5D8);
  }
  if (qword_10248A5E0) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A5E0 + 8))(qword_10248A5E0);
  }
  if (qword_10248A5E8) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A5E8 + 8))(qword_10248A5E8);
  }
  if (qword_10248A5F0) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A5F0 + 8))(qword_10248A5F0);
  }
  if (qword_10248A5F8) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A5F8 + 8))(qword_10248A5F8);
  }
  if (qword_10248A600) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A600 + 8))(qword_10248A600);
  }
  if (qword_10248A608) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A608 + 8))(qword_10248A608);
  }
  if (qword_10248A610) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A610 + 8))(qword_10248A610);
  }
  if (qword_10248A618) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A618 + 8))(qword_10248A618);
  }
  if (qword_10248A620) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A620 + 8))(qword_10248A620);
  }
  if (qword_10248A628) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A628 + 8))(qword_10248A628);
  }
  if (qword_10248A630) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A630 + 8))(qword_10248A630);
  }
  if (qword_10248A638) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A638 + 8))(qword_10248A638);
  }
  if (qword_10248A640) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A640 + 8))(qword_10248A640);
  }
  if (qword_10248A648) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A648 + 8))(qword_10248A648);
  }
  if (qword_10248A650) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A650 + 8))(qword_10248A650);
  }
  if (qword_10248A658) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A658 + 8))(qword_10248A658);
  }
  if (qword_10248A660) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A660 + 8))(qword_10248A660);
  }
  if (qword_10248A668) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A668 + 8))(qword_10248A668);
  }
  if (qword_10248A670) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A670 + 8))(qword_10248A670);
  }
  if (qword_10248A678) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A678 + 8))(qword_10248A678);
  }
  if (qword_10248A680) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A680 + 8))(qword_10248A680);
  }
  if (qword_10248A688) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A688 + 8))(qword_10248A688);
  }
  if (qword_10248A690) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A690 + 8))(qword_10248A690);
  }
  if (qword_10248A698) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A698 + 8))(qword_10248A698);
  }
  if (qword_10248A6A0) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A6A0 + 8))(qword_10248A6A0);
  }
  if (qword_10248A6A8) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A6A8 + 8))(qword_10248A6A8);
  }
  if (qword_10248A6B0) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A6B0 + 8))(qword_10248A6B0);
  }
  if (qword_10248A6B8) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A6B8 + 8))(qword_10248A6B8);
  }
  if (qword_10248A6C0) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A6C0 + 8))(qword_10248A6C0);
  }
  if (qword_10248A6C8) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A6C8 + 8))(qword_10248A6C8);
  }
  if (qword_10248A6D0) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A6D0 + 8))(qword_10248A6D0);
  }
  if (qword_10248A6D8) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A6D8 + 8))(qword_10248A6D8);
  }
  if (qword_10248A6E0) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A6E0 + 8))(qword_10248A6E0);
  }
  if (qword_10248A6E8) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A6E8 + 8))(qword_10248A6E8);
  }
  if (qword_10248A6F0) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A6F0 + 8))(qword_10248A6F0);
  }
  if (qword_10248A6F8) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A6F8 + 8))(qword_10248A6F8);
  }
  if (qword_10248A700) {
    (*(void (**)(uint64_t))(*(void *)qword_10248A700 + 8))(qword_10248A700);
  }
  uint64_t result = qword_10248A708;
  if (qword_10248A708)
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)qword_10248A708 + 8);
    return v1();
  }
  return result;
}

void sub_1008C4C78(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_10247EDC8 & 1) == 0)
  {
    byte_10247EDC8 = 1;
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/GnssEmergencyTypes.pb.cc", a4);
    sub_1007480C0(v4, v5, v6, v7);
    operator new();
  }
}

uint64_t sub_1008C6F94(uint64_t result)
{
  *(_WORD *)(result + 16) = 0;
  *(void *)uint64_t result = off_1022D0060;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 20) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

double sub_1008C6FBC(uint64_t a1)
{
  *(void *)a1 = off_1022D00D8;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_WORD *)(a1 + 104) = 0;
  *(void *)(a1 + 116) = 0;
  *(void *)(a1 + 108) = 0;
  *(_DWORD *)(a1 + 124) = 0;
  return result;
}

void *sub_1008C7008(void *result)
{
  *double result = off_1022D0150;
  result[1] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  result[2] = 0;
  result[3] = 0;
  return result;
}

double sub_1008C7034(uint64_t a1)
{
  *(void *)a1 = off_1022D01C8;
  *(unsigned char *)(a1 + 8) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 12) = 0u;
  *(_OWORD *)(a1 + 28) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return result;
}

uint64_t sub_1008C7068(uint64_t result)
{
  *(void *)double result = off_1022D0240;
  *(unsigned char *)(result + 8) = 0;
  *(void *)(result + 12) = 0;
  *(void *)(result + 28) = 0;
  *(void *)(result + 20) = 0;
  return result;
}

double sub_1008C7098(uint64_t a1)
{
  *(void *)a1 = off_1022D02B8;
  *(unsigned char *)(a1 + 8) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 12) = 0u;
  *(_OWORD *)(a1 + 28) = 0u;
  *(_DWORD *)(a1 + 44) = 0;
  return result;
}

uint64_t sub_1008C70CC(uint64_t result)
{
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)double result = off_1022D0330;
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(_DWORD *)(result + 72) = 0;
  *(void *)(result + 80) = 0;
  *(_DWORD *)(result + 88) = 0;
  return result;
}

uint64_t sub_1008C710C(uint64_t result)
{
  *(void *)double result = off_1022D03A8;
  *(_DWORD *)(result + 8) = 0;
  *(unsigned char *)(result + 12) = 0;
  *(void *)(result + 16) = 0;
  return result;
}

uint64_t sub_1008C7138(uint64_t result)
{
  *(void *)double result = off_1022D0420;
  *(void *)(result + 8) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(_WORD *)(result + 16) = 0;
  *(_DWORD *)(result + 32) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1008C7170(uint64_t result)
{
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)double result = off_1022D0498;
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

double sub_1008C71A0(uint64_t a1)
{
  *(void *)a1 = off_1022D06F0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 36) = 0u;
  return result;
}

void *sub_1008C71D0(void *result)
{
  *double result = off_1022D0768;
  result[1] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  result[2] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  result[3] = 0;
  result[4] = 0;
  result[5] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  result[6] = 0;
  return result;
}

double sub_1008C7204(uint64_t a1)
{
  *(void *)a1 = off_1022D07E0;
  *(_DWORD *)(a1 + 100) = 0;
  *(_DWORD *)(a1 + 104) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 83) = 0u;
  return result;
}

double sub_1008C7244(uint64_t a1)
{
  *(void *)a1 = off_1022D0A38;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 68) = 0u;
  return result;
}

double sub_1008C727C(uint64_t a1)
{
  *(void *)a1 = off_1022D1848;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 52) = 0u;
  return result;
}

double sub_1008C72B0(uint64_t a1)
{
  *(void *)a1 = off_1022D1B90;
  *(void *)(a1 + 48) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 37) = 0;
  return result;
}

double sub_1008C72E4(uint64_t a1)
{
  *(void *)a1 = off_1022D1FC8;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = 0;
  return result;
}

void *sub_1008C7314(void *result)
{
  result[1] = 0;
  result[2] = 0;
  *double result = off_1022D2130;
  return result;
}

uint64_t sub_1008C7338(uint64_t result)
{
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)double result = off_1022D21A8;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void *sub_1008C7360(void *result)
{
  *double result = &off_1022D2220;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_1008C7384(void *result)
{
  *double result = off_1022D2298;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_1008C73A8(uint64_t result)
{
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)double result = &off_1022D2310;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1008C73D0(uint64_t result)
{
  *(void *)double result = off_1022D2388;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_1008C73F8(uint64_t a1)
{
  *(void *)a1 = off_1022D2400;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 48) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_DWORD *)(a1 + 40) = 0;
  return result;
}

double sub_1008C7430(uint64_t a1)
{
  *(void *)a1 = off_1022D2478;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  return result;
}

double sub_1008C7464(uint64_t a1)
{
  *(void *)a1 = off_1022D24F0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_DWORD *)(a1 + 152) = 0;
  return result;
}

uint64_t sub_1008C74B0(uint64_t result)
{
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)double result = off_1022D2568;
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(void *)(result + 32) = 0;
  return result;
}

uint64_t sub_1008C74E0(uint64_t result)
{
  *(void *)double result = off_1022D25E0;
  *(unsigned char *)(result + 8) = 0;
  *(_DWORD *)(result + 12) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void *sub_1008C7508(void *result)
{
  *double result = off_1022D2658;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_1008C752C(uint64_t result)
{
  *(unsigned char *)(result + 32) = 0;
  *(void *)double result = off_1022D26D0;
  *(void *)(result + 8) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(_DWORD *)(result + 36) = 0;
  *(_DWORD *)(result + 40) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  return result;
}

double sub_1008C7560(uint64_t a1)
{
  *(void *)a1 = off_1022D2748;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 52) = 0u;
  return result;
}

double sub_1008C7594(uint64_t a1)
{
  *(void *)a1 = off_1022D27C0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 48) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_DWORD *)(a1 + 40) = 0;
  return result;
}

uint64_t sub_1008C75CC(uint64_t result)
{
  *(void *)double result = off_1022D2838;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void *sub_1008C75F0(void *result)
{
  *double result = &off_1022D28B0;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

double sub_1008C7614(uint64_t a1)
{
  *(void *)a1 = off_1022D2BF8;
  *(void *)(a1 + 48) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 37) = 0;
  return result;
}

uint64_t sub_1008C7648(uint64_t result)
{
  *(void *)double result = off_1022D2C70;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1008C766C(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_10248A468;
  if (!qword_10248A468)
  {
    double result = sub_1008C4C78();
    uint64_t v2 = qword_10248A468;
  }
  v1[1] = v2;
  uint64_t v3 = qword_10248A470;
  if (!qword_10248A470)
  {
    double result = sub_1008C4C78();
    uint64_t v3 = qword_10248A470;
  }
  v1[2] = v3;
  uint64_t v4 = qword_10248A478;
  if (!qword_10248A478)
  {
    double result = sub_1008C4C78();
    uint64_t v4 = qword_10248A478;
  }
  v1[3] = v4;
  uint64_t v5 = qword_10248A480;
  if (!qword_10248A480)
  {
    double result = sub_1008C4C78();
    uint64_t v5 = qword_10248A480;
  }
  v1[4] = v5;
  return result;
}

uint64_t sub_1008C76EC(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_10248A540;
  if (!qword_10248A540)
  {
    double result = sub_1008C4C78();
    uint64_t v2 = qword_10248A540;
  }
  v1[1] = v2;
  uint64_t v3 = qword_10248A548;
  if (!qword_10248A548)
  {
    double result = sub_1008C4C78();
    uint64_t v3 = qword_10248A548;
  }
  v1[2] = v3;
  uint64_t v4 = qword_10248A550;
  if (!qword_10248A550)
  {
    double result = sub_1008C4C78();
    uint64_t v4 = qword_10248A550;
  }
  v1[3] = v4;
  uint64_t v5 = qword_10248A558;
  if (!qword_10248A558)
  {
    double result = sub_1008C4C78();
    uint64_t v5 = qword_10248A558;
  }
  v1[4] = v5;
  uint64_t v6 = qword_10248A538;
  if (!qword_10248A538)
  {
    double result = sub_1008C4C78();
    uint64_t v6 = qword_10248A538;
  }
  v1[5] = v6;
  uint64_t v7 = qword_10248A560;
  if (!qword_10248A560)
  {
    double result = sub_1008C4C78();
    uint64_t v7 = qword_10248A560;
  }
  v1[6] = v7;
  uint64_t v8 = qword_10248A568;
  if (!qword_10248A568)
  {
    double result = sub_1008C4C78();
    uint64_t v8 = qword_10248A568;
  }
  v1[7] = v8;
  return result;
}

uint64_t sub_1008C77B4(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_10248A580;
  if (!qword_10248A580)
  {
    double result = sub_1008C4C78();
    uint64_t v2 = qword_10248A580;
  }
  v1[1] = v2;
  uint64_t v3 = qword_10248A588;
  if (!qword_10248A588)
  {
    double result = sub_1008C4C78();
    uint64_t v3 = qword_10248A588;
  }
  v1[2] = v3;
  uint64_t v4 = qword_10248A590;
  if (!qword_10248A590)
  {
    double result = sub_1008C4C78();
    uint64_t v4 = qword_10248A590;
  }
  v1[3] = v4;
  uint64_t v5 = qword_10248A598;
  if (!qword_10248A598)
  {
    double result = sub_1008C4C78();
    uint64_t v5 = qword_10248A598;
  }
  v1[4] = v5;
  return result;
}

uint64_t sub_1008C7834(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_10248A4B8;
  if (!qword_10248A4B8)
  {
    double result = sub_1008C4C78();
    uint64_t v2 = qword_10248A4B8;
  }
  v1[2] = v2;
  uint64_t v3 = qword_10248A4F8;
  if (!qword_10248A4F8)
  {
    double result = sub_1008C4C78();
    uint64_t v3 = qword_10248A4F8;
  }
  v1[3] = v3;
  uint64_t v4 = qword_10248A530;
  if (!qword_10248A530)
  {
    double result = sub_1008C4C78();
    uint64_t v4 = qword_10248A530;
  }
  v1[4] = v4;
  uint64_t v5 = qword_10248A578;
  if (!qword_10248A578)
  {
    double result = sub_1008C4C78();
    uint64_t v5 = qword_10248A578;
  }
  v1[5] = v5;
  uint64_t v6 = qword_10248A5A8;
  if (!qword_10248A5A8)
  {
    double result = sub_1008C4C78();
    uint64_t v6 = qword_10248A5A8;
  }
  v1[6] = v6;
  return result;
}

BOOL sub_1008C78CC(unsigned int a1)
{
  return a1 < 7;
}

void sub_1008C78D8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      char v6 = *(unsigned char *)(a2 + 16);
      *(_DWORD *)(a1 + 24) |= 1u;
      *(unsigned char *)(a1 + 16) = v6;
      int v4 = *(_DWORD *)(a2 + 24);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 24) & 2) == 0)
    {
      goto LABEL_6;
    }
    char v7 = *(unsigned char *)(a2 + 17);
    *(_DWORD *)(a1 + 24) |= 2u;
    *(unsigned char *)(a1 + 17) = v7;
    if ((*(_DWORD *)(a2 + 24) & 4) == 0) {
      return;
    }
LABEL_7:
    uint64_t v5 = *(void *)(a2 + 8);
    *(_DWORD *)(a1 + 24) |= 4u;
    *(void *)(a1 + 8) = v5;
  }
}

void sub_1008C79AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008C79C4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D0060;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008C79E4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D0060;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008C7A38()
{
}

uint64_t sub_1008C7A88(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1008C7AA0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = (char *)*((void *)this + 1);
          if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v5;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v5 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v8 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_18;
          }
          v17[0] = 0;
          BOOL v10 = (char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
          if ((unint64_t)v10 >= v9 || *v10 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v17);
            if (!result) {
              return result;
            }
            unsigned int v11 = v17[0];
            double v12 = (unsigned char *)*((void *)this + 1);
            unint64_t v9 = *((void *)this + 2);
          }
          else
          {
            unsigned int v11 = *v10;
            double v12 = v10 + 1;
            *((void *)this + 1) = v12;
          }
          *(unsigned char *)(a1 + 16) = v11 != 0;
          *(_DWORD *)(a1 + 24) |= 1u;
          if ((unint64_t)v12 < v9 && *v12 == 16)
          {
            char v13 = v12 + 1;
            *((void *)this + 1) = v13;
            goto LABEL_26;
          }
        }
        if (v7 != 2) {
          break;
        }
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        char v13 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
LABEL_26:
        v17[0] = 0;
        if ((unint64_t)v13 >= v9 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v17);
          if (!result) {
            return result;
          }
          unsigned int v15 = v17[0];
          uint64_t v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unsigned int v15 = *v13;
          uint64_t v16 = v13 + 1;
          *((void *)this + 1) = v16;
        }
        *(unsigned char *)(a1 + 17) = v15 != 0;
        *(_DWORD *)(a1 + 24) |= 2u;
        if ((unint64_t)v16 < v9 && *v16 == 25)
        {
          *((void *)this + 1) = v16 + 1;
          goto LABEL_34;
        }
      }
      if (v7 != 3) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 1) {
        goto LABEL_18;
      }
LABEL_34:
      *(void *)unint64_t v17 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v17) & 1) == 0)return 0; {
      *(void *)(a1 + 8) = *(void *)v17;
      }
      *(_DWORD *)(a1 + 24) |= 4u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v8 = TagFallback & 7;
LABEL_18:
    if (v8 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return 0;
}

uint64_t sub_1008C7CB8(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 17), a2, a4);
    if ((*(_DWORD *)(v5 + 24) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 16), a2, a4);
  int v6 = *(_DWORD *)(v5 + 24);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  double v7 = *(double *)(v5 + 8);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, v7, a3);
}

uint64_t sub_1008C7D44(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24);
  unsigned int v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0) {
    v2 += 2;
  }
  if ((v1 & 4) != 0) {
    v2 |= 9u;
  }
  if (*(_DWORD *)(a1 + 24)) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_1008C7D7C(uint64_t a1, void *lpsrc)
{
  sub_1008C78D8(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008C7E04()
{
  return 1;
}

void *sub_1008C7E0C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.Configuration");
}

void sub_1008C7E1C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v24);
  }
  int v4 = *(_DWORD *)(a2 + 124);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      uint64_t v5 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 124) |= 1u;
      *(void *)(a1 + 8) = v5;
      int v4 = *(_DWORD *)(a2 + 124);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_15;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v6 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 124) |= 2u;
    *(void *)(a1 + 16) = v6;
    int v4 = *(_DWORD *)(a2 + 124);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_16;
    }
LABEL_15:
    uint64_t v7 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 124) |= 4u;
    *(void *)(a1 + 24) = v7;
    int v4 = *(_DWORD *)(a2 + 124);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_17;
    }
LABEL_16:
    uint64_t v8 = *(void *)(a2 + 32);
    *(_DWORD *)(a1 + 124) |= 8u;
    *(void *)(a1 + 32) = v8;
    int v4 = *(_DWORD *)(a2 + 124);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_18;
    }
LABEL_17:
    uint64_t v9 = *(void *)(a2 + 40);
    *(_DWORD *)(a1 + 124) |= 0x10u;
    *(void *)(a1 + 40) = v9;
    int v4 = *(_DWORD *)(a2 + 124);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0) {
        goto LABEL_11;
      }
      goto LABEL_19;
    }
LABEL_18:
    uint64_t v10 = *(void *)(a2 + 48);
    *(_DWORD *)(a1 + 124) |= 0x20u;
    *(void *)(a1 + 48) = v10;
    int v4 = *(_DWORD *)(a2 + 124);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_22;
      }
      goto LABEL_20;
    }
LABEL_19:
    int v11 = *(_DWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 124) |= 0x40u;
    *(_DWORD *)(a1 + 56) = v11;
    int v4 = *(_DWORD *)(a2 + 124);
    if ((v4 & 0x80) == 0) {
      goto LABEL_22;
    }
LABEL_20:
    unsigned int v12 = *(_DWORD *)(a2 + 60);
    if (v12 >= 0x12) {
      sub_101A73260();
    }
    *(_DWORD *)(a1 + 124) |= 0x80u;
    *(_DWORD *)(a1 + 60) = v12;
    int v4 = *(_DWORD *)(a2 + 124);
  }
LABEL_22:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_36;
  }
  if ((v4 & 0x100) != 0)
  {
    unsigned int v13 = *(_DWORD *)(a2 + 64);
    if (v13 >= 4) {
      sub_101A73234();
    }
    *(_DWORD *)(a1 + 124) |= 0x100u;
    *(_DWORD *)(a1 + 64) = v13;
    int v4 = *(_DWORD *)(a2 + 124);
  }
  if ((v4 & 0x200) != 0)
  {
    unsigned int v14 = *(_DWORD *)(a2 + 68);
    if (v14 >= 7) {
      sub_101A73208();
    }
    *(_DWORD *)(a1 + 124) |= 0x200u;
    *(_DWORD *)(a1 + 68) = v14;
    int v4 = *(_DWORD *)(a2 + 124);
  }
  if ((v4 & 0x400) != 0)
  {
    uint64_t v17 = *(void *)(a2 + 72);
    *(_DWORD *)(a1 + 124) |= 0x400u;
    *(void *)(a1 + 72) = v17;
    int v4 = *(_DWORD *)(a2 + 124);
    if ((v4 & 0x800) == 0)
    {
LABEL_31:
      if ((v4 & 0x1000) == 0) {
        goto LABEL_32;
      }
      goto LABEL_44;
    }
  }
  else if ((v4 & 0x800) == 0)
  {
    goto LABEL_31;
  }
  uint64_t v18 = *(void *)(a2 + 80);
  *(_DWORD *)(a1 + 124) |= 0x800u;
  *(void *)(a1 + 80) = v18;
  int v4 = *(_DWORD *)(a2 + 124);
  if ((v4 & 0x1000) == 0)
  {
LABEL_32:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t v19 = *(void *)(a2 + 88);
  *(_DWORD *)(a1 + 124) |= 0x1000u;
  *(void *)(a1 + 88) = v19;
  int v4 = *(_DWORD *)(a2 + 124);
  if ((v4 & 0x2000) == 0)
  {
LABEL_33:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_47;
  }
LABEL_45:
  unsigned int v20 = *(_DWORD *)(a2 + 96);
  if (v20 >= 8) {
    sub_101A731DC();
  }
  *(_DWORD *)(a1 + 124) |= 0x2000u;
  *(_DWORD *)(a1 + 96) = v20;
  int v4 = *(_DWORD *)(a2 + 124);
  if ((v4 & 0x4000) == 0)
  {
LABEL_34:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_35;
  }
LABEL_47:
  unsigned int v21 = *(_DWORD *)(a2 + 100);
  if (v21 >= 0x11) {
    sub_101A731B0();
  }
  *(_DWORD *)(a1 + 124) |= 0x4000u;
  *(_DWORD *)(a1 + 100) = v21;
  int v4 = *(_DWORD *)(a2 + 124);
  if ((v4 & 0x8000) != 0)
  {
LABEL_35:
    char v15 = *(unsigned char *)(a2 + 104);
    *(_DWORD *)(a1 + 124) |= 0x8000u;
    *(unsigned char *)(a1 + 104) = v15;
    int v4 = *(_DWORD *)(a2 + 124);
  }
LABEL_36:
  if ((v4 & 0xFF0000) == 0) {
    return;
  }
  if ((v4 & 0x10000) != 0)
  {
    char v22 = *(unsigned char *)(a2 + 105);
    *(_DWORD *)(a1 + 124) |= 0x10000u;
    *(unsigned char *)(a1 + 105) = v22;
    int v4 = *(_DWORD *)(a2 + 124);
    if ((v4 & 0x20000) == 0)
    {
LABEL_39:
      if ((v4 & 0x40000) == 0) {
        return;
      }
      goto LABEL_40;
    }
  }
  else if ((v4 & 0x20000) == 0)
  {
    goto LABEL_39;
  }
  uint64_t v23 = *(void *)(a2 + 112);
  *(_DWORD *)(a1 + 124) |= 0x20000u;
  *(void *)(a1 + 112) = v23;
  if ((*(_DWORD *)(a2 + 124) & 0x40000) != 0)
  {
LABEL_40:
    int v16 = *(_DWORD *)(a2 + 108);
    *(_DWORD *)(a1 + 124) |= 0x40000u;
    *(_DWORD *)(a1 + 108) = v16;
  }
}

void sub_1008C8138(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008C8150(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D00D8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008C8170(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D00D8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

uint64_t sub_1008C81C4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10248A420;
  if (!qword_10248A420)
  {
    sub_1008C4C78(0, a2, a3, a4);
    return qword_10248A420;
  }
  return result;
}

void sub_1008C81F4()
{
}

uint64_t sub_1008C8268(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 124);
  if ((_BYTE)v1)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_OWORD *)(result + 89) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(unsigned char *)(result + 105) = 0;
    *(void *)(result + 112) = 0;
    *(_DWORD *)(result + 108) = 0;
  }
  *(_DWORD *)(result + 124) = 0;
  return result;
}

uint64_t sub_1008C82B8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)(a1 + 112);
  uint64_t v6 = (unsigned int *)(a1 + 108);
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_67;
        }
        *(void *)long long v54 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v54) & 1) == 0)return 0; {
        *(void *)(a1 + 8) = *(void *)v54;
        }
        *(_DWORD *)(a1 + 124) |= 1u;
        uint64_t v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 != 17) {
          continue;
        }
        *((void *)this + 1) = v10 + 1;
        goto LABEL_15;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_67;
        }
LABEL_15:
        *(void *)long long v54 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v54) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v54;
        }
        *(_DWORD *)(a1 + 124) |= 2u;
        int v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 != 25) {
          continue;
        }
        *((void *)this + 1) = v11 + 1;
LABEL_20:
        *(void *)long long v54 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v54) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v54;
        }
        *(_DWORD *)(a1 + 124) |= 4u;
        unsigned int v12 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 != 33) {
          continue;
        }
        *((void *)this + 1) = v12 + 1;
LABEL_25:
        *(void *)long long v54 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v54) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v54;
        }
        *(_DWORD *)(a1 + 124) |= 8u;
        unsigned int v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 != 41) {
          continue;
        }
        *((void *)this + 1) = v13 + 1;
LABEL_30:
        *(void *)long long v54 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v54) & 1) == 0)return 0; {
        *(void *)(a1 + 40) = *(void *)v54;
        }
        *(_DWORD *)(a1 + 124) |= 0x10u;
        unsigned int v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 != 49) {
          continue;
        }
        *((void *)this + 1) = v14 + 1;
LABEL_35:
        *(void *)long long v54 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v54) & 1) == 0)return 0; {
        *(void *)(a1 + 48) = *(void *)v54;
        }
        *(_DWORD *)(a1 + 124) |= 0x20u;
        int v16 = (unsigned char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v16 >= v15 || *v16 != 56) {
          continue;
        }
        uint64_t v17 = v16 + 1;
        *((void *)this + 1) = v17;
LABEL_41:
        v54[0] = 0;
        if ((unint64_t)v17 >= v15 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v54);
          if (!result) {
            return result;
          }
          unsigned int v18 = v54[0];
          uint64_t v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int v18 = *v17;
          uint64_t v19 = v17 + 1;
          *((void *)this + 1) = v19;
        }
        *(_DWORD *)(a1 + 56) = v18;
        *(_DWORD *)(a1 + 124) |= 0x40u;
        if ((unint64_t)v19 >= v15 || *v19 != 64) {
          continue;
        }
        unsigned int v20 = v19 + 1;
        *((void *)this + 1) = v20;
LABEL_76:
        v54[0] = 0;
        if ((unint64_t)v20 >= v15 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v54);
          if (!result) {
            return result;
          }
          unsigned int v35 = v54[0];
        }
        else
        {
          unsigned int v35 = *v20;
          *((void *)this + 1) = v20 + 1;
        }
        if (v35 <= 0x11)
        {
          *(_DWORD *)(a1 + 124) |= 0x80u;
          *(_DWORD *)(a1 + 60) = v35;
        }
        __int16 v36 = (unsigned char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        if ((unint64_t)v36 >= v21 || *v36 != 72) {
          continue;
        }
        char v22 = v36 + 1;
        *((void *)this + 1) = v22;
LABEL_86:
        v54[0] = 0;
        if ((unint64_t)v22 >= v21 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v54);
          if (!result) {
            return result;
          }
          unsigned int v37 = v54[0];
        }
        else
        {
          unsigned int v37 = *v22;
          *((void *)this + 1) = v22 + 1;
        }
        if (v37 <= 3)
        {
          *(_DWORD *)(a1 + 124) |= 0x100u;
          *(_DWORD *)(a1 + 64) = v37;
        }
        uint64_t v38 = (unsigned char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        if ((unint64_t)v38 >= v23 || *v38 != 80) {
          continue;
        }
        char v24 = v38 + 1;
        *((void *)this + 1) = v24;
LABEL_96:
        v54[0] = 0;
        if ((unint64_t)v24 >= v23 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v54);
          if (!result) {
            return result;
          }
          unsigned int v39 = v54[0];
        }
        else
        {
          unsigned int v39 = *v24;
          *((void *)this + 1) = v24 + 1;
        }
        if (v39 <= 6)
        {
          *(_DWORD *)(a1 + 124) |= 0x200u;
          *(_DWORD *)(a1 + 68) = v39;
        }
        __int16 v40 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v40 >= *((void *)this + 2) || *v40 != 89) {
          continue;
        }
        *((void *)this + 1) = v40 + 1;
LABEL_106:
        *(void *)long long v54 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v54) & 1) == 0)return 0; {
        *(void *)(a1 + 72) = *(void *)v54;
        }
        *(_DWORD *)(a1 + 124) |= 0x400u;
        double v41 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v41 >= *((void *)this + 2) || *v41 != 97) {
          continue;
        }
        *((void *)this + 1) = v41 + 1;
LABEL_110:
        *(void *)long long v54 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v54) & 1) == 0)return 0; {
        *(void *)(a1 + 80) = *(void *)v54;
        }
        *(_DWORD *)(a1 + 124) |= 0x800u;
        __int16 v42 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v42 >= *((void *)this + 2) || *v42 != 105) {
          continue;
        }
        *((void *)this + 1) = v42 + 1;
LABEL_114:
        *(void *)long long v54 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v54))
        {
          *(void *)(a1 + 88) = *(void *)v54;
          *(_DWORD *)(a1 + 124) |= 0x1000u;
          double v43 = (unsigned char *)*((void *)this + 1);
          unint64_t v25 = *((void *)this + 2);
          if ((unint64_t)v43 < v25 && *v43 == 112)
          {
            uint64_t v26 = v43 + 1;
            *((void *)this + 1) = v26;
LABEL_118:
            v54[0] = 0;
            if ((unint64_t)v26 >= v25 || *v26 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v54);
              if (!result) {
                return result;
              }
              unsigned int v44 = v54[0];
            }
            else
            {
              unsigned int v44 = *v26;
              *((void *)this + 1) = v26 + 1;
            }
            if (v44 <= 7)
            {
              *(_DWORD *)(a1 + 124) |= 0x2000u;
              *(_DWORD *)(a1 + 96) = v44;
            }
            double v45 = (unsigned char *)*((void *)this + 1);
            unint64_t v27 = *((void *)this + 2);
            if ((unint64_t)v45 < v27 && *v45 == 120)
            {
              char v28 = v45 + 1;
              *((void *)this + 1) = v28;
LABEL_128:
              v54[0] = 0;
              if ((unint64_t)v28 >= v27 || *v28 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v54);
                if (!result) {
                  return result;
                }
                unsigned int v46 = v54[0];
              }
              else
              {
                unsigned int v46 = *v28;
                *((void *)this + 1) = v28 + 1;
              }
              if (v46 <= 0x10)
              {
                *(_DWORD *)(a1 + 124) |= 0x4000u;
                *(_DWORD *)(a1 + 100) = v46;
              }
              uint64_t v47 = (unsigned __int8 *)*((void *)this + 1);
              unint64_t v29 = *((void *)this + 2);
              if ((int)v29 - (int)v47 >= 2 && *v47 == 128 && v47[1] == 1)
              {
                uint64_t v30 = v47 + 2;
                *((void *)this + 1) = v30;
LABEL_139:
                v54[0] = 0;
                if ((unint64_t)v30 >= v29 || (char)*v30 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v54);
                  if (!result) {
                    return result;
                  }
                  unsigned int v48 = v54[0];
                  uint64_t v49 = (unsigned __int8 *)*((void *)this + 1);
                  unint64_t v29 = *((void *)this + 2);
                }
                else
                {
                  unsigned int v48 = *v30;
                  uint64_t v49 = v30 + 1;
                  *((void *)this + 1) = v49;
                }
                *(unsigned char *)(a1 + 104) = v48 != 0;
                *(_DWORD *)(a1 + 124) |= 0x8000u;
                if ((int)v29 - (int)v49 >= 2 && *v49 == 136 && v49[1] == 1)
                {
                  char v31 = v49 + 2;
                  *((void *)this + 1) = v31;
LABEL_148:
                  v54[0] = 0;
                  if ((unint64_t)v31 >= v29 || (char)*v31 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v54);
                    if (!result) {
                      return result;
                    }
                    unsigned int v50 = v54[0];
                    int v51 = (unsigned __int8 *)*((void *)this + 1);
                    unint64_t v29 = *((void *)this + 2);
                  }
                  else
                  {
                    unsigned int v50 = *v31;
                    int v51 = v31 + 1;
                    *((void *)this + 1) = v51;
                  }
                  *(unsigned char *)(a1 + 105) = v50 != 0;
                  *(_DWORD *)(a1 + 124) |= 0x10000u;
                  if ((int)v29 - (int)v51 >= 2 && *v51 == 144 && v51[1] == 1)
                  {
                    unsigned int v32 = v51 + 2;
                    *((void *)this + 1) = v32;
LABEL_157:
                    if ((unint64_t)v32 >= v29 || (char)*v32 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
                      if (!result) {
                        return result;
                      }
                      __int16 v52 = (unsigned __int8 *)*((void *)this + 1);
                      unint64_t v29 = *((void *)this + 2);
                    }
                    else
                    {
                      *uint64_t v5 = *v32;
                      __int16 v52 = v32 + 1;
                      *((void *)this + 1) = v52;
                    }
                    *(_DWORD *)(a1 + 124) |= 0x20000u;
                    if ((int)v29 - (int)v52 >= 2 && *v52 == 152 && v52[1] == 1)
                    {
                      uint64_t v33 = (char *)(v52 + 2);
                      *((void *)this + 1) = v33;
LABEL_166:
                      if ((unint64_t)v33 >= v29 || *v33 < 0)
                      {
                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
                        if (!result) {
                          return result;
                        }
                        double v53 = (unsigned __int8 *)*((void *)this + 1);
                        unint64_t v29 = *((void *)this + 2);
                      }
                      else
                      {
                        *uint64_t v6 = *v33;
                        double v53 = (unsigned __int8 *)(v33 + 1);
                        *((void *)this + 1) = v53;
                      }
                      *(_DWORD *)(a1 + 124) |= 0x40000u;
                      if (v53 == (unsigned __int8 *)v29
                        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                      {
                        *((_DWORD *)this + 8) = 0;
                        uint64_t result = 1;
                        *((unsigned char *)this + 36) = 1;
                        return result;
                      }
                    }
                  }
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_20;
        }
        goto LABEL_67;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_25;
        }
        goto LABEL_67;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_30;
        }
        goto LABEL_67;
      case 6u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_35;
        }
        goto LABEL_67;
      case 7u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        uint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_41;
      case 8u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        unsigned int v20 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_76;
      case 9u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        char v22 = (char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        goto LABEL_86;
      case 0xAu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        char v24 = (char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        goto LABEL_96;
      case 0xBu:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_106;
        }
        goto LABEL_67;
      case 0xCu:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_110;
        }
        goto LABEL_67;
      case 0xDu:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_114;
        }
        goto LABEL_67;
      case 0xEu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        uint64_t v26 = (char *)*((void *)this + 1);
        unint64_t v25 = *((void *)this + 2);
        goto LABEL_118;
      case 0xFu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        char v28 = (char *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        goto LABEL_128;
      case 0x10u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        uint64_t v30 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v29 = *((void *)this + 2);
        goto LABEL_139;
      case 0x11u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        char v31 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v29 = *((void *)this + 2);
        goto LABEL_148;
      case 0x12u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        unsigned int v32 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v29 = *((void *)this + 2);
        goto LABEL_157;
      case 0x13u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        uint64_t v33 = (char *)*((void *)this + 1);
        unint64_t v29 = *((void *)this + 2);
        goto LABEL_166;
      default:
        int v9 = TagFallback & 7;
LABEL_67:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1008C8C1C(uint64_t result, unint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 124);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(result + 8), a3);
    int v6 = *(_DWORD *)(v5 + 124);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_23;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 56), a2, a4);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(v5 + 60), a2, a4);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_DWORD *)(v5 + 64), a2, a4);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_DWORD *)(v5 + 68), a2, a4);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, a2, *(double *)(v5 + 72), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, a2, *(double *)(v5 + 80), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, a2, *(double *)(v5 + 88), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(_DWORD *)(v5 + 96), a2, a4);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(_DWORD *)(v5 + 100), a2, a4);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(unsigned __int8 *)(v5 + 104), a2, a4);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
LABEL_38:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, *(void *)(v5 + 112), a2, a4);
    if ((*(_DWORD *)(v5 + 124) & 0x40000) == 0) {
      return result;
    }
    goto LABEL_39;
  }
LABEL_37:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, *(unsigned __int8 *)(v5 + 105), a2, a4);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x20000) != 0) {
    goto LABEL_38;
  }
LABEL_19:
  if ((v6 & 0x40000) == 0) {
    return result;
  }
LABEL_39:
  int v7 = *(_DWORD *)(v5 + 108);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, v7, a2, a4);
}

uint64_t sub_1008C8E68(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 124);
  if ((_BYTE)v3)
  {
    unsigned int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x20) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 0x40) != 0)
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
      if ((v6 & 0x80000000) != 0)
      {
        int v7 = 10;
      }
      else if (v6 >= 0x80)
      {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
        int v3 = *(_DWORD *)(a1 + 124);
      }
      else
      {
        int v7 = 1;
      }
      uint64_t v5 = (v5 + v7 + 1);
    }
    if ((v3 & 0x80) != 0)
    {
      uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
      if ((v8 & 0x80000000) != 0)
      {
        int v9 = 11;
      }
      else if (v8 >= 0x80)
      {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 124);
      }
      else
      {
        int v9 = 2;
      }
      uint64_t v5 = (v9 + v5);
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
      if ((v10 & 0x80000000) != 0)
      {
        int v11 = 11;
      }
      else if (v10 >= 0x80)
      {
        int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 124);
      }
      else
      {
        int v11 = 2;
      }
      LODWORD(v5) = v11 + v5;
    }
    if ((v3 & 0x200) != 0)
    {
      unsigned int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 68);
      if ((v12 & 0x80000000) != 0)
      {
        int v13 = 11;
      }
      else if (v12 >= 0x80)
      {
        int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 124);
      }
      else
      {
        int v13 = 2;
      }
      LODWORD(v5) = v13 + v5;
    }
    int v14 = v5 + 9;
    if ((v3 & 0x400) == 0) {
      int v14 = v5;
    }
    if ((v3 & 0x800) != 0) {
      v14 += 9;
    }
    if ((v3 & 0x1000) != 0) {
      LODWORD(v5) = v14 + 9;
    }
    else {
      LODWORD(v5) = v14;
    }
    if ((v3 & 0x2000) != 0)
    {
      unint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 96);
      if ((v15 & 0x80000000) != 0)
      {
        int v16 = 11;
      }
      else if (v15 >= 0x80)
      {
        int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 124);
      }
      else
      {
        int v16 = 2;
      }
      LODWORD(v5) = v16 + v5;
    }
    if ((v3 & 0x4000) != 0)
    {
      uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 100);
      if ((v17 & 0x80000000) != 0)
      {
        int v18 = 11;
      }
      else if (v17 >= 0x80)
      {
        int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 124);
      }
      else
      {
        int v18 = 2;
      }
      LODWORD(v5) = v18 + v5;
    }
    if ((v3 & 0x8000) != 0) {
      uint64_t v5 = (v5 + 3);
    }
    else {
      uint64_t v5 = v5;
    }
  }
  if ((v3 & 0xFF0000) != 0)
  {
    if ((v3 & 0x10000) != 0) {
      uint64_t v5 = (v5 + 3);
    }
    else {
      uint64_t v5 = v5;
    }
    if ((v3 & 0x20000) != 0)
    {
      uint64_t v5 = v5
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 112), a2)+ 2;
      int v3 = *(_DWORD *)(a1 + 124);
    }
    if ((v3 & 0x40000) != 0)
    {
      uint64_t v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 108);
      if (v19 >= 0x80) {
        int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 2;
      }
      else {
        int v20 = 3;
      }
      uint64_t v5 = (v20 + v5);
    }
  }
  *(_DWORD *)(a1 + 120) = v5;
  return v5;
}

void sub_1008C90AC(uint64_t a1, void *lpsrc)
{
  sub_1008C7E1C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008C9134()
{
  return 1;
}

void *sub_1008C913C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.SummaryReport");
}

void sub_1008C914C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      int v6 = *(_DWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 28) |= 1u;
      *(_DWORD *)(a1 + 16) = v6;
      int v4 = *(_DWORD *)(a2 + 28);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_16;
      }
    }
    else if ((*(unsigned char *)(a2 + 28) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(const std::string **)(a2 + 8);
    *(_DWORD *)(a1 + 28) |= 2u;
    uint64_t v8 = *(std::string **)(a1 + 8);
    if (v8 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v8, v7);
    int v4 = *(_DWORD *)(a2 + 28);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_17;
    }
LABEL_16:
    char v9 = *(unsigned char *)(a2 + 20);
    *(_DWORD *)(a1 + 28) |= 4u;
    *(unsigned char *)(a1 + 20) = v9;
    int v4 = *(_DWORD *)(a2 + 28);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_18;
    }
LABEL_17:
    char v10 = *(unsigned char *)(a2 + 21);
    *(_DWORD *)(a1 + 28) |= 8u;
    *(unsigned char *)(a1 + 21) = v10;
    int v4 = *(_DWORD *)(a2 + 28);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        return;
      }
      goto LABEL_10;
    }
LABEL_18:
    char v11 = *(unsigned char *)(a2 + 22);
    *(_DWORD *)(a1 + 28) |= 0x10u;
    *(unsigned char *)(a1 + 22) = v11;
    if ((*(_DWORD *)(a2 + 28) & 0x20) == 0) {
      return;
    }
LABEL_10:
    char v5 = *(unsigned char *)(a2 + 23);
    *(_DWORD *)(a1 + 28) |= 0x20u;
    *(unsigned char *)(a1 + 23) = v5;
  }
}

void sub_1008C92C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008C92DC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D0150;
  sub_1001A4D20((uint64_t)a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008C9330(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D0150;
  sub_1001A4D20((uint64_t)a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008C9398()
{
}

uint64_t sub_1008C93EC(uint64_t result)
{
  char v1 = *(unsigned char *)(result + 28);
  if (v1)
  {
    *(_DWORD *)(result + 16) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(result + 8);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(result + 20) = 0;
  }
  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_1008C943C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  char v5 = (unsigned int *)(a1 + 16);
  while (2)
  {
    int v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        char v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v10 < v9 && (*v10 & 0x80000000) == 0)
        {
          *char v5 = *v10;
          char v11 = v10 + 1;
          *((void *)this + 1) = v11;
LABEL_28:
          int v12 = *(_DWORD *)(a1 + 28) | 1;
          *(_DWORD *)(a1 + 28) = v12;
          if ((unint64_t)v11 < v9 && *v11 == 18)
          {
            *((void *)this + 1) = v11 + 1;
            goto LABEL_31;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (result)
        {
          char v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
          goto LABEL_28;
        }
        break;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_22;
        }
        int v12 = *(_DWORD *)(a1 + 28);
LABEL_31:
        *(_DWORD *)(a1 + 28) = v12 | 2;
        if (*(_UNKNOWN **)(a1 + 8) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v18 = (unsigned char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((unint64_t)v18 >= v13 || *v18 != 24) {
          continue;
        }
        int v14 = v18 + 1;
        *((void *)this + 1) = v14;
LABEL_37:
        unsigned int v28 = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v28);
          if (!result) {
            return result;
          }
          unsigned int v19 = v28;
          int v20 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          unsigned int v19 = *v14;
          int v20 = v14 + 1;
          *((void *)this + 1) = v20;
        }
        *(unsigned char *)(a1 + 20) = v19 != 0;
        *(_DWORD *)(a1 + 28) |= 4u;
        if ((unint64_t)v20 >= v13 || *v20 != 32) {
          continue;
        }
        unint64_t v15 = v20 + 1;
        *((void *)this + 1) = v15;
LABEL_45:
        unsigned int v28 = 0;
        if ((unint64_t)v15 >= v13 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v28);
          if (!result) {
            return result;
          }
          unsigned int v21 = v28;
          char v22 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          unsigned int v21 = *v15;
          char v22 = v15 + 1;
          *((void *)this + 1) = v22;
        }
        *(unsigned char *)(a1 + 21) = v21 != 0;
        *(_DWORD *)(a1 + 28) |= 8u;
        if ((unint64_t)v22 >= v13 || *v22 != 40) {
          continue;
        }
        int v16 = v22 + 1;
        *((void *)this + 1) = v16;
LABEL_53:
        unsigned int v28 = 0;
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v28);
          if (!result) {
            return result;
          }
          unsigned int v23 = v28;
          char v24 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          unsigned int v23 = *v16;
          char v24 = v16 + 1;
          *((void *)this + 1) = v24;
        }
        *(unsigned char *)(a1 + 22) = v23 != 0;
        *(_DWORD *)(a1 + 28) |= 0x10u;
        if ((unint64_t)v24 >= v13 || *v24 != 48) {
          continue;
        }
        uint64_t v17 = v24 + 1;
        *((void *)this + 1) = v17;
LABEL_61:
        unsigned int v28 = 0;
        if ((unint64_t)v17 >= v13 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v28);
          if (!result) {
            return result;
          }
          unsigned int v25 = v28;
          uint64_t v26 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          unsigned int v25 = *v17;
          uint64_t v26 = (unsigned __int8 *)(v17 + 1);
          *((void *)this + 1) = v26;
        }
        *(unsigned char *)(a1 + 23) = v25 != 0;
        *(_DWORD *)(a1 + 28) |= 0x20u;
        if (v26 != (unsigned __int8 *)v13 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_37;
      case 4u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        unint64_t v15 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_45;
      case 5u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_53;
      case 6u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        uint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_61;
      default:
        int v8 = TagFallback & 7;
LABEL_22:
        if (v8 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_1008C982C(uint64_t result, char a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 28);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 20), a2, a4);
  int v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_12:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 22), a2, a4);
    if ((*(_DWORD *)(v5 + 28) & 0x20) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 21), a2, a4);
  int v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 0x10) != 0) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v6 & 0x20) == 0) {
    return result;
  }
LABEL_13:
  int v7 = *(unsigned __int8 *)(v5 + 23);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v7, a2, a4);
}

uint64_t sub_1008C990C(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 28);
  if (!(_BYTE)v3)
  {
    uint64_t result = 0;
    goto LABEL_28;
  }
  if ((*(unsigned char *)(a1 + 28) & 1) == 0)
  {
    int v4 = 0;
    if ((*(unsigned char *)(a1 + 28) & 2) == 0) {
      goto LABEL_19;
    }
LABEL_10:
    uint64_t v7 = *(void *)(a1 + 8);
    int v8 = *(unsigned __int8 *)(v7 + 23);
    char v9 = v8;
    uint64_t v10 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      unint64_t v11 = *(unsigned __int8 *)(v7 + 23);
    }
    else {
      unint64_t v11 = v10;
    }
    if (v11 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11, a2);
      int v8 = *(unsigned __int8 *)(v7 + 23);
      uint64_t v10 = *(void *)(v7 + 8);
      int v3 = *(_DWORD *)(a1 + 28);
      char v9 = *(unsigned char *)(v7 + 23);
    }
    else
    {
      int v12 = 1;
    }
    if (v9 < 0) {
      int v8 = v10;
    }
    v4 += v12 + v8 + 1;
    goto LABEL_19;
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
  if (v6 < 0x80)
  {
    int v4 = 2;
    if ((v3 & 2) == 0) {
      goto LABEL_19;
    }
    goto LABEL_10;
  }
  int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
  int v3 = *(_DWORD *)(a1 + 28);
  if ((v3 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_19:
  unsigned int v13 = v4 + 2;
  if ((v3 & 4) == 0) {
    unsigned int v13 = v4;
  }
  if ((v3 & 8) != 0) {
    v13 += 2;
  }
  if ((v3 & 0x10) != 0) {
    v13 += 2;
  }
  if ((v3 & 0x20) != 0) {
    uint64_t result = v13 + 2;
  }
  else {
    uint64_t result = v13;
  }
LABEL_28:
  *(_DWORD *)(a1 + 24) = result;
  return result;
}

void sub_1008C9A04(uint64_t a1, void *lpsrc)
{
  sub_1008C914C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008C9A8C()
{
  return 1;
}

void *sub_1008C9A94@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.SuplConfig");
}

void sub_1008C9AA4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  int v4 = *(_DWORD *)(a2 + 52);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    char v8 = *(unsigned char *)(a2 + 8);
    *(_DWORD *)(a1 + 52) |= 1u;
    *(unsigned char *)(a1 + 8) = v8;
    int v4 = *(_DWORD *)(a2 + 52);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_21;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v9 = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 52) |= 2u;
  *(_DWORD *)(a1 + 12) = v9;
  int v4 = *(_DWORD *)(a2 + 52);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  int v10 = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 52) |= 4u;
  *(_DWORD *)(a1 + 16) = v10;
  int v4 = *(_DWORD *)(a2 + 52);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v11 = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 52) |= 8u;
  *(_DWORD *)(a1 + 20) = v11;
  int v4 = *(_DWORD *)(a2 + 52);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_24:
    int v13 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 52) |= 0x20u;
    *(_DWORD *)(a1 + 28) = v13;
    int v4 = *(_DWORD *)(a2 + 52);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_23:
  int v12 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 52) |= 0x10u;
  *(_DWORD *)(a1 + 24) = v12;
  int v4 = *(_DWORD *)(a2 + 52);
  if ((v4 & 0x20) != 0) {
    goto LABEL_24;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_25:
  int v14 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 52) |= 0x40u;
  *(_DWORD *)(a1 + 32) = v14;
  int v4 = *(_DWORD *)(a2 + 52);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *(_DWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 52) |= 0x80u;
    *(_DWORD *)(a1 + 36) = v5;
    int v4 = *(_DWORD *)(a2 + 52);
  }
LABEL_13:
  if ((v4 & 0xFF00) != 0)
  {
    if ((v4 & 0x100) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 40);
      *(_DWORD *)(a1 + 52) |= 0x100u;
      *(_DWORD *)(a1 + 40) = v6;
      int v4 = *(_DWORD *)(a2 + 52);
    }
    if ((v4 & 0x200) != 0)
    {
      int v7 = *(_DWORD *)(a2 + 44);
      *(_DWORD *)(a1 + 52) |= 0x200u;
      *(_DWORD *)(a1 + 44) = v7;
    }
  }
}

void sub_1008C9C5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008C9C74(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D01C8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008C9C94(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D01C8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008C9CE8()
{
}

uint64_t sub_1008C9D44(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 52);
  if ((_BYTE)v1)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)(result + 12) = 0;
    *(void *)(result + 28) = 0;
    *(void *)(result + 20) = 0;
    *(_DWORD *)(result + 36) = 0;
  }
  if ((v1 & 0xFF00) != 0) {
    *(void *)(result + 40) = 0;
  }
  *(_DWORD *)(result + 52) = 0;
  return result;
}

uint64_t sub_1008C9D78(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 12);
  int v6 = (unsigned int *)(a1 + 16);
  int v7 = (unsigned int *)(a1 + 20);
  char v8 = (unsigned int *)(a1 + 24);
  int v9 = (unsigned int *)(a1 + 28);
  int v10 = (unsigned int *)(a1 + 32);
  int v11 = (unsigned int *)(a1 + 36);
  int v12 = (unsigned int *)(a1 + 44);
  while (2)
  {
    int v13 = (char *)*((void *)this + 1);
    if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v13;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v13 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        unsigned int v40 = 0;
        uint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        if ((unint64_t)v17 < v16 && (*v17 & 0x80000000) == 0)
        {
          unsigned int v18 = *v17;
          unsigned int v19 = v17 + 1;
          *((void *)this + 1) = v19;
LABEL_36:
          *(unsigned char *)(a1 + 8) = v18 != 0;
          *(_DWORD *)(a1 + 52) |= 1u;
          if ((unint64_t)v19 < v16 && *v19 == 16)
          {
            int v20 = v19 + 1;
            *((void *)this + 1) = v20;
            goto LABEL_39;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
        if (result)
        {
          unsigned int v18 = v40;
          unsigned int v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
          goto LABEL_36;
        }
        break;
      case 2u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
LABEL_39:
        if ((unint64_t)v20 >= v16 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          unint64_t v29 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v5 = *v20;
          unint64_t v29 = v20 + 1;
          *((void *)this + 1) = v29;
        }
        *(_DWORD *)(a1 + 52) |= 2u;
        if ((unint64_t)v29 >= v16 || *v29 != 24) {
          continue;
        }
        unsigned int v21 = v29 + 1;
        *((void *)this + 1) = v21;
LABEL_47:
        if ((unint64_t)v21 >= v16 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          uint64_t v30 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v21;
          uint64_t v30 = v21 + 1;
          *((void *)this + 1) = v30;
        }
        *(_DWORD *)(a1 + 52) |= 4u;
        if ((unint64_t)v30 >= v16 || *v30 != 32) {
          continue;
        }
        char v22 = v30 + 1;
        *((void *)this + 1) = v22;
LABEL_55:
        if ((unint64_t)v22 >= v16 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          char v31 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v7 = *v22;
          char v31 = v22 + 1;
          *((void *)this + 1) = v31;
        }
        *(_DWORD *)(a1 + 52) |= 8u;
        if ((unint64_t)v31 >= v16 || *v31 != 40) {
          continue;
        }
        unsigned int v23 = v31 + 1;
        *((void *)this + 1) = v23;
LABEL_63:
        if ((unint64_t)v23 >= v16 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          unsigned int v32 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *char v8 = *v23;
          unsigned int v32 = v23 + 1;
          *((void *)this + 1) = v32;
        }
        *(_DWORD *)(a1 + 52) |= 0x10u;
        if ((unint64_t)v32 >= v16 || *v32 != 48) {
          continue;
        }
        char v24 = v32 + 1;
        *((void *)this + 1) = v24;
LABEL_71:
        if ((unint64_t)v24 >= v16 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          uint64_t v33 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v9 = *v24;
          uint64_t v33 = v24 + 1;
          *((void *)this + 1) = v33;
        }
        *(_DWORD *)(a1 + 52) |= 0x20u;
        if ((unint64_t)v33 >= v16 || *v33 != 56) {
          continue;
        }
        unsigned int v25 = v33 + 1;
        *((void *)this + 1) = v25;
LABEL_79:
        if ((unint64_t)v25 >= v16 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!result) {
            return result;
          }
          unint64_t v34 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v10 = *v25;
          unint64_t v34 = v25 + 1;
          *((void *)this + 1) = v34;
        }
        *(_DWORD *)(a1 + 52) |= 0x40u;
        if ((unint64_t)v34 >= v16 || *v34 != 64) {
          continue;
        }
        uint64_t v26 = v34 + 1;
        *((void *)this + 1) = v26;
LABEL_87:
        if ((unint64_t)v26 >= v16 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
          if (!result) {
            return result;
          }
          unsigned int v35 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v11 = *v26;
          unsigned int v35 = v26 + 1;
          *((void *)this + 1) = v35;
        }
        *(_DWORD *)(a1 + 52) |= 0x80u;
        if ((unint64_t)v35 >= v16 || *v35 != 72) {
          continue;
        }
        unint64_t v27 = v35 + 1;
        *((void *)this + 1) = v27;
LABEL_95:
        unsigned int v41 = 0;
        if ((unint64_t)v27 >= v16 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v41);
          if (!result) {
            return result;
          }
          unsigned int v36 = v41;
          unsigned int v37 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v36 = *v27;
          unsigned int v37 = v27 + 1;
          *((void *)this + 1) = v37;
        }
        *(_DWORD *)(a1 + 40) = v36;
        *(_DWORD *)(a1 + 52) |= 0x100u;
        if ((unint64_t)v37 >= v16 || *v37 != 80) {
          continue;
        }
        unsigned int v28 = v37 + 1;
        *((void *)this + 1) = v28;
LABEL_103:
        if ((unint64_t)v28 >= v16 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v12);
          if (!result) {
            return result;
          }
          uint64_t v38 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v12 = *v28;
          uint64_t v38 = (unsigned __int8 *)(v28 + 1);
          *((void *)this + 1) = v38;
        }
        *(_DWORD *)(a1 + 52) |= 0x200u;
        if (v38 != (unsigned __int8 *)v16 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        unsigned int v21 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_47;
      case 4u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        char v22 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_55;
      case 5u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        unsigned int v23 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_63;
      case 6u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        char v24 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_71;
      case 7u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        unsigned int v25 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_79;
      case 8u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        uint64_t v26 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_87;
      case 9u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        unint64_t v27 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_95;
      case 0xAu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        unsigned int v28 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_103;
      default:
        int v15 = TagFallback & 7;
LABEL_30:
        if (v15 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_1008CA330(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = (int *)result;
  int v6 = *(_DWORD *)(result + 52);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = v5[13];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  int v6 = v5[13];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  int v6 = v5[13];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  int v6 = v5[13];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  int v6 = v5[13];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
  int v6 = v5[13];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], a2, a4);
  int v6 = v5[13];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
LABEL_20:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[10], a2, a4);
    if ((v5[13] & 0x200) == 0) {
      return result;
    }
    goto LABEL_21;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[9], a2, a4);
  int v6 = v5[13];
  if ((v6 & 0x100) != 0) {
    goto LABEL_20;
  }
LABEL_10:
  if ((v6 & 0x200) == 0) {
    return result;
  }
LABEL_21:
  int v7 = v5[11];

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v7, a2, a4);
}

uint64_t sub_1008CA480(unsigned int *a1, unsigned int a2)
{
  unsigned int v3 = a1[13];
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_39;
  }
  uint64_t v4 = 2 * (v3 & 1);
  if ((v3 & 2) != 0)
  {
    int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[3];
    if (v5 >= 0x80)
    {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
      unsigned int v3 = a1[13];
    }
    else
    {
      int v6 = 1;
    }
    uint64_t v4 = (v4 | 1) + v6;
    if ((v3 & 4) == 0)
    {
LABEL_4:
      if ((v3 & 8) == 0) {
        goto LABEL_5;
      }
      goto LABEL_19;
    }
  }
  else if ((v3 & 4) == 0)
  {
    goto LABEL_4;
  }
  int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[4];
  if (v7 >= 0x80)
  {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
    unsigned int v3 = a1[13];
  }
  else
  {
    int v8 = 1;
  }
  uint64_t v4 = (v4 + v8 + 1);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
LABEL_19:
  int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[5];
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
    unsigned int v3 = a1[13];
  }
  else
  {
    int v10 = 2;
  }
  uint64_t v4 = (v10 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_6:
    if ((v3 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_27;
  }
LABEL_23:
  int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[6];
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
    unsigned int v3 = a1[13];
  }
  else
  {
    int v12 = 2;
  }
  uint64_t v4 = (v12 + v4);
  if ((v3 & 0x20) == 0)
  {
LABEL_7:
    if ((v3 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_31;
  }
LABEL_27:
  int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[7];
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    unsigned int v3 = a1[13];
  }
  else
  {
    int v14 = 2;
  }
  uint64_t v4 = (v14 + v4);
  if ((v3 & 0x40) == 0)
  {
LABEL_8:
    if ((v3 & 0x80) == 0) {
      goto LABEL_39;
    }
    goto LABEL_35;
  }
LABEL_31:
  int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[8];
  if (v15 >= 0x80)
  {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    unsigned int v3 = a1[13];
  }
  else
  {
    int v16 = 2;
  }
  uint64_t v4 = (v16 + v4);
  if ((v3 & 0x80) != 0)
  {
LABEL_35:
    uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[9];
    if (v17 >= 0x80)
    {
      int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
      unsigned int v3 = a1[13];
    }
    else
    {
      int v18 = 2;
    }
    uint64_t v4 = (v18 + v4);
  }
LABEL_39:
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      unsigned int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[10];
      if ((v19 & 0x80000000) != 0)
      {
        int v20 = 11;
      }
      else if (v19 >= 0x80)
      {
        int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
        unsigned int v3 = a1[13];
      }
      else
      {
        int v20 = 2;
      }
      uint64_t v4 = (v20 + v4);
    }
    if ((v3 & 0x200) != 0)
    {
      unsigned int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[11];
      if (v21 >= 0x80) {
        int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2) + 1;
      }
      else {
        int v22 = 2;
      }
      uint64_t v4 = (v22 + v4);
    }
  }
  a1[12] = v4;
  return v4;
}

void sub_1008CA654(uint64_t a1, void *lpsrc)
{
  sub_1008C9AA4(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008CA6DC()
{
  return 1;
}

void *sub_1008CA6E4@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.LteCellInfo");
}

void sub_1008CA6F4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      char v6 = *(unsigned char *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(unsigned char *)(a1 + 8) = v6;
      int v4 = *(_DWORD *)(a2 + 32);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(_DWORD *)(a1 + 12) = v7;
    int v4 = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }
LABEL_13:
    int v8 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 32) |= 4u;
    *(_DWORD *)(a1 + 16) = v8;
    int v4 = *(_DWORD *)(a2 + 32);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        return;
      }
      goto LABEL_9;
    }
LABEL_14:
    int v9 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 32) |= 8u;
    *(_DWORD *)(a1 + 20) = v9;
    if ((*(_DWORD *)(a2 + 32) & 0x10) == 0) {
      return;
    }
LABEL_9:
    int v5 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 0x10u;
    *(_DWORD *)(a1 + 24) = v5;
  }
}

void sub_1008CA808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008CA820(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D0240;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008CA840(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D0240;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008CA894()
{
}

uint64_t sub_1008CA8EC(uint64_t result)
{
  if (*(unsigned char *)(result + 32))
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)(result + 20) = 0;
    *(void *)(result + 12) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1008CA908(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 12);
  char v6 = (unsigned int *)(a1 + 16);
  int v7 = (unsigned int *)(a1 + 20);
  int v8 = (unsigned int *)(a1 + 24);
  while (2)
  {
    int v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v9;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v9 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        unsigned int v25 = 0;
        int v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v13 < v12 && (*v13 & 0x80000000) == 0)
        {
          unsigned int v14 = *v13;
          int v15 = v13 + 1;
          *((void *)this + 1) = v15;
LABEL_26:
          *(unsigned char *)(a1 + 8) = v14 != 0;
          *(_DWORD *)(a1 + 32) |= 1u;
          if ((unint64_t)v15 < v12 && *v15 == 16)
          {
            int v16 = v15 + 1;
            *((void *)this + 1) = v16;
            goto LABEL_29;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
        if (result)
        {
          unsigned int v14 = v25;
          int v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          goto LABEL_26;
        }
        break;
      case 2u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
LABEL_29:
        if ((unint64_t)v16 >= v12 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v20 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v5 = *v16;
          int v20 = v16 + 1;
          *((void *)this + 1) = v20;
        }
        *(_DWORD *)(a1 + 32) |= 2u;
        if ((unint64_t)v20 >= v12 || *v20 != 24) {
          continue;
        }
        uint64_t v17 = v20 + 1;
        *((void *)this + 1) = v17;
LABEL_37:
        if ((unint64_t)v17 >= v12 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          unsigned int v21 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *char v6 = *v17;
          unsigned int v21 = v17 + 1;
          *((void *)this + 1) = v21;
        }
        *(_DWORD *)(a1 + 32) |= 4u;
        if ((unint64_t)v21 >= v12 || *v21 != 32) {
          continue;
        }
        int v18 = v21 + 1;
        *((void *)this + 1) = v18;
LABEL_45:
        if ((unint64_t)v18 >= v12 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v22 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v7 = *v18;
          int v22 = v18 + 1;
          *((void *)this + 1) = v22;
        }
        *(_DWORD *)(a1 + 32) |= 8u;
        if ((unint64_t)v22 >= v12 || *v22 != 40) {
          continue;
        }
        unsigned int v19 = v22 + 1;
        *((void *)this + 1) = v19;
LABEL_53:
        if ((unint64_t)v19 >= v12 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          unsigned int v23 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v19;
          unsigned int v23 = (unsigned __int8 *)(v19 + 1);
          *((void *)this + 1) = v23;
        }
        *(_DWORD *)(a1 + 32) |= 0x10u;
        if (v23 != (unsigned __int8 *)v12 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        uint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_37;
      case 4u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_45;
      case 5u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        unsigned int v19 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_53;
      default:
        int v11 = TagFallback & 7;
LABEL_20:
        if (v11 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_1008CAC54(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = (int *)result;
  int v6 = *(_DWORD *)(result + 32);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = v5[8];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  int v6 = v5[8];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
    if ((v5[8] & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  int v6 = v5[8];
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return result;
  }
LABEL_11:
  int v7 = v5[6];

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, a2, a4);
}

uint64_t sub_1008CAD18(unsigned int *a1, unsigned int a2)
{
  unsigned int v3 = a1[8];
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_24;
  }
  uint64_t v4 = 2 * (v3 & 1);
  if ((v3 & 2) != 0)
  {
    int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[3];
    if (v5 >= 0x80)
    {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      unsigned int v3 = a1[8];
    }
    else
    {
      int v6 = 2;
    }
    uint64_t v4 = (v6 + v4);
    if ((v3 & 4) == 0)
    {
LABEL_4:
      if ((v3 & 8) == 0) {
        goto LABEL_5;
      }
      goto LABEL_16;
    }
  }
  else if ((v3 & 4) == 0)
  {
    goto LABEL_4;
  }
  int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[4];
  if (v7 >= 0x80)
  {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
    unsigned int v3 = a1[8];
  }
  else
  {
    int v8 = 2;
  }
  uint64_t v4 = (v8 + v4);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0) {
      goto LABEL_24;
    }
    goto LABEL_20;
  }
LABEL_16:
  int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[5];
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
    unsigned int v3 = a1[8];
  }
  else
  {
    int v10 = 2;
  }
  uint64_t v4 = (v10 + v4);
  if ((v3 & 0x10) != 0)
  {
LABEL_20:
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[6];
    if (v11 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
    }
    else {
      int v12 = 2;
    }
    uint64_t v4 = (v12 + v4);
  }
LABEL_24:
  a1[7] = v4;
  return v4;
}

void sub_1008CAE04(uint64_t a1, void *lpsrc)
{
  sub_1008CA6F4(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008CAE8C()
{
  return 1;
}

void *sub_1008CAE94@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.GsmCellInfo");
}

void sub_1008CAEA4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 44);
  if (!(_BYTE)v4) {
    return;
  }
  if (*(unsigned char *)(a2 + 44))
  {
    char v6 = *(unsigned char *)(a2 + 8);
    *(_DWORD *)(a1 + 44) |= 1u;
    *(unsigned char *)(a1 + 8) = v6;
    int v4 = *(_DWORD *)(a2 + 44);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_16;
    }
  }
  else if ((*(unsigned char *)(a2 + 44) & 2) == 0)
  {
    goto LABEL_6;
  }
  int v7 = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 44) |= 2u;
  *(_DWORD *)(a1 + 12) = v7;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  int v8 = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 44) |= 4u;
  *(_DWORD *)(a1 + 16) = v8;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_18;
  }
LABEL_17:
  int v9 = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 44) |= 8u;
  *(_DWORD *)(a1 + 20) = v9;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_19:
    int v11 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 44) |= 0x20u;
    *(_DWORD *)(a1 + 28) = v11;
    int v4 = *(_DWORD *)(a2 + 44);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        return;
      }
      goto LABEL_12;
    }
    goto LABEL_20;
  }
LABEL_18:
  int v10 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 44) |= 0x10u;
  *(_DWORD *)(a1 + 24) = v10;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 0x20) != 0) {
    goto LABEL_19;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_20:
  unsigned int v12 = *(_DWORD *)(a2 + 32);
  if (v12 >= 4) {
    sub_101A7328C();
  }
  *(_DWORD *)(a1 + 44) |= 0x40u;
  *(_DWORD *)(a1 + 32) = v12;
  if ((*(_DWORD *)(a2 + 44) & 0x80) != 0)
  {
LABEL_12:
    int v5 = *(_DWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 44) |= 0x80u;
    *(_DWORD *)(a1 + 36) = v5;
  }
}

void sub_1008CB024(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008CB03C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D02B8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008CB05C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D02B8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008CB0B0()
{
}

uint64_t sub_1008CB10C(uint64_t result)
{
  if (*(unsigned char *)(result + 44))
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)(result + 12) = 0;
    *(void *)(result + 28) = 0;
    *(void *)(result + 20) = 0;
    *(_DWORD *)(result + 36) = 0;
  }
  *(_DWORD *)(result + 44) = 0;
  return result;
}

uint64_t sub_1008CB130(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 12);
  char v6 = (unsigned int *)(a1 + 16);
  int v7 = (unsigned int *)(a1 + 20);
  int v8 = (unsigned int *)(a1 + 24);
  int v9 = (unsigned int *)(a1 + 28);
  int v10 = (unsigned int *)(a1 + 36);
  while (2)
  {
    int v11 = (char *)*((void *)this + 1);
    if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v11;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v11 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        unsigned int v35 = 0;
        int v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v15 < v14 && (*v15 & 0x80000000) == 0)
        {
          unsigned int v16 = *v15;
          uint64_t v17 = v15 + 1;
          *((void *)this + 1) = v17;
LABEL_32:
          *(unsigned char *)(a1 + 8) = v16 != 0;
          *(_DWORD *)(a1 + 44) |= 1u;
          if ((unint64_t)v17 < v14 && *v17 == 16)
          {
            int v18 = v17 + 1;
            *((void *)this + 1) = v18;
            goto LABEL_35;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v35);
        if (result)
        {
          unsigned int v16 = v35;
          uint64_t v17 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
          goto LABEL_32;
        }
        break;
      case 2u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
LABEL_35:
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          uint64_t v26 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *int v5 = *v18;
          uint64_t v26 = v18 + 1;
          *((void *)this + 1) = v26;
        }
        *(_DWORD *)(a1 + 44) |= 2u;
        if ((unint64_t)v26 >= v14 || *v26 != 24) {
          continue;
        }
        unsigned int v19 = v26 + 1;
        *((void *)this + 1) = v19;
LABEL_43:
        if ((unint64_t)v19 >= v14 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          unint64_t v27 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *char v6 = *v19;
          unint64_t v27 = v19 + 1;
          *((void *)this + 1) = v27;
        }
        *(_DWORD *)(a1 + 44) |= 4u;
        if ((unint64_t)v27 >= v14 || *v27 != 32) {
          continue;
        }
        int v20 = v27 + 1;
        *((void *)this + 1) = v20;
LABEL_51:
        if ((unint64_t)v20 >= v14 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          unsigned int v28 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *int v7 = *v20;
          unsigned int v28 = v20 + 1;
          *((void *)this + 1) = v28;
        }
        *(_DWORD *)(a1 + 44) |= 8u;
        if ((unint64_t)v28 >= v14 || *v28 != 40) {
          continue;
        }
        unsigned int v21 = v28 + 1;
        *((void *)this + 1) = v21;
LABEL_59:
        if ((unint64_t)v21 >= v14 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          unint64_t v29 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v21;
          unint64_t v29 = v21 + 1;
          *((void *)this + 1) = v29;
        }
        *(_DWORD *)(a1 + 44) |= 0x10u;
        if ((unint64_t)v29 >= v14 || *v29 != 48) {
          continue;
        }
        int v22 = v29 + 1;
        *((void *)this + 1) = v22;
LABEL_67:
        if ((unint64_t)v22 >= v14 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          uint64_t v30 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *int v9 = *v22;
          uint64_t v30 = v22 + 1;
          *((void *)this + 1) = v30;
        }
        *(_DWORD *)(a1 + 44) |= 0x20u;
        if ((unint64_t)v30 >= v14 || *v30 != 56) {
          continue;
        }
        unsigned int v23 = v30 + 1;
        *((void *)this + 1) = v23;
LABEL_75:
        unsigned int v36 = 0;
        if ((unint64_t)v23 >= v14 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v36);
          if (!result) {
            return result;
          }
          unsigned int v31 = v36;
        }
        else
        {
          unsigned int v31 = *v23;
          *((void *)this + 1) = v23 + 1;
        }
        if (v31 <= 3)
        {
          *(_DWORD *)(a1 + 44) |= 0x40u;
          *(_DWORD *)(a1 + 32) = v31;
        }
        unsigned int v32 = (unsigned char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        if ((unint64_t)v32 >= v24 || *v32 != 64) {
          continue;
        }
        unsigned int v25 = v32 + 1;
        *((void *)this + 1) = v25;
LABEL_85:
        if ((unint64_t)v25 >= v24 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!result) {
            return result;
          }
          uint64_t v33 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v24 = *((void *)this + 2);
        }
        else
        {
          *int v10 = *v25;
          uint64_t v33 = (unsigned __int8 *)(v25 + 1);
          *((void *)this + 1) = v33;
        }
        *(_DWORD *)(a1 + 44) |= 0x80u;
        if (v33 != (unsigned __int8 *)v24 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        unsigned int v19 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_43;
      case 4u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_51;
      case 5u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        unsigned int v21 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_59;
      case 6u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v22 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_67;
      case 7u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        unsigned int v23 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_75;
      case 8u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        unsigned int v25 = (char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_85;
      default:
        int v13 = TagFallback & 7;
LABEL_26:
        if (v13 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_1008CB5F8(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = (int *)result;
  int v6 = *(_DWORD *)(result + 44);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = v5[11];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  int v6 = v5[11];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  int v6 = v5[11];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  int v6 = v5[11];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  int v6 = v5[11];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
LABEL_16:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], a2, a4);
    if ((v5[11] & 0x80) == 0) {
      return result;
    }
    goto LABEL_17;
  }
LABEL_15:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
  int v6 = v5[11];
  if ((v6 & 0x40) != 0) {
    goto LABEL_16;
  }
LABEL_8:
  if ((v6 & 0x80) == 0) {
    return result;
  }
LABEL_17:
  int v7 = v5[9];

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v7, a2, a4);
}

uint64_t sub_1008CB710(unsigned int *a1, unsigned int a2)
{
  unsigned int v3 = a1[11];
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_41;
  }
  uint64_t v4 = 2 * (v3 & 1);
  if ((v3 & 2) != 0)
  {
    int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[3];
    if (v5 >= 0x80)
    {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      unsigned int v3 = a1[11];
    }
    else
    {
      int v6 = 2;
    }
    uint64_t v4 = (v6 + v4);
    if ((v3 & 4) == 0)
    {
LABEL_4:
      if ((v3 & 8) == 0) {
        goto LABEL_5;
      }
      goto LABEL_19;
    }
  }
  else if ((v3 & 4) == 0)
  {
    goto LABEL_4;
  }
  int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[4];
  if (v7 >= 0x80)
  {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
    unsigned int v3 = a1[11];
  }
  else
  {
    int v8 = 2;
  }
  uint64_t v4 = (v8 + v4);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
LABEL_19:
  int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[5];
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
    unsigned int v3 = a1[11];
  }
  else
  {
    int v10 = 2;
  }
  uint64_t v4 = (v10 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_6:
    if ((v3 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_27;
  }
LABEL_23:
  int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[6];
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
    unsigned int v3 = a1[11];
  }
  else
  {
    int v12 = 2;
  }
  uint64_t v4 = (v12 + v4);
  if ((v3 & 0x20) == 0)
  {
LABEL_7:
    if ((v3 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_31;
  }
LABEL_27:
  int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[7];
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    unsigned int v3 = a1[11];
  }
  else
  {
    int v14 = 2;
  }
  uint64_t v4 = (v14 + v4);
  if ((v3 & 0x40) == 0)
  {
LABEL_8:
    if ((v3 & 0x80) == 0) {
      goto LABEL_41;
    }
    goto LABEL_37;
  }
LABEL_31:
  int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[8];
  if ((v15 & 0x80000000) != 0)
  {
    int v16 = 11;
  }
  else if (v15 >= 0x80)
  {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    unsigned int v3 = a1[11];
  }
  else
  {
    int v16 = 2;
  }
  uint64_t v4 = (v16 + v4);
  if ((v3 & 0x80) != 0)
  {
LABEL_37:
    uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[9];
    if (v17 >= 0x80) {
      int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
    }
    else {
      int v18 = 2;
    }
    uint64_t v4 = (v18 + v4);
  }
LABEL_41:
  a1[10] = v4;
  return v4;
}

void sub_1008CB88C(uint64_t a1, void *lpsrc)
{
  sub_1008CAEA4(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008CB914()
{
  return 1;
}

void *sub_1008CB91C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.WcdmaCellInfo");
}

void sub_1008CB92C(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2), *(_DWORD *)(a2 + 16) + a1[4]);
  if (*(int *)(a2 + 16) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 8) + 8 * v4);
      int v6 = a1[5];
      uint64_t v7 = (int)a1[4];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[6])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2), v6 + 1);
          int v6 = a1[5];
        }
        a1[5] = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)a1 + 1);
      a1[4] = v7 + 1;
      sub_1008C9AA4(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 16));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8), *(_DWORD *)(a2 + 40) + a1[10]);
  if (*(int *)(a2 + 40) >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      uint64_t v10 = *(void *)(*(void *)(a2 + 32) + 8 * v9);
      int v11 = a1[11];
      uint64_t v12 = (int)a1[10];
      if ((int)v12 >= v11)
      {
        if (v11 == a1[12])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8), v11 + 1);
          int v11 = a1[11];
        }
        a1[11] = v11 + 1;
        operator new();
      }
      uint64_t v13 = *((void *)a1 + 4);
      a1[10] = v12 + 1;
      sub_1008CA6F4(*(void *)(v13 + 8 * v12), v10);
      ++v9;
    }
    while (v9 < *(int *)(a2 + 40));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 14), *(_DWORD *)(a2 + 64) + a1[16]);
  if (*(int *)(a2 + 64) >= 1)
  {
    uint64_t v14 = 0;
    do
    {
      uint64_t v15 = *(void *)(*(void *)(a2 + 56) + 8 * v14);
      int v16 = a1[17];
      uint64_t v17 = (int)a1[16];
      if ((int)v17 >= v16)
      {
        if (v16 == a1[18])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 14), v16 + 1);
          int v16 = a1[17];
        }
        a1[17] = v16 + 1;
        operator new();
      }
      uint64_t v18 = *((void *)a1 + 7);
      a1[16] = v17 + 1;
      sub_1008CAEA4(*(void *)(v18 + 8 * v17), v15);
      ++v14;
    }
    while (v14 < *(int *)(a2 + 64));
  }
  if (*(unsigned char *)(a2 + 88))
  {
    unsigned int v19 = *(_DWORD *)(a2 + 80);
    if (v19 >= 7) {
      sub_101A732B8();
    }
    a1[22] |= 1u;
    a1[20] = v19;
  }
}

void sub_1008CBC94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008CBCAC(uint64_t *a1)
{
  *a1 = (uint64_t)off_1022D0330;
  sub_10016B2E8(a1 + 7);
  sub_10016B2E8(a1 + 4);
  sub_10016B2E8(a1 + 1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_1008CBD20(uint64_t *a1)
{
  sub_1008CBCAC(a1);

  operator delete();
}

uint64_t sub_1008CBD58(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10248A448;
  if (!qword_10248A448)
  {
    sub_1008C4C78(0, a2, a3, a4);
    return qword_10248A448;
  }
  return result;
}

void sub_1008CBD88()
{
}

uint64_t sub_1008CBDF0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 88)) {
    *(_DWORD *)(a1 + 80) = 0;
  }
  sub_10026DEDC(a1 + 8);
  sub_10026DEDC(a1 + 32);
  uint64_t result = sub_10026DEDC(a1 + 56);
  *(_DWORD *)(a1 + 88) = 0;
  return result;
}

uint64_t sub_1008CBE38(int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2);
  int v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 14);
  while (1)
  {
LABEL_2:
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 < *((void *)this + 2) && (*v8 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        unsigned int v52 = 0;
        int v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v52);
          if (!result) {
            return result;
          }
          unsigned int v12 = v52;
        }
        else
        {
          unsigned int v12 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        if (v12 <= 6)
        {
          a1[22] |= 1u;
          a1[20] = v12;
        }
        uint64_t v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 != 18) {
          continue;
        }
        goto LABEL_27;
      case 2u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_18;
        }
        while (2)
        {
          int v15 = a1[5];
          uint64_t v16 = a1[4];
          if ((int)v16 >= v15)
          {
            if (v15 == a1[6])
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v15 + 1);
              int v15 = a1[5];
            }
            a1[5] = v15 + 1;
            operator new();
          }
          uint64_t v17 = *((void *)a1 + 1);
          a1[4] = v16 + 1;
          uint64_t v18 = *(void *)(v17 + 8 * v16);
          unsigned int v52 = 0;
          unsigned int v19 = (char *)*((void *)this + 1);
          if ((unint64_t)v19 >= *((void *)this + 2) || *v19 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v52))return 0; {
          }
            }
          else
          {
            unsigned int v52 = *v19;
            *((void *)this + 1) = v19 + 1;
          }
          int v20 = *((_DWORD *)this + 14);
          int v21 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v20 + 1;
          if (v20 >= v21) {
            return 0;
          }
          int v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v52);
          if (!sub_1008C9D78(v18, this, v23) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v22);
          int v24 = *((_DWORD *)this + 14);
          BOOL v25 = __OFSUB__(v24, 1);
          int v26 = v24 - 1;
          if (v26 < 0 == v25) {
            *((_DWORD *)this + 14) = v26;
          }
          uint64_t v14 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v14 < *((void *)this + 2))
          {
            int v27 = *v14;
            if (v27 == 18)
            {
LABEL_27:
              *((void *)this + 1) = v14 + 1;
              continue;
            }
            if (v27 == 26)
            {
              do
              {
                *((void *)this + 1) = v14 + 1;
LABEL_46:
                int v28 = a1[11];
                uint64_t v29 = a1[10];
                if ((int)v29 >= v28)
                {
                  if (v28 == a1[12])
                  {
                    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v28 + 1);
                    int v28 = a1[11];
                  }
                  a1[11] = v28 + 1;
                  operator new();
                }
                uint64_t v30 = *((void *)a1 + 4);
                a1[10] = v29 + 1;
                uint64_t v31 = *(void *)(v30 + 8 * v29);
                unsigned int v52 = 0;
                unsigned int v32 = (char *)*((void *)this + 1);
                if ((unint64_t)v32 >= *((void *)this + 2) || *v32 < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v52))return 0; {
                }
                  }
                else
                {
                  unsigned int v52 = *v32;
                  *((void *)this + 1) = v32 + 1;
                }
                int v33 = *((_DWORD *)this + 14);
                int v34 = *((_DWORD *)this + 15);
                *((_DWORD *)this + 14) = v33 + 1;
                if (v33 >= v34) {
                  return 0;
                }
                int v35 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v52);
                if (!sub_1008CA908(v31, this, v36) || !*((unsigned char *)this + 36)) {
                  return 0;
                }
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v35);
                int v37 = *((_DWORD *)this + 14);
                BOOL v25 = __OFSUB__(v37, 1);
                int v38 = v37 - 1;
                if (v38 < 0 == v25) {
                  *((_DWORD *)this + 14) = v38;
                }
                uint64_t v14 = (unsigned char *)*((void *)this + 1);
                if ((unint64_t)v14 >= *((void *)this + 2)) {
                  goto LABEL_2;
                }
                int v39 = *v14;
              }
              while (v39 == 26);
              if (v39 == 34)
              {
                do
                {
                  *((void *)this + 1) = v14 + 1;
LABEL_64:
                  int v40 = a1[17];
                  uint64_t v41 = a1[16];
                  if ((int)v41 >= v40)
                  {
                    if (v40 == a1[18])
                    {
                      wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7, v40 + 1);
                      int v40 = a1[17];
                    }
                    a1[17] = v40 + 1;
                    operator new();
                  }
                  uint64_t v42 = *((void *)a1 + 7);
                  a1[16] = v41 + 1;
                  uint64_t v43 = *(void *)(v42 + 8 * v41);
                  unsigned int v52 = 0;
                  unsigned int v44 = (char *)*((void *)this + 1);
                  if ((unint64_t)v44 >= *((void *)this + 2) || *v44 < 0)
                  {
                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v52))return 0; {
                  }
                    }
                  else
                  {
                    unsigned int v52 = *v44;
                    *((void *)this + 1) = v44 + 1;
                  }
                  int v45 = *((_DWORD *)this + 14);
                  int v46 = *((_DWORD *)this + 15);
                  *((_DWORD *)this + 14) = v45 + 1;
                  if (v45 >= v46) {
                    return 0;
                  }
                  int v47 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v52);
                  if (!sub_1008CB130(v43, this, v48) || !*((unsigned char *)this + 36)) {
                    return 0;
                  }
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v47);
                  int v49 = *((_DWORD *)this + 14);
                  BOOL v25 = __OFSUB__(v49, 1);
                  int v50 = v49 - 1;
                  if (v50 < 0 == v25) {
                    *((_DWORD *)this + 14) = v50;
                  }
                  uint64_t v14 = (unsigned char *)*((void *)this + 1);
                  int v51 = (unsigned char *)*((void *)this + 2);
                }
                while (v14 < v51 && *v14 == 34);
                if (v14 == v51 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                {
                  *((_DWORD *)this + 8) = 0;
                  uint64_t result = 1;
                  *((unsigned char *)this + 36) = 1;
                  return result;
                }
              }
            }
          }
          break;
        }
        break;
      case 3u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_46;
        }
        goto LABEL_18;
      case 4u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_18;
        }
        goto LABEL_64;
      default:
        int v10 = TagFallback & 7;
LABEL_18:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1008CC424(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 88)) {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 80), (int)a2, a4);
  }
  if (*(int *)(v5 + 16) >= 1)
  {
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  if (*(int *)(v5 + 40) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(*(void *)(v5 + 32) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 40));
  }
  if (*(int *)(v5 + 64) >= 1)
  {
    uint64_t v8 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(*(void *)(v5 + 56) + 8 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 64));
  }
  return result;
}

uint64_t sub_1008CC504(uint64_t a1, unsigned int a2)
{
  if (*(unsigned char *)(a1 + 88))
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 80);
    if ((v4 & 0x80000000) != 0)
    {
      int v3 = 11;
    }
    else if (v4 >= 0x80)
    {
      int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4, a2) + 1;
    }
    else
    {
      int v3 = 2;
    }
  }
  else
  {
    int v3 = 0;
  }
  int v5 = *(_DWORD *)(a1 + 16);
  int v6 = v5 + v3;
  if (v5 >= 1)
  {
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008CA480(*(unsigned int **)(*(void *)(a1 + 8)+ 8 * v7), a2);
      int v9 = (int)v8;
      if (v8 >= 0x80) {
        int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2);
      }
      else {
        int v10 = 1;
      }
      v6 += v9 + v10;
      ++v7;
    }
    while (v7 < *(int *)(a1 + 16));
  }
  int v11 = *(_DWORD *)(a1 + 40);
  int v12 = v11 + v6;
  if (v11 >= 1)
  {
    uint64_t v13 = 0;
    do
    {
      uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008CAD18(*(unsigned int **)(*(void *)(a1 + 32)+ 8 * v13), a2);
      int v15 = (int)v14;
      if (v14 >= 0x80) {
        int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
      }
      else {
        int v16 = 1;
      }
      v12 += v15 + v16;
      ++v13;
    }
    while (v13 < *(int *)(a1 + 40));
  }
  int v17 = *(_DWORD *)(a1 + 64);
  uint64_t v18 = (v17 + v12);
  if (v17 >= 1)
  {
    uint64_t v19 = 0;
    do
    {
      int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008CB710(*(unsigned int **)(*(void *)(a1 + 56)+ 8 * v19), a2);
      int v21 = (int)v20;
      if (v20 >= 0x80) {
        int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20, a2);
      }
      else {
        int v22 = 1;
      }
      uint64_t v18 = (v21 + v18 + v22);
      ++v19;
    }
    while (v19 < *(int *)(a1 + 64));
  }
  *(_DWORD *)(a1 + 84) = v18;
  return v18;
}

void sub_1008CC668(_DWORD *a1, void *lpsrc)
{
  sub_1008CB92C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008CC6F0()
{
  return 1;
}

void *sub_1008CC6F8@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.LocationId");
}

void sub_1008CC708(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 20))
    {
      int v5 = *(_DWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 20) |= 1u;
      *(_DWORD *)(a1 + 8) = v5;
      int v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      char v6 = *(unsigned char *)(a2 + 12);
      *(_DWORD *)(a1 + 20) |= 2u;
      *(unsigned char *)(a1 + 12) = v6;
    }
  }
}

void sub_1008CC7B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008CC7CC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D03A8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008CC7EC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D03A8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

uint64_t sub_1008CC840(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10248A450;
  if (!qword_10248A450)
  {
    sub_1008C4C78(0, a2, a3, a4);
    return qword_10248A450;
  }
  return result;
}

void sub_1008CC870()
{
}

uint64_t sub_1008CC8C4(uint64_t result)
{
  if (*(unsigned char *)(result + 20))
  {
    *(_DWORD *)(result + 8) = 0;
    *(unsigned char *)(result + 12) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1008CC8DC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 8);
  while (1)
  {
    while (1)
    {
      char v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v6;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v6 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      int v11 = (char *)*((void *)this + 1);
      unint64_t v9 = *((void *)this + 2);
      if ((unint64_t)v11 >= v9 || *v11 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!result) {
          return result;
        }
        int v12 = (unsigned char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
      }
      else
      {
        *int v5 = *v11;
        int v12 = v11 + 1;
        *((void *)this + 1) = v12;
      }
      *(_DWORD *)(a1 + 20) |= 1u;
      if ((unint64_t)v12 < v9 && *v12 == 16)
      {
        int v10 = v12 + 1;
        *((void *)this + 1) = v10;
LABEL_24:
        unsigned int v16 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v16);
          if (!result) {
            return result;
          }
          unsigned int v13 = v16;
          uint64_t v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unsigned int v13 = *v10;
          uint64_t v14 = (unsigned __int8 *)(v10 + 1);
          *((void *)this + 1) = v14;
        }
        *(unsigned char *)(a1 + 12) = v13 != 0;
        *(_DWORD *)(a1 + 20) |= 2u;
        if (v14 == (unsigned __int8 *)v9 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v8 = TagFallback & 7;
    }
LABEL_16:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1008CCA90(uint64_t result, char a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(unsigned __int8 *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_1008CCAFC(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 20);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 20))
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v6 >= 0x80)
      {
        unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 20);
      }
      else
      {
        unsigned int v4 = 2;
      }
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      uint64_t result = v4 + 2;
    }
    else {
      uint64_t result = v4;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 16) = result;
  return result;
}

void sub_1008CCB68(uint64_t a1, void *lpsrc)
{
  sub_1008CC708(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008CCBF0()
{
  return 1;
}

void *sub_1008CCBF8@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.WlanMeasurementRequest");
}

void sub_1008CCC08(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      int v6 = *(const std::string **)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      int v7 = *(std::string **)(a1 + 8);
      if (v7 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      std::string::operator=(v7, v6);
      int v4 = *(_DWORD *)(a2 + 32);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_15;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    char v8 = *(unsigned char *)(a2 + 16);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(unsigned char *)(a1 + 16) = v8;
    int v4 = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_16;
    }
LABEL_15:
    char v9 = *(unsigned char *)(a2 + 17);
    *(_DWORD *)(a1 + 32) |= 4u;
    *(unsigned char *)(a1 + 17) = v9;
    int v4 = *(_DWORD *)(a2 + 32);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        return;
      }
      goto LABEL_9;
    }
LABEL_16:
    int v10 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 32) |= 8u;
    *(_DWORD *)(a1 + 20) = v10;
    if ((*(_DWORD *)(a2 + 32) & 0x10) == 0) {
      return;
    }
LABEL_9:
    int v5 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 0x10u;
    *(_DWORD *)(a1 + 24) = v5;
  }
}

void sub_1008CCD60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008CCD78(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D0420;
  sub_1001A4D20((uint64_t)a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008CCDCC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D0420;
  sub_1001A4D20((uint64_t)a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008CCE34()
{
}

uint64_t sub_1008CCE94(uint64_t result)
{
  if (*(unsigned char *)(result + 32))
  {
    if (*(unsigned char *)(result + 32))
    {
      uint64_t v1 = *(void *)(result + 8);
      if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v1 + 23) < 0)
        {
          **(unsigned char **)uint64_t v1 = 0;
          *(void *)(v1 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v1 = 0;
          *(unsigned char *)(v1 + 23) = 0;
        }
      }
    }
    *(_WORD *)(result + 16) = 0;
    *(_DWORD *)(result + 20) = 0;
    *(_DWORD *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1008CCEE4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 20);
  while (2)
  {
    int v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_26;
        }
        *(_DWORD *)(a1 + 32) |= 1u;
        if (*(_UNKNOWN **)(a1 + 8) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
        if (result)
        {
          int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v11 < v10 && *v11 == 16)
          {
            int v12 = v11 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_18;
          }
          continue;
        }
        return result;
      case 2u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v12 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_18:
        unsigned int v24 = 0;
        if ((unint64_t)v12 < v10 && (*v12 & 0x80000000) == 0)
        {
          unsigned int v13 = *v12;
          uint64_t v14 = v12 + 1;
          *((void *)this + 1) = v14;
LABEL_32:
          *(unsigned char *)(a1 + 16) = v13 != 0;
          *(_DWORD *)(a1 + 32) |= 2u;
          if ((unint64_t)v14 < v10 && *v14 == 24)
          {
            int v15 = v14 + 1;
            *((void *)this + 1) = v15;
            goto LABEL_35;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v24);
        if (result)
        {
          unsigned int v13 = v24;
          uint64_t v14 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          goto LABEL_32;
        }
        break;
      case 3u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_35:
        unsigned int v23 = 0;
        if ((unint64_t)v15 >= v10 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23);
          if (!result) {
            return result;
          }
          unsigned int v18 = v23;
          uint64_t v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v18 = *v15;
          uint64_t v19 = v15 + 1;
          *((void *)this + 1) = v19;
        }
        *(unsigned char *)(a1 + 17) = v18 != 0;
        *(_DWORD *)(a1 + 32) |= 4u;
        if ((unint64_t)v19 >= v10 || *v19 != 32) {
          continue;
        }
        unsigned int v16 = v19 + 1;
        *((void *)this + 1) = v16;
LABEL_43:
        if ((unint64_t)v16 >= v10 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v20 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          *int v5 = *v16;
          int v20 = v16 + 1;
          *((void *)this + 1) = v20;
        }
        *(_DWORD *)(a1 + 32) |= 8u;
        if ((unint64_t)v20 >= v10 || *v20 != 40) {
          continue;
        }
        int v17 = v20 + 1;
        *((void *)this + 1) = v17;
LABEL_51:
        unsigned int v25 = 0;
        if ((unint64_t)v17 >= v10 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
          if (!result) {
            return result;
          }
          unsigned int v21 = v25;
          int v22 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v21 = *v17;
          int v22 = (unsigned __int8 *)(v17 + 1);
          *((void *)this + 1) = v22;
        }
        *(_DWORD *)(a1 + 24) = v21;
        *(_DWORD *)(a1 + 32) |= 0x10u;
        if (v22 != (unsigned __int8 *)v10 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 4u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        unsigned int v16 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_43;
      case 5u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v17 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_51;
      default:
        int v8 = TagFallback & 7;
LABEL_26:
        if (v8 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_1008CD248(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 16), a2, a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 20), a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 17), a2, a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return result;
  }
LABEL_11:
  int v7 = *(_DWORD *)(v5 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, a2, a4);
}

uint64_t sub_1008CD30C(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 32);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 32))
    {
      uint64_t v6 = *(void *)(a1 + 8);
      int v7 = *(unsigned __int8 *)(v6 + 23);
      char v8 = v7;
      uint64_t v9 = *(void *)(v6 + 8);
      if ((v7 & 0x80u) == 0) {
        unint64_t v10 = *(unsigned __int8 *)(v6 + 23);
      }
      else {
        unint64_t v10 = v9;
      }
      if (v10 >= 0x80)
      {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10, a2);
        int v7 = *(unsigned __int8 *)(v6 + 23);
        uint64_t v9 = *(void *)(v6 + 8);
        int v11 = v12 + 1;
        int v3 = *(_DWORD *)(a1 + 32);
        char v8 = *(unsigned char *)(v6 + 23);
      }
      else
      {
        int v11 = 2;
      }
      if (v8 < 0) {
        int v7 = v9;
      }
      unsigned int v4 = v11 + v7;
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 2;
    }
    if ((v3 & 4) != 0) {
      uint64_t v5 = v4 + 2;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 8) != 0)
    {
      unsigned int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
      if (v13 >= 0x80)
      {
        int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 32);
      }
      else
      {
        int v14 = 2;
      }
      uint64_t v5 = (v14 + v5);
    }
    if ((v3 & 0x10) != 0)
    {
      int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
      if ((v15 & 0x80000000) != 0)
      {
        int v16 = 11;
      }
      else if (v15 >= 0x80)
      {
        int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
      }
      else
      {
        int v16 = 2;
      }
      uint64_t v5 = (v16 + v5);
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  *(_DWORD *)(a1 + 28) = v5;
  return v5;
}

void sub_1008CD410(uint64_t a1, void *lpsrc)
{
  sub_1008CCC08(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008CD498()
{
  return 1;
}

void *sub_1008CD4A0@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.WlanMeasurementElement");
}

void sub_1008CD4B0(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  sub_100902960((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2), a2 + 8);
  if (*(unsigned char *)(a2 + 40))
  {
    unsigned int v4 = *(_DWORD *)(a2 + 32);
    if (v4 >= 6) {
      sub_101A732E4();
    }
    a1[10] |= 1u;
    a1[8] = v4;
  }
}

void sub_1008CD554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008CD56C(uint64_t *a1)
{
  *a1 = (uint64_t)off_1022D0498;
  sub_10016B2E8(a1 + 1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_1008CD5C8(uint64_t *a1)
{
  sub_1008CD56C(a1);

  operator delete();
}

uint64_t sub_1008CD600(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10248A460;
  if (!qword_10248A460)
  {
    sub_1008C4C78(0, a2, a3, a4);
    return qword_10248A460;
  }
  return result;
}

void sub_1008CD630()
{
}

uint64_t sub_1008CD688(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40)) {
    *(_DWORD *)(a1 + 32) = 0;
  }
  uint64_t result = sub_10026DEDC(a1 + 8);
  *(_DWORD *)(a1 + 40) = 0;
  return result;
}

uint64_t sub_1008CD6C0(int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = (char *)*((void *)this + 1);
        if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v6;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v6 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_16;
        }
        unsigned int v26 = 0;
        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26);
          if (!result) {
            return result;
          }
          unsigned int v10 = v26;
        }
        else
        {
          unsigned int v10 = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        if (v10 <= 5)
        {
          a1[10] |= 1u;
          a1[8] = v10;
        }
        int v12 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v12 < *((void *)this + 2) && *v12 == 18) {
          goto LABEL_25;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_16;
      }
      while (1)
      {
        int v13 = a1[5];
        uint64_t v14 = a1[4];
        if ((int)v14 >= v13)
        {
          if (v13 == a1[6])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v13 + 1);
            int v13 = a1[5];
          }
          a1[5] = v13 + 1;
          operator new();
        }
        uint64_t v15 = *((void *)a1 + 1);
        a1[4] = v14 + 1;
        uint64_t v16 = *(void *)(v15 + 8 * v14);
        unsigned int v27 = 0;
        int v17 = (char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27))return 0; {
        }
          }
        else
        {
          unsigned int v27 = *v17;
          *((void *)this + 1) = v17 + 1;
        }
        int v18 = *((_DWORD *)this + 14);
        int v19 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v18 + 1;
        if (v18 >= v19) {
          return 0;
        }
        int v20 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27);
        if (!sub_1008CCEE4(v16, this, v21) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v20);
        int v22 = *((_DWORD *)this + 14);
        BOOL v23 = __OFSUB__(v22, 1);
        int v24 = v22 - 1;
        if (v24 < 0 == v23) {
          *((_DWORD *)this + 14) = v24;
        }
        int v12 = (unsigned char *)*((void *)this + 1);
        unsigned int v25 = (unsigned char *)*((void *)this + 2);
        if (v12 >= v25 || *v12 != 18) {
          break;
        }
LABEL_25:
        *((void *)this + 1) = v12 + 1;
      }
      if (v12 == v25 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v8 = TagFallback & 7;
LABEL_16:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1008CD990(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 40)) {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 32), (int)a2, a4);
  }
  if (*(int *)(v5 + 16) >= 1)
  {
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  return result;
}

uint64_t sub_1008CDA08(uint64_t a1, unsigned int a2)
{
  if (*(unsigned char *)(a1 + 40))
  {
    unsigned int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if ((v4 & 0x80000000) != 0)
    {
      int v3 = 11;
    }
    else if (v4 >= 0x80)
    {
      int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4, a2) + 1;
    }
    else
    {
      int v3 = 2;
    }
  }
  else
  {
    int v3 = 0;
  }
  int v5 = *(_DWORD *)(a1 + 16);
  uint64_t v6 = (v5 + v3);
  if (v5 >= 1)
  {
    uint64_t v7 = 0;
    do
    {
      int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008CD30C(*(void *)(*(void *)(a1 + 8) + 8 * v7), a2);
      int v9 = (int)v8;
      if (v8 >= 0x80) {
        int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2);
      }
      else {
        int v10 = 1;
      }
      uint64_t v6 = (v9 + v6 + v10);
      ++v7;
    }
    while (v7 < *(int *)(a1 + 16));
  }
  *(_DWORD *)(a1 + 36) = v6;
  return v6;
}

void sub_1008CDAC4(_DWORD *a1, void *lpsrc)
{
  sub_1008CD4B0(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008CDB4C()
{
  return 1;
}

void *sub_1008CDB54@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.WlanMeasurementList");
}

void sub_1008CDB64(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      char v6 = *(unsigned char *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(unsigned char *)(a1 + 8) = v6;
      int v4 = *(_DWORD *)(a2 + 32);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(_DWORD *)(a1 + 12) = v7;
    int v4 = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }
LABEL_13:
    int v8 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 32) |= 4u;
    *(_DWORD *)(a1 + 16) = v8;
    int v4 = *(_DWORD *)(a2 + 32);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        return;
      }
      goto LABEL_9;
    }
LABEL_14:
    int v9 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 32) |= 8u;
    *(_DWORD *)(a1 + 20) = v9;
    if ((*(_DWORD *)(a2 + 32) & 0x10) == 0) {
      return;
    }
LABEL_9:
    int v5 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 0x10u;
    *(_DWORD *)(a1 + 24) = v5;
  }
}

void sub_1008CDC78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008CDC90(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D0510;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008CDCB0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D0510;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008CDD04()
{
}

uint64_t sub_1008CDD5C(uint64_t result)
{
  if (*(unsigned char *)(result + 32))
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)(result + 20) = 0;
    *(void *)(result + 12) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1008CDD78(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 12);
  char v6 = (unsigned int *)(a1 + 16);
  int v7 = (unsigned int *)(a1 + 20);
  int v8 = (unsigned int *)(a1 + 24);
  while (2)
  {
    int v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v9;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v9 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        unsigned int v25 = 0;
        int v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v13 < v12 && (*v13 & 0x80000000) == 0)
        {
          unsigned int v14 = *v13;
          uint64_t v15 = v13 + 1;
          *((void *)this + 1) = v15;
LABEL_26:
          *(unsigned char *)(a1 + 8) = v14 != 0;
          *(_DWORD *)(a1 + 32) |= 1u;
          if ((unint64_t)v15 < v12 && *v15 == 16)
          {
            uint64_t v16 = v15 + 1;
            *((void *)this + 1) = v16;
            goto LABEL_29;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25);
        if (result)
        {
          unsigned int v14 = v25;
          uint64_t v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          goto LABEL_26;
        }
        break;
      case 2u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        uint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
LABEL_29:
        if ((unint64_t)v16 >= v12 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v20 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v5 = *v16;
          int v20 = v16 + 1;
          *((void *)this + 1) = v20;
        }
        *(_DWORD *)(a1 + 32) |= 2u;
        if ((unint64_t)v20 >= v12 || *v20 != 24) {
          continue;
        }
        int v17 = v20 + 1;
        *((void *)this + 1) = v17;
LABEL_37:
        if ((unint64_t)v17 >= v12 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          unsigned int v21 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *char v6 = *v17;
          unsigned int v21 = v17 + 1;
          *((void *)this + 1) = v21;
        }
        *(_DWORD *)(a1 + 32) |= 4u;
        if ((unint64_t)v21 >= v12 || *v21 != 32) {
          continue;
        }
        int v18 = v21 + 1;
        *((void *)this + 1) = v18;
LABEL_45:
        if ((unint64_t)v18 >= v12 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v22 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v7 = *v18;
          int v22 = v18 + 1;
          *((void *)this + 1) = v22;
        }
        *(_DWORD *)(a1 + 32) |= 8u;
        if ((unint64_t)v22 >= v12 || *v22 != 40) {
          continue;
        }
        int v19 = v22 + 1;
        *((void *)this + 1) = v19;
LABEL_53:
        if ((unint64_t)v19 >= v12 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          BOOL v23 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v19;
          BOOL v23 = (unsigned __int8 *)(v19 + 1);
          *((void *)this + 1) = v23;
        }
        *(_DWORD *)(a1 + 32) |= 0x10u;
        if (v23 != (unsigned __int8 *)v12 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v17 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_37;
      case 4u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_45;
      case 5u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_53;
      default:
        int v11 = TagFallback & 7;
LABEL_20:
        if (v11 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_1008CE0C4(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = (int *)result;
  int v6 = *(_DWORD *)(result + 32);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = v5[8];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  int v6 = v5[8];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
    if ((v5[8] & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  int v6 = v5[8];
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return result;
  }
LABEL_11:
  int v7 = v5[6];

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, a2, a4);
}

uint64_t sub_1008CE188(unsigned int *a1, unsigned int a2)
{
  unsigned int v3 = a1[8];
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_24;
  }
  uint64_t v4 = 2 * (v3 & 1);
  if ((v3 & 2) != 0)
  {
    int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[3];
    if (v5 >= 0x80)
    {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      unsigned int v3 = a1[8];
    }
    else
    {
      int v6 = 2;
    }
    uint64_t v4 = (v6 + v4);
    if ((v3 & 4) == 0)
    {
LABEL_4:
      if ((v3 & 8) == 0) {
        goto LABEL_5;
      }
      goto LABEL_16;
    }
  }
  else if ((v3 & 4) == 0)
  {
    goto LABEL_4;
  }
  int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[4];
  if (v7 >= 0x80)
  {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
    unsigned int v3 = a1[8];
  }
  else
  {
    int v8 = 2;
  }
  uint64_t v4 = (v8 + v4);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0) {
      goto LABEL_24;
    }
    goto LABEL_20;
  }
LABEL_16:
  int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[5];
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
    unsigned int v3 = a1[8];
  }
  else
  {
    int v10 = 2;
  }
  uint64_t v4 = (v10 + v4);
  if ((v3 & 0x10) != 0)
  {
LABEL_20:
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[6];
    if (v11 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
    }
    else {
      int v12 = 2;
    }
    uint64_t v4 = (v12 + v4);
  }
LABEL_24:
  a1[7] = v4;
  return v4;
}

void sub_1008CE274(uint64_t a1, void *lpsrc)
{
  sub_1008CDB64(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008CE2FC()
{
  return 1;
}

void *sub_1008CE304@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.QoP");
}

void sub_1008CE314(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    sub_100221DFC(a1 + 24, *(_DWORD *)(a1 + 32) + v4);
    memcpy((void *)(*(void *)(a1 + 24) + 4 * *(int *)(a1 + 32)), *(const void **)(a2 + 24), 4 * *(int *)(a2 + 32));
    *(_DWORD *)(a1 + 32) += *(_DWORD *)(a2 + 32);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 44);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 44))
    {
      char v6 = *(unsigned char *)(a2 + 8);
      *(_DWORD *)(a1 + 44) |= 1u;
      *(unsigned char *)(a1 + 8) = v6;
      int v5 = *(_DWORD *)(a2 + 44);
    }
    if ((v5 & 2) != 0)
    {
      unsigned int v7 = *(_DWORD *)(a2 + 12);
      if (v7 >= 5) {
        sub_101A73310();
      }
      *(_DWORD *)(a1 + 44) |= 2u;
      *(_DWORD *)(a1 + 12) = v7;
      int v5 = *(_DWORD *)(a2 + 44);
    }
    if ((v5 & 4) != 0)
    {
      int v8 = *(const std::string **)(a2 + 16);
      *(_DWORD *)(a1 + 44) |= 4u;
      int v9 = *(std::string **)(a1 + 16);
      if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      std::string::operator=(v9, v8);
    }
  }
}

void sub_1008CE468(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008CE480(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D0588;
  sub_1002444F8((uint64_t)a1);
  if (*((void *)a1 + 3)) {
    operator delete[]();
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008CE4F4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008CE480(a1);

  operator delete();
}

void sub_1008CE52C()
{
}

uint64_t sub_1008CE58C(uint64_t result)
{
  char v1 = *(unsigned char *)(result + 44);
  if (v1)
  {
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)(result + 12) = 0;
    if ((v1 & 4) != 0)
    {
      uint64_t v2 = *(void *)(result + 16);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 44) = 0;
  return result;
}

uint64_t sub_1008CE5E0(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unsigned int a3)
{
  uint64_t v5 = a1 + 24;
  while (2)
  {
    char v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        v31[0] = 0;
        int v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v31);
          if (!result) {
            return result;
          }
          unsigned int v11 = v31[0];
          int v12 = (unsigned char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unsigned int v11 = *v10;
          int v12 = v10 + 1;
          *((void *)this + 1) = v12;
        }
        *(unsigned char *)(a1 + 8) = v11 != 0;
        *(_DWORD *)(a1 + 44) |= 1u;
        if ((unint64_t)v12 < v9 && *v12 == 16)
        {
          int v13 = v12 + 1;
          *((void *)this + 1) = v13;
          goto LABEL_30;
        }
        continue;
      case 2u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v13 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
LABEL_30:
        v31[0] = 0;
        if ((unint64_t)v13 >= v9 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v31);
          if (!result) {
            return result;
          }
          unsigned int v17 = v31[0];
        }
        else
        {
          unsigned int v17 = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        if (v17 <= 4)
        {
          *(_DWORD *)(a1 + 44) |= 2u;
          *(_DWORD *)(a1 + 12) = v17;
        }
        int v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 != 26) {
          continue;
        }
        *((void *)this + 1) = v18 + 1;
LABEL_40:
        *(_DWORD *)(a1 + 44) |= 4u;
        if (*(_UNKNOWN **)(a1 + 16) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v19 = (char *)*((void *)this + 1);
        unsigned int v14 = (char *)*((void *)this + 2);
        if (v19 < v14 && *v19 == 32) {
          goto LABEL_45;
        }
        continue;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_40;
        }
        goto LABEL_20;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 == 2)
        {
          uint64_t result = sub_1008CEA24(this, v5);
          if (!result) {
            return result;
          }
          while (1)
          {
            int v19 = (char *)*((void *)this + 1);
            unsigned int v14 = (char *)*((void *)this + 2);
            if (v19 >= v14 || *v19 != 32) {
              break;
            }
LABEL_45:
            uint64_t v15 = v19 + 1;
            *((void *)this + 1) = v15;
LABEL_46:
            unsigned int v30 = 0;
            if (v15 >= v14 || *v15 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v30))return 0; {
            }
              }
            else
            {
              unsigned int v30 = *v15;
              *((void *)this + 1) = v15 + 1;
            }
            int v20 = *(_DWORD *)(a1 + 32);
            if (v20 == *(_DWORD *)(a1 + 36))
            {
              sub_100221DFC(v5, v20 + 1);
              int v20 = *(_DWORD *)(a1 + 32);
            }
            unsigned int v21 = v30;
            uint64_t v22 = *(void *)(a1 + 24);
            *(_DWORD *)(a1 + 32) = v20 + 1;
            *(_DWORD *)(v22 + 4 * v20) = v21;
            int v23 = *(_DWORD *)(a1 + 36) - *(_DWORD *)(a1 + 32);
            if (v23 >= 1)
            {
              int v24 = v23 + 1;
              do
              {
                unsigned int v25 = (unsigned char *)*((void *)this + 1);
                unint64_t v26 = *((void *)this + 2);
                if ((unint64_t)v25 >= v26 || *v25 != 32) {
                  break;
                }
                *((void *)this + 1) = v25 + 1;
                if ((unint64_t)(v25 + 1) >= v26 || (char)v25[1] < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v30))return 0; {
                }
                  }
                else
                {
                  unsigned int v30 = v25[1];
                  *((void *)this + 1) = v25 + 2;
                }
                int v27 = *(_DWORD *)(a1 + 32);
                if (v27 >= *(_DWORD *)(a1 + 36))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v31);
                  int v27 = *(_DWORD *)(a1 + 32);
                }
                unsigned int v28 = v30;
                uint64_t v29 = *(void *)(a1 + 24);
                *(_DWORD *)(a1 + 32) = v27 + 1;
                *(_DWORD *)(v29 + 4 * v27) = v28;
                --v24;
              }
              while (v24 > 1);
            }
          }
          if (v19 == v14 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        if ((TagFallback & 7) == 0)
        {
          uint64_t v15 = (char *)*((void *)this + 1);
          unsigned int v14 = (char *)*((void *)this + 2);
          goto LABEL_46;
        }
LABEL_20:
        if (v8 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
          continue;
          }
        }
        return 1;
      default:
        int v8 = TagFallback & 7;
        goto LABEL_20;
    }
  }
}

void sub_1008CE9FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1008CEA24(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a2)
{
  unsigned int v13 = 0;
  int v4 = (char *)*((void *)this + 1);
  if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v13);
    if (!result) {
      return result;
    }
    unsigned int v5 = v13;
  }
  else
  {
    unsigned int v5 = *v4;
    unsigned int v13 = v5;
    *((void *)this + 1) = v4 + 1;
  }
  int v7 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v5);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
  {
    do
    {
      unsigned int v12 = 0;
      int v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v12);
        if (!result) {
          return result;
        }
      }
      else
      {
        unsigned int v12 = *v8;
        *((void *)this + 1) = v8 + 1;
      }
      int v9 = *(_DWORD *)(a2 + 8);
      if (v9 == *(_DWORD *)(a2 + 12))
      {
        sub_100221DFC(a2, v9 + 1);
        int v9 = *(_DWORD *)(a2 + 8);
      }
      unsigned int v10 = v12;
      uint64_t v11 = *(void *)a2;
      *(_DWORD *)(a2 + 8) = v9 + 1;
      *(_DWORD *)(v11 + 4 * v9) = v10;
    }
    while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) > 0);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v7);
  return 1;
}

uint64_t sub_1008CEB40(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 44);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  if ((*(_DWORD *)(v5 + 44) & 4) != 0) {
LABEL_4:
  }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
LABEL_5:
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(*(void *)(v5 + 24) + 4 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  return result;
}

uint64_t sub_1008CEBF4(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 44);
  if ((_BYTE)v3)
  {
    int v4 = 2 * (v3 & 1);
    if ((v3 & 2) != 0)
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
      if ((v5 & 0x80000000) != 0)
      {
        int v6 = 11;
      }
      else if (v5 >= 0x80)
      {
        int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 44);
      }
      else
      {
        int v6 = 2;
      }
      v4 += v6;
    }
    if ((v3 & 4) != 0)
    {
      uint64_t v7 = *(void *)(a1 + 16);
      int v8 = *(unsigned __int8 *)(v7 + 23);
      char v9 = v8;
      uint64_t v10 = *(void *)(v7 + 8);
      if ((v8 & 0x80u) == 0) {
        unint64_t v11 = *(unsigned __int8 *)(v7 + 23);
      }
      else {
        unint64_t v11 = v10;
      }
      if (v11 >= 0x80)
      {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11, a2);
        int v8 = *(unsigned __int8 *)(v7 + 23);
        uint64_t v10 = *(void *)(v7 + 8);
        char v9 = *(unsigned char *)(v7 + 23);
      }
      else
      {
        int v12 = 1;
      }
      if (v9 < 0) {
        int v8 = v10;
      }
      v4 += v12 + v8 + 1;
    }
  }
  else
  {
    int v4 = 0;
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13 < 1)
  {
    int v15 = 0;
  }
  else
  {
    uint64_t v14 = 0;
    int v15 = 0;
    do
    {
      uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 24)
                                                                                             + 4 * v14);
      if (v16 >= 0x80)
      {
        int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
        int v13 = *(_DWORD *)(a1 + 32);
      }
      else
      {
        int v17 = 1;
      }
      v15 += v17;
      ++v14;
    }
    while (v14 < v13);
  }
  uint64_t result = (v15 + v4 + v13);
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

void sub_1008CED14(uint64_t a1, void *lpsrc)
{
  sub_1008CE314(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008CED9C()
{
  return 1;
}

void *sub_1008CEDA4@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.SLPAddress");
}

void sub_1008CEDB4(uint64_t a1, unsigned char *a2)
{
  if (a2 == (unsigned char *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = a2[16];
  if ((_BYTE)v4)
  {
    if (a2[16])
    {
      char v5 = a2[8];
      *(_DWORD *)(a1 + 16) |= 1u;
      *(unsigned char *)(a1 + 8) = v5;
      int v4 = *((_DWORD *)a2 + 4);
    }
    if ((v4 & 2) != 0)
    {
      char v6 = a2[9];
      *(_DWORD *)(a1 + 16) |= 2u;
      *(unsigned char *)(a1 + 9) = v6;
    }
  }
}

void sub_1008CEE60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008CEE78(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D0600;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008CEE98(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D0600;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008CEEEC()
{
}

uint64_t sub_1008CEF3C(uint64_t result)
{
  if (*(unsigned char *)(result + 16)) {
    *(_WORD *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1008CEF50(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      char v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_15;
      }
      unsigned int v17 = 0;
      uint64_t v10 = (char *)*((void *)this + 1);
      unint64_t v8 = *((void *)this + 2);
      if ((unint64_t)v10 >= v8 || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v17);
        if (!result) {
          return result;
        }
        unsigned int v11 = v17;
        int v12 = (unsigned char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
      }
      else
      {
        unsigned int v11 = *v10;
        int v12 = v10 + 1;
        *((void *)this + 1) = v12;
      }
      *(unsigned char *)(a1 + 8) = v11 != 0;
      *(_DWORD *)(a1 + 16) |= 1u;
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        char v9 = v12 + 1;
        *((void *)this + 1) = v9;
LABEL_23:
        unsigned int v16 = 0;
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v16);
          if (!result) {
            return result;
          }
          unsigned int v13 = v16;
          uint64_t v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v13 = *v9;
          uint64_t v14 = (unsigned __int8 *)(v9 + 1);
          *((void *)this + 1) = v14;
        }
        *(unsigned char *)(a1 + 9) = v13 != 0;
        *(_DWORD *)(a1 + 16) |= 2u;
        if (v14 == (unsigned __int8 *)v8 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        char v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_23;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_15:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1008CF108(uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 16);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 16);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(unsigned __int8 *)(v5 + 9);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_1008CF174(uint64_t a1)
{
  unsigned int v1 = 2 * (*(_DWORD *)(a1 + 16) & 1);
  if ((*(_DWORD *)(a1 + 16) & 2) != 0) {
    v1 += 2;
  }
  if (*(_DWORD *)(a1 + 16)) {
    uint64_t v2 = v1;
  }
  else {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 12) = v2;
  return v2;
}

void sub_1008CF19C(uint64_t a1, unsigned char *lpsrc)
{
  sub_1008CEDB4(a1, lpsrc);
}

uint64_t sub_1008CF224()
{
  return 1;
}

void *sub_1008CF22C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.Notification");
}

void sub_1008CF23C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      *(_DWORD *)(a1 + 24) |= 1u;
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_10248A480 + 8);
      }
      sub_1008CE314(v5, v6);
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      unsigned int v7 = *(_DWORD *)(a2 + 16);
      if (v7 >= 4) {
        sub_101A7333C();
      }
      *(_DWORD *)(a1 + 24) |= 2u;
      *(_DWORD *)(a1 + 16) = v7;
    }
  }
}

void sub_1008CF35C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008CF374(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022D0678;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_10248A480 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008CF404(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008CF374(a1);

  operator delete();
}

void sub_1008CF43C()
{
}

uint64_t sub_1008CF48C(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 24))
  {
    if (*(unsigned char *)(result + 24))
    {
      uint64_t result = *(void *)(result + 8);
      if (result) {
        uint64_t result = sub_1008CE58C(result);
      }
    }
    *(_DWORD *)(v1 + 16) = 0;
  }
  *(_DWORD *)(v1 + 24) = 0;
  return result;
}

uint64_t sub_1008CF4CC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 == 1) {
        break;
      }
      if (TagFallback >> 3 == 2)
      {
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) == 0)
        {
          char v9 = (char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
          goto LABEL_29;
        }
      }
      else
      {
        int v7 = TagFallback & 7;
      }
LABEL_17:
      if (v7 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
    int v7 = TagFallback & 7;
    if (v7 != 2) {
      goto LABEL_17;
    }
    *(_DWORD *)(a1 + 24) |= 1u;
    uint64_t v10 = *(void *)(a1 + 8);
    if (!v10) {
      operator new();
    }
    unsigned int v23 = 0;
    unsigned int v11 = (char *)*((void *)this + 1);
    if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23)) {
        return 0;
      }
    }
    else
    {
      unsigned int v23 = *v11;
      *((void *)this + 1) = v11 + 1;
    }
    int v12 = *((_DWORD *)this + 14);
    int v13 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v12 + 1;
    if (v12 >= v13) {
      return 0;
    }
    int v14 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v23);
    if (!sub_1008CE5E0(v10, this, v15) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v14);
    int v16 = *((_DWORD *)this + 14);
    BOOL v17 = __OFSUB__(v16, 1);
    int v18 = v16 - 1;
    if (v18 < 0 == v17) {
      *((_DWORD *)this + 14) = v18;
    }
    int v19 = (unsigned char *)*((void *)this + 1);
    unint64_t v8 = *((void *)this + 2);
    if ((unint64_t)v19 < v8 && *v19 == 16)
    {
      char v9 = v19 + 1;
      *((void *)this + 1) = v9;
LABEL_29:
      unsigned int v22 = 0;
      if ((unint64_t)v9 >= v8 || *v9 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
        if (!result) {
          return result;
        }
        unsigned int v20 = v22;
      }
      else
      {
        unsigned int v20 = *v9;
        *((void *)this + 1) = v9 + 1;
      }
      if (v20 <= 3)
      {
        *(_DWORD *)(a1 + 24) |= 2u;
        *(_DWORD *)(a1 + 16) = v20;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
  }
}

uint64_t sub_1008CF740(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(result + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248A480 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 24) & 2) != 0)
  {
LABEL_7:
    int v8 = *(_DWORD *)(v5 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, (int)a2, a4);
  }
  return result;
}

uint64_t sub_1008CF7C0(uint64_t a1, unsigned int a2)
{
  if (!*(unsigned char *)(a1 + 24))
  {
    uint64_t v3 = 0;
    goto LABEL_18;
  }
  if ((*(unsigned char *)(a1 + 24) & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (!v4) {
    uint64_t v4 = *(void *)(qword_10248A480 + 8);
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008CEBF4(v4, a2);
  int v6 = (int)v5;
  if (v5 >= 0x80) {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
  }
  else {
    int v7 = 1;
  }
  uint64_t v3 = (v6 + v7 + 1);
  if ((*(_DWORD *)(a1 + 24) & 2) != 0)
  {
LABEL_12:
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v8 & 0x80000000) != 0)
    {
      int v9 = 11;
    }
    else if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    }
    else
    {
      int v9 = 2;
    }
    uint64_t v3 = (v9 + v3);
  }
LABEL_18:
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_1008CF878(uint64_t a1, void *lpsrc)
{
  sub_1008CF23C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008CF900()
{
  return 1;
}

void *sub_1008CF908@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.SuplInitVer2Extension");
}

uint64_t sub_1008CF918(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1022D06F0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 36) = 0u;
  sub_1008CF980(a1, a2);
  return a1;
}

void sub_1008CF96C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void sub_1008CF980(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 48);
  if (!(_BYTE)v4) {
    return;
  }
  if (*(unsigned char *)(a2 + 48))
  {
    unsigned int v5 = *(_DWORD *)(a2 + 40);
    if (v5 >= 0x12) {
      sub_101A73368();
    }
    *(_DWORD *)(a1 + 48) |= 1u;
    *(_DWORD *)(a1 + 40) = v5;
    int v4 = *(_DWORD *)(a2 + 48);
  }
  if ((v4 & 2) == 0)
  {
    if ((v4 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_17:
    *(_DWORD *)(a1 + 48) |= 4u;
    uint64_t v8 = *(void *)(a1 + 16);
    if (!v8) {
      operator new();
    }
    uint64_t v9 = *(void *)(a2 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_10248A488 + 16);
    }
    sub_1008CE314(v8, v9);
    int v4 = *(_DWORD *)(a2 + 48);
    if ((v4 & 8) == 0)
    {
LABEL_10:
      if ((v4 & 0x10) == 0) {
        return;
      }
      goto LABEL_27;
    }
    goto LABEL_22;
  }
  *(_DWORD *)(a1 + 48) |= 2u;
  uint64_t v6 = *(void *)(a1 + 8);
  if (!v6) {
    operator new();
  }
  uint64_t v7 = *(void *)(a2 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248A488 + 8);
  }
  sub_1008CDB64(v6, v7);
  int v4 = *(_DWORD *)(a2 + 48);
  if ((v4 & 4) != 0) {
    goto LABEL_17;
  }
LABEL_9:
  if ((v4 & 8) == 0) {
    goto LABEL_10;
  }
LABEL_22:
  *(_DWORD *)(a1 + 48) |= 8u;
  uint64_t v10 = *(void *)(a1 + 24);
  if (!v10) {
    operator new();
  }
  unsigned int v11 = *(unsigned char **)(a2 + 24);
  if (!v11) {
    unsigned int v11 = *(unsigned char **)(qword_10248A488 + 24);
  }
  sub_1008CEDB4(v10, v11);
  if ((*(_DWORD *)(a2 + 48) & 0x10) != 0)
  {
LABEL_27:
    *(_DWORD *)(a1 + 48) |= 0x10u;
    uint64_t v12 = *(void *)(a1 + 32);
    if (!v12) {
      operator new();
    }
    uint64_t v13 = *(void *)(a2 + 32);
    if (!v13) {
      uint64_t v13 = *(void *)(qword_10248A488 + 32);
    }
    sub_1008CF23C(v12, v13);
  }
}

void sub_1008CFC14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1008CFC30(void *result)
{
  if ((void *)qword_10248A488 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[3];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t result = (void *)v1[4];
    if (result)
    {
      unsigned int v5 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v5();
    }
  }
  return result;
}

void sub_1008CFD28(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D06F0;
  sub_1008CFC30(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008CFD7C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D06F0;
  sub_1008CFC30(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

uint64_t sub_1008CFDE4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10248A488;
  if (!qword_10248A488)
  {
    sub_1008C4C78(0, a2, a3, a4);
    return qword_10248A488;
  }
  return result;
}

void sub_1008CFE14()
{
}

uint64_t sub_1008CFE6C(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(unsigned char *)(result + 48);
  if ((_BYTE)v2)
  {
    *(_DWORD *)(result + 40) = 0;
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = *(void *)(result + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 32))
        {
          *(unsigned char *)(v3 + 8) = 0;
          *(void *)(v3 + 20) = 0;
          *(void *)(v3 + 12) = 0;
        }
        *(_DWORD *)(v3 + 32) = 0;
        int v2 = *(_DWORD *)(result + 48);
      }
    }
    if ((v2 & 4) != 0)
    {
      uint64_t result = *(void *)(result + 16);
      if (result)
      {
        uint64_t result = sub_1008CE58C(result);
        int v2 = *(_DWORD *)(v1 + 48);
      }
    }
    if ((v2 & 8) != 0)
    {
      uint64_t v4 = *(void *)(v1 + 24);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 16)) {
          *(_WORD *)(v4 + 8) = 0;
        }
        *(_DWORD *)(v4 + 16) = 0;
        int v2 = *(_DWORD *)(v1 + 48);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      uint64_t result = *(void *)(v1 + 32);
      if (result) {
        uint64_t result = sub_1008CF48C(result);
      }
    }
  }
  *(_DWORD *)(v1 + 48) = 0;
  return result;
}

uint64_t sub_1008CFF08(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    unsigned int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 < *((void *)this + 2) && (*v5 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_6;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unsigned int v48 = 0;
        uint64_t v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v48);
          if (!result) {
            return result;
          }
          unsigned int v9 = v48;
        }
        else
        {
          unsigned int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
        }
        if (v9 <= 0x11)
        {
          *(_DWORD *)(a1 + 48) |= 1u;
          *(_DWORD *)(a1 + 40) = v9;
        }
        unsigned int v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 18)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_29;
        }
        continue;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_19;
        }
LABEL_29:
        *(_DWORD *)(a1 + 48) |= 2u;
        uint64_t v12 = *(void *)(a1 + 8);
        if (!v12) {
          operator new();
        }
        unsigned int v48 = 0;
        uint64_t v13 = (char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v48))return 0; {
        }
          }
        else
        {
          unsigned int v48 = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        int v14 = *((_DWORD *)this + 14);
        int v15 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v14 + 1;
        if (v14 >= v15) {
          return 0;
        }
        int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v48);
        if (!sub_1008CDD78(v12, this, v17) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
        int v18 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v18, 1);
        int v20 = v18 - 1;
        if (v20 < 0 == v19) {
          *((_DWORD *)this + 14) = v20;
        }
        unsigned int v21 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 != 26) {
          continue;
        }
        *((void *)this + 1) = v21 + 1;
LABEL_43:
        *(_DWORD *)(a1 + 48) |= 4u;
        uint64_t v22 = *(void *)(a1 + 16);
        if (!v22) {
          operator new();
        }
        unsigned int v48 = 0;
        unsigned int v23 = (char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v48))return 0; {
        }
          }
        else
        {
          unsigned int v48 = *v23;
          *((void *)this + 1) = v23 + 1;
        }
        int v24 = *((_DWORD *)this + 14);
        int v25 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v24 + 1;
        if (v24 >= v25) {
          return 0;
        }
        int v26 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v48);
        if (!sub_1008CE5E0(v22, this, v27) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v26);
        int v28 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v28, 1);
        int v29 = v28 - 1;
        if (v29 < 0 == v19) {
          *((_DWORD *)this + 14) = v29;
        }
        unsigned int v30 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v30 >= *((void *)this + 2) || *v30 != 34) {
          continue;
        }
        *((void *)this + 1) = v30 + 1;
LABEL_57:
        *(_DWORD *)(a1 + 48) |= 8u;
        uint64_t v31 = *(void *)(a1 + 24);
        if (!v31) {
          operator new();
        }
        unsigned int v48 = 0;
        unsigned int v32 = (char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v48))return 0; {
        }
          }
        else
        {
          unsigned int v48 = *v32;
          *((void *)this + 1) = v32 + 1;
        }
        int v33 = *((_DWORD *)this + 14);
        int v34 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v33 + 1;
        if (v33 >= v34) {
          return 0;
        }
        int v35 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v48);
        if (!sub_1008CEF50(v31, this, v36) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v35);
        int v37 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v37, 1);
        int v38 = v37 - 1;
        if (v38 < 0 == v19) {
          *((_DWORD *)this + 14) = v38;
        }
        int v39 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v39 >= *((void *)this + 2) || *v39 != 42) {
          continue;
        }
        *((void *)this + 1) = v39 + 1;
LABEL_71:
        *(_DWORD *)(a1 + 48) |= 0x10u;
        uint64_t v40 = *(void *)(a1 + 32);
        if (!v40) {
          operator new();
        }
        unsigned int v48 = 0;
        uint64_t v41 = (char *)*((void *)this + 1);
        if ((unint64_t)v41 >= *((void *)this + 2) || *v41 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v48))return 0; {
        }
          }
        else
        {
          unsigned int v48 = *v41;
          *((void *)this + 1) = v41 + 1;
        }
        int v42 = *((_DWORD *)this + 14);
        int v43 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v42 + 1;
        if (v42 >= v43) {
          return 0;
        }
        int v44 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v48);
        if (!sub_1008CF4CC(v40, this, v45) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v44);
        int v46 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v46, 1);
        int v47 = v46 - 1;
        if (v47 < 0 == v19) {
          *((_DWORD *)this + 14) = v47;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_43;
        }
        goto LABEL_19;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_57;
        }
        goto LABEL_19;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_19;
        }
        goto LABEL_71;
      default:
        int v7 = TagFallback & 7;
LABEL_19:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1008D0508(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 48);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 40), (int)a2, a4);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248A488 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_11:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_10248A488 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      return result;
    }
    goto LABEL_17;
  }
LABEL_14:
  uint64_t v9 = *(void *)(v5 + 24);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_10248A488 + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
  if ((*(_DWORD *)(v5 + 48) & 0x10) != 0)
  {
LABEL_17:
    uint64_t v10 = *(void *)(v5 + 32);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_10248A488 + 32);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v10, a2, a4);
  }
  return result;
}

uint64_t sub_1008D060C(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 48);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_43;
  }
  if (*(unsigned char *)(a1 + 48))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
    if ((v5 & 0x80000000) != 0)
    {
      uint64_t v4 = 11;
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }
    else if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 48);
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 48) & 2) == 0) {
      goto LABEL_19;
    }
  }
  int v6 = *(unsigned int **)(a1 + 8);
  if (!v6) {
    int v6 = *(unsigned int **)(qword_10248A488 + 8);
  }
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008CE188(v6, a2);
  int v8 = (int)v7;
  if (v7 >= 0x80) {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
  }
  else {
    int v9 = 1;
  }
  uint64_t v4 = (v4 + v8 + v9 + 1);
  int v3 = *(_DWORD *)(a1 + 48);
LABEL_19:
  if ((v3 & 4) != 0)
  {
    uint64_t v10 = *(void *)(a1 + 16);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_10248A488 + 16);
    }
    unsigned int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008CEBF4(v10, a2);
    int v12 = (int)v11;
    if (v11 >= 0x80) {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    }
    else {
      int v13 = 1;
    }
    uint64_t v4 = (v4 + v12 + v13 + 1);
    int v3 = *(_DWORD *)(a1 + 48);
    if ((v3 & 8) == 0)
    {
LABEL_21:
      if ((v3 & 0x10) == 0) {
        goto LABEL_43;
      }
      goto LABEL_37;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_21;
  }
  uint64_t v14 = *(void *)(a1 + 24);
  if (!v14) {
    uint64_t v14 = *(void *)(qword_10248A488 + 24);
  }
  int v15 = 2 * (*(_DWORD *)(v14 + 16) & 1);
  if ((*(_DWORD *)(v14 + 16) & 2) != 0) {
    v15 += 2;
  }
  if (*(_DWORD *)(v14 + 16)) {
    int v16 = v15;
  }
  else {
    int v16 = 0;
  }
  *(_DWORD *)(v14 + 12) = v16;
  uint64_t v4 = (v4 + v16 + 2);
  if ((*(_DWORD *)(a1 + 48) & 0x10) != 0)
  {
LABEL_37:
    uint64_t v17 = *(void *)(a1 + 32);
    if (!v17) {
      uint64_t v17 = *(void *)(qword_10248A488 + 32);
    }
    int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008CF7C0(v17, a2);
    int v20 = (int)v18;
    if (v18 >= 0x80) {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, v19);
    }
    else {
      int v21 = 1;
    }
    uint64_t v4 = (v4 + v20 + v21 + 1);
  }
LABEL_43:
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void sub_1008D07B4(uint64_t a1, void *lpsrc)
{
  sub_1008CF980(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008D083C()
{
  return 1;
}

void *sub_1008D0844@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.Init");
}

void sub_1008D0854(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  int v4 = *(_DWORD *)(a2 + 52);
  if (!(_BYTE)v4) {
    goto LABEL_14;
  }
  if (v4)
  {
    int v5 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 52) |= 1u;
    *(_DWORD *)(a1 + 32) = v5;
    int v4 = *(_DWORD *)(a2 + 52);
  }
  if ((v4 & 2) != 0)
  {
    int v8 = *(const std::string **)(a2 + 8);
    *(_DWORD *)(a1 + 52) |= 2u;
    int v9 = *(std::string **)(a1 + 8);
    if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v9, v8);
    int v4 = *(_DWORD *)(a2 + 52);
    if ((v4 & 4) == 0)
    {
LABEL_8:
      if ((v4 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_21;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_8;
  }
  char v10 = *(unsigned char *)(a2 + 36);
  *(_DWORD *)(a1 + 52) |= 4u;
  *(unsigned char *)(a1 + 36) = v10;
  int v4 = *(_DWORD *)(a2 + 52);
  if ((v4 & 8) == 0)
  {
LABEL_9:
    if ((v4 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_21:
  unsigned int v11 = *(const std::string **)(a2 + 16);
  *(_DWORD *)(a1 + 52) |= 8u;
  int v12 = *(std::string **)(a1 + 16);
  if (v12 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v12, v11);
  int v4 = *(_DWORD *)(a2 + 52);
  if ((v4 & 0x10) == 0)
  {
LABEL_10:
    if ((v4 & 0x20) == 0) {
      goto LABEL_11;
    }
LABEL_29:
    int v15 = *(const std::string **)(a2 + 40);
    *(_DWORD *)(a1 + 52) |= 0x20u;
    int v16 = *(std::string **)(a1 + 40);
    if (v16 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v16, v15);
    int v4 = *(_DWORD *)(a2 + 52);
    if ((v4 & 0x40) == 0)
    {
LABEL_12:
      if ((v4 & 0x80) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    goto LABEL_32;
  }
LABEL_24:
  *(_DWORD *)(a1 + 52) |= 0x10u;
  uint64_t v13 = *(void *)(a1 + 24);
  if (!v13) {
    operator new();
  }
  uint64_t v14 = *(void *)(a2 + 24);
  if (!v14) {
    uint64_t v14 = *(void *)(qword_10248A490 + 24);
  }
  sub_1008C78D8(v13, v14);
  int v4 = *(_DWORD *)(a2 + 52);
  if ((v4 & 0x20) != 0) {
    goto LABEL_29;
  }
LABEL_11:
  if ((v4 & 0x40) == 0) {
    goto LABEL_12;
  }
LABEL_32:
  char v17 = *(unsigned char *)(a2 + 37);
  *(_DWORD *)(a1 + 52) |= 0x40u;
  *(unsigned char *)(a1 + 37) = v17;
  int v4 = *(_DWORD *)(a2 + 52);
  if ((v4 & 0x80) != 0)
  {
LABEL_13:
    char v6 = *(unsigned char *)(a2 + 38);
    *(_DWORD *)(a1 + 52) |= 0x80u;
    *(unsigned char *)(a1 + 38) = v6;
    int v4 = *(_DWORD *)(a2 + 52);
  }
LABEL_14:
  if ((v4 & 0x100) != 0)
  {
    char v7 = *(unsigned char *)(a2 + 39);
    *(_DWORD *)(a1 + 52) |= 0x100u;
    *(unsigned char *)(a1 + 39) = v7;
  }
}

void sub_1008D0AE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1008D0B00(void *result)
{
  uint64_t v1 = result[1];
  if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  uint64_t v3 = result[2];
  if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v3 != 0)
  {
    if (*(char *)(v3 + 23) < 0) {
      operator delete(*(void **)v3);
    }
    operator delete();
  }
  uint64_t v5 = result[5];
  if ((_UNKNOWN *)v5 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    operator delete();
  }
  if ((void *)qword_10248A490 != result)
  {
    uint64_t result = (void *)result[3];
    if (result)
    {
      char v7 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v7();
    }
  }
  return result;
}

void sub_1008D0C30(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D0768;
  sub_1008D0B00(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008D0C84(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D0768;
  sub_1008D0B00(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

uint64_t sub_1008D0CEC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10248A490;
  if (!qword_10248A490)
  {
    sub_1008C4C78(0, a2, a3, a4);
    return qword_10248A490;
  }
  return result;
}

void sub_1008D0D1C()
{
}

uint64_t sub_1008D0D78(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 52);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(result + 32) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(result + 8);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(unsigned char *)(result + 36) = 0;
    if ((*(unsigned char *)(result + 52) & 8) != 0)
    {
      uint64_t v3 = *(void *)(result + 16);
      if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    int v4 = *(_DWORD *)(result + 52);
    if ((v4 & 0x10) != 0)
    {
      uint64_t v5 = *(void *)(result + 24);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 24))
        {
          *(_WORD *)(v5 + 16) = 0;
          *(void *)(v5 + 8) = 0;
        }
        *(_DWORD *)(v5 + 24) = 0;
        int v4 = *(_DWORD *)(result + 52);
      }
    }
    if ((v4 & 0x20) != 0)
    {
      uint64_t v6 = *(void *)(result + 40);
      if ((_UNKNOWN *)v6 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v6 + 23) < 0)
        {
          **(unsigned char **)uint64_t v6 = 0;
          *(void *)(v6 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v6 = 0;
          *(unsigned char *)(v6 + 23) = 0;
        }
      }
    }
    *(_WORD *)(result + 37) = 0;
    int v1 = *(_DWORD *)(result + 52);
  }
  if ((v1 & 0xFF00) != 0) {
    *(unsigned char *)(result + 39) = 0;
  }
  *(_DWORD *)(result + 52) = 0;
  return result;
}

uint64_t sub_1008D0E6C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)(a1 + 32);
  while (2)
  {
    uint64_t v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        char v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          unsigned int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v5 = *v10;
          unsigned int v11 = v10 + 1;
          *((void *)this + 1) = v11;
        }
        int v12 = *(_DWORD *)(a1 + 52) | 1;
        *(_DWORD *)(a1 + 52) = v12;
        if ((unint64_t)v11 < v9 && *v11 == 18)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_37;
        }
        continue;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_28;
        }
        int v12 = *(_DWORD *)(a1 + 52);
LABEL_37:
        *(_DWORD *)(a1 + 52) = v12 | 2;
        if (*(_UNKNOWN **)(a1 + 8) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v21 = (unsigned char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((unint64_t)v21 >= v13 || *v21 != 24) {
          continue;
        }
        uint64_t v14 = v21 + 1;
        *((void *)this + 1) = v14;
LABEL_43:
        unsigned int v42 = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v42);
          if (!result) {
            return result;
          }
          unsigned int v22 = v42;
          unsigned int v23 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          unsigned int v22 = *v14;
          unsigned int v23 = v14 + 1;
          *((void *)this + 1) = v23;
        }
        *(unsigned char *)(a1 + 36) = v22 != 0;
        int v15 = *(_DWORD *)(a1 + 52) | 4;
        *(_DWORD *)(a1 + 52) = v15;
        if ((unint64_t)v23 >= v13 || *v23 != 34) {
          continue;
        }
        *((void *)this + 1) = v23 + 1;
LABEL_51:
        *(_DWORD *)(a1 + 52) = v15 | 8;
        if (*(_UNKNOWN **)(a1 + 16) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v24 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 != 42) {
          continue;
        }
        *((void *)this + 1) = v24 + 1;
LABEL_57:
        *(_DWORD *)(a1 + 52) |= 0x10u;
        uint64_t v25 = *(void *)(a1 + 24);
        if (!v25) {
          operator new();
        }
        unsigned int v42 = 0;
        int v26 = (char *)*((void *)this + 1);
        if ((unint64_t)v26 >= *((void *)this + 2) || *v26 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v42))return 0; {
        }
          }
        else
        {
          unsigned int v42 = *v26;
          *((void *)this + 1) = v26 + 1;
        }
        int v27 = *((_DWORD *)this + 14);
        int v28 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v27 + 1;
        if (v27 < v28)
        {
          int v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v42);
          if (sub_1008C7AA0(v25, this, v30))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
              int v31 = *((_DWORD *)this + 14);
              BOOL v32 = __OFSUB__(v31, 1);
              int v33 = v31 - 1;
              if (v33 < 0 == v32) {
                *((_DWORD *)this + 14) = v33;
              }
              int v34 = (unsigned char *)*((void *)this + 1);
              if ((unint64_t)v34 < *((void *)this + 2) && *v34 == 50)
              {
                *((void *)this + 1) = v34 + 1;
LABEL_71:
                *(_DWORD *)(a1 + 52) |= 0x20u;
                if (*(_UNKNOWN **)(a1 + 40) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
                  operator new();
                }
                uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
                if (!result) {
                  return result;
                }
                int v35 = (unsigned char *)*((void *)this + 1);
                unint64_t v16 = *((void *)this + 2);
                if ((unint64_t)v35 < v16 && *v35 == 56)
                {
                  char v17 = v35 + 1;
                  *((void *)this + 1) = v17;
LABEL_77:
                  unsigned int v42 = 0;
                  if ((unint64_t)v17 >= v16 || *v17 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v42);
                    if (!result) {
                      return result;
                    }
                    unsigned int v36 = v42;
                    int v37 = (unsigned char *)*((void *)this + 1);
                    unint64_t v16 = *((void *)this + 2);
                  }
                  else
                  {
                    unsigned int v36 = *v17;
                    int v37 = v17 + 1;
                    *((void *)this + 1) = v37;
                  }
                  *(unsigned char *)(a1 + 37) = v36 != 0;
                  *(_DWORD *)(a1 + 52) |= 0x40u;
                  if ((unint64_t)v37 < v16 && *v37 == 64)
                  {
                    int v18 = v37 + 1;
                    *((void *)this + 1) = v18;
LABEL_85:
                    unsigned int v42 = 0;
                    if ((unint64_t)v18 >= v16 || *v18 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v42);
                      if (!result) {
                        return result;
                      }
                      unsigned int v38 = v42;
                      int v39 = (unsigned char *)*((void *)this + 1);
                      unint64_t v16 = *((void *)this + 2);
                    }
                    else
                    {
                      unsigned int v38 = *v18;
                      int v39 = v18 + 1;
                      *((void *)this + 1) = v39;
                    }
                    *(unsigned char *)(a1 + 38) = v38 != 0;
                    *(_DWORD *)(a1 + 52) |= 0x80u;
                    if ((unint64_t)v39 < v16 && *v39 == 72)
                    {
                      unsigned int v19 = v39 + 1;
                      *((void *)this + 1) = v19;
LABEL_93:
                      unsigned int v42 = 0;
                      if ((unint64_t)v19 >= v16 || *v19 < 0)
                      {
                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v42);
                        if (!result) {
                          return result;
                        }
                        unsigned int v40 = v42;
                        uint64_t v41 = (unsigned __int8 *)*((void *)this + 1);
                        unint64_t v16 = *((void *)this + 2);
                      }
                      else
                      {
                        unsigned int v40 = *v19;
                        uint64_t v41 = (unsigned __int8 *)(v19 + 1);
                        *((void *)this + 1) = v41;
                      }
                      *(unsigned char *)(a1 + 39) = v40 != 0;
                      *(_DWORD *)(a1 + 52) |= 0x100u;
                      if (v41 == (unsigned __int8 *)v16
                        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                      {
                        *((_DWORD *)this + 8) = 0;
                        uint64_t result = 1;
                        *((unsigned char *)this + 36) = 1;
                        return result;
                      }
                    }
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_43;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_28;
        }
        int v15 = *(_DWORD *)(a1 + 52);
        goto LABEL_51;
      case 5u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_57;
        }
        goto LABEL_28;
      case 6u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_71;
        }
        goto LABEL_28;
      case 7u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        char v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_77;
      case 8u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_85;
      case 9u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        unsigned int v19 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_93;
      default:
        int v8 = TagFallback & 7;
LABEL_28:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1008D1484(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 52);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 32), a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 36), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_15:
  uint64_t v7 = *(void *)(v5 + 24);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248A490 + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
LABEL_20:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 38), (BOOL)a2, a4);
    if ((*(_DWORD *)(v5 + 52) & 0x100) == 0) {
      return result;
    }
    goto LABEL_21;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 37), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x80) != 0) {
    goto LABEL_20;
  }
LABEL_9:
  if ((v6 & 0x100) == 0) {
    return result;
  }
LABEL_21:
  int v8 = *(unsigned __int8 *)(v5 + 39);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v8, (BOOL)a2, a4);
}

uint64_t sub_1008D15C8(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 52);
  if (!(_BYTE)v3)
  {
    unsigned int v5 = 0;
    goto LABEL_57;
  }
  if (v3)
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if (v6 >= 0x80)
    {
      int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 52);
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }
    else
    {
      int v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }
  }
  else
  {
    int v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_19;
    }
  }
  uint64_t v7 = *(void *)(a1 + 8);
  int v8 = *(unsigned __int8 *)(v7 + 23);
  char v9 = v8;
  uint64_t v10 = *(void *)(v7 + 8);
  if ((v8 & 0x80u) == 0) {
    unint64_t v11 = *(unsigned __int8 *)(v7 + 23);
  }
  else {
    unint64_t v11 = v10;
  }
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11, a2);
    int v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v10 = *(void *)(v7 + 8);
    int v3 = *(_DWORD *)(a1 + 52);
    char v9 = *(unsigned char *)(v7 + 23);
  }
  else
  {
    int v12 = 1;
  }
  if (v9 < 0) {
    int v8 = v10;
  }
  v4 += v12 + v8 + 1;
LABEL_19:
  if ((v3 & 4) != 0) {
    v4 += 2;
  }
  if ((v3 & 8) == 0)
  {
    if ((v3 & 0x10) == 0) {
      goto LABEL_23;
    }
LABEL_34:
    uint64_t v19 = *(void *)(a1 + 24);
    if (!v19) {
      uint64_t v19 = *(void *)(qword_10248A490 + 24);
    }
    int v20 = *(_DWORD *)(v19 + 24);
    int v21 = 2 * (v20 & 1);
    if ((v20 & 2) != 0) {
      v21 += 2;
    }
    if ((v20 & 4) != 0) {
      v21 |= 9u;
    }
    if (*(_DWORD *)(v19 + 24)) {
      int v22 = v21;
    }
    else {
      int v22 = 0;
    }
    *(_DWORD *)(v19 + 20) = v22;
    v4 += v22 + 2;
    int v3 = *(_DWORD *)(a1 + 52);
    if ((v3 & 0x20) == 0) {
      goto LABEL_53;
    }
    goto LABEL_44;
  }
  uint64_t v13 = *(void *)(a1 + 16);
  int v14 = *(unsigned __int8 *)(v13 + 23);
  char v15 = v14;
  uint64_t v16 = *(void *)(v13 + 8);
  if ((v14 & 0x80u) == 0) {
    unint64_t v17 = *(unsigned __int8 *)(v13 + 23);
  }
  else {
    unint64_t v17 = v16;
  }
  if (v17 >= 0x80)
  {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v17, a2);
    int v14 = *(unsigned __int8 *)(v13 + 23);
    uint64_t v16 = *(void *)(v13 + 8);
    int v3 = *(_DWORD *)(a1 + 52);
    char v15 = *(unsigned char *)(v13 + 23);
  }
  else
  {
    int v18 = 1;
  }
  if (v15 < 0) {
    int v14 = v16;
  }
  v4 += v18 + v14 + 1;
  if ((v3 & 0x10) != 0) {
    goto LABEL_34;
  }
LABEL_23:
  if ((v3 & 0x20) != 0)
  {
LABEL_44:
    uint64_t v23 = *(void *)(a1 + 40);
    int v24 = *(unsigned __int8 *)(v23 + 23);
    char v25 = v24;
    uint64_t v26 = *(void *)(v23 + 8);
    if ((v24 & 0x80u) == 0) {
      unint64_t v27 = *(unsigned __int8 *)(v23 + 23);
    }
    else {
      unint64_t v27 = v26;
    }
    if (v27 >= 0x80)
    {
      int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v27, a2);
      int v24 = *(unsigned __int8 *)(v23 + 23);
      uint64_t v26 = *(void *)(v23 + 8);
      int v3 = *(_DWORD *)(a1 + 52);
      char v25 = *(unsigned char *)(v23 + 23);
    }
    else
    {
      int v28 = 1;
    }
    if (v25 < 0) {
      int v24 = v26;
    }
    v4 += v28 + v24 + 1;
  }
LABEL_53:
  unsigned int v5 = v4 + 2;
  if ((v3 & 0x40) == 0) {
    unsigned int v5 = v4;
  }
  if ((v3 & 0x80) != 0) {
    v5 += 2;
  }
LABEL_57:
  if ((v3 & 0x100) != 0) {
    uint64_t result = v5 + 2;
  }
  else {
    uint64_t result = v5;
  }
  *(_DWORD *)(a1 + 48) = result;
  return result;
}

void sub_1008D17D4(uint64_t a1, void *lpsrc)
{
  sub_1008D0854(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008D185C()
{
  return 1;
}

void *sub_1008D1864@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.SuplContext");
}

void sub_1008D1874(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v23);
  }
  int v4 = *(_DWORD *)(a2 + 104);
  if (!(_BYTE)v4) {
    goto LABEL_20;
  }
  if (v4)
  {
    int v5 = *(_DWORD *)(a2 + 8);
    *(_DWORD *)(a1 + 104) |= 1u;
    *(_DWORD *)(a1 + 8) = v5;
    int v4 = *(_DWORD *)(a2 + 104);
  }
  if ((v4 & 2) != 0)
  {
    unsigned int v6 = *(_DWORD *)(a2 + 12);
    if (v6 >= 0x12) {
      sub_101A733EC();
    }
    *(_DWORD *)(a1 + 104) |= 2u;
    *(_DWORD *)(a1 + 12) = v6;
    int v4 = *(_DWORD *)(a2 + 104);
  }
  if ((v4 & 4) != 0)
  {
    unsigned int v7 = *(_DWORD *)(a2 + 16);
    if (v7 >= 0x21) {
      sub_101A733C0();
    }
    *(_DWORD *)(a1 + 104) |= 4u;
    *(_DWORD *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 104);
  }
  if ((v4 & 8) != 0)
  {
    unsigned int v8 = *(_DWORD *)(a2 + 20);
    if (v8 >= 0x18) {
      sub_101A73394();
    }
    *(_DWORD *)(a1 + 104) |= 8u;
    *(_DWORD *)(a1 + 20) = v8;
    int v4 = *(_DWORD *)(a2 + 104);
  }
  if ((v4 & 0x10) == 0)
  {
    if ((v4 & 0x20) == 0) {
      goto LABEL_17;
    }
LABEL_48:
    uint64_t v21 = *(void *)(a2 + 32);
    *(_DWORD *)(a1 + 104) |= 0x20u;
    *(void *)(a1 + 32) = v21;
    int v4 = *(_DWORD *)(a2 + 104);
    if ((v4 & 0x40) == 0)
    {
LABEL_18:
      if ((v4 & 0x80) == 0) {
        goto LABEL_20;
      }
      goto LABEL_19;
    }
    goto LABEL_49;
  }
  uint64_t v20 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 104) |= 0x10u;
  *(void *)(a1 + 24) = v20;
  int v4 = *(_DWORD *)(a2 + 104);
  if ((v4 & 0x20) != 0) {
    goto LABEL_48;
  }
LABEL_17:
  if ((v4 & 0x40) == 0) {
    goto LABEL_18;
  }
LABEL_49:
  uint64_t v22 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 104) |= 0x40u;
  *(void *)(a1 + 40) = v22;
  int v4 = *(_DWORD *)(a2 + 104);
  if ((v4 & 0x80) != 0)
  {
LABEL_19:
    uint64_t v9 = *(void *)(a2 + 48);
    *(_DWORD *)(a1 + 104) |= 0x80u;
    *(void *)(a1 + 48) = v9;
    int v4 = *(_DWORD *)(a2 + 104);
  }
LABEL_20:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    uint64_t v10 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 104) |= 0x100u;
    *(void *)(a1 + 56) = v10;
    int v4 = *(_DWORD *)(a2 + 104);
    if ((v4 & 0x200) == 0)
    {
LABEL_23:
      if ((v4 & 0x400) == 0) {
        goto LABEL_24;
      }
      goto LABEL_32;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_23;
  }
  uint64_t v11 = *(void *)(a2 + 64);
  *(_DWORD *)(a1 + 104) |= 0x200u;
  *(void *)(a1 + 64) = v11;
  int v4 = *(_DWORD *)(a2 + 104);
  if ((v4 & 0x400) == 0)
  {
LABEL_24:
    if ((v4 & 0x800) == 0) {
      goto LABEL_25;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t v12 = *(void *)(a2 + 72);
  *(_DWORD *)(a1 + 104) |= 0x400u;
  *(void *)(a1 + 72) = v12;
  int v4 = *(_DWORD *)(a2 + 104);
  if ((v4 & 0x800) == 0)
  {
LABEL_25:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_34;
  }
LABEL_33:
  char v13 = *(unsigned char *)(a2 + 96);
  *(_DWORD *)(a1 + 104) |= 0x800u;
  *(unsigned char *)(a1 + 96) = v13;
  int v4 = *(_DWORD *)(a2 + 104);
  if ((v4 & 0x1000) == 0)
  {
LABEL_26:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_35;
  }
LABEL_34:
  char v14 = *(unsigned char *)(a2 + 97);
  *(_DWORD *)(a1 + 104) |= 0x1000u;
  *(unsigned char *)(a1 + 97) = v14;
  int v4 = *(_DWORD *)(a2 + 104);
  if ((v4 & 0x2000) == 0)
  {
LABEL_27:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_36;
  }
LABEL_35:
  char v15 = *(unsigned char *)(a2 + 98);
  *(_DWORD *)(a1 + 104) |= 0x2000u;
  *(unsigned char *)(a1 + 98) = v15;
  int v4 = *(_DWORD *)(a2 + 104);
  if ((v4 & 0x4000) == 0)
  {
LABEL_28:
    if ((v4 & 0x8000) == 0) {
      return;
    }
    goto LABEL_41;
  }
LABEL_36:
  *(_DWORD *)(a1 + 104) |= 0x4000u;
  uint64_t v16 = *(void *)(a1 + 80);
  if (!v16) {
    operator new();
  }
  uint64_t v17 = *(void *)(a2 + 80);
  if (!v17) {
    uint64_t v17 = *(void *)(qword_10248A498 + 80);
  }
  sub_1008D2CA0(v16, v17);
  if ((*(_DWORD *)(a2 + 104) & 0x8000) != 0)
  {
LABEL_41:
    *(_DWORD *)(a1 + 104) |= 0x8000u;
    uint64_t v18 = *(void *)(a1 + 88);
    if (!v18) {
      operator new();
    }
    uint64_t v19 = *(void *)(a2 + 88);
    if (!v19) {
      uint64_t v19 = *(void *)(qword_10248A498 + 88);
    }
    sub_1008D2E0C(v18, v19);
  }
}

void sub_1008D1BC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1008D1BD8(void *result)
{
  if ((void *)qword_10248A498 != result)
  {
    int v1 = result;
    uint64_t v2 = result[10];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t result = (void *)v1[11];
    if (result)
    {
      int v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_1008D1C78(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D07E0;
  sub_1008D1BD8(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008D1CCC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D07E0;
  sub_1008D1BD8(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

uint64_t sub_1008D1D34(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10248A498;
  if (!qword_10248A498)
  {
    sub_1008C4C78(0, a2, a3, a4);
    return qword_10248A498;
  }
  return result;
}

void sub_1008D1D64()
{
}

uint64_t sub_1008D1DCC(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 104);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_WORD *)(result + 96) = 0;
    *(unsigned char *)(result + 98) = 0;
    *(void *)(result + 64) = 0;
    *(void *)(result + 72) = 0;
    *(void *)(result + 56) = 0;
    if ((v1 & 0x4000) != 0)
    {
      uint64_t v2 = *(void *)(result + 80);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 60))
        {
          *(_OWORD *)(v2 + 40) = 0u;
          *(_OWORD *)(v2 + 24) = 0u;
          *(_OWORD *)(v2 + 8) = 0u;
        }
        *(_DWORD *)(v2 + 60) = 0;
        int v1 = *(_DWORD *)(result + 104);
      }
    }
    if ((v1 & 0x8000) != 0)
    {
      uint64_t v3 = *(void *)(result + 88);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 28))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 28) = 0;
      }
    }
  }
  *(_DWORD *)(result + 104) = 0;
  return result;
}

uint64_t sub_1008D1E50(uint64_t result)
{
  if (*(unsigned char *)(result + 60))
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  *(_DWORD *)(result + 60) = 0;
  return result;
}

uint64_t sub_1008D1E70(uint64_t result)
{
  if (*(unsigned char *)(result + 28))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_1008D1E84(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 8);
  while (2)
  {
    unsigned int v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        uint64_t v10 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          uint64_t v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          *int v5 = *v10;
          uint64_t v11 = v10 + 1;
          *((void *)this + 1) = v11;
        }
        *(_DWORD *)(a1 + 104) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 16)
        {
          uint64_t v12 = v11 + 1;
          *((void *)this + 1) = v12;
          goto LABEL_50;
        }
        continue;
      case 2u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        uint64_t v12 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
LABEL_50:
        v60[0] = 0;
        if ((unint64_t)v12 >= v9 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v60);
          if (!result) {
            return result;
          }
          unsigned int v23 = v60[0];
        }
        else
        {
          unsigned int v23 = *v12;
          *((void *)this + 1) = v12 + 1;
        }
        if (v23 <= 0x11)
        {
          *(_DWORD *)(a1 + 104) |= 2u;
          *(_DWORD *)(a1 + 12) = v23;
        }
        int v24 = (unsigned char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((unint64_t)v24 >= v13 || *v24 != 24) {
          continue;
        }
        char v14 = v24 + 1;
        *((void *)this + 1) = v14;
LABEL_60:
        v60[0] = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v60);
          if (!result) {
            return result;
          }
          unsigned int v25 = v60[0];
        }
        else
        {
          unsigned int v25 = *v14;
          *((void *)this + 1) = v14 + 1;
        }
        if (v25 <= 0x20)
        {
          *(_DWORD *)(a1 + 104) |= 4u;
          *(_DWORD *)(a1 + 16) = v25;
        }
        uint64_t v26 = (unsigned char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v26 >= v15 || *v26 != 32) {
          continue;
        }
        uint64_t v16 = v26 + 1;
        *((void *)this + 1) = v16;
LABEL_70:
        v60[0] = 0;
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v60);
          if (!result) {
            return result;
          }
          unsigned int v27 = v60[0];
        }
        else
        {
          unsigned int v27 = *v16;
          *((void *)this + 1) = v16 + 1;
        }
        if (v27 <= 0x17)
        {
          *(_DWORD *)(a1 + 104) |= 8u;
          *(_DWORD *)(a1 + 20) = v27;
        }
        int v28 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 != 41) {
          continue;
        }
        *((void *)this + 1) = v28 + 1;
LABEL_80:
        *(void *)__int16 v60 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v60) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v60;
        }
        *(_DWORD *)(a1 + 104) |= 0x10u;
        int v29 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v29 >= *((void *)this + 2) || *v29 != 49) {
          continue;
        }
        *((void *)this + 1) = v29 + 1;
LABEL_84:
        *(void *)__int16 v60 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v60) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v60;
        }
        *(_DWORD *)(a1 + 104) |= 0x20u;
        unsigned int v30 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v30 >= *((void *)this + 2) || *v30 != 57) {
          continue;
        }
        *((void *)this + 1) = v30 + 1;
LABEL_88:
        *(void *)__int16 v60 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v60) & 1) == 0)return 0; {
        *(void *)(a1 + 40) = *(void *)v60;
        }
        *(_DWORD *)(a1 + 104) |= 0x40u;
        int v31 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v31 >= *((void *)this + 2) || *v31 != 65) {
          continue;
        }
        *((void *)this + 1) = v31 + 1;
LABEL_92:
        *(void *)__int16 v60 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v60) & 1) == 0)return 0; {
        *(void *)(a1 + 48) = *(void *)v60;
        }
        *(_DWORD *)(a1 + 104) |= 0x80u;
        BOOL v32 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 != 73) {
          continue;
        }
        *((void *)this + 1) = v32 + 1;
LABEL_96:
        *(void *)__int16 v60 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v60) & 1) == 0)return 0; {
        *(void *)(a1 + 56) = *(void *)v60;
        }
        *(_DWORD *)(a1 + 104) |= 0x100u;
        int v33 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v33 >= *((void *)this + 2) || *v33 != 81) {
          continue;
        }
        *((void *)this + 1) = v33 + 1;
LABEL_100:
        *(void *)__int16 v60 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v60) & 1) == 0)return 0; {
        *(void *)(a1 + 64) = *(void *)v60;
        }
        *(_DWORD *)(a1 + 104) |= 0x200u;
        int v34 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v34 >= *((void *)this + 2) || *v34 != 89) {
          continue;
        }
        *((void *)this + 1) = v34 + 1;
LABEL_104:
        *(void *)__int16 v60 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v60) & 1) == 0)return 0; {
        *(void *)(a1 + 72) = *(void *)v60;
        }
        *(_DWORD *)(a1 + 104) |= 0x400u;
        int v35 = (unsigned char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        if ((unint64_t)v35 >= v17 || *v35 != 96) {
          continue;
        }
        uint64_t v18 = v35 + 1;
        *((void *)this + 1) = v18;
LABEL_108:
        v60[0] = 0;
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v60);
          if (!result) {
            return result;
          }
          unsigned int v36 = v60[0];
          int v37 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          unsigned int v36 = *v18;
          int v37 = v18 + 1;
          *((void *)this + 1) = v37;
        }
        *(unsigned char *)(a1 + 96) = v36 != 0;
        *(_DWORD *)(a1 + 104) |= 0x800u;
        if ((unint64_t)v37 >= v17 || *v37 != 104) {
          continue;
        }
        uint64_t v19 = v37 + 1;
        *((void *)this + 1) = v19;
LABEL_116:
        v60[0] = 0;
        if ((unint64_t)v19 >= v17 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v60);
          if (!result) {
            return result;
          }
          unsigned int v38 = v60[0];
          int v39 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          unsigned int v38 = *v19;
          int v39 = v19 + 1;
          *((void *)this + 1) = v39;
        }
        *(unsigned char *)(a1 + 97) = v38 != 0;
        *(_DWORD *)(a1 + 104) |= 0x1000u;
        if ((unint64_t)v39 >= v17 || *v39 != 112) {
          continue;
        }
        uint64_t v20 = v39 + 1;
        *((void *)this + 1) = v20;
LABEL_124:
        v60[0] = 0;
        if ((unint64_t)v20 >= v17 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v60);
          if (!result) {
            return result;
          }
          unsigned int v40 = v60[0];
          uint64_t v41 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          unsigned int v40 = *v20;
          uint64_t v41 = v20 + 1;
          *((void *)this + 1) = v41;
        }
        *(unsigned char *)(a1 + 98) = v40 != 0;
        int v21 = *(_DWORD *)(a1 + 104) | 0x2000;
        *(_DWORD *)(a1 + 104) = v21;
        if ((unint64_t)v41 >= v17 || *v41 != 122) {
          continue;
        }
        *((void *)this + 1) = v41 + 1;
LABEL_132:
        *(_DWORD *)(a1 + 104) = v21 | 0x4000;
        uint64_t v42 = *(void *)(a1 + 80);
        if (!v42) {
          operator new();
        }
        v60[0] = 0;
        int v43 = (char *)*((void *)this + 1);
        if ((unint64_t)v43 >= *((void *)this + 2) || *v43 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v60))return 0; {
        }
          }
        else
        {
          v60[0] = *v43;
          *((void *)this + 1) = v43 + 1;
        }
        int v44 = *((_DWORD *)this + 14);
        int v45 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v44 + 1;
        if (v44 >= v45) {
          return 0;
        }
        int v46 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v60[0]);
        if (!sub_1008FE7F4(v42, this, v47) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v46);
        int v48 = *((_DWORD *)this + 14);
        BOOL v49 = __OFSUB__(v48, 1);
        int v50 = v48 - 1;
        if (v50 < 0 == v49) {
          *((_DWORD *)this + 14) = v50;
        }
        int v51 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v51 <= 1 || *v51 != 130 || v51[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v51 + 2;
LABEL_147:
        *(_DWORD *)(a1 + 104) |= 0x8000u;
        uint64_t v52 = *(void *)(a1 + 88);
        if (!v52) {
          operator new();
        }
        v60[0] = 0;
        double v53 = (char *)*((void *)this + 1);
        if ((unint64_t)v53 >= *((void *)this + 2) || *v53 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v60))return 0; {
        }
          }
        else
        {
          v60[0] = *v53;
          *((void *)this + 1) = v53 + 1;
        }
        int v54 = *((_DWORD *)this + 14);
        int v55 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v54 + 1;
        if (v54 < v55)
        {
          int v56 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v60[0]);
          if (sub_1008FEEAC(v52, this, v57))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v56);
              int v58 = *((_DWORD *)this + 14);
              BOOL v49 = __OFSUB__(v58, 1);
              int v59 = v58 - 1;
              if (v59 < 0 == v49) {
                *((_DWORD *)this + 14) = v59;
              }
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        char v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_60;
      case 4u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        uint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_70;
      case 5u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_80;
        }
        goto LABEL_42;
      case 6u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_84;
        }
        goto LABEL_42;
      case 7u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_88;
        }
        goto LABEL_42;
      case 8u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_92;
        }
        goto LABEL_42;
      case 9u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_96;
        }
        goto LABEL_42;
      case 0xAu:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_100;
        }
        goto LABEL_42;
      case 0xBu:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_104;
        }
        goto LABEL_42;
      case 0xCu:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        uint64_t v18 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_108;
      case 0xDu:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        uint64_t v19 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_116;
      case 0xEu:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        uint64_t v20 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_124;
      case 0xFu:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_42;
        }
        int v21 = *(_DWORD *)(a1 + 104);
        goto LABEL_132;
      case 0x10u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_42;
        }
        goto LABEL_147;
      default:
        int v8 = TagFallback & 7;
LABEL_42:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1008D27D8(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 104);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 104);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 16), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 20), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (int)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (int)a2, *(double *)(v5 + 72), a3);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned __int8 *)(v5 + 96), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned __int8 *)(v5 + 97), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned __int8 *)(v5 + 98), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 104);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      return result;
    }
    goto LABEL_35;
  }
LABEL_32:
  uint64_t v7 = *(void *)(v5 + 80);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248A498 + 80);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 104) & 0x8000) != 0)
  {
LABEL_35:
    uint64_t v8 = *(void *)(v5 + 88);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_10248A498 + 88);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v8, a2, a4);
  }
  return result;
}

uint64_t sub_1008D29F0(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 104);
  if (!(_BYTE)v3)
  {
    uint64_t v5 = 0;
    goto LABEL_40;
  }
  if (v3)
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v6 >= 0x80)
    {
      int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 104);
      if ((v3 & 2) == 0) {
        goto LABEL_16;
      }
    }
    else
    {
      int v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_16;
      }
    }
  }
  else
  {
    int v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if ((v7 & 0x80000000) != 0)
  {
    int v8 = 11;
  }
  else if (v7 >= 0x80)
  {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 104);
  }
  else
  {
    int v8 = 2;
  }
  v4 += v8;
LABEL_16:
  if ((v3 & 4) != 0)
  {
    unint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v9 & 0x80000000) != 0)
    {
      int v10 = 11;
    }
    else if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 104);
    }
    else
    {
      int v10 = 2;
    }
    v4 += v10;
    if ((v3 & 8) == 0) {
      goto LABEL_31;
    }
    goto LABEL_25;
  }
  if ((v3 & 8) != 0)
  {
LABEL_25:
    uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if ((v11 & 0x80000000) != 0)
    {
      int v12 = 11;
    }
    else if (v11 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 104);
    }
    else
    {
      int v12 = 2;
    }
    v4 += v12;
  }
LABEL_31:
  unsigned int v13 = v4 + 9;
  if ((v3 & 0x10) == 0) {
    unsigned int v13 = v4;
  }
  if ((v3 & 0x20) != 0) {
    v13 += 9;
  }
  if ((v3 & 0x40) != 0) {
    v13 += 9;
  }
  if ((v3 & 0x80) != 0) {
    uint64_t v5 = v13 + 9;
  }
  else {
    uint64_t v5 = v13;
  }
LABEL_40:
  if ((v3 & 0xFF00) != 0)
  {
    unsigned int v14 = v5 + 9;
    if ((v3 & 0x100) == 0) {
      unsigned int v14 = v5;
    }
    if ((v3 & 0x200) != 0) {
      v14 += 9;
    }
    if ((v3 & 0x400) != 0) {
      v14 += 9;
    }
    if ((v3 & 0x800) != 0) {
      v14 += 2;
    }
    if ((v3 & 0x1000) != 0) {
      v14 += 2;
    }
    if ((v3 & 0x2000) != 0) {
      uint64_t v5 = v14 + 2;
    }
    else {
      uint64_t v5 = v14;
    }
    if ((v3 & 0x4000) != 0)
    {
      uint64_t v15 = *(void *)(a1 + 80);
      if (!v15) {
        uint64_t v15 = *(void *)(qword_10248A498 + 80);
      }
      uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008FEC8C(v15, a2);
      int v17 = (int)v16;
      if (v16 >= 0x80) {
        int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
      }
      else {
        int v18 = 1;
      }
      uint64_t v5 = (v5 + v17 + v18 + 1);
      int v3 = *(_DWORD *)(a1 + 104);
    }
    if ((v3 & 0x8000) != 0)
    {
      uint64_t v19 = *(void *)(a1 + 88);
      if (!v19) {
        uint64_t v19 = *(void *)(qword_10248A498 + 88);
      }
      uint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008FF140(v19, a2);
      int v22 = (int)v20;
      if (v20 >= 0x80) {
        int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20, v21);
      }
      else {
        int v23 = 1;
      }
      uint64_t v5 = (v5 + v22 + v23 + 2);
    }
  }
  *(_DWORD *)(a1 + 100) = v5;
  return v5;
}

void sub_1008D2C18(uint64_t a1, void *lpsrc)
{
  sub_1008D1874(a1, (uint64_t)lpsrc);
}

void sub_1008D2CA0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 60);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 60))
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 60) |= 1u;
      *(void *)(a1 + 8) = v6;
      int v4 = *(_DWORD *)(a2 + 60);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_15;
      }
    }
    else if ((*(unsigned char *)(a2 + 60) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v7 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 60) |= 2u;
    *(void *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 60);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_16;
    }
LABEL_15:
    uint64_t v8 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 60) |= 4u;
    *(void *)(a1 + 24) = v8;
    int v4 = *(_DWORD *)(a2 + 60);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_17;
    }
LABEL_16:
    uint64_t v9 = *(void *)(a2 + 32);
    *(_DWORD *)(a1 + 60) |= 8u;
    *(void *)(a1 + 32) = v9;
    int v4 = *(_DWORD *)(a2 + 60);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_18;
    }
LABEL_17:
    uint64_t v10 = *(void *)(a2 + 40);
    *(_DWORD *)(a1 + 60) |= 0x10u;
    *(void *)(a1 + 40) = v10;
    int v4 = *(_DWORD *)(a2 + 60);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0) {
        return;
      }
      goto LABEL_11;
    }
LABEL_18:
    int v11 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 60) |= 0x20u;
    *(_DWORD *)(a1 + 48) = v11;
    if ((*(_DWORD *)(a2 + 60) & 0x40) == 0) {
      return;
    }
LABEL_11:
    int v5 = *(_DWORD *)(a2 + 52);
    *(_DWORD *)(a1 + 60) |= 0x40u;
    *(_DWORD *)(a1 + 52) = v5;
  }
}

void sub_1008D2DF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008D2E0C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      int v6 = *(_DWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 28) |= 1u;
      *(_DWORD *)(a1 + 8) = v6;
      int v4 = *(_DWORD *)(a2 + 28);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 28) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 28) |= 2u;
    *(_DWORD *)(a1 + 12) = v7;
    if ((*(_DWORD *)(a2 + 28) & 4) == 0) {
      return;
    }
LABEL_7:
    uint64_t v5 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 28) |= 4u;
    *(void *)(a1 + 16) = v5;
  }
}

void sub_1008D2EE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1008D2EF8()
{
  return 1;
}

void *sub_1008D2F00@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.SessionStatus");
}

void sub_1008D2F10(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 20))
    {
      int v5 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v5;
      int v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v6;
    }
  }
}

void sub_1008D2FBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008D2FD4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D0858;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008D2FF4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D0858;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008D3048()
{
}

uint64_t sub_1008D3094(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1008D30A8(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  while (1)
  {
    while (1)
    {
      int v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      int v12 = (char *)*((void *)this + 1);
      unint64_t v10 = *((void *)this + 2);
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!result) {
          return result;
        }
        unsigned int v13 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
      }
      else
      {
        *int v5 = *v12;
        unsigned int v13 = v12 + 1;
        *((void *)this + 1) = v13;
      }
      a1[5] |= 1u;
      if ((unint64_t)v13 < v10 && *v13 == 16)
      {
        int v11 = v13 + 1;
        *((void *)this + 1) = v11;
LABEL_24:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          unsigned int v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v11;
          unsigned int v14 = (unsigned __int8 *)(v11 + 1);
          *((void *)this + 1) = v14;
        }
        a1[5] |= 2u;
        if (v14 == (unsigned __int8 *)v10
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v9 = TagFallback & 7;
    }
LABEL_16:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1008D3248(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(_DWORD *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_1008D32B4(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 20);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 20))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_14;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 20) & 2) == 0) {
        goto LABEL_14;
      }
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v6 >= 0x80) {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    }
    else {
      int v7 = 2;
    }
    uint64_t v4 = (v7 + v4);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_14:
  *(_DWORD *)(a1 + 16) = v4;
  return v4;
}

void sub_1008D3344(_DWORD *a1, void *lpsrc)
{
  sub_1008D2F10(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008D33CC()
{
  return 1;
}

void *sub_1008D33D4@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.ClsGpsCellTime");
}

void sub_1008D33E4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      *(_DWORD *)(a1 + 36) |= 1u;
      uint64_t v5 = *(_DWORD **)(a1 + 8);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_10248A4A8 + 8);
      }
      sub_1008D2F10(v5, v6);
      int v4 = *(_DWORD *)(a2 + 36);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_16;
      }
    }
    else if ((*(unsigned char *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(_DWORD *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 36);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_17;
    }
LABEL_16:
    int v8 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 36) |= 4u;
    *(_DWORD *)(a1 + 20) = v8;
    int v4 = *(_DWORD *)(a2 + 36);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        return;
      }
LABEL_18:
      unsigned int v10 = *(_DWORD *)(a2 + 28);
      if (v10 >= 5) {
        sub_101A73418();
      }
      *(_DWORD *)(a1 + 36) |= 0x10u;
      *(_DWORD *)(a1 + 28) = v10;
      return;
    }
LABEL_17:
    int v9 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 8u;
    *(_DWORD *)(a1 + 24) = v9;
    if ((*(_DWORD *)(a2 + 36) & 0x10) == 0) {
      return;
    }
    goto LABEL_18;
  }
}

void sub_1008D3558(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008D3570(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022D08D0;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_10248A4A8 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008D3600(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008D3570(a1);

  operator delete();
}

void sub_1008D3638()
{
}

uint64_t sub_1008D368C(uint64_t result)
{
  if (*(unsigned char *)(result + 36))
  {
    if (*(unsigned char *)(result + 36))
    {
      uint64_t v1 = *(void *)(result + 8);
      if (v1)
      {
        if (*(unsigned char *)(v1 + 20)) {
          *(void *)(v1 + 8) = 0;
        }
        *(_DWORD *)(v1 + 20) = 0;
      }
    }
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_1008D36BC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)(a1 + 16);
  uint64_t v6 = (unsigned int *)(a1 + 20);
  int v7 = (unsigned int *)(a1 + 24);
  while (2)
  {
    int v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_22;
        }
        *(_DWORD *)(a1 + 36) |= 1u;
        int v11 = *(unsigned int **)(a1 + 8);
        if (!v11) {
          operator new();
        }
        unsigned int v32 = 0;
        int v12 = (char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v32))return 0; {
        }
          }
        else
        {
          unsigned int v32 = *v12;
          *((void *)this + 1) = v12 + 1;
        }
        int v18 = *((_DWORD *)this + 14);
        int v19 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v18 + 1;
        if (v18 >= v19) {
          return 0;
        }
        int v20 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v32);
        if (!sub_1008D30A8(v11, this, v21) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v20);
        int v22 = *((_DWORD *)this + 14);
        BOOL v23 = __OFSUB__(v22, 1);
        int v24 = v22 - 1;
        if (v24 < 0 == v23) {
          *((_DWORD *)this + 14) = v24;
        }
        unsigned int v25 = (unsigned char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((unint64_t)v25 >= v13 || *v25 != 16) {
          continue;
        }
        unsigned int v14 = v25 + 1;
        *((void *)this + 1) = v14;
        goto LABEL_35;
      case 2u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        unsigned int v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
LABEL_35:
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          uint64_t v26 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v5 = *v14;
          uint64_t v26 = v14 + 1;
          *((void *)this + 1) = v26;
        }
        *(_DWORD *)(a1 + 36) |= 2u;
        if ((unint64_t)v26 >= v13 || *v26 != 24) {
          continue;
        }
        uint64_t v15 = v26 + 1;
        *((void *)this + 1) = v15;
LABEL_43:
        if ((unint64_t)v15 >= v13 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v28 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v6 = *v15;
          int v28 = v15 + 1;
          *((void *)this + 1) = v28;
        }
        *(_DWORD *)(a1 + 36) |= 4u;
        if ((unint64_t)v28 >= v13 || *v28 != 32) {
          continue;
        }
        uint64_t v16 = v28 + 1;
        *((void *)this + 1) = v16;
LABEL_51:
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v29 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *int v7 = *v16;
          int v29 = v16 + 1;
          *((void *)this + 1) = v29;
        }
        *(_DWORD *)(a1 + 36) |= 8u;
        if ((unint64_t)v29 >= v13 || *v29 != 40) {
          continue;
        }
        int v17 = v29 + 1;
        *((void *)this + 1) = v17;
LABEL_59:
        unsigned int v31 = 0;
        if ((unint64_t)v17 >= v13 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v31);
          if (!result) {
            return result;
          }
          unsigned int v30 = v31;
        }
        else
        {
          unsigned int v30 = *v17;
          *((void *)this + 1) = v17 + 1;
        }
        if (v30 <= 4)
        {
          *(_DWORD *)(a1 + 36) |= 0x10u;
          *(_DWORD *)(a1 + 28) = v30;
        }
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 3u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        uint64_t v15 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_43;
      case 4u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        uint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_51;
      case 5u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v17 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_59;
      default:
        int v10 = TagFallback & 7;
LABEL_22:
        if (v10 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_1008D3AB4(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = (int *)result;
  int v6 = *(_DWORD *)(result + 36);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_10248A4A8 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = v5[9];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[4], a2, a4);
  int v6 = v5[9];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_12:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[6], a2, a4);
    if ((v5[9] & 0x10) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], a2, a4);
  int v6 = v5[9];
  if ((v6 & 8) != 0) {
    goto LABEL_12;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return result;
  }
LABEL_13:
  int v8 = v5[7];

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v8, (int)a2, a4);
}

uint64_t sub_1008D3B88(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_34;
  }
  if ((*(unsigned char *)(a1 + 36) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 36) & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_10248A4A8 + 8);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D32B4(v5, a2);
  int v7 = (int)v6;
  if (v6 >= 0x80) {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
  }
  else {
    int v8 = 1;
  }
  uint64_t v4 = (v7 + v8 + 1);
  int v3 = *(_DWORD *)(a1 + 36);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      int v10 = 2;
    }
    uint64_t v4 = (v10 + v4);
  }
LABEL_16:
  if ((v3 & 4) != 0)
  {
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if (v11 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      int v12 = 2;
    }
    uint64_t v4 = (v12 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_18:
      if ((v3 & 0x10) == 0) {
        goto LABEL_34;
      }
      goto LABEL_28;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_18;
  }
  unint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 36);
  }
  else
  {
    int v14 = 2;
  }
  uint64_t v4 = (v14 + v4);
  if ((v3 & 0x10) != 0)
  {
LABEL_28:
    uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if ((v15 & 0x80000000) != 0)
    {
      int v16 = 11;
    }
    else if (v15 >= 0x80)
    {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    }
    else
    {
      int v16 = 2;
    }
    uint64_t v4 = (v16 + v4);
  }
LABEL_34:
  *(_DWORD *)(a1 + 32) = v4;
  return v4;
}

void sub_1008D3CC4(uint64_t a1, void *lpsrc)
{
  sub_1008D33E4(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008D3D4C()
{
  return 1;
}

void *sub_1008D3D54@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.ClsUtranCellTime");
}

void sub_1008D3D64(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      int v6 = *(_DWORD *)(a2 + 8);
      a1[6] |= 1u;
      a1[2] = v6;
      int v4 = *(_DWORD *)(a2 + 24);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 24) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 12);
    a1[6] |= 2u;
    a1[3] = v7;
    if ((*(_DWORD *)(a2 + 24) & 4) == 0) {
      return;
    }
LABEL_7:
    int v5 = *(_DWORD *)(a2 + 16);
    a1[6] |= 4u;
    a1[4] = v5;
  }
}

void sub_1008D3E38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008D3E50(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D0948;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008D3E70(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D0948;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008D3EC4()
{
}

uint64_t sub_1008D3F14(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    *(void *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1008D3F2C(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  int v7 = a1 + 4;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v8;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v8 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v10 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v14 >= v12 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          uint64_t v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v5 = *v14;
          uint64_t v15 = v14 + 1;
          *((void *)this + 1) = v15;
        }
        a1[6] |= 1u;
        if ((unint64_t)v15 < v12 && *v15 == 16)
        {
          int v16 = v15 + 1;
          *((void *)this + 1) = v16;
          goto LABEL_27;
        }
      }
      if (v10 != 2) {
        break;
      }
      int v11 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_19;
      }
      int v16 = (char *)*((void *)this + 1);
      unint64_t v12 = *((void *)this + 2);
LABEL_27:
      if ((unint64_t)v16 >= v12 || *v16 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
        if (!result) {
          return result;
        }
        int v17 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
      }
      else
      {
        *int v6 = *v16;
        int v17 = v16 + 1;
        *((void *)this + 1) = v17;
      }
      a1[6] |= 2u;
      if ((unint64_t)v17 < v12 && *v17 == 24)
      {
        unint64_t v13 = v17 + 1;
        *((void *)this + 1) = v13;
LABEL_35:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v18 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v7 = *v13;
          int v18 = (unsigned __int8 *)(v13 + 1);
          *((void *)this + 1) = v18;
        }
        a1[6] |= 4u;
        if (v18 == (unsigned __int8 *)v12
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v10 == 3)
    {
      int v11 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        unint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_35;
      }
    }
    else
    {
      int v11 = TagFallback & 7;
    }
LABEL_19:
    if (v11 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

int *sub_1008D4150(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  int v6 = result[6];
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
    if ((v5[6] & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
  int v6 = v5[6];
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  int v7 = v5[4];

  return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t sub_1008D41DC(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 24);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_19;
  }
  if (*(unsigned char *)(a1 + 24))
  {
    int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 24);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 24);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80) {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    }
    else {
      int v9 = 2;
    }
    uint64_t v4 = (v9 + v4);
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_1008D4294(_DWORD *a1, void *lpsrc)
{
  sub_1008D3D64(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008D431C()
{
  return 1;
}

void *sub_1008D4324@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.Plmn");
}

void sub_1008D4334(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      unsigned int v5 = *(_DWORD *)(a2 + 8);
      if (v5 >= 6) {
        sub_101A73470();
      }
      a1[6] |= 1u;
      a1[2] = v5;
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      unsigned int v6 = *(_DWORD *)(a2 + 12);
      if (v6 >= 7) {
        sub_101A73444();
      }
      a1[6] |= 2u;
      a1[3] = v6;
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 4) != 0)
    {
      int v7 = *(_DWORD *)(a2 + 16);
      a1[6] |= 4u;
      a1[4] = v7;
    }
  }
}

void sub_1008D4414(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008D442C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D09C0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008D444C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D09C0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008D44A0()
{
}

uint64_t sub_1008D44F0(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    *(void *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1008D4508(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int v5 = a1 + 4;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        unsigned int v6 = (char *)*((void *)this + 1);
        if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v6;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v6 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v8 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unsigned int v22 = 0;
        unint64_t v12 = (char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v13 = v22;
        }
        else
        {
          unsigned int v13 = *v12;
          *((void *)this + 1) = v12 + 1;
        }
        if (v13 <= 5)
        {
          a1[6] |= 1u;
          a1[2] = v13;
        }
        int v16 = (unsigned char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v16 < v14 && *v16 == 16)
        {
          uint64_t v15 = v16 + 1;
          *((void *)this + 1) = v15;
          goto LABEL_29;
        }
      }
      if (v8 != 2) {
        break;
      }
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_19;
      }
      uint64_t v15 = (char *)*((void *)this + 1);
      unint64_t v14 = *((void *)this + 2);
LABEL_29:
      unsigned int v21 = 0;
      if ((unint64_t)v15 >= v14 || *v15 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
        if (!result) {
          return result;
        }
        unsigned int v17 = v21;
      }
      else
      {
        unsigned int v17 = *v15;
        *((void *)this + 1) = v15 + 1;
      }
      if (v17 <= 6)
      {
        a1[6] |= 2u;
        a1[3] = v17;
      }
      int v18 = (unsigned char *)*((void *)this + 1);
      unint64_t v10 = *((void *)this + 2);
      if ((unint64_t)v18 < v10 && *v18 == 24)
      {
        int v11 = v18 + 1;
        *((void *)this + 1) = v11;
LABEL_39:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v19 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          *unsigned int v5 = *v11;
          int v19 = (unsigned __int8 *)(v11 + 1);
          *((void *)this + 1) = v19;
        }
        a1[6] |= 4u;
        if (v19 == (unsigned __int8 *)v10
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v8 == 3)
    {
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_39;
      }
    }
    else
    {
      int v9 = TagFallback & 7;
    }
LABEL_19:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

int *sub_1008D4744(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int v5 = result;
  int v6 = result[6];
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
    if ((v5[6] & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
  int v6 = v5[6];
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  int v7 = v5[4];

  return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t sub_1008D47D0(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 24);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_24;
  }
  if (*(unsigned char *)(a1 + 24))
  {
    unsigned int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v5 & 0x80000000) != 0)
    {
      uint64_t v4 = 11;
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }
    else if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 24);
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
      goto LABEL_19;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if ((v6 & 0x80000000) != 0)
  {
    int v7 = 11;
  }
  else if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 24);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_19:
  if ((v3 & 4) != 0)
  {
    unsigned int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80) {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    }
    else {
      int v9 = 2;
    }
    uint64_t v4 = (v9 + v4);
  }
LABEL_24:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_1008D48A4(_DWORD *a1, void *lpsrc)
{
  sub_1008D4334(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008D492C()
{
  return 1;
}

void *sub_1008D4934@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.SessionInfo");
}

void sub_1008D4944(_DWORD *a1, _DWORD *a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v22);
  }
  int v4 = a2[20];
  if (!(_BYTE)v4) {
    goto LABEL_16;
  }
  if (v4)
  {
    int v5 = a2[2];
    a1[20] |= 1u;
    a1[2] = v5;
    int v4 = a2[20];
  }
  if ((v4 & 2) != 0)
  {
    unsigned int v6 = a2[3];
    if (v6 >= 5) {
      sub_101A734C8();
    }
    a1[20] |= 2u;
    a1[3] = v6;
    int v4 = a2[20];
  }
  if ((v4 & 4) != 0)
  {
    int v17 = a2[4];
    a1[20] |= 4u;
    a1[4] = v17;
    int v4 = a2[20];
    if ((v4 & 8) == 0)
    {
LABEL_11:
      if ((v4 & 0x10) == 0) {
        goto LABEL_12;
      }
      goto LABEL_40;
    }
  }
  else if ((v4 & 8) == 0)
  {
    goto LABEL_11;
  }
  int v18 = a2[5];
  a1[20] |= 8u;
  a1[5] = v18;
  int v4 = a2[20];
  if ((v4 & 0x10) == 0)
  {
LABEL_12:
    if ((v4 & 0x20) == 0) {
      goto LABEL_13;
    }
LABEL_41:
    int v20 = a2[7];
    a1[20] |= 0x20u;
    a1[7] = v20;
    int v4 = a2[20];
    if ((v4 & 0x40) == 0)
    {
LABEL_14:
      if ((v4 & 0x80) == 0) {
        goto LABEL_16;
      }
      goto LABEL_15;
    }
    goto LABEL_42;
  }
LABEL_40:
  int v19 = a2[6];
  a1[20] |= 0x10u;
  a1[6] = v19;
  int v4 = a2[20];
  if ((v4 & 0x20) != 0) {
    goto LABEL_41;
  }
LABEL_13:
  if ((v4 & 0x40) == 0) {
    goto LABEL_14;
  }
LABEL_42:
  int v21 = a2[8];
  a1[20] |= 0x40u;
  a1[8] = v21;
  int v4 = a2[20];
  if ((v4 & 0x80) != 0)
  {
LABEL_15:
    int v7 = a2[9];
    a1[20] |= 0x80u;
    a1[9] = v7;
    int v4 = a2[20];
  }
LABEL_16:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_26;
  }
  if ((v4 & 0x100) != 0)
  {
    int v10 = a2[10];
    a1[20] |= 0x100u;
    a1[10] = v10;
    int v4 = a2[20];
    if ((v4 & 0x200) == 0)
    {
LABEL_19:
      if ((v4 & 0x400) == 0) {
        goto LABEL_20;
      }
      goto LABEL_31;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_19;
  }
  int v11 = a2[11];
  a1[20] |= 0x200u;
  a1[11] = v11;
  int v4 = a2[20];
  if ((v4 & 0x400) == 0)
  {
LABEL_20:
    if ((v4 & 0x800) == 0) {
      goto LABEL_21;
    }
    goto LABEL_32;
  }
LABEL_31:
  int v12 = a2[12];
  a1[20] |= 0x400u;
  a1[12] = v12;
  int v4 = a2[20];
  if ((v4 & 0x800) == 0)
  {
LABEL_21:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_33;
  }
LABEL_32:
  int v13 = a2[13];
  a1[20] |= 0x800u;
  a1[13] = v13;
  int v4 = a2[20];
  if ((v4 & 0x1000) == 0)
  {
LABEL_22:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_34;
  }
LABEL_33:
  int v14 = a2[14];
  a1[20] |= 0x1000u;
  a1[14] = v14;
  int v4 = a2[20];
  if ((v4 & 0x2000) == 0)
  {
LABEL_23:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_35;
  }
LABEL_34:
  int v15 = a2[15];
  a1[20] |= 0x2000u;
  a1[15] = v15;
  int v4 = a2[20];
  if ((v4 & 0x4000) == 0)
  {
LABEL_24:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }
LABEL_35:
  unsigned int v16 = a2[16];
  if (v16 >= 7) {
    sub_101A7349C();
  }
  a1[20] |= 0x4000u;
  a1[16] = v16;
  int v4 = a2[20];
  if ((v4 & 0x8000) != 0)
  {
LABEL_25:
    int v8 = a2[17];
    a1[20] |= 0x8000u;
    a1[17] = v8;
    int v4 = a2[20];
  }
LABEL_26:
  if ((v4 & 0x10000) != 0)
  {
    int v9 = a2[18];
    a1[20] |= 0x10000u;
    a1[18] = v9;
  }
}

void sub_1008D4BF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008D4C08(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D0A38;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008D4C28(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D0A38;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

uint64_t sub_1008D4C7C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10248A4C0;
  if (!qword_10248A4C0)
  {
    sub_1008C4C78(0, a2, a3, a4);
    return qword_10248A4C0;
  }
  return result;
}

void sub_1008D4CAC()
{
}

uint64_t sub_1008D4D0C(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 80);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
  }
  if ((v1 & 0xFF0000) != 0) {
    *(_DWORD *)(result + 72) = 0;
  }
  *(_DWORD *)(result + 80) = 0;
  return result;
}

uint64_t sub_1008D4D4C(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v59 = a1 + 4;
  __int16 v60 = a1 + 5;
  __int16 v61 = a1 + 6;
  int v62 = a1 + 7;
  int v5 = a1 + 8;
  unsigned int v6 = a1 + 9;
  int v7 = a1 + 10;
  int v8 = a1 + 11;
  int v9 = a1 + 12;
  int v10 = a1 + 13;
  int v11 = a1 + 14;
  int v12 = a1 + 15;
  int v58 = a1 + 17;
  int v56 = a1 + 2;
  unsigned int v57 = a1 + 18;
  while (2)
  {
    int v13 = (char *)*((void *)this + 1);
    if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v13;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v13 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        int v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        if ((unint64_t)v17 < v16 && (*v17 & 0x80000000) == 0)
        {
          *int v56 = *v17;
          int v18 = v17 + 1;
          *((void *)this + 1) = v18;
LABEL_50:
          a1[20] |= 1u;
          if ((unint64_t)v18 < v16 && *v18 == 16)
          {
            int v19 = v18 + 1;
            *((void *)this + 1) = v19;
            goto LABEL_53;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v56);
        if (result)
        {
          int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
          goto LABEL_50;
        }
        break;
      case 2u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
LABEL_53:
        unsigned int v64 = 0;
        if ((unint64_t)v19 >= v16 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v64);
          if (!result) {
            return result;
          }
          unsigned int v37 = v64;
        }
        else
        {
          unsigned int v37 = *v19;
          *((void *)this + 1) = v19 + 1;
        }
        if (v37 <= 4)
        {
          a1[20] |= 2u;
          a1[3] = v37;
        }
        unsigned int v38 = (unsigned char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        if ((unint64_t)v38 >= v20 || *v38 != 24) {
          continue;
        }
        int v21 = v38 + 1;
        *((void *)this + 1) = v21;
LABEL_63:
        if ((unint64_t)v21 >= v20 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v59);
          if (!result) {
            return result;
          }
          int v39 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
        }
        else
        {
          *int v59 = *v21;
          int v39 = v21 + 1;
          *((void *)this + 1) = v39;
        }
        a1[20] |= 4u;
        if ((unint64_t)v39 >= v20 || *v39 != 32) {
          continue;
        }
        unsigned int v22 = v39 + 1;
        *((void *)this + 1) = v22;
LABEL_71:
        if ((unint64_t)v22 >= v20 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v60);
          if (!result) {
            return result;
          }
          unsigned int v40 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
        }
        else
        {
          *__int16 v60 = *v22;
          unsigned int v40 = v22 + 1;
          *((void *)this + 1) = v40;
        }
        a1[20] |= 8u;
        if ((unint64_t)v40 >= v20 || *v40 != 40) {
          continue;
        }
        BOOL v23 = v40 + 1;
        *((void *)this + 1) = v23;
LABEL_79:
        if ((unint64_t)v23 >= v20 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v61);
          if (!result) {
            return result;
          }
          uint64_t v41 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
        }
        else
        {
          *__int16 v61 = *v23;
          uint64_t v41 = v23 + 1;
          *((void *)this + 1) = v41;
        }
        a1[20] |= 0x10u;
        if ((unint64_t)v41 >= v20 || *v41 != 48) {
          continue;
        }
        int v24 = v41 + 1;
        *((void *)this + 1) = v24;
LABEL_87:
        if ((unint64_t)v24 >= v20 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v62);
          if (!result) {
            return result;
          }
          uint64_t v42 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
        }
        else
        {
          *int v62 = *v24;
          uint64_t v42 = v24 + 1;
          *((void *)this + 1) = v42;
        }
        a1[20] |= 0x20u;
        if ((unint64_t)v42 >= v20 || *v42 != 56) {
          continue;
        }
        unsigned int v25 = v42 + 1;
        *((void *)this + 1) = v25;
LABEL_95:
        if ((unint64_t)v25 >= v20 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v43 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
        }
        else
        {
          *int v5 = *v25;
          int v43 = v25 + 1;
          *((void *)this + 1) = v43;
        }
        a1[20] |= 0x40u;
        if ((unint64_t)v43 >= v20 || *v43 != 64) {
          continue;
        }
        uint64_t v26 = v43 + 1;
        *((void *)this + 1) = v26;
LABEL_103:
        if ((unint64_t)v26 >= v20 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v44 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
        }
        else
        {
          *unsigned int v6 = *v26;
          int v44 = v26 + 1;
          *((void *)this + 1) = v44;
        }
        a1[20] |= 0x80u;
        if ((unint64_t)v44 >= v20 || *v44 != 72) {
          continue;
        }
        unsigned int v27 = v44 + 1;
        *((void *)this + 1) = v27;
LABEL_111:
        if ((unint64_t)v27 >= v20 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v45 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
        }
        else
        {
          *int v7 = *v27;
          int v45 = v27 + 1;
          *((void *)this + 1) = v45;
        }
        a1[20] |= 0x100u;
        if ((unint64_t)v45 >= v20 || *v45 != 80) {
          continue;
        }
        int v28 = v45 + 1;
        *((void *)this + 1) = v28;
LABEL_119:
        if ((unint64_t)v28 >= v20 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v46 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v28;
          int v46 = v28 + 1;
          *((void *)this + 1) = v46;
        }
        a1[20] |= 0x200u;
        if ((unint64_t)v46 >= v20 || *v46 != 88) {
          continue;
        }
        int v29 = v46 + 1;
        *((void *)this + 1) = v29;
LABEL_127:
        if ((unint64_t)v29 >= v20 || *v29 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          unsigned int v47 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
        }
        else
        {
          *int v9 = *v29;
          unsigned int v47 = v29 + 1;
          *((void *)this + 1) = v47;
        }
        a1[20] |= 0x400u;
        if ((unint64_t)v47 >= v20 || *v47 != 96) {
          continue;
        }
        unsigned int v30 = v47 + 1;
        *((void *)this + 1) = v30;
LABEL_135:
        if ((unint64_t)v30 >= v20 || *v30 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!result) {
            return result;
          }
          int v48 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
        }
        else
        {
          *int v10 = *v30;
          int v48 = v30 + 1;
          *((void *)this + 1) = v48;
        }
        a1[20] |= 0x800u;
        if ((unint64_t)v48 >= v20 || *v48 != 104) {
          continue;
        }
        unsigned int v31 = v48 + 1;
        *((void *)this + 1) = v31;
LABEL_143:
        if ((unint64_t)v31 >= v20 || *v31 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
          if (!result) {
            return result;
          }
          BOOL v49 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
        }
        else
        {
          *int v11 = *v31;
          BOOL v49 = v31 + 1;
          *((void *)this + 1) = v49;
        }
        a1[20] |= 0x1000u;
        if ((unint64_t)v49 >= v20 || *v49 != 112) {
          continue;
        }
        unsigned int v32 = v49 + 1;
        *((void *)this + 1) = v32;
LABEL_151:
        if ((unint64_t)v32 >= v20 || *v32 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v12);
          if (!result) {
            return result;
          }
          int v50 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
        }
        else
        {
          *int v12 = *v32;
          int v50 = v32 + 1;
          *((void *)this + 1) = v50;
        }
        a1[20] |= 0x2000u;
        if ((unint64_t)v50 >= v20 || *v50 != 120) {
          continue;
        }
        int v33 = v50 + 1;
        *((void *)this + 1) = v33;
LABEL_159:
        unsigned int v63 = 0;
        if ((unint64_t)v33 >= v20 || *v33 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v63);
          if (!result) {
            return result;
          }
          unsigned int v51 = v63;
        }
        else
        {
          unsigned int v51 = *v33;
          *((void *)this + 1) = v33 + 1;
        }
        if (v51 <= 6)
        {
          a1[20] |= 0x4000u;
          a1[16] = v51;
        }
        uint64_t v52 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v34 = *((void *)this + 2);
        if ((int)v34 - (int)v52 < 2 || *v52 != 128 || v52[1] != 1) {
          continue;
        }
        int v35 = v52 + 2;
        *((void *)this + 1) = v35;
LABEL_170:
        if ((unint64_t)v35 >= v34 || (char)*v35 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v58);
          if (!result) {
            return result;
          }
          double v53 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v34 = *((void *)this + 2);
        }
        else
        {
          *int v58 = *v35;
          double v53 = v35 + 1;
          *((void *)this + 1) = v53;
        }
        a1[20] |= 0x8000u;
        if ((int)v34 - (int)v53 < 2 || *v53 != 136 || v53[1] != 1) {
          continue;
        }
        unsigned int v36 = (char *)(v53 + 2);
        *((void *)this + 1) = v36;
LABEL_179:
        if ((unint64_t)v36 >= v34 || *v36 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v57);
          if (!result) {
            return result;
          }
          int v54 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v34 = *((void *)this + 2);
        }
        else
        {
          *unsigned int v57 = *v36;
          int v54 = (unsigned __int8 *)(v36 + 1);
          *((void *)this + 1) = v54;
        }
        a1[20] |= 0x10000u;
        if (v54 != (unsigned __int8 *)v34 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        int v21 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_63;
      case 4u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        unsigned int v22 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_71;
      case 5u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        BOOL v23 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_79;
      case 6u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        int v24 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_87;
      case 7u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        unsigned int v25 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_95;
      case 8u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        uint64_t v26 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_103;
      case 9u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        unsigned int v27 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_111;
      case 0xAu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        int v28 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_119;
      case 0xBu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        int v29 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_127;
      case 0xCu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        unsigned int v30 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_135;
      case 0xDu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        unsigned int v31 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_143;
      case 0xEu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        unsigned int v32 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_151;
      case 0xFu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        int v33 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_159;
      case 0x10u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        int v35 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v34 = *((void *)this + 2);
        goto LABEL_170;
      case 0x11u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        unsigned int v36 = (char *)*((void *)this + 1);
        unint64_t v34 = *((void *)this + 2);
        goto LABEL_179;
      default:
        int v15 = TagFallback & 7;
LABEL_44:
        if (v15 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

int *sub_1008D56A0(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  int v6 = result[20];
  if (v6)
  {
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    int v6 = v5[20];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_21;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  int v6 = v5[20];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  int v6 = v5[20];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  int v6 = v5[20];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  int v6 = v5[20];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
  int v6 = v5[20];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], a2, a4);
  int v6 = v5[20];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[9], a2, a4);
  int v6 = v5[20];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[10], a2, a4);
  int v6 = v5[20];
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v5[11], a2, a4);
  int v6 = v5[20];
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v5[12], a2, a4);
  int v6 = v5[20];
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v5[13], a2, a4);
  int v6 = v5[20];
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v5[14], a2, a4);
  int v6 = v5[20];
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v5[15], a2, a4);
  int v6 = v5[20];
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
LABEL_34:
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v5[17], a2, a4);
    if ((v5[20] & 0x10000) == 0) {
      return result;
    }
    goto LABEL_35;
  }
LABEL_33:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, v5[16], a2, a4);
  int v6 = v5[20];
  if ((v6 & 0x8000) != 0) {
    goto LABEL_34;
  }
LABEL_17:
  if ((v6 & 0x10000) == 0) {
    return result;
  }
LABEL_35:
  int v7 = v5[18];

  return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, v7, a2, a4);
}

uint64_t sub_1008D58B4(unsigned int *a1, unsigned int a2)
{
  unsigned int v3 = a1[20];
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_47;
  }
  if ((v3 & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_10;
  }
  int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[2];
  if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    unsigned int v3 = a1[20];
  }
  else
  {
    int v6 = 1;
  }
  uint64_t v4 = (v6 + 1);
  if ((v3 & 2) != 0)
  {
LABEL_10:
    int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[3];
    if ((v7 & 0x80000000) != 0)
    {
      int v8 = 10;
    }
    else if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      unsigned int v3 = a1[20];
    }
    else
    {
      int v8 = 1;
    }
    uint64_t v4 = (v4 + v8 + 1);
  }
LABEL_16:
  if ((v3 & 4) != 0)
  {
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[4];
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
      unsigned int v3 = a1[20];
    }
    else
    {
      int v10 = 1;
    }
    uint64_t v4 = (v4 + v10 + 1);
    if ((v3 & 8) == 0)
    {
LABEL_18:
      if ((v3 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_31;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_18;
  }
  int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[5];
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    unsigned int v3 = a1[20];
  }
  else
  {
    int v12 = 1;
  }
  uint64_t v4 = (v4 + v12 + 1);
  if ((v3 & 0x10) == 0)
  {
LABEL_19:
    if ((v3 & 0x20) == 0) {
      goto LABEL_20;
    }
    goto LABEL_35;
  }
LABEL_31:
  int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[6];
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
    unsigned int v3 = a1[20];
  }
  else
  {
    int v14 = 1;
  }
  uint64_t v4 = (v4 + v14 + 1);
  if ((v3 & 0x20) == 0)
  {
LABEL_20:
    if ((v3 & 0x40) == 0) {
      goto LABEL_21;
    }
    goto LABEL_39;
  }
LABEL_35:
  int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[7];
  if (v15 >= 0x80)
  {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
    unsigned int v3 = a1[20];
  }
  else
  {
    int v16 = 1;
  }
  uint64_t v4 = (v4 + v16 + 1);
  if ((v3 & 0x40) == 0)
  {
LABEL_21:
    if ((v3 & 0x80) == 0) {
      goto LABEL_47;
    }
    goto LABEL_43;
  }
LABEL_39:
  int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[8];
  if (v17 >= 0x80)
  {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2);
    unsigned int v3 = a1[20];
  }
  else
  {
    int v18 = 1;
  }
  uint64_t v4 = (v4 + v18 + 1);
  if ((v3 & 0x80) != 0)
  {
LABEL_43:
    int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[9];
    if (v19 >= 0x80)
    {
      int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2);
      unsigned int v3 = a1[20];
    }
    else
    {
      int v20 = 1;
    }
    uint64_t v4 = (v4 + v20 + 1);
  }
LABEL_47:
  if ((v3 & 0xFF00) == 0) {
    goto LABEL_56;
  }
  if ((v3 & 0x100) != 0)
  {
    int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[10];
    if (v21 >= 0x80)
    {
      int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2);
      unsigned int v3 = a1[20];
    }
    else
    {
      int v22 = 1;
    }
    uint64_t v4 = (v4 + v22 + 1);
    if ((v3 & 0x200) == 0)
    {
LABEL_50:
      if ((v3 & 0x400) == 0) {
        goto LABEL_51;
      }
      goto LABEL_66;
    }
  }
  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_50;
  }
  BOOL v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[11];
  if (v23 >= 0x80)
  {
    int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23, a2) + 1;
    unsigned int v3 = a1[20];
  }
  else
  {
    int v24 = 2;
  }
  uint64_t v4 = (v24 + v4);
  if ((v3 & 0x400) == 0)
  {
LABEL_51:
    if ((v3 & 0x800) == 0) {
      goto LABEL_52;
    }
    goto LABEL_70;
  }
LABEL_66:
  unsigned int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[12];
  if (v25 >= 0x80)
  {
    int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2) + 1;
    unsigned int v3 = a1[20];
  }
  else
  {
    int v26 = 2;
  }
  uint64_t v4 = (v26 + v4);
  if ((v3 & 0x800) == 0)
  {
LABEL_52:
    if ((v3 & 0x1000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_74;
  }
LABEL_70:
  unsigned int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[13];
  if (v27 >= 0x80)
  {
    int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2) + 1;
    unsigned int v3 = a1[20];
  }
  else
  {
    int v28 = 2;
  }
  uint64_t v4 = (v28 + v4);
  if ((v3 & 0x1000) == 0)
  {
LABEL_53:
    if ((v3 & 0x2000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_78;
  }
LABEL_74:
  int v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[14];
  if (v29 >= 0x80)
  {
    int v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29, a2) + 1;
    unsigned int v3 = a1[20];
  }
  else
  {
    int v30 = 2;
  }
  uint64_t v4 = (v30 + v4);
  if ((v3 & 0x2000) == 0)
  {
LABEL_54:
    if ((v3 & 0x4000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_82;
  }
LABEL_78:
  unsigned int v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[15];
  if (v31 >= 0x80)
  {
    int v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31, a2) + 1;
    unsigned int v3 = a1[20];
  }
  else
  {
    int v32 = 2;
  }
  uint64_t v4 = (v32 + v4);
  if ((v3 & 0x4000) == 0)
  {
LABEL_55:
    if ((v3 & 0x8000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_88;
  }
LABEL_82:
  int v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[16];
  if ((v33 & 0x80000000) != 0)
  {
    int v34 = 11;
  }
  else if (v33 >= 0x80)
  {
    int v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33, a2) + 1;
    unsigned int v3 = a1[20];
  }
  else
  {
    int v34 = 2;
  }
  uint64_t v4 = (v34 + v4);
  if ((v3 & 0x8000) == 0)
  {
LABEL_56:
    if ((v3 & 0x10000) == 0) {
      goto LABEL_96;
    }
    goto LABEL_92;
  }
LABEL_88:
  int v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[17];
  if (v35 >= 0x80)
  {
    int v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v35, a2) + 2;
    unsigned int v3 = a1[20];
  }
  else
  {
    int v36 = 3;
  }
  uint64_t v4 = (v36 + v4);
  if ((v3 & 0x10000) != 0)
  {
LABEL_92:
    unsigned int v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[18];
    if (v37 >= 0x80) {
      int v38 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37, a2) + 2;
    }
    else {
      int v38 = 3;
    }
    uint64_t v4 = (v38 + v4);
  }
LABEL_96:
  a1[19] = v4;
  return v4;
}

void sub_1008D5BF8(_DWORD *a1, _DWORD *lpsrc)
{
  sub_1008D4944(a1, lpsrc);
}

uint64_t sub_1008D5C80()
{
  return 1;
}

void *sub_1008D5C88@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.PositionRequest");
}

void sub_1008D5C98(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      *(_DWORD *)(a1 + 28) |= 1u;
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_10248A4C8 + 8);
      }
      sub_1008D33E4(v5, v6);
      int v4 = *(_DWORD *)(a2 + 28);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 28) |= 2u;
      int v7 = *(_DWORD **)(a1 + 16);
      if (!v7) {
        operator new();
      }
      uint64_t v8 = *(void *)(a2 + 16);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_10248A4C8 + 16);
      }
      sub_1008D2F10(v7, v8);
    }
  }
}

void sub_1008D5DF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1008D5E0C(void *result)
{
  if ((void *)qword_10248A4C8 != result)
  {
    int v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t result = (void *)v1[2];
    if (result)
    {
      unsigned int v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_1008D5EAC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D0AB0;
  sub_1008D5E0C(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008D5F00(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D0AB0;
  sub_1008D5E0C(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008D5F68()
{
}

uint64_t sub_1008D5FB4(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(unsigned char *)(result + 28);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(result + 28))
    {
      uint64_t result = *(void *)(result + 8);
      if (result)
      {
        uint64_t result = sub_1008D368C(result);
        int v2 = *(_DWORD *)(v1 + 28);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 20)) {
          *(void *)(v3 + 8) = 0;
        }
        *(_DWORD *)(v3 + 20) = 0;
      }
    }
  }
  *(_DWORD *)(v1 + 28) = 0;
  return result;
}

uint64_t sub_1008D6010(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_17;
        }
        *(_DWORD *)(a1 + 28) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        unsigned int v27 = 0;
        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27))return 0; {
        }
          }
        else
        {
          unsigned int v27 = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27);
        if (!sub_1008D36BC(v8, this, v13) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        int v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 < *((void *)this + 2) && *v17 == 18)
        {
          *((void *)this + 1) = v17 + 1;
          goto LABEL_29;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v7 = TagFallback & 7;
      if (v7 != 2) {
        goto LABEL_17;
      }
LABEL_29:
      *(_DWORD *)(a1 + 28) |= 2u;
      int v18 = *(unsigned int **)(a1 + 16);
      if (!v18) {
        operator new();
      }
      unsigned int v28 = 0;
      int v19 = (char *)*((void *)this + 1);
      if ((unint64_t)v19 >= *((void *)this + 2) || *v19 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v28))return 0; {
      }
        }
      else
      {
        unsigned int v28 = *v19;
        *((void *)this + 1) = v19 + 1;
      }
      int v20 = *((_DWORD *)this + 14);
      int v21 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v20 + 1;
      if (v20 >= v21) {
        return 0;
      }
      int v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v28);
      if (!sub_1008D30A8(v18, this, v23) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v22);
      int v24 = *((_DWORD *)this + 14);
      BOOL v15 = __OFSUB__(v24, 1);
      int v25 = v24 - 1;
      if (v25 < 0 == v15) {
        *((_DWORD *)this + 14) = v25;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v7 = TagFallback & 7;
LABEL_17:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1008D6308(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(result + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248A4C8 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 28) & 2) != 0)
  {
LABEL_7:
    uint64_t v8 = *(void *)(v5 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_10248A4C8 + 16);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  }
  return result;
}

uint64_t sub_1008D6398(uint64_t a1, unsigned int a2)
{
  if (!*(unsigned char *)(a1 + 28))
  {
    uint64_t v3 = 0;
    goto LABEL_18;
  }
  if ((*(unsigned char *)(a1 + 28) & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((*(unsigned char *)(a1 + 28) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (!v4) {
    uint64_t v4 = *(void *)(qword_10248A4C8 + 8);
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D3B88(v4, a2);
  int v6 = (int)v5;
  if (v5 >= 0x80) {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
  }
  else {
    int v7 = 1;
  }
  uint64_t v3 = (v6 + v7 + 1);
  if ((*(_DWORD *)(a1 + 28) & 2) != 0)
  {
LABEL_12:
    uint64_t v8 = *(void *)(a1 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_10248A4C8 + 16);
    }
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D32B4(v8, a2);
    int v11 = (int)v9;
    if (v9 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, v10);
    }
    else {
      int v12 = 1;
    }
    uint64_t v3 = (v3 + v11 + v12 + 1);
  }
LABEL_18:
  *(_DWORD *)(a1 + 24) = v3;
  return v3;
}

void sub_1008D646C(uint64_t a1, void *lpsrc)
{
  sub_1008D5C98(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008D64F4()
{
  return 1;
}

void *sub_1008D64FC@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.UtranGpsTimeMeasured");
}

void sub_1008D650C(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 20))
    {
      int v5 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v5;
      int v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v6;
    }
  }
}

void sub_1008D65B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008D65D0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D0B28;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008D65F0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D0B28;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008D6644()
{
}

uint64_t sub_1008D6690(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1008D66A4(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  while (1)
  {
    while (1)
    {
      int v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      int v12 = (char *)*((void *)this + 1);
      unint64_t v10 = *((void *)this + 2);
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!result) {
          return result;
        }
        unsigned int v13 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
      }
      else
      {
        *int v5 = *v12;
        unsigned int v13 = v12 + 1;
        *((void *)this + 1) = v13;
      }
      a1[5] |= 1u;
      if ((unint64_t)v13 < v10 && *v13 == 16)
      {
        int v11 = v13 + 1;
        *((void *)this + 1) = v11;
LABEL_24:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v11;
          int v14 = (unsigned __int8 *)(v11 + 1);
          *((void *)this + 1) = v14;
        }
        a1[5] |= 2u;
        if (v14 == (unsigned __int8 *)v10
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v9 = TagFallback & 7;
    }
LABEL_16:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1008D6844(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(_DWORD *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_1008D68B0(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 20);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 20))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_14;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 20) & 2) == 0) {
        goto LABEL_14;
      }
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v6 >= 0x80) {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    }
    else {
      int v7 = 2;
    }
    uint64_t v4 = (v7 + v4);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_14:
  *(_DWORD *)(a1 + 16) = v4;
  return v4;
}

void sub_1008D6940(_DWORD *a1, void *lpsrc)
{
  sub_1008D650C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008D69C8()
{
  return 1;
}

void *sub_1008D69D0@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.GeranGpsTimeMeasuredBased");
}

void sub_1008D69E0(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 20))
    {
      int v5 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v5;
      int v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v6;
    }
  }
}

void sub_1008D6A8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008D6AA4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D0BA0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008D6AC4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D0BA0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008D6B18()
{
}

uint64_t sub_1008D6B64(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1008D6B78(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  while (1)
  {
    while (1)
    {
      int v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      int v12 = (char *)*((void *)this + 1);
      unint64_t v10 = *((void *)this + 2);
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!result) {
          return result;
        }
        unsigned int v13 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
      }
      else
      {
        *int v5 = *v12;
        unsigned int v13 = v12 + 1;
        *((void *)this + 1) = v13;
      }
      a1[5] |= 1u;
      if ((unint64_t)v13 < v10 && *v13 == 16)
      {
        int v11 = v13 + 1;
        *((void *)this + 1) = v11;
LABEL_24:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v11;
          int v14 = (unsigned __int8 *)(v11 + 1);
          *((void *)this + 1) = v14;
        }
        a1[5] |= 2u;
        if (v14 == (unsigned __int8 *)v10
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v9 = TagFallback & 7;
    }
LABEL_16:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1008D6D18(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(_DWORD *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_1008D6D84(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 20);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 20))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_14;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 20) & 2) == 0) {
        goto LABEL_14;
      }
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v6 >= 0x80) {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    }
    else {
      int v7 = 2;
    }
    uint64_t v4 = (v7 + v4);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_14:
  *(_DWORD *)(a1 + 16) = v4;
  return v4;
}

void sub_1008D6E14(_DWORD *a1, void *lpsrc)
{
  sub_1008D69E0(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008D6E9C()
{
  return 1;
}

void *sub_1008D6EA4@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.GeranGpsTimeMeasuredAssisted");
}

void sub_1008D6EB4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      *(_DWORD *)(a1 + 36) |= 1u;
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_10248A4E0 + 8);
      }
      sub_1008D5C98(v5, v6);
      int v4 = *(_DWORD *)(a2 + 36);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_18;
      }
    }
    else if ((*(unsigned char *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    *(_DWORD *)(a1 + 36) |= 2u;
    int v7 = *(_DWORD **)(a1 + 16);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = *(void *)(a2 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_10248A4E0 + 16);
    }
    sub_1008D650C(v7, v8);
    if ((*(_DWORD *)(a2 + 36) & 4) != 0)
    {
LABEL_18:
      *(_DWORD *)(a1 + 36) |= 4u;
      int v9 = *(_DWORD **)(a1 + 24);
      if (!v9) {
        operator new();
      }
      uint64_t v10 = *(void *)(a2 + 24);
      if (!v10) {
        uint64_t v10 = *(void *)(qword_10248A4E0 + 24);
      }
      sub_1008D69E0(v9, v10);
    }
  }
}

void sub_1008D7084(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1008D709C(void *result)
{
  if ((void *)qword_10248A4E0 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t result = (void *)v1[3];
    if (result)
    {
      int v4 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v4();
    }
  }
  return result;
}

void sub_1008D7168(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D0C18;
  sub_1008D709C(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008D71BC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D0C18;
  sub_1008D709C(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008D7224()
{
}

uint64_t sub_1008D7278(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(unsigned char *)(result + 36);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(result + 36))
    {
      uint64_t result = *(void *)(result + 8);
      if (result)
      {
        uint64_t result = sub_1008D5FB4(result);
        int v2 = *(_DWORD *)(v1 + 36);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 20)) {
          *(void *)(v3 + 8) = 0;
        }
        *(_DWORD *)(v3 + 20) = 0;
        int v2 = *(_DWORD *)(v1 + 36);
      }
    }
    if ((v2 & 4) != 0)
    {
      uint64_t v4 = *(void *)(v1 + 24);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 20)) {
          *(void *)(v4 + 8) = 0;
        }
        *(_DWORD *)(v4 + 20) = 0;
      }
    }
  }
  *(_DWORD *)(v1 + 36) = 0;
  return result;
}

uint64_t sub_1008D72F4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = (char *)*((void *)this + 1);
          if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v5;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v5 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v8 = TagFallback & 7;
          if (v8 != 2) {
            goto LABEL_20;
          }
          *(_DWORD *)(a1 + 36) |= 1u;
          uint64_t v9 = *(void *)(a1 + 8);
          if (!v9) {
            operator new();
          }
          unsigned int v37 = 0;
          uint64_t v10 = (char *)*((void *)this + 1);
          if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v37))return 0; {
          }
            }
          else
          {
            unsigned int v37 = *v10;
            *((void *)this + 1) = v10 + 1;
          }
          int v11 = *((_DWORD *)this + 14);
          int v12 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v11 + 1;
          if (v11 >= v12) {
            return 0;
          }
          int v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v37);
          if (!sub_1008D6010(v9, this, v14) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
          int v15 = *((_DWORD *)this + 14);
          BOOL v16 = __OFSUB__(v15, 1);
          int v17 = v15 - 1;
          if (v17 < 0 == v16) {
            *((_DWORD *)this + 14) = v17;
          }
          int v18 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v18 < *((void *)this + 2) && *v18 == 18)
          {
            *((void *)this + 1) = v18 + 1;
            goto LABEL_32;
          }
        }
        if (v7 != 2) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_20;
        }
LABEL_32:
        *(_DWORD *)(a1 + 36) |= 2u;
        int v19 = *(unsigned int **)(a1 + 16);
        if (!v19) {
          operator new();
        }
        unsigned int v38 = 0;
        int v20 = (char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v38))return 0; {
        }
          }
        else
        {
          unsigned int v38 = *v20;
          *((void *)this + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)this + 14);
        int v22 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v21 + 1;
        if (v21 >= v22) {
          return 0;
        }
        int v23 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v38);
        if (!sub_1008D66A4(v19, this, v24) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v23);
        int v25 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v25, 1);
        int v26 = v25 - 1;
        if (v26 < 0 == v16) {
          *((_DWORD *)this + 14) = v26;
        }
        unsigned int v27 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v27 < *((void *)this + 2) && *v27 == 26)
        {
          *((void *)this + 1) = v27 + 1;
          goto LABEL_46;
        }
      }
      if (v7 != 3) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_20;
      }
LABEL_46:
      *(_DWORD *)(a1 + 36) |= 4u;
      unsigned int v28 = *(unsigned int **)(a1 + 24);
      if (!v28) {
        operator new();
      }
      unsigned int v39 = 0;
      int v29 = (char *)*((void *)this + 1);
      if ((unint64_t)v29 >= *((void *)this + 2) || *v29 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v39))return 0; {
      }
        }
      else
      {
        unsigned int v39 = *v29;
        *((void *)this + 1) = v29 + 1;
      }
      int v30 = *((_DWORD *)this + 14);
      int v31 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v30 + 1;
      if (v30 >= v31) {
        return 0;
      }
      int v32 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v39);
      if (!sub_1008D6B78(v28, this, v33) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v32);
      int v34 = *((_DWORD *)this + 14);
      BOOL v16 = __OFSUB__(v34, 1);
      int v35 = v34 - 1;
      if (v35 < 0 == v16) {
        *((_DWORD *)this + 14) = v35;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v8 = TagFallback & 7;
LABEL_20:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1008D7704(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_10248A4E0 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        return result;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_10248A4E0 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  if ((*(_DWORD *)(v5 + 36) & 4) != 0)
  {
LABEL_11:
    uint64_t v9 = *(void *)(v5 + 24);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_10248A4E0 + 24);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  }
  return result;
}

uint64_t sub_1008D77C0(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_25;
  }
  if (*(unsigned char *)(a1 + 36))
  {
    uint64_t v5 = *(void *)(a1 + 8);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_10248A4E0 + 8);
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D6398(v5, a2);
    int v7 = (int)v6;
    if (v6 >= 0x80) {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
    }
    else {
      int v8 = 1;
    }
    uint64_t v4 = (v7 + v8 + 1);
    int v3 = *(_DWORD *)(a1 + 36);
    if ((v3 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v4 = 0;
  if ((*(unsigned char *)(a1 + 36) & 2) != 0)
  {
LABEL_12:
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_10248A4E0 + 16);
    }
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D68B0(v9, a2);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    }
    else {
      int v12 = 1;
    }
    uint64_t v4 = (v4 + v11 + v12 + 1);
    int v3 = *(_DWORD *)(a1 + 36);
  }
LABEL_18:
  if ((v3 & 4) != 0)
  {
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13) {
      uint64_t v13 = *(void *)(qword_10248A4E0 + 24);
    }
    unsigned int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D6D84(v13, a2);
    int v16 = (int)v14;
    if (v14 >= 0x80) {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, v15);
    }
    else {
      int v17 = 1;
    }
    uint64_t v4 = (v4 + v16 + v17 + 1);
  }
LABEL_25:
  *(_DWORD *)(a1 + 32) = v4;
  return v4;
}

void sub_1008D78DC(uint64_t a1, void *lpsrc)
{
  sub_1008D6EB4(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008D7964()
{
  return 1;
}

void *sub_1008D796C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.GpsTimeMeasured");
}

void sub_1008D797C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      unsigned int v5 = *(_DWORD *)(a2 + 16);
      if (v5 >= 6) {
        sub_101A734F4();
      }
      *(_DWORD *)(a1 + 24) |= 1u;
      *(_DWORD *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 24) |= 2u;
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_10248A4E8 + 8);
      }
      sub_1008D6EB4(v6, v7);
    }
  }
}

void sub_1008D7A90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008D7AA8(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022D0C90;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_10248A4E8 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008D7B38(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008D7AA8(a1);

  operator delete();
}

void sub_1008D7B70()
{
}

uint64_t sub_1008D7BC0(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(unsigned char *)(result + 24);
  if (v2)
  {
    *(_DWORD *)(result + 16) = 0;
    if ((v2 & 2) != 0)
    {
      uint64_t result = *(void *)(result + 8);
      if (result) {
        uint64_t result = sub_1008D7278(result);
      }
    }
  }
  *(_DWORD *)(v1 + 24) = 0;
  return result;
}

uint64_t sub_1008D7C00(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        unsigned int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_15;
        }
        unsigned int v21 = 0;
        int v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
          if (!result) {
            return result;
          }
          unsigned int v9 = v21;
        }
        else
        {
          unsigned int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
        }
        if (v9 <= 5)
        {
          *(_DWORD *)(a1 + 24) |= 1u;
          *(_DWORD *)(a1 + 16) = v9;
        }
        int v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 18)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_25;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        int v7 = TagFallback & 7;
        goto LABEL_15;
      }
      int v7 = TagFallback & 7;
      if (v7 == 2) {
        break;
      }
LABEL_15:
      if (v7 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
LABEL_25:
    *(_DWORD *)(a1 + 24) |= 2u;
    uint64_t v12 = *(void *)(a1 + 8);
    if (!v12) {
      operator new();
    }
    unsigned int v22 = 0;
    uint64_t v13 = (char *)*((void *)this + 1);
    if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22)) {
        return 0;
      }
    }
    else
    {
      unsigned int v22 = *v13;
      *((void *)this + 1) = v13 + 1;
    }
    int v14 = *((_DWORD *)this + 14);
    int v15 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v14 + 1;
    if (v14 >= v15) {
      return 0;
    }
    int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v22);
    if (!sub_1008D72F4(v12, this, v17) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
    int v18 = *((_DWORD *)this + 14);
    BOOL v19 = __OFSUB__(v18, 1);
    int v20 = v18 - 1;
    if (v20 < 0 == v19) {
      *((_DWORD *)this + 14) = v20;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_1008D7E60(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 24) & 2) == 0) {
      return result;
    }
  }
  else if ((v6 & 2) == 0)
  {
    return result;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248A4E8 + 8);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
}

uint64_t sub_1008D7EE0(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 24);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 24))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
      if ((v5 & 0x80000000) != 0)
      {
        uint64_t v4 = 11;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
      else if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 24) & 2) == 0) {
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
        goto LABEL_19;
      }
    }
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10248A4E8 + 8);
    }
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D77C0(v6, a2);
    int v9 = (int)v7;
    if (v7 >= 0x80) {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, v8);
    }
    else {
      int v10 = 1;
    }
    uint64_t v4 = (v4 + v9 + v10 + 1);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_1008D7FA8(uint64_t a1, void *lpsrc)
{
  sub_1008D797C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008D8030()
{
  return 1;
}

void *sub_1008D8038@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.GpsTimeMeasuredParams");
}

void sub_1008D8048(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      int v6 = *(_DWORD *)(a2 + 8);
      a1[6] |= 1u;
      a1[2] = v6;
      int v4 = *(_DWORD *)(a2 + 24);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 24) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 12);
    a1[6] |= 2u;
    a1[3] = v7;
    if ((*(_DWORD *)(a2 + 24) & 4) == 0) {
      return;
    }
LABEL_7:
    int v5 = *(_DWORD *)(a2 + 16);
    a1[6] |= 4u;
    a1[4] = v5;
  }
}

void sub_1008D811C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008D8134(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D0D08;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008D8154(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D0D08;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008D81A8()
{
}

uint64_t sub_1008D81F8(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    *(void *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1008D8210(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  int v7 = a1 + 4;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        unsigned int v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v8;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v8 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v10 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v14 >= v12 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v5 = *v14;
          int v15 = v14 + 1;
          *((void *)this + 1) = v15;
        }
        a1[6] |= 1u;
        if ((unint64_t)v15 < v12 && *v15 == 16)
        {
          int v16 = v15 + 1;
          *((void *)this + 1) = v16;
          goto LABEL_27;
        }
      }
      if (v10 != 2) {
        break;
      }
      int v11 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_19;
      }
      int v16 = (char *)*((void *)this + 1);
      unint64_t v12 = *((void *)this + 2);
LABEL_27:
      if ((unint64_t)v16 >= v12 || *v16 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
        if (!result) {
          return result;
        }
        unsigned int v17 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
      }
      else
      {
        *int v6 = *v16;
        unsigned int v17 = v16 + 1;
        *((void *)this + 1) = v17;
      }
      a1[6] |= 2u;
      if ((unint64_t)v17 < v12 && *v17 == 24)
      {
        uint64_t v13 = v17 + 1;
        *((void *)this + 1) = v13;
LABEL_35:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v18 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v7 = *v13;
          int v18 = (unsigned __int8 *)(v13 + 1);
          *((void *)this + 1) = v18;
        }
        a1[6] |= 4u;
        if (v18 == (unsigned __int8 *)v12
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v10 == 3)
    {
      int v11 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_35;
      }
    }
    else
    {
      int v11 = TagFallback & 7;
    }
LABEL_19:
    if (v11 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

int *sub_1008D8434(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  int v6 = result[6];
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
    if ((v5[6] & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
  int v6 = v5[6];
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  int v7 = v5[4];

  return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t sub_1008D84C0(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 24);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_19;
  }
  if (*(unsigned char *)(a1 + 24))
  {
    int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 24);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 24);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    unsigned int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80) {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    }
    else {
      int v9 = 2;
    }
    uint64_t v4 = (v9 + v4);
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_1008D8578(_DWORD *a1, void *lpsrc)
{
  sub_1008D8048(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008D8600()
{
  return 1;
}

void *sub_1008D8608@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.GpsTOD");
}

void sub_1008D8618(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 40);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 40))
    {
      int v8 = *(_DWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 40) |= 1u;
      *(_DWORD *)(a1 + 8) = v8;
      int v4 = *(_DWORD *)(a2 + 40);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_19;
      }
    }
    else if ((*(unsigned char *)(a2 + 40) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v9 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 40) |= 2u;
    *(_DWORD *)(a1 + 12) = v9;
    int v4 = *(_DWORD *)(a2 + 40);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_20;
    }
LABEL_19:
    int v10 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 40) |= 4u;
    *(_DWORD *)(a1 + 16) = v10;
    int v4 = *(_DWORD *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_9;
    }
LABEL_20:
    unsigned int v11 = *(_DWORD *)(a2 + 20);
    if (v11 >= 4) {
      sub_101A73520();
    }
    *(_DWORD *)(a1 + 40) |= 8u;
    *(_DWORD *)(a1 + 20) = v11;
    int v4 = *(_DWORD *)(a2 + 40);
    if ((v4 & 0x10) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    int v5 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 40) |= 0x10u;
    *(_DWORD *)(a1 + 32) = v5;
    int v4 = *(_DWORD *)(a2 + 40);
LABEL_10:
    if ((v4 & 0x20) != 0)
    {
      *(_DWORD *)(a1 + 40) |= 0x20u;
      int v6 = *(_DWORD **)(a1 + 24);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 24);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_10248A4F8 + 24);
      }
      sub_1008D8048(v6, v7);
    }
  }
}

void sub_1008D87AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008D87C4(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022D0D80;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_10248A4F8 != this)
  {
    uint64_t v2 = *((void *)this + 3);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008D8854(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008D87C4(a1);

  operator delete();
}

void sub_1008D888C()
{
}

uint64_t sub_1008D88E4(uint64_t result)
{
  char v1 = *(unsigned char *)(result + 40);
  if (v1)
  {
    *(_DWORD *)(result + 32) = 0;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    if ((v1 & 0x20) != 0)
    {
      uint64_t v2 = *(void *)(result + 24);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 24))
        {
          *(void *)(v2 + 8) = 0;
          *(_DWORD *)(v2 + 16) = 0;
        }
        *(_DWORD *)(v2 + 24) = 0;
      }
    }
  }
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1008D891C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 8);
  int v6 = (unsigned int *)(a1 + 12);
  uint64_t v7 = (unsigned int *)(a1 + 16);
  int v8 = (unsigned int *)(a1 + 32);
  while (2)
  {
    int v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v9;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v9 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_23;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v14 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v5 = *v13;
          int v14 = v13 + 1;
          *((void *)this + 1) = v14;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        if ((unint64_t)v14 < v12 && *v14 == 16)
        {
          int v15 = v14 + 1;
          *((void *)this + 1) = v15;
          goto LABEL_31;
        }
        continue;
      case 2u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_23;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
LABEL_31:
        if ((unint64_t)v15 >= v12 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          unsigned int v22 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v15;
          unsigned int v22 = v15 + 1;
          *((void *)this + 1) = v22;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        if ((unint64_t)v22 >= v12 || *v22 != 24) {
          continue;
        }
        int v16 = v22 + 1;
        *((void *)this + 1) = v16;
LABEL_39:
        if ((unint64_t)v16 >= v12 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v23 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v7 = *v16;
          int v23 = v16 + 1;
          *((void *)this + 1) = v23;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        if ((unint64_t)v23 >= v12 || *v23 != 32) {
          continue;
        }
        unsigned int v17 = v23 + 1;
        *((void *)this + 1) = v17;
LABEL_47:
        unsigned int v36 = 0;
        if ((unint64_t)v17 >= v12 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v36);
          if (!result) {
            return result;
          }
          unsigned int v24 = v36;
        }
        else
        {
          unsigned int v24 = *v17;
          *((void *)this + 1) = v17 + 1;
        }
        if (v24 <= 3)
        {
          *(_DWORD *)(a1 + 40) |= 8u;
          *(_DWORD *)(a1 + 20) = v24;
        }
        int v25 = (unsigned char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        if ((unint64_t)v25 >= v18 || *v25 != 40) {
          continue;
        }
        BOOL v19 = v25 + 1;
        *((void *)this + 1) = v19;
LABEL_57:
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v26 = (unsigned char *)*((void *)this + 1);
          unint64_t v18 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v19;
          int v26 = v19 + 1;
          *((void *)this + 1) = v26;
        }
        int v20 = *(_DWORD *)(a1 + 40) | 0x10;
        *(_DWORD *)(a1 + 40) = v20;
        if ((unint64_t)v26 >= v18 || *v26 != 50) {
          continue;
        }
        *((void *)this + 1) = v26 + 1;
LABEL_65:
        *(_DWORD *)(a1 + 40) = v20 | 0x20;
        unsigned int v27 = *(unsigned int **)(a1 + 24);
        if (!v27) {
          operator new();
        }
        unsigned int v37 = 0;
        unsigned int v28 = (char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v37))return 0; {
        }
          }
        else
        {
          unsigned int v37 = *v28;
          *((void *)this + 1) = v28 + 1;
        }
        int v29 = *((_DWORD *)this + 14);
        int v30 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v29 + 1;
        if (v29 < v30)
        {
          int v31 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v37);
          if (sub_1008D8210(v27, this, v32))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v31);
              int v33 = *((_DWORD *)this + 14);
              BOOL v34 = __OFSUB__(v33, 1);
              int v35 = v33 - 1;
              if (v35 < 0 == v34) {
                *((_DWORD *)this + 14) = v35;
              }
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_23;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_39;
      case 4u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_23;
        }
        unsigned int v17 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_47;
      case 5u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_23;
        }
        BOOL v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_57;
      case 6u:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_23;
        }
        int v20 = *(_DWORD *)(a1 + 40);
        goto LABEL_65;
      default:
        int v11 = TagFallback & 7;
LABEL_23:
        if (v11 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1008D8D90(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 40);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 16), a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_12:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 32), a2, a4);
    if ((*(_DWORD *)(v5 + 40) & 0x20) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 20), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x10) != 0) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v6 & 0x20) == 0) {
    return result;
  }
LABEL_13:
  uint64_t v7 = *(void *)(v5 + 24);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248A4F8 + 24);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v7, a2, a4);
}

uint64_t sub_1008D8E80(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 40);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_39;
  }
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 40);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 40) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 40);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 40);
    }
    else
    {
      int v9 = 2;
    }
    uint64_t v4 = (v9 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_16:
      if ((v3 & 0x10) == 0) {
        goto LABEL_17;
      }
LABEL_29:
      unint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
      if (v12 >= 0x80)
      {
        int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 40);
      }
      else
      {
        int v13 = 2;
      }
      uint64_t v4 = (v13 + v4);
      if ((v3 & 0x20) == 0) {
        goto LABEL_39;
      }
      goto LABEL_33;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if ((v10 & 0x80000000) != 0)
  {
    int v11 = 11;
  }
  else if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 40);
  }
  else
  {
    int v11 = 2;
  }
  uint64_t v4 = (v11 + v4);
  if ((v3 & 0x10) != 0) {
    goto LABEL_29;
  }
LABEL_17:
  if ((v3 & 0x20) == 0) {
    goto LABEL_39;
  }
LABEL_33:
  uint64_t v14 = *(void *)(a1 + 24);
  if (!v14) {
    uint64_t v14 = *(void *)(qword_10248A4F8 + 24);
  }
  int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D84C0(v14, a2);
  int v17 = (int)v15;
  if (v15 >= 0x80) {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, v16);
  }
  else {
    int v18 = 1;
  }
  uint64_t v4 = (v4 + v17 + v18 + 1);
LABEL_39:
  *(_DWORD *)(a1 + 36) = v4;
  return v4;
}

void sub_1008D8FF4(uint64_t a1, void *lpsrc)
{
  sub_1008D8618(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008D907C()
{
  return 1;
}

void *sub_1008D9084@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.LocationInfo");
}

void sub_1008D9094(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      int v5 = *(_DWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(_DWORD *)(a1 + 8) = v5;
      int v4 = *(_DWORD *)(a2 + 32);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_11;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v6 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(_DWORD *)(a1 + 12) = v6;
    int v4 = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_12;
    }
LABEL_11:
    int v7 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 4u;
    *(_DWORD *)(a1 + 24) = v7;
    if ((*(_DWORD *)(a2 + 32) & 8) == 0) {
      return;
    }
LABEL_12:
    *(_DWORD *)(a1 + 32) |= 8u;
    int v8 = *(_DWORD **)(a1 + 16);
    if (!v8) {
      operator new();
    }
    uint64_t v9 = *(void *)(a2 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_10248A500 + 16);
    }
    sub_1008D3D64(v8, v9);
  }
}

void sub_1008D91E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008D91F8(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022D0DF8;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_10248A500 != this)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008D9288(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008D91F8(a1);

  operator delete();
}

void sub_1008D92C0()
{
}

uint64_t sub_1008D9310(uint64_t result)
{
  char v1 = *(unsigned char *)(result + 32);
  if (v1)
  {
    *(void *)(result + 8) = 0;
    *(_DWORD *)(result + 24) = 0;
    if ((v1 & 8) != 0)
    {
      uint64_t v2 = *(void *)(result + 16);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 24))
        {
          *(void *)(v2 + 8) = 0;
          *(_DWORD *)(v2 + 16) = 0;
        }
        *(_DWORD *)(v2 + 24) = 0;
      }
    }
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1008D9348(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 8);
  int v6 = (unsigned int *)(a1 + 12);
  int v7 = (unsigned int *)(a1 + 24);
  while (2)
  {
    int v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unint64_t v12 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v13 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          *int v5 = *v12;
          int v13 = v12 + 1;
          *((void *)this + 1) = v13;
        }
        *(_DWORD *)(a1 + 32) |= 1u;
        if ((unint64_t)v13 < v11 && *v13 == 16)
        {
          uint64_t v14 = v13 + 1;
          *((void *)this + 1) = v14;
          goto LABEL_27;
        }
        continue;
      case 2u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
LABEL_27:
        if ((unint64_t)v14 >= v11 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v14;
          int v18 = v14 + 1;
          *((void *)this + 1) = v18;
        }
        *(_DWORD *)(a1 + 32) |= 2u;
        if ((unint64_t)v18 >= v11 || *v18 != 24) {
          continue;
        }
        int v15 = v18 + 1;
        *((void *)this + 1) = v15;
LABEL_35:
        if ((unint64_t)v15 >= v11 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          BOOL v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          *int v7 = *v15;
          BOOL v19 = v15 + 1;
          *((void *)this + 1) = v19;
        }
        int v16 = *(_DWORD *)(a1 + 32) | 4;
        *(_DWORD *)(a1 + 32) = v16;
        if ((unint64_t)v19 >= v11 || *v19 != 34) {
          continue;
        }
        *((void *)this + 1) = v19 + 1;
LABEL_43:
        *(_DWORD *)(a1 + 32) = v16 | 8;
        int v20 = *(unsigned int **)(a1 + 16);
        if (!v20) {
          operator new();
        }
        unsigned int v29 = 0;
        unsigned int v21 = (char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v29))return 0; {
        }
          }
        else
        {
          unsigned int v29 = *v21;
          *((void *)this + 1) = v21 + 1;
        }
        int v22 = *((_DWORD *)this + 14);
        int v23 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v22 + 1;
        if (v22 < v23)
        {
          int v24 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v29);
          if (sub_1008D3F2C(v20, this, v25))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v24);
              int v26 = *((_DWORD *)this + 14);
              BOOL v27 = __OFSUB__(v26, 1);
              int v28 = v26 - 1;
              if (v28 < 0 == v27) {
                *((_DWORD *)this + 14) = v28;
              }
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_35;
      case 4u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_19;
        }
        int v16 = *(_DWORD *)(a1 + 32);
        goto LABEL_43;
      default:
        int v10 = TagFallback & 7;
LABEL_19:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1008D96C0(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 24), a2, a4);
      if ((*(_DWORD *)(v5 + 32) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248A500 + 16);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
}

uint64_t sub_1008D9778(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 32);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_27;
  }
  if (*(unsigned char *)(a1 + 32))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 32);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 32) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 32);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 32);
    }
    else
    {
      int v9 = 2;
    }
    uint64_t v4 = (v9 + v4);
    if ((v3 & 8) == 0) {
      goto LABEL_27;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_27;
  }
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_10248A500 + 16);
  }
  unint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D41DC(v10, a2);
  int v13 = (int)v11;
  if (v11 >= 0x80) {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, v12);
  }
  else {
    int v14 = 1;
  }
  uint64_t v4 = (v4 + v13 + v14 + 1);
LABEL_27:
  *(_DWORD *)(a1 + 28) = v4;
  return v4;
}

void sub_1008D9888(uint64_t a1, void *lpsrc)
{
  sub_1008D9094(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008D9910()
{
  return 1;
}

void *sub_1008D9918@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.CellInfo");
}

void sub_1008D9928(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      uint64_t v5 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(void *)(a1 + 8) = v5;
      int v4 = *(_DWORD *)(a2 + 36);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_11;
      }
    }
    else if ((*(unsigned char *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v6 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(_DWORD *)(a1 + 16) = v6;
    int v4 = *(_DWORD *)(a2 + 36);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_12;
    }
LABEL_11:
    int v7 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 36) |= 4u;
    *(_DWORD *)(a1 + 20) = v7;
    if ((*(_DWORD *)(a2 + 36) & 8) == 0) {
      return;
    }
LABEL_12:
    *(_DWORD *)(a1 + 36) |= 8u;
    uint64_t v8 = *(void *)(a1 + 24);
    if (!v8) {
      operator new();
    }
    uint64_t v9 = *(void *)(a2 + 24);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_10248A508 + 24);
    }
    sub_1008D9094(v8, v9);
  }
}

void sub_1008D9A74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008D9A8C(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022D0E70;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_10248A508 != this)
  {
    uint64_t v2 = *((void *)this + 3);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008D9B1C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008D9A8C(a1);

  operator delete();
}

void sub_1008D9B54()
{
}

uint64_t sub_1008D9BA8(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(unsigned char *)(result + 36);
  if (v2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    if ((v2 & 8) != 0)
    {
      uint64_t result = *(void *)(result + 24);
      if (result) {
        uint64_t result = sub_1008D9310(result);
      }
    }
  }
  *(_DWORD *)(v1 + 36) = 0;
  return result;
}

uint64_t sub_1008D9BE8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)(a1 + 8);
  int v6 = (unsigned int *)(a1 + 16);
  int v7 = (unsigned int *)(a1 + 20);
  while (2)
  {
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unsigned int v12 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v13 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v5 = *v12;
          int v13 = v12 + 1;
          *((void *)this + 1) = v13;
        }
        *(_DWORD *)(a1 + 36) |= 1u;
        if ((unint64_t)v13 < v11 && *v13 == 16)
        {
          int v14 = v13 + 1;
          *((void *)this + 1) = v14;
          goto LABEL_27;
        }
        continue;
      case 2u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
LABEL_27:
        if ((unint64_t)v14 >= v11 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v14;
          int v18 = v14 + 1;
          *((void *)this + 1) = v18;
        }
        *(_DWORD *)(a1 + 36) |= 2u;
        if ((unint64_t)v18 >= v11 || *v18 != 24) {
          continue;
        }
        int v15 = v18 + 1;
        *((void *)this + 1) = v15;
LABEL_35:
        if ((unint64_t)v15 >= v11 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          BOOL v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          *int v7 = *v15;
          BOOL v19 = v15 + 1;
          *((void *)this + 1) = v19;
        }
        int v16 = *(_DWORD *)(a1 + 36) | 4;
        *(_DWORD *)(a1 + 36) = v16;
        if ((unint64_t)v19 >= v11 || *v19 != 34) {
          continue;
        }
        *((void *)this + 1) = v19 + 1;
LABEL_43:
        *(_DWORD *)(a1 + 36) = v16 | 8;
        uint64_t v20 = *(void *)(a1 + 24);
        if (!v20) {
          operator new();
        }
        unsigned int v29 = 0;
        unsigned int v21 = (char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v29))return 0; {
        }
          }
        else
        {
          unsigned int v29 = *v21;
          *((void *)this + 1) = v21 + 1;
        }
        int v22 = *((_DWORD *)this + 14);
        int v23 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v22 + 1;
        if (v22 < v23)
        {
          int v24 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v29);
          if (sub_1008D9348(v20, this, v25))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v24);
              int v26 = *((_DWORD *)this + 14);
              BOOL v27 = __OFSUB__(v26, 1);
              int v28 = v26 - 1;
              if (v28 < 0 == v27) {
                *((_DWORD *)this + 14) = v28;
              }
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_35;
      case 4u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_19;
        }
        int v16 = *(_DWORD *)(a1 + 36);
        goto LABEL_43;
      default:
        int v10 = TagFallback & 7;
LABEL_19:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1008D9F60(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), (unint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 20), a2, a4);
      if ((*(_DWORD *)(v5 + 36) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 16), a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  uint64_t v7 = *(void *)(v5 + 24);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248A508 + 24);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
}

uint64_t sub_1008DA018(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_24;
  }
  if (*(unsigned char *)(a1 + 36))
  {
    uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8), a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 36);
    if ((v3 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 36) & 2) == 0) {
      goto LABEL_11;
    }
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
  if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 36);
  }
  else
  {
    int v6 = 2;
  }
  uint64_t v4 = (v6 + v4);
LABEL_11:
  if ((v3 & 4) != 0)
  {
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      int v8 = 2;
    }
    uint64_t v4 = (v8 + v4);
    if ((v3 & 8) == 0) {
      goto LABEL_24;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_24;
  }
  uint64_t v9 = *(void *)(a1 + 24);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_10248A508 + 24);
  }
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D9778(v9, a2);
  int v12 = (int)v10;
  if (v10 >= 0x80) {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, v11);
  }
  else {
    int v13 = 1;
  }
  uint64_t v4 = (v4 + v12 + v13 + 1);
LABEL_24:
  *(_DWORD *)(a1 + 32) = v4;
  return v4;
}

void sub_1008DA114(uint64_t a1, void *lpsrc)
{
  sub_1008D9928(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008DA19C()
{
  return 1;
}

void *sub_1008DA1A4@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.UtranGanssTimeMeasured");
}

void sub_1008DA1B4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      int v5 = *(_DWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 28) |= 1u;
      *(_DWORD *)(a1 + 8) = v5;
      int v4 = *(_DWORD *)(a2 + 28);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_10;
      }
    }
    else if ((*(unsigned char *)(a2 + 28) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v6 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 28) |= 2u;
    *(_DWORD *)(a1 + 12) = v6;
    if ((*(_DWORD *)(a2 + 28) & 4) == 0) {
      return;
    }
LABEL_10:
    *(_DWORD *)(a1 + 28) |= 4u;
    uint64_t v7 = *(void *)(a1 + 16);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = *(void *)(a2 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_10248A510 + 16);
    }
    sub_1008D9094(v7, v8);
  }
}

void sub_1008DA2E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008DA2F8(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022D0EE8;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_10248A510 != this)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008DA388(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008DA2F8(a1);

  operator delete();
}

void sub_1008DA3C0()
{
}

uint64_t sub_1008DA40C(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(unsigned char *)(result + 28);
  if (v2)
  {
    *(void *)(result + 8) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t result = *(void *)(result + 16);
      if (result) {
        uint64_t result = sub_1008D9310(result);
      }
    }
  }
  *(_DWORD *)(v1 + 28) = 0;
  return result;
}

uint64_t sub_1008DA44C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 8);
  int v6 = (unsigned int *)(a1 + 12);
  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          uint64_t v7 = (char *)*((void *)this + 1);
          if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v7;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v7 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v9 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v10 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_19;
          }
          int v13 = (char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          if ((unint64_t)v13 >= v12 || *v13 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
            if (!result) {
              return result;
            }
            int v14 = (unsigned char *)*((void *)this + 1);
            unint64_t v12 = *((void *)this + 2);
          }
          else
          {
            *int v5 = *v13;
            int v14 = v13 + 1;
            *((void *)this + 1) = v14;
          }
          *(_DWORD *)(a1 + 28) |= 1u;
          if ((unint64_t)v14 < v12 && *v14 == 16)
          {
            int v15 = v14 + 1;
            *((void *)this + 1) = v15;
            goto LABEL_27;
          }
        }
        if (v9 == 2) {
          break;
        }
        if (v9 == 3)
        {
          int v10 = TagFallback & 7;
          if (v10 == 2)
          {
            int v11 = *(_DWORD *)(a1 + 28);
            goto LABEL_35;
          }
        }
        else
        {
          int v10 = TagFallback & 7;
        }
LABEL_19:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
      }
        }
      int v10 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_19;
      }
      int v15 = (char *)*((void *)this + 1);
      unint64_t v12 = *((void *)this + 2);
LABEL_27:
      if ((unint64_t)v15 >= v12 || *v15 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
        if (!result) {
          return result;
        }
        int v17 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
      }
      else
      {
        *int v6 = *v15;
        int v17 = v15 + 1;
        *((void *)this + 1) = v17;
      }
      int v11 = *(_DWORD *)(a1 + 28) | 2;
      *(_DWORD *)(a1 + 28) = v11;
    }
    while ((unint64_t)v17 >= v12 || *v17 != 26);
    *((void *)this + 1) = v17 + 1;
LABEL_35:
    *(_DWORD *)(a1 + 28) = v11 | 4;
    uint64_t v18 = *(void *)(a1 + 16);
    if (!v18) {
      operator new();
    }
    unsigned int v27 = 0;
    BOOL v19 = (char *)*((void *)this + 1);
    if ((unint64_t)v19 >= *((void *)this + 2) || *v19 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27)) {
        return 0;
      }
    }
    else
    {
      unsigned int v27 = *v19;
      *((void *)this + 1) = v19 + 1;
    }
    int v20 = *((_DWORD *)this + 14);
    int v21 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v20 + 1;
    if (v20 >= v21) {
      return 0;
    }
    int v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27);
    if (!sub_1008D9348(v18, this, v23) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v22);
    int v24 = *((_DWORD *)this + 14);
    BOOL v25 = __OFSUB__(v24, 1);
    int v26 = v24 - 1;
    if (v26 < 0 == v25) {
      *((_DWORD *)this + 14) = v26;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_1008DA720(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
    if ((*(_DWORD *)(v5 + 28) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
  int v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248A510 + 16);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t sub_1008DA7BC(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 28);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_21;
  }
  if (*(unsigned char *)(a1 + 28))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 28);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 28) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 28);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    uint64_t v8 = *(void *)(a1 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_10248A510 + 16);
    }
    unsigned int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D9778(v8, a2);
    int v11 = (int)v9;
    if (v9 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, v10);
    }
    else {
      int v12 = 1;
    }
    uint64_t v4 = (v4 + v11 + v12 + 1);
  }
LABEL_21:
  *(_DWORD *)(a1 + 24) = v4;
  return v4;
}

void sub_1008DA89C(uint64_t a1, void *lpsrc)
{
  sub_1008DA1B4(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008DA924()
{
  return 1;
}

void *sub_1008DA92C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.GeranGanssTimeMeasured");
}

void sub_1008DA93C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  int v4 = *(_DWORD *)(a2 + 60);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    int v7 = *(_DWORD *)(a2 + 8);
    *(_DWORD *)(a1 + 60) |= 1u;
    *(_DWORD *)(a1 + 8) = v7;
    int v4 = *(_DWORD *)(a2 + 60);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_21;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v8 = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 60) |= 2u;
  *(_DWORD *)(a1 + 12) = v8;
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  int v9 = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 60) |= 4u;
  *(_DWORD *)(a1 + 16) = v9;
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v10 = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 60) |= 8u;
  *(_DWORD *)(a1 + 20) = v10;
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_28:
    int v13 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 60) |= 0x20u;
    *(_DWORD *)(a1 + 32) = v13;
    int v4 = *(_DWORD *)(a2 + 60);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_23:
  *(_DWORD *)(a1 + 60) |= 0x10u;
  int v11 = *(_DWORD **)(a1 + 24);
  if (!v11) {
    operator new();
  }
  uint64_t v12 = *(void *)(a2 + 24);
  if (!v12) {
    uint64_t v12 = *(void *)(qword_10248A518 + 24);
  }
  sub_1008D3D64(v11, v12);
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_29:
  int v14 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 60) |= 0x40u;
  *(_DWORD *)(a1 + 36) = v14;
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *(_DWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 60) |= 0x80u;
    *(_DWORD *)(a1 + 40) = v5;
    int v4 = *(_DWORD *)(a2 + 60);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    int v15 = *(_DWORD *)(a2 + 44);
    *(_DWORD *)(a1 + 60) |= 0x100u;
    *(_DWORD *)(a1 + 44) = v15;
    int v4 = *(_DWORD *)(a2 + 60);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        return;
      }
      goto LABEL_17;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  int v16 = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 60) |= 0x200u;
  *(_DWORD *)(a1 + 48) = v16;
  if ((*(_DWORD *)(a2 + 60) & 0x400) == 0) {
    return;
  }
LABEL_17:
  int v6 = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 60) |= 0x400u;
  *(_DWORD *)(a1 + 52) = v6;
}

void sub_1008DAB74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008DAB8C(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022D0F60;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_10248A518 != this)
  {
    uint64_t v2 = *((void *)this + 3);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008DAC1C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008DAB8C(a1);

  operator delete();
}

void sub_1008DAC54()
{
}

uint64_t sub_1008DACB0(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 60);
  if ((_BYTE)v1)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    if ((v1 & 0x10) != 0)
    {
      uint64_t v2 = *(void *)(result + 24);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 24))
        {
          *(void *)(v2 + 8) = 0;
          *(_DWORD *)(v2 + 16) = 0;
        }
        *(_DWORD *)(v2 + 24) = 0;
        int v1 = *(_DWORD *)(result + 60);
      }
    }
    *(void *)(result + 32) = 0;
    *(_DWORD *)(result + 40) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(result + 48) = 0;
    *(_DWORD *)(result + 44) = 0;
  }
  *(_DWORD *)(result + 60) = 0;
  return result;
}

uint64_t sub_1008DAD04(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int v57 = (unsigned int *)(a1 + 8);
  int v5 = (unsigned int *)(a1 + 12);
  int v6 = (unsigned int *)(a1 + 16);
  int v7 = (unsigned int *)(a1 + 20);
  int v8 = (unsigned int *)(a1 + 32);
  int v9 = (unsigned int *)(a1 + 36);
  int v10 = (unsigned int *)(a1 + 40);
  int v11 = (unsigned int *)(a1 + 48);
  uint64_t v12 = (unsigned int *)(a1 + 52);
  while (2)
  {
    int v13 = (char *)*((void *)this + 1);
    if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v13;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v13 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v57);
          if (!result) {
            return result;
          }
          uint64_t v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *unsigned int v57 = *v17;
          uint64_t v18 = v17 + 1;
          *((void *)this + 1) = v18;
        }
        *(_DWORD *)(a1 + 60) |= 1u;
        if ((unint64_t)v18 < v16 && *v18 == 16)
        {
          BOOL v19 = v18 + 1;
          *((void *)this + 1) = v19;
          goto LABEL_41;
        }
        continue;
      case 2u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        BOOL v19 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
LABEL_41:
        if ((unint64_t)v19 >= v16 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v35 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v5 = *v19;
          int v35 = v19 + 1;
          *((void *)this + 1) = v35;
        }
        *(_DWORD *)(a1 + 60) |= 2u;
        if ((unint64_t)v35 >= v16 || *v35 != 24) {
          continue;
        }
        int v20 = v35 + 1;
        *((void *)this + 1) = v20;
LABEL_49:
        if ((unint64_t)v20 >= v16 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          unsigned int v36 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v20;
          unsigned int v36 = v20 + 1;
          *((void *)this + 1) = v36;
        }
        *(_DWORD *)(a1 + 60) |= 4u;
        if ((unint64_t)v36 >= v16 || *v36 != 32) {
          continue;
        }
        int v21 = v36 + 1;
        *((void *)this + 1) = v21;
LABEL_57:
        if ((unint64_t)v21 >= v16 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          unsigned int v37 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v7 = *v21;
          unsigned int v37 = v21 + 1;
          *((void *)this + 1) = v37;
        }
        int v26 = *(_DWORD *)(a1 + 60) | 8;
        *(_DWORD *)(a1 + 60) = v26;
        if ((unint64_t)v37 >= v16 || *v37 != 42) {
          continue;
        }
        int v58 = v12;
        int v59 = v11;
        int v22 = v8;
        unsigned int v23 = v10;
        int v24 = v7;
        BOOL v25 = v5;
        *((void *)this + 1) = v37 + 1;
LABEL_65:
        unsigned int v38 = v9;
        *(_DWORD *)(a1 + 60) = v26 | 0x10;
        unsigned int v39 = *(unsigned int **)(a1 + 24);
        if (!v39) {
          operator new();
        }
        unsigned int v40 = v6;
        unsigned int v61 = 0;
        uint64_t v41 = (char *)*((void *)this + 1);
        if ((unint64_t)v41 >= *((void *)this + 2) || *v41 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v61))return 0; {
        }
          }
        else
        {
          unsigned int v61 = *v41;
          *((void *)this + 1) = v41 + 1;
        }
        int v42 = *((_DWORD *)this + 14);
        int v43 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v42 + 1;
        if (v42 < v43)
        {
          int v44 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v61);
          if (sub_1008D3F2C(v39, this, v45))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v44);
              int v46 = *((_DWORD *)this + 14);
              BOOL v47 = __OFSUB__(v46, 1);
              int v48 = v46 - 1;
              if (v48 < 0 == v47) {
                *((_DWORD *)this + 14) = v48;
              }
              BOOL v49 = (unsigned char *)*((void *)this + 1);
              unint64_t v27 = *((void *)this + 2);
              int v5 = v25;
              int v6 = v40;
              int v7 = v24;
              int v9 = v38;
              int v10 = v23;
              int v8 = v22;
              uint64_t v12 = v58;
              int v11 = v59;
              if ((unint64_t)v49 < v27 && *v49 == 48)
              {
                int v28 = v49 + 1;
                *((void *)this + 1) = v28;
LABEL_79:
                if ((unint64_t)v28 >= v27 || *v28 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
                  if (!result) {
                    return result;
                  }
                  int v50 = (unsigned char *)*((void *)this + 1);
                  unint64_t v27 = *((void *)this + 2);
                }
                else
                {
                  *int v8 = *v28;
                  int v50 = v28 + 1;
                  *((void *)this + 1) = v50;
                }
                *(_DWORD *)(a1 + 60) |= 0x20u;
                if ((unint64_t)v50 < v27 && *v50 == 56)
                {
                  unsigned int v29 = v50 + 1;
                  *((void *)this + 1) = v29;
LABEL_87:
                  if ((unint64_t)v29 >= v27 || *v29 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
                    if (!result) {
                      return result;
                    }
                    unsigned int v51 = (unsigned char *)*((void *)this + 1);
                    unint64_t v27 = *((void *)this + 2);
                  }
                  else
                  {
                    *int v9 = *v29;
                    unsigned int v51 = v29 + 1;
                    *((void *)this + 1) = v51;
                  }
                  *(_DWORD *)(a1 + 60) |= 0x40u;
                  if ((unint64_t)v51 < v27 && *v51 == 64)
                  {
                    int v30 = v51 + 1;
                    *((void *)this + 1) = v30;
LABEL_95:
                    if ((unint64_t)v30 >= v27 || *v30 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
                      if (!result) {
                        return result;
                      }
                      uint64_t v52 = (unsigned char *)*((void *)this + 1);
                      unint64_t v27 = *((void *)this + 2);
                    }
                    else
                    {
                      *int v10 = *v30;
                      uint64_t v52 = v30 + 1;
                      *((void *)this + 1) = v52;
                    }
                    *(_DWORD *)(a1 + 60) |= 0x80u;
                    if ((unint64_t)v52 < v27 && *v52 == 72)
                    {
                      int v31 = v52 + 1;
                      *((void *)this + 1) = v31;
LABEL_103:
                      unsigned int v60 = 0;
                      if ((unint64_t)v31 >= v27 || *v31 < 0)
                      {
                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v60);
                        if (!result) {
                          return result;
                        }
                        unsigned int v53 = v60;
                        int v54 = (unsigned char *)*((void *)this + 1);
                        unint64_t v27 = *((void *)this + 2);
                      }
                      else
                      {
                        unsigned int v53 = *v31;
                        int v54 = v31 + 1;
                        *((void *)this + 1) = v54;
                      }
                      *(_DWORD *)(a1 + 44) = v53;
                      *(_DWORD *)(a1 + 60) |= 0x100u;
                      if ((unint64_t)v54 < v27 && *v54 == 80)
                      {
                        unsigned int v32 = v54 + 1;
                        *((void *)this + 1) = v32;
LABEL_111:
                        if ((unint64_t)v32 >= v27 || *v32 < 0)
                        {
                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
                          if (!result) {
                            return result;
                          }
                          int v55 = (unsigned char *)*((void *)this + 1);
                          unint64_t v27 = *((void *)this + 2);
                        }
                        else
                        {
                          *int v11 = *v32;
                          int v55 = v32 + 1;
                          *((void *)this + 1) = v55;
                        }
                        *(_DWORD *)(a1 + 60) |= 0x200u;
                        if ((unint64_t)v55 < v27 && *v55 == 88)
                        {
                          int v33 = v55 + 1;
                          *((void *)this + 1) = v33;
LABEL_119:
                          if ((unint64_t)v33 >= v27 || *v33 < 0)
                          {
                            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v12);
                            if (!result) {
                              return result;
                            }
                            int v56 = (unsigned __int8 *)*((void *)this + 1);
                            unint64_t v27 = *((void *)this + 2);
                          }
                          else
                          {
                            *uint64_t v12 = *v33;
                            int v56 = (unsigned __int8 *)(v33 + 1);
                            *((void *)this + 1) = v56;
                          }
                          *(_DWORD *)(a1 + 60) |= 0x400u;
                          if (v56 == (unsigned __int8 *)v27
                            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                          {
                            *((_DWORD *)this + 8) = 0;
                            uint64_t result = 1;
                            *((unsigned char *)this + 36) = 1;
                            return result;
                          }
                        }
                      }
                    }
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_49;
      case 4u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v21 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_57;
      case 5u:
        int v15 = TagFallback & 7;
        if (v15 != 2) {
          goto LABEL_32;
        }
        int v58 = v12;
        int v59 = v11;
        int v22 = v8;
        unsigned int v23 = v10;
        int v24 = v7;
        BOOL v25 = v5;
        int v26 = *(_DWORD *)(a1 + 60);
        goto LABEL_65;
      case 6u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v28 = (char *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        goto LABEL_79;
      case 7u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        unsigned int v29 = (char *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        goto LABEL_87;
      case 8u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v30 = (char *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        goto LABEL_95;
      case 9u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v31 = (char *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        goto LABEL_103;
      case 0xAu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        unsigned int v32 = (char *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        goto LABEL_111;
      case 0xBu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v33 = (char *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        goto LABEL_119;
      default:
        int v15 = TagFallback & 7;
LABEL_32:
        if (v15 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1008DB424(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 60);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 16), a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 20), a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_17:
  uint64_t v7 = *(void *)(v5 + 24);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248A518 + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 32), a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 36), a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(v5 + 40), a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_DWORD *)(v5 + 48), a2, a4);
    if ((*(_DWORD *)(v5 + 60) & 0x400) == 0) {
      return result;
    }
    goto LABEL_25;
  }
LABEL_23:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_DWORD *)(v5 + 44), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x200) != 0) {
    goto LABEL_24;
  }
LABEL_11:
  if ((v6 & 0x400) == 0) {
    return result;
  }
LABEL_25:
  int v8 = *(_DWORD *)(v5 + 52);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v8, a2, a4);
}

uint64_t sub_1008DB5A0(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 60);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_47;
  }
  if ((v3 & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_10;
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
  if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    int v3 = *(_DWORD *)(a1 + 60);
  }
  else
  {
    int v6 = 1;
  }
  uint64_t v4 = (v6 + 1);
  if ((v3 & 2) != 0)
  {
LABEL_10:
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      int v3 = *(_DWORD *)(a1 + 60);
    }
    else
    {
      int v8 = 1;
    }
    uint64_t v4 = (v4 + v8 + 1);
  }
LABEL_14:
  if ((v3 & 4) != 0)
  {
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
      int v3 = *(_DWORD *)(a1 + 60);
    }
    else
    {
      int v10 = 1;
    }
    uint64_t v4 = (v4 + v10 + 1);
    if ((v3 & 8) == 0)
    {
LABEL_16:
      if ((v3 & 0x10) == 0) {
        goto LABEL_17;
      }
      goto LABEL_29;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    int v3 = *(_DWORD *)(a1 + 60);
  }
  else
  {
    int v12 = 1;
  }
  uint64_t v4 = (v4 + v12 + 1);
  if ((v3 & 0x10) == 0)
  {
LABEL_17:
    if ((v3 & 0x20) == 0) {
      goto LABEL_18;
    }
    goto LABEL_35;
  }
LABEL_29:
  uint64_t v13 = *(void *)(a1 + 24);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_10248A518 + 24);
  }
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D41DC(v13, a2);
  int v15 = (int)v14;
  if (v14 >= 0x80) {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
  }
  else {
    int v16 = 1;
  }
  uint64_t v4 = (v4 + v15 + v16 + 1);
  int v3 = *(_DWORD *)(a1 + 60);
  if ((v3 & 0x20) == 0)
  {
LABEL_18:
    if ((v3 & 0x40) == 0) {
      goto LABEL_19;
    }
    goto LABEL_39;
  }
LABEL_35:
  int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
  if (v17 >= 0x80)
  {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 60);
  }
  else
  {
    int v18 = 2;
  }
  uint64_t v4 = (v18 + v4);
  if ((v3 & 0x40) == 0)
  {
LABEL_19:
    if ((v3 & 0x80) == 0) {
      goto LABEL_47;
    }
    goto LABEL_43;
  }
LABEL_39:
  BOOL v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
  if (v19 >= 0x80)
  {
    int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 60);
  }
  else
  {
    int v20 = 2;
  }
  uint64_t v4 = (v20 + v4);
  if ((v3 & 0x80) != 0)
  {
LABEL_43:
    int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
    if (v21 >= 0x80)
    {
      int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 60);
    }
    else
    {
      int v22 = 2;
    }
    uint64_t v4 = (v22 + v4);
  }
LABEL_47:
  if ((v3 & 0xFF00) == 0) {
    goto LABEL_66;
  }
  if ((v3 & 0x100) != 0)
  {
    unsigned int v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
    if ((v23 & 0x80000000) != 0)
    {
      int v24 = 11;
    }
    else if (v23 >= 0x80)
    {
      int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 60);
    }
    else
    {
      int v24 = 2;
    }
    uint64_t v4 = (v24 + v4);
    if ((v3 & 0x200) == 0)
    {
LABEL_50:
      if ((v3 & 0x400) == 0) {
        goto LABEL_66;
      }
      goto LABEL_62;
    }
  }
  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_50;
  }
  BOOL v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
  if (v25 >= 0x80)
  {
    int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 60);
  }
  else
  {
    int v26 = 2;
  }
  uint64_t v4 = (v26 + v4);
  if ((v3 & 0x400) != 0)
  {
LABEL_62:
    unint64_t v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
    if (v27 >= 0x80) {
      int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2) + 1;
    }
    else {
      int v28 = 2;
    }
    uint64_t v4 = (v28 + v4);
  }
LABEL_66:
  *(_DWORD *)(a1 + 56) = v4;
  return v4;
}

void sub_1008DB7F8(uint64_t a1, void *lpsrc)
{
  sub_1008DA93C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008DB880()
{
  return 1;
}

void *sub_1008DB888@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.ClsEutranCell");
}

void sub_1008DB898(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      *(_DWORD *)(a1 + 36) |= 1u;
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_10248A520 + 8);
      }
      sub_1008D9928(v5, v6);
      int v4 = *(_DWORD *)(a2 + 36);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_18;
      }
    }
    else if ((*(unsigned char *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    *(_DWORD *)(a1 + 36) |= 2u;
    uint64_t v7 = *(void *)(a1 + 16);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = *(void *)(a2 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_10248A520 + 16);
    }
    sub_1008DA1B4(v7, v8);
    if ((*(_DWORD *)(a2 + 36) & 4) != 0)
    {
LABEL_18:
      *(_DWORD *)(a1 + 36) |= 4u;
      uint64_t v9 = *(void *)(a1 + 24);
      if (!v9) {
        operator new();
      }
      uint64_t v10 = *(void *)(a2 + 24);
      if (!v10) {
        uint64_t v10 = *(void *)(qword_10248A520 + 24);
      }
      sub_1008DA93C(v9, v10);
    }
  }
}

void sub_1008DBA80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1008DBA98(void *result)
{
  if ((void *)qword_10248A520 != result)
  {
    int v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t result = (void *)v1[3];
    if (result)
    {
      int v4 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v4();
    }
  }
  return result;
}

void sub_1008DBB64(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D0FD8;
  sub_1008DBA98(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008DBBB8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D0FD8;
  sub_1008DBA98(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008DBC20()
{
}

uint64_t sub_1008DBC74(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(unsigned char *)(result + 36);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(result + 36))
    {
      uint64_t result = *(void *)(result + 8);
      if (result)
      {
        uint64_t result = sub_1008D9BA8(result);
        int v2 = *(_DWORD *)(v1 + 36);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t result = *(void *)(v1 + 16);
      if (result)
      {
        uint64_t result = sub_1008DA40C(result);
        int v2 = *(_DWORD *)(v1 + 36);
      }
    }
    if ((v2 & 4) != 0)
    {
      uint64_t result = *(void *)(v1 + 24);
      if (result) {
        uint64_t result = sub_1008DACB0(result);
      }
    }
  }
  *(_DWORD *)(v1 + 36) = 0;
  return result;
}

uint64_t sub_1008DBCD8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = (char *)*((void *)this + 1);
          if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v5;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v5 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v8 = TagFallback & 7;
          if (v8 != 2) {
            goto LABEL_20;
          }
          *(_DWORD *)(a1 + 36) |= 1u;
          uint64_t v9 = *(void *)(a1 + 8);
          if (!v9) {
            operator new();
          }
          unsigned int v37 = 0;
          uint64_t v10 = (char *)*((void *)this + 1);
          if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v37))return 0; {
          }
            }
          else
          {
            unsigned int v37 = *v10;
            *((void *)this + 1) = v10 + 1;
          }
          int v11 = *((_DWORD *)this + 14);
          int v12 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v11 + 1;
          if (v11 >= v12) {
            return 0;
          }
          int v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v37);
          if (!sub_1008D9BE8(v9, this, v14) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
          int v15 = *((_DWORD *)this + 14);
          BOOL v16 = __OFSUB__(v15, 1);
          int v17 = v15 - 1;
          if (v17 < 0 == v16) {
            *((_DWORD *)this + 14) = v17;
          }
          int v18 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v18 < *((void *)this + 2) && *v18 == 18)
          {
            *((void *)this + 1) = v18 + 1;
            goto LABEL_32;
          }
        }
        if (v7 != 2) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_20;
        }
LABEL_32:
        *(_DWORD *)(a1 + 36) |= 2u;
        uint64_t v19 = *(void *)(a1 + 16);
        if (!v19) {
          operator new();
        }
        unsigned int v38 = 0;
        int v20 = (char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v38))return 0; {
        }
          }
        else
        {
          unsigned int v38 = *v20;
          *((void *)this + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)this + 14);
        int v22 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v21 + 1;
        if (v21 >= v22) {
          return 0;
        }
        int v23 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v38);
        if (!sub_1008DA44C(v19, this, v24) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v23);
        int v25 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v25, 1);
        int v26 = v25 - 1;
        if (v26 < 0 == v16) {
          *((_DWORD *)this + 14) = v26;
        }
        unint64_t v27 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v27 < *((void *)this + 2) && *v27 == 26)
        {
          *((void *)this + 1) = v27 + 1;
          goto LABEL_46;
        }
      }
      if (v7 != 3) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_20;
      }
LABEL_46:
      *(_DWORD *)(a1 + 36) |= 4u;
      uint64_t v28 = *(void *)(a1 + 24);
      if (!v28) {
        operator new();
      }
      unsigned int v39 = 0;
      unsigned int v29 = (char *)*((void *)this + 1);
      if ((unint64_t)v29 >= *((void *)this + 2) || *v29 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v39))return 0; {
      }
        }
      else
      {
        unsigned int v39 = *v29;
        *((void *)this + 1) = v29 + 1;
      }
      int v30 = *((_DWORD *)this + 14);
      int v31 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v30 + 1;
      if (v30 >= v31) {
        return 0;
      }
      int v32 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v39);
      if (!sub_1008DAD04(v28, this, v33) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v32);
      int v34 = *((_DWORD *)this + 14);
      BOOL v16 = __OFSUB__(v34, 1);
      int v35 = v34 - 1;
      if (v35 < 0 == v16) {
        *((_DWORD *)this + 14) = v35;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v8 = TagFallback & 7;
LABEL_20:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1008DC100(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_10248A520 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        return result;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_10248A520 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  if ((*(_DWORD *)(v5 + 36) & 4) != 0)
  {
LABEL_11:
    uint64_t v9 = *(void *)(v5 + 24);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_10248A520 + 24);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  }
  return result;
}

uint64_t sub_1008DC1BC(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_25;
  }
  if (*(unsigned char *)(a1 + 36))
  {
    uint64_t v5 = *(void *)(a1 + 8);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_10248A520 + 8);
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DA018(v5, a2);
    int v7 = (int)v6;
    if (v6 >= 0x80) {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
    }
    else {
      int v8 = 1;
    }
    uint64_t v4 = (v7 + v8 + 1);
    int v3 = *(_DWORD *)(a1 + 36);
    if ((v3 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v4 = 0;
  if ((*(unsigned char *)(a1 + 36) & 2) != 0)
  {
LABEL_12:
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_10248A520 + 16);
    }
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DA7BC(v9, a2);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    }
    else {
      int v12 = 1;
    }
    uint64_t v4 = (v4 + v11 + v12 + 1);
    int v3 = *(_DWORD *)(a1 + 36);
  }
LABEL_18:
  if ((v3 & 4) != 0)
  {
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13) {
      uint64_t v13 = *(void *)(qword_10248A520 + 24);
    }
    unsigned int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DB5A0(v13, a2);
    int v16 = (int)v14;
    if (v14 >= 0x80) {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, v15);
    }
    else {
      int v17 = 1;
    }
    uint64_t v4 = (v4 + v16 + v17 + 1);
  }
LABEL_25:
  *(_DWORD *)(a1 + 32) = v4;
  return v4;
}

void sub_1008DC2D8(uint64_t a1, void *lpsrc)
{
  sub_1008DB898(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008DC360()
{
  return 1;
}

void *sub_1008DC368@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.GanssTimeMeasured");
}

void sub_1008DC378(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      unsigned int v5 = *(_DWORD *)(a2 + 16);
      if (v5 >= 6) {
        sub_101A7354C();
      }
      *(_DWORD *)(a1 + 24) |= 1u;
      *(_DWORD *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 24) |= 2u;
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_10248A528 + 8);
      }
      sub_1008DB898(v6, v7);
    }
  }
}

void sub_1008DC48C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008DC4A4(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022D1050;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_10248A528 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008DC534(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008DC4A4(a1);

  operator delete();
}

void sub_1008DC56C()
{
}

uint64_t sub_1008DC5BC(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(unsigned char *)(result + 24);
  if (v2)
  {
    *(_DWORD *)(result + 16) = 0;
    if ((v2 & 2) != 0)
    {
      uint64_t result = *(void *)(result + 8);
      if (result) {
        uint64_t result = sub_1008DBC74(result);
      }
    }
  }
  *(_DWORD *)(v1 + 24) = 0;
  return result;
}

uint64_t sub_1008DC5FC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        unsigned int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_15;
        }
        unsigned int v21 = 0;
        int v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
          if (!result) {
            return result;
          }
          unsigned int v9 = v21;
        }
        else
        {
          unsigned int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
        }
        if (v9 <= 5)
        {
          *(_DWORD *)(a1 + 24) |= 1u;
          *(_DWORD *)(a1 + 16) = v9;
        }
        int v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 18)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_25;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        int v7 = TagFallback & 7;
        goto LABEL_15;
      }
      int v7 = TagFallback & 7;
      if (v7 == 2) {
        break;
      }
LABEL_15:
      if (v7 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
LABEL_25:
    *(_DWORD *)(a1 + 24) |= 2u;
    uint64_t v12 = *(void *)(a1 + 8);
    if (!v12) {
      operator new();
    }
    unsigned int v22 = 0;
    uint64_t v13 = (char *)*((void *)this + 1);
    if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22)) {
        return 0;
      }
    }
    else
    {
      unsigned int v22 = *v13;
      *((void *)this + 1) = v13 + 1;
    }
    int v14 = *((_DWORD *)this + 14);
    int v15 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v14 + 1;
    if (v14 >= v15) {
      return 0;
    }
    int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v22);
    if (!sub_1008DBCD8(v12, this, v17) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
    int v18 = *((_DWORD *)this + 14);
    BOOL v19 = __OFSUB__(v18, 1);
    int v20 = v18 - 1;
    if (v20 < 0 == v19) {
      *((_DWORD *)this + 14) = v20;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_1008DC85C(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 24) & 2) == 0) {
      return result;
    }
  }
  else if ((v6 & 2) == 0)
  {
    return result;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248A528 + 8);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
}

uint64_t sub_1008DC8DC(uint64_t a1, unint64_t a2)
{
  char v3 = *(unsigned char *)(a1 + 24);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 24))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
      if ((v5 & 0x80000000) != 0)
      {
        uint64_t v4 = 11;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
      else if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 24) & 2) == 0) {
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
        goto LABEL_19;
      }
    }
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10248A528 + 8);
    }
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DC1BC(v6, a2);
    int v9 = (int)v7;
    if (v7 >= 0x80) {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, v8);
    }
    else {
      int v10 = 1;
    }
    uint64_t v4 = (v4 + v9 + v10 + 1);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_1008DC9A4(uint64_t a1, void *lpsrc)
{
  sub_1008DC378(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008DCA2C()
{
  return 1;
}

void *sub_1008DCA34@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.GanssTimeMeasuredParams");
}

void sub_1008DCA44(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if (!(_BYTE)v4) {
    return;
  }
  if (*(unsigned char *)(a2 + 36))
  {
    unsigned int v5 = *(_DWORD *)(a2 + 8);
    if (v5 >= 6) {
      sub_101A735A4();
    }
    a1[9] |= 1u;
    a1[2] = v5;
    int v4 = *(_DWORD *)(a2 + 36);
  }
  if ((v4 & 2) != 0)
  {
    int v7 = *(_DWORD *)(a2 + 12);
    a1[9] |= 2u;
    a1[3] = v7;
    int v4 = *(_DWORD *)(a2 + 36);
    if ((v4 & 4) == 0)
    {
LABEL_9:
      if ((v4 & 8) == 0) {
        goto LABEL_10;
      }
LABEL_16:
      int v9 = *(_DWORD *)(a2 + 20);
      a1[9] |= 8u;
      a1[5] = v9;
      int v4 = *(_DWORD *)(a2 + 36);
      if ((v4 & 0x10) == 0)
      {
LABEL_11:
        if ((v4 & 0x20) == 0) {
          return;
        }
        goto LABEL_12;
      }
      goto LABEL_17;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_9;
  }
  int v8 = *(_DWORD *)(a2 + 16);
  a1[9] |= 4u;
  a1[4] = v8;
  int v4 = *(_DWORD *)(a2 + 36);
  if ((v4 & 8) != 0) {
    goto LABEL_16;
  }
LABEL_10:
  if ((v4 & 0x10) == 0) {
    goto LABEL_11;
  }
LABEL_17:
  unsigned int v10 = *(_DWORD *)(a2 + 24);
  if (v10 >= 4) {
    sub_101A73578();
  }
  a1[9] |= 0x10u;
  a1[6] = v10;
  if ((*(_DWORD *)(a2 + 36) & 0x20) != 0)
  {
LABEL_12:
    int v6 = *(_DWORD *)(a2 + 28);
    a1[9] |= 0x20u;
    a1[7] = v6;
  }
}

void sub_1008DCB8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008DCBA4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D10C8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008DCBC4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D10C8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008DCC18()
{
}

uint64_t sub_1008DCC6C(uint64_t result)
{
  if (*(unsigned char *)(result + 36))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_1008DCC84(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int v5 = a1 + 3;
  int v6 = a1 + 4;
  int v7 = a1 + 5;
  int v8 = a1 + 7;
  while (2)
  {
    int v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v9;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v9 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        unsigned int v30 = 0;
        uint64_t v12 = (char *)*((void *)this + 1);
        if ((unint64_t)v12 < *((void *)this + 2) && (*v12 & 0x80000000) == 0)
        {
          unsigned int v13 = *v12;
          *((void *)this + 1) = v12 + 1;
          goto LABEL_28;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v30);
        if (result)
        {
          unsigned int v13 = v30;
LABEL_28:
          if (v13 <= 5)
          {
            a1[9] |= 1u;
            a1[2] = v13;
          }
          unsigned int v21 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
          if ((unint64_t)v21 < v14 && *v21 == 16)
          {
            int v15 = v21 + 1;
            *((void *)this + 1) = v15;
            goto LABEL_33;
          }
          continue;
        }
        break;
      case 2u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
LABEL_33:
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          unsigned int v22 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *unsigned int v5 = *v15;
          unsigned int v22 = v15 + 1;
          *((void *)this + 1) = v22;
        }
        a1[9] |= 2u;
        if ((unint64_t)v22 >= v14 || *v22 != 24) {
          continue;
        }
        int v16 = v22 + 1;
        *((void *)this + 1) = v16;
LABEL_41:
        if ((unint64_t)v16 >= v14 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v23 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v16;
          int v23 = v16 + 1;
          *((void *)this + 1) = v23;
        }
        a1[9] |= 4u;
        if ((unint64_t)v23 >= v14 || *v23 != 32) {
          continue;
        }
        unsigned int v17 = v23 + 1;
        *((void *)this + 1) = v17;
LABEL_49:
        if ((unint64_t)v17 >= v14 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          unsigned int v24 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *int v7 = *v17;
          unsigned int v24 = v17 + 1;
          *((void *)this + 1) = v24;
        }
        a1[9] |= 8u;
        if ((unint64_t)v24 >= v14 || *v24 != 40) {
          continue;
        }
        int v18 = v24 + 1;
        *((void *)this + 1) = v18;
LABEL_57:
        unsigned int v29 = 0;
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v29);
          if (!result) {
            return result;
          }
          unsigned int v25 = v29;
        }
        else
        {
          unsigned int v25 = *v18;
          *((void *)this + 1) = v18 + 1;
        }
        if (v25 <= 3)
        {
          a1[9] |= 0x10u;
          a1[6] = v25;
        }
        int v26 = (unsigned char *)*((void *)this + 1);
        unint64_t v19 = *((void *)this + 2);
        if ((unint64_t)v26 >= v19 || *v26 != 48) {
          continue;
        }
        int v20 = v26 + 1;
        *((void *)this + 1) = v20;
LABEL_67:
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          unint64_t v27 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v19 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v20;
          unint64_t v27 = (unsigned __int8 *)(v20 + 1);
          *((void *)this + 1) = v27;
        }
        a1[9] |= 0x20u;
        if (v27 != (unsigned __int8 *)v19 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_41;
      case 4u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        unsigned int v17 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_49;
      case 5u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_57;
      case 6u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v19 = *((void *)this + 2);
        goto LABEL_67;
      default:
        int v11 = TagFallback & 7;
LABEL_22:
        if (v11 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

int *sub_1008DD054(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int v5 = result;
  int v6 = result[9];
  if (v6)
  {
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    int v6 = v5[9];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  int v6 = v5[9];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  int v6 = v5[9];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_12:
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
    if ((v5[9] & 0x20) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_11:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  int v6 = v5[9];
  if ((v6 & 0x10) != 0) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v6 & 0x20) == 0) {
    return result;
  }
LABEL_13:
  int v7 = v5[7];

  return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v7, a2, a4);
}

uint64_t sub_1008DD134(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_40;
  }
  if (*(unsigned char *)(a1 + 36))
  {
    unsigned int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v5 & 0x80000000) != 0)
    {
      uint64_t v4 = 11;
      if ((v3 & 2) == 0) {
        goto LABEL_17;
      }
    }
    else if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 36);
      if ((v3 & 2) == 0) {
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_17;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 36) & 2) == 0) {
      goto LABEL_17;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 36);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_17:
  if ((v3 & 4) != 0)
  {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      int v9 = 2;
    }
    uint64_t v4 = (v9 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_19:
      if ((v3 & 0x10) == 0) {
        goto LABEL_20;
      }
      goto LABEL_30;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_19;
  }
  unsigned int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 36);
  }
  else
  {
    int v11 = 2;
  }
  uint64_t v4 = (v11 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_20:
    if ((v3 & 0x20) == 0) {
      goto LABEL_40;
    }
    goto LABEL_36;
  }
LABEL_30:
  uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if ((v12 & 0x80000000) != 0)
  {
    int v13 = 11;
  }
  else if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 36);
  }
  else
  {
    int v13 = 2;
  }
  uint64_t v4 = (v13 + v4);
  if ((v3 & 0x20) != 0)
  {
LABEL_36:
    unint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if (v14 >= 0x80) {
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2) + 1;
    }
    else {
      int v15 = 2;
    }
    uint64_t v4 = (v15 + v4);
  }
LABEL_40:
  *(_DWORD *)(a1 + 32) = v4;
  return v4;
}

void sub_1008DD290(_DWORD *a1, void *lpsrc)
{
  sub_1008DCA44(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008DD318()
{
  return 1;
}

void *sub_1008DD320@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.GanssLocationInfo");
}

void sub_1008DD330(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 20))
    {
      int v5 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v5;
      int v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v6;
    }
  }
}

void sub_1008DD3DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008DD3F4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D1140;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008DD414(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D1140;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008DD468()
{
}

uint64_t sub_1008DD4B4(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1008DD4C8(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_15;
      }
      unsigned int v17 = 0;
      unsigned int v10 = (char *)*((void *)this + 1);
      unint64_t v8 = *((void *)this + 2);
      if ((unint64_t)v10 >= v8 || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v17);
        if (!result) {
          return result;
        }
        unsigned int v11 = v17;
        uint64_t v12 = (unsigned char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
      }
      else
      {
        unsigned int v11 = *v10;
        uint64_t v12 = v10 + 1;
        *((void *)this + 1) = v12;
      }
      a1[2] = v11;
      a1[5] |= 1u;
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        int v9 = v12 + 1;
        *((void *)this + 1) = v9;
LABEL_23:
        unsigned int v16 = 0;
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v16);
          if (!result) {
            return result;
          }
          unsigned int v13 = v16;
          unint64_t v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v13 = *v9;
          unint64_t v14 = (unsigned __int8 *)(v9 + 1);
          *((void *)this + 1) = v14;
        }
        a1[3] = v13;
        a1[5] |= 2u;
        if (v14 == (unsigned __int8 *)v8 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_23;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_15:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1008DD670(uint64_t result, int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(_DWORD *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_1008DD6DC(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 20);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 20))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if ((v5 & 0x80000000) != 0)
      {
        uint64_t v4 = 11;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
      else if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0) {
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 20) & 2) == 0) {
        goto LABEL_19;
      }
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if ((v6 & 0x80000000) != 0)
    {
      int v7 = 11;
    }
    else if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    }
    else
    {
      int v7 = 2;
    }
    uint64_t v4 = (v7 + v4);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_19:
  *(_DWORD *)(a1 + 16) = v4;
  return v4;
}

void sub_1008DD788(_DWORD *a1, void *lpsrc)
{
  sub_1008DD330(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008DD810()
{
  return 1;
}

void *sub_1008DD818@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.EllipsoidPoint");
}

void sub_1008DD828(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      *(_DWORD *)(a1 + 24) |= 1u;
      uint64_t v5 = *(_DWORD **)(a1 + 8);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_10248A540 + 8);
      }
      sub_1008DD330(v5, v6);
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      int v7 = *(_DWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 24) |= 2u;
      *(_DWORD *)(a1 + 16) = v7;
    }
  }
}

void sub_1008DD928(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008DD940(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022D11B8;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_10248A540 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008DD9D0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008DD940(a1);

  operator delete();
}

void sub_1008DDA08()
{
}

uint64_t sub_1008DDA58(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    if (*(unsigned char *)(result + 24))
    {
      uint64_t v1 = *(void *)(result + 8);
      if (v1)
      {
        if (*(unsigned char *)(v1 + 20)) {
          *(void *)(v1 + 8) = 0;
        }
        *(_DWORD *)(v1 + 20) = 0;
      }
    }
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1008DDA88(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)(a1 + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v6;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v6 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 == 1) {
        break;
      }
      if (TagFallback >> 3 == 2)
      {
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) == 0)
        {
          unsigned int v10 = (char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
          goto LABEL_30;
        }
      }
      else
      {
        int v8 = TagFallback & 7;
      }
LABEL_18:
      if (v8 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
    int v8 = TagFallback & 7;
    if (v8 != 2) {
      goto LABEL_18;
    }
    *(_DWORD *)(a1 + 24) |= 1u;
    unsigned int v11 = *(_DWORD **)(a1 + 8);
    if (!v11) {
      operator new();
    }
    unsigned int v23 = 0;
    uint64_t v12 = (char *)*((void *)this + 1);
    if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23)) {
        return 0;
      }
    }
    else
    {
      unsigned int v23 = *v12;
      *((void *)this + 1) = v12 + 1;
    }
    int v13 = *((_DWORD *)this + 14);
    int v14 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v13 + 1;
    if (v13 >= v14) {
      return 0;
    }
    int v15 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v23);
    if (!sub_1008DD4C8(v11, this, v16) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v15);
    int v17 = *((_DWORD *)this + 14);
    BOOL v18 = __OFSUB__(v17, 1);
    int v19 = v17 - 1;
    if (v19 < 0 == v18) {
      *((_DWORD *)this + 14) = v19;
    }
    int v20 = (unsigned char *)*((void *)this + 1);
    unint64_t v9 = *((void *)this + 2);
    if ((unint64_t)v20 < v9 && *v20 == 16)
    {
      unsigned int v10 = v20 + 1;
      *((void *)this + 1) = v10;
LABEL_30:
      if ((unint64_t)v10 >= v9 || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!result) {
          return result;
        }
        unsigned int v21 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
      }
      else
      {
        *uint64_t v5 = *v10;
        unsigned int v21 = (unsigned __int8 *)(v10 + 1);
        *((void *)this + 1) = v21;
      }
      *(_DWORD *)(a1 + 24) |= 2u;
      if (v21 == (unsigned __int8 *)v9 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
  }
}

uint64_t sub_1008DDCDC(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(result + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248A540 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 24) & 2) != 0)
  {
LABEL_7:
    int v8 = *(_DWORD *)(v5 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  }
  return result;
}

uint64_t sub_1008DDD5C(uint64_t a1, unsigned int a2)
{
  if (!*(unsigned char *)(a1 + 24))
  {
    uint64_t v3 = 0;
    goto LABEL_16;
  }
  if ((*(unsigned char *)(a1 + 24) & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (!v4) {
    uint64_t v4 = *(void *)(qword_10248A540 + 8);
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DD6DC(v4, a2);
  int v6 = (int)v5;
  if (v5 >= 0x80) {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
  }
  else {
    int v7 = 1;
  }
  uint64_t v3 = (v6 + v7 + 1);
  if ((*(_DWORD *)(a1 + 24) & 2) != 0)
  {
LABEL_12:
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80) {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    }
    else {
      int v9 = 2;
    }
    uint64_t v3 = (v9 + v3);
  }
LABEL_16:
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_1008DDE08(uint64_t a1, void *lpsrc)
{
  sub_1008DD828(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008DDE90()
{
  return 1;
}

void *sub_1008DDE98@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.PointUncertainCircle");
}

void sub_1008DDEA8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      *(_DWORD *)(a1 + 36) |= 1u;
      int v6 = *(_DWORD **)(a1 + 8);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_10248A548 + 8);
      }
      sub_1008DD330(v6, v7);
      int v4 = *(_DWORD *)(a2 + 36);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_17;
      }
    }
    else if ((*(unsigned char *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v8 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(_DWORD *)(a1 + 16) = v8;
    int v4 = *(_DWORD *)(a2 + 36);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_18;
    }
LABEL_17:
    int v9 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 36) |= 4u;
    *(_DWORD *)(a1 + 20) = v9;
    int v4 = *(_DWORD *)(a2 + 36);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        return;
      }
      goto LABEL_9;
    }
LABEL_18:
    int v10 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 8u;
    *(_DWORD *)(a1 + 24) = v10;
    if ((*(_DWORD *)(a2 + 36) & 0x10) == 0) {
      return;
    }
LABEL_9:
    int v5 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 36) |= 0x10u;
    *(_DWORD *)(a1 + 28) = v5;
  }
}

void sub_1008DE010(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008DE028(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022D1230;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_10248A548 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008DE0B8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008DE028(a1);

  operator delete();
}

void sub_1008DE0F0()
{
}

uint64_t sub_1008DE144(uint64_t result)
{
  if (*(unsigned char *)(result + 36))
  {
    if (*(unsigned char *)(result + 36))
    {
      uint64_t v1 = *(void *)(result + 8);
      if (v1)
      {
        if (*(unsigned char *)(v1 + 20)) {
          *(void *)(v1 + 8) = 0;
        }
        *(_DWORD *)(v1 + 20) = 0;
      }
    }
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_1008DE174(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 16);
  int v6 = (unsigned int *)(a1 + 20);
  uint64_t v7 = (unsigned int *)(a1 + 24);
  int v8 = (unsigned int *)(a1 + 28);
  while (2)
  {
    int v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v9;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v9 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_22;
        }
        *(_DWORD *)(a1 + 36) |= 1u;
        uint64_t v12 = *(_DWORD **)(a1 + 8);
        if (!v12) {
          operator new();
        }
        unsigned int v32 = 0;
        int v13 = (char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v32))return 0; {
        }
          }
        else
        {
          unsigned int v32 = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        int v19 = *((_DWORD *)this + 14);
        int v20 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v19 + 1;
        if (v19 >= v20) {
          return 0;
        }
        int v21 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v32);
        if (!sub_1008DD4C8(v12, this, v22) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v21);
        int v23 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v23, 1);
        int v25 = v23 - 1;
        if (v25 < 0 == v24) {
          *((_DWORD *)this + 14) = v25;
        }
        int v26 = (unsigned char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v26 >= v14 || *v26 != 16) {
          continue;
        }
        int v15 = v26 + 1;
        *((void *)this + 1) = v15;
        goto LABEL_35;
      case 2u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
LABEL_35:
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          unint64_t v27 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *int v5 = *v15;
          unint64_t v27 = v15 + 1;
          *((void *)this + 1) = v27;
        }
        *(_DWORD *)(a1 + 36) |= 2u;
        if ((unint64_t)v27 >= v14 || *v27 != 24) {
          continue;
        }
        unsigned int v16 = v27 + 1;
        *((void *)this + 1) = v16;
LABEL_43:
        if ((unint64_t)v16 >= v14 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          unsigned int v29 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v16;
          unsigned int v29 = v16 + 1;
          *((void *)this + 1) = v29;
        }
        *(_DWORD *)(a1 + 36) |= 4u;
        if ((unint64_t)v29 >= v14 || *v29 != 32) {
          continue;
        }
        int v17 = v29 + 1;
        *((void *)this + 1) = v17;
LABEL_51:
        if ((unint64_t)v17 >= v14 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          unsigned int v30 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v7 = *v17;
          unsigned int v30 = v17 + 1;
          *((void *)this + 1) = v30;
        }
        *(_DWORD *)(a1 + 36) |= 8u;
        if ((unint64_t)v30 >= v14 || *v30 != 40) {
          continue;
        }
        BOOL v18 = v30 + 1;
        *((void *)this + 1) = v18;
LABEL_59:
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v31 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v18;
          int v31 = (unsigned __int8 *)(v18 + 1);
          *((void *)this + 1) = v31;
        }
        *(_DWORD *)(a1 + 36) |= 0x10u;
        if (v31 != (unsigned __int8 *)v14 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 3u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        unsigned int v16 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_43;
      case 4u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v17 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_51;
      case 5u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        BOOL v18 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_59;
      default:
        int v11 = TagFallback & 7;
LABEL_22:
        if (v11 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_1008DE560(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = (int *)result;
  int v6 = *(_DWORD *)(result + 36);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_10248A548 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = v5[9];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[4], a2, a4);
  int v6 = v5[9];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_12:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[6], a2, a4);
    if ((v5[9] & 0x10) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], a2, a4);
  int v6 = v5[9];
  if ((v6 & 8) != 0) {
    goto LABEL_12;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return result;
  }
LABEL_13:
  int v8 = v5[7];

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v8, a2, a4);
}

uint64_t sub_1008DE634(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_32;
  }
  if ((*(unsigned char *)(a1 + 36) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 36) & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_10248A548 + 8);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DD6DC(v5, a2);
  int v7 = (int)v6;
  if (v6 >= 0x80) {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
  }
  else {
    int v8 = 1;
  }
  uint64_t v4 = (v7 + v8 + 1);
  int v3 = *(_DWORD *)(a1 + 36);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      int v10 = 2;
    }
    uint64_t v4 = (v10 + v4);
  }
LABEL_16:
  if ((v3 & 4) != 0)
  {
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if (v11 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      int v12 = 2;
    }
    uint64_t v4 = (v12 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_18:
      if ((v3 & 0x10) == 0) {
        goto LABEL_32;
      }
      goto LABEL_28;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_18;
  }
  int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 36);
  }
  else
  {
    int v14 = 2;
  }
  uint64_t v4 = (v14 + v4);
  if ((v3 & 0x10) != 0)
  {
LABEL_28:
    int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if (v15 >= 0x80) {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    }
    else {
      int v16 = 2;
    }
    uint64_t v4 = (v16 + v4);
  }
LABEL_32:
  *(_DWORD *)(a1 + 32) = v4;
  return v4;
}

void sub_1008DE764(uint64_t a1, void *lpsrc)
{
  sub_1008DDEA8(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008DE7EC()
{
  return 1;
}

void *sub_1008DE7F4@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.PointUncertainEllipse");
}

void sub_1008DE804(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 44);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 44))
    {
      *(_DWORD *)(a1 + 44) |= 1u;
      int v6 = *(_DWORD **)(a1 + 8);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_10248A550 + 8);
      }
      sub_1008DD330(v6, v7);
      int v4 = *(_DWORD *)(a2 + 44);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_19;
      }
    }
    else if ((*(unsigned char *)(a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v8 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 44) |= 2u;
    *(_DWORD *)(a1 + 16) = v8;
    int v4 = *(_DWORD *)(a2 + 44);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_20;
    }
LABEL_19:
    int v9 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 44) |= 4u;
    *(_DWORD *)(a1 + 20) = v9;
    int v4 = *(_DWORD *)(a2 + 44);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_21;
    }
LABEL_20:
    int v10 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 44) |= 8u;
    *(_DWORD *)(a1 + 24) = v10;
    int v4 = *(_DWORD *)(a2 + 44);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_22;
    }
LABEL_21:
    int v11 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 44) |= 0x10u;
    *(_DWORD *)(a1 + 28) = v11;
    int v4 = *(_DWORD *)(a2 + 44);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0) {
        return;
      }
      goto LABEL_11;
    }
LABEL_22:
    int v12 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 44) |= 0x20u;
    *(_DWORD *)(a1 + 32) = v12;
    if ((*(_DWORD *)(a2 + 44) & 0x40) == 0) {
      return;
    }
LABEL_11:
    int v5 = *(_DWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 44) |= 0x40u;
    *(_DWORD *)(a1 + 36) = v5;
  }
}

void sub_1008DE9AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008DE9C4(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022D12A8;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_10248A550 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008DEA54(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008DE9C4(a1);

  operator delete();
}

void sub_1008DEA8C()
{
}

uint64_t sub_1008DEAE4(uint64_t result)
{
  if (*(unsigned char *)(result + 44))
  {
    if (*(unsigned char *)(result + 44))
    {
      uint64_t v1 = *(void *)(result + 8);
      if (v1)
      {
        if (*(unsigned char *)(v1 + 20)) {
          *(void *)(v1 + 8) = 0;
        }
        *(_DWORD *)(v1 + 20) = 0;
      }
    }
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)(result + 32) = 0;
  }
  *(_DWORD *)(result + 44) = 0;
  return result;
}

uint64_t sub_1008DEB18(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 16);
  int v6 = (unsigned int *)(a1 + 20);
  uint64_t v7 = (unsigned int *)(a1 + 24);
  int v8 = (unsigned int *)(a1 + 28);
  int v9 = (unsigned int *)(a1 + 32);
  int v10 = (unsigned int *)(a1 + 36);
  while (2)
  {
    int v11 = (char *)*((void *)this + 1);
    if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v11;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v11 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v13 = TagFallback & 7;
        if (v13 != 2) {
          goto LABEL_26;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        int v14 = *(_DWORD **)(a1 + 8);
        if (!v14) {
          operator new();
        }
        unsigned int v38 = 0;
        int v15 = (char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v38))return 0; {
        }
          }
        else
        {
          unsigned int v38 = *v15;
          *((void *)this + 1) = v15 + 1;
        }
        int v23 = *((_DWORD *)this + 14);
        int v24 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v23 + 1;
        if (v23 >= v24) {
          return 0;
        }
        int v25 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v38);
        if (!sub_1008DD4C8(v14, this, v26) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v25);
        int v27 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v27, 1);
        int v29 = v27 - 1;
        if (v29 < 0 == v28) {
          *((_DWORD *)this + 14) = v29;
        }
        unsigned int v30 = (unsigned char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        if ((unint64_t)v30 >= v16 || *v30 != 16) {
          continue;
        }
        int v17 = v30 + 1;
        *((void *)this + 1) = v17;
        goto LABEL_39;
      case 2u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
LABEL_39:
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v31 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v5 = *v17;
          int v31 = v17 + 1;
          *((void *)this + 1) = v31;
        }
        *(_DWORD *)(a1 + 44) |= 2u;
        if ((unint64_t)v31 >= v16 || *v31 != 24) {
          continue;
        }
        BOOL v18 = v31 + 1;
        *((void *)this + 1) = v18;
LABEL_47:
        if ((unint64_t)v18 >= v16 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          unsigned int v33 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v18;
          unsigned int v33 = v18 + 1;
          *((void *)this + 1) = v33;
        }
        *(_DWORD *)(a1 + 44) |= 4u;
        if ((unint64_t)v33 >= v16 || *v33 != 32) {
          continue;
        }
        int v19 = v33 + 1;
        *((void *)this + 1) = v19;
LABEL_55:
        if ((unint64_t)v19 >= v16 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v34 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v7 = *v19;
          int v34 = v19 + 1;
          *((void *)this + 1) = v34;
        }
        *(_DWORD *)(a1 + 44) |= 8u;
        if ((unint64_t)v34 >= v16 || *v34 != 40) {
          continue;
        }
        int v20 = v34 + 1;
        *((void *)this + 1) = v20;
LABEL_63:
        if ((unint64_t)v20 >= v16 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v35 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v20;
          int v35 = v20 + 1;
          *((void *)this + 1) = v35;
        }
        *(_DWORD *)(a1 + 44) |= 0x10u;
        if ((unint64_t)v35 >= v16 || *v35 != 48) {
          continue;
        }
        int v21 = v35 + 1;
        *((void *)this + 1) = v21;
LABEL_71:
        if ((unint64_t)v21 >= v16 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          unsigned int v36 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v9 = *v21;
          unsigned int v36 = v21 + 1;
          *((void *)this + 1) = v36;
        }
        *(_DWORD *)(a1 + 44) |= 0x20u;
        if ((unint64_t)v36 >= v16 || *v36 != 56) {
          continue;
        }
        unsigned int v22 = v36 + 1;
        *((void *)this + 1) = v22;
LABEL_79:
        if ((unint64_t)v22 >= v16 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!result) {
            return result;
          }
          unsigned int v37 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v10 = *v22;
          unsigned int v37 = (unsigned __int8 *)(v22 + 1);
          *((void *)this + 1) = v37;
        }
        *(_DWORD *)(a1 + 44) |= 0x40u;
        if (v37 != (unsigned __int8 *)v16 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 3u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        BOOL v18 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_47;
      case 4u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_55;
      case 5u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_63;
      case 6u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v21 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_71;
      case 7u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        unsigned int v22 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_79;
      default:
        int v13 = TagFallback & 7;
LABEL_26:
        if (v13 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_1008DEFFC(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = (int *)result;
  int v6 = *(_DWORD *)(result + 44);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_10248A550 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = v5[11];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[4], a2, a4);
  int v6 = v5[11];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], a2, a4);
  int v6 = v5[11];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[6], a2, a4);
  int v6 = v5[11];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_16:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[8], a2, a4);
    if ((v5[11] & 0x40) == 0) {
      return result;
    }
    goto LABEL_17;
  }
LABEL_15:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[7], a2, a4);
  int v6 = v5[11];
  if ((v6 & 0x20) != 0) {
    goto LABEL_16;
  }
LABEL_7:
  if ((v6 & 0x40) == 0) {
    return result;
  }
LABEL_17:
  int v8 = v5[9];

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v8, a2, a4);
}

uint64_t sub_1008DF108(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 44);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_42;
  }
  if ((*(unsigned char *)(a1 + 44) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 44) & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_10248A550 + 8);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DD6DC(v5, a2);
  int v7 = (int)v6;
  if (v6 >= 0x80) {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
  }
  else {
    int v8 = 1;
  }
  uint64_t v4 = (v7 + v8 + 1);
  int v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 44);
    }
    else
    {
      int v10 = 2;
    }
    uint64_t v4 = (v10 + v4);
  }
LABEL_16:
  if ((v3 & 4) != 0)
  {
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if (v11 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 44);
    }
    else
    {
      int v12 = 2;
    }
    uint64_t v4 = (v12 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_18:
      if ((v3 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_30;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_18;
  }
  int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 44);
  }
  else
  {
    int v14 = 2;
  }
  uint64_t v4 = (v14 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_19:
    if ((v3 & 0x20) == 0) {
      goto LABEL_20;
    }
    goto LABEL_34;
  }
LABEL_30:
  int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
  if (v15 >= 0x80)
  {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 44);
  }
  else
  {
    int v16 = 2;
  }
  uint64_t v4 = (v16 + v4);
  if ((v3 & 0x20) == 0)
  {
LABEL_20:
    if ((v3 & 0x40) == 0) {
      goto LABEL_42;
    }
    goto LABEL_38;
  }
LABEL_34:
  int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
  if (v17 >= 0x80)
  {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 44);
  }
  else
  {
    int v18 = 2;
  }
  uint64_t v4 = (v18 + v4);
  if ((v3 & 0x40) != 0)
  {
LABEL_38:
    int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
    if (v19 >= 0x80) {
      int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
    }
    else {
      int v20 = 2;
    }
    uint64_t v4 = (v20 + v4);
  }
LABEL_42:
  *(_DWORD *)(a1 + 40) = v4;
  return v4;
}

void sub_1008DF290(uint64_t a1, void *lpsrc)
{
  sub_1008DE804(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008DF318()
{
  return 1;
}

void *sub_1008DF320@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.PointAltitudeUncertainEllipsoid");
}

void sub_1008DF330(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 40);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 40))
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      int v6 = *(_DWORD **)(a1 + 8);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_10248A558 + 8);
      }
      sub_1008DD330(v6, v7);
      int v4 = *(_DWORD *)(a2 + 40);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_18;
      }
    }
    else if ((*(unsigned char *)(a2 + 40) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v8 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 40) |= 2u;
    *(_DWORD *)(a1 + 16) = v8;
    int v4 = *(_DWORD *)(a2 + 40);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_19;
    }
LABEL_18:
    int v9 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 40) |= 4u;
    *(_DWORD *)(a1 + 20) = v9;
    int v4 = *(_DWORD *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_20;
    }
LABEL_19:
    int v10 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 40) |= 8u;
    *(_DWORD *)(a1 + 24) = v10;
    int v4 = *(_DWORD *)(a2 + 40);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        return;
      }
      goto LABEL_10;
    }
LABEL_20:
    int v11 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 40) |= 0x10u;
    *(_DWORD *)(a1 + 28) = v11;
    if ((*(_DWORD *)(a2 + 40) & 0x20) == 0) {
      return;
    }
LABEL_10:
    int v5 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 40) |= 0x20u;
    *(_DWORD *)(a1 + 32) = v5;
  }
}

void sub_1008DF4B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008DF4D0(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022D1320;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_10248A558 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008DF560(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008DF4D0(a1);

  operator delete();
}

void sub_1008DF598()
{
}

uint64_t sub_1008DF5F0(uint64_t result)
{
  if (*(unsigned char *)(result + 40))
  {
    if (*(unsigned char *)(result + 40))
    {
      uint64_t v1 = *(void *)(result + 8);
      if (v1)
      {
        if (*(unsigned char *)(v1 + 20)) {
          *(void *)(v1 + 8) = 0;
        }
        *(_DWORD *)(v1 + 20) = 0;
      }
    }
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_DWORD *)(result + 32) = 0;
  }
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1008DF624(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 16);
  int v6 = (unsigned int *)(a1 + 20);
  uint64_t v7 = (unsigned int *)(a1 + 24);
  int v8 = (unsigned int *)(a1 + 28);
  int v9 = (unsigned int *)(a1 + 32);
  while (2)
  {
    int v10 = (char *)*((void *)this + 1);
    if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v10;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_24;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        int v13 = *(_DWORD **)(a1 + 8);
        if (!v13) {
          operator new();
        }
        unsigned int v35 = 0;
        int v14 = (char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v35))return 0; {
        }
          }
        else
        {
          unsigned int v35 = *v14;
          *((void *)this + 1) = v14 + 1;
        }
        int v21 = *((_DWORD *)this + 14);
        int v22 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v21 + 1;
        if (v21 >= v22) {
          return 0;
        }
        int v23 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v35);
        if (!sub_1008DD4C8(v13, this, v24) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v23);
        int v25 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v25, 1);
        int v27 = v25 - 1;
        if (v27 < 0 == v26) {
          *((_DWORD *)this + 14) = v27;
        }
        BOOL v28 = (unsigned char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v28 >= v15 || *v28 != 16) {
          continue;
        }
        int v16 = v28 + 1;
        *((void *)this + 1) = v16;
        goto LABEL_37;
      case 2u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
LABEL_37:
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v29 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v5 = *v16;
          int v29 = v16 + 1;
          *((void *)this + 1) = v29;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        if ((unint64_t)v29 >= v15 || *v29 != 24) {
          continue;
        }
        int v17 = v29 + 1;
        *((void *)this + 1) = v17;
LABEL_45:
        if ((unint64_t)v17 >= v15 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v31 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v17;
          int v31 = v17 + 1;
          *((void *)this + 1) = v31;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        if ((unint64_t)v31 >= v15 || *v31 != 32) {
          continue;
        }
        int v18 = v31 + 1;
        *((void *)this + 1) = v18;
LABEL_53:
        if ((unint64_t)v18 >= v15 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          unsigned int v32 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v7 = *v18;
          unsigned int v32 = v18 + 1;
          *((void *)this + 1) = v32;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        if ((unint64_t)v32 >= v15 || *v32 != 40) {
          continue;
        }
        int v19 = v32 + 1;
        *((void *)this + 1) = v19;
LABEL_61:
        if ((unint64_t)v19 >= v15 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          unsigned int v33 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v19;
          unsigned int v33 = v19 + 1;
          *((void *)this + 1) = v33;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        if ((unint64_t)v33 >= v15 || *v33 != 48) {
          continue;
        }
        int v20 = v33 + 1;
        *((void *)this + 1) = v20;
LABEL_69:
        if ((unint64_t)v20 >= v15 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          int v34 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v9 = *v20;
          int v34 = (unsigned __int8 *)(v20 + 1);
          *((void *)this + 1) = v34;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        if (v34 != (unsigned __int8 *)v15 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 3u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v17 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_45;
      case 4u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_53;
      case 5u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_61;
      case 6u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_69;
      default:
        int v12 = TagFallback & 7;
LABEL_24:
        if (v12 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_1008DFA90(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = (int *)result;
  int v6 = *(_DWORD *)(result + 40);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_10248A558 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = v5[10];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[4], a2, a4);
  int v6 = v5[10];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], a2, a4);
  int v6 = v5[10];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_14:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[7], a2, a4);
    if ((v5[10] & 0x20) == 0) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[6], a2, a4);
  int v6 = v5[10];
  if ((v6 & 0x10) != 0) {
    goto LABEL_14;
  }
LABEL_6:
  if ((v6 & 0x20) == 0) {
    return result;
  }
LABEL_15:
  int v8 = v5[8];

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v8, a2, a4);
}

uint64_t sub_1008DFB80(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 40);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_37;
  }
  if ((*(unsigned char *)(a1 + 40) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 40) & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_10248A558 + 8);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DD6DC(v5, a2);
  int v7 = (int)v6;
  if (v6 >= 0x80) {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
  }
  else {
    int v8 = 1;
  }
  uint64_t v4 = (v7 + v8 + 1);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 40);
    }
    else
    {
      int v10 = 2;
    }
    uint64_t v4 = (v10 + v4);
  }
LABEL_16:
  if ((v3 & 4) != 0)
  {
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if (v11 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 40);
    }
    else
    {
      int v12 = 2;
    }
    uint64_t v4 = (v12 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_18:
      if ((v3 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_29;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_18;
  }
  int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 40);
  }
  else
  {
    int v14 = 2;
  }
  uint64_t v4 = (v14 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_19:
    if ((v3 & 0x20) == 0) {
      goto LABEL_37;
    }
    goto LABEL_33;
  }
LABEL_29:
  unint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
  if (v15 >= 0x80)
  {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 40);
  }
  else
  {
    int v16 = 2;
  }
  uint64_t v4 = (v16 + v4);
  if ((v3 & 0x20) != 0)
  {
LABEL_33:
    int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if (v17 >= 0x80) {
      int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
    }
    else {
      int v18 = 2;
    }
    uint64_t v4 = (v18 + v4);
  }
LABEL_37:
  *(_DWORD *)(a1 + 36) = v4;
  return v4;
}

void sub_1008DFCDC(uint64_t a1, void *lpsrc)
{
  sub_1008DF330(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008DFD64()
{
  return 1;
}

void *sub_1008DFD6C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.EllipsoidArc");
}

void sub_1008DFD7C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      *(_DWORD *)(a1 + 24) |= 1u;
      uint64_t v5 = *(_DWORD **)(a1 + 8);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_10248A560 + 8);
      }
      sub_1008DD330(v5, v6);
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      int v7 = *(_DWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 24) |= 2u;
      *(_DWORD *)(a1 + 16) = v7;
    }
  }
}

void sub_1008DFE7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008DFE94(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022D1398;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_10248A560 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008DFF24(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008DFE94(a1);

  operator delete();
}

void sub_1008DFF5C()
{
}

uint64_t sub_1008DFFAC(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    if (*(unsigned char *)(result + 24))
    {
      uint64_t v1 = *(void *)(result + 8);
      if (v1)
      {
        if (*(unsigned char *)(v1 + 20)) {
          *(void *)(v1 + 8) = 0;
        }
        *(_DWORD *)(v1 + 20) = 0;
      }
    }
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1008DFFDC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)(a1 + 16);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v6;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v6 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 == 1) {
        break;
      }
      if (TagFallback >> 3 == 2)
      {
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) == 0)
        {
          int v10 = (char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
          goto LABEL_30;
        }
      }
      else
      {
        int v8 = TagFallback & 7;
      }
LABEL_18:
      if (v8 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
    int v8 = TagFallback & 7;
    if (v8 != 2) {
      goto LABEL_18;
    }
    *(_DWORD *)(a1 + 24) |= 1u;
    int v11 = *(_DWORD **)(a1 + 8);
    if (!v11) {
      operator new();
    }
    unsigned int v23 = 0;
    int v12 = (char *)*((void *)this + 1);
    if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23)) {
        return 0;
      }
    }
    else
    {
      unsigned int v23 = *v12;
      *((void *)this + 1) = v12 + 1;
    }
    int v13 = *((_DWORD *)this + 14);
    int v14 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v13 + 1;
    if (v13 >= v14) {
      return 0;
    }
    int v15 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v23);
    if (!sub_1008DD4C8(v11, this, v16) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v15);
    int v17 = *((_DWORD *)this + 14);
    BOOL v18 = __OFSUB__(v17, 1);
    int v19 = v17 - 1;
    if (v19 < 0 == v18) {
      *((_DWORD *)this + 14) = v19;
    }
    int v20 = (unsigned char *)*((void *)this + 1);
    unint64_t v9 = *((void *)this + 2);
    if ((unint64_t)v20 < v9 && *v20 == 16)
    {
      int v10 = v20 + 1;
      *((void *)this + 1) = v10;
LABEL_30:
      if ((unint64_t)v10 >= v9 || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!result) {
          return result;
        }
        int v21 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
      }
      else
      {
        *uint64_t v5 = *v10;
        int v21 = (unsigned __int8 *)(v10 + 1);
        *((void *)this + 1) = v21;
      }
      *(_DWORD *)(a1 + 24) |= 2u;
      if (v21 == (unsigned __int8 *)v9 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
  }
}

uint64_t sub_1008E0230(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(result + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248A560 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 24) & 2) != 0)
  {
LABEL_7:
    int v8 = *(_DWORD *)(v5 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  }
  return result;
}

uint64_t sub_1008E02B0(uint64_t a1, unsigned int a2)
{
  if (!*(unsigned char *)(a1 + 24))
  {
    uint64_t v3 = 0;
    goto LABEL_16;
  }
  if ((*(unsigned char *)(a1 + 24) & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (!v4) {
    uint64_t v4 = *(void *)(qword_10248A560 + 8);
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DD6DC(v4, a2);
  int v6 = (int)v5;
  if (v5 >= 0x80) {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
  }
  else {
    int v7 = 1;
  }
  uint64_t v3 = (v6 + v7 + 1);
  if ((*(_DWORD *)(a1 + 24) & 2) != 0)
  {
LABEL_12:
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80) {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    }
    else {
      int v9 = 2;
    }
    uint64_t v3 = (v9 + v3);
  }
LABEL_16:
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_1008E035C(uint64_t a1, void *lpsrc)
{
  sub_1008DFD7C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008E03E4()
{
  return 1;
}

void *sub_1008E03EC@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.PointAltitude");
}

void sub_1008E03FC(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2), *(_DWORD *)(a2 + 16) + a1[4]);
  if (*(int *)(a2 + 16) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 8) + 8 * v4);
      int v6 = a1[5];
      uint64_t v7 = (int)a1[4];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[6])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2), v6 + 1);
          int v6 = a1[5];
        }
        a1[5] = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)a1 + 1);
      a1[4] = v7 + 1;
      sub_1008DD330(*(_DWORD **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 16));
  }
  if (*(unsigned char *)(a2 + 40))
  {
    int v9 = *(_DWORD *)(a2 + 32);
    a1[10] |= 1u;
    a1[8] = v9;
  }
}

void sub_1008E0574(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008E058C(uint64_t *a1)
{
  *a1 = (uint64_t)off_1022D1410;
  sub_10016B2E8(a1 + 1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_1008E05E8(uint64_t *a1)
{
  sub_1008E058C(a1);

  operator delete();
}

void sub_1008E0620()
{
}

uint64_t sub_1008E0678(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40)) {
    *(_DWORD *)(a1 + 32) = 0;
  }
  uint64_t result = sub_10026DEDC(a1 + 8);
  *(_DWORD *)(a1 + 40) = 0;
  return result;
}

uint64_t sub_1008E06B0(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = a1 + 8;
  int v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_16;
        }
        int v10 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        if ((unint64_t)v10 >= v11 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v12 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v5 = *v10;
          int v12 = v10 + 1;
          *((void *)this + 1) = v12;
        }
        a1[10] |= 1u;
        if ((unint64_t)v12 < v11 && *v12 == 18) {
          goto LABEL_23;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v9 = TagFallback & 7;
      if (v9 != 2) {
        goto LABEL_16;
      }
      while (1)
      {
        int v14 = a1[5];
        uint64_t v15 = (int)a1[4];
        if ((int)v15 >= v14)
        {
          if (v14 == a1[6])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v14 + 1);
            int v14 = a1[5];
          }
          a1[5] = v14 + 1;
          operator new();
        }
        uint64_t v16 = *((void *)a1 + 1);
        a1[4] = v15 + 1;
        int v17 = *(_DWORD **)(v16 + 8 * v15);
        unsigned int v27 = 0;
        BOOL v18 = (char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27))return 0; {
        }
          }
        else
        {
          unsigned int v27 = *v18;
          *((void *)this + 1) = v18 + 1;
        }
        int v19 = *((_DWORD *)this + 14);
        int v20 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v19 + 1;
        if (v19 >= v20) {
          return 0;
        }
        int v21 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27);
        if (!sub_1008DD4C8(v17, this, v22) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v21);
        int v23 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v23, 1);
        int v25 = v23 - 1;
        if (v25 < 0 == v24) {
          *((_DWORD *)this + 14) = v25;
        }
        int v12 = (unsigned char *)*((void *)this + 1);
        BOOL v26 = (unsigned char *)*((void *)this + 2);
        if (v12 >= v26 || *v12 != 18) {
          break;
        }
LABEL_23:
        *((void *)this + 1) = v12 + 1;
      }
      if (v12 == v26 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v9 = TagFallback & 7;
LABEL_16:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1008E0960(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 40)) {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 32), a2, a4);
  }
  if (*(int *)(v5 + 16) >= 1)
  {
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  return result;
}

uint64_t sub_1008E09D8(uint64_t a1, unsigned int a2)
{
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if (v4 >= 0x80) {
      int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4, a2) + 1;
    }
    else {
      int v3 = 2;
    }
  }
  else
  {
    int v3 = 0;
  }
  int v5 = *(_DWORD *)(a1 + 16);
  uint64_t v6 = (v5 + v3);
  if (v5 >= 1)
  {
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DD6DC(*(void *)(*(void *)(a1 + 8) + 8 * v7), a2);
      int v9 = (int)v8;
      if (v8 >= 0x80) {
        int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2);
      }
      else {
        int v10 = 1;
      }
      uint64_t v6 = (v9 + v6 + v10);
      ++v7;
    }
    while (v7 < *(int *)(a1 + 16));
  }
  *(_DWORD *)(a1 + 36) = v6;
  return v6;
}

void sub_1008E0A88(_DWORD *a1, void *lpsrc)
{
  sub_1008E03FC(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008E0B10()
{
  return 1;
}

void *sub_1008E0B18@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.Polygon");
}

void sub_1008E0B28(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 72);
  if (!(_BYTE)v4) {
    return;
  }
  if (*(unsigned char *)(a2 + 72))
  {
    *(_DWORD *)(a1 + 72) |= 1u;
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      operator new();
    }
    uint64_t v7 = *(void *)(a2 + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_10248A570 + 8);
    }
    sub_1008DD828(v6, v7);
    int v4 = *(_DWORD *)(a2 + 72);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_24;
    }
  }
  else if ((*(unsigned char *)(a2 + 72) & 2) == 0)
  {
    goto LABEL_6;
  }
  *(_DWORD *)(a1 + 72) |= 2u;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    operator new();
  }
  uint64_t v9 = *(void *)(a2 + 16);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_10248A570 + 16);
  }
  sub_1008DDEA8(v8, v9);
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_29;
  }
LABEL_24:
  *(_DWORD *)(a1 + 72) |= 4u;
  uint64_t v10 = *(void *)(a1 + 24);
  if (!v10) {
    operator new();
  }
  uint64_t v11 = *(void *)(a2 + 24);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_10248A570 + 24);
  }
  sub_1008DE804(v10, v11);
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_34;
  }
LABEL_29:
  *(_DWORD *)(a1 + 72) |= 8u;
  uint64_t v12 = *(void *)(a1 + 32);
  if (!v12) {
    operator new();
  }
  uint64_t v13 = *(void *)(a2 + 32);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_10248A570 + 32);
  }
  sub_1008DF330(v12, v13);
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_39:
    *(_DWORD *)(a1 + 72) |= 0x20u;
    uint64_t v16 = *(void *)(a1 + 48);
    if (!v16) {
      operator new();
    }
    uint64_t v17 = *(void *)(a2 + 48);
    if (!v17) {
      uint64_t v17 = *(void *)(qword_10248A570 + 48);
    }
    sub_1008DFD7C(v16, v17);
    int v4 = *(_DWORD *)(a2 + 72);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        return;
      }
      goto LABEL_12;
    }
    goto LABEL_44;
  }
LABEL_34:
  *(_DWORD *)(a1 + 72) |= 0x10u;
  int v14 = *(_DWORD **)(a1 + 40);
  if (!v14) {
    operator new();
  }
  uint64_t v15 = *(void *)(a2 + 40);
  if (!v15) {
    uint64_t v15 = *(void *)(qword_10248A570 + 40);
  }
  sub_1008DD330(v14, v15);
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 0x20) != 0) {
    goto LABEL_39;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_44:
  *(_DWORD *)(a1 + 72) |= 0x40u;
  BOOL v18 = *(_DWORD **)(a1 + 56);
  if (!v18) {
    operator new();
  }
  uint64_t v19 = *(void *)(a2 + 56);
  if (!v19) {
    uint64_t v19 = *(void *)(qword_10248A570 + 56);
  }
  sub_1008E03FC(v18, v19);
  if ((*(_DWORD *)(a2 + 72) & 0x80) != 0)
  {
LABEL_12:
    int v5 = *(_DWORD *)(a2 + 64);
    *(_DWORD *)(a1 + 72) |= 0x80u;
    *(_DWORD *)(a1 + 64) = v5;
  }
}

void sub_1008E0F1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1008E0F34(void *result)
{
  if ((void *)qword_10248A570 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[3];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = v1[4];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = v1[5];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = v1[6];
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t result = (void *)v1[7];
    if (result)
    {
      uint64_t v8 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v8();
    }
  }
  return result;
}

void sub_1008E10B0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D1488;
  sub_1008E0F34(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008E1104(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D1488;
  sub_1008E0F34(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008E116C()
{
}

uint64_t sub_1008E11CC(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(unsigned char *)(result + 72);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(result + 72))
    {
      uint64_t result = *(void *)(result + 8);
      if (result)
      {
        uint64_t result = sub_1008DDA58(result);
        int v2 = *(_DWORD *)(v1 + 72);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t result = *(void *)(v1 + 16);
      if (result)
      {
        uint64_t result = sub_1008DE144(result);
        int v2 = *(_DWORD *)(v1 + 72);
      }
    }
    if ((v2 & 4) != 0)
    {
      uint64_t result = *(void *)(v1 + 24);
      if (result)
      {
        uint64_t result = sub_1008DEAE4(result);
        int v2 = *(_DWORD *)(v1 + 72);
      }
    }
    if ((v2 & 8) != 0)
    {
      uint64_t result = *(void *)(v1 + 32);
      if (result)
      {
        uint64_t result = sub_1008DF5F0(result);
        int v2 = *(_DWORD *)(v1 + 72);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 40);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 20)) {
          *(void *)(v3 + 8) = 0;
        }
        *(_DWORD *)(v3 + 20) = 0;
        int v2 = *(_DWORD *)(v1 + 72);
      }
    }
    if ((v2 & 0x20) != 0)
    {
      uint64_t result = *(void *)(v1 + 48);
      if (result)
      {
        uint64_t result = sub_1008DFFAC(result);
        int v2 = *(_DWORD *)(v1 + 72);
      }
    }
    if ((v2 & 0x40) != 0)
    {
      uint64_t v4 = *(void *)(v1 + 56);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 40)) {
          *(_DWORD *)(v4 + 32) = 0;
        }
        uint64_t result = sub_10026DEDC(v4 + 8);
        *(_DWORD *)(v4 + 40) = 0;
      }
    }
    *(_DWORD *)(v1 + 64) = 0;
  }
  *(_DWORD *)(v1 + 72) = 0;
  return result;
}

uint64_t sub_1008E12A4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)(a1 + 64);
  while (1)
  {
    uint64_t v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 < *((void *)this + 2) && (*v6 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 72) |= 1u;
        uint64_t v9 = *(void *)(a1 + 8);
        if (!v9) {
          operator new();
        }
        unsigned int v77 = 0;
        uint64_t v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v77))return 0; {
        }
          }
        else
        {
          unsigned int v77 = *v10;
          *((void *)this + 1) = v10 + 1;
        }
        int v13 = *((_DWORD *)this + 14);
        int v14 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v13 + 1;
        if (v13 >= v14) {
          return 0;
        }
        int v15 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v77);
        if (!sub_1008DDA88(v9, this, v16) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v15);
        int v17 = *((_DWORD *)this + 14);
        BOOL v18 = __OFSUB__(v17, 1);
        int v19 = v17 - 1;
        if (v19 < 0 == v18) {
          *((_DWORD *)this + 14) = v19;
        }
        int v20 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 != 18) {
          continue;
        }
        *((void *)this + 1) = v20 + 1;
        goto LABEL_41;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_28;
        }
LABEL_41:
        *(_DWORD *)(a1 + 72) |= 2u;
        uint64_t v21 = *(void *)(a1 + 16);
        if (!v21) {
          operator new();
        }
        unsigned int v77 = 0;
        unsigned int v22 = (char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v77))return 0; {
        }
          }
        else
        {
          unsigned int v77 = *v22;
          *((void *)this + 1) = v22 + 1;
        }
        int v23 = *((_DWORD *)this + 14);
        int v24 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v23 + 1;
        if (v23 >= v24) {
          return 0;
        }
        int v25 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v77);
        if (!sub_1008DE174(v21, this, v26) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v25);
        int v27 = *((_DWORD *)this + 14);
        BOOL v18 = __OFSUB__(v27, 1);
        int v28 = v27 - 1;
        if (v28 < 0 == v18) {
          *((_DWORD *)this + 14) = v28;
        }
        int v29 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v29 >= *((void *)this + 2) || *v29 != 26) {
          continue;
        }
        *((void *)this + 1) = v29 + 1;
LABEL_55:
        *(_DWORD *)(a1 + 72) |= 4u;
        uint64_t v30 = *(void *)(a1 + 24);
        if (!v30) {
          operator new();
        }
        unsigned int v77 = 0;
        int v31 = (char *)*((void *)this + 1);
        if ((unint64_t)v31 >= *((void *)this + 2) || *v31 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v77))return 0; {
        }
          }
        else
        {
          unsigned int v77 = *v31;
          *((void *)this + 1) = v31 + 1;
        }
        int v32 = *((_DWORD *)this + 14);
        int v33 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v32 + 1;
        if (v32 >= v33) {
          return 0;
        }
        int v34 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v77);
        if (!sub_1008DEB18(v30, this, v35) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v34);
        int v36 = *((_DWORD *)this + 14);
        BOOL v18 = __OFSUB__(v36, 1);
        int v37 = v36 - 1;
        if (v37 < 0 == v18) {
          *((_DWORD *)this + 14) = v37;
        }
        unsigned int v38 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v38 >= *((void *)this + 2) || *v38 != 34) {
          continue;
        }
        *((void *)this + 1) = v38 + 1;
LABEL_69:
        *(_DWORD *)(a1 + 72) |= 8u;
        uint64_t v39 = *(void *)(a1 + 32);
        if (!v39) {
          operator new();
        }
        unsigned int v77 = 0;
        unsigned int v40 = (char *)*((void *)this + 1);
        if ((unint64_t)v40 >= *((void *)this + 2) || *v40 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v77))return 0; {
        }
          }
        else
        {
          unsigned int v77 = *v40;
          *((void *)this + 1) = v40 + 1;
        }
        int v41 = *((_DWORD *)this + 14);
        int v42 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v41 + 1;
        if (v41 >= v42) {
          return 0;
        }
        int v43 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v77);
        if (!sub_1008DF624(v39, this, v44) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v43);
        int v45 = *((_DWORD *)this + 14);
        BOOL v18 = __OFSUB__(v45, 1);
        int v46 = v45 - 1;
        if (v46 < 0 == v18) {
          *((_DWORD *)this + 14) = v46;
        }
        BOOL v47 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v47 >= *((void *)this + 2) || *v47 != 42) {
          continue;
        }
        *((void *)this + 1) = v47 + 1;
LABEL_83:
        *(_DWORD *)(a1 + 72) |= 0x10u;
        int v48 = *(_DWORD **)(a1 + 40);
        if (!v48) {
          operator new();
        }
        unsigned int v77 = 0;
        BOOL v49 = (char *)*((void *)this + 1);
        if ((unint64_t)v49 >= *((void *)this + 2) || *v49 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v77))return 0; {
        }
          }
        else
        {
          unsigned int v77 = *v49;
          *((void *)this + 1) = v49 + 1;
        }
        int v50 = *((_DWORD *)this + 14);
        int v51 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v50 + 1;
        if (v50 >= v51) {
          return 0;
        }
        int v52 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v77);
        if (!sub_1008DD4C8(v48, this, v53) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v52);
        int v54 = *((_DWORD *)this + 14);
        BOOL v18 = __OFSUB__(v54, 1);
        int v55 = v54 - 1;
        if (v55 < 0 == v18) {
          *((_DWORD *)this + 14) = v55;
        }
        int v56 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v56 >= *((void *)this + 2) || *v56 != 50) {
          continue;
        }
        *((void *)this + 1) = v56 + 1;
LABEL_97:
        *(_DWORD *)(a1 + 72) |= 0x20u;
        uint64_t v57 = *(void *)(a1 + 48);
        if (!v57) {
          operator new();
        }
        unsigned int v77 = 0;
        int v58 = (char *)*((void *)this + 1);
        if ((unint64_t)v58 >= *((void *)this + 2) || *v58 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v77))return 0; {
        }
          }
        else
        {
          unsigned int v77 = *v58;
          *((void *)this + 1) = v58 + 1;
        }
        int v59 = *((_DWORD *)this + 14);
        int v60 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v59 + 1;
        if (v59 >= v60) {
          return 0;
        }
        int v61 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v77);
        if (!sub_1008DFFDC(v57, this, v62) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v61);
        int v63 = *((_DWORD *)this + 14);
        BOOL v18 = __OFSUB__(v63, 1);
        int v64 = v63 - 1;
        if (v64 < 0 == v18) {
          *((_DWORD *)this + 14) = v64;
        }
        long long v65 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v65 >= *((void *)this + 2) || *v65 != 58) {
          continue;
        }
        *((void *)this + 1) = v65 + 1;
LABEL_111:
        *(_DWORD *)(a1 + 72) |= 0x40u;
        __int16 v66 = *(_DWORD **)(a1 + 56);
        if (!v66) {
          operator new();
        }
        unsigned int v77 = 0;
        int v67 = (char *)*((void *)this + 1);
        if ((unint64_t)v67 >= *((void *)this + 2) || *v67 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v77))return 0; {
        }
          }
        else
        {
          unsigned int v77 = *v67;
          *((void *)this + 1) = v67 + 1;
        }
        int v68 = *((_DWORD *)this + 14);
        int v69 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v68 + 1;
        if (v68 >= v69) {
          return 0;
        }
        int v70 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v77);
        if (!sub_1008E06B0(v66, this, v71) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v70);
        int v72 = *((_DWORD *)this + 14);
        BOOL v18 = __OFSUB__(v72, 1);
        int v73 = v72 - 1;
        if (v73 < 0 == v18) {
          *((_DWORD *)this + 14) = v73;
        }
        double v74 = (unsigned char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        if ((unint64_t)v74 < v11 && *v74 == 64)
        {
          uint64_t v12 = v74 + 1;
          *((void *)this + 1) = v12;
LABEL_125:
          if ((unint64_t)v12 >= v11 || *v12 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
            if (!result) {
              return result;
            }
            double v75 = (unsigned __int8 *)*((void *)this + 1);
            unint64_t v11 = *((void *)this + 2);
          }
          else
          {
            *uint64_t v5 = *v12;
            double v75 = (unsigned __int8 *)(v12 + 1);
            *((void *)this + 1) = v75;
          }
          *(_DWORD *)(a1 + 72) |= 0x80u;
          if (v75 == (unsigned __int8 *)v11
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
        }
        break;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_55;
        }
        goto LABEL_28;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_69;
        }
        goto LABEL_28;
      case 5u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_83;
        }
        goto LABEL_28;
      case 6u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_97;
        }
        goto LABEL_28;
      case 7u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_111;
        }
        goto LABEL_28;
      case 8u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        uint64_t v12 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_125;
      default:
        int v8 = TagFallback & 7;
LABEL_28:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1008E1BFC(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 72);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_10248A570 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 72);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_10248A570 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_16:
  uint64_t v9 = *(void *)(v5 + 24);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_10248A570 + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_19:
  uint64_t v10 = *(void *)(v5 + 32);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_10248A570 + 32);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_25;
  }
LABEL_22:
  uint64_t v11 = *(void *)(v5 + 40);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_10248A570 + 40);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v11, a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_28;
  }
LABEL_25:
  uint64_t v12 = *(void *)(v5 + 48);
  if (!v12) {
    uint64_t v12 = *(void *)(qword_10248A570 + 48);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v12, a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      return result;
    }
    goto LABEL_31;
  }
LABEL_28:
  uint64_t v13 = *(void *)(v5 + 56);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_10248A570 + 56);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v13, a2, a4);
  if ((*(_DWORD *)(v5 + 72) & 0x80) != 0)
  {
LABEL_31:
    int v14 = *(_DWORD *)(v5 + 64);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v14, a2, a4);
  }
  return result;
}

uint64_t sub_1008E1D84(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 72);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_59;
  }
  if ((*(unsigned char *)(a1 + 72) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 72) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_10248A570 + 8);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DDD5C(v5, a2);
  int v7 = (int)v6;
  if (v6 >= 0x80) {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
  }
  else {
    int v8 = 1;
  }
  uint64_t v4 = (v7 + v8 + 1);
  int v3 = *(_DWORD *)(a1 + 72);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_10248A570 + 16);
    }
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DE634(v9, a2);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    }
    else {
      int v12 = 1;
    }
    uint64_t v4 = (v4 + v11 + v12 + 1);
    int v3 = *(_DWORD *)(a1 + 72);
  }
LABEL_18:
  if ((v3 & 4) != 0)
  {
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13) {
      uint64_t v13 = *(void *)(qword_10248A570 + 24);
    }
    int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DF108(v13, a2);
    int v15 = (int)v14;
    if (v14 >= 0x80) {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
    }
    else {
      int v16 = 1;
    }
    uint64_t v4 = (v4 + v15 + v16 + 1);
    int v3 = *(_DWORD *)(a1 + 72);
    if ((v3 & 8) == 0)
    {
LABEL_20:
      if ((v3 & 0x10) == 0) {
        goto LABEL_21;
      }
      goto LABEL_37;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)(a1 + 32);
  if (!v17) {
    uint64_t v17 = *(void *)(qword_10248A570 + 32);
  }
  BOOL v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DFB80(v17, a2);
  int v19 = (int)v18;
  if (v18 >= 0x80) {
    int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
  }
  else {
    int v20 = 1;
  }
  uint64_t v4 = (v4 + v19 + v20 + 1);
  int v3 = *(_DWORD *)(a1 + 72);
  if ((v3 & 0x10) == 0)
  {
LABEL_21:
    if ((v3 & 0x20) == 0) {
      goto LABEL_22;
    }
    goto LABEL_43;
  }
LABEL_37:
  uint64_t v21 = *(void *)(a1 + 40);
  if (!v21) {
    uint64_t v21 = *(void *)(qword_10248A570 + 40);
  }
  unsigned int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DD6DC(v21, a2);
  int v23 = (int)v22;
  if (v22 >= 0x80) {
    int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, a2);
  }
  else {
    int v24 = 1;
  }
  uint64_t v4 = (v4 + v23 + v24 + 1);
  int v3 = *(_DWORD *)(a1 + 72);
  if ((v3 & 0x20) == 0)
  {
LABEL_22:
    if ((v3 & 0x40) == 0) {
      goto LABEL_23;
    }
    goto LABEL_49;
  }
LABEL_43:
  uint64_t v25 = *(void *)(a1 + 48);
  if (!v25) {
    uint64_t v25 = *(void *)(qword_10248A570 + 48);
  }
  unsigned int v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008E02B0(v25, a2);
  int v27 = (int)v26;
  if (v26 >= 0x80) {
    int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26, a2);
  }
  else {
    int v28 = 1;
  }
  uint64_t v4 = (v4 + v27 + v28 + 1);
  int v3 = *(_DWORD *)(a1 + 72);
  if ((v3 & 0x40) == 0)
  {
LABEL_23:
    if ((v3 & 0x80) == 0) {
      goto LABEL_59;
    }
    goto LABEL_55;
  }
LABEL_49:
  uint64_t v29 = *(void *)(a1 + 56);
  if (!v29) {
    uint64_t v29 = *(void *)(qword_10248A570 + 56);
  }
  uint64_t v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008E09D8(v29, a2);
  int v31 = (int)v30;
  if (v30 >= 0x80) {
    int v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30, a2);
  }
  else {
    int v32 = 1;
  }
  uint64_t v4 = (v4 + v31 + v32 + 1);
  if ((*(_DWORD *)(a1 + 72) & 0x80) != 0)
  {
LABEL_55:
    int v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
    if (v33 >= 0x80) {
      int v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33, a2) + 1;
    }
    else {
      int v34 = 2;
    }
    uint64_t v4 = (v34 + v4);
  }
LABEL_59:
  *(_DWORD *)(a1 + 68) = v4;
  return v4;
}

void sub_1008E2000(uint64_t a1, void *lpsrc)
{
  sub_1008E0B28(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008E2088()
{
  return 1;
}

void *sub_1008E2090@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.ShapeInfo");
}

void sub_1008E20A0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      unsigned int v5 = *(_DWORD *)(a2 + 16);
      if (v5 >= 9) {
        sub_101A735D0();
      }
      *(_DWORD *)(a1 + 24) |= 1u;
      *(_DWORD *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 24) |= 2u;
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_10248A578 + 8);
      }
      sub_1008E0B28(v6, v7);
    }
  }
}

void sub_1008E21C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008E21D8(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022D1500;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_10248A578 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008E2268(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008E21D8(a1);

  operator delete();
}

void sub_1008E22A0()
{
}

uint64_t sub_1008E22F0(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(unsigned char *)(result + 24);
  if (v2)
  {
    *(_DWORD *)(result + 16) = 0;
    if ((v2 & 2) != 0)
    {
      uint64_t result = *(void *)(result + 8);
      if (result) {
        uint64_t result = sub_1008E11CC(result);
      }
    }
  }
  *(_DWORD *)(v1 + 24) = 0;
  return result;
}

uint64_t sub_1008E2330(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        unsigned int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_15;
        }
        unsigned int v21 = 0;
        int v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
          if (!result) {
            return result;
          }
          unsigned int v9 = v21;
        }
        else
        {
          unsigned int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
        }
        if (v9 <= 8)
        {
          *(_DWORD *)(a1 + 24) |= 1u;
          *(_DWORD *)(a1 + 16) = v9;
        }
        int v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 18)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_25;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        int v7 = TagFallback & 7;
        goto LABEL_15;
      }
      int v7 = TagFallback & 7;
      if (v7 == 2) {
        break;
      }
LABEL_15:
      if (v7 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
LABEL_25:
    *(_DWORD *)(a1 + 24) |= 2u;
    uint64_t v12 = *(void *)(a1 + 8);
    if (!v12) {
      operator new();
    }
    unsigned int v22 = 0;
    uint64_t v13 = (char *)*((void *)this + 1);
    if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22)) {
        return 0;
      }
    }
    else
    {
      unsigned int v22 = *v13;
      *((void *)this + 1) = v13 + 1;
    }
    int v14 = *((_DWORD *)this + 14);
    int v15 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v14 + 1;
    if (v14 >= v15) {
      return 0;
    }
    int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v22);
    if (!sub_1008E12A4(v12, this, v17) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
    int v18 = *((_DWORD *)this + 14);
    BOOL v19 = __OFSUB__(v18, 1);
    int v20 = v18 - 1;
    if (v20 < 0 == v19) {
      *((_DWORD *)this + 14) = v20;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_1008E259C(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 24) & 2) == 0) {
      return result;
    }
  }
  else if ((v6 & 2) == 0)
  {
    return result;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248A578 + 8);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
}

uint64_t sub_1008E261C(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 24);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 24))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
      if ((v5 & 0x80000000) != 0)
      {
        uint64_t v4 = 11;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
      else if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 24) & 2) == 0) {
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
        goto LABEL_19;
      }
    }
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10248A578 + 8);
    }
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008E1D84(v6, a2);
    int v9 = (int)v7;
    if (v7 >= 0x80) {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, v8);
    }
    else {
      int v10 = 1;
    }
    uint64_t v4 = (v4 + v9 + v10 + 1);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_1008E26E4(uint64_t a1, void *lpsrc)
{
  sub_1008E20A0(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008E276C()
{
  return 1;
}

void *sub_1008E2774@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.LocEstimate");
}

void sub_1008E2784(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 20))
    {
      int v5 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v5;
      int v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v6;
    }
  }
}

void sub_1008E2830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008E2848(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D1578;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008E2868(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D1578;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008E28BC()
{
}

uint64_t sub_1008E2908(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1008E291C(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  while (1)
  {
    while (1)
    {
      uint64_t v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      uint64_t v12 = (char *)*((void *)this + 1);
      unint64_t v10 = *((void *)this + 2);
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!result) {
          return result;
        }
        uint64_t v13 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
      }
      else
      {
        *int v5 = *v12;
        uint64_t v13 = v12 + 1;
        *((void *)this + 1) = v13;
      }
      a1[5] |= 1u;
      if ((unint64_t)v13 < v10 && *v13 == 16)
      {
        int v11 = v13 + 1;
        *((void *)this + 1) = v11;
LABEL_24:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v11;
          int v14 = (unsigned __int8 *)(v11 + 1);
          *((void *)this + 1) = v14;
        }
        a1[5] |= 2u;
        if (v14 == (unsigned __int8 *)v10
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v9 = TagFallback & 7;
    }
LABEL_16:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1008E2ABC(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(_DWORD *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_1008E2B28(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 20);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 20))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_14;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 20) & 2) == 0) {
        goto LABEL_14;
      }
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v6 >= 0x80) {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    }
    else {
      int v7 = 2;
    }
    uint64_t v4 = (v7 + v4);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_14:
  *(_DWORD *)(a1 + 16) = v4;
  return v4;
}

void sub_1008E2BB8(_DWORD *a1, void *lpsrc)
{
  sub_1008E2784(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008E2C40()
{
  return 1;
}

void *sub_1008E2C48@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.HorizontalVelocity");
}

void sub_1008E2C58(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      int v6 = *(_DWORD *)(a2 + 8);
      a1[7] |= 1u;
      a1[2] = v6;
      int v4 = *(_DWORD *)(a2 + 28);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((*(unsigned char *)(a2 + 28) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 12);
    a1[7] |= 2u;
    a1[3] = v7;
    int v4 = *(_DWORD *)(a2 + 28);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }
LABEL_12:
    int v8 = *(_DWORD *)(a2 + 16);
    a1[7] |= 4u;
    a1[4] = v8;
    if ((*(_DWORD *)(a2 + 28) & 8) == 0) {
      return;
    }
LABEL_8:
    int v5 = *(_DWORD *)(a2 + 20);
    a1[7] |= 8u;
    a1[5] = v5;
  }
}

void sub_1008E2D4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008E2D64(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D15F0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008E2D84(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D15F0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008E2DD8()
{
}

uint64_t sub_1008E2E24(uint64_t result)
{
  if (*(unsigned char *)(result + 28))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_1008E2E38(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  int v7 = a1 + 4;
  int v8 = a1 + 5;
  while (2)
  {
    int v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v9;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v9 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v13 < v12 && (*v13 & 0x80000000) == 0)
        {
          *int v5 = *v13;
          int v14 = v13 + 1;
          *((void *)this + 1) = v14;
LABEL_24:
          a1[7] |= 1u;
          if ((unint64_t)v14 < v12 && *v14 == 16)
          {
            int v15 = v14 + 1;
            *((void *)this + 1) = v15;
            goto LABEL_27;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (result)
        {
          int v14 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          goto LABEL_24;
        }
        break;
      case 2u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
LABEL_27:
        if ((unint64_t)v15 >= v12 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v15;
          int v18 = v15 + 1;
          *((void *)this + 1) = v18;
        }
        a1[7] |= 2u;
        if ((unint64_t)v18 >= v12 || *v18 != 24) {
          continue;
        }
        int v16 = v18 + 1;
        *((void *)this + 1) = v16;
LABEL_35:
        if ((unint64_t)v16 >= v12 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          BOOL v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v7 = *v16;
          BOOL v19 = v16 + 1;
          *((void *)this + 1) = v19;
        }
        a1[7] |= 4u;
        if ((unint64_t)v19 >= v12 || *v19 != 32) {
          continue;
        }
        unsigned int v17 = v19 + 1;
        *((void *)this + 1) = v17;
LABEL_43:
        if ((unint64_t)v17 >= v12 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v20 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v17;
          int v20 = (unsigned __int8 *)(v17 + 1);
          *((void *)this + 1) = v20;
        }
        a1[7] |= 8u;
        if (v20 != (unsigned __int8 *)v12 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_35;
      case 4u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        unsigned int v17 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_43;
      default:
        int v11 = TagFallback & 7;
LABEL_18:
        if (v11 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

int *sub_1008E30F8(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  int v6 = result[7];
  if (v6)
  {
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    int v6 = v5[7];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
      if ((v5[7] & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  int v6 = v5[7];
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  int v7 = v5[5];

  return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
}

uint64_t sub_1008E31A0(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 28);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_25;
  }
  if (*(unsigned char *)(a1 + 28))
  {
    int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 28);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 28) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 28);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_25;
    }
    goto LABEL_21;
  }
  int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
  if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 28);
  }
  else
  {
    int v9 = 2;
  }
  uint64_t v4 = (v9 + v4);
  if ((v3 & 8) != 0)
  {
LABEL_21:
    unint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if (v10 >= 0x80) {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    }
    else {
      int v11 = 2;
    }
    uint64_t v4 = (v11 + v4);
  }
LABEL_25:
  *(_DWORD *)(a1 + 24) = v4;
  return v4;
}

void sub_1008E3288(_DWORD *a1, void *lpsrc)
{
  sub_1008E2C58(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008E3310()
{
  return 1;
}

void *sub_1008E3318@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.HorizWithVertVelocity");
}

void sub_1008E3328(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      int v6 = *(_DWORD *)(a2 + 8);
      a1[6] |= 1u;
      a1[2] = v6;
      int v4 = *(_DWORD *)(a2 + 24);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 24) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 12);
    a1[6] |= 2u;
    a1[3] = v7;
    if ((*(_DWORD *)(a2 + 24) & 4) == 0) {
      return;
    }
LABEL_7:
    int v5 = *(_DWORD *)(a2 + 16);
    a1[6] |= 4u;
    a1[4] = v5;
  }
}

void sub_1008E33FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008E3414(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D1668;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008E3434(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D1668;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008E3488()
{
}

uint64_t sub_1008E34D8(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    *(void *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1008E34F0(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  int v7 = a1 + 4;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v8;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v8 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v10 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v14 >= v12 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v5 = *v14;
          int v15 = v14 + 1;
          *((void *)this + 1) = v15;
        }
        a1[6] |= 1u;
        if ((unint64_t)v15 < v12 && *v15 == 16)
        {
          int v16 = v15 + 1;
          *((void *)this + 1) = v16;
          goto LABEL_27;
        }
      }
      if (v10 != 2) {
        break;
      }
      int v11 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_19;
      }
      int v16 = (char *)*((void *)this + 1);
      unint64_t v12 = *((void *)this + 2);
LABEL_27:
      if ((unint64_t)v16 >= v12 || *v16 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
        if (!result) {
          return result;
        }
        unsigned int v17 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
      }
      else
      {
        *int v6 = *v16;
        unsigned int v17 = v16 + 1;
        *((void *)this + 1) = v17;
      }
      a1[6] |= 2u;
      if ((unint64_t)v17 < v12 && *v17 == 24)
      {
        uint64_t v13 = v17 + 1;
        *((void *)this + 1) = v13;
LABEL_35:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v18 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v7 = *v13;
          int v18 = (unsigned __int8 *)(v13 + 1);
          *((void *)this + 1) = v18;
        }
        a1[6] |= 4u;
        if (v18 == (unsigned __int8 *)v12
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v10 == 3)
    {
      int v11 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_35;
      }
    }
    else
    {
      int v11 = TagFallback & 7;
    }
LABEL_19:
    if (v11 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

int *sub_1008E3714(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  int v6 = result[6];
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
    if ((v5[6] & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
  int v6 = v5[6];
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  int v7 = v5[4];

  return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t sub_1008E37A0(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 24);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_19;
  }
  if (*(unsigned char *)(a1 + 24))
  {
    int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 24);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 24);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80) {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    }
    else {
      int v9 = 2;
    }
    uint64_t v4 = (v9 + v4);
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_1008E3858(_DWORD *a1, void *lpsrc)
{
  sub_1008E3328(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008E38E0()
{
  return 1;
}

void *sub_1008E38E8@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.HorizWithUncertaintyVelocity");
}

void sub_1008E38F8(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      int v6 = *(_DWORD *)(a2 + 8);
      a1[9] |= 1u;
      a1[2] = v6;
      int v4 = *(_DWORD *)(a2 + 36);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_14;
      }
    }
    else if ((*(unsigned char *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 12);
    a1[9] |= 2u;
    a1[3] = v7;
    int v4 = *(_DWORD *)(a2 + 36);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_15;
    }
LABEL_14:
    int v8 = *(_DWORD *)(a2 + 16);
    a1[9] |= 4u;
    a1[4] = v8;
    int v4 = *(_DWORD *)(a2 + 36);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_16;
    }
LABEL_15:
    int v9 = *(_DWORD *)(a2 + 20);
    a1[9] |= 8u;
    a1[5] = v9;
    int v4 = *(_DWORD *)(a2 + 36);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        return;
      }
      goto LABEL_10;
    }
LABEL_16:
    int v10 = *(_DWORD *)(a2 + 24);
    a1[9] |= 0x10u;
    a1[6] = v10;
    if ((*(_DWORD *)(a2 + 36) & 0x20) == 0) {
      return;
    }
LABEL_10:
    int v5 = *(_DWORD *)(a2 + 28);
    a1[9] |= 0x20u;
    a1[7] = v5;
  }
}

void sub_1008E3A2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008E3A44(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D16E0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008E3A64(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D16E0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008E3AB8()
{
}

uint64_t sub_1008E3B0C(uint64_t result)
{
  if (*(unsigned char *)(result + 36))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_1008E3B24(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  int v7 = a1 + 4;
  int v8 = a1 + 5;
  int v9 = a1 + 6;
  int v10 = a1 + 7;
  while (2)
  {
    int v11 = (char *)*((void *)this + 1);
    if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v11;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v11 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v15 < v14 && (*v15 & 0x80000000) == 0)
        {
          *int v5 = *v15;
          int v16 = v15 + 1;
          *((void *)this + 1) = v16;
LABEL_28:
          a1[9] |= 1u;
          if ((unint64_t)v16 < v14 && *v16 == 16)
          {
            unsigned int v17 = v16 + 1;
            *((void *)this + 1) = v17;
            goto LABEL_31;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (result)
        {
          int v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
          goto LABEL_28;
        }
        break;
      case 2u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        unsigned int v17 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
LABEL_31:
        if ((unint64_t)v17 >= v14 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          unsigned int v22 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v17;
          unsigned int v22 = v17 + 1;
          *((void *)this + 1) = v22;
        }
        a1[9] |= 2u;
        if ((unint64_t)v22 >= v14 || *v22 != 24) {
          continue;
        }
        int v18 = v22 + 1;
        *((void *)this + 1) = v18;
LABEL_39:
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v23 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *int v7 = *v18;
          int v23 = v18 + 1;
          *((void *)this + 1) = v23;
        }
        a1[9] |= 4u;
        if ((unint64_t)v23 >= v14 || *v23 != 32) {
          continue;
        }
        BOOL v19 = v23 + 1;
        *((void *)this + 1) = v19;
LABEL_47:
        if ((unint64_t)v19 >= v14 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v24 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v19;
          int v24 = v19 + 1;
          *((void *)this + 1) = v24;
        }
        a1[9] |= 8u;
        if ((unint64_t)v24 >= v14 || *v24 != 40) {
          continue;
        }
        int v20 = v24 + 1;
        *((void *)this + 1) = v20;
LABEL_55:
        if ((unint64_t)v20 >= v14 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          uint64_t v25 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *int v9 = *v20;
          uint64_t v25 = v20 + 1;
          *((void *)this + 1) = v25;
        }
        a1[9] |= 0x10u;
        if ((unint64_t)v25 >= v14 || *v25 != 48) {
          continue;
        }
        unsigned int v21 = v25 + 1;
        *((void *)this + 1) = v21;
LABEL_63:
        if ((unint64_t)v21 >= v14 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!result) {
            return result;
          }
          unsigned int v26 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *int v10 = *v21;
          unsigned int v26 = (unsigned __int8 *)(v21 + 1);
          *((void *)this + 1) = v26;
        }
        a1[9] |= 0x20u;
        if (v26 != (unsigned __int8 *)v14 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_39;
      case 4u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        BOOL v19 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_47;
      case 5u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_55;
      case 6u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        unsigned int v21 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_63;
      default:
        int v13 = TagFallback & 7;
LABEL_22:
        if (v13 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

int *sub_1008E3EDC(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  int v6 = result[9];
  if (v6)
  {
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    int v6 = v5[9];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  int v6 = v5[9];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  int v6 = v5[9];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_12:
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
    if ((v5[9] & 0x20) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_11:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  int v6 = v5[9];
  if ((v6 & 0x10) != 0) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v6 & 0x20) == 0) {
    return result;
  }
LABEL_13:
  int v7 = v5[7];

  return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v7, a2, a4);
}

uint64_t sub_1008E3FBC(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_35;
  }
  if (*(unsigned char *)(a1 + 36))
  {
    int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 36);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 36) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 36);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      int v9 = 2;
    }
    uint64_t v4 = (v9 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_16:
      if ((v3 & 0x10) == 0) {
        goto LABEL_17;
      }
      goto LABEL_27;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 36);
  }
  else
  {
    int v11 = 2;
  }
  uint64_t v4 = (v11 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_17:
    if ((v3 & 0x20) == 0) {
      goto LABEL_35;
    }
    goto LABEL_31;
  }
LABEL_27:
  unint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 36);
  }
  else
  {
    int v13 = 2;
  }
  uint64_t v4 = (v13 + v4);
  if ((v3 & 0x20) != 0)
  {
LABEL_31:
    unint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if (v14 >= 0x80) {
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2) + 1;
    }
    else {
      int v15 = 2;
    }
    uint64_t v4 = (v15 + v4);
  }
LABEL_35:
  *(_DWORD *)(a1 + 32) = v4;
  return v4;
}

void sub_1008E40FC(_DWORD *a1, void *lpsrc)
{
  sub_1008E38F8(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008E4184()
{
  return 1;
}

void *sub_1008E418C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.HorizWithVertUncertaintyVelocity");
}

void sub_1008E419C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 44);
  if (!(_BYTE)v4) {
    return;
  }
  if ((*(unsigned char *)(a2 + 44) & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 44) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_14:
    *(_DWORD *)(a1 + 44) |= 2u;
    int v7 = *(_DWORD **)(a1 + 16);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = *(void *)(a2 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_10248A5A0 + 16);
    }
    sub_1008E2C58(v7, v8);
    int v4 = *(_DWORD *)(a2 + 44);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_24;
    }
    goto LABEL_19;
  }
  *(_DWORD *)(a1 + 44) |= 1u;
  int v5 = *(_DWORD **)(a1 + 8);
  if (!v5) {
    operator new();
  }
  uint64_t v6 = *(void *)(a2 + 8);
  if (!v6) {
    uint64_t v6 = *(void *)(qword_10248A5A0 + 8);
  }
  sub_1008E2784(v5, v6);
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 2) != 0) {
    goto LABEL_14;
  }
LABEL_6:
  if ((v4 & 4) == 0) {
    goto LABEL_7;
  }
LABEL_19:
  *(_DWORD *)(a1 + 44) |= 4u;
  int v9 = *(_DWORD **)(a1 + 24);
  if (!v9) {
    operator new();
  }
  uint64_t v10 = *(void *)(a2 + 24);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_10248A5A0 + 24);
  }
  sub_1008E3328(v9, v10);
  if ((*(_DWORD *)(a2 + 44) & 8) != 0)
  {
LABEL_24:
    *(_DWORD *)(a1 + 44) |= 8u;
    int v11 = *(_DWORD **)(a1 + 32);
    if (!v11) {
      operator new();
    }
    uint64_t v12 = *(void *)(a2 + 32);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_10248A5A0 + 32);
    }
    sub_1008E38F8(v11, v12);
  }
}

void sub_1008E43EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1008E4404(void *result)
{
  if ((void *)qword_10248A5A0 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[3];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t result = (void *)v1[4];
    if (result)
    {
      int v5 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v5();
    }
  }
  return result;
}

void sub_1008E44FC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D1758;
  sub_1008E4404(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008E4550(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D1758;
  sub_1008E4404(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008E45B8()
{
}

uint64_t sub_1008E4610(uint64_t result)
{
  LOBYTE(v1) = *(unsigned char *)(result + 44);
  if ((_BYTE)v1)
  {
    if (*(unsigned char *)(result + 44))
    {
      uint64_t v2 = *(void *)(result + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 20)) {
          *(void *)(v2 + 8) = 0;
        }
        *(_DWORD *)(v2 + 20) = 0;
        int v1 = *(_DWORD *)(result + 44);
      }
    }
    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(result + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 28))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 28) = 0;
        int v1 = *(_DWORD *)(result + 44);
      }
    }
    if ((v1 & 4) != 0)
    {
      uint64_t v4 = *(void *)(result + 24);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 24))
        {
          *(void *)(v4 + 8) = 0;
          *(_DWORD *)(v4 + 16) = 0;
        }
        *(_DWORD *)(v4 + 24) = 0;
        int v1 = *(_DWORD *)(result + 44);
      }
    }
    if ((v1 & 8) != 0)
    {
      uint64_t v5 = *(void *)(result + 32);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 36))
        {
          *(void *)(v5 + 8) = 0;
          *(void *)(v5 + 16) = 0;
          *(void *)(v5 + 24) = 0;
        }
        *(_DWORD *)(v5 + 36) = 0;
      }
    }
  }
  *(_DWORD *)(result + 44) = 0;
  return result;
}

uint64_t sub_1008E46A4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 < *((void *)this + 2) && (*v5 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_6;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_19;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v8 = *(unsigned int **)(a1 + 8);
        if (!v8) {
          operator new();
        }
        unsigned int v45 = 0;
        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v45))return 0; {
        }
          }
        else
        {
          unsigned int v45 = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v45);
        if (!sub_1008E291C(v8, this, v13) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        unsigned int v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 != 18) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
        goto LABEL_31;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_19;
        }
LABEL_31:
        *(_DWORD *)(a1 + 44) |= 2u;
        int v18 = *(unsigned int **)(a1 + 16);
        if (!v18) {
          operator new();
        }
        unsigned int v45 = 0;
        BOOL v19 = (char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v45))return 0; {
        }
          }
        else
        {
          unsigned int v45 = *v19;
          *((void *)this + 1) = v19 + 1;
        }
        int v20 = *((_DWORD *)this + 14);
        int v21 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v20 + 1;
        if (v20 >= v21) {
          return 0;
        }
        int v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v45);
        if (!sub_1008E2E38(v18, this, v23) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v22);
        int v24 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v24, 1);
        int v25 = v24 - 1;
        if (v25 < 0 == v15) {
          *((_DWORD *)this + 14) = v25;
        }
        unsigned int v26 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v26 >= *((void *)this + 2) || *v26 != 26) {
          continue;
        }
        *((void *)this + 1) = v26 + 1;
LABEL_45:
        *(_DWORD *)(a1 + 44) |= 4u;
        int v27 = *(unsigned int **)(a1 + 24);
        if (!v27) {
          operator new();
        }
        unsigned int v45 = 0;
        int v28 = (char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v45))return 0; {
        }
          }
        else
        {
          unsigned int v45 = *v28;
          *((void *)this + 1) = v28 + 1;
        }
        int v29 = *((_DWORD *)this + 14);
        int v30 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v29 + 1;
        if (v29 >= v30) {
          return 0;
        }
        int v31 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v45);
        if (!sub_1008E34F0(v27, this, v32) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v31);
        int v33 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v33, 1);
        int v34 = v33 - 1;
        if (v34 < 0 == v15) {
          *((_DWORD *)this + 14) = v34;
        }
        unsigned int v35 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v35 >= *((void *)this + 2) || *v35 != 34) {
          continue;
        }
        *((void *)this + 1) = v35 + 1;
LABEL_59:
        *(_DWORD *)(a1 + 44) |= 8u;
        int v36 = *(unsigned int **)(a1 + 32);
        if (!v36) {
          operator new();
        }
        unsigned int v45 = 0;
        int v37 = (char *)*((void *)this + 1);
        if ((unint64_t)v37 >= *((void *)this + 2) || *v37 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v45))return 0; {
        }
          }
        else
        {
          unsigned int v45 = *v37;
          *((void *)this + 1) = v37 + 1;
        }
        int v38 = *((_DWORD *)this + 14);
        int v39 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v38 + 1;
        if (v38 >= v39) {
          return 0;
        }
        int v40 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v45);
        if (!sub_1008E3B24(v36, this, v41) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v40);
        int v42 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v42, 1);
        int v43 = v42 - 1;
        if (v43 < 0 == v15) {
          *((_DWORD *)this + 14) = v43;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_45;
        }
        goto LABEL_19;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_19;
        }
        goto LABEL_59;
      default:
        int v7 = TagFallback & 7;
LABEL_19:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1008E4BFC(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 44);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_10248A5A0 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_10248A5A0 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_12:
  uint64_t v9 = *(void *)(v5 + 24);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_10248A5A0 + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  if ((*(_DWORD *)(v5 + 44) & 8) != 0)
  {
LABEL_15:
    uint64_t v10 = *(void *)(v5 + 32);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_10248A5A0 + 32);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  }
  return result;
}

uint64_t sub_1008E4CE4(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 44);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_33;
  }
  if ((*(unsigned char *)(a1 + 44) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 44) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_10248A5A0 + 8);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008E2B28(v5, a2);
  int v7 = (int)v6;
  if (v6 >= 0x80) {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
  }
  else {
    int v8 = 1;
  }
  uint64_t v4 = (v7 + v8 + 1);
  int v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_10248A5A0 + 16);
    }
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008E31A0(v9, a2);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    }
    else {
      int v12 = 1;
    }
    uint64_t v4 = (v4 + v11 + v12 + 1);
    int v3 = *(_DWORD *)(a1 + 44);
  }
LABEL_18:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_33;
    }
    goto LABEL_27;
  }
  uint64_t v13 = *(void *)(a1 + 24);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_10248A5A0 + 24);
  }
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008E37A0(v13, a2);
  int v15 = (int)v14;
  if (v14 >= 0x80) {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
  }
  else {
    int v16 = 1;
  }
  uint64_t v4 = (v4 + v15 + v16 + 1);
  if ((*(_DWORD *)(a1 + 44) & 8) != 0)
  {
LABEL_27:
    uint64_t v17 = *(void *)(a1 + 32);
    if (!v17) {
      uint64_t v17 = *(void *)(qword_10248A5A0 + 32);
    }
    int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008E3FBC(v17, a2);
    int v20 = (int)v18;
    if (v18 >= 0x80) {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, v19);
    }
    else {
      int v21 = 1;
    }
    uint64_t v4 = (v4 + v20 + v21 + 1);
  }
LABEL_33:
  *(_DWORD *)(a1 + 40) = v4;
  return v4;
}

void sub_1008E4E50(uint64_t a1, void *lpsrc)
{
  sub_1008E419C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008E4ED8()
{
  return 1;
}

void *sub_1008E4EE0@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.VelocityInfo");
}

void sub_1008E4EF0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      unsigned int v5 = *(_DWORD *)(a2 + 16);
      if (v5 >= 6) {
        sub_101A735FC();
      }
      *(_DWORD *)(a1 + 24) |= 1u;
      *(_DWORD *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 24) |= 2u;
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_10248A5A8 + 8);
      }
      sub_1008E419C(v6, v7);
    }
  }
}

void sub_1008E5008(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008E5020(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022D17D0;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_10248A5A8 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008E50B0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008E5020(a1);

  operator delete();
}

void sub_1008E50E8()
{
}

uint64_t sub_1008E5138(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(unsigned char *)(result + 24);
  if (v2)
  {
    *(_DWORD *)(result + 16) = 0;
    if ((v2 & 2) != 0)
    {
      uint64_t result = *(void *)(result + 8);
      if (result) {
        uint64_t result = sub_1008E4610(result);
      }
    }
  }
  *(_DWORD *)(v1 + 24) = 0;
  return result;
}

uint64_t sub_1008E5178(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        unsigned int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_15;
        }
        unsigned int v21 = 0;
        int v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
          if (!result) {
            return result;
          }
          unsigned int v9 = v21;
        }
        else
        {
          unsigned int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
        }
        if (v9 <= 5)
        {
          *(_DWORD *)(a1 + 24) |= 1u;
          *(_DWORD *)(a1 + 16) = v9;
        }
        int v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 18)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_25;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        int v7 = TagFallback & 7;
        goto LABEL_15;
      }
      int v7 = TagFallback & 7;
      if (v7 == 2) {
        break;
      }
LABEL_15:
      if (v7 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
LABEL_25:
    *(_DWORD *)(a1 + 24) |= 2u;
    uint64_t v12 = *(void *)(a1 + 8);
    if (!v12) {
      operator new();
    }
    unsigned int v22 = 0;
    uint64_t v13 = (char *)*((void *)this + 1);
    if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22)) {
        return 0;
      }
    }
    else
    {
      unsigned int v22 = *v13;
      *((void *)this + 1) = v13 + 1;
    }
    int v14 = *((_DWORD *)this + 14);
    int v15 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v14 + 1;
    if (v14 >= v15) {
      return 0;
    }
    int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v22);
    if (!sub_1008E46A4(v12, this, v17) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
    int v18 = *((_DWORD *)this + 14);
    BOOL v19 = __OFSUB__(v18, 1);
    int v20 = v18 - 1;
    if (v20 < 0 == v19) {
      *((_DWORD *)this + 14) = v20;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_1008E53DC(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 24) & 2) == 0) {
      return result;
    }
  }
  else if ((v6 & 2) == 0)
  {
    return result;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248A5A8 + 8);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
}

uint64_t sub_1008E545C(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 24);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 24))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
      if ((v5 & 0x80000000) != 0)
      {
        uint64_t v4 = 11;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
      else if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 24) & 2) == 0) {
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
        goto LABEL_19;
      }
    }
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10248A5A8 + 8);
    }
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008E4CE4(v6, a2);
    int v9 = (int)v7;
    if (v7 >= 0x80) {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, v8);
    }
    else {
      int v10 = 1;
    }
    uint64_t v4 = (v4 + v9 + v10 + 1);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_1008E5524(uint64_t a1, void *lpsrc)
{
  sub_1008E4EF0(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008E55AC()
{
  return 1;
}

void *sub_1008E55B4@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.VelocityEstimate");
}

void sub_1008E55C4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 64);
  if (!(_BYTE)v4) {
    return;
  }
  if (*(unsigned char *)(a2 + 64))
  {
    unsigned int v5 = *(_DWORD *)(a2 + 8);
    if (v5 >= 9) {
      sub_101A73628();
    }
    *(_DWORD *)(a1 + 64) |= 1u;
    *(_DWORD *)(a1 + 8) = v5;
    int v4 = *(_DWORD *)(a2 + 64);
  }
  if ((v4 & 2) != 0)
  {
    int v7 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 64) |= 2u;
    *(_DWORD *)(a1 + 12) = v7;
    int v4 = *(_DWORD *)(a2 + 64);
    if ((v4 & 4) == 0)
    {
LABEL_9:
      if ((v4 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_22;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_9;
  }
  *(_DWORD *)(a1 + 64) |= 4u;
  unsigned int v8 = *(_DWORD **)(a1 + 16);
  if (!v8) {
    operator new();
  }
  uint64_t v9 = *(void *)(a2 + 16);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_10248A5B0 + 16);
  }
  sub_1008D4334(v8, v9);
  int v4 = *(_DWORD *)(a2 + 64);
  if ((v4 & 8) == 0)
  {
LABEL_10:
    if ((v4 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_22:
  *(_DWORD *)(a1 + 64) |= 8u;
  uint64_t v10 = *(void *)(a1 + 24);
  if (!v10) {
    operator new();
  }
  uint64_t v11 = *(void *)(a2 + 24);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_10248A5B0 + 24);
  }
  sub_1008D8618(v10, v11);
  int v4 = *(_DWORD *)(a2 + 64);
  if ((v4 & 0x10) == 0)
  {
LABEL_11:
    if ((v4 & 0x20) == 0) {
      goto LABEL_12;
    }
LABEL_32:
    *(_DWORD *)(a1 + 64) |= 0x20u;
    uint64_t v14 = *(void *)(a1 + 40);
    if (!v14) {
      operator new();
    }
    uint64_t v15 = *(void *)(a2 + 40);
    if (!v15) {
      uint64_t v15 = *(void *)(qword_10248A5B0 + 40);
    }
    sub_1008E20A0(v14, v15);
    int v4 = *(_DWORD *)(a2 + 64);
    if ((v4 & 0x40) == 0)
    {
LABEL_13:
      if ((v4 & 0x80) == 0) {
        return;
      }
      goto LABEL_14;
    }
    goto LABEL_37;
  }
LABEL_27:
  *(_DWORD *)(a1 + 64) |= 0x10u;
  uint64_t v12 = *(_DWORD **)(a1 + 32);
  if (!v12) {
    operator new();
  }
  uint64_t v13 = *(void *)(a2 + 32);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_10248A5B0 + 32);
  }
  sub_1008DCA44(v12, v13);
  int v4 = *(_DWORD *)(a2 + 64);
  if ((v4 & 0x20) != 0) {
    goto LABEL_32;
  }
LABEL_12:
  if ((v4 & 0x40) == 0) {
    goto LABEL_13;
  }
LABEL_37:
  *(_DWORD *)(a1 + 64) |= 0x40u;
  uint64_t v16 = *(void *)(a1 + 48);
  if (!v16) {
    operator new();
  }
  uint64_t v17 = *(void *)(a2 + 48);
  if (!v17) {
    uint64_t v17 = *(void *)(qword_10248A5B0 + 48);
  }
  sub_1008E4EF0(v16, v17);
  if ((*(_DWORD *)(a2 + 64) & 0x80) != 0)
  {
LABEL_14:
    int v6 = *(_DWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 64) |= 0x80u;
    *(_DWORD *)(a1 + 56) = v6;
  }
}

void sub_1008E5904(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1008E591C(void *result)
{
  if ((void *)qword_10248A5B0 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[3];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[4];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = v1[5];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t result = (void *)v1[6];
    if (result)
    {
      int v6 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v6();
    }
  }
  return result;
}

void sub_1008E5A40(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D1848;
  sub_1008E591C(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008E5A94(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D1848;
  sub_1008E591C(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

uint64_t sub_1008E5AFC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10248A5B0;
  if (!qword_10248A5B0)
  {
    sub_1008C4C78(0, a2, a3, a4);
    return qword_10248A5B0;
  }
  return result;
}

void sub_1008E5B2C()
{
}

uint64_t sub_1008E5B88(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(unsigned char *)(result + 64);
  if ((_BYTE)v2)
  {
    *(void *)(result + 8) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t v3 = *(void *)(result + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 24))
        {
          *(void *)(v3 + 8) = 0;
          *(_DWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 24) = 0;
        int v2 = *(_DWORD *)(result + 64);
      }
    }
    if ((v2 & 8) != 0)
    {
      uint64_t result = *(void *)(result + 24);
      if (result)
      {
        uint64_t result = sub_1008D88E4(result);
        int v2 = *(_DWORD *)(v1 + 64);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      uint64_t v4 = *(void *)(v1 + 32);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 36))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
          *(void *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 36) = 0;
        int v2 = *(_DWORD *)(v1 + 64);
      }
    }
    if ((v2 & 0x20) != 0)
    {
      uint64_t result = *(void *)(v1 + 40);
      if (result)
      {
        uint64_t result = sub_1008E22F0(result);
        int v2 = *(_DWORD *)(v1 + 64);
      }
    }
    if ((v2 & 0x40) != 0)
    {
      uint64_t result = *(void *)(v1 + 48);
      if (result) {
        uint64_t result = sub_1008E5138(result);
      }
    }
    *(_DWORD *)(v1 + 56) = 0;
  }
  *(_DWORD *)(v1 + 64) = 0;
  return result;
}

uint64_t sub_1008E5C3C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 < *((void *)this + 2) && (*v5 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_6;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        unsigned int v67 = 0;
        unsigned int v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v67);
          if (!result) {
            return result;
          }
          unsigned int v9 = v67;
        }
        else
        {
          unsigned int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
        }
        if (v9 <= 8)
        {
          *(_DWORD *)(a1 + 64) |= 1u;
          *(_DWORD *)(a1 + 8) = v9;
        }
        uint64_t v16 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v16 < v10 && *v16 == 16)
        {
          uint64_t v11 = v16 + 1;
          *((void *)this + 1) = v11;
          goto LABEL_36;
        }
        continue;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        uint64_t v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_36:
        unsigned int v67 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v67);
          if (!result) {
            return result;
          }
          unsigned int v17 = v67;
          int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v17 = *v11;
          int v18 = v11 + 1;
          *((void *)this + 1) = v18;
        }
        *(_DWORD *)(a1 + 12) = v17;
        int v12 = *(_DWORD *)(a1 + 64) | 2;
        *(_DWORD *)(a1 + 64) = v12;
        if ((unint64_t)v18 >= v10 || *v18 != 26) {
          continue;
        }
        *((void *)this + 1) = v18 + 1;
LABEL_44:
        *(_DWORD *)(a1 + 64) = v12 | 4;
        BOOL v19 = *(_DWORD **)(a1 + 16);
        if (!v19) {
          operator new();
        }
        unsigned int v67 = 0;
        int v20 = (char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v67))return 0; {
        }
          }
        else
        {
          unsigned int v67 = *v20;
          *((void *)this + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)this + 14);
        int v22 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v21 + 1;
        if (v21 >= v22) {
          return 0;
        }
        int v23 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v67);
        if (!sub_1008D4508(v19, this, v24) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v23);
        int v25 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v25, 1);
        int v27 = v25 - 1;
        if (v27 < 0 == v26) {
          *((_DWORD *)this + 14) = v27;
        }
        int v28 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 != 34) {
          continue;
        }
        *((void *)this + 1) = v28 + 1;
LABEL_58:
        *(_DWORD *)(a1 + 64) |= 8u;
        uint64_t v29 = *(void *)(a1 + 24);
        if (!v29) {
          operator new();
        }
        unsigned int v67 = 0;
        int v30 = (char *)*((void *)this + 1);
        if ((unint64_t)v30 >= *((void *)this + 2) || *v30 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v67))return 0; {
        }
          }
        else
        {
          unsigned int v67 = *v30;
          *((void *)this + 1) = v30 + 1;
        }
        int v31 = *((_DWORD *)this + 14);
        int v32 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v31 + 1;
        if (v31 >= v32) {
          return 0;
        }
        int v33 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v67);
        if (!sub_1008D891C(v29, this, v34) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v33);
        int v35 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v35, 1);
        int v36 = v35 - 1;
        if (v36 < 0 == v26) {
          *((_DWORD *)this + 14) = v36;
        }
        int v37 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v37 >= *((void *)this + 2) || *v37 != 42) {
          continue;
        }
        *((void *)this + 1) = v37 + 1;
LABEL_72:
        *(_DWORD *)(a1 + 64) |= 0x10u;
        int v38 = *(unsigned int **)(a1 + 32);
        if (!v38) {
          operator new();
        }
        unsigned int v67 = 0;
        int v39 = (char *)*((void *)this + 1);
        if ((unint64_t)v39 >= *((void *)this + 2) || *v39 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v67))return 0; {
        }
          }
        else
        {
          unsigned int v67 = *v39;
          *((void *)this + 1) = v39 + 1;
        }
        int v40 = *((_DWORD *)this + 14);
        int v41 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v40 + 1;
        if (v40 >= v41) {
          return 0;
        }
        int v42 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v67);
        if (!sub_1008DCC84(v38, this, v43) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v42);
        int v44 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v44, 1);
        int v45 = v44 - 1;
        if (v45 < 0 == v26) {
          *((_DWORD *)this + 14) = v45;
        }
        int v46 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v46 >= *((void *)this + 2) || *v46 != 50) {
          continue;
        }
        *((void *)this + 1) = v46 + 1;
LABEL_86:
        *(_DWORD *)(a1 + 64) |= 0x20u;
        uint64_t v47 = *(void *)(a1 + 40);
        if (!v47) {
          operator new();
        }
        unsigned int v67 = 0;
        int v48 = (char *)*((void *)this + 1);
        if ((unint64_t)v48 >= *((void *)this + 2) || *v48 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v67))return 0; {
        }
          }
        else
        {
          unsigned int v67 = *v48;
          *((void *)this + 1) = v48 + 1;
        }
        int v49 = *((_DWORD *)this + 14);
        int v50 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v49 + 1;
        if (v49 >= v50) {
          return 0;
        }
        int v51 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v67);
        if (!sub_1008E2330(v47, this, v52) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v51);
        int v53 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v53, 1);
        int v54 = v53 - 1;
        if (v54 < 0 == v26) {
          *((_DWORD *)this + 14) = v54;
        }
        int v55 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v55 >= *((void *)this + 2) || *v55 != 58) {
          continue;
        }
        *((void *)this + 1) = v55 + 1;
LABEL_100:
        *(_DWORD *)(a1 + 64) |= 0x40u;
        uint64_t v56 = *(void *)(a1 + 48);
        if (!v56) {
          operator new();
        }
        unsigned int v67 = 0;
        uint64_t v57 = (char *)*((void *)this + 1);
        if ((unint64_t)v57 >= *((void *)this + 2) || *v57 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v67))return 0; {
        }
          }
        else
        {
          unsigned int v67 = *v57;
          *((void *)this + 1) = v57 + 1;
        }
        int v58 = *((_DWORD *)this + 14);
        int v59 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v58 + 1;
        if (v58 >= v59) {
          return 0;
        }
        int v60 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v67);
        if (!sub_1008E5178(v56, this, v61) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v60);
        int v62 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v62, 1);
        int v63 = v62 - 1;
        if (v63 < 0 == v26) {
          *((_DWORD *)this + 14) = v63;
        }
        int v64 = (unsigned char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((unint64_t)v64 < v13 && *v64 == 64)
        {
          uint64_t v14 = v64 + 1;
          *((void *)this + 1) = v14;
LABEL_114:
          unsigned int v67 = 0;
          if ((unint64_t)v14 >= v13 || *v14 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v67);
            if (!result) {
              return result;
            }
            unsigned int v65 = v67;
            __int16 v66 = (unsigned __int8 *)*((void *)this + 1);
            unint64_t v13 = *((void *)this + 2);
          }
          else
          {
            unsigned int v65 = *v14;
            __int16 v66 = (unsigned __int8 *)(v14 + 1);
            *((void *)this + 1) = v66;
          }
          *(_DWORD *)(a1 + 56) = v65;
          *(_DWORD *)(a1 + 64) |= 0x80u;
          if (v66 == (unsigned __int8 *)v13
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
        }
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_25;
        }
        int v12 = *(_DWORD *)(a1 + 64);
        goto LABEL_44;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_58;
        }
        goto LABEL_25;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_72;
        }
        goto LABEL_25;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_86;
        }
        goto LABEL_25;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_100;
        }
        goto LABEL_25;
      case 8u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_114;
      default:
        int v7 = TagFallback & 7;
LABEL_25:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1008E6444(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 64);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), (int)a2, a4);
    int v6 = *(_DWORD *)(v5 + 64);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_12:
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248A5B0 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_15:
  uint64_t v8 = *(void *)(v5 + 24);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_10248A5B0 + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_18:
  uint64_t v9 = *(void *)(v5 + 32);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_10248A5B0 + 32);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_21:
  uint64_t v10 = *(void *)(v5 + 40);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_10248A5B0 + 40);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      return result;
    }
    goto LABEL_27;
  }
LABEL_24:
  uint64_t v11 = *(void *)(v5 + 48);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_10248A5B0 + 48);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v11, a2, a4);
  if ((*(_DWORD *)(v5 + 64) & 0x80) != 0)
  {
LABEL_27:
    int v12 = *(_DWORD *)(v5 + 56);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v12, (int)a2, a4);
  }
  return result;
}

uint64_t sub_1008E65AC(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 64);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_61;
  }
  if ((*(unsigned char *)(a1 + 64) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 64) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
  if ((v5 & 0x80000000) != 0)
  {
    int v6 = 10;
  }
  else if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    int v3 = *(_DWORD *)(a1 + 64);
  }
  else
  {
    int v6 = 1;
  }
  uint64_t v4 = (v6 + 1);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if ((v7 & 0x80000000) != 0)
    {
      int v8 = 10;
    }
    else if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      int v3 = *(_DWORD *)(a1 + 64);
    }
    else
    {
      int v8 = 1;
    }
    uint64_t v4 = (v4 + v8 + 1);
  }
LABEL_18:
  if ((v3 & 4) != 0)
  {
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_10248A5B0 + 16);
    }
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D47D0(v9, a2);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    }
    else {
      int v12 = 1;
    }
    uint64_t v4 = (v4 + v11 + v12 + 1);
    int v3 = *(_DWORD *)(a1 + 64);
    if ((v3 & 8) == 0)
    {
LABEL_20:
      if ((v3 & 0x10) == 0) {
        goto LABEL_21;
      }
      goto LABEL_37;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_20;
  }
  uint64_t v13 = *(void *)(a1 + 24);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_10248A5B0 + 24);
  }
  uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D8E80(v13, a2);
  int v15 = (int)v14;
  if (v14 >= 0x80) {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
  }
  else {
    int v16 = 1;
  }
  uint64_t v4 = (v4 + v15 + v16 + 1);
  int v3 = *(_DWORD *)(a1 + 64);
  if ((v3 & 0x10) == 0)
  {
LABEL_21:
    if ((v3 & 0x20) == 0) {
      goto LABEL_22;
    }
    goto LABEL_43;
  }
LABEL_37:
  uint64_t v17 = *(void *)(a1 + 32);
  if (!v17) {
    uint64_t v17 = *(void *)(qword_10248A5B0 + 32);
  }
  int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DD134(v17, a2);
  int v19 = (int)v18;
  if (v18 >= 0x80) {
    int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
  }
  else {
    int v20 = 1;
  }
  uint64_t v4 = (v4 + v19 + v20 + 1);
  int v3 = *(_DWORD *)(a1 + 64);
  if ((v3 & 0x20) == 0)
  {
LABEL_22:
    if ((v3 & 0x40) == 0) {
      goto LABEL_23;
    }
    goto LABEL_49;
  }
LABEL_43:
  uint64_t v21 = *(void *)(a1 + 40);
  if (!v21) {
    uint64_t v21 = *(void *)(qword_10248A5B0 + 40);
  }
  int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008E261C(v21, a2);
  int v23 = (int)v22;
  if (v22 >= 0x80) {
    int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, a2);
  }
  else {
    int v24 = 1;
  }
  uint64_t v4 = (v4 + v23 + v24 + 1);
  int v3 = *(_DWORD *)(a1 + 64);
  if ((v3 & 0x40) == 0)
  {
LABEL_23:
    if ((v3 & 0x80) == 0) {
      goto LABEL_61;
    }
    goto LABEL_55;
  }
LABEL_49:
  uint64_t v25 = *(void *)(a1 + 48);
  if (!v25) {
    uint64_t v25 = *(void *)(qword_10248A5B0 + 48);
  }
  BOOL v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008E545C(v25, a2);
  int v27 = (int)v26;
  if (v26 >= 0x80) {
    int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26, a2);
  }
  else {
    int v28 = 1;
  }
  uint64_t v4 = (v4 + v27 + v28 + 1);
  if ((*(_DWORD *)(a1 + 64) & 0x80) != 0)
  {
LABEL_55:
    uint64_t v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
    if ((v29 & 0x80000000) != 0)
    {
      int v30 = 11;
    }
    else if (v29 >= 0x80)
    {
      int v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29, a2) + 1;
    }
    else
    {
      int v30 = 2;
    }
    uint64_t v4 = (v30 + v4);
  }
LABEL_61:
  *(_DWORD *)(a1 + 60) = v4;
  return v4;
}

void sub_1008E680C(uint64_t a1, void *lpsrc)
{
  sub_1008E55C4(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008E6894()
{
  return 1;
}

void *sub_1008E689C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.PositionReport");
}

void sub_1008E68AC(_DWORD *a1, _DWORD *a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  int v4 = a2[12];
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    int v7 = a2[2];
    a1[12] |= 1u;
    a1[2] = v7;
    int v4 = a2[12];
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_18;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v8 = a2[3];
  a1[12] |= 2u;
  a1[3] = v8;
  int v4 = a2[12];
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  int v9 = a2[4];
  a1[12] |= 4u;
  a1[4] = v9;
  int v4 = a2[12];
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  int v10 = a2[5];
  a1[12] |= 8u;
  a1[5] = v10;
  int v4 = a2[12];
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_22:
    int v12 = a2[7];
    a1[12] |= 0x20u;
    a1[7] = v12;
    int v4 = a2[12];
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_23;
  }
LABEL_20:
  unsigned int v11 = a2[6];
  if (v11 >= 6) {
    sub_101A73654();
  }
  a1[12] |= 0x10u;
  a1[6] = v11;
  int v4 = a2[12];
  if ((v4 & 0x20) != 0) {
    goto LABEL_22;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_23:
  int v13 = a2[8];
  a1[12] |= 0x40u;
  a1[8] = v13;
  int v4 = a2[12];
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = a2[9];
    a1[12] |= 0x80u;
    a1[9] = v5;
    int v4 = a2[12];
  }
LABEL_13:
  if ((v4 & 0x100) != 0)
  {
    int v6 = a2[10];
    a1[12] |= 0x100u;
    a1[10] = v6;
  }
}

void sub_1008E6A4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008E6A64(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D18C0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008E6A84(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D18C0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008E6AD8()
{
}

uint64_t sub_1008E6B30(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 48);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0) {
    *(_DWORD *)(result + 40) = 0;
  }
  *(_DWORD *)(result + 48) = 0;
  return result;
}

uint64_t sub_1008E6B5C(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 3;
  int v6 = a1 + 4;
  int v7 = a1 + 5;
  int v8 = a1 + 7;
  int v9 = a1 + 8;
  int v10 = a1 + 9;
  unsigned int v11 = a1 + 10;
  while (2)
  {
    int v12 = (char *)*((void *)this + 1);
    if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v12;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v12 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        unsigned int v38 = 0;
        int v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v16 < v15 && (*v16 & 0x80000000) == 0)
        {
          unsigned int v17 = *v16;
          int v18 = v16 + 1;
          *((void *)this + 1) = v18;
LABEL_34:
          a1[2] = v17;
          a1[12] |= 1u;
          if ((unint64_t)v18 < v15 && *v18 == 16)
          {
            int v19 = v18 + 1;
            *((void *)this + 1) = v19;
            goto LABEL_37;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v38);
        if (result)
        {
          unsigned int v17 = v38;
          int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
          goto LABEL_34;
        }
        break;
      case 2u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
LABEL_37:
        if ((unint64_t)v19 >= v15 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v28 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v5 = *v19;
          int v28 = v19 + 1;
          *((void *)this + 1) = v28;
        }
        a1[12] |= 2u;
        if ((unint64_t)v28 >= v15 || *v28 != 24) {
          continue;
        }
        int v20 = v28 + 1;
        *((void *)this + 1) = v20;
LABEL_45:
        if ((unint64_t)v20 >= v15 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          uint64_t v29 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v20;
          uint64_t v29 = v20 + 1;
          *((void *)this + 1) = v29;
        }
        a1[12] |= 4u;
        if ((unint64_t)v29 >= v15 || *v29 != 32) {
          continue;
        }
        uint64_t v21 = v29 + 1;
        *((void *)this + 1) = v21;
LABEL_53:
        if ((unint64_t)v21 >= v15 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v30 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v7 = *v21;
          int v30 = v21 + 1;
          *((void *)this + 1) = v30;
        }
        a1[12] |= 8u;
        if ((unint64_t)v30 >= v15 || *v30 != 40) {
          continue;
        }
        int v22 = v30 + 1;
        *((void *)this + 1) = v22;
LABEL_61:
        unsigned int v39 = 0;
        if ((unint64_t)v22 >= v15 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v39);
          if (!result) {
            return result;
          }
          unsigned int v31 = v39;
        }
        else
        {
          unsigned int v31 = *v22;
          *((void *)this + 1) = v22 + 1;
        }
        if (v31 <= 5)
        {
          a1[12] |= 0x10u;
          a1[6] = v31;
        }
        int v32 = (unsigned char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        if ((unint64_t)v32 >= v23 || *v32 != 48) {
          continue;
        }
        int v24 = v32 + 1;
        *((void *)this + 1) = v24;
LABEL_71:
        if ((unint64_t)v24 >= v23 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v33 = (unsigned char *)*((void *)this + 1);
          unint64_t v23 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v24;
          int v33 = v24 + 1;
          *((void *)this + 1) = v33;
        }
        a1[12] |= 0x20u;
        if ((unint64_t)v33 >= v23 || *v33 != 56) {
          continue;
        }
        uint64_t v25 = v33 + 1;
        *((void *)this + 1) = v25;
LABEL_79:
        if ((unint64_t)v25 >= v23 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          unsigned int v34 = (unsigned char *)*((void *)this + 1);
          unint64_t v23 = *((void *)this + 2);
        }
        else
        {
          *int v9 = *v25;
          unsigned int v34 = v25 + 1;
          *((void *)this + 1) = v34;
        }
        a1[12] |= 0x40u;
        if ((unint64_t)v34 >= v23 || *v34 != 64) {
          continue;
        }
        BOOL v26 = v34 + 1;
        *((void *)this + 1) = v26;
LABEL_87:
        if ((unint64_t)v26 >= v23 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!result) {
            return result;
          }
          int v35 = (unsigned char *)*((void *)this + 1);
          unint64_t v23 = *((void *)this + 2);
        }
        else
        {
          *int v10 = *v26;
          int v35 = v26 + 1;
          *((void *)this + 1) = v35;
        }
        a1[12] |= 0x80u;
        if ((unint64_t)v35 >= v23 || *v35 != 72) {
          continue;
        }
        int v27 = v35 + 1;
        *((void *)this + 1) = v27;
LABEL_95:
        if ((unint64_t)v27 >= v23 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
          if (!result) {
            return result;
          }
          int v36 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v23 = *((void *)this + 2);
        }
        else
        {
          *unsigned int v11 = *v27;
          int v36 = (unsigned __int8 *)(v27 + 1);
          *((void *)this + 1) = v36;
        }
        a1[12] |= 0x100u;
        if (v36 != (unsigned __int8 *)v23 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_45;
      case 4u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        uint64_t v21 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_53;
      case 5u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v22 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_61;
      case 6u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v24 = (char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        goto LABEL_71;
      case 7u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        uint64_t v25 = (char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        goto LABEL_79;
      case 8u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        BOOL v26 = (char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        goto LABEL_87;
      case 9u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v27 = (char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        goto LABEL_95;
      default:
        int v14 = TagFallback & 7;
LABEL_28:
        if (v14 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

int *sub_1008E709C(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  int v6 = result[12];
  if (v6)
  {
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    int v6 = v5[12];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  int v6 = v5[12];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  int v6 = v5[12];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  int v6 = v5[12];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  int v6 = v5[12];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
  int v6 = v5[12];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
LABEL_18:
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[9], a2, a4);
    if ((v5[12] & 0x100) == 0) {
      return result;
    }
    goto LABEL_19;
  }
LABEL_17:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], a2, a4);
  int v6 = v5[12];
  if ((v6 & 0x80) != 0) {
    goto LABEL_18;
  }
LABEL_9:
  if ((v6 & 0x100) == 0) {
    return result;
  }
LABEL_19:
  int v7 = v5[10];

  return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v7, a2, a4);
}

uint64_t sub_1008E71D0(unsigned int *a1, unsigned int a2)
{
  unsigned int v3 = a1[12];
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    if ((v3 & 0x100) == 0) {
      goto LABEL_55;
    }
    goto LABEL_51;
  }
  if ((v3 & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_17;
    }
    goto LABEL_13;
  }
  int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[2];
  if ((v5 & 0x80000000) != 0)
  {
    int v6 = 10;
  }
  else if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    unsigned int v3 = a1[12];
  }
  else
  {
    int v6 = 1;
  }
  uint64_t v4 = (v6 + 1);
  if ((v3 & 2) != 0)
  {
LABEL_13:
    int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[3];
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
      unsigned int v3 = a1[12];
    }
    else
    {
      int v8 = 2;
    }
    uint64_t v4 = (v8 + v4);
  }
LABEL_17:
  if ((v3 & 4) != 0)
  {
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[4];
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      unsigned int v3 = a1[12];
    }
    else
    {
      int v10 = 2;
    }
    uint64_t v4 = (v10 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_19:
      if ((v3 & 0x10) == 0) {
        goto LABEL_20;
      }
      goto LABEL_33;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_19;
  }
  unsigned int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[5];
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
    unsigned int v3 = a1[12];
  }
  else
  {
    int v12 = 2;
  }
  uint64_t v4 = (v12 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_20:
    if ((v3 & 0x20) == 0) {
      goto LABEL_21;
    }
    goto LABEL_39;
  }
LABEL_33:
  int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[6];
  if ((v13 & 0x80000000) != 0)
  {
    int v14 = 11;
  }
  else if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    unsigned int v3 = a1[12];
  }
  else
  {
    int v14 = 2;
  }
  uint64_t v4 = (v14 + v4);
  if ((v3 & 0x20) == 0)
  {
LABEL_21:
    if ((v3 & 0x40) == 0) {
      goto LABEL_22;
    }
    goto LABEL_43;
  }
LABEL_39:
  unint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[7];
  if (v15 >= 0x80)
  {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    unsigned int v3 = a1[12];
  }
  else
  {
    int v16 = 2;
  }
  uint64_t v4 = (v16 + v4);
  if ((v3 & 0x40) == 0)
  {
LABEL_22:
    if ((v3 & 0x80) == 0) {
      goto LABEL_23;
    }
    goto LABEL_47;
  }
LABEL_43:
  unsigned int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[8];
  if (v17 >= 0x80)
  {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
    unsigned int v3 = a1[12];
  }
  else
  {
    int v18 = 2;
  }
  uint64_t v4 = (v18 + v4);
  if ((v3 & 0x80) == 0)
  {
LABEL_23:
    if ((v3 & 0x100) == 0) {
      goto LABEL_55;
    }
    goto LABEL_51;
  }
LABEL_47:
  int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[9];
  if (v19 >= 0x80)
  {
    int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
    unsigned int v3 = a1[12];
  }
  else
  {
    int v20 = 2;
  }
  uint64_t v4 = (v20 + v4);
  if ((v3 & 0x100) != 0)
  {
LABEL_51:
    uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[10];
    if (v21 >= 0x80) {
      int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2) + 1;
    }
    else {
      int v22 = 2;
    }
    uint64_t v4 = (v22 + v4);
  }
LABEL_55:
  a1[11] = v4;
  return v4;
}

void sub_1008E73B0(_DWORD *a1, _DWORD *lpsrc)
{
  sub_1008E68AC(a1, lpsrc);
}

uint64_t sub_1008E7438()
{
  return 1;
}

void *sub_1008E7440@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.GanssMeasurementElement");
}

void sub_1008E7450(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), *(_DWORD *)(a2 + 24) + a1[6]);
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      int v5 = *(_DWORD **)(*(void *)(a2 + 16) + 8 * v4);
      int v6 = a1[7];
      uint64_t v7 = (int)a1[6];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[8])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), v6 + 1);
          int v6 = a1[7];
        }
        a1[7] = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)a1 + 2);
      a1[6] = v7 + 1;
      sub_1008E68AC(*(_DWORD **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 24));
  }
  LOBYTE(v9) = *(unsigned char *)(a2 + 48);
  if ((_BYTE)v9)
  {
    if (*(unsigned char *)(a2 + 48))
    {
      int v11 = *(_DWORD *)(a2 + 8);
      a1[12] |= 1u;
      a1[2] = v11;
      int v9 = *(_DWORD *)(a2 + 48);
      if ((v9 & 2) == 0)
      {
LABEL_14:
        if ((v9 & 4) == 0) {
          return;
        }
        goto LABEL_15;
      }
    }
    else if ((*(unsigned char *)(a2 + 48) & 2) == 0)
    {
      goto LABEL_14;
    }
    int v12 = *(_DWORD *)(a2 + 12);
    a1[12] |= 2u;
    a1[3] = v12;
    if ((*(_DWORD *)(a2 + 48) & 4) == 0) {
      return;
    }
LABEL_15:
    int v10 = *(_DWORD *)(a2 + 40);
    a1[12] |= 4u;
    a1[10] = v10;
  }
}

void sub_1008E761C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008E7634(uint64_t *a1)
{
  *a1 = (uint64_t)off_1022D1938;
  sub_10016B2E8(a1 + 2);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_1008E7690(uint64_t *a1)
{
  sub_1008E7634(a1);

  operator delete();
}

void sub_1008E76C8()
{
}

uint64_t sub_1008E7720(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48))
  {
    *(void *)(a1 + 8) = 0;
    *(_DWORD *)(a1 + 40) = 0;
  }
  uint64_t result = sub_10026DEDC(a1 + 16);
  *(_DWORD *)(a1 + 48) = 0;
  return result;
}

uint64_t sub_1008E775C(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  uint64_t v7 = a1 + 10;
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4);
  while (1)
  {
    int v9 = (unsigned __int8 *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || (char)*v9 < 0) {
      break;
    }
    unint64_t TagFallback = *v9;
    *((_DWORD *)this + 8) = TagFallback;
    *((void *)this + 1) = v9 + 1;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v14 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v5 = *v13;
          int v14 = v13 + 1;
          *((void *)this + 1) = v14;
        }
        a1[12] |= 1u;
        if ((unint64_t)v14 < v12 && *v14 == 16)
        {
          unint64_t v15 = v14 + 1;
          *((void *)this + 1) = v15;
          goto LABEL_26;
        }
        continue;
      case 2u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        unint64_t v15 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
LABEL_26:
        if ((unint64_t)v15 >= v12 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v15;
          int v18 = v15 + 1;
          *((void *)this + 1) = v18;
        }
        a1[12] |= 2u;
        if ((unint64_t)v18 >= v12 || *v18 != 24) {
          continue;
        }
        int v16 = v18 + 1;
        *((void *)this + 1) = v16;
LABEL_34:
        if ((unint64_t)v16 >= v12 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v7 = *v16;
          int v19 = v16 + 1;
          *((void *)this + 1) = v19;
        }
        a1[12] |= 4u;
        if ((unint64_t)v19 >= v12 || *v19 != 34) {
          continue;
        }
        break;
      case 3u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_34;
      case 4u:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_18;
        }
        goto LABEL_42;
      default:
        int v11 = TagFallback & 7;
LABEL_18:
        if (v11 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
    do
    {
      *((void *)this + 1) = v19 + 1;
LABEL_42:
      int v20 = a1[7];
      uint64_t v21 = (int)a1[6];
      if ((int)v21 >= v20)
      {
        if (v20 == a1[8])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v8, v20 + 1);
          int v20 = a1[7];
        }
        a1[7] = v20 + 1;
        operator new();
      }
      uint64_t v22 = *((void *)a1 + 2);
      a1[6] = v21 + 1;
      unint64_t v23 = *(unsigned int **)(v22 + 8 * v21);
      unsigned int v33 = 0;
      int v24 = (char *)*((void *)this + 1);
      if ((unint64_t)v24 >= *((void *)this + 2) || *v24 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v33))return 0; {
      }
        }
      else
      {
        unsigned int v33 = *v24;
        *((void *)this + 1) = v24 + 1;
      }
      int v25 = *((_DWORD *)this + 14);
      int v26 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v25 + 1;
      if (v25 >= v26) {
        return 0;
      }
      int v27 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v33);
      if (!sub_1008E6B5C(v23, this, v28) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v27);
      int v29 = *((_DWORD *)this + 14);
      BOOL v30 = __OFSUB__(v29, 1);
      int v31 = v29 - 1;
      if (v31 < 0 == v30) {
        *((_DWORD *)this + 14) = v31;
      }
      int v19 = (unsigned char *)*((void *)this + 1);
      int v32 = (unsigned char *)*((void *)this + 2);
    }
    while (v19 < v32 && *v19 == 34);
    if (v19 == v32 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
  unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
  *((_DWORD *)this + 8) = TagFallback;
  if (TagFallback) {
    goto LABEL_7;
  }
  return 1;
}

uint64_t sub_1008E7B34(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 48);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  if ((*(_DWORD *)(v5 + 48) & 4) != 0) {
LABEL_4:
  }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 40), a2, a4);
LABEL_5:
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(*(void *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  return result;
}

uint64_t sub_1008E7BE8(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 48);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    goto LABEL_19;
  }
  if (*(unsigned char *)(a1 + 48))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 48);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      int v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    int v4 = 0;
    if ((*(unsigned char *)(a1 + 48) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 48);
  }
  else
  {
    int v7 = 2;
  }
  v4 += v7;
LABEL_14:
  if ((v3 & 4) != 0)
  {
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
    if (v8 >= 0x80) {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    }
    else {
      int v9 = 2;
    }
    v4 += v9;
  }
LABEL_19:
  int v10 = *(_DWORD *)(a1 + 24);
  uint64_t v11 = (v10 + v4);
  if (v10 >= 1)
  {
    uint64_t v12 = 0;
    do
    {
      int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008E71D0(*(unsigned int **)(*(void *)(a1 + 16)+ 8 * v12), a2);
      int v14 = (int)v13;
      if (v13 >= 0x80) {
        int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
      }
      else {
        int v15 = 1;
      }
      uint64_t v11 = (v14 + v11 + v15);
      ++v12;
    }
    while (v12 < *(int *)(a1 + 24));
  }
  *(_DWORD *)(a1 + 44) = v11;
  return v11;
}

void sub_1008E7CFC(_DWORD *a1, void *lpsrc)
{
  sub_1008E7450(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008E7D84()
{
  return 1;
}

void *sub_1008E7D8C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.GanssSignalMeasurementInfo");
}

void sub_1008E7D9C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      unsigned int v5 = *(_DWORD *)(a2 + 16);
      if (v5 >= 7) {
        sub_101A73680();
      }
      *(_DWORD *)(a1 + 24) |= 1u;
      *(_DWORD *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 24) |= 2u;
      int v6 = *(_DWORD **)(a1 + 8);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_10248A5C8 + 8);
      }
      sub_1008E7450(v6, v7);
    }
  }
}

void sub_1008E7EB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008E7ECC(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022D19B0;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_10248A5C8 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008E7F5C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008E7ECC(a1);

  operator delete();
}

void sub_1008E7F94()
{
}

uint64_t sub_1008E7FE4(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(unsigned char *)(result + 24);
  if (v2)
  {
    *(_DWORD *)(result + 16) = 0;
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = *(void *)(result + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 48))
        {
          *(void *)(v3 + 8) = 0;
          *(_DWORD *)(v3 + 40) = 0;
        }
        uint64_t result = sub_10026DEDC(v3 + 16);
        *(_DWORD *)(v3 + 48) = 0;
      }
    }
  }
  *(_DWORD *)(v1 + 24) = 0;
  return result;
}

uint64_t sub_1008E803C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        unsigned int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_15;
        }
        unsigned int v21 = 0;
        uint64_t v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
          if (!result) {
            return result;
          }
          unsigned int v9 = v21;
        }
        else
        {
          unsigned int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
        }
        if (v9 <= 6)
        {
          *(_DWORD *)(a1 + 24) |= 1u;
          *(_DWORD *)(a1 + 16) = v9;
        }
        uint64_t v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 18)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_25;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        int v7 = TagFallback & 7;
        goto LABEL_15;
      }
      int v7 = TagFallback & 7;
      if (v7 == 2) {
        break;
      }
LABEL_15:
      if (v7 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
LABEL_25:
    *(_DWORD *)(a1 + 24) |= 2u;
    uint64_t v12 = *(_DWORD **)(a1 + 8);
    if (!v12) {
      operator new();
    }
    unsigned int v22 = 0;
    int v13 = (char *)*((void *)this + 1);
    if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22)) {
        return 0;
      }
    }
    else
    {
      unsigned int v22 = *v13;
      *((void *)this + 1) = v13 + 1;
    }
    int v14 = *((_DWORD *)this + 14);
    int v15 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v14 + 1;
    if (v14 >= v15) {
      return 0;
    }
    int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v22);
    if (!sub_1008E775C(v12, this, v17) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
    int v18 = *((_DWORD *)this + 14);
    BOOL v19 = __OFSUB__(v18, 1);
    int v20 = v18 - 1;
    if (v20 < 0 == v19) {
      *((_DWORD *)this + 14) = v20;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_1008E82A0(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 24) & 2) == 0) {
      return result;
    }
  }
  else if ((v6 & 2) == 0)
  {
    return result;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248A5C8 + 8);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
}

uint64_t sub_1008E8320(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 24);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 24))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
      if ((v5 & 0x80000000) != 0)
      {
        uint64_t v4 = 11;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
      else if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 24) & 2) == 0) {
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
        goto LABEL_19;
      }
    }
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10248A5C8 + 8);
    }
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008E7BE8(v6, a2);
    int v9 = (int)v7;
    if (v7 >= 0x80) {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, v8);
    }
    else {
      int v10 = 1;
    }
    uint64_t v4 = (v4 + v9 + v10 + 1);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_1008E83E8(uint64_t a1, void *lpsrc)
{
  sub_1008E7D9C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008E8470()
{
  return 1;
}

void *sub_1008E8478@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.GanssMeasurementsForSingleGanss");
}

void sub_1008E8488(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 52);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 52))
    {
      unsigned int v5 = *(_DWORD *)(a2 + 8);
      if (v5 >= 6) {
        sub_101A736AC();
      }
      *(_DWORD *)(a1 + 52) |= 1u;
      *(_DWORD *)(a1 + 8) = v5;
      int v4 = *(_DWORD *)(a2 + 52);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 12);
      *(_DWORD *)(a1 + 52) |= 2u;
      *(_DWORD *)(a1 + 12) = v6;
      int v4 = *(_DWORD *)(a2 + 52);
      if ((v4 & 4) == 0)
      {
LABEL_9:
        if ((v4 & 8) == 0) {
          goto LABEL_10;
        }
        goto LABEL_17;
      }
    }
    else if ((v4 & 4) == 0)
    {
      goto LABEL_9;
    }
    int v7 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 52) |= 4u;
    *(_DWORD *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 52);
    if ((v4 & 8) == 0)
    {
LABEL_10:
      if ((v4 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_18;
    }
LABEL_17:
    int v8 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 52) |= 8u;
    *(_DWORD *)(a1 + 20) = v8;
    int v4 = *(_DWORD *)(a2 + 52);
    if ((v4 & 0x10) == 0)
    {
LABEL_11:
      if ((v4 & 0x20) == 0) {
        goto LABEL_12;
      }
      goto LABEL_19;
    }
LABEL_18:
    int v9 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 52) |= 0x10u;
    *(_DWORD *)(a1 + 32) = v9;
    int v4 = *(_DWORD *)(a2 + 52);
    if ((v4 & 0x20) == 0)
    {
LABEL_12:
      if ((v4 & 0x40) == 0) {
        goto LABEL_13;
      }
      goto LABEL_24;
    }
LABEL_19:
    *(_DWORD *)(a1 + 52) |= 0x20u;
    uint64_t v10 = *(void *)(a1 + 24);
    if (!v10) {
      operator new();
    }
    uint64_t v11 = *(void *)(a2 + 24);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_10248A5D0 + 24);
    }
    sub_1008DC378(v10, v11);
    int v4 = *(_DWORD *)(a2 + 52);
    if ((v4 & 0x40) == 0)
    {
LABEL_13:
      if ((v4 & 0x80) == 0) {
        return;
      }
LABEL_25:
      *(_DWORD *)(a1 + 52) |= 0x80u;
      uint64_t v13 = *(void *)(a1 + 40);
      if (!v13) {
        operator new();
      }
      uint64_t v14 = *(void *)(a2 + 40);
      if (!v14) {
        uint64_t v14 = *(void *)(qword_10248A5D0 + 40);
      }
      sub_1008E7D9C(v13, v14);
      return;
    }
LABEL_24:
    int v12 = *(_DWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 52) |= 0x40u;
    *(_DWORD *)(a1 + 36) = v12;
    if ((*(_DWORD *)(a2 + 52) & 0x80) == 0) {
      return;
    }
    goto LABEL_25;
  }
}

void sub_1008E86B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1008E86CC(void *result)
{
  if ((void *)qword_10248A5D0 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[3];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t result = (void *)v1[5];
    if (result)
    {
      char v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_1008E876C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D1A28;
  sub_1008E86CC(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008E87C0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D1A28;
  sub_1008E86CC(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008E8828()
{
}

uint64_t sub_1008E8880(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(unsigned char *)(result + 52);
  if ((_BYTE)v2)
  {
    *(_DWORD *)(result + 32) = 0;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    if ((v2 & 0x20) != 0)
    {
      uint64_t result = *(void *)(result + 24);
      if (result)
      {
        uint64_t result = sub_1008DC5BC(result);
        int v2 = *(_DWORD *)(v1 + 52);
      }
    }
    *(_DWORD *)(v1 + 36) = 0;
    if ((v2 & 0x80) != 0)
    {
      uint64_t result = *(void *)(v1 + 40);
      if (result) {
        uint64_t result = sub_1008E7FE4(result);
      }
    }
  }
  *(_DWORD *)(v1 + 52) = 0;
  return result;
}

uint64_t sub_1008E88DC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int v5 = (unsigned int *)(a1 + 12);
  int v6 = (unsigned int *)(a1 + 16);
  int v7 = (unsigned int *)(a1 + 20);
  int v8 = (unsigned int *)(a1 + 32);
  int v9 = (unsigned int *)(a1 + 36);
  while (2)
  {
    uint64_t v10 = (char *)*((void *)this + 1);
    if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v10;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_27;
        }
        unsigned int v49 = 0;
        uint64_t v13 = (char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v49);
          if (!result) {
            return result;
          }
          unsigned int v14 = v49;
        }
        else
        {
          unsigned int v14 = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        if (v14 <= 5)
        {
          *(_DWORD *)(a1 + 52) |= 1u;
          *(_DWORD *)(a1 + 8) = v14;
        }
        int v25 = (unsigned char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v25 < v15 && *v25 == 16)
        {
          int v16 = v25 + 1;
          *((void *)this + 1) = v16;
          goto LABEL_37;
        }
        continue;
      case 2u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_27;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
LABEL_37:
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v26 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *unsigned int v5 = *v16;
          int v26 = v16 + 1;
          *((void *)this + 1) = v26;
        }
        *(_DWORD *)(a1 + 52) |= 2u;
        if ((unint64_t)v26 >= v15 || *v26 != 24) {
          continue;
        }
        unsigned int v17 = v26 + 1;
        *((void *)this + 1) = v17;
LABEL_45:
        if ((unint64_t)v17 >= v15 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v27 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v17;
          int v27 = v17 + 1;
          *((void *)this + 1) = v27;
        }
        *(_DWORD *)(a1 + 52) |= 4u;
        if ((unint64_t)v27 >= v15 || *v27 != 32) {
          continue;
        }
        int v18 = v27 + 1;
        *((void *)this + 1) = v18;
LABEL_53:
        if ((unint64_t)v18 >= v15 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          unsigned int v28 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v7 = *v18;
          unsigned int v28 = v18 + 1;
          *((void *)this + 1) = v28;
        }
        *(_DWORD *)(a1 + 52) |= 8u;
        if ((unint64_t)v28 >= v15 || *v28 != 40) {
          continue;
        }
        BOOL v19 = v28 + 1;
        *((void *)this + 1) = v19;
LABEL_61:
        if ((unint64_t)v19 >= v15 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v29 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v19;
          int v29 = v19 + 1;
          *((void *)this + 1) = v29;
        }
        int v20 = *(_DWORD *)(a1 + 52) | 0x10;
        *(_DWORD *)(a1 + 52) = v20;
        if ((unint64_t)v29 >= v15 || *v29 != 50) {
          continue;
        }
        *((void *)this + 1) = v29 + 1;
LABEL_69:
        *(_DWORD *)(a1 + 52) = v20 | 0x20;
        uint64_t v30 = *(void *)(a1 + 24);
        if (!v30) {
          operator new();
        }
        unsigned int v50 = 0;
        int v31 = (char *)*((void *)this + 1);
        if ((unint64_t)v31 >= *((void *)this + 2) || *v31 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v50))return 0; {
        }
          }
        else
        {
          unsigned int v50 = *v31;
          *((void *)this + 1) = v31 + 1;
        }
        int v32 = *((_DWORD *)this + 14);
        int v33 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v32 + 1;
        if (v32 >= v33) {
          return 0;
        }
        int v34 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v50);
        if (!sub_1008DC5FC(v30, this, v35) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v34);
        int v36 = *((_DWORD *)this + 14);
        BOOL v37 = __OFSUB__(v36, 1);
        int v38 = v36 - 1;
        if (v38 < 0 == v37) {
          *((_DWORD *)this + 14) = v38;
        }
        unsigned int v39 = (unsigned char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        if ((unint64_t)v39 >= v21 || *v39 != 56) {
          continue;
        }
        unsigned int v22 = v39 + 1;
        *((void *)this + 1) = v22;
LABEL_83:
        if ((unint64_t)v22 >= v21 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          int v40 = (unsigned char *)*((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
        }
        else
        {
          *int v9 = *v22;
          int v40 = v22 + 1;
          *((void *)this + 1) = v40;
        }
        int v23 = *(_DWORD *)(a1 + 52) | 0x40;
        *(_DWORD *)(a1 + 52) = v23;
        if ((unint64_t)v40 >= v21 || *v40 != 66) {
          continue;
        }
        *((void *)this + 1) = v40 + 1;
LABEL_91:
        *(_DWORD *)(a1 + 52) = v23 | 0x80;
        uint64_t v41 = *(void *)(a1 + 40);
        if (!v41) {
          operator new();
        }
        unsigned int v51 = 0;
        int v42 = (char *)*((void *)this + 1);
        if ((unint64_t)v42 >= *((void *)this + 2) || *v42 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v51))return 0; {
        }
          }
        else
        {
          unsigned int v51 = *v42;
          *((void *)this + 1) = v42 + 1;
        }
        int v43 = *((_DWORD *)this + 14);
        int v44 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v43 + 1;
        if (v43 < v44)
        {
          int v45 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v51);
          if (sub_1008E803C(v41, this, v46))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v45);
              int v47 = *((_DWORD *)this + 14);
              BOOL v37 = __OFSUB__(v47, 1);
              int v48 = v47 - 1;
              if (v48 < 0 == v37) {
                *((_DWORD *)this + 14) = v48;
              }
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_27;
        }
        unsigned int v17 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_45;
      case 4u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_27;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_53;
      case 5u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_27;
        }
        BOOL v19 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_61;
      case 6u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_27;
        }
        int v20 = *(_DWORD *)(a1 + 52);
        goto LABEL_69;
      case 7u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_27;
        }
        unsigned int v22 = (char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        goto LABEL_83;
      case 8u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_27;
        }
        int v23 = *(_DWORD *)(a1 + 52);
        goto LABEL_91;
      default:
        int v12 = TagFallback & 7;
LABEL_27:
        if (v12 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1008E8EF0(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 52);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), (int)a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 16), a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 20), a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 32), a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
LABEL_18:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 36), a2, a4);
    if ((*(_DWORD *)(v5 + 52) & 0x80) == 0) {
      return result;
    }
    goto LABEL_19;
  }
LABEL_15:
  uint64_t v7 = *(void *)(v5 + 24);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248A5D0 + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x40) != 0) {
    goto LABEL_18;
  }
LABEL_8:
  if ((v6 & 0x80) == 0) {
    return result;
  }
LABEL_19:
  uint64_t v8 = *(void *)(v5 + 40);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_10248A5D0 + 40);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v8, a2, a4);
}

uint64_t sub_1008E9028(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 52);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_51;
  }
  if ((*(unsigned char *)(a1 + 52) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 52) & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
  if ((v5 & 0x80000000) != 0)
  {
    int v6 = 10;
  }
  else if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    int v3 = *(_DWORD *)(a1 + 52);
  }
  else
  {
    int v6 = 1;
  }
  uint64_t v4 = (v6 + 1);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 52);
    }
    else
    {
      int v8 = 2;
    }
    uint64_t v4 = (v8 + v4);
  }
LABEL_16:
  if ((v3 & 4) != 0)
  {
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 52);
    }
    else
    {
      int v10 = 2;
    }
    uint64_t v4 = (v10 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_18:
      if ((v3 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_31;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_18;
  }
  uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 52);
  }
  else
  {
    int v12 = 2;
  }
  uint64_t v4 = (v12 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_19:
    if ((v3 & 0x20) == 0) {
      goto LABEL_20;
    }
    goto LABEL_35;
  }
LABEL_31:
  uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 52);
  }
  else
  {
    int v14 = 2;
  }
  uint64_t v4 = (v14 + v4);
  if ((v3 & 0x20) == 0)
  {
LABEL_20:
    if ((v3 & 0x40) == 0) {
      goto LABEL_21;
    }
LABEL_41:
    BOOL v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
    if (v19 >= 0x80)
    {
      int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 52);
    }
    else
    {
      int v20 = 2;
    }
    uint64_t v4 = (v20 + v4);
    if ((v3 & 0x80) == 0) {
      goto LABEL_51;
    }
    goto LABEL_45;
  }
LABEL_35:
  uint64_t v15 = *(void *)(a1 + 24);
  if (!v15) {
    uint64_t v15 = *(void *)(qword_10248A5D0 + 24);
  }
  int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DC8DC(v15, a2);
  int v17 = (int)v16;
  if (v16 >= 0x80) {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
  }
  else {
    int v18 = 1;
  }
  uint64_t v4 = (v4 + v17 + v18 + 1);
  int v3 = *(_DWORD *)(a1 + 52);
  if ((v3 & 0x40) != 0) {
    goto LABEL_41;
  }
LABEL_21:
  if ((v3 & 0x80) == 0) {
    goto LABEL_51;
  }
LABEL_45:
  uint64_t v21 = *(void *)(a1 + 40);
  if (!v21) {
    uint64_t v21 = *(void *)(qword_10248A5D0 + 40);
  }
  unsigned int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008E8320(v21, a2);
  int v24 = (int)v22;
  if (v22 >= 0x80) {
    int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, v23);
  }
  else {
    int v25 = 1;
  }
  uint64_t v4 = (v4 + v24 + v25 + 1);
LABEL_51:
  *(_DWORD *)(a1 + 48) = v4;
  return v4;
}

void sub_1008E9210(uint64_t a1, void *lpsrc)
{
  sub_1008E8488(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008E9298()
{
  return 1;
}

void *sub_1008E92A0@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.GanssMeasurements");
}

void sub_1008E92B0(_DWORD *a1, _DWORD *a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  int v4 = a2[12];
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    int v7 = a2[2];
    a1[12] |= 1u;
    a1[2] = v7;
    int v4 = a2[12];
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_18;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v8 = a2[3];
  a1[12] |= 2u;
  a1[3] = v8;
  int v4 = a2[12];
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  int v9 = a2[4];
  a1[12] |= 4u;
  a1[4] = v9;
  int v4 = a2[12];
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  int v10 = a2[5];
  a1[12] |= 8u;
  a1[5] = v10;
  int v4 = a2[12];
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_21:
    int v12 = a2[7];
    a1[12] |= 0x20u;
    a1[7] = v12;
    int v4 = a2[12];
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_20:
  int v11 = a2[6];
  a1[12] |= 0x10u;
  a1[6] = v11;
  int v4 = a2[12];
  if ((v4 & 0x20) != 0) {
    goto LABEL_21;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_22:
  unsigned int v13 = a2[8];
  if (v13 >= 6) {
    sub_101A736D8();
  }
  a1[12] |= 0x40u;
  a1[8] = v13;
  int v4 = a2[12];
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = a2[9];
    a1[12] |= 0x80u;
    a1[9] = v5;
    int v4 = a2[12];
  }
LABEL_13:
  if ((v4 & 0x100) != 0)
  {
    int v6 = a2[10];
    a1[12] |= 0x100u;
    a1[10] = v6;
  }
}

void sub_1008E9450(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008E9468(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D1AA0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008E9488(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D1AA0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008E94DC()
{
}

uint64_t sub_1008E9534(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 48);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0) {
    *(_DWORD *)(result + 40) = 0;
  }
  *(_DWORD *)(result + 48) = 0;
  return result;
}

uint64_t sub_1008E9560(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 3;
  int v6 = a1 + 4;
  int v7 = a1 + 5;
  int v8 = a1 + 6;
  int v9 = a1 + 7;
  int v10 = a1 + 9;
  int v11 = a1 + 10;
  while (2)
  {
    int v12 = (char *)*((void *)this + 1);
    if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v12;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v12 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        unsigned int v38 = 0;
        int v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v16 < v15 && (*v16 & 0x80000000) == 0)
        {
          unsigned int v17 = *v16;
          int v18 = v16 + 1;
          *((void *)this + 1) = v18;
LABEL_34:
          a1[2] = v17;
          a1[12] |= 1u;
          if ((unint64_t)v18 < v15 && *v18 == 16)
          {
            BOOL v19 = v18 + 1;
            *((void *)this + 1) = v19;
            goto LABEL_37;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v38);
        if (result)
        {
          unsigned int v17 = v38;
          int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
          goto LABEL_34;
        }
        break;
      case 2u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        BOOL v19 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
LABEL_37:
        if ((unint64_t)v19 >= v15 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          unsigned int v28 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v5 = *v19;
          unsigned int v28 = v19 + 1;
          *((void *)this + 1) = v28;
        }
        a1[12] |= 2u;
        if ((unint64_t)v28 >= v15 || *v28 != 24) {
          continue;
        }
        int v20 = v28 + 1;
        *((void *)this + 1) = v20;
LABEL_45:
        if ((unint64_t)v20 >= v15 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v29 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v20;
          int v29 = v20 + 1;
          *((void *)this + 1) = v29;
        }
        a1[12] |= 4u;
        if ((unint64_t)v29 >= v15 || *v29 != 32) {
          continue;
        }
        uint64_t v21 = v29 + 1;
        *((void *)this + 1) = v21;
LABEL_53:
        if ((unint64_t)v21 >= v15 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          uint64_t v30 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v7 = *v21;
          uint64_t v30 = v21 + 1;
          *((void *)this + 1) = v30;
        }
        a1[12] |= 8u;
        if ((unint64_t)v30 >= v15 || *v30 != 40) {
          continue;
        }
        unsigned int v22 = v30 + 1;
        *((void *)this + 1) = v22;
LABEL_61:
        if ((unint64_t)v22 >= v15 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v31 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v22;
          int v31 = v22 + 1;
          *((void *)this + 1) = v31;
        }
        a1[12] |= 0x10u;
        if ((unint64_t)v31 >= v15 || *v31 != 48) {
          continue;
        }
        unsigned int v23 = v31 + 1;
        *((void *)this + 1) = v23;
LABEL_69:
        if ((unint64_t)v23 >= v15 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          int v32 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v9 = *v23;
          int v32 = v23 + 1;
          *((void *)this + 1) = v32;
        }
        a1[12] |= 0x20u;
        if ((unint64_t)v32 >= v15 || *v32 != 56) {
          continue;
        }
        int v24 = v32 + 1;
        *((void *)this + 1) = v24;
LABEL_77:
        unsigned int v39 = 0;
        if ((unint64_t)v24 >= v15 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v39);
          if (!result) {
            return result;
          }
          unsigned int v33 = v39;
        }
        else
        {
          unsigned int v33 = *v24;
          *((void *)this + 1) = v24 + 1;
        }
        if (v33 <= 5)
        {
          a1[12] |= 0x40u;
          a1[8] = v33;
        }
        int v34 = (unsigned char *)*((void *)this + 1);
        unint64_t v25 = *((void *)this + 2);
        if ((unint64_t)v34 >= v25 || *v34 != 64) {
          continue;
        }
        int v26 = v34 + 1;
        *((void *)this + 1) = v26;
LABEL_87:
        if ((unint64_t)v26 >= v25 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!result) {
            return result;
          }
          unsigned int v35 = (unsigned char *)*((void *)this + 1);
          unint64_t v25 = *((void *)this + 2);
        }
        else
        {
          *int v10 = *v26;
          unsigned int v35 = v26 + 1;
          *((void *)this + 1) = v35;
        }
        a1[12] |= 0x80u;
        if ((unint64_t)v35 >= v25 || *v35 != 72) {
          continue;
        }
        int v27 = v35 + 1;
        *((void *)this + 1) = v27;
LABEL_95:
        if ((unint64_t)v27 >= v25 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
          if (!result) {
            return result;
          }
          int v36 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v25 = *((void *)this + 2);
        }
        else
        {
          *int v11 = *v27;
          int v36 = (unsigned __int8 *)(v27 + 1);
          *((void *)this + 1) = v36;
        }
        a1[12] |= 0x100u;
        if (v36 != (unsigned __int8 *)v25 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_45;
      case 4u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        uint64_t v21 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_53;
      case 5u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        unsigned int v22 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_61;
      case 6u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        unsigned int v23 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_69;
      case 7u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v24 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_77;
      case 8u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v26 = (char *)*((void *)this + 1);
        unint64_t v25 = *((void *)this + 2);
        goto LABEL_87;
      case 9u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v27 = (char *)*((void *)this + 1);
        unint64_t v25 = *((void *)this + 2);
        goto LABEL_95;
      default:
        int v14 = TagFallback & 7;
LABEL_28:
        if (v14 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

int *sub_1008E9AA0(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  int v6 = result[12];
  if (v6)
  {
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    int v6 = v5[12];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  int v6 = v5[12];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  int v6 = v5[12];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  int v6 = v5[12];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  int v6 = v5[12];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
  int v6 = v5[12];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
LABEL_18:
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[9], a2, a4);
    if ((v5[12] & 0x100) == 0) {
      return result;
    }
    goto LABEL_19;
  }
LABEL_17:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], a2, a4);
  int v6 = v5[12];
  if ((v6 & 0x80) != 0) {
    goto LABEL_18;
  }
LABEL_9:
  if ((v6 & 0x100) == 0) {
    return result;
  }
LABEL_19:
  int v7 = v5[10];

  return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v7, a2, a4);
}

uint64_t sub_1008E9BD4(unsigned int *a1, unsigned int a2)
{
  unsigned int v3 = a1[12];
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    if ((v3 & 0x100) == 0) {
      goto LABEL_55;
    }
    goto LABEL_51;
  }
  if ((v3 & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_17;
    }
    goto LABEL_13;
  }
  int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[2];
  if ((v5 & 0x80000000) != 0)
  {
    int v6 = 10;
  }
  else if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    unsigned int v3 = a1[12];
  }
  else
  {
    int v6 = 1;
  }
  uint64_t v4 = (v6 + 1);
  if ((v3 & 2) != 0)
  {
LABEL_13:
    int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[3];
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
      unsigned int v3 = a1[12];
    }
    else
    {
      int v8 = 2;
    }
    uint64_t v4 = (v8 + v4);
  }
LABEL_17:
  if ((v3 & 4) != 0)
  {
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[4];
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      unsigned int v3 = a1[12];
    }
    else
    {
      int v10 = 2;
    }
    uint64_t v4 = (v10 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_19:
      if ((v3 & 0x10) == 0) {
        goto LABEL_20;
      }
      goto LABEL_33;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_19;
  }
  int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[5];
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
    unsigned int v3 = a1[12];
  }
  else
  {
    int v12 = 2;
  }
  uint64_t v4 = (v12 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_20:
    if ((v3 & 0x20) == 0) {
      goto LABEL_21;
    }
    goto LABEL_37;
  }
LABEL_33:
  unsigned int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[6];
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    unsigned int v3 = a1[12];
  }
  else
  {
    int v14 = 2;
  }
  uint64_t v4 = (v14 + v4);
  if ((v3 & 0x20) == 0)
  {
LABEL_21:
    if ((v3 & 0x40) == 0) {
      goto LABEL_22;
    }
    goto LABEL_41;
  }
LABEL_37:
  unint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[7];
  if (v15 >= 0x80)
  {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    unsigned int v3 = a1[12];
  }
  else
  {
    int v16 = 2;
  }
  uint64_t v4 = (v16 + v4);
  if ((v3 & 0x40) == 0)
  {
LABEL_22:
    if ((v3 & 0x80) == 0) {
      goto LABEL_23;
    }
    goto LABEL_47;
  }
LABEL_41:
  unsigned int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[8];
  if ((v17 & 0x80000000) != 0)
  {
    int v18 = 11;
  }
  else if (v17 >= 0x80)
  {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
    unsigned int v3 = a1[12];
  }
  else
  {
    int v18 = 2;
  }
  uint64_t v4 = (v18 + v4);
  if ((v3 & 0x80) == 0)
  {
LABEL_23:
    if ((v3 & 0x100) == 0) {
      goto LABEL_55;
    }
    goto LABEL_51;
  }
LABEL_47:
  BOOL v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[9];
  if (v19 >= 0x80)
  {
    int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
    unsigned int v3 = a1[12];
  }
  else
  {
    int v20 = 2;
  }
  uint64_t v4 = (v20 + v4);
  if ((v3 & 0x100) != 0)
  {
LABEL_51:
    uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[10];
    if (v21 >= 0x80) {
      int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2) + 1;
    }
    else {
      int v22 = 2;
    }
    uint64_t v4 = (v22 + v4);
  }
LABEL_55:
  a1[11] = v4;
  return v4;
}

void sub_1008E9DB4(_DWORD *a1, _DWORD *lpsrc)
{
  sub_1008E92B0(a1, lpsrc);
}

uint64_t sub_1008E9E3C()
{
  return 1;
}

void *sub_1008E9E44@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.GpsMeasurementElement");
}

void sub_1008E9E54(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), *(_DWORD *)(a2 + 32) + *(_DWORD *)(a1 + 32));
  if (*(int *)(a2 + 32) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      int v5 = *(_DWORD **)(*(void *)(a2 + 24) + 8 * v4);
      int v6 = *(_DWORD *)(a1 + 36);
      uint64_t v7 = *(int *)(a1 + 32);
      if ((int)v7 >= v6)
      {
        if (v6 == *(_DWORD *)(a1 + 40))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), v6 + 1);
          int v6 = *(_DWORD *)(a1 + 36);
        }
        *(_DWORD *)(a1 + 36) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *(void *)(a1 + 24);
      *(_DWORD *)(a1 + 32) = v7 + 1;
      sub_1008E92B0(*(_DWORD **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 32));
  }
  int v9 = *(_DWORD *)(a2 + 76);
  if (!(_BYTE)v9) {
    goto LABEL_20;
  }
  if (v9)
  {
    int v13 = *(_DWORD *)(a2 + 8);
    *(_DWORD *)(a1 + 76) |= 1u;
    *(_DWORD *)(a1 + 8) = v13;
    int v9 = *(_DWORD *)(a2 + 76);
    if ((v9 & 2) == 0)
    {
LABEL_14:
      if ((v9 & 4) == 0) {
        goto LABEL_15;
      }
      goto LABEL_29;
    }
  }
  else if ((v9 & 2) == 0)
  {
    goto LABEL_14;
  }
  int v14 = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 76) |= 2u;
  *(_DWORD *)(a1 + 12) = v14;
  int v9 = *(_DWORD *)(a2 + 76);
  if ((v9 & 4) == 0)
  {
LABEL_15:
    if ((v9 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_30;
  }
LABEL_29:
  int v15 = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 76) |= 4u;
  *(_DWORD *)(a1 + 16) = v15;
  int v9 = *(_DWORD *)(a2 + 76);
  if ((v9 & 8) == 0)
  {
LABEL_16:
    if ((v9 & 0x20) == 0) {
      goto LABEL_17;
    }
LABEL_31:
    *(_DWORD *)(a1 + 76) |= 0x20u;
    uint64_t v17 = *(void *)(a1 + 48);
    if (!v17) {
      operator new();
    }
    uint64_t v18 = *(void *)(a2 + 48);
    if (!v18) {
      uint64_t v18 = *(void *)(qword_10248A5E0 + 48);
    }
    sub_1008D797C(v17, v18);
    int v9 = *(_DWORD *)(a2 + 76);
    if ((v9 & 0x40) == 0)
    {
LABEL_18:
      if ((v9 & 0x80) == 0) {
        goto LABEL_20;
      }
      goto LABEL_19;
    }
    goto LABEL_36;
  }
LABEL_30:
  int v16 = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 76) |= 8u;
  *(_DWORD *)(a1 + 20) = v16;
  int v9 = *(_DWORD *)(a2 + 76);
  if ((v9 & 0x20) != 0) {
    goto LABEL_31;
  }
LABEL_17:
  if ((v9 & 0x40) == 0) {
    goto LABEL_18;
  }
LABEL_36:
  int v19 = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 76) |= 0x40u;
  *(_DWORD *)(a1 + 56) = v19;
  int v9 = *(_DWORD *)(a2 + 76);
  if ((v9 & 0x80) != 0)
  {
LABEL_19:
    int v10 = *(_DWORD *)(a2 + 60);
    *(_DWORD *)(a1 + 76) |= 0x80u;
    *(_DWORD *)(a1 + 60) = v10;
    int v9 = *(_DWORD *)(a2 + 76);
  }
LABEL_20:
  if ((v9 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 76) |= 0x100u;
    int v11 = *(_DWORD **)(a1 + 64);
    if (!v11) {
      operator new();
    }
    uint64_t v12 = *(void *)(a2 + 64);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_10248A5E0 + 64);
    }
    sub_1008D8048(v11, v12);
  }
}

void sub_1008EA170(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008EA188(uint64_t *a1)
{
  *a1 = (uint64_t)off_1022D1B18;
  int v2 = a1 + 3;
  sub_1008EA1EC(a1);
  sub_10016B2E8(v2);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void *sub_1008EA1EC(void *result)
{
  if ((void *)qword_10248A5E0 != result)
  {
    int v1 = result;
    uint64_t v2 = result[6];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t result = (void *)v1[8];
    if (result)
    {
      unsigned int v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_1008EA290(uint64_t *a1)
{
  sub_1008EA188(a1);

  operator delete();
}

void sub_1008EA2C8()
{
}

uint64_t sub_1008EA324(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 76);
  if ((_BYTE)v2)
  {
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    if ((v2 & 0x20) != 0)
    {
      uint64_t v3 = *(void *)(a1 + 48);
      if (v3)
      {
        sub_1008D7BC0(v3);
        int v2 = *(_DWORD *)(a1 + 76);
      }
    }
    *(void *)(a1 + 56) = 0;
  }
  if ((v2 & 0x100) != 0)
  {
    uint64_t v4 = *(void *)(a1 + 64);
    if (v4)
    {
      if (*(unsigned char *)(v4 + 24))
      {
        *(void *)(v4 + 8) = 0;
        *(_DWORD *)(v4 + 16) = 0;
      }
      *(_DWORD *)(v4 + 24) = 0;
    }
  }
  uint64_t result = sub_10026DEDC(a1 + 24);
  *(_DWORD *)(a1 + 76) = 0;
  return result;
}

uint64_t sub_1008EA398(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 8);
  int v6 = (unsigned int *)(a1 + 12);
  uint64_t v7 = (unsigned int *)(a1 + 16);
  uint64_t v8 = (unsigned int *)(a1 + 20);
  int v60 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24);
  int v9 = (unsigned int *)(a1 + 56);
  int v10 = (unsigned int *)(a1 + 60);
LABEL_2:
  while (2)
  {
    int v11 = (char *)*((void *)this + 1);
    if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v11;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v11 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *int v5 = *v15;
          int v16 = v15 + 1;
          *((void *)this + 1) = v16;
        }
        *(_DWORD *)(a1 + 76) |= 1u;
        if ((unint64_t)v16 < v14 && *v16 == 16)
        {
          uint64_t v17 = v16 + 1;
          *((void *)this + 1) = v17;
          goto LABEL_37;
        }
        continue;
      case 2u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        uint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
LABEL_37:
        if ((unint64_t)v17 >= v14 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          unint64_t v25 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v17;
          unint64_t v25 = v17 + 1;
          *((void *)this + 1) = v25;
        }
        *(_DWORD *)(a1 + 76) |= 2u;
        if ((unint64_t)v25 >= v14 || *v25 != 24) {
          continue;
        }
        uint64_t v18 = v25 + 1;
        *((void *)this + 1) = v18;
LABEL_45:
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v26 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v7 = *v18;
          int v26 = v18 + 1;
          *((void *)this + 1) = v26;
        }
        *(_DWORD *)(a1 + 76) |= 4u;
        if ((unint64_t)v26 >= v14 || *v26 != 32) {
          continue;
        }
        int v19 = v26 + 1;
        *((void *)this + 1) = v19;
LABEL_53:
        if ((unint64_t)v19 >= v14 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v27 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v8 = *v19;
          int v27 = v19 + 1;
          *((void *)this + 1) = v27;
        }
        *(_DWORD *)(a1 + 76) |= 8u;
        if ((unint64_t)v27 >= v14 || *v27 != 42) {
          continue;
        }
        do
        {
          *((void *)this + 1) = v27 + 1;
LABEL_61:
          int v28 = *(_DWORD *)(a1 + 36);
          uint64_t v29 = *(int *)(a1 + 32);
          if ((int)v29 >= v28)
          {
            if (v28 == *(_DWORD *)(a1 + 40))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v60, v28 + 1);
              int v28 = *(_DWORD *)(a1 + 36);
            }
            *(_DWORD *)(a1 + 36) = v28 + 1;
            operator new();
          }
          uint64_t v30 = *(void *)(a1 + 24);
          *(_DWORD *)(a1 + 32) = v29 + 1;
          int v31 = *(unsigned int **)(v30 + 8 * v29);
          unsigned int v61 = 0;
          int v32 = (char *)*((void *)this + 1);
          if ((unint64_t)v32 >= *((void *)this + 2) || *v32 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v61))return 0; {
          }
            }
          else
          {
            unsigned int v61 = *v32;
            *((void *)this + 1) = v32 + 1;
          }
          int v33 = *((_DWORD *)this + 14);
          int v34 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v33 + 1;
          if (v33 >= v34) {
            return 0;
          }
          int v35 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v61);
          if (!sub_1008E9560(v31, this, v36) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v35);
          int v37 = *((_DWORD *)this + 14);
          BOOL v38 = __OFSUB__(v37, 1);
          int v39 = v37 - 1;
          if (v39 < 0 == v38) {
            *((_DWORD *)this + 14) = v39;
          }
          int v27 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v27 >= *((void *)this + 2)) {
            goto LABEL_2;
          }
          int v40 = *v27;
        }
        while (v40 == 42);
        if (v40 != 50) {
          continue;
        }
        *((void *)this + 1) = v27 + 1;
LABEL_79:
        *(_DWORD *)(a1 + 76) |= 0x20u;
        uint64_t v41 = *(void *)(a1 + 48);
        if (!v41) {
          operator new();
        }
        unsigned int v62 = 0;
        int v42 = (char *)*((void *)this + 1);
        if ((unint64_t)v42 >= *((void *)this + 2) || *v42 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v62))return 0; {
        }
          }
        else
        {
          unsigned int v62 = *v42;
          *((void *)this + 1) = v42 + 1;
        }
        int v43 = *((_DWORD *)this + 14);
        int v44 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v43 + 1;
        if (v43 >= v44) {
          return 0;
        }
        int v45 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v62);
        if (!sub_1008D7C00(v41, this, v46) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v45);
        int v47 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v47, 1);
        int v48 = v47 - 1;
        if (v48 < 0 == v38) {
          *((_DWORD *)this + 14) = v48;
        }
        unsigned int v49 = (unsigned char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        if ((unint64_t)v49 >= v20 || *v49 != 56) {
          continue;
        }
        uint64_t v21 = v49 + 1;
        *((void *)this + 1) = v21;
LABEL_93:
        if ((unint64_t)v21 >= v20 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          unsigned int v50 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
        }
        else
        {
          *int v9 = *v21;
          unsigned int v50 = v21 + 1;
          *((void *)this + 1) = v50;
        }
        *(_DWORD *)(a1 + 76) |= 0x40u;
        if ((unint64_t)v50 >= v20 || *v50 != 64) {
          continue;
        }
        int v22 = v50 + 1;
        *((void *)this + 1) = v22;
LABEL_101:
        if ((unint64_t)v22 >= v20 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!result) {
            return result;
          }
          unsigned int v51 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
        }
        else
        {
          *int v10 = *v22;
          unsigned int v51 = v22 + 1;
          *((void *)this + 1) = v51;
        }
        int v23 = *(_DWORD *)(a1 + 76) | 0x80;
        *(_DWORD *)(a1 + 76) = v23;
        if ((unint64_t)v51 >= v20 || *v51 != 74) {
          continue;
        }
        *((void *)this + 1) = v51 + 1;
LABEL_109:
        *(_DWORD *)(a1 + 76) = v23 | 0x100;
        unsigned int v52 = *(unsigned int **)(a1 + 64);
        if (!v52) {
          operator new();
        }
        unsigned int v63 = 0;
        int v53 = (char *)*((void *)this + 1);
        if ((unint64_t)v53 >= *((void *)this + 2) || *v53 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v63))return 0; {
        }
          }
        else
        {
          unsigned int v63 = *v53;
          *((void *)this + 1) = v53 + 1;
        }
        int v54 = *((_DWORD *)this + 14);
        int v55 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v54 + 1;
        if (v54 < v55)
        {
          int v56 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v63);
          if (sub_1008D8210(v52, this, v57))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v56);
              int v58 = *((_DWORD *)this + 14);
              BOOL v38 = __OFSUB__(v58, 1);
              int v59 = v58 - 1;
              if (v59 < 0 == v38) {
                *((_DWORD *)this + 14) = v59;
              }
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        uint64_t v18 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_45;
      case 4u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_53;
      case 5u:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_61;
        }
        goto LABEL_29;
      case 6u:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_79;
        }
        goto LABEL_29;
      case 7u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        uint64_t v21 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_93;
      case 8u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        int v22 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_101;
      case 9u:
        int v13 = TagFallback & 7;
        if (v13 != 2) {
          goto LABEL_29;
        }
        int v23 = *(_DWORD *)(a1 + 76);
        goto LABEL_109;
      default:
        int v13 = TagFallback & 7;
LABEL_29:
        if (v13 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1008EAB1C(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 76);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 76);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 16), a2, a4);
  if ((*(_DWORD *)(v5 + 76) & 8) != 0) {
LABEL_5:
  }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 20), a2, a4);
LABEL_6:
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(*(void *)(v5 + 24) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  int v8 = *(_DWORD *)(v5 + 76);
  if ((v8 & 0x20) != 0)
  {
    uint64_t v9 = *(void *)(v5 + 48);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_10248A5E0 + 48);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v9, a2, a4);
    int v8 = *(_DWORD *)(v5 + 76);
    if ((v8 & 0x40) == 0)
    {
LABEL_11:
      if ((v8 & 0x80) == 0) {
        goto LABEL_12;
      }
LABEL_22:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(v5 + 60), a2, a4);
      if ((*(_DWORD *)(v5 + 76) & 0x100) == 0) {
        return result;
      }
      goto LABEL_23;
    }
  }
  else if ((v8 & 0x40) == 0)
  {
    goto LABEL_11;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 56), a2, a4);
  int v8 = *(_DWORD *)(v5 + 76);
  if ((v8 & 0x80) != 0) {
    goto LABEL_22;
  }
LABEL_12:
  if ((v8 & 0x100) == 0) {
    return result;
  }
LABEL_23:
  uint64_t v10 = *(void *)(v5 + 64);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_10248A5E0 + 64);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v10, a2, a4);
}

uint64_t sub_1008EAC94(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 76);
  if ((_BYTE)v3)
  {
    if (v3)
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v5 >= 0x80)
      {
        int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
        int v3 = *(_DWORD *)(a1 + 76);
      }
      else
      {
        int v6 = 1;
      }
      int v4 = v6 + 1;
      if ((v3 & 2) == 0)
      {
LABEL_15:
        if ((v3 & 4) != 0)
        {
          uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
          if (v9 >= 0x80)
          {
            int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
            int v3 = *(_DWORD *)(a1 + 76);
          }
          else
          {
            int v10 = 2;
          }
          v4 += v10;
          if ((v3 & 8) == 0)
          {
LABEL_17:
            if ((v3 & 0x20) == 0) {
              goto LABEL_18;
            }
            goto LABEL_30;
          }
        }
        else if ((v3 & 8) == 0)
        {
          goto LABEL_17;
        }
        int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
        if (v11 >= 0x80)
        {
          int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
          int v3 = *(_DWORD *)(a1 + 76);
        }
        else
        {
          int v12 = 2;
        }
        v4 += v12;
        if ((v3 & 0x20) == 0)
        {
LABEL_18:
          if ((v3 & 0x40) == 0) {
            goto LABEL_19;
          }
          goto LABEL_36;
        }
LABEL_30:
        uint64_t v13 = *(void *)(a1 + 48);
        if (!v13) {
          uint64_t v13 = *(void *)(qword_10248A5E0 + 48);
        }
        unint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D7EE0(v13, a2);
        int v15 = (int)v14;
        if (v14 >= 0x80) {
          int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
        }
        else {
          int v16 = 1;
        }
        v4 += v15 + v16 + 1;
        int v3 = *(_DWORD *)(a1 + 76);
        if ((v3 & 0x40) == 0)
        {
LABEL_19:
          if ((v3 & 0x80) == 0) {
            goto LABEL_20;
          }
          goto LABEL_40;
        }
LABEL_36:
        uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
        if (v17 >= 0x80)
        {
          int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
          int v3 = *(_DWORD *)(a1 + 76);
        }
        else
        {
          int v18 = 2;
        }
        v4 += v18;
        if ((v3 & 0x80) == 0)
        {
LABEL_20:
          if ((v3 & 0x100) == 0) {
            goto LABEL_50;
          }
          goto LABEL_44;
        }
LABEL_40:
        int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
        if (v19 >= 0x80)
        {
          int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
          int v3 = *(_DWORD *)(a1 + 76);
        }
        else
        {
          int v20 = 2;
        }
        v4 += v20;
        if ((v3 & 0x100) == 0) {
          goto LABEL_50;
        }
        goto LABEL_44;
      }
    }
    else
    {
      int v4 = 0;
      if ((v3 & 2) == 0) {
        goto LABEL_15;
      }
    }
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      int v3 = *(_DWORD *)(a1 + 76);
    }
    else
    {
      int v8 = 1;
    }
    v4 += v8 + 1;
    goto LABEL_15;
  }
  int v4 = 0;
  if ((v3 & 0x100) == 0) {
    goto LABEL_50;
  }
LABEL_44:
  uint64_t v21 = *(void *)(a1 + 64);
  if (!v21) {
    uint64_t v21 = *(void *)(qword_10248A5E0 + 64);
  }
  int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D84C0(v21, a2);
  int v23 = (int)v22;
  if (v22 >= 0x80) {
    int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, a2);
  }
  else {
    int v24 = 1;
  }
  v4 += v23 + v24 + 1;
LABEL_50:
  int v25 = *(_DWORD *)(a1 + 32);
  uint64_t v26 = (v25 + v4);
  if (v25 >= 1)
  {
    uint64_t v27 = 0;
    do
    {
      int v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008E9BD4(*(unsigned int **)(*(void *)(a1 + 24)+ 8 * v27), a2);
      int v29 = (int)v28;
      if (v28 >= 0x80) {
        int v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28, a2);
      }
      else {
        int v30 = 1;
      }
      uint64_t v26 = (v29 + v26 + v30);
      ++v27;
    }
    while (v27 < *(int *)(a1 + 32));
  }
  *(_DWORD *)(a1 + 72) = v26;
  return v26;
}

void sub_1008EAECC(uint64_t a1, void *lpsrc)
{
  sub_1008E9E54(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008EAF54()
{
  return 1;
}

void *sub_1008EAF5C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.GpsMeasurements");
}

void sub_1008EAF6C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 52);
  if (!(_BYTE)v4) {
    return;
  }
  if (*(unsigned char *)(a2 + 52))
  {
    unsigned int v5 = *(_DWORD *)(a2 + 8);
    if (v5 >= 9) {
      sub_101A73704();
    }
    *(_DWORD *)(a1 + 52) |= 1u;
    *(_DWORD *)(a1 + 8) = v5;
    int v4 = *(_DWORD *)(a2 + 52);
  }
  if ((v4 & 2) != 0)
  {
    int v7 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 52) |= 2u;
    *(_DWORD *)(a1 + 12) = v7;
    int v4 = *(_DWORD *)(a2 + 52);
    if ((v4 & 4) == 0)
    {
LABEL_9:
      if ((v4 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_21;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_9;
  }
  *(_DWORD *)(a1 + 52) |= 4u;
  int v8 = *(_DWORD **)(a1 + 16);
  if (!v8) {
    operator new();
  }
  uint64_t v9 = *(void *)(a2 + 16);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_10248A5E8 + 16);
  }
  sub_1008D4334(v8, v9);
  int v4 = *(_DWORD *)(a2 + 52);
  if ((v4 & 8) == 0)
  {
LABEL_10:
    if ((v4 & 0x10) == 0) {
      goto LABEL_11;
    }
LABEL_26:
    *(_DWORD *)(a1 + 52) |= 0x10u;
    uint64_t v12 = *(void *)(a1 + 32);
    if (!v12) {
      operator new();
    }
    uint64_t v13 = *(void *)(a2 + 32);
    if (!v13) {
      uint64_t v13 = *(void *)(qword_10248A5E8 + 32);
    }
    sub_1008E8488(v12, v13);
    int v4 = *(_DWORD *)(a2 + 52);
    if ((v4 & 0x20) == 0)
    {
LABEL_12:
      if ((v4 & 0x40) == 0) {
        return;
      }
      goto LABEL_13;
    }
    goto LABEL_31;
  }
LABEL_21:
  *(_DWORD *)(a1 + 52) |= 8u;
  uint64_t v10 = *(void *)(a1 + 24);
  if (!v10) {
    operator new();
  }
  uint64_t v11 = *(void *)(a2 + 24);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_10248A5E8 + 24);
  }
  sub_1008E9E54(v10, v11);
  int v4 = *(_DWORD *)(a2 + 52);
  if ((v4 & 0x10) != 0) {
    goto LABEL_26;
  }
LABEL_11:
  if ((v4 & 0x20) == 0) {
    goto LABEL_12;
  }
LABEL_31:
  int v14 = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 52) |= 0x20u;
  *(_DWORD *)(a1 + 40) = v14;
  if ((*(_DWORD *)(a2 + 52) & 0x40) != 0)
  {
LABEL_13:
    char v6 = *(unsigned char *)(a2 + 44);
    *(_DWORD *)(a1 + 52) |= 0x40u;
    *(unsigned char *)(a1 + 44) = v6;
  }
}

void sub_1008EB1E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1008EB1FC(void *result)
{
  if ((void *)qword_10248A5E8 != result)
  {
    int v1 = result;
    uint64_t v2 = result[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[3];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t result = (void *)v1[4];
    if (result)
    {
      int v4 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v4();
    }
  }
  return result;
}

void sub_1008EB2C8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D1B90;
  sub_1008EB1FC(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008EB31C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D1B90;
  sub_1008EB1FC(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

uint64_t sub_1008EB384(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10248A5E8;
  if (!qword_10248A5E8)
  {
    sub_1008C4C78(0, a2, a3, a4);
    return qword_10248A5E8;
  }
  return result;
}

void sub_1008EB3B4()
{
}

uint64_t sub_1008EB410(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(unsigned char *)(result + 52);
  if ((_BYTE)v2)
  {
    *(void *)(result + 8) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t v3 = *(void *)(result + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 24))
        {
          *(void *)(v3 + 8) = 0;
          *(_DWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 24) = 0;
        int v2 = *(_DWORD *)(result + 52);
      }
    }
    if ((v2 & 8) != 0)
    {
      uint64_t result = *(void *)(result + 24);
      if (result)
      {
        uint64_t result = sub_1008EA324(result);
        int v2 = *(_DWORD *)(v1 + 52);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      uint64_t result = *(void *)(v1 + 32);
      if (result) {
        uint64_t result = sub_1008E8880(result);
      }
    }
    *(_DWORD *)(v1 + 40) = 0;
    *(unsigned char *)(v1 + 44) = 0;
  }
  *(_DWORD *)(v1 + 52) = 0;
  return result;
}

uint64_t sub_1008EB490(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int v5 = (unsigned int *)(a1 + 12);
  char v6 = (unsigned int *)(a1 + 40);
  while (2)
  {
    int v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        unsigned int v52 = 0;
        uint64_t v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v52);
          if (!result) {
            return result;
          }
          unsigned int v11 = v52;
        }
        else
        {
          unsigned int v11 = *v10;
          *((void *)this + 1) = v10 + 1;
        }
        if (v11 <= 8)
        {
          *(_DWORD *)(a1 + 52) |= 1u;
          *(_DWORD *)(a1 + 8) = v11;
        }
        int v19 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v19 < v12 && *v19 == 16)
        {
          uint64_t v13 = v19 + 1;
          *((void *)this + 1) = v13;
          goto LABEL_35;
        }
        continue;
      case 2u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
LABEL_35:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v20 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *unsigned int v5 = *v13;
          int v20 = v13 + 1;
          *((void *)this + 1) = v20;
        }
        int v14 = *(_DWORD *)(a1 + 52) | 2;
        *(_DWORD *)(a1 + 52) = v14;
        if ((unint64_t)v20 >= v12 || *v20 != 26) {
          continue;
        }
        *((void *)this + 1) = v20 + 1;
LABEL_43:
        *(_DWORD *)(a1 + 52) = v14 | 4;
        uint64_t v21 = *(_DWORD **)(a1 + 16);
        if (!v21) {
          operator new();
        }
        unsigned int v52 = 0;
        int v22 = (char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v52))return 0; {
        }
          }
        else
        {
          unsigned int v52 = *v22;
          *((void *)this + 1) = v22 + 1;
        }
        int v23 = *((_DWORD *)this + 14);
        int v24 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v23 + 1;
        if (v23 >= v24) {
          return 0;
        }
        int v25 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v52);
        if (!sub_1008D4508(v21, this, v26) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v25);
        int v27 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v27, 1);
        int v29 = v27 - 1;
        if (v29 < 0 == v28) {
          *((_DWORD *)this + 14) = v29;
        }
        int v30 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v30 >= *((void *)this + 2) || *v30 != 34) {
          continue;
        }
        *((void *)this + 1) = v30 + 1;
LABEL_57:
        *(_DWORD *)(a1 + 52) |= 8u;
        uint64_t v31 = *(void *)(a1 + 24);
        if (!v31) {
          operator new();
        }
        unsigned int v52 = 0;
        int v32 = (char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v52))return 0; {
        }
          }
        else
        {
          unsigned int v52 = *v32;
          *((void *)this + 1) = v32 + 1;
        }
        int v33 = *((_DWORD *)this + 14);
        int v34 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v33 + 1;
        if (v33 >= v34) {
          return 0;
        }
        int v35 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v52);
        if (!sub_1008EA398(v31, this, v36) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v35);
        int v37 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v37, 1);
        int v38 = v37 - 1;
        if (v38 < 0 == v28) {
          *((_DWORD *)this + 14) = v38;
        }
        int v39 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v39 >= *((void *)this + 2) || *v39 != 42) {
          continue;
        }
        *((void *)this + 1) = v39 + 1;
LABEL_71:
        *(_DWORD *)(a1 + 52) |= 0x10u;
        uint64_t v40 = *(void *)(a1 + 32);
        if (!v40) {
          operator new();
        }
        unsigned int v52 = 0;
        uint64_t v41 = (char *)*((void *)this + 1);
        if ((unint64_t)v41 >= *((void *)this + 2) || *v41 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v52))return 0; {
        }
          }
        else
        {
          unsigned int v52 = *v41;
          *((void *)this + 1) = v41 + 1;
        }
        int v42 = *((_DWORD *)this + 14);
        int v43 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v42 + 1;
        if (v42 < v43)
        {
          int v44 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v52);
          if (sub_1008E88DC(v40, this, v45))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v44);
              int v46 = *((_DWORD *)this + 14);
              BOOL v28 = __OFSUB__(v46, 1);
              int v47 = v46 - 1;
              if (v47 < 0 == v28) {
                *((_DWORD *)this + 14) = v47;
              }
              int v48 = (unsigned char *)*((void *)this + 1);
              unint64_t v15 = *((void *)this + 2);
              if ((unint64_t)v48 < v15 && *v48 == 48)
              {
                int v16 = v48 + 1;
                *((void *)this + 1) = v16;
LABEL_85:
                if ((unint64_t)v16 >= v15 || *v16 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
                  if (!result) {
                    return result;
                  }
                  unsigned int v49 = (unsigned char *)*((void *)this + 1);
                  unint64_t v15 = *((void *)this + 2);
                }
                else
                {
                  *char v6 = *v16;
                  unsigned int v49 = v16 + 1;
                  *((void *)this + 1) = v49;
                }
                *(_DWORD *)(a1 + 52) |= 0x20u;
                if ((unint64_t)v49 < v15 && *v49 == 56)
                {
                  uint64_t v17 = v49 + 1;
                  *((void *)this + 1) = v17;
LABEL_93:
                  unsigned int v52 = 0;
                  if ((unint64_t)v17 >= v15 || *v17 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v52);
                    if (!result) {
                      return result;
                    }
                    unsigned int v50 = v52;
                    unsigned int v51 = (unsigned __int8 *)*((void *)this + 1);
                    unint64_t v15 = *((void *)this + 2);
                  }
                  else
                  {
                    unsigned int v50 = *v17;
                    unsigned int v51 = (unsigned __int8 *)(v17 + 1);
                    *((void *)this + 1) = v51;
                  }
                  *(unsigned char *)(a1 + 44) = v50 != 0;
                  *(_DWORD *)(a1 + 52) |= 0x40u;
                  if (v51 == (unsigned __int8 *)v15
                    && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                  {
                    *((_DWORD *)this + 8) = 0;
                    uint64_t result = 1;
                    *((unsigned char *)this + 36) = 1;
                    return result;
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_24;
        }
        int v14 = *(_DWORD *)(a1 + 52);
        goto LABEL_43;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_57;
        }
        goto LABEL_24;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_71;
        }
        goto LABEL_24;
      case 6u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_85;
      case 7u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        uint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_93;
      default:
        int v9 = TagFallback & 7;
LABEL_24:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1008EBAE4(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 52);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), (int)a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_11:
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248A5E8 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_14:
  uint64_t v8 = *(void *)(v5 + 24);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_10248A5E8 + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_20:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 40), a2, a4);
    if ((*(_DWORD *)(v5 + 52) & 0x40) == 0) {
      return result;
    }
    goto LABEL_21;
  }
LABEL_17:
  uint64_t v9 = *(void *)(v5 + 32);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_10248A5E8 + 32);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x20) != 0) {
    goto LABEL_20;
  }
LABEL_7:
  if ((v6 & 0x40) == 0) {
    return result;
  }
LABEL_21:
  int v10 = *(unsigned __int8 *)(v5 + 44);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v10, (BOOL)a2, a4);
}

uint64_t sub_1008EBC10(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 52);
  if (!(_BYTE)v3)
  {
    uint64_t result = 0;
    goto LABEL_47;
  }
  if (*(unsigned char *)(a1 + 52))
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v6 & 0x80000000) != 0)
    {
      unsigned int v4 = 11;
      if ((v3 & 2) == 0) {
        goto LABEL_17;
      }
    }
    else if (v6 >= 0x80)
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 52);
      if ((v3 & 2) == 0) {
        goto LABEL_17;
      }
    }
    else
    {
      unsigned int v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_17;
      }
    }
  }
  else
  {
    unsigned int v4 = 0;
    if ((*(unsigned char *)(a1 + 52) & 2) == 0) {
      goto LABEL_17;
    }
  }
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v7 >= 0x80)
  {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 52);
  }
  else
  {
    int v8 = 2;
  }
  v4 += v8;
LABEL_17:
  if ((v3 & 4) != 0)
  {
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_10248A5E8 + 16);
    }
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D47D0(v9, a2);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    }
    else {
      int v12 = 1;
    }
    v4 += v11 + v12 + 1;
    int v3 = *(_DWORD *)(a1 + 52);
    if ((v3 & 8) == 0)
    {
LABEL_19:
      if ((v3 & 0x10) == 0) {
        goto LABEL_20;
      }
LABEL_34:
      uint64_t v17 = *(void *)(a1 + 32);
      if (!v17) {
        uint64_t v17 = *(void *)(qword_10248A5E8 + 32);
      }
      int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008E9028(v17, a2);
      int v19 = (int)v18;
      if (v18 >= 0x80) {
        int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
      }
      else {
        int v20 = 1;
      }
      v4 += v19 + v20 + 1;
      int v3 = *(_DWORD *)(a1 + 52);
      if ((v3 & 0x20) == 0) {
        goto LABEL_44;
      }
      goto LABEL_40;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_19;
  }
  uint64_t v13 = *(void *)(a1 + 24);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_10248A5E8 + 24);
  }
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008EAC94(v13, a2);
  int v15 = (int)v14;
  if (v14 >= 0x80) {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
  }
  else {
    int v16 = 1;
  }
  v4 += v15 + v16 + 1;
  int v3 = *(_DWORD *)(a1 + 52);
  if ((v3 & 0x10) != 0) {
    goto LABEL_34;
  }
LABEL_20:
  if ((v3 & 0x20) != 0)
  {
LABEL_40:
    uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
    if (v21 >= 0x80)
    {
      int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 52);
    }
    else
    {
      int v22 = 2;
    }
    v4 += v22;
  }
LABEL_44:
  if ((v3 & 0x40) != 0) {
    uint64_t result = v4 + 2;
  }
  else {
    uint64_t result = v4;
  }
LABEL_47:
  *(_DWORD *)(a1 + 48) = result;
  return result;
}

void sub_1008EBDD4(uint64_t a1, void *lpsrc)
{
  sub_1008EAF6C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008EBE5C()
{
  return 1;
}

void *sub_1008EBE64@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.MeasurementReport");
}

void sub_1008EBE74(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    sub_100221DFC(a1 + 24, *(_DWORD *)(a1 + 32) + v4);
    memcpy((void *)(*(void *)(a1 + 24) + 4 * *(int *)(a1 + 32)), *(const void **)(a2 + 24), 4 * *(int *)(a2 + 32));
    *(_DWORD *)(a1 + 32) += *(_DWORD *)(a2 + 32);
  }
  int v5 = *(_DWORD *)(a2 + 48);
  if (v5)
  {
    sub_100221DFC(a1 + 40, *(_DWORD *)(a1 + 48) + v5);
    memcpy((void *)(*(void *)(a1 + 40) + 4 * *(int *)(a1 + 48)), *(const void **)(a2 + 40), 4 * *(int *)(a2 + 48));
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
  }
  LOBYTE(v6) = *(unsigned char *)(a2 + 64);
  if ((_BYTE)v6)
  {
    if (*(unsigned char *)(a2 + 64))
    {
      int v8 = *(_DWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 64) |= 1u;
      *(_DWORD *)(a1 + 8) = v8;
      int v6 = *(_DWORD *)(a2 + 64);
      if ((v6 & 2) == 0)
      {
LABEL_10:
        if ((v6 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_17;
      }
    }
    else if ((*(unsigned char *)(a2 + 64) & 2) == 0)
    {
      goto LABEL_10;
    }
    int v9 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 64) |= 2u;
    *(_DWORD *)(a1 + 12) = v9;
    int v6 = *(_DWORD *)(a2 + 64);
    if ((v6 & 4) == 0)
    {
LABEL_11:
      if ((v6 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_18;
    }
LABEL_17:
    int v10 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 64) |= 4u;
    *(_DWORD *)(a1 + 16) = v10;
    int v6 = *(_DWORD *)(a2 + 64);
    if ((v6 & 8) == 0)
    {
LABEL_12:
      if ((v6 & 0x40) == 0) {
        return;
      }
      goto LABEL_13;
    }
LABEL_18:
    int v11 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 64) |= 8u;
    *(_DWORD *)(a1 + 20) = v11;
    if ((*(_DWORD *)(a2 + 64) & 0x40) == 0) {
      return;
    }
LABEL_13:
    int v7 = *(_DWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 64) |= 0x40u;
    *(_DWORD *)(a1 + 56) = v7;
  }
}

void sub_1008EC010(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008EC028(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022D1C08;
  if (*((void *)this + 5)) {
    operator delete[]();
  }
  if (*((void *)this + 3)) {
    operator delete[]();
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008EC0B4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008EC028(a1);

  operator delete();
}

void sub_1008EC0EC()
{
}

uint64_t sub_1008EC148(uint64_t result)
{
  if (*(unsigned char *)(result + 64))
  {
    *(_DWORD *)(result + 56) = 0;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 48) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

uint64_t sub_1008EC168(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unsigned int a3)
{
  uint64_t v5 = a1 + 40;
  uint64_t v6 = a1 + 24;
  unsigned int v49 = (unsigned int *)(a1 + 8);
  unsigned int v50 = (unsigned int *)(a1 + 12);
  int v7 = (unsigned int *)(a1 + 16);
  int v8 = (unsigned int *)(a1 + 20);
  int v9 = (unsigned int *)(a1 + 56);
LABEL_2:
  while (2)
  {
    int v10 = (char *)*((void *)this + 1);
    if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v10;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v49);
          if (!result) {
            return result;
          }
          int v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v49 = *v14;
          int v15 = v14 + 1;
          *((void *)this + 1) = v15;
        }
        *(_DWORD *)(a1 + 64) |= 1u;
        if ((unint64_t)v15 < v13 && *v15 == 16)
        {
          int v16 = v15 + 1;
          *((void *)this + 1) = v16;
          goto LABEL_39;
        }
        continue;
      case 2u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
LABEL_39:
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v50);
          if (!result) {
            return result;
          }
          int v23 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *unsigned int v50 = *v16;
          int v23 = v16 + 1;
          *((void *)this + 1) = v23;
        }
        *(_DWORD *)(a1 + 64) |= 2u;
        if ((unint64_t)v23 >= v13 || *v23 != 24) {
          continue;
        }
        uint64_t v17 = v23 + 1;
        *((void *)this + 1) = v17;
LABEL_47:
        if ((unint64_t)v17 >= v13 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v24 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *int v7 = *v17;
          int v24 = v17 + 1;
          *((void *)this + 1) = v24;
        }
        *(_DWORD *)(a1 + 64) |= 4u;
        if ((unint64_t)v24 >= v13 || *v24 != 32) {
          continue;
        }
        int v18 = v24 + 1;
        *((void *)this + 1) = v18;
LABEL_55:
        if ((unint64_t)v18 >= v13 || (char)*v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v25 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v18;
          int v25 = v18 + 1;
          *((void *)this + 1) = v25;
        }
        *(_DWORD *)(a1 + 64) |= 8u;
        if ((unint64_t)v25 >= v13) {
          continue;
        }
        int v26 = *v25;
        goto LABEL_81;
      case 3u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        uint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_47;
      case 4u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v18 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_55;
      case 5u:
        int v12 = TagFallback & 7;
        if (v12 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            int v19 = (char *)*((void *)this + 1);
            unint64_t v13 = *((void *)this + 2);
            goto LABEL_62;
          }
          goto LABEL_26;
        }
        uint64_t result = sub_1008CEA24(this, v6);
        if (!result) {
          return result;
        }
        while (1)
        {
          int v25 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
          if ((unint64_t)v25 >= v13) {
            goto LABEL_2;
          }
          int v26 = *v25;
          if (v26 == 48) {
            goto LABEL_103;
          }
LABEL_81:
          if (v26 != 40) {
            goto LABEL_2;
          }
          int v19 = (char *)(v25 + 1);
          *((void *)this + 1) = v19;
LABEL_62:
          unsigned int v51 = 0;
          if ((unint64_t)v19 >= v13 || *v19 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v51))return 0; {
          }
            }
          else
          {
            unsigned int v51 = *v19;
            *((void *)this + 1) = v19 + 1;
          }
          int v27 = *(_DWORD *)(a1 + 32);
          if (v27 == *(_DWORD *)(a1 + 36))
          {
            sub_100221DFC(v6, v27 + 1);
            int v27 = *(_DWORD *)(a1 + 32);
          }
          unsigned int v28 = v51;
          uint64_t v29 = *(void *)(a1 + 24);
          *(_DWORD *)(a1 + 32) = v27 + 1;
          *(_DWORD *)(v29 + 4 * v27) = v28;
          int v30 = *(_DWORD *)(a1 + 36) - *(_DWORD *)(a1 + 32);
          if (v30 >= 1)
          {
            int v31 = v30 + 1;
            do
            {
              int v32 = (unsigned char *)*((void *)this + 1);
              unint64_t v33 = *((void *)this + 2);
              if ((unint64_t)v32 >= v33 || *v32 != 40) {
                break;
              }
              *((void *)this + 1) = v32 + 1;
              if ((unint64_t)(v32 + 1) >= v33 || (char)v32[1] < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v51))return 0; {
              }
                }
              else
              {
                unsigned int v51 = v32[1];
                *((void *)this + 1) = v32 + 2;
              }
              int v34 = *(_DWORD *)(a1 + 32);
              if (v34 >= *(_DWORD *)(a1 + 36))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v52);
                int v34 = *(_DWORD *)(a1 + 32);
              }
              unsigned int v35 = v51;
              uint64_t v36 = *(void *)(a1 + 24);
              *(_DWORD *)(a1 + 32) = v34 + 1;
              *(_DWORD *)(v36 + 4 * v34) = v35;
              --v31;
            }
            while (v31 > 1);
          }
        }
      case 6u:
        int v12 = TagFallback & 7;
        if (v12 == 2)
        {
          uint64_t result = sub_1008CEA24(this, v5);
          if (!result) {
            return result;
          }
          while (1)
          {
            int v25 = (unsigned __int8 *)*((void *)this + 1);
            unint64_t v13 = *((void *)this + 2);
            if ((unint64_t)v25 >= v13) {
              goto LABEL_2;
            }
            int v47 = *v25;
            if (v47 == 56)
            {
              uint64_t v21 = (char *)(v25 + 1);
              *((void *)this + 1) = v21;
LABEL_105:
              if ((unint64_t)v21 >= v13 || *v21 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
                if (!result) {
                  return result;
                }
                int v48 = (unsigned __int8 *)*((void *)this + 1);
                unint64_t v13 = *((void *)this + 2);
              }
              else
              {
                *int v9 = *v21;
                int v48 = (unsigned __int8 *)(v21 + 1);
                *((void *)this + 1) = v48;
              }
              *(_DWORD *)(a1 + 64) |= 0x40u;
              if (v48 == (unsigned __int8 *)v13
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
              goto LABEL_2;
            }
            if (v47 != 48) {
              goto LABEL_2;
            }
LABEL_103:
            int v20 = (char *)(v25 + 1);
            *((void *)this + 1) = v20;
LABEL_83:
            unsigned int v51 = 0;
            if ((unint64_t)v20 >= v13 || *v20 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v51))return 0; {
            }
              }
            else
            {
              unsigned int v51 = *v20;
              *((void *)this + 1) = v20 + 1;
            }
            int v37 = *(_DWORD *)(a1 + 48);
            if (v37 == *(_DWORD *)(a1 + 52))
            {
              sub_100221DFC(v5, v37 + 1);
              int v37 = *(_DWORD *)(a1 + 48);
            }
            unsigned int v38 = v51;
            uint64_t v39 = *(void *)(a1 + 40);
            *(_DWORD *)(a1 + 48) = v37 + 1;
            *(_DWORD *)(v39 + 4 * v37) = v38;
            int v40 = *(_DWORD *)(a1 + 52) - *(_DWORD *)(a1 + 48);
            if (v40 >= 1)
            {
              int v41 = v40 + 1;
              do
              {
                int v42 = (unsigned char *)*((void *)this + 1);
                unint64_t v43 = *((void *)this + 2);
                if ((unint64_t)v42 >= v43 || *v42 != 48) {
                  break;
                }
                *((void *)this + 1) = v42 + 1;
                if ((unint64_t)(v42 + 1) >= v43 || (char)v42[1] < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v51))return 0; {
                }
                  }
                else
                {
                  unsigned int v51 = v42[1];
                  *((void *)this + 1) = v42 + 2;
                }
                int v44 = *(_DWORD *)(a1 + 48);
                if (v44 >= *(_DWORD *)(a1 + 52))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v52);
                  int v44 = *(_DWORD *)(a1 + 48);
                }
                unsigned int v45 = v51;
                uint64_t v46 = *(void *)(a1 + 40);
                *(_DWORD *)(a1 + 48) = v44 + 1;
                *(_DWORD *)(v46 + 4 * v44) = v45;
                --v41;
              }
              while (v41 > 1);
            }
          }
        }
        if ((TagFallback & 7) == 0)
        {
          int v20 = (char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
          goto LABEL_83;
        }
LABEL_26:
        if (v12 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
          continue;
          }
        }
        return 1;
      case 7u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        uint64_t v21 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_105;
      default:
        int v12 = TagFallback & 7;
        goto LABEL_26;
    }
  }
}

void sub_1008EC7DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1008EC818(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 64);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 64);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 16), a2, a4);
  if ((*(_DWORD *)(v5 + 64) & 8) != 0) {
LABEL_5:
  }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 20), a2, a4);
LABEL_6:
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(*(void *)(v5 + 24) + 4 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  if (*(int *)(v5 + 48) >= 1)
  {
    uint64_t v8 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(*(void *)(v5 + 40) + 4 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 48));
  }
  if ((*(unsigned char *)(v5 + 64) & 0x40) != 0)
  {
    int v9 = *(_DWORD *)(v5 + 56);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v9, a2, a4);
  }
  return result;
}

uint64_t sub_1008EC950(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 64);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    goto LABEL_30;
  }
  if (*(unsigned char *)(a1 + 64))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 64);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      int v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    int v4 = 0;
    if ((*(unsigned char *)(a1 + 64) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 64);
  }
  else
  {
    int v7 = 2;
  }
  v4 += v7;
LABEL_14:
  if ((v3 & 4) != 0)
  {
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 64);
    }
    else
    {
      int v9 = 2;
    }
    v4 += v9;
    if ((v3 & 8) == 0)
    {
LABEL_16:
      if ((v3 & 0x40) == 0) {
        goto LABEL_30;
      }
      goto LABEL_26;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 64);
  }
  else
  {
    int v11 = 2;
  }
  v4 += v11;
  if ((v3 & 0x40) != 0)
  {
LABEL_26:
    int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
    if (v12 >= 0x80) {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
    }
    else {
      int v13 = 2;
    }
    v4 += v13;
  }
LABEL_30:
  int v14 = *(_DWORD *)(a1 + 32);
  if (v14 < 1)
  {
    int v16 = 0;
  }
  else
  {
    uint64_t v15 = 0;
    int v16 = 0;
    do
    {
      uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 24)
                                                                                             + 4 * v15);
      if (v17 >= 0x80)
      {
        int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2);
        int v14 = *(_DWORD *)(a1 + 32);
      }
      else
      {
        int v18 = 1;
      }
      v16 += v18;
      ++v15;
    }
    while (v15 < v14);
  }
  int v19 = *(_DWORD *)(a1 + 48);
  if (v19 < 1)
  {
    int v21 = 0;
  }
  else
  {
    uint64_t v20 = 0;
    int v21 = 0;
    do
    {
      int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 40)
                                                                                             + 4 * v20);
      if (v22 >= 0x80)
      {
        int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, a2);
        int v19 = *(_DWORD *)(a1 + 48);
      }
      else
      {
        int v23 = 1;
      }
      v21 += v23;
      ++v20;
    }
    while (v20 < v19);
  }
  uint64_t result = (v16 + v4 + v19 + v14 + v21);
  *(_DWORD *)(a1 + 60) = result;
  return result;
}

void sub_1008ECB18(uint64_t a1, void *lpsrc)
{
  sub_1008EBE74(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008ECBA0()
{
  return 1;
}

void *sub_1008ECBA8@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.GpsAssistanceRequest");
}

void sub_1008ECBB8(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 20))
    {
      int v5 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v5;
      int v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v6;
    }
  }
}

void sub_1008ECC64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008ECC7C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D1C80;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008ECC9C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D1C80;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008ECCF0()
{
}

uint64_t sub_1008ECD3C(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1008ECD50(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  while (1)
  {
    while (1)
    {
      int v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      int v12 = (char *)*((void *)this + 1);
      unint64_t v10 = *((void *)this + 2);
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!result) {
          return result;
        }
        int v13 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
      }
      else
      {
        *int v5 = *v12;
        int v13 = v12 + 1;
        *((void *)this + 1) = v13;
      }
      a1[5] |= 1u;
      if ((unint64_t)v13 < v10 && *v13 == 16)
      {
        int v11 = v13 + 1;
        *((void *)this + 1) = v11;
LABEL_24:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v11;
          int v14 = (unsigned __int8 *)(v11 + 1);
          *((void *)this + 1) = v14;
        }
        a1[5] |= 2u;
        if (v14 == (unsigned __int8 *)v10
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v9 = TagFallback & 7;
    }
LABEL_16:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1008ECEF0(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(_DWORD *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_1008ECF5C(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 20);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 20))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_14;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 20) & 2) == 0) {
        goto LABEL_14;
      }
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v6 >= 0x80) {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    }
    else {
      int v7 = 2;
    }
    uint64_t v4 = (v7 + v4);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_14:
  *(_DWORD *)(a1 + 16) = v4;
  return v4;
}

void sub_1008ECFEC(_DWORD *a1, void *lpsrc)
{
  sub_1008ECBB8(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008ED074()
{
  return 1;
}

void *sub_1008ED07C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.GanssTimeModelElem");
}

void sub_1008ED08C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    sub_100221DFC(a1 + 24, *(_DWORD *)(a1 + 32) + v4);
    memcpy((void *)(*(void *)(a1 + 24) + 4 * *(int *)(a1 + 32)), *(const void **)(a2 + 24), 4 * *(int *)(a2 + 32));
    *(_DWORD *)(a1 + 32) += *(_DWORD *)(a2 + 32);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 48);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 48))
    {
      int v7 = *(_DWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 48) |= 1u;
      *(_DWORD *)(a1 + 8) = v7;
      int v5 = *(_DWORD *)(a2 + 48);
      if ((v5 & 2) == 0)
      {
LABEL_8:
        if ((v5 & 4) == 0) {
          goto LABEL_9;
        }
        goto LABEL_15;
      }
    }
    else if ((*(unsigned char *)(a2 + 48) & 2) == 0)
    {
      goto LABEL_8;
    }
    int v8 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 48) |= 2u;
    *(_DWORD *)(a1 + 12) = v8;
    int v5 = *(_DWORD *)(a2 + 48);
    if ((v5 & 4) == 0)
    {
LABEL_9:
      if ((v5 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_16;
    }
LABEL_15:
    int v9 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 48) |= 4u;
    *(_DWORD *)(a1 + 16) = v9;
    int v5 = *(_DWORD *)(a2 + 48);
    if ((v5 & 8) == 0)
    {
LABEL_10:
      if ((v5 & 0x10) == 0) {
        return;
      }
      goto LABEL_11;
    }
LABEL_16:
    int v10 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 48) |= 8u;
    *(_DWORD *)(a1 + 20) = v10;
    if ((*(_DWORD *)(a2 + 48) & 0x10) == 0) {
      return;
    }
LABEL_11:
    int v6 = *(_DWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 48) |= 0x10u;
    *(_DWORD *)(a1 + 40) = v6;
  }
}

void sub_1008ED1E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008ED1FC(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022D1CF8;
  if (*((void *)this + 3)) {
    operator delete[]();
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008ED26C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008ED1FC(a1);

  operator delete();
}

void sub_1008ED2A4()
{
}

uint64_t sub_1008ED2FC(uint64_t result)
{
  if (*(unsigned char *)(result + 48))
  {
    *(_DWORD *)(result + 40) = 0;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

uint64_t sub_1008ED318(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unsigned int a3)
{
  uint64_t v5 = a1 + 24;
  uint64_t v36 = (unsigned int *)(a1 + 8);
  int v6 = (unsigned int *)(a1 + 12);
  int v7 = (unsigned int *)(a1 + 16);
  int v8 = (unsigned int *)(a1 + 20);
  int v9 = (unsigned int *)(a1 + 40);
  while (2)
  {
    int v10 = (char *)*((void *)this + 1);
    if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v10;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v14 = (char *)*((void *)this + 1);
        int v13 = (char *)*((void *)this + 2);
        if (v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v36);
          if (!result) {
            return result;
          }
          uint64_t v15 = (char *)*((void *)this + 1);
          int v13 = (char *)*((void *)this + 2);
        }
        else
        {
          *uint64_t v36 = *v14;
          uint64_t v15 = v14 + 1;
          *((void *)this + 1) = v15;
        }
        *(_DWORD *)(a1 + 48) |= 1u;
        if (v15 < v13 && *v15 == 16)
        {
          int v16 = v15 + 1;
          *((void *)this + 1) = v16;
          goto LABEL_34;
        }
        continue;
      case 2u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v16 = (char *)*((void *)this + 1);
        int v13 = (char *)*((void *)this + 2);
LABEL_34:
        if (v16 >= v13 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v22 = (char *)*((void *)this + 1);
          int v13 = (char *)*((void *)this + 2);
        }
        else
        {
          *int v6 = *v16;
          int v22 = v16 + 1;
          *((void *)this + 1) = v22;
        }
        *(_DWORD *)(a1 + 48) |= 2u;
        if (v22 >= v13 || *v22 != 24) {
          continue;
        }
        uint64_t v17 = v22 + 1;
        *((void *)this + 1) = v17;
LABEL_42:
        if (v17 >= v13 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v23 = (char *)*((void *)this + 1);
          int v13 = (char *)*((void *)this + 2);
        }
        else
        {
          *int v7 = *v17;
          int v23 = v17 + 1;
          *((void *)this + 1) = v23;
        }
        *(_DWORD *)(a1 + 48) |= 4u;
        if (v23 >= v13 || *v23 != 32) {
          continue;
        }
        int v18 = v23 + 1;
        *((void *)this + 1) = v18;
LABEL_50:
        if (v18 >= v13 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v24 = (char *)*((void *)this + 1);
          int v13 = (char *)*((void *)this + 2);
        }
        else
        {
          *int v8 = *v18;
          int v24 = v18 + 1;
          *((void *)this + 1) = v24;
        }
        *(_DWORD *)(a1 + 48) |= 8u;
        if (v24 >= v13 || *v24 != 40) {
          continue;
        }
        int v19 = v24 + 1;
        *((void *)this + 1) = v19;
LABEL_58:
        if (v19 >= v13 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          int v25 = (char *)*((void *)this + 1);
          int v13 = (char *)*((void *)this + 2);
        }
        else
        {
          *int v9 = *v19;
          int v25 = v19 + 1;
          *((void *)this + 1) = v25;
        }
        *(_DWORD *)(a1 + 48) |= 0x10u;
        if (v25 < v13 && *v25 == 48) {
          goto LABEL_65;
        }
        continue;
      case 3u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        uint64_t v17 = (char *)*((void *)this + 1);
        int v13 = (char *)*((void *)this + 2);
        goto LABEL_42;
      case 4u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v18 = (char *)*((void *)this + 1);
        int v13 = (char *)*((void *)this + 2);
        goto LABEL_50;
      case 5u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v19 = (char *)*((void *)this + 1);
        int v13 = (char *)*((void *)this + 2);
        goto LABEL_58;
      case 6u:
        int v12 = TagFallback & 7;
        if (v12 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            uint64_t v20 = (char *)*((void *)this + 1);
            int v13 = (char *)*((void *)this + 2);
            goto LABEL_66;
          }
LABEL_24:
          if (v12 == 4) {
            return 1;
          }
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
          continue;
          }
        }
        uint64_t result = sub_1008CEA24(this, v5);
        if (!result) {
          return result;
        }
LABEL_83:
        int v25 = (char *)*((void *)this + 1);
        int v13 = (char *)*((void *)this + 2);
        if (v25 >= v13 || *v25 != 48)
        {
          if (v25 == v13 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
LABEL_65:
        uint64_t v20 = v25 + 1;
        *((void *)this + 1) = v20;
LABEL_66:
        unsigned int v37 = 0;
        if (v20 < v13 && (*v20 & 0x80000000) == 0)
        {
          unsigned int v37 = *v20;
          *((void *)this + 1) = v20 + 1;
LABEL_70:
          int v26 = *(_DWORD *)(a1 + 32);
          if (v26 == *(_DWORD *)(a1 + 36))
          {
            sub_100221DFC(v5, v26 + 1);
            int v26 = *(_DWORD *)(a1 + 32);
          }
          unsigned int v27 = v37;
          uint64_t v28 = *(void *)(a1 + 24);
          *(_DWORD *)(a1 + 32) = v26 + 1;
          *(_DWORD *)(v28 + 4 * v26) = v27;
          int v29 = *(_DWORD *)(a1 + 36) - *(_DWORD *)(a1 + 32);
          if (v29 >= 1)
          {
            int v30 = v29 + 1;
            do
            {
              int v31 = (unsigned char *)*((void *)this + 1);
              unint64_t v32 = *((void *)this + 2);
              if ((unint64_t)v31 >= v32 || *v31 != 48) {
                break;
              }
              *((void *)this + 1) = v31 + 1;
              if ((unint64_t)(v31 + 1) >= v32 || (char)v31[1] < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v37))return 0; {
              }
                }
              else
              {
                unsigned int v37 = v31[1];
                *((void *)this + 1) = v31 + 2;
              }
              int v33 = *(_DWORD *)(a1 + 32);
              if (v33 >= *(_DWORD *)(a1 + 36))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v38);
                int v33 = *(_DWORD *)(a1 + 32);
              }
              unsigned int v34 = v37;
              uint64_t v35 = *(void *)(a1 + 24);
              *(_DWORD *)(a1 + 32) = v33 + 1;
              *(_DWORD *)(v35 + 4 * v33) = v34;
              --v30;
            }
            while (v30 > 1);
          }
          goto LABEL_83;
        }
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v37))goto LABEL_70; {
        return 0;
        }
      default:
        int v12 = TagFallback & 7;
        goto LABEL_24;
    }
  }
}

void sub_1008ED804(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1008ED834(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 48);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 16), a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 20), a2, a4);
  if ((*(_DWORD *)(v5 + 48) & 0x10) != 0) {
LABEL_6:
  }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 40), a2, a4);
LABEL_7:
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(*(void *)(v5 + 24) + 4 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  return result;
}

uint64_t sub_1008ED920(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 48);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    goto LABEL_30;
  }
  if (*(unsigned char *)(a1 + 48))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 48);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      int v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    int v4 = 0;
    if ((*(unsigned char *)(a1 + 48) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 48);
  }
  else
  {
    int v7 = 2;
  }
  v4 += v7;
LABEL_14:
  if ((v3 & 4) != 0)
  {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 48);
    }
    else
    {
      int v9 = 2;
    }
    v4 += v9;
    if ((v3 & 8) == 0)
    {
LABEL_16:
      if ((v3 & 0x10) == 0) {
        goto LABEL_30;
      }
      goto LABEL_26;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 48);
  }
  else
  {
    int v11 = 2;
  }
  v4 += v11;
  if ((v3 & 0x10) != 0)
  {
LABEL_26:
    int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
    if (v12 >= 0x80) {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
    }
    else {
      int v13 = 2;
    }
    v4 += v13;
  }
LABEL_30:
  int v14 = *(_DWORD *)(a1 + 32);
  if (v14 < 1)
  {
    int v16 = 0;
  }
  else
  {
    uint64_t v15 = 0;
    int v16 = 0;
    do
    {
      uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 24)
                                                                                             + 4 * v15);
      if (v17 >= 0x80)
      {
        int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2);
        int v14 = *(_DWORD *)(a1 + 32);
      }
      else
      {
        int v18 = 1;
      }
      v16 += v18;
      ++v15;
    }
    while (v15 < v14);
  }
  uint64_t result = (v16 + v4 + v14);
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_1008EDA8C(uint64_t a1, void *lpsrc)
{
  sub_1008ED08C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008EDB14()
{
  return 1;
}

void *sub_1008EDB1C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.GanssDataBitAssist");
}

void sub_1008EDB2C(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 20))
    {
      int v5 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v5;
      int v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v6;
    }
  }
}

void sub_1008EDBD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008EDBF0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D1D70;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008EDC10(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D1D70;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008EDC64()
{
}

uint64_t sub_1008EDCB0(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1008EDCC4(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  while (1)
  {
    while (1)
    {
      int v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      int v12 = (char *)*((void *)this + 1);
      unint64_t v10 = *((void *)this + 2);
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!result) {
          return result;
        }
        int v13 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
      }
      else
      {
        *int v5 = *v12;
        int v13 = v12 + 1;
        *((void *)this + 1) = v13;
      }
      a1[5] |= 1u;
      if ((unint64_t)v13 < v10 && *v13 == 16)
      {
        int v11 = v13 + 1;
        *((void *)this + 1) = v11;
LABEL_24:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v11;
          int v14 = (unsigned __int8 *)(v11 + 1);
          *((void *)this + 1) = v14;
        }
        a1[5] |= 2u;
        if (v14 == (unsigned __int8 *)v10
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v9 = TagFallback & 7;
    }
LABEL_16:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1008EDE64(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(_DWORD *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_1008EDED0(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 20);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 20))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_14;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 20) & 2) == 0) {
        goto LABEL_14;
      }
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v6 >= 0x80) {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    }
    else {
      int v7 = 2;
    }
    uint64_t v4 = (v7 + v4);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_14:
  *(_DWORD *)(a1 + 16) = v4;
  return v4;
}

void sub_1008EDF60(_DWORD *a1, void *lpsrc)
{
  sub_1008EDB2C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008EDFE8()
{
  return 1;
}

void *sub_1008EDFF0@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.GanssStoredSatDataElem");
}

void sub_1008EE000(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 6), *(_DWORD *)(a2 + 32) + a1[8]);
  if (*(int *)(a2 + 32) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 24) + 8 * v4);
      int v6 = a1[9];
      uint64_t v7 = (int)a1[8];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[10])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 6), v6 + 1);
          int v6 = a1[9];
        }
        a1[9] = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)a1 + 3);
      a1[8] = v7 + 1;
      sub_1008EDB2C(*(_DWORD **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 32));
  }
  LOBYTE(v9) = *(unsigned char *)(a2 + 52);
  if ((_BYTE)v9)
  {
    if (*(unsigned char *)(a2 + 52))
    {
      int v11 = *(_DWORD *)(a2 + 8);
      a1[13] |= 1u;
      a1[2] = v11;
      int v9 = *(_DWORD *)(a2 + 52);
      if ((v9 & 2) == 0)
      {
LABEL_14:
        if ((v9 & 4) == 0) {
          goto LABEL_15;
        }
        goto LABEL_20;
      }
    }
    else if ((*(unsigned char *)(a2 + 52) & 2) == 0)
    {
      goto LABEL_14;
    }
    int v12 = *(_DWORD *)(a2 + 12);
    a1[13] |= 2u;
    a1[3] = v12;
    int v9 = *(_DWORD *)(a2 + 52);
    if ((v9 & 4) == 0)
    {
LABEL_15:
      if ((v9 & 8) == 0) {
        return;
      }
      goto LABEL_16;
    }
LABEL_20:
    int v13 = *(_DWORD *)(a2 + 16);
    a1[13] |= 4u;
    a1[4] = v13;
    if ((*(_DWORD *)(a2 + 52) & 8) == 0) {
      return;
    }
LABEL_16:
    int v10 = *(_DWORD *)(a2 + 20);
    a1[13] |= 8u;
    a1[5] = v10;
  }
}

void sub_1008EE1E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008EE1F8(uint64_t *a1)
{
  *a1 = (uint64_t)off_1022D1DE8;
  sub_10016B2E8(a1 + 3);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_1008EE254(uint64_t *a1)
{
  sub_1008EE1F8(a1);

  operator delete();
}

void sub_1008EE28C()
{
}

uint64_t sub_1008EE2E8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 52))
  {
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
  }
  uint64_t result = sub_10026DEDC(a1 + 24);
  *(_DWORD *)(a1 + 52) = 0;
  return result;
}

uint64_t sub_1008EE320(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = a1 + 2;
  int v6 = a1 + 3;
  uint64_t v7 = a1 + 4;
  uint64_t v8 = a1 + 5;
  int v9 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 6);
  while (1)
  {
    int v10 = (unsigned __int8 *)*((void *)this + 1);
    if ((unint64_t)v10 >= *((void *)this + 2) || (char)*v10 < 0) {
      break;
    }
    unint64_t TagFallback = *v10;
    *((_DWORD *)this + 8) = TagFallback;
    *((void *)this + 1) = v10 + 1;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          uint64_t v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v5 = *v14;
          uint64_t v15 = v14 + 1;
          *((void *)this + 1) = v15;
        }
        a1[13] |= 1u;
        if ((unint64_t)v15 < v13 && *v15 == 16)
        {
          int v16 = v15 + 1;
          *((void *)this + 1) = v16;
          goto LABEL_28;
        }
        continue;
      case 2u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
LABEL_28:
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          uint64_t v20 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v16;
          uint64_t v20 = v16 + 1;
          *((void *)this + 1) = v20;
        }
        a1[13] |= 2u;
        if ((unint64_t)v20 >= v13 || *v20 != 24) {
          continue;
        }
        uint64_t v17 = v20 + 1;
        *((void *)this + 1) = v17;
LABEL_36:
        if ((unint64_t)v17 >= v13 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v21 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v7 = *v17;
          int v21 = v17 + 1;
          *((void *)this + 1) = v21;
        }
        a1[13] |= 4u;
        if ((unint64_t)v21 >= v13 || *v21 != 32) {
          continue;
        }
        int v18 = v21 + 1;
        *((void *)this + 1) = v18;
LABEL_44:
        if ((unint64_t)v18 >= v13 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v22 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v8 = *v18;
          int v22 = v18 + 1;
          *((void *)this + 1) = v22;
        }
        a1[13] |= 8u;
        if ((unint64_t)v22 >= v13 || *v22 != 42) {
          continue;
        }
        break;
      case 3u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        uint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_36;
      case 4u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_44;
      case 5u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_20;
        }
        goto LABEL_52;
      default:
        int v12 = TagFallback & 7;
LABEL_20:
        if (v12 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
    do
    {
      *((void *)this + 1) = v22 + 1;
LABEL_52:
      int v23 = a1[9];
      uint64_t v24 = (int)a1[8];
      if ((int)v24 >= v23)
      {
        if (v23 == a1[10])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v9, v23 + 1);
          int v23 = a1[9];
        }
        a1[9] = v23 + 1;
        operator new();
      }
      uint64_t v25 = *((void *)a1 + 3);
      a1[8] = v24 + 1;
      int v26 = *(unsigned int **)(v25 + 8 * v24);
      unsigned int v36 = 0;
      unsigned int v27 = (char *)*((void *)this + 1);
      if ((unint64_t)v27 >= *((void *)this + 2) || *v27 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v36))return 0; {
      }
        }
      else
      {
        unsigned int v36 = *v27;
        *((void *)this + 1) = v27 + 1;
      }
      int v28 = *((_DWORD *)this + 14);
      int v29 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v28 + 1;
      if (v28 >= v29) {
        return 0;
      }
      int v30 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v36);
      if (!sub_1008EDCC4(v26, this, v31) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v30);
      int v32 = *((_DWORD *)this + 14);
      BOOL v33 = __OFSUB__(v32, 1);
      int v34 = v32 - 1;
      if (v34 < 0 == v33) {
        *((_DWORD *)this + 14) = v34;
      }
      int v22 = (unsigned char *)*((void *)this + 1);
      uint64_t v35 = (unsigned char *)*((void *)this + 2);
    }
    while (v22 < v35 && *v22 == 42);
    if (v22 == v35 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
  unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
  *((_DWORD *)this + 8) = TagFallback;
  if (TagFallback) {
    goto LABEL_7;
  }
  return 1;
}

uint64_t sub_1008EE76C(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 52);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 16), a2, a4);
  if ((*(_DWORD *)(v5 + 52) & 8) != 0) {
LABEL_5:
  }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 20), a2, a4);
LABEL_6:
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(*(void *)(v5 + 24) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  return result;
}

uint64_t sub_1008EE83C(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 52);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    goto LABEL_25;
  }
  if (*(unsigned char *)(a1 + 52))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 52);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      int v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    int v4 = 0;
    if ((*(unsigned char *)(a1 + 52) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 52);
  }
  else
  {
    int v7 = 2;
  }
  v4 += v7;
LABEL_14:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_25;
    }
    goto LABEL_21;
  }
  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
  if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 52);
  }
  else
  {
    int v9 = 2;
  }
  v4 += v9;
  if ((v3 & 8) != 0)
  {
LABEL_21:
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if (v10 >= 0x80) {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    }
    else {
      int v11 = 2;
    }
    v4 += v11;
  }
LABEL_25:
  int v12 = *(_DWORD *)(a1 + 32);
  uint64_t v13 = (v12 + v4);
  if (v12 >= 1)
  {
    uint64_t v14 = 0;
    do
    {
      uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008EDED0(*(void *)(*(void *)(a1 + 24) + 8 * v14), a2);
      int v16 = (int)v15;
      if (v15 >= 0x80) {
        int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
      }
      else {
        int v17 = 1;
      }
      uint64_t v13 = (v16 + v13 + v17);
      ++v14;
    }
    while (v14 < *(int *)(a1 + 32));
  }
  *(_DWORD *)(a1 + 48) = v13;
  return v13;
}

void sub_1008EE980(_DWORD *a1, void *lpsrc)
{
  sub_1008EE000(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008EEA08()
{
  return 1;
}

void *sub_1008EEA10@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.GanssNavModelAddData");
}

void sub_1008EEA20(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      int v6 = *(_DWORD *)(a2 + 8);
      a1[7] |= 1u;
      a1[2] = v6;
      int v4 = *(_DWORD *)(a2 + 28);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((*(unsigned char *)(a2 + 28) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 12);
    a1[7] |= 2u;
    a1[3] = v7;
    int v4 = *(_DWORD *)(a2 + 28);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }
LABEL_12:
    int v8 = *(_DWORD *)(a2 + 16);
    a1[7] |= 4u;
    a1[4] = v8;
    if ((*(_DWORD *)(a2 + 28) & 8) == 0) {
      return;
    }
LABEL_8:
    int v5 = *(_DWORD *)(a2 + 20);
    a1[7] |= 8u;
    a1[5] = v5;
  }
}

void sub_1008EEB14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008EEB2C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D1E60;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008EEB4C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D1E60;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008EEBA0()
{
}

uint64_t sub_1008EEBEC(uint64_t result)
{
  if (*(unsigned char *)(result + 28))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_1008EEC00(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  int v7 = a1 + 4;
  int v8 = a1 + 5;
  while (2)
  {
    int v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v9;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v9 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v13 < v12 && (*v13 & 0x80000000) == 0)
        {
          *int v5 = *v13;
          uint64_t v14 = v13 + 1;
          *((void *)this + 1) = v14;
LABEL_24:
          a1[7] |= 1u;
          if ((unint64_t)v14 < v12 && *v14 == 16)
          {
            uint64_t v15 = v14 + 1;
            *((void *)this + 1) = v15;
            goto LABEL_27;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (result)
        {
          uint64_t v14 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          goto LABEL_24;
        }
        break;
      case 2u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        uint64_t v15 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
LABEL_27:
        if ((unint64_t)v15 >= v12 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v15;
          int v18 = v15 + 1;
          *((void *)this + 1) = v18;
        }
        a1[7] |= 2u;
        if ((unint64_t)v18 >= v12 || *v18 != 24) {
          continue;
        }
        int v16 = v18 + 1;
        *((void *)this + 1) = v16;
LABEL_35:
        if ((unint64_t)v16 >= v12 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v7 = *v16;
          int v19 = v16 + 1;
          *((void *)this + 1) = v19;
        }
        a1[7] |= 4u;
        if ((unint64_t)v19 >= v12 || *v19 != 32) {
          continue;
        }
        int v17 = v19 + 1;
        *((void *)this + 1) = v17;
LABEL_43:
        if ((unint64_t)v17 >= v12 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          uint64_t v20 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v17;
          uint64_t v20 = (unsigned __int8 *)(v17 + 1);
          *((void *)this + 1) = v20;
        }
        a1[7] |= 8u;
        if (v20 != (unsigned __int8 *)v12 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_35;
      case 4u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v17 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_43;
      default:
        int v11 = TagFallback & 7;
LABEL_18:
        if (v11 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

int *sub_1008EEEC0(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  int v6 = result[7];
  if (v6)
  {
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    int v6 = v5[7];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
      if ((v5[7] & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  int v6 = v5[7];
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  int v7 = v5[5];

  return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
}

uint64_t sub_1008EEF68(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 28);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_25;
  }
  if (*(unsigned char *)(a1 + 28))
  {
    int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 28);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 28) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 28);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_25;
    }
    goto LABEL_21;
  }
  int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
  if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 28);
  }
  else
  {
    int v9 = 2;
  }
  uint64_t v4 = (v9 + v4);
  if ((v3 & 8) != 0)
  {
LABEL_21:
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if (v10 >= 0x80) {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    }
    else {
      int v11 = 2;
    }
    uint64_t v4 = (v11 + v4);
  }
LABEL_25:
  *(_DWORD *)(a1 + 24) = v4;
  return v4;
}

void sub_1008EF050(_DWORD *a1, void *lpsrc)
{
  sub_1008EEA20(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008EF0D8()
{
  return 1;
}

void *sub_1008EF0E0@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.GanssAddAssistDataChoices");
}

void sub_1008EF0F0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), *(_DWORD *)(a2 + 24) + *(_DWORD *)(a1 + 24));
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 16) + 8 * v4);
      int v6 = *(_DWORD *)(a1 + 28);
      uint64_t v7 = *(int *)(a1 + 24);
      if ((int)v7 >= v6)
      {
        if (v6 == *(_DWORD *)(a1 + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), v6 + 1);
          int v6 = *(_DWORD *)(a1 + 28);
        }
        *(_DWORD *)(a1 + 28) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *(void *)(a1 + 16);
      *(_DWORD *)(a1 + 24) = v7 + 1;
      sub_1008ECBB8(*(_DWORD **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 24));
  }
  LOBYTE(v9) = *(unsigned char *)(a2 + 72);
  if (!(_BYTE)v9) {
    return;
  }
  if (*(unsigned char *)(a2 + 72))
  {
    unsigned int v10 = *(_DWORD *)(a2 + 8);
    if (v10 >= 7) {
      sub_101A73730();
    }
    *(_DWORD *)(a1 + 72) |= 1u;
    *(_DWORD *)(a1 + 8) = v10;
    int v9 = *(_DWORD *)(a2 + 72);
  }
  if ((v9 & 2) != 0)
  {
    int v11 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 72) |= 2u;
    *(_DWORD *)(a1 + 12) = v11;
    int v9 = *(_DWORD *)(a2 + 72);
    if ((v9 & 4) == 0)
    {
LABEL_17:
      if ((v9 & 0x10) == 0) {
        goto LABEL_18;
      }
LABEL_23:
      *(_DWORD *)(a1 + 72) |= 0x10u;
      uint64_t v13 = *(void *)(a1 + 40);
      if (!v13) {
        operator new();
      }
      uint64_t v14 = *(void *)(a2 + 40);
      if (!v14) {
        uint64_t v14 = *(void *)(qword_10248A620 + 40);
      }
      sub_1008ED08C(v13, v14);
      int v9 = *(_DWORD *)(a2 + 72);
      if ((v9 & 0x20) == 0)
      {
LABEL_19:
        if ((v9 & 0x40) == 0) {
          return;
        }
        goto LABEL_33;
      }
      goto LABEL_28;
    }
  }
  else if ((v9 & 4) == 0)
  {
    goto LABEL_17;
  }
  int v12 = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 72) |= 4u;
  *(_DWORD *)(a1 + 64) = v12;
  int v9 = *(_DWORD *)(a2 + 72);
  if ((v9 & 0x10) != 0) {
    goto LABEL_23;
  }
LABEL_18:
  if ((v9 & 0x20) == 0) {
    goto LABEL_19;
  }
LABEL_28:
  *(_DWORD *)(a1 + 72) |= 0x20u;
  uint64_t v15 = *(_DWORD **)(a1 + 48);
  if (!v15) {
    operator new();
  }
  uint64_t v16 = *(void *)(a2 + 48);
  if (!v16) {
    uint64_t v16 = *(void *)(qword_10248A620 + 48);
  }
  sub_1008EE000(v15, v16);
  if ((*(_DWORD *)(a2 + 72) & 0x40) != 0)
  {
LABEL_33:
    *(_DWORD *)(a1 + 72) |= 0x40u;
    int v17 = *(_DWORD **)(a1 + 56);
    if (!v17) {
      operator new();
    }
    uint64_t v18 = *(void *)(a2 + 56);
    if (!v18) {
      uint64_t v18 = *(void *)(qword_10248A620 + 56);
    }
    sub_1008EEA20(v17, v18);
  }
}

void sub_1008EF430(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008EF448(uint64_t *a1)
{
  *a1 = (uint64_t)off_1022D1ED8;
  int v2 = a1 + 2;
  sub_1008EF4AC(a1);
  sub_10016B2E8(v2);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void *sub_1008EF4AC(void *result)
{
  if ((void *)qword_10248A620 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[5];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[6];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t result = (void *)v1[7];
    if (result)
    {
      uint64_t v4 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v4();
    }
  }
  return result;
}

void sub_1008EF57C(uint64_t *a1)
{
  sub_1008EF448(a1);

  operator delete();
}

void sub_1008EF5B4()
{
}

uint64_t sub_1008EF614(uint64_t a1)
{
  LOBYTE(v2) = *(unsigned char *)(a1 + 72);
  if ((_BYTE)v2)
  {
    *(void *)(a1 + 8) = 0;
    *(_DWORD *)(a1 + 64) = 0;
    if ((v2 & 0x10) != 0)
    {
      uint64_t v3 = *(void *)(a1 + 40);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 48))
        {
          *(_DWORD *)(v3 + 40) = 0;
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 32) = 0;
        *(_DWORD *)(v3 + 48) = 0;
        int v2 = *(_DWORD *)(a1 + 72);
      }
    }
    if ((v2 & 0x20) != 0)
    {
      uint64_t v4 = *(void *)(a1 + 48);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 52))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
        }
        sub_10026DEDC(v4 + 24);
        *(_DWORD *)(v4 + 52) = 0;
        int v2 = *(_DWORD *)(a1 + 72);
      }
    }
    if ((v2 & 0x40) != 0)
    {
      uint64_t v5 = *(void *)(a1 + 56);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 28))
        {
          *(void *)(v5 + 8) = 0;
          *(void *)(v5 + 16) = 0;
        }
        *(_DWORD *)(v5 + 28) = 0;
      }
    }
  }
  uint64_t result = sub_10026DEDC(a1 + 16);
  *(_DWORD *)(a1 + 72) = 0;
  return result;
}

uint64_t sub_1008EF6BC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)(a1 + 12);
  int v6 = (unsigned int *)(a1 + 64);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16);
  while (1)
  {
LABEL_2:
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 < *((void *)this + 2) && (*v8 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        unsigned int v59 = 0;
        int v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v59);
          if (!result) {
            return result;
          }
          unsigned int v12 = v59;
        }
        else
        {
          unsigned int v12 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        if (v12 <= 6)
        {
          *(_DWORD *)(a1 + 72) |= 1u;
          *(_DWORD *)(a1 + 8) = v12;
        }
        int v17 = (unsigned char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((unint64_t)v17 < v13 && *v17 == 16)
        {
          uint64_t v14 = v17 + 1;
          *((void *)this + 1) = v14;
          goto LABEL_34;
        }
        continue;
      case 2u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
LABEL_34:
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          uint64_t v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v5 = *v14;
          uint64_t v18 = v14 + 1;
          *((void *)this + 1) = v18;
        }
        *(_DWORD *)(a1 + 72) |= 2u;
        if ((unint64_t)v18 >= v13 || *v18 != 24) {
          continue;
        }
        uint64_t v15 = v18 + 1;
        *((void *)this + 1) = v15;
LABEL_42:
        if ((unint64_t)v15 >= v13 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v15;
          int v19 = v15 + 1;
          *((void *)this + 1) = v19;
        }
        *(_DWORD *)(a1 + 72) |= 4u;
        if ((unint64_t)v19 >= v13 || *v19 != 34) {
          continue;
        }
        do
        {
          *((void *)this + 1) = v19 + 1;
LABEL_50:
          int v20 = *(_DWORD *)(a1 + 28);
          uint64_t v21 = *(int *)(a1 + 24);
          if ((int)v21 >= v20)
          {
            if (v20 == *(_DWORD *)(a1 + 32))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7, v20 + 1);
              int v20 = *(_DWORD *)(a1 + 28);
            }
            *(_DWORD *)(a1 + 28) = v20 + 1;
            operator new();
          }
          uint64_t v22 = *(void *)(a1 + 16);
          *(_DWORD *)(a1 + 24) = v21 + 1;
          int v23 = *(unsigned int **)(v22 + 8 * v21);
          unsigned int v59 = 0;
          uint64_t v24 = (char *)*((void *)this + 1);
          if ((unint64_t)v24 >= *((void *)this + 2) || *v24 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v59))return 0; {
          }
            }
          else
          {
            unsigned int v59 = *v24;
            *((void *)this + 1) = v24 + 1;
          }
          int v25 = *((_DWORD *)this + 14);
          int v26 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v25 + 1;
          if (v25 >= v26) {
            return 0;
          }
          int v27 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v59);
          if (!sub_1008ECD50(v23, this, v28) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v27);
          int v29 = *((_DWORD *)this + 14);
          BOOL v30 = __OFSUB__(v29, 1);
          int v31 = v29 - 1;
          if (v31 < 0 == v30) {
            *((_DWORD *)this + 14) = v31;
          }
          int v19 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v19 >= *((void *)this + 2)) {
            goto LABEL_2;
          }
          int v32 = *v19;
        }
        while (v32 == 34);
        if (v32 != 42) {
          continue;
        }
        *((void *)this + 1) = v19 + 1;
LABEL_68:
        *(_DWORD *)(a1 + 72) |= 0x10u;
        uint64_t v33 = *(void *)(a1 + 40);
        if (!v33) {
          operator new();
        }
        unsigned int v59 = 0;
        int v34 = (char *)*((void *)this + 1);
        if ((unint64_t)v34 >= *((void *)this + 2) || *v34 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v59))return 0; {
        }
          }
        else
        {
          unsigned int v59 = *v34;
          *((void *)this + 1) = v34 + 1;
        }
        int v35 = *((_DWORD *)this + 14);
        int v36 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v35 + 1;
        if (v35 >= v36) {
          return 0;
        }
        int v37 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v59);
        if (!sub_1008ED318(v33, this, v38) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v37);
        int v39 = *((_DWORD *)this + 14);
        BOOL v30 = __OFSUB__(v39, 1);
        int v40 = v39 - 1;
        if (v40 < 0 == v30) {
          *((_DWORD *)this + 14) = v40;
        }
        int v41 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v41 >= *((void *)this + 2) || *v41 != 50) {
          continue;
        }
        *((void *)this + 1) = v41 + 1;
LABEL_82:
        *(_DWORD *)(a1 + 72) |= 0x20u;
        int v42 = *(_DWORD **)(a1 + 48);
        if (!v42) {
          operator new();
        }
        unsigned int v59 = 0;
        unint64_t v43 = (char *)*((void *)this + 1);
        if ((unint64_t)v43 >= *((void *)this + 2) || *v43 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v59))return 0; {
        }
          }
        else
        {
          unsigned int v59 = *v43;
          *((void *)this + 1) = v43 + 1;
        }
        int v44 = *((_DWORD *)this + 14);
        int v45 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v44 + 1;
        if (v44 >= v45) {
          return 0;
        }
        int v46 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v59);
        if (!sub_1008EE320(v42, this, v47) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v46);
        int v48 = *((_DWORD *)this + 14);
        BOOL v30 = __OFSUB__(v48, 1);
        int v49 = v48 - 1;
        if (v49 < 0 == v30) {
          *((_DWORD *)this + 14) = v49;
        }
        unsigned int v50 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v50 >= *((void *)this + 2) || *v50 != 58) {
          continue;
        }
        *((void *)this + 1) = v50 + 1;
LABEL_96:
        *(_DWORD *)(a1 + 72) |= 0x40u;
        unsigned int v51 = *(unsigned int **)(a1 + 56);
        if (!v51) {
          operator new();
        }
        unsigned int v59 = 0;
        unsigned int v52 = (char *)*((void *)this + 1);
        if ((unint64_t)v52 >= *((void *)this + 2) || *v52 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v59))return 0; {
        }
          }
        else
        {
          unsigned int v59 = *v52;
          *((void *)this + 1) = v52 + 1;
        }
        int v53 = *((_DWORD *)this + 14);
        int v54 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v53 + 1;
        if (v53 >= v54) {
          return 0;
        }
        int v55 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v59);
        if (!sub_1008EEC00(v51, this, v56) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v55);
        int v57 = *((_DWORD *)this + 14);
        BOOL v30 = __OFSUB__(v57, 1);
        int v58 = v57 - 1;
        if (v58 < 0 == v30) {
          *((_DWORD *)this + 14) = v58;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        uint64_t v15 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_42;
      case 4u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_50;
        }
        goto LABEL_24;
      case 5u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_68;
        }
        goto LABEL_24;
      case 6u:
        int v10 = TagFallback & 7;
        if (v10 == 2) {
          goto LABEL_82;
        }
        goto LABEL_24;
      case 7u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_24;
        }
        goto LABEL_96;
      default:
        int v10 = TagFallback & 7;
LABEL_24:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1008EFDF8(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 72);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), (int)a2, a4);
    int v6 = *(_DWORD *)(v5 + 72);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  if ((*(_DWORD *)(v5 + 72) & 4) != 0) {
LABEL_4:
  }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 64), a2, a4);
LABEL_5:
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(*(void *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  int v8 = *(_DWORD *)(v5 + 72);
  if ((v8 & 0x10) != 0)
  {
    uint64_t v9 = *(void *)(v5 + 40);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_10248A620 + 40);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v9, a2, a4);
    int v8 = *(_DWORD *)(v5 + 72);
    if ((v8 & 0x20) == 0)
    {
LABEL_10:
      if ((v8 & 0x40) == 0) {
        return result;
      }
      goto LABEL_21;
    }
  }
  else if ((v8 & 0x20) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v10 = *(void *)(v5 + 48);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_10248A620 + 48);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v10, a2, a4);
  if ((*(_DWORD *)(v5 + 72) & 0x40) != 0)
  {
LABEL_21:
    uint64_t v11 = *(void *)(v5 + 56);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_10248A620 + 56);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v11, a2, a4);
  }
  return result;
}

uint64_t sub_1008EFF48(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 72);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    goto LABEL_44;
  }
  if (*(unsigned char *)(a1 + 72))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v5 & 0x80000000) != 0)
    {
      int v4 = 11;
      if ((v3 & 2) == 0) {
        goto LABEL_17;
      }
    }
    else if (v5 >= 0x80)
    {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
      int v3 = *(_DWORD *)(a1 + 72);
      int v4 = v6 + 1;
      if ((v3 & 2) == 0) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_17;
      }
    }
  }
  else
  {
    int v4 = 0;
    if ((*(unsigned char *)(a1 + 72) & 2) == 0) {
      goto LABEL_17;
    }
  }
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v7 >= 0x80)
  {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 72);
  }
  else
  {
    int v8 = 2;
  }
  v4 += v8;
LABEL_17:
  if ((v3 & 4) != 0)
  {
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 72);
    }
    else
    {
      int v10 = 2;
    }
    v4 += v10;
    if ((v3 & 0x10) == 0)
    {
LABEL_19:
      if ((v3 & 0x20) == 0) {
        goto LABEL_20;
      }
      goto LABEL_32;
    }
  }
  else if ((v3 & 0x10) == 0)
  {
    goto LABEL_19;
  }
  uint64_t v11 = *(void *)(a1 + 40);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_10248A620 + 40);
  }
  unsigned int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008ED920(v11, a2);
  int v13 = (int)v12;
  if (v12 >= 0x80) {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2);
  }
  else {
    int v14 = 1;
  }
  v4 += v13 + v14 + 1;
  int v3 = *(_DWORD *)(a1 + 72);
  if ((v3 & 0x20) == 0)
  {
LABEL_20:
    if ((v3 & 0x40) == 0) {
      goto LABEL_44;
    }
    goto LABEL_38;
  }
LABEL_32:
  uint64_t v15 = *(void *)(a1 + 48);
  if (!v15) {
    uint64_t v15 = *(void *)(qword_10248A620 + 48);
  }
  uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008EE83C(v15, a2);
  int v17 = (int)v16;
  if (v16 >= 0x80) {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
  }
  else {
    int v18 = 1;
  }
  v4 += v17 + v18 + 1;
  if ((*(_DWORD *)(a1 + 72) & 0x40) != 0)
  {
LABEL_38:
    uint64_t v19 = *(void *)(a1 + 56);
    if (!v19) {
      uint64_t v19 = *(void *)(qword_10248A620 + 56);
    }
    int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008EEF68(v19, a2);
    int v21 = (int)v20;
    if (v20 >= 0x80) {
      int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20, a2);
    }
    else {
      int v22 = 1;
    }
    v4 += v21 + v22 + 1;
  }
LABEL_44:
  int v23 = *(_DWORD *)(a1 + 24);
  uint64_t v24 = (v23 + v4);
  if (v23 >= 1)
  {
    uint64_t v25 = 0;
    do
    {
      int v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008ECF5C(*(void *)(*(void *)(a1 + 16) + 8 * v25), a2);
      int v27 = (int)v26;
      if (v26 >= 0x80) {
        int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26, a2);
      }
      else {
        int v28 = 1;
      }
      uint64_t v24 = (v27 + v24 + v28);
      ++v25;
    }
    while (v25 < *(int *)(a1 + 24));
  }
  *(_DWORD *)(a1 + 68) = v24;
  return v24;
}

void sub_1008F0154(uint64_t a1, void *lpsrc)
{
  sub_1008EF0F0(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008F01DC()
{
  return 1;
}

void *sub_1008F01E4@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.GanssAidRequestPerGanss");
}

void sub_1008F01F4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    sub_100221DFC(a1 + 16, *(_DWORD *)(a1 + 24) + v4);
    memcpy((void *)(*(void *)(a1 + 16) + 4 * *(int *)(a1 + 24)), *(const void **)(a2 + 16), 4 * *(int *)(a2 + 24));
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 40), *(_DWORD *)(a2 + 48) + *(_DWORD *)(a1 + 48));
  if (*(int *)(a2 + 48) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(a2 + 40) + 8 * v5);
      int v7 = *(_DWORD *)(a1 + 52);
      uint64_t v8 = *(int *)(a1 + 48);
      if ((int)v8 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 56))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 40), v7 + 1);
          int v7 = *(_DWORD *)(a1 + 52);
        }
        *(_DWORD *)(a1 + 52) = v7 + 1;
        operator new();
      }
      uint64_t v9 = *(void *)(a1 + 40);
      *(_DWORD *)(a1 + 48) = v8 + 1;
      sub_1008EF0F0(*(void *)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 48));
  }
  LOBYTE(v10) = *(unsigned char *)(a2 + 72);
  if ((_BYTE)v10)
  {
    if (*(unsigned char *)(a2 + 72))
    {
      int v12 = *(_DWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 72) |= 1u;
      *(_DWORD *)(a1 + 8) = v12;
      int v10 = *(_DWORD *)(a2 + 72);
      if ((v10 & 2) == 0)
      {
LABEL_16:
        if ((v10 & 8) == 0) {
          goto LABEL_17;
        }
        goto LABEL_23;
      }
    }
    else if ((*(unsigned char *)(a2 + 72) & 2) == 0)
    {
      goto LABEL_16;
    }
    int v13 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 72) |= 2u;
    *(_DWORD *)(a1 + 12) = v13;
    int v10 = *(_DWORD *)(a2 + 72);
    if ((v10 & 8) == 0)
    {
LABEL_17:
      if ((v10 & 0x10) == 0) {
        goto LABEL_18;
      }
      goto LABEL_24;
    }
LABEL_23:
    int v14 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 72) |= 8u;
    *(_DWORD *)(a1 + 32) = v14;
    int v10 = *(_DWORD *)(a2 + 72);
    if ((v10 & 0x10) == 0)
    {
LABEL_18:
      if ((v10 & 0x20) == 0) {
        return;
      }
      goto LABEL_19;
    }
LABEL_24:
    int v15 = *(_DWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 72) |= 0x10u;
    *(_DWORD *)(a1 + 36) = v15;
    if ((*(_DWORD *)(a2 + 72) & 0x20) == 0) {
      return;
    }
LABEL_19:
    int v11 = *(_DWORD *)(a2 + 64);
    *(_DWORD *)(a1 + 72) |= 0x20u;
    *(_DWORD *)(a1 + 64) = v11;
  }
}

void sub_1008F044C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008F0464(uint64_t *a1)
{
  *a1 = (uint64_t)off_1022D1F50;
  sub_10016B2E8(a1 + 5);
  if (a1[2]) {
    operator delete[]();
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_1008F04DC(uint64_t *a1)
{
  sub_1008F0464(a1);

  operator delete();
}

void sub_1008F0514()
{
}

uint64_t sub_1008F0578(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 72))
  {
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 32) = 0;
    *(_DWORD *)(a1 + 64) = 0;
  }
  *(_DWORD *)(a1 + 24) = 0;
  uint64_t result = sub_10026DEDC(a1 + 40);
  *(_DWORD *)(a1 + 72) = 0;
  return result;
}

uint64_t sub_1008F05C0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = a1 + 16;
  int v44 = (unsigned int *)(a1 + 8);
  uint64_t v6 = (unsigned int *)(a1 + 12);
  int v7 = (unsigned int *)(a1 + 32);
  uint64_t v8 = (unsigned int *)(a1 + 36);
  uint64_t v9 = (unsigned int *)(a1 + 64);
  int v10 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 40);
LABEL_2:
  while (2)
  {
    int v11 = (char *)*((void *)this + 1);
    if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v11;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v11 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v44);
          if (!result) {
            return result;
          }
          uint64_t v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *int v44 = *v15;
          uint64_t v16 = v15 + 1;
          *((void *)this + 1) = v16;
        }
        *(_DWORD *)(a1 + 72) |= 1u;
        if ((unint64_t)v16 < v14 && *v16 == 16)
        {
          int v17 = v16 + 1;
          *((void *)this + 1) = v17;
          goto LABEL_35;
        }
        continue;
      case 2u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        int v17 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
LABEL_35:
        if ((unint64_t)v17 >= v14 || (char)*v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v23 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v6 = *v17;
          int v23 = v17 + 1;
          *((void *)this + 1) = v23;
        }
        *(_DWORD *)(a1 + 72) |= 2u;
        if ((unint64_t)v23 < v14)
        {
          int v24 = *v23;
          goto LABEL_53;
        }
        continue;
      case 3u:
        int v13 = TagFallback & 7;
        if (v13 == 2)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline();
          if (!result) {
            return result;
          }
          while (1)
          {
            int v23 = (unsigned __int8 *)*((void *)this + 1);
            unint64_t v14 = *((void *)this + 2);
            if ((unint64_t)v23 >= v14) {
              goto LABEL_2;
            }
            int v24 = *v23;
            if (v24 == 32) {
              break;
            }
LABEL_53:
            if (v24 != 24) {
              goto LABEL_2;
            }
            int v18 = (char *)(v23 + 1);
            *((void *)this + 1) = v18;
LABEL_42:
            unsigned int v45 = 0;
            if ((unint64_t)v18 >= v14 || *v18 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v45);
              if (!result) {
                return result;
              }
              unsigned int v25 = v45;
            }
            else
            {
              unsigned int v25 = *v18;
              *((void *)this + 1) = v18 + 1;
            }
            if (v25 <= 6)
            {
              int v26 = *(_DWORD *)(a1 + 24);
              if (v26 == *(_DWORD *)(a1 + 28))
              {
                sub_100221DFC(v5, v26 + 1);
                int v26 = *(_DWORD *)(a1 + 24);
              }
              uint64_t v27 = *(void *)(a1 + 16);
              *(_DWORD *)(a1 + 24) = v26 + 1;
              *(_DWORD *)(v27 + 4 * v26) = v25;
            }
          }
          uint64_t v19 = (char *)(v23 + 1);
          *((void *)this + 1) = v19;
LABEL_56:
          if ((unint64_t)v19 >= v14 || *v19 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
            if (!result) {
              return result;
            }
            int v28 = (unsigned char *)*((void *)this + 1);
            unint64_t v14 = *((void *)this + 2);
          }
          else
          {
            *int v7 = *v19;
            int v28 = v19 + 1;
            *((void *)this + 1) = v28;
          }
          *(_DWORD *)(a1 + 72) |= 8u;
          if ((unint64_t)v28 < v14 && *v28 == 40)
          {
            int v20 = v28 + 1;
            *((void *)this + 1) = v20;
LABEL_64:
            if ((unint64_t)v20 >= v14 || *v20 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
              if (!result) {
                return result;
              }
              int v29 = (unsigned char *)*((void *)this + 1);
              unint64_t v14 = *((void *)this + 2);
            }
            else
            {
              *uint64_t v8 = *v20;
              int v29 = v20 + 1;
              *((void *)this + 1) = v29;
            }
            *(_DWORD *)(a1 + 72) |= 0x10u;
            if ((unint64_t)v29 < v14 && *v29 == 48)
            {
              int v21 = v29 + 1;
              *((void *)this + 1) = v21;
LABEL_72:
              if ((unint64_t)v21 >= v14 || *v21 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
                if (!result) {
                  return result;
                }
                BOOL v30 = (unsigned char *)*((void *)this + 1);
                unint64_t v14 = *((void *)this + 2);
              }
              else
              {
                *uint64_t v9 = *v21;
                BOOL v30 = v21 + 1;
                *((void *)this + 1) = v30;
              }
              *(_DWORD *)(a1 + 72) |= 0x20u;
              if ((unint64_t)v30 < v14 && *v30 == 58)
              {
                do
                {
                  *((void *)this + 1) = v30 + 1;
LABEL_80:
                  int v31 = *(_DWORD *)(a1 + 52);
                  uint64_t v32 = *(int *)(a1 + 48);
                  if ((int)v32 >= v31)
                  {
                    if (v31 == *(_DWORD *)(a1 + 56))
                    {
                      wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v10, v31 + 1);
                      int v31 = *(_DWORD *)(a1 + 52);
                    }
                    *(_DWORD *)(a1 + 52) = v31 + 1;
                    operator new();
                  }
                  uint64_t v33 = *(void *)(a1 + 40);
                  *(_DWORD *)(a1 + 48) = v32 + 1;
                  uint64_t v34 = *(void *)(v33 + 8 * v32);
                  unsigned int v46 = 0;
                  int v35 = (char *)*((void *)this + 1);
                  if ((unint64_t)v35 >= *((void *)this + 2) || *v35 < 0)
                  {
                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v46))return 0; {
                  }
                    }
                  else
                  {
                    unsigned int v46 = *v35;
                    *((void *)this + 1) = v35 + 1;
                  }
                  int v36 = *((_DWORD *)this + 14);
                  int v37 = *((_DWORD *)this + 15);
                  *((_DWORD *)this + 14) = v36 + 1;
                  if (v36 >= v37) {
                    return 0;
                  }
                  int v38 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v46);
                  if (!sub_1008EF6BC(v34, this, v39) || !*((unsigned char *)this + 36)) {
                    return 0;
                  }
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v38);
                  int v40 = *((_DWORD *)this + 14);
                  BOOL v41 = __OFSUB__(v40, 1);
                  int v42 = v40 - 1;
                  if (v42 < 0 == v41) {
                    *((_DWORD *)this + 14) = v42;
                  }
                  BOOL v30 = (unsigned char *)*((void *)this + 1);
                  unint64_t v43 = (unsigned char *)*((void *)this + 2);
                }
                while (v30 < v43 && *v30 == 58);
                if (v30 == v43 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                {
                  *((_DWORD *)this + 8) = 0;
                  uint64_t result = 1;
                  *((unsigned char *)this + 36) = 1;
                  return result;
                }
              }
            }
          }
          continue;
        }
        if ((TagFallback & 7) == 0)
        {
          int v18 = (char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
          goto LABEL_42;
        }
LABEL_25:
        if (v13 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
      case 4u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        uint64_t v19 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_56;
      case 5u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_64;
      case 6u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        int v21 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_72;
      case 7u:
        int v13 = TagFallback & 7;
        if (v13 != 2) {
          goto LABEL_25;
        }
        goto LABEL_80;
      default:
        int v13 = TagFallback & 7;
        goto LABEL_25;
    }
  }
}

uint64_t sub_1008F0B78(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 72);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 72);
  }
  if ((v6 & 2) != 0) {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(*(void *)(v5 + 16) + 4 * v7++), (int)a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  int v8 = *(_DWORD *)(v5 + 72);
  if ((v8 & 8) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 32), a2, a4);
    int v8 = *(_DWORD *)(v5 + 72);
    if ((v8 & 0x10) == 0)
    {
LABEL_10:
      if ((v8 & 0x20) == 0) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
  }
  else if ((v8 & 0x10) == 0)
  {
    goto LABEL_10;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 36), a2, a4);
  if ((*(_DWORD *)(v5 + 72) & 0x20) != 0) {
LABEL_11:
  }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 64), a2, a4);
LABEL_12:
  if (*(int *)(v5 + 48) >= 1)
  {
    uint64_t v9 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(void *)(*(void *)(v5 + 40) + 8 * v9++), a2, a4);
    while (v9 < *(int *)(v5 + 48));
  }
  return result;
}

uint64_t sub_1008F0C90(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 72);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    goto LABEL_30;
  }
  if (*(unsigned char *)(a1 + 72))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 72);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      int v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    int v4 = 0;
    if ((*(unsigned char *)(a1 + 72) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 72);
  }
  else
  {
    int v7 = 2;
  }
  v4 += v7;
LABEL_14:
  if ((v3 & 8) != 0)
  {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 72);
    }
    else
    {
      int v9 = 2;
    }
    v4 += v9;
    if ((v3 & 0x10) == 0)
    {
LABEL_16:
      if ((v3 & 0x20) == 0) {
        goto LABEL_30;
      }
      goto LABEL_26;
    }
  }
  else if ((v3 & 0x10) == 0)
  {
    goto LABEL_16;
  }
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
  if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 72);
  }
  else
  {
    int v11 = 2;
  }
  v4 += v11;
  if ((v3 & 0x20) != 0)
  {
LABEL_26:
    int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
    if (v12 >= 0x80) {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
    }
    else {
      int v13 = 2;
    }
    v4 += v13;
  }
LABEL_30:
  int v14 = *(_DWORD *)(a1 + 24);
  if (v14 < 1)
  {
    int v16 = 0;
  }
  else
  {
    uint64_t v15 = 0;
    int v16 = 0;
    do
    {
      int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 16)
                                                                                             + 4 * v15);
      if ((v17 & 0x80000000) != 0)
      {
        int v18 = 10;
      }
      else if (v17 >= 0x80)
      {
        int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2);
        int v14 = *(_DWORD *)(a1 + 24);
      }
      else
      {
        int v18 = 1;
      }
      v16 += v18;
      ++v15;
    }
    while (v15 < v14);
  }
  int v19 = *(_DWORD *)(a1 + 48);
  uint64_t v20 = (v16 + v19 + v4 + v14);
  if (v19 >= 1)
  {
    uint64_t v21 = 0;
    do
    {
      int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008EFF48(*(void *)(*(void *)(a1 + 40) + 8 * v21), a2);
      int v23 = (int)v22;
      if (v22 >= 0x80) {
        int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, a2);
      }
      else {
        int v24 = 1;
      }
      uint64_t v20 = (v23 + v20 + v24);
      ++v21;
    }
    while (v21 < *(int *)(a1 + 48));
  }
  *(_DWORD *)(a1 + 68) = v20;
  return v20;
}

void sub_1008F0E60(uint64_t a1, void *lpsrc)
{
  sub_1008F01F4(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008F0EE8()
{
  return 1;
}

void *sub_1008F0EF0@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.GanssAssistanceRequest");
}

void sub_1008F0F00(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 44);
  if (!(_BYTE)v4) {
    return;
  }
  if (*(unsigned char *)(a2 + 44))
  {
    unsigned int v5 = *(_DWORD *)(a2 + 8);
    if (v5 >= 9) {
      sub_101A7375C();
    }
    *(_DWORD *)(a1 + 44) |= 1u;
    *(_DWORD *)(a1 + 8) = v5;
    int v4 = *(_DWORD *)(a2 + 44);
  }
  if ((v4 & 2) == 0)
  {
    if ((v4 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_13:
    *(_DWORD *)(a1 + 44) |= 4u;
    int v7 = *(_DWORD **)(a1 + 16);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = *(void *)(a2 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_10248A630 + 16);
    }
    sub_1008D4334(v7, v8);
    int v4 = *(_DWORD *)(a2 + 44);
    if ((v4 & 8) == 0)
    {
LABEL_10:
      if ((v4 & 0x10) == 0) {
        return;
      }
      goto LABEL_23;
    }
    goto LABEL_18;
  }
  int v6 = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 44) |= 2u;
  *(_DWORD *)(a1 + 12) = v6;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 4) != 0) {
    goto LABEL_13;
  }
LABEL_9:
  if ((v4 & 8) == 0) {
    goto LABEL_10;
  }
LABEL_18:
  *(_DWORD *)(a1 + 44) |= 8u;
  uint64_t v9 = *(void *)(a1 + 24);
  if (!v9) {
    operator new();
  }
  uint64_t v10 = *(void *)(a2 + 24);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_10248A630 + 24);
  }
  sub_1008EBE74(v9, v10);
  if ((*(_DWORD *)(a2 + 44) & 0x10) != 0)
  {
LABEL_23:
    *(_DWORD *)(a1 + 44) |= 0x10u;
    uint64_t v11 = *(void *)(a1 + 32);
    if (!v11) {
      operator new();
    }
    uint64_t v12 = *(void *)(a2 + 32);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_10248A630 + 32);
    }
    sub_1008F01F4(v11, v12);
  }
}

void sub_1008F1144(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1008F115C(void *result)
{
  if ((void *)qword_10248A630 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[3];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t result = (void *)v1[4];
    if (result)
    {
      int v4 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v4();
    }
  }
  return result;
}

void sub_1008F1228(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D1FC8;
  sub_1008F115C(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008F127C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D1FC8;
  sub_1008F115C(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

uint64_t sub_1008F12E4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10248A630;
  if (!qword_10248A630)
  {
    sub_1008C4C78(0, a2, a3, a4);
    return qword_10248A630;
  }
  return result;
}

void sub_1008F1314()
{
}

uint64_t sub_1008F136C(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(unsigned char *)(result + 44);
  if ((_BYTE)v2)
  {
    *(void *)(result + 8) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t v3 = *(void *)(result + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 24))
        {
          *(void *)(v3 + 8) = 0;
          *(_DWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 24) = 0;
        int v2 = *(_DWORD *)(result + 44);
      }
    }
    if ((v2 & 8) != 0)
    {
      uint64_t v4 = *(void *)(result + 24);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 64))
        {
          *(_DWORD *)(v4 + 56) = 0;
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
        }
        *(_DWORD *)(v4 + 32) = 0;
        *(_DWORD *)(v4 + 48) = 0;
        *(_DWORD *)(v4 + 64) = 0;
        int v2 = *(_DWORD *)(result + 44);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      uint64_t result = *(void *)(result + 32);
      if (result) {
        uint64_t result = sub_1008F0578(result);
      }
    }
  }
  *(_DWORD *)(v1 + 44) = 0;
  return result;
}

uint64_t sub_1008F13FC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int v5 = (unsigned int *)(a1 + 12);
  while (1)
  {
    int v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 < *((void *)this + 2) && (*v6 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        unsigned int v44 = 0;
        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v44);
          if (!result) {
            return result;
          }
          unsigned int v10 = v44;
        }
        else
        {
          unsigned int v10 = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        if (v10 <= 8)
        {
          *(_DWORD *)(a1 + 44) |= 1u;
          *(_DWORD *)(a1 + 8) = v10;
        }
        uint64_t v15 = (unsigned char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        if ((unint64_t)v15 < v11 && *v15 == 16)
        {
          uint64_t v12 = v15 + 1;
          *((void *)this + 1) = v12;
          goto LABEL_30;
        }
        continue;
      case 2u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        uint64_t v12 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
LABEL_30:
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          *unsigned int v5 = *v12;
          int v16 = v12 + 1;
          *((void *)this + 1) = v16;
        }
        int v13 = *(_DWORD *)(a1 + 44) | 2;
        *(_DWORD *)(a1 + 44) = v13;
        if ((unint64_t)v16 >= v11 || *v16 != 26) {
          continue;
        }
        *((void *)this + 1) = v16 + 1;
LABEL_38:
        *(_DWORD *)(a1 + 44) = v13 | 4;
        int v17 = *(_DWORD **)(a1 + 16);
        if (!v17) {
          operator new();
        }
        unsigned int v44 = 0;
        int v18 = (char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v44))return 0; {
        }
          }
        else
        {
          unsigned int v44 = *v18;
          *((void *)this + 1) = v18 + 1;
        }
        int v19 = *((_DWORD *)this + 14);
        int v20 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v19 + 1;
        if (v19 >= v20) {
          return 0;
        }
        int v21 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v44);
        if (!sub_1008D4508(v17, this, v22) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v21);
        int v23 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v23, 1);
        int v25 = v23 - 1;
        if (v25 < 0 == v24) {
          *((_DWORD *)this + 14) = v25;
        }
        int v26 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v26 >= *((void *)this + 2) || *v26 != 34) {
          continue;
        }
        *((void *)this + 1) = v26 + 1;
LABEL_52:
        *(_DWORD *)(a1 + 44) |= 8u;
        uint64_t v27 = *(void *)(a1 + 24);
        if (!v27) {
          operator new();
        }
        unsigned int v44 = 0;
        int v28 = (char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v44))return 0; {
        }
          }
        else
        {
          unsigned int v44 = *v28;
          *((void *)this + 1) = v28 + 1;
        }
        int v29 = *((_DWORD *)this + 14);
        int v30 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v29 + 1;
        if (v29 >= v30) {
          return 0;
        }
        int v31 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v44);
        if (!sub_1008EC168(v27, this, v32) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v31);
        int v33 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v33, 1);
        int v34 = v33 - 1;
        if (v34 < 0 == v24) {
          *((_DWORD *)this + 14) = v34;
        }
        int v35 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v35 >= *((void *)this + 2) || *v35 != 42) {
          continue;
        }
        *((void *)this + 1) = v35 + 1;
LABEL_66:
        *(_DWORD *)(a1 + 44) |= 0x10u;
        uint64_t v36 = *(void *)(a1 + 32);
        if (!v36) {
          operator new();
        }
        unsigned int v44 = 0;
        int v37 = (char *)*((void *)this + 1);
        if ((unint64_t)v37 >= *((void *)this + 2) || *v37 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v44))return 0; {
        }
          }
        else
        {
          unsigned int v44 = *v37;
          *((void *)this + 1) = v37 + 1;
        }
        int v38 = *((_DWORD *)this + 14);
        int v39 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v38 + 1;
        if (v38 >= v39) {
          return 0;
        }
        int v40 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v44);
        if (!sub_1008F05C0(v36, this, v41) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v40);
        int v42 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v42, 1);
        int v43 = v42 - 1;
        if (v43 < 0 == v24) {
          *((_DWORD *)this + 14) = v43;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_20;
        }
        int v13 = *(_DWORD *)(a1 + 44);
        goto LABEL_38;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_52;
        }
        goto LABEL_20;
      case 5u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_20;
        }
        goto LABEL_66;
      default:
        int v8 = TagFallback & 7;
LABEL_20:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1008F195C(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 44);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), (int)a2, a4);
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_9:
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248A630 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_12:
  uint64_t v8 = *(void *)(v5 + 24);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_10248A630 + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v8, a2, a4);
  if ((*(_DWORD *)(v5 + 44) & 0x10) != 0)
  {
LABEL_15:
    uint64_t v9 = *(void *)(v5 + 32);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_10248A630 + 32);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v9, a2, a4);
  }
  return result;
}

uint64_t sub_1008F1A50(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 44);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_39;
  }
  if (*(unsigned char *)(a1 + 44))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v5 & 0x80000000) != 0)
    {
      uint64_t v4 = 11;
      if ((v3 & 2) == 0) {
        goto LABEL_17;
      }
    }
    else if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 44);
      if ((v3 & 2) == 0) {
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_17;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 44) & 2) == 0) {
      goto LABEL_17;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 44);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_17:
  if ((v3 & 4) != 0)
  {
    uint64_t v8 = *(void *)(a1 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_10248A630 + 16);
    }
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D47D0(v8, a2);
    int v10 = (int)v9;
    if (v9 >= 0x80) {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
    }
    else {
      int v11 = 1;
    }
    uint64_t v4 = (v4 + v10 + v11 + 1);
    int v3 = *(_DWORD *)(a1 + 44);
    if ((v3 & 8) == 0)
    {
LABEL_19:
      if ((v3 & 0x10) == 0) {
        goto LABEL_39;
      }
      goto LABEL_33;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_19;
  }
  uint64_t v12 = *(void *)(a1 + 24);
  if (!v12) {
    uint64_t v12 = *(void *)(qword_10248A630 + 24);
  }
  int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008EC950(v12, a2);
  int v14 = (int)v13;
  if (v13 >= 0x80) {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
  }
  else {
    int v15 = 1;
  }
  uint64_t v4 = (v4 + v14 + v15 + 1);
  if ((*(_DWORD *)(a1 + 44) & 0x10) != 0)
  {
LABEL_33:
    uint64_t v16 = *(void *)(a1 + 32);
    if (!v16) {
      uint64_t v16 = *(void *)(qword_10248A630 + 32);
    }
    int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008F0C90(v16, a2);
    int v19 = (int)v17;
    if (v17 >= 0x80) {
      int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, v18);
    }
    else {
      int v20 = 1;
    }
    uint64_t v4 = (v4 + v19 + v20 + 1);
  }
LABEL_39:
  *(_DWORD *)(a1 + 40) = v4;
  return v4;
}

void sub_1008F1BDC(uint64_t a1, void *lpsrc)
{
  sub_1008F0F00(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008F1C64()
{
  return 1;
}

void *sub_1008F1C6C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.AssistanceNeededReport");
}

void sub_1008F1C7C(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2), *(_DWORD *)(a2 + 16) + a1[4]);
  if (*(int *)(a2 + 16) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 8) + 8 * v4);
      int v6 = a1[5];
      uint64_t v7 = (int)a1[4];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[6])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2), v6 + 1);
          int v6 = a1[5];
        }
        a1[5] = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)a1 + 1);
      a1[4] = v7 + 1;
      sub_1008DA93C(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 16));
  }
  if (*(unsigned char *)(a2 + 40))
  {
    int v9 = *(_DWORD *)(a2 + 32);
    a1[10] |= 1u;
    a1[8] = v9;
  }
}

void sub_1008F1E04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008F1E1C(uint64_t *a1)
{
  *a1 = (uint64_t)off_1022D2040;
  sub_10016B2E8(a1 + 1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_1008F1E78(uint64_t *a1)
{
  sub_1008F1E1C(a1);

  operator delete();
}

void sub_1008F1EB0()
{
}

uint64_t sub_1008F1F08(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40)) {
    *(_DWORD *)(a1 + 32) = 0;
  }
  uint64_t result = sub_10026DEDC(a1 + 8);
  *(_DWORD *)(a1 + 40) = 0;
  return result;
}

uint64_t sub_1008F1F40(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = a1 + 8;
  int v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_16;
        }
        int v10 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        if ((unint64_t)v10 >= v11 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          uint64_t v12 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v5 = *v10;
          uint64_t v12 = v10 + 1;
          *((void *)this + 1) = v12;
        }
        a1[10] |= 1u;
        if ((unint64_t)v12 < v11 && *v12 == 18) {
          goto LABEL_23;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v9 = TagFallback & 7;
      if (v9 != 2) {
        goto LABEL_16;
      }
      while (1)
      {
        int v14 = a1[5];
        uint64_t v15 = (int)a1[4];
        if ((int)v15 >= v14)
        {
          if (v14 == a1[6])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v14 + 1);
            int v14 = a1[5];
          }
          a1[5] = v14 + 1;
          operator new();
        }
        uint64_t v16 = *((void *)a1 + 1);
        a1[4] = v15 + 1;
        uint64_t v17 = *(void *)(v16 + 8 * v15);
        unsigned int v27 = 0;
        unsigned int v18 = (char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27))return 0; {
        }
          }
        else
        {
          unsigned int v27 = *v18;
          *((void *)this + 1) = v18 + 1;
        }
        int v19 = *((_DWORD *)this + 14);
        int v20 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v19 + 1;
        if (v19 >= v20) {
          return 0;
        }
        int v21 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27);
        if (!sub_1008DAD04(v17, this, v22) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v21);
        int v23 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v23, 1);
        int v25 = v23 - 1;
        if (v25 < 0 == v24) {
          *((_DWORD *)this + 14) = v25;
        }
        uint64_t v12 = (unsigned char *)*((void *)this + 1);
        int v26 = (unsigned char *)*((void *)this + 2);
        if (v12 >= v26 || *v12 != 18) {
          break;
        }
LABEL_23:
        *((void *)this + 1) = v12 + 1;
      }
      if (v12 == v26 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v9 = TagFallback & 7;
LABEL_16:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1008F2200(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 40)) {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 32), a2, a4);
  }
  if (*(int *)(v5 + 16) >= 1)
  {
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  return result;
}

uint64_t sub_1008F2278(uint64_t a1, unsigned int a2)
{
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if (v4 >= 0x80) {
      int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4, a2) + 1;
    }
    else {
      int v3 = 2;
    }
  }
  else
  {
    int v3 = 0;
  }
  int v5 = *(_DWORD *)(a1 + 16);
  uint64_t v6 = (v5 + v3);
  if (v5 >= 1)
  {
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008DB5A0(*(void *)(*(void *)(a1 + 8) + 8 * v7), a2);
      int v9 = (int)v8;
      if (v8 >= 0x80) {
        int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2);
      }
      else {
        int v10 = 1;
      }
      uint64_t v6 = (v9 + v6 + v10);
      ++v7;
    }
    while (v7 < *(int *)(a1 + 16));
  }
  *(_DWORD *)(a1 + 36) = v6;
  return v6;
}

void sub_1008F2328(_DWORD *a1, void *lpsrc)
{
  sub_1008F1C7C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008F23B0()
{
  return 1;
}

void *sub_1008F23B8@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.EutranCellTime");
}

void sub_1008F23C8(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 40);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 40))
    {
      int v6 = *(_DWORD *)(a2 + 8);
      a1[10] |= 1u;
      a1[2] = v6;
      int v4 = *(_DWORD *)(a2 + 40);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_15;
      }
    }
    else if ((*(unsigned char *)(a2 + 40) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 12);
    a1[10] |= 2u;
    a1[3] = v7;
    int v4 = *(_DWORD *)(a2 + 40);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_16;
    }
LABEL_15:
    int v8 = *(_DWORD *)(a2 + 16);
    a1[10] |= 4u;
    a1[4] = v8;
    int v4 = *(_DWORD *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_17;
    }
LABEL_16:
    int v9 = *(_DWORD *)(a2 + 20);
    a1[10] |= 8u;
    a1[5] = v9;
    int v4 = *(_DWORD *)(a2 + 40);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_18;
    }
LABEL_17:
    int v10 = *(_DWORD *)(a2 + 24);
    a1[10] |= 0x10u;
    a1[6] = v10;
    int v4 = *(_DWORD *)(a2 + 40);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0) {
        return;
      }
      goto LABEL_11;
    }
LABEL_18:
    int v11 = *(_DWORD *)(a2 + 28);
    a1[10] |= 0x20u;
    a1[7] = v11;
    if ((*(_DWORD *)(a2 + 40) & 0x40) == 0) {
      return;
    }
LABEL_11:
    int v5 = *(_DWORD *)(a2 + 32);
    a1[10] |= 0x40u;
    a1[8] = v5;
  }
}

void sub_1008F251C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008F2534(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D20B8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008F2554(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D20B8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008F25A8()
{
}

uint64_t sub_1008F2600(uint64_t result)
{
  if (*(unsigned char *)(result + 40))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(void *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1008F261C(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  int v7 = a1 + 4;
  int v8 = a1 + 5;
  int v9 = a1 + 6;
  int v10 = a1 + 7;
  int v11 = a1 + 8;
  while (2)
  {
    uint64_t v12 = (char *)*((void *)this + 1);
    if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v12;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v12 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        uint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v16 < v15 && (*v16 & 0x80000000) == 0)
        {
          *int v5 = *v16;
          uint64_t v17 = v16 + 1;
          *((void *)this + 1) = v17;
LABEL_30:
          a1[10] |= 1u;
          if ((unint64_t)v17 < v15 && *v17 == 16)
          {
            unsigned int v18 = v17 + 1;
            *((void *)this + 1) = v18;
            goto LABEL_33;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (result)
        {
          uint64_t v17 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
          goto LABEL_30;
        }
        break;
      case 2u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        unsigned int v18 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
LABEL_33:
        if ((unint64_t)v18 >= v15 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          BOOL v24 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v18;
          BOOL v24 = v18 + 1;
          *((void *)this + 1) = v24;
        }
        a1[10] |= 2u;
        if ((unint64_t)v24 >= v15 || *v24 != 24) {
          continue;
        }
        int v19 = v24 + 1;
        *((void *)this + 1) = v19;
LABEL_41:
        if ((unint64_t)v19 >= v15 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v25 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v7 = *v19;
          int v25 = v19 + 1;
          *((void *)this + 1) = v25;
        }
        a1[10] |= 4u;
        if ((unint64_t)v25 >= v15 || *v25 != 32) {
          continue;
        }
        int v20 = v25 + 1;
        *((void *)this + 1) = v20;
LABEL_49:
        if ((unint64_t)v20 >= v15 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v26 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v20;
          int v26 = v20 + 1;
          *((void *)this + 1) = v26;
        }
        a1[10] |= 8u;
        if ((unint64_t)v26 >= v15 || *v26 != 40) {
          continue;
        }
        int v21 = v26 + 1;
        *((void *)this + 1) = v21;
LABEL_57:
        if ((unint64_t)v21 >= v15 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          unsigned int v27 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v9 = *v21;
          unsigned int v27 = v21 + 1;
          *((void *)this + 1) = v27;
        }
        a1[10] |= 0x10u;
        if ((unint64_t)v27 >= v15 || *v27 != 48) {
          continue;
        }
        unsigned int v22 = v27 + 1;
        *((void *)this + 1) = v22;
LABEL_65:
        if ((unint64_t)v22 >= v15 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!result) {
            return result;
          }
          int v28 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v10 = *v22;
          int v28 = v22 + 1;
          *((void *)this + 1) = v28;
        }
        a1[10] |= 0x20u;
        if ((unint64_t)v28 >= v15 || *v28 != 56) {
          continue;
        }
        int v23 = v28 + 1;
        *((void *)this + 1) = v23;
LABEL_73:
        if ((unint64_t)v23 >= v15 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
          if (!result) {
            return result;
          }
          int v29 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          *int v11 = *v23;
          int v29 = (unsigned __int8 *)(v23 + 1);
          *((void *)this + 1) = v29;
        }
        a1[10] |= 0x40u;
        if (v29 != (unsigned __int8 *)v15 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_41;
      case 4u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_49;
      case 5u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v21 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_57;
      case 6u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        unsigned int v22 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_65;
      case 7u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v23 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_73;
      default:
        int v14 = TagFallback & 7;
LABEL_24:
        if (v14 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

int *sub_1008F2A54(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  int v6 = result[10];
  if (v6)
  {
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    int v6 = v5[10];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  int v6 = v5[10];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  int v6 = v5[10];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  int v6 = v5[10];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_14:
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
    if ((v5[10] & 0x40) == 0) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_13:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  int v6 = v5[10];
  if ((v6 & 0x20) != 0) {
    goto LABEL_14;
  }
LABEL_7:
  if ((v6 & 0x40) == 0) {
    return result;
  }
LABEL_15:
  int v7 = v5[8];

  return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v7, a2, a4);
}

uint64_t sub_1008F2B50(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 40);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_40;
  }
  if (*(unsigned char *)(a1 + 40))
  {
    int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 40);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 40) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 40);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 40);
    }
    else
    {
      int v9 = 2;
    }
    uint64_t v4 = (v9 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_16:
      if ((v3 & 0x10) == 0) {
        goto LABEL_17;
      }
      goto LABEL_28;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 40);
  }
  else
  {
    int v11 = 2;
  }
  uint64_t v4 = (v11 + v4);
  if ((v3 & 0x10) == 0)
  {
LABEL_17:
    if ((v3 & 0x20) == 0) {
      goto LABEL_18;
    }
    goto LABEL_32;
  }
LABEL_28:
  uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 40);
  }
  else
  {
    int v13 = 2;
  }
  uint64_t v4 = (v13 + v4);
  if ((v3 & 0x20) == 0)
  {
LABEL_18:
    if ((v3 & 0x40) == 0) {
      goto LABEL_40;
    }
    goto LABEL_36;
  }
LABEL_32:
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
  if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 40);
  }
  else
  {
    int v15 = 2;
  }
  uint64_t v4 = (v15 + v4);
  if ((v3 & 0x40) != 0)
  {
LABEL_36:
    uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if (v16 >= 0x80) {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2) + 1;
    }
    else {
      int v17 = 2;
    }
    uint64_t v4 = (v17 + v4);
  }
LABEL_40:
  *(_DWORD *)(a1 + 36) = v4;
  return v4;
}

void sub_1008F2CBC(_DWORD *a1, void *lpsrc)
{
  sub_1008F23C8(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008F2D44()
{
  return 1;
}

void *sub_1008F2D4C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.ClsGeranCellTime");
}

void sub_1008F2D5C(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 20))
    {
      int v5 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v5;
      int v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v6;
    }
  }
}

void sub_1008F2E08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008F2E20(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D2130;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008F2E40(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D2130;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008F2E94()
{
}

uint64_t sub_1008F2EE0(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1008F2EF4(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  while (1)
  {
    while (1)
    {
      int v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      uint64_t v12 = (char *)*((void *)this + 1);
      unint64_t v10 = *((void *)this + 2);
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!result) {
          return result;
        }
        int v13 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
      }
      else
      {
        *int v5 = *v12;
        int v13 = v12 + 1;
        *((void *)this + 1) = v13;
      }
      a1[5] |= 1u;
      if ((unint64_t)v13 < v10 && *v13 == 16)
      {
        int v11 = v13 + 1;
        *((void *)this + 1) = v11;
LABEL_24:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v11;
          int v14 = (unsigned __int8 *)(v11 + 1);
          *((void *)this + 1) = v14;
        }
        a1[5] |= 2u;
        if (v14 == (unsigned __int8 *)v10
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v9 = TagFallback & 7;
    }
LABEL_16:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1008F3094(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(_DWORD *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_1008F3100(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 20);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 20))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_14;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 20) & 2) == 0) {
        goto LABEL_14;
      }
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v6 >= 0x80) {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    }
    else {
      int v7 = 2;
    }
    uint64_t v4 = (v7 + v4);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_14:
  *(_DWORD *)(a1 + 16) = v4;
  return v4;
}

void sub_1008F3190(_DWORD *a1, void *lpsrc)
{
  sub_1008F2D5C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008F3218()
{
  return 1;
}

void *sub_1008F3220@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.GpsTowCdmaCellTime");
}

void sub_1008F3230(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      int v6 = *(_DWORD *)(a2 + 8);
      a1[6] |= 1u;
      a1[2] = v6;
      int v4 = *(_DWORD *)(a2 + 24);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 24) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 12);
    a1[6] |= 2u;
    a1[3] = v7;
    if ((*(_DWORD *)(a2 + 24) & 4) == 0) {
      return;
    }
LABEL_7:
    int v5 = *(_DWORD *)(a2 + 16);
    a1[6] |= 4u;
    a1[4] = v5;
  }
}

void sub_1008F3304(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008F331C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D21A8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008F333C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D21A8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008F3390()
{
}

uint64_t sub_1008F33E0(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    *(void *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1008F33F8(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  int v7 = a1 + 4;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v8;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v8 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v10 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v14 >= v12 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v5 = *v14;
          int v15 = v14 + 1;
          *((void *)this + 1) = v15;
        }
        a1[6] |= 1u;
        if ((unint64_t)v15 < v12 && *v15 == 16)
        {
          uint64_t v16 = v15 + 1;
          *((void *)this + 1) = v16;
          goto LABEL_27;
        }
      }
      if (v10 != 2) {
        break;
      }
      int v11 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_19;
      }
      uint64_t v16 = (char *)*((void *)this + 1);
      unint64_t v12 = *((void *)this + 2);
LABEL_27:
      if ((unint64_t)v16 >= v12 || *v16 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
        if (!result) {
          return result;
        }
        int v17 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
      }
      else
      {
        *int v6 = *v16;
        int v17 = v16 + 1;
        *((void *)this + 1) = v17;
      }
      a1[6] |= 2u;
      if ((unint64_t)v17 < v12 && *v17 == 24)
      {
        int v13 = v17 + 1;
        *((void *)this + 1) = v13;
LABEL_35:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          unsigned int v18 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v7 = *v13;
          unsigned int v18 = (unsigned __int8 *)(v13 + 1);
          *((void *)this + 1) = v18;
        }
        a1[6] |= 4u;
        if (v18 == (unsigned __int8 *)v12
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v10 == 3)
    {
      int v11 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_35;
      }
    }
    else
    {
      int v11 = TagFallback & 7;
    }
LABEL_19:
    if (v11 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

int *sub_1008F361C(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  int v6 = result[6];
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
    if ((v5[6] & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
  int v6 = v5[6];
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  int v7 = v5[4];

  return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t sub_1008F36A8(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 24);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_19;
  }
  if (*(unsigned char *)(a1 + 24))
  {
    int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 24);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 24);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80) {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    }
    else {
      int v9 = 2;
    }
    uint64_t v4 = (v9 + v4);
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_1008F3760(_DWORD *a1, void *lpsrc)
{
  sub_1008F3230(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008F37E8()
{
  return 1;
}

void *sub_1008F37F0@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.CtsEutranCellTime");
}

void sub_1008F3800(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      *(_DWORD *)(a1 + 28) |= 1u;
      int v6 = *(_DWORD **)(a1 + 8);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_10248A658 + 8);
      }
      sub_1008F2D5C(v6, v7);
      int v4 = *(_DWORD *)(a2 + 28);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 28) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v8 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 28) |= 2u;
    *(_DWORD *)(a1 + 16) = v8;
    if ((*(_DWORD *)(a2 + 28) & 4) == 0) {
      return;
    }
LABEL_7:
    int v5 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 28) |= 4u;
    *(_DWORD *)(a1 + 20) = v5;
  }
}

void sub_1008F3928(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008F3940(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022D2220;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_10248A658 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008F39D0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008F3940(a1);

  operator delete();
}

void sub_1008F3A08()
{
}

uint64_t sub_1008F3A54(uint64_t result)
{
  if (*(unsigned char *)(result + 28))
  {
    if (*(unsigned char *)(result + 28))
    {
      uint64_t v1 = *(void *)(result + 8);
      if (v1)
      {
        if (*(unsigned char *)(v1 + 20)) {
          *(void *)(v1 + 8) = 0;
        }
        *(_DWORD *)(v1 + 20) = 0;
      }
    }
    *(void *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_1008F3A84(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 16);
  int v6 = (unsigned int *)(a1 + 20);
  while (1)
  {
    while (1)
    {
      uint64_t v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      unsigned int v9 = TagFallback >> 3;
      if (TagFallback >> 3 == 1) {
        break;
      }
      if (v9 == 2)
      {
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
LABEL_33:
        if ((unint64_t)v15 >= v11 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          BOOL v24 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          *int v5 = *v15;
          BOOL v24 = v15 + 1;
          *((void *)this + 1) = v24;
        }
        *(_DWORD *)(a1 + 28) |= 2u;
        if ((unint64_t)v24 < v11 && *v24 == 24)
        {
          unint64_t v12 = v24 + 1;
          *((void *)this + 1) = v12;
LABEL_41:
          if ((unint64_t)v12 >= v11 || *v12 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
            if (!result) {
              return result;
            }
            int v26 = (unsigned __int8 *)*((void *)this + 1);
            unint64_t v11 = *((void *)this + 2);
          }
          else
          {
            *int v6 = *v12;
            int v26 = (unsigned __int8 *)(v12 + 1);
            *((void *)this + 1) = v26;
          }
          *(_DWORD *)(a1 + 28) |= 4u;
          if (v26 == (unsigned __int8 *)v11
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
        }
      }
      else
      {
        if (v9 == 3)
        {
          int v10 = TagFallback & 7;
          if ((TagFallback & 7) == 0)
          {
            unint64_t v12 = (char *)*((void *)this + 1);
            unint64_t v11 = *((void *)this + 2);
            goto LABEL_41;
          }
        }
        else
        {
          int v10 = TagFallback & 7;
        }
LABEL_21:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
      }
        }
    }
    int v10 = TagFallback & 7;
    if (v10 != 2) {
      goto LABEL_21;
    }
    *(_DWORD *)(a1 + 28) |= 1u;
    int v13 = *(unsigned int **)(a1 + 8);
    if (!v13) {
      operator new();
    }
    unsigned int v27 = 0;
    int v14 = (char *)*((void *)this + 1);
    if ((unint64_t)v14 >= *((void *)this + 2) || *v14 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27)) {
        return 0;
      }
    }
    else
    {
      unsigned int v27 = *v14;
      *((void *)this + 1) = v14 + 1;
    }
    int v16 = *((_DWORD *)this + 14);
    int v17 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v16 + 1;
    if (v16 >= v17) {
      return 0;
    }
    int v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27);
    if (!sub_1008F2EF4(v13, this, v19) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
    int v20 = *((_DWORD *)this + 14);
    BOOL v21 = __OFSUB__(v20, 1);
    int v22 = v20 - 1;
    if (v22 < 0 == v21) {
      *((_DWORD *)this + 14) = v22;
    }
    int v23 = (unsigned char *)*((void *)this + 1);
    unint64_t v11 = *((void *)this + 2);
    if ((unint64_t)v23 < v11 && *v23 == 16)
    {
      int v15 = v23 + 1;
      *((void *)this + 1) = v15;
      goto LABEL_33;
    }
  }
}

uint64_t sub_1008F3D54(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = (int *)result;
  int v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[4], a2, a4);
    if ((v5[7] & 4) == 0) {
      return result;
    }
    goto LABEL_9;
  }
  uint64_t v7 = *(void *)(result + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248A658 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  int v6 = v5[7];
  if ((v6 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_9:
  int v8 = v5[5];

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
}

uint64_t sub_1008F3DF0(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 28);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_21;
  }
  if (*(unsigned char *)(a1 + 28))
  {
    uint64_t v5 = *(void *)(a1 + 8);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_10248A658 + 8);
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008F3100(v5, a2);
    int v7 = (int)v6;
    if (v6 >= 0x80) {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
    }
    else {
      int v8 = 1;
    }
    uint64_t v4 = (v7 + v8 + 1);
    int v3 = *(_DWORD *)(a1 + 28);
    if ((v3 & 2) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 28) & 2) == 0) {
      goto LABEL_16;
    }
  }
  unsigned int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 28);
  }
  else
  {
    int v10 = 2;
  }
  uint64_t v4 = (v10 + v4);
LABEL_16:
  if ((v3 & 4) != 0)
  {
    unint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if (v11 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
    }
    else {
      int v12 = 2;
    }
    uint64_t v4 = (v12 + v4);
  }
LABEL_21:
  *(_DWORD *)(a1 + 24) = v4;
  return v4;
}

void sub_1008F3EC4(uint64_t a1, void *lpsrc)
{
  sub_1008F3800(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008F3F4C()
{
  return 1;
}

void *sub_1008F3F54@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.CtsCdmaCellTime");
}

void sub_1008F3F64(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      *(_DWORD *)(a1 + 28) |= 1u;
      uint64_t v5 = *(_DWORD **)(a1 + 8);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_10248A660 + 8);
      }
      sub_1008F3230(v5, v6);
      int v4 = *(_DWORD *)(a2 + 28);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 28) |= 2u;
      uint64_t v7 = *(void *)(a1 + 16);
      if (!v7) {
        operator new();
      }
      uint64_t v8 = *(void *)(a2 + 16);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_10248A660 + 16);
      }
      sub_1008F3800(v7, v8);
    }
  }
}

void sub_1008F40BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1008F40D4(void *result)
{
  if ((void *)qword_10248A660 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t result = (void *)v1[2];
    if (result)
    {
      int v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_1008F4174(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D2298;
  sub_1008F40D4(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008F41C8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D2298;
  sub_1008F40D4(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008F4230()
{
}

uint64_t sub_1008F427C(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(unsigned char *)(result + 28);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(result + 28))
    {
      uint64_t v3 = *(void *)(result + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 24))
        {
          *(void *)(v3 + 8) = 0;
          *(_DWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 24) = 0;
        int v2 = *(_DWORD *)(result + 28);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t result = *(void *)(result + 16);
      if (result) {
        uint64_t result = sub_1008F3A54(result);
      }
    }
  }
  *(_DWORD *)(v1 + 28) = 0;
  return result;
}

uint64_t sub_1008F42DC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_17;
        }
        *(_DWORD *)(a1 + 28) |= 1u;
        uint64_t v8 = *(unsigned int **)(a1 + 8);
        if (!v8) {
          operator new();
        }
        unsigned int v27 = 0;
        unsigned int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27))return 0; {
        }
          }
        else
        {
          unsigned int v27 = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27);
        if (!sub_1008F33F8(v8, this, v13) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        int v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 < *((void *)this + 2) && *v17 == 18)
        {
          *((void *)this + 1) = v17 + 1;
          goto LABEL_29;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v7 = TagFallback & 7;
      if (v7 != 2) {
        goto LABEL_17;
      }
LABEL_29:
      *(_DWORD *)(a1 + 28) |= 2u;
      uint64_t v18 = *(void *)(a1 + 16);
      if (!v18) {
        operator new();
      }
      unsigned int v28 = 0;
      unsigned int v19 = (char *)*((void *)this + 1);
      if ((unint64_t)v19 >= *((void *)this + 2) || *v19 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v28))return 0; {
      }
        }
      else
      {
        unsigned int v28 = *v19;
        *((void *)this + 1) = v19 + 1;
      }
      int v20 = *((_DWORD *)this + 14);
      int v21 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v20 + 1;
      if (v20 >= v21) {
        return 0;
      }
      int v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v28);
      if (!sub_1008F3A84(v18, this, v23) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v22);
      int v24 = *((_DWORD *)this + 14);
      BOOL v15 = __OFSUB__(v24, 1);
      int v25 = v24 - 1;
      if (v25 < 0 == v15) {
        *((_DWORD *)this + 14) = v25;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v7 = TagFallback & 7;
LABEL_17:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1008F45D0(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(result + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248A660 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 28) & 2) != 0)
  {
LABEL_7:
    uint64_t v8 = *(void *)(v5 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_10248A660 + 16);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  }
  return result;
}

uint64_t sub_1008F4660(uint64_t a1, unsigned int a2)
{
  if (!*(unsigned char *)(a1 + 28))
  {
    uint64_t v3 = 0;
    goto LABEL_18;
  }
  if ((*(unsigned char *)(a1 + 28) & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((*(unsigned char *)(a1 + 28) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (!v4) {
    uint64_t v4 = *(void *)(qword_10248A660 + 8);
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008F36A8(v4, a2);
  int v6 = (int)v5;
  if (v5 >= 0x80) {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
  }
  else {
    int v7 = 1;
  }
  uint64_t v3 = (v6 + v7 + 1);
  if ((*(_DWORD *)(a1 + 28) & 2) != 0)
  {
LABEL_12:
    uint64_t v8 = *(void *)(a1 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_10248A660 + 16);
    }
    unsigned int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008F3DF0(v8, a2);
    int v11 = (int)v9;
    if (v9 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, v10);
    }
    else {
      int v12 = 1;
    }
    uint64_t v3 = (v3 + v11 + v12 + 1);
  }
LABEL_18:
  *(_DWORD *)(a1 + 24) = v3;
  return v3;
}

void sub_1008F4734(uint64_t a1, void *lpsrc)
{
  sub_1008F3F64(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008F47BC()
{
  return 1;
}

void *sub_1008F47C4@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.CellTimeData");
}

void sub_1008F47D4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      unsigned int v5 = *(_DWORD *)(a2 + 16);
      if (v5 >= 6) {
        sub_101A73788();
      }
      *(_DWORD *)(a1 + 24) |= 1u;
      *(_DWORD *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 24) |= 2u;
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_10248A668 + 8);
      }
      sub_1008F3F64(v6, v7);
    }
  }
}

void sub_1008F48E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008F48F8(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022D2310;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_10248A668 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008F4988(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008F48F8(a1);

  operator delete();
}

void sub_1008F49C0()
{
}

uint64_t sub_1008F4A10(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(unsigned char *)(result + 24);
  if (v2)
  {
    *(_DWORD *)(result + 16) = 0;
    if ((v2 & 2) != 0)
    {
      uint64_t result = *(void *)(result + 8);
      if (result) {
        uint64_t result = sub_1008F427C(result);
      }
    }
  }
  *(_DWORD *)(v1 + 24) = 0;
  return result;
}

uint64_t sub_1008F4A50(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        unsigned int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_15;
        }
        unsigned int v21 = 0;
        uint64_t v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
          if (!result) {
            return result;
          }
          unsigned int v9 = v21;
        }
        else
        {
          unsigned int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
        }
        if (v9 <= 5)
        {
          *(_DWORD *)(a1 + 24) |= 1u;
          *(_DWORD *)(a1 + 16) = v9;
        }
        int v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 18)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_25;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        int v7 = TagFallback & 7;
        goto LABEL_15;
      }
      int v7 = TagFallback & 7;
      if (v7 == 2) {
        break;
      }
LABEL_15:
      if (v7 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
LABEL_25:
    *(_DWORD *)(a1 + 24) |= 2u;
    uint64_t v12 = *(void *)(a1 + 8);
    if (!v12) {
      operator new();
    }
    unsigned int v22 = 0;
    unsigned int v13 = (char *)*((void *)this + 1);
    if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22)) {
        return 0;
      }
    }
    else
    {
      unsigned int v22 = *v13;
      *((void *)this + 1) = v13 + 1;
    }
    int v14 = *((_DWORD *)this + 14);
    int v15 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v14 + 1;
    if (v14 >= v15) {
      return 0;
    }
    int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v22);
    if (!sub_1008F42DC(v12, this, v17) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
    int v18 = *((_DWORD *)this + 14);
    BOOL v19 = __OFSUB__(v18, 1);
    int v20 = v18 - 1;
    if (v20 < 0 == v19) {
      *((_DWORD *)this + 14) = v20;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_1008F4CA8(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 24) & 2) == 0) {
      return result;
    }
  }
  else if ((v6 & 2) == 0)
  {
    return result;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248A668 + 8);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
}

uint64_t sub_1008F4D28(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 24);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 24))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
      if ((v5 & 0x80000000) != 0)
      {
        uint64_t v4 = 11;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
      else if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 24) & 2) == 0) {
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
        goto LABEL_19;
      }
    }
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10248A668 + 8);
    }
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008F4660(v6, a2);
    int v9 = (int)v7;
    if (v7 >= 0x80) {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, v8);
    }
    else {
      int v10 = 1;
    }
    uint64_t v4 = (v4 + v9 + v10 + 1);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_1008F4DF0(uint64_t a1, void *lpsrc)
{
  sub_1008F47D4(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008F4E78()
{
  return 1;
}

void *sub_1008F4E80@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.CellTimeAssistance");
}

void sub_1008F4E90(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      int v6 = *(_DWORD *)(a2 + 8);
      a1[8] |= 1u;
      a1[2] = v6;
      int v4 = *(_DWORD *)(a2 + 32);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 12);
    a1[8] |= 2u;
    a1[3] = v7;
    int v4 = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }
LABEL_13:
    int v8 = *(_DWORD *)(a2 + 16);
    a1[8] |= 4u;
    a1[4] = v8;
    int v4 = *(_DWORD *)(a2 + 32);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        return;
      }
      goto LABEL_9;
    }
LABEL_14:
    int v9 = *(_DWORD *)(a2 + 20);
    a1[8] |= 8u;
    a1[5] = v9;
    if ((*(_DWORD *)(a2 + 32) & 0x10) == 0) {
      return;
    }
LABEL_9:
    int v5 = *(_DWORD *)(a2 + 24);
    a1[8] |= 0x10u;
    a1[6] = v5;
  }
}

void sub_1008F4FA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008F4FBC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D2388;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008F4FDC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D2388;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008F5030()
{
}

uint64_t sub_1008F5080(uint64_t result)
{
  if (*(unsigned char *)(result + 32))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1008F5098(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  int v7 = a1 + 4;
  int v8 = a1 + 5;
  int v9 = a1 + 6;
  while (2)
  {
    int v10 = (char *)*((void *)this + 1);
    if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v10;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((unint64_t)v14 < v13 && (*v14 & 0x80000000) == 0)
        {
          *int v5 = *v14;
          int v15 = v14 + 1;
          *((void *)this + 1) = v15;
LABEL_26:
          a1[8] |= 1u;
          if ((unint64_t)v15 < v13 && *v15 == 16)
          {
            int v16 = v15 + 1;
            *((void *)this + 1) = v16;
            goto LABEL_29;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (result)
        {
          int v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
          goto LABEL_26;
        }
        break;
      case 2u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
LABEL_29:
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v20 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v16;
          int v20 = v16 + 1;
          *((void *)this + 1) = v20;
        }
        a1[8] |= 2u;
        if ((unint64_t)v20 >= v13 || *v20 != 24) {
          continue;
        }
        unsigned int v17 = v20 + 1;
        *((void *)this + 1) = v17;
LABEL_37:
        if ((unint64_t)v17 >= v13 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          unsigned int v21 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *int v7 = *v17;
          unsigned int v21 = v17 + 1;
          *((void *)this + 1) = v21;
        }
        a1[8] |= 4u;
        if ((unint64_t)v21 >= v13 || *v21 != 32) {
          continue;
        }
        int v18 = v21 + 1;
        *((void *)this + 1) = v18;
LABEL_45:
        if ((unint64_t)v18 >= v13 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          unsigned int v22 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v18;
          unsigned int v22 = v18 + 1;
          *((void *)this + 1) = v22;
        }
        a1[8] |= 8u;
        if ((unint64_t)v22 >= v13 || *v22 != 40) {
          continue;
        }
        BOOL v19 = v22 + 1;
        *((void *)this + 1) = v19;
LABEL_53:
        if ((unint64_t)v19 >= v13 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          unsigned int v23 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *int v9 = *v19;
          unsigned int v23 = (unsigned __int8 *)(v19 + 1);
          *((void *)this + 1) = v23;
        }
        a1[8] |= 0x10u;
        if (v23 != (unsigned __int8 *)v13 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        unsigned int v17 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_37;
      case 4u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_45;
      case 5u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        BOOL v19 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_53;
      default:
        int v12 = TagFallback & 7;
LABEL_20:
        if (v12 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

int *sub_1008F53D8(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  int v6 = result[8];
  if (v6)
  {
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    int v6 = v5[8];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  int v6 = v5[8];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
    if ((v5[8] & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  int v6 = v5[8];
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return result;
  }
LABEL_11:
  int v7 = v5[6];

  return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, a2, a4);
}

uint64_t sub_1008F549C(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 32);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_30;
  }
  if (*(unsigned char *)(a1 + 32))
  {
    int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 32);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 32) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 32);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 32);
    }
    else
    {
      int v9 = 2;
    }
    uint64_t v4 = (v9 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_16:
      if ((v3 & 0x10) == 0) {
        goto LABEL_30;
      }
      goto LABEL_26;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 32);
  }
  else
  {
    int v11 = 2;
  }
  uint64_t v4 = (v11 + v4);
  if ((v3 & 0x10) != 0)
  {
LABEL_26:
    int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
    if (v12 >= 0x80) {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
    }
    else {
      int v13 = 2;
    }
    uint64_t v4 = (v13 + v4);
  }
LABEL_30:
  *(_DWORD *)(a1 + 28) = v4;
  return v4;
}

void sub_1008F55B0(_DWORD *a1, void *lpsrc)
{
  sub_1008F4E90(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008F5638()
{
  return 1;
}

void *sub_1008F5640@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.TowAssist");
}

void sub_1008F5650(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 6), *(_DWORD *)(a2 + 32) + a1[8]);
  if (*(int *)(a2 + 32) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 24) + 8 * v4);
      int v6 = a1[9];
      uint64_t v7 = (int)a1[8];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[10])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 6), v6 + 1);
          int v6 = a1[9];
        }
        a1[9] = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)a1 + 3);
      a1[8] = v7 + 1;
      sub_1008F4E90(*(_DWORD **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 32));
  }
  int v9 = *(_DWORD *)(a2 + 68);
  if (!(_BYTE)v9) {
    goto LABEL_19;
  }
  if (v9)
  {
    int v11 = *(_DWORD *)(a2 + 8);
    a1[17] |= 1u;
    a1[2] = v11;
    int v9 = *(_DWORD *)(a2 + 68);
    if ((v9 & 2) == 0)
    {
LABEL_14:
      if ((v9 & 4) == 0) {
        goto LABEL_15;
      }
      goto LABEL_24;
    }
  }
  else if ((v9 & 2) == 0)
  {
    goto LABEL_14;
  }
  int v12 = *(_DWORD *)(a2 + 12);
  a1[17] |= 2u;
  a1[3] = v12;
  int v9 = *(_DWORD *)(a2 + 68);
  if ((v9 & 4) == 0)
  {
LABEL_15:
    if ((v9 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_25;
  }
LABEL_24:
  int v13 = *(_DWORD *)(a2 + 16);
  a1[17] |= 4u;
  a1[4] = v13;
  int v9 = *(_DWORD *)(a2 + 68);
  if ((v9 & 8) == 0)
  {
LABEL_16:
    if ((v9 & 0x20) == 0) {
      goto LABEL_17;
    }
    goto LABEL_26;
  }
LABEL_25:
  int v14 = *(_DWORD *)(a2 + 20);
  a1[17] |= 8u;
  a1[5] = v14;
  int v9 = *(_DWORD *)(a2 + 68);
  if ((v9 & 0x20) == 0)
  {
LABEL_17:
    if ((v9 & 0x40) == 0) {
      goto LABEL_18;
    }
    goto LABEL_27;
  }
LABEL_26:
  int v15 = *(_DWORD *)(a2 + 48);
  a1[17] |= 0x20u;
  a1[12] = v15;
  int v9 = *(_DWORD *)(a2 + 68);
  if ((v9 & 0x40) != 0)
  {
LABEL_27:
    unsigned int v16 = *(_DWORD *)(a2 + 52);
    if (v16 >= 6) {
      sub_101A737E0();
    }
    a1[17] |= 0x40u;
    a1[13] = v16;
    int v9 = *(_DWORD *)(a2 + 68);
    if ((v9 & 0x80) != 0) {
      goto LABEL_29;
    }
LABEL_19:
    if ((v9 & 0x100) == 0) {
      return;
    }
    goto LABEL_20;
  }
LABEL_18:
  if ((v9 & 0x80) == 0) {
    goto LABEL_19;
  }
LABEL_29:
  unsigned int v17 = *(_DWORD *)(a2 + 56);
  if (v17 >= 7) {
    sub_101A737B4();
  }
  a1[17] |= 0x80u;
  a1[14] = v17;
  if ((*(_DWORD *)(a2 + 68) & 0x100) != 0)
  {
LABEL_20:
    int v10 = *(_DWORD *)(a2 + 60);
    a1[17] |= 0x100u;
    a1[15] = v10;
  }
}

void sub_1008F58D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008F58E8(uint64_t *a1)
{
  *a1 = (uint64_t)off_1022D2400;
  sub_10016B2E8(a1 + 3);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_1008F5944(uint64_t *a1)
{
  sub_1008F58E8(a1);

  operator delete();
}

uint64_t sub_1008F597C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10248A678;
  if (!qword_10248A678)
  {
    sub_1008C4C78(0, a2, a3, a4);
    return qword_10248A678;
  }
  return result;
}

void sub_1008F59AC()
{
}

uint64_t sub_1008F5A0C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 68);
  if ((_BYTE)v2)
  {
    *(void *)(a1 + 48) = 0;
    *(_DWORD *)(a1 + 56) = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
  }
  if ((v2 & 0xFF00) != 0) {
    *(_DWORD *)(a1 + 60) = 0;
  }
  uint64_t result = sub_10026DEDC(a1 + 24);
  *(_DWORD *)(a1 + 68) = 0;
  return result;
}

uint64_t sub_1008F5A5C(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = a1 + 2;
  int v6 = a1 + 3;
  uint64_t v7 = a1 + 4;
  uint64_t v8 = a1 + 5;
  unsigned int v50 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 6);
  int v9 = a1 + 12;
  int v10 = a1 + 15;
  while (1)
  {
    while (1)
    {
LABEL_2:
      int v11 = (char *)*((void *)this + 1);
      if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v11;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v11 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      switch(TagFallback >> 3)
      {
        case 1u:
          int v13 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_28;
          }
          int v15 = (char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
          if ((unint64_t)v15 >= v14 || *v15 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
            if (!result) {
              return result;
            }
            unsigned int v16 = (unsigned char *)*((void *)this + 1);
            unint64_t v14 = *((void *)this + 2);
          }
          else
          {
            *uint64_t v5 = *v15;
            unsigned int v16 = v15 + 1;
            *((void *)this + 1) = v16;
          }
          a1[17] |= 1u;
          if ((unint64_t)v16 < v14 && *v16 == 16)
          {
            unsigned int v17 = v16 + 1;
            *((void *)this + 1) = v17;
            goto LABEL_37;
          }
          continue;
        case 2u:
          int v13 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_28;
          }
          unsigned int v17 = (char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
LABEL_37:
          if ((unint64_t)v17 >= v14 || *v17 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
            if (!result) {
              return result;
            }
            unsigned int v28 = (unsigned char *)*((void *)this + 1);
            unint64_t v14 = *((void *)this + 2);
          }
          else
          {
            *int v6 = *v17;
            unsigned int v28 = v17 + 1;
            *((void *)this + 1) = v28;
          }
          a1[17] |= 2u;
          if ((unint64_t)v28 >= v14 || *v28 != 24) {
            continue;
          }
          int v18 = v28 + 1;
          *((void *)this + 1) = v18;
LABEL_45:
          if ((unint64_t)v18 >= v14 || *v18 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
            if (!result) {
              return result;
            }
            int v29 = (unsigned char *)*((void *)this + 1);
            unint64_t v14 = *((void *)this + 2);
          }
          else
          {
            *uint64_t v7 = *v18;
            int v29 = v18 + 1;
            *((void *)this + 1) = v29;
          }
          a1[17] |= 4u;
          if ((unint64_t)v29 >= v14 || *v29 != 32) {
            continue;
          }
          BOOL v19 = v29 + 1;
          *((void *)this + 1) = v19;
LABEL_53:
          if ((unint64_t)v19 >= v14 || *v19 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
            if (!result) {
              return result;
            }
            int v30 = (unsigned char *)*((void *)this + 1);
            unint64_t v14 = *((void *)this + 2);
          }
          else
          {
            *uint64_t v8 = *v19;
            int v30 = v19 + 1;
            *((void *)this + 1) = v30;
          }
          a1[17] |= 8u;
          if ((unint64_t)v30 >= v14 || *v30 != 42) {
            continue;
          }
          break;
        case 3u:
          int v13 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_28;
          }
          int v18 = (char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
          goto LABEL_45;
        case 4u:
          int v13 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_28;
          }
          BOOL v19 = (char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
          goto LABEL_53;
        case 5u:
          int v13 = TagFallback & 7;
          if (v13 == 2) {
            goto LABEL_61;
          }
          goto LABEL_28;
        case 6u:
          int v13 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_28;
          }
          unsigned int v21 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
          goto LABEL_79;
        case 7u:
          int v13 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_28;
          }
          unsigned int v22 = (char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
          goto LABEL_87;
        case 8u:
          int v13 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_28;
          }
          int v24 = (char *)*((void *)this + 1);
          unint64_t v23 = *((void *)this + 2);
          goto LABEL_97;
        case 9u:
          int v13 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_28;
          }
          int v26 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v25 = *((void *)this + 2);
          goto LABEL_107;
        default:
          int v13 = TagFallback & 7;
LABEL_28:
          if (v13 == 4) {
            return 1;
          }
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
          continue;
          }
      }
      do
      {
        *((void *)this + 1) = v30 + 1;
LABEL_61:
        int v31 = a1[9];
        uint64_t v32 = (int)a1[8];
        if ((int)v32 >= v31)
        {
          if (v31 == a1[10])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v50, v31 + 1);
            int v31 = a1[9];
          }
          a1[9] = v31 + 1;
          operator new();
        }
        uint64_t v33 = *((void *)a1 + 3);
        a1[8] = v32 + 1;
        int v34 = *(unsigned int **)(v33 + 8 * v32);
        unsigned int v53 = 0;
        int v35 = (char *)*((void *)this + 1);
        if ((unint64_t)v35 >= *((void *)this + 2) || *v35 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v53))return 0; {
        }
          }
        else
        {
          unsigned int v53 = *v35;
          *((void *)this + 1) = v35 + 1;
        }
        int v36 = *((_DWORD *)this + 14);
        int v37 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v36 + 1;
        if (v36 >= v37) {
          return 0;
        }
        int v38 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v53);
        if (!sub_1008F5098(v34, this, v39) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v38);
        int v40 = *((_DWORD *)this + 14);
        BOOL v41 = __OFSUB__(v40, 1);
        int v42 = v40 - 1;
        if (v42 < 0 == v41) {
          *((_DWORD *)this + 14) = v42;
        }
        int v30 = (unsigned char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        if ((unint64_t)v30 >= v20) {
          goto LABEL_2;
        }
        int v43 = *v30;
      }
      while (v43 == 42);
      if (v43 != 48) {
        continue;
      }
      unsigned int v21 = v30 + 1;
      *((void *)this + 1) = v21;
LABEL_79:
      if ((unint64_t)v21 >= v20 || (char)*v21 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
        if (result)
        {
          unsigned int v44 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
          goto LABEL_84;
        }
        return result;
      }
      *int v9 = *v21;
      unsigned int v44 = v21 + 1;
      *((void *)this + 1) = v44;
LABEL_84:
      a1[17] |= 0x20u;
      if ((unint64_t)v44 < v20 && *v44 == 56)
      {
        unsigned int v22 = v44 + 1;
        *((void *)this + 1) = v22;
LABEL_87:
        unsigned int v52 = 0;
        if ((unint64_t)v22 < v20 && (*v22 & 0x80000000) == 0)
        {
          unsigned int v45 = *v22;
          *((void *)this + 1) = v22 + 1;
          goto LABEL_92;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v52);
        if (!result) {
          return result;
        }
        unsigned int v45 = v52;
LABEL_92:
        if (v45 <= 5)
        {
          a1[17] |= 0x40u;
          a1[13] = v45;
        }
        unsigned int v46 = (unsigned char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        if ((unint64_t)v46 < v23 && *v46 == 64)
        {
          int v24 = v46 + 1;
          *((void *)this + 1) = v24;
LABEL_97:
          unsigned int v51 = 0;
          if ((unint64_t)v24 < v23 && (*v24 & 0x80000000) == 0)
          {
            unsigned int v47 = *v24;
            *((void *)this + 1) = v24 + 1;
            goto LABEL_102;
          }
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v51);
          if (!result) {
            return result;
          }
          unsigned int v47 = v51;
LABEL_102:
          if (v47 <= 6)
          {
            a1[17] |= 0x80u;
            a1[14] = v47;
          }
          int v48 = (unsigned char *)*((void *)this + 1);
          unint64_t v25 = *((void *)this + 2);
          if ((unint64_t)v48 < v25 && *v48 == 72) {
            break;
          }
        }
      }
    }
    int v26 = v48 + 1;
    *((void *)this + 1) = v26;
LABEL_107:
    if ((unint64_t)v26 >= v25 || (char)*v26 < 0) {
      break;
    }
    *int v10 = *v26;
    int v49 = (char *)(v26 + 1);
    *((void *)this + 1) = v49;
LABEL_112:
    a1[17] |= 0x100u;
    if (v49 == (char *)v25 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
  if (result)
  {
    int v49 = (char *)*((void *)this + 1);
    unint64_t v25 = *((void *)this + 2);
    goto LABEL_112;
  }
  return result;
}

uint64_t sub_1008F60A0(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 68);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 68);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 16), a2, a4);
  if ((*(_DWORD *)(v5 + 68) & 8) != 0) {
LABEL_5:
  }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 20), a2, a4);
LABEL_6:
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(*(void *)(v5 + 24) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  int v8 = *(_DWORD *)(v5 + 68);
  if ((v8 & 0x20) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 48), a2, a4);
    int v8 = *(_DWORD *)(v5 + 68);
    if ((v8 & 0x40) == 0)
    {
LABEL_11:
      if ((v8 & 0x80) == 0) {
        goto LABEL_12;
      }
LABEL_20:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(v5 + 56), (int)a2, a4);
      if ((*(_DWORD *)(v5 + 68) & 0x100) == 0) {
        return result;
      }
      goto LABEL_21;
    }
  }
  else if ((v8 & 0x40) == 0)
  {
    goto LABEL_11;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 52), (int)a2, a4);
  int v8 = *(_DWORD *)(v5 + 68);
  if ((v8 & 0x80) != 0) {
    goto LABEL_20;
  }
LABEL_12:
  if ((v8 & 0x100) == 0) {
    return result;
  }
LABEL_21:
  int v9 = *(_DWORD *)(v5 + 60);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v9, a2, a4);
}

uint64_t sub_1008F61F8(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 68);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    if ((v3 & 0x100) == 0) {
      goto LABEL_50;
    }
    goto LABEL_46;
  }
  if ((v3 & 1) == 0)
  {
    int v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_15;
    }
    goto LABEL_11;
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
  if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    int v3 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    int v6 = 1;
  }
  int v4 = v6 + 1;
  if ((v3 & 2) != 0)
  {
LABEL_11:
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      int v3 = *(_DWORD *)(a1 + 68);
    }
    else
    {
      int v8 = 1;
    }
    v4 += v8 + 1;
  }
LABEL_15:
  if ((v3 & 4) != 0)
  {
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 68);
    }
    else
    {
      int v10 = 2;
    }
    v4 += v10;
    if ((v3 & 8) == 0)
    {
LABEL_17:
      if ((v3 & 0x20) == 0) {
        goto LABEL_18;
      }
      goto LABEL_30;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_17;
  }
  int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    int v12 = 2;
  }
  v4 += v12;
  if ((v3 & 0x20) == 0)
  {
LABEL_18:
    if ((v3 & 0x40) == 0) {
      goto LABEL_19;
    }
    goto LABEL_34;
  }
LABEL_30:
  int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    int v14 = 2;
  }
  v4 += v14;
  if ((v3 & 0x40) == 0)
  {
LABEL_19:
    if ((v3 & 0x80) == 0) {
      goto LABEL_20;
    }
    goto LABEL_40;
  }
LABEL_34:
  int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
  if ((v15 & 0x80000000) != 0)
  {
    int v16 = 11;
  }
  else if (v15 >= 0x80)
  {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    int v16 = 2;
  }
  v4 += v16;
  if ((v3 & 0x80) == 0)
  {
LABEL_20:
    if ((v3 & 0x100) == 0) {
      goto LABEL_50;
    }
    goto LABEL_46;
  }
LABEL_40:
  unsigned int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
  if ((v17 & 0x80000000) != 0)
  {
    int v18 = 11;
  }
  else if (v17 >= 0x80)
  {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    int v18 = 2;
  }
  v4 += v18;
  if ((v3 & 0x100) != 0)
  {
LABEL_46:
    BOOL v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
    if (v19 >= 0x80) {
      int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
    }
    else {
      int v20 = 2;
    }
    v4 += v20;
  }
LABEL_50:
  int v21 = *(_DWORD *)(a1 + 32);
  uint64_t v22 = (v21 + v4);
  if (v21 >= 1)
  {
    uint64_t v23 = 0;
    do
    {
      int v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008F549C(*(void *)(*(void *)(a1 + 24) + 8 * v23), a2);
      int v25 = (int)v24;
      if (v24 >= 0x80) {
        int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24, a2);
      }
      else {
        int v26 = 1;
      }
      uint64_t v22 = (v25 + v22 + v26);
      ++v23;
    }
    while (v23 < *(int *)(a1 + 32));
  }
  *(_DWORD *)(a1 + 64) = v22;
  return v22;
}

void sub_1008F6408(_DWORD *a1, void *lpsrc)
{
  sub_1008F5650(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008F6490()
{
  return 1;
}

void *sub_1008F6498@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.GpsReferenceTime");
}

void sub_1008F64A8(_DWORD *a1, _DWORD *a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }
  int v4 = a2[17];
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    int v7 = a2[2];
    a1[17] |= 1u;
    a1[2] = v7;
    int v4 = a2[17];
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_24;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v8 = a2[3];
  a1[17] |= 2u;
  a1[3] = v8;
  int v4 = a2[17];
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_24:
  int v9 = a2[4];
  a1[17] |= 4u;
  a1[4] = v9;
  int v4 = a2[17];
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }
LABEL_25:
  int v10 = a2[5];
  a1[17] |= 8u;
  a1[5] = v10;
  int v4 = a2[17];
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_27:
    int v12 = a2[7];
    a1[17] |= 0x20u;
    a1[7] = v12;
    int v4 = a2[17];
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_26:
  int v11 = a2[6];
  a1[17] |= 0x10u;
  a1[6] = v11;
  int v4 = a2[17];
  if ((v4 & 0x20) != 0) {
    goto LABEL_27;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_28:
  int v13 = a2[8];
  a1[17] |= 0x40u;
  a1[8] = v13;
  int v4 = a2[17];
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = a2[9];
    a1[17] |= 0x80u;
    a1[9] = v5;
    int v4 = a2[17];
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    int v14 = a2[10];
    a1[17] |= 0x100u;
    a1[10] = v14;
    int v4 = a2[17];
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_32;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  int v15 = a2[11];
  a1[17] |= 0x200u;
  a1[11] = v15;
  int v4 = a2[17];
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_33;
  }
LABEL_32:
  int v16 = a2[12];
  a1[17] |= 0x400u;
  a1[12] = v16;
  int v4 = a2[17];
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_35;
  }
LABEL_33:
  unsigned int v17 = a2[13];
  if (v17 >= 6) {
    sub_101A73838();
  }
  a1[17] |= 0x800u;
  a1[13] = v17;
  int v4 = a2[17];
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0) {
      return;
    }
    goto LABEL_20;
  }
LABEL_35:
  unsigned int v18 = a2[14];
  if (v18 >= 7) {
    sub_101A7380C();
  }
  a1[17] |= 0x1000u;
  a1[14] = v18;
  if ((a2[17] & 0x2000) != 0)
  {
LABEL_20:
    int v6 = a2[15];
    a1[17] |= 0x2000u;
    a1[15] = v6;
  }
}

void sub_1008F6700(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008F6718(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D2478;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008F6738(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D2478;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

uint64_t sub_1008F678C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10248A680;
  if (!qword_10248A680)
  {
    sub_1008C4C78(0, a2, a3, a4);
    return qword_10248A680;
  }
  return result;
}

void sub_1008F67BC()
{
}

uint64_t sub_1008F6818(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 68);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(result + 40) = 0;
    *(void *)(result + 48) = 0;
    *(void *)(result + 56) = 0;
  }
  *(_DWORD *)(result + 68) = 0;
  return result;
}

uint64_t sub_1008F6848(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int v51 = a1 + 2;
  unsigned int v52 = a1 + 3;
  unsigned int v53 = a1 + 4;
  int v5 = a1 + 5;
  int v6 = a1 + 7;
  int v7 = a1 + 8;
  int v8 = a1 + 9;
  int v9 = a1 + 10;
  int v10 = a1 + 11;
  int v11 = a1 + 12;
  int v12 = a1 + 15;
  while (2)
  {
    int v13 = (char *)*((void *)this + 1);
    if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v13;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v13 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        if ((unint64_t)v17 < v16 && (*v17 & 0x80000000) == 0)
        {
          *unsigned int v51 = *v17;
          unsigned int v18 = v17 + 1;
          *((void *)this + 1) = v18;
LABEL_44:
          a1[17] |= 1u;
          if ((unint64_t)v18 < v16 && *v18 == 16)
          {
            BOOL v19 = v18 + 1;
            *((void *)this + 1) = v19;
            goto LABEL_47;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v51);
        if (result)
        {
          unsigned int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
          goto LABEL_44;
        }
        break;
      case 2u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        BOOL v19 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
LABEL_47:
        if ((unint64_t)v19 >= v16 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v52);
          if (!result) {
            return result;
          }
          int v34 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *unsigned int v52 = *v19;
          int v34 = v19 + 1;
          *((void *)this + 1) = v34;
        }
        a1[17] |= 2u;
        if ((unint64_t)v34 >= v16 || *v34 != 24) {
          continue;
        }
        int v20 = v34 + 1;
        *((void *)this + 1) = v20;
LABEL_55:
        if ((unint64_t)v20 >= v16 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v53);
          if (!result) {
            return result;
          }
          int v35 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *unsigned int v53 = *v20;
          int v35 = v20 + 1;
          *((void *)this + 1) = v35;
        }
        a1[17] |= 4u;
        if ((unint64_t)v35 >= v16 || *v35 != 32) {
          continue;
        }
        int v21 = v35 + 1;
        *((void *)this + 1) = v21;
LABEL_63:
        if ((unint64_t)v21 >= v16 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v36 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v5 = *v21;
          int v36 = v21 + 1;
          *((void *)this + 1) = v36;
        }
        a1[17] |= 8u;
        if ((unint64_t)v36 >= v16 || *v36 != 40) {
          continue;
        }
        uint64_t v22 = v36 + 1;
        *((void *)this + 1) = v22;
LABEL_71:
        unsigned int v54 = 0;
        if ((unint64_t)v22 >= v16 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v54);
          if (!result) {
            return result;
          }
          unsigned int v37 = v54;
          int v38 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v37 = *v22;
          int v38 = v22 + 1;
          *((void *)this + 1) = v38;
        }
        a1[6] = v37;
        a1[17] |= 0x10u;
        if ((unint64_t)v38 >= v16 || *v38 != 48) {
          continue;
        }
        uint64_t v23 = v38 + 1;
        *((void *)this + 1) = v23;
LABEL_79:
        if ((unint64_t)v23 >= v16 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          unsigned int v39 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v23;
          unsigned int v39 = v23 + 1;
          *((void *)this + 1) = v39;
        }
        a1[17] |= 0x20u;
        if ((unint64_t)v39 >= v16 || *v39 != 56) {
          continue;
        }
        int v24 = v39 + 1;
        *((void *)this + 1) = v24;
LABEL_87:
        if ((unint64_t)v24 >= v16 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v40 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v7 = *v24;
          int v40 = v24 + 1;
          *((void *)this + 1) = v40;
        }
        a1[17] |= 0x40u;
        if ((unint64_t)v40 >= v16 || *v40 != 64) {
          continue;
        }
        int v25 = v40 + 1;
        *((void *)this + 1) = v25;
LABEL_95:
        if ((unint64_t)v25 >= v16 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          BOOL v41 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v25;
          BOOL v41 = v25 + 1;
          *((void *)this + 1) = v41;
        }
        a1[17] |= 0x80u;
        if ((unint64_t)v41 >= v16 || *v41 != 72) {
          continue;
        }
        int v26 = v41 + 1;
        *((void *)this + 1) = v26;
LABEL_103:
        if ((unint64_t)v26 >= v16 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          int v42 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v9 = *v26;
          int v42 = v26 + 1;
          *((void *)this + 1) = v42;
        }
        a1[17] |= 0x100u;
        if ((unint64_t)v42 >= v16 || *v42 != 80) {
          continue;
        }
        unsigned int v27 = v42 + 1;
        *((void *)this + 1) = v27;
LABEL_111:
        if ((unint64_t)v27 >= v16 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!result) {
            return result;
          }
          int v43 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v10 = *v27;
          int v43 = v27 + 1;
          *((void *)this + 1) = v43;
        }
        a1[17] |= 0x200u;
        if ((unint64_t)v43 >= v16 || *v43 != 88) {
          continue;
        }
        unsigned int v28 = v43 + 1;
        *((void *)this + 1) = v28;
LABEL_119:
        if ((unint64_t)v28 >= v16 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
          if (!result) {
            return result;
          }
          unsigned int v44 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v11 = *v28;
          unsigned int v44 = v28 + 1;
          *((void *)this + 1) = v44;
        }
        a1[17] |= 0x400u;
        if ((unint64_t)v44 >= v16 || *v44 != 96) {
          continue;
        }
        int v29 = v44 + 1;
        *((void *)this + 1) = v29;
LABEL_127:
        unsigned int v56 = 0;
        if ((unint64_t)v29 >= v16 || *v29 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v56);
          if (!result) {
            return result;
          }
          unsigned int v45 = v56;
        }
        else
        {
          unsigned int v45 = *v29;
          *((void *)this + 1) = v29 + 1;
        }
        if (v45 <= 5)
        {
          a1[17] |= 0x800u;
          a1[13] = v45;
        }
        unsigned int v46 = (unsigned char *)*((void *)this + 1);
        unint64_t v30 = *((void *)this + 2);
        if ((unint64_t)v46 >= v30 || *v46 != 104) {
          continue;
        }
        int v31 = v46 + 1;
        *((void *)this + 1) = v31;
LABEL_137:
        unsigned int v55 = 0;
        if ((unint64_t)v31 >= v30 || *v31 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v55);
          if (!result) {
            return result;
          }
          unsigned int v47 = v55;
        }
        else
        {
          unsigned int v47 = *v31;
          *((void *)this + 1) = v31 + 1;
        }
        if (v47 <= 6)
        {
          a1[17] |= 0x1000u;
          a1[14] = v47;
        }
        int v48 = (unsigned char *)*((void *)this + 1);
        unint64_t v32 = *((void *)this + 2);
        if ((unint64_t)v48 >= v32 || *v48 != 112) {
          continue;
        }
        uint64_t v33 = v48 + 1;
        *((void *)this + 1) = v33;
LABEL_147:
        if ((unint64_t)v33 >= v32 || *v33 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v12);
          if (!result) {
            return result;
          }
          int v49 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v32 = *((void *)this + 2);
        }
        else
        {
          *int v12 = *v33;
          int v49 = (unsigned __int8 *)(v33 + 1);
          *((void *)this + 1) = v49;
        }
        a1[17] |= 0x2000u;
        if (v49 != (unsigned __int8 *)v32 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_55;
      case 4u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v21 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_63;
      case 5u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        uint64_t v22 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_71;
      case 6u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        uint64_t v23 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_79;
      case 7u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v24 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_87;
      case 8u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v25 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_95;
      case 9u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v26 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_103;
      case 0xAu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v27 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_111;
      case 0xBu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v28 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_119;
      case 0xCu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v29 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_127;
      case 0xDu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        int v31 = (char *)*((void *)this + 1);
        unint64_t v30 = *((void *)this + 2);
        goto LABEL_137;
      case 0xEu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_38;
        }
        uint64_t v33 = (char *)*((void *)this + 1);
        unint64_t v32 = *((void *)this + 2);
        goto LABEL_147;
      default:
        int v15 = TagFallback & 7;
LABEL_38:
        if (v15 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

int *sub_1008F7000(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  int v6 = result[17];
  if (v6)
  {
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    int v6 = v5[17];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  int v6 = v5[17];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  int v6 = v5[17];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  int v6 = v5[17];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  int v6 = v5[17];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
  int v6 = v5[17];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], a2, a4);
  int v6 = v5[17];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[9], a2, a4);
  int v6 = v5[17];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[10], a2, a4);
  int v6 = v5[17];
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v5[11], a2, a4);
  int v6 = v5[17];
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v5[12], a2, a4);
  int v6 = v5[17];
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
LABEL_28:
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v5[14], a2, a4);
    if ((v5[17] & 0x2000) == 0) {
      return result;
    }
    goto LABEL_29;
  }
LABEL_27:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v5[13], a2, a4);
  int v6 = v5[17];
  if ((v6 & 0x1000) != 0) {
    goto LABEL_28;
  }
LABEL_14:
  if ((v6 & 0x2000) == 0) {
    return result;
  }
LABEL_29:
  int v7 = v5[15];

  return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v7, a2, a4);
}

uint64_t sub_1008F71C0(unsigned int *a1, unsigned int a2)
{
  unsigned int v3 = a1[17];
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_47;
  }
  if ((v3 & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_10;
  }
  int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[2];
  if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    unsigned int v3 = a1[17];
  }
  else
  {
    int v6 = 1;
  }
  uint64_t v4 = (v6 + 1);
  if ((v3 & 2) != 0)
  {
LABEL_10:
    int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[3];
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      unsigned int v3 = a1[17];
    }
    else
    {
      int v8 = 1;
    }
    uint64_t v4 = (v4 + v8 + 1);
  }
LABEL_14:
  if ((v3 & 4) != 0)
  {
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[4];
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
      unsigned int v3 = a1[17];
    }
    else
    {
      int v10 = 1;
    }
    uint64_t v4 = (v4 + v10 + 1);
    if ((v3 & 8) == 0)
    {
LABEL_16:
      if ((v3 & 0x10) == 0) {
        goto LABEL_17;
      }
      goto LABEL_29;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[5];
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    unsigned int v3 = a1[17];
  }
  else
  {
    int v12 = 1;
  }
  uint64_t v4 = (v4 + v12 + 1);
  if ((v3 & 0x10) == 0)
  {
LABEL_17:
    if ((v3 & 0x20) == 0) {
      goto LABEL_18;
    }
    goto LABEL_35;
  }
LABEL_29:
  int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[6];
  if ((v13 & 0x80000000) != 0)
  {
    int v14 = 10;
  }
  else if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
    unsigned int v3 = a1[17];
  }
  else
  {
    int v14 = 1;
  }
  uint64_t v4 = (v4 + v14 + 1);
  if ((v3 & 0x20) == 0)
  {
LABEL_18:
    if ((v3 & 0x40) == 0) {
      goto LABEL_19;
    }
    goto LABEL_39;
  }
LABEL_35:
  int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[7];
  if (v15 >= 0x80)
  {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
    unsigned int v3 = a1[17];
  }
  else
  {
    int v16 = 1;
  }
  uint64_t v4 = (v4 + v16 + 1);
  if ((v3 & 0x40) == 0)
  {
LABEL_19:
    if ((v3 & 0x80) == 0) {
      goto LABEL_47;
    }
    goto LABEL_43;
  }
LABEL_39:
  unsigned int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[8];
  if (v17 >= 0x80)
  {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2);
    unsigned int v3 = a1[17];
  }
  else
  {
    int v18 = 1;
  }
  uint64_t v4 = (v4 + v18 + 1);
  if ((v3 & 0x80) != 0)
  {
LABEL_43:
    BOOL v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[9];
    if (v19 >= 0x80)
    {
      int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
      unsigned int v3 = a1[17];
    }
    else
    {
      int v20 = 2;
    }
    uint64_t v4 = (v20 + v4);
  }
LABEL_47:
  if ((v3 & 0xFF00) == 0) {
    goto LABEL_83;
  }
  if ((v3 & 0x100) != 0)
  {
    int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[10];
    if (v21 >= 0x80)
    {
      int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2) + 1;
      unsigned int v3 = a1[17];
    }
    else
    {
      int v22 = 2;
    }
    uint64_t v4 = (v22 + v4);
    if ((v3 & 0x200) == 0)
    {
LABEL_50:
      if ((v3 & 0x400) == 0) {
        goto LABEL_51;
      }
      goto LABEL_63;
    }
  }
  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_50;
  }
  uint64_t v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[11];
  if (v23 >= 0x80)
  {
    int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23, a2) + 1;
    unsigned int v3 = a1[17];
  }
  else
  {
    int v24 = 2;
  }
  uint64_t v4 = (v24 + v4);
  if ((v3 & 0x400) == 0)
  {
LABEL_51:
    if ((v3 & 0x800) == 0) {
      goto LABEL_52;
    }
    goto LABEL_67;
  }
LABEL_63:
  int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[12];
  if (v25 >= 0x80)
  {
    int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2) + 1;
    unsigned int v3 = a1[17];
  }
  else
  {
    int v26 = 2;
  }
  uint64_t v4 = (v26 + v4);
  if ((v3 & 0x800) == 0)
  {
LABEL_52:
    if ((v3 & 0x1000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_73;
  }
LABEL_67:
  unsigned int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[13];
  if ((v27 & 0x80000000) != 0)
  {
    int v28 = 11;
  }
  else if (v27 >= 0x80)
  {
    int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2) + 1;
    unsigned int v3 = a1[17];
  }
  else
  {
    int v28 = 2;
  }
  uint64_t v4 = (v28 + v4);
  if ((v3 & 0x1000) == 0)
  {
LABEL_53:
    if ((v3 & 0x2000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_79;
  }
LABEL_73:
  int v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[14];
  if ((v29 & 0x80000000) != 0)
  {
    int v30 = 11;
  }
  else if (v29 >= 0x80)
  {
    int v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29, a2) + 1;
    unsigned int v3 = a1[17];
  }
  else
  {
    int v30 = 2;
  }
  uint64_t v4 = (v30 + v4);
  if ((v3 & 0x2000) != 0)
  {
LABEL_79:
    int v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[15];
    if (v31 >= 0x80) {
      int v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31, a2) + 1;
    }
    else {
      int v32 = 2;
    }
    uint64_t v4 = (v32 + v4);
  }
LABEL_83:
  a1[16] = v4;
  return v4;
}

void sub_1008F748C(_DWORD *a1, _DWORD *lpsrc)
{
  sub_1008F64A8(a1, lpsrc);
}

uint64_t sub_1008F7514()
{
  return 1;
}

void *sub_1008F751C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.ReferenceLocation");
}

void sub_1008F752C(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v40);
  }
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    int v11 = *(_DWORD *)(a2 + 8);
    a1[37] |= 1u;
    a1[2] = v11;
    unsigned int v4 = *(_DWORD *)(a2 + 148);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_50;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v12 = *(_DWORD *)(a2 + 12);
  a1[37] |= 2u;
  a1[3] = v12;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_51;
  }
LABEL_50:
  int v13 = *(_DWORD *)(a2 + 16);
  a1[37] |= 4u;
  a1[4] = v13;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_52;
  }
LABEL_51:
  int v14 = *(_DWORD *)(a2 + 20);
  a1[37] |= 8u;
  a1[5] = v14;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_53:
    int v16 = *(_DWORD *)(a2 + 28);
    a1[37] |= 0x20u;
    a1[7] = v16;
    unsigned int v4 = *(_DWORD *)(a2 + 148);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_54;
  }
LABEL_52:
  int v15 = *(_DWORD *)(a2 + 24);
  a1[37] |= 0x10u;
  a1[6] = v15;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x20) != 0) {
    goto LABEL_53;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_54:
  int v17 = *(_DWORD *)(a2 + 32);
  a1[37] |= 0x40u;
  a1[8] = v17;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *(_DWORD *)(a2 + 36);
    a1[37] |= 0x80u;
    a1[9] = v5;
    unsigned int v4 = *(_DWORD *)(a2 + 148);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_23;
  }
  if ((v4 & 0x100) != 0)
  {
    int v18 = *(_DWORD *)(a2 + 40);
    a1[37] |= 0x100u;
    a1[10] = v18;
    unsigned int v4 = *(_DWORD *)(a2 + 148);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_58;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  int v19 = *(_DWORD *)(a2 + 44);
  a1[37] |= 0x200u;
  a1[11] = v19;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_59;
  }
LABEL_58:
  int v20 = *(_DWORD *)(a2 + 48);
  a1[37] |= 0x400u;
  a1[12] = v20;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_60;
  }
LABEL_59:
  int v21 = *(_DWORD *)(a2 + 52);
  a1[37] |= 0x800u;
  a1[13] = v21;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_61;
  }
LABEL_60:
  int v22 = *(_DWORD *)(a2 + 56);
  a1[37] |= 0x1000u;
  a1[14] = v22;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x2000) == 0)
  {
LABEL_20:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_62;
  }
LABEL_61:
  int v23 = *(_DWORD *)(a2 + 60);
  a1[37] |= 0x2000u;
  a1[15] = v23;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x4000) == 0)
  {
LABEL_21:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
LABEL_62:
  int v24 = *(_DWORD *)(a2 + 64);
  a1[37] |= 0x4000u;
  a1[16] = v24;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x8000) != 0)
  {
LABEL_22:
    int v6 = *(_DWORD *)(a2 + 68);
    a1[37] |= 0x8000u;
    a1[17] = v6;
    unsigned int v4 = *(_DWORD *)(a2 + 148);
  }
LABEL_23:
  if ((v4 & 0xFF0000) == 0) {
    goto LABEL_33;
  }
  if ((v4 & 0x10000) != 0)
  {
    int v25 = *(_DWORD *)(a2 + 72);
    a1[37] |= 0x10000u;
    a1[18] = v25;
    unsigned int v4 = *(_DWORD *)(a2 + 148);
    if ((v4 & 0x20000) == 0)
    {
LABEL_26:
      if ((v4 & 0x40000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_66;
    }
  }
  else if ((v4 & 0x20000) == 0)
  {
    goto LABEL_26;
  }
  int v26 = *(_DWORD *)(a2 + 76);
  a1[37] |= 0x20000u;
  a1[19] = v26;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x40000) == 0)
  {
LABEL_27:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_67;
  }
LABEL_66:
  int v27 = *(_DWORD *)(a2 + 80);
  a1[37] |= 0x40000u;
  a1[20] = v27;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x80000) == 0)
  {
LABEL_28:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_68;
  }
LABEL_67:
  int v28 = *(_DWORD *)(a2 + 84);
  a1[37] |= 0x80000u;
  a1[21] = v28;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x100000) == 0)
  {
LABEL_29:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_69;
  }
LABEL_68:
  int v29 = *(_DWORD *)(a2 + 88);
  a1[37] |= 0x100000u;
  a1[22] = v29;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x200000) == 0)
  {
LABEL_30:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_70;
  }
LABEL_69:
  int v30 = *(_DWORD *)(a2 + 92);
  a1[37] |= 0x200000u;
  a1[23] = v30;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x400000) == 0)
  {
LABEL_31:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_32;
  }
LABEL_70:
  int v31 = *(_DWORD *)(a2 + 96);
  a1[37] |= 0x400000u;
  a1[24] = v31;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x800000) != 0)
  {
LABEL_32:
    int v7 = *(_DWORD *)(a2 + 100);
    a1[37] |= 0x800000u;
    a1[25] = v7;
    unsigned int v4 = *(_DWORD *)(a2 + 148);
  }
LABEL_33:
  if (!HIBYTE(v4)) {
    goto LABEL_42;
  }
  if ((v4 & 0x1000000) != 0)
  {
    int v32 = *(_DWORD *)(a2 + 104);
    a1[37] |= 0x1000000u;
    a1[26] = v32;
    unsigned int v4 = *(_DWORD *)(a2 + 148);
    if ((v4 & 0x2000000) == 0)
    {
LABEL_36:
      if ((v4 & 0x4000000) == 0) {
        goto LABEL_37;
      }
      goto LABEL_74;
    }
  }
  else if ((v4 & 0x2000000) == 0)
  {
    goto LABEL_36;
  }
  int v33 = *(_DWORD *)(a2 + 108);
  a1[37] |= 0x2000000u;
  a1[27] = v33;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_37:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_75;
  }
LABEL_74:
  int v34 = *(_DWORD *)(a2 + 112);
  a1[37] |= 0x4000000u;
  a1[28] = v34;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_38:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_76;
  }
LABEL_75:
  int v35 = *(_DWORD *)(a2 + 116);
  a1[37] |= 0x8000000u;
  a1[29] = v35;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_39:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_77;
  }
LABEL_76:
  int v36 = *(_DWORD *)(a2 + 120);
  a1[37] |= 0x10000000u;
  a1[30] = v36;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_40:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_41;
    }
LABEL_78:
    int v38 = *(_DWORD *)(a2 + 128);
    a1[37] |= 0x40000000u;
    a1[32] = v38;
    if ((*(_DWORD *)(a2 + 148) & 0x80000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_79;
  }
LABEL_77:
  int v37 = *(_DWORD *)(a2 + 124);
  a1[37] |= 0x20000000u;
  a1[31] = v37;
  unsigned int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x40000000) != 0) {
    goto LABEL_78;
  }
LABEL_41:
  if ((v4 & 0x80000000) == 0) {
    goto LABEL_42;
  }
LABEL_79:
  int v39 = *(_DWORD *)(a2 + 132);
  a1[37] |= 0x80000000;
  a1[33] = v39;
LABEL_42:
  LOBYTE(v8) = *(unsigned char *)(a2 + 152);
  if ((_BYTE)v8)
  {
    if (*(unsigned char *)(a2 + 152))
    {
      int v9 = *(_DWORD *)(a2 + 136);
      a1[38] |= 1u;
      a1[34] = v9;
      int v8 = *(_DWORD *)(a2 + 152);
    }
    if ((v8 & 2) != 0)
    {
      int v10 = *(_DWORD *)(a2 + 140);
      a1[38] |= 2u;
      a1[35] = v10;
    }
  }
}

void sub_1008F79F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008F7A10(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D24F0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008F7A30(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D24F0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008F7A84()
{
}

uint64_t sub_1008F7AF8(uint64_t result)
{
  unsigned int v1 = *(_DWORD *)(result + 148);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
  }
  if (HIBYTE(v1))
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
  }
  if (*(unsigned char *)(result + 152)) {
    *(void *)(result + 136) = 0;
  }
  *(void *)(result + 148) = 0;
  return result;
}

uint64_t sub_1008F7B60(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 4;
  int v6 = a1 + 5;
  int v7 = a1 + 10;
  int v8 = a1 + 11;
  int v9 = a1 + 17;
  v111 = a1 + 23;
  v112 = a1 + 22;
  v109 = a1 + 26;
  v110 = a1 + 24;
  v107 = a1 + 28;
  v108 = a1 + 27;
  v105 = a1 + 31;
  v106 = a1 + 30;
  v104 = a1 + 32;
  int v10 = a1 + 33;
  int v11 = a1 + 34;
  int v12 = a1 + 35;
  while (2)
  {
    int v13 = (char *)*((void *)this + 1);
    if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v13;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v13 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        unsigned int v113 = 0;
        int v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        if ((unint64_t)v17 < v16 && (*v17 & 0x80000000) == 0)
        {
          unsigned int v18 = *v17;
          int v19 = v17 + 1;
          *((void *)this + 1) = v19;
LABEL_84:
          a1[2] = v18;
          a1[37] |= 1u;
          if ((unint64_t)v19 < v16 && *v19 == 16)
          {
            int v20 = v19 + 1;
            *((void *)this + 1) = v20;
            goto LABEL_87;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
        if (result)
        {
          unsigned int v18 = v113;
          int v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
          goto LABEL_84;
        }
        break;
      case 2u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
LABEL_87:
        unsigned int v113 = 0;
        if ((unint64_t)v20 >= v16 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!result) {
            return result;
          }
          unsigned int v54 = v113;
          unsigned int v55 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v54 = *v20;
          unsigned int v55 = v20 + 1;
          *((void *)this + 1) = v55;
        }
        a1[3] = v54;
        a1[37] |= 2u;
        if ((unint64_t)v55 >= v16 || *v55 != 24) {
          continue;
        }
        int v21 = v55 + 1;
        *((void *)this + 1) = v21;
LABEL_95:
        if ((unint64_t)v21 >= v16 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          unsigned int v56 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v5 = *v21;
          unsigned int v56 = v21 + 1;
          *((void *)this + 1) = v56;
        }
        a1[37] |= 4u;
        if ((unint64_t)v56 >= v16 || *v56 != 32) {
          continue;
        }
        int v22 = v56 + 1;
        *((void *)this + 1) = v22;
LABEL_103:
        if ((unint64_t)v22 >= v16 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v57 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v22;
          int v57 = v22 + 1;
          *((void *)this + 1) = v57;
        }
        a1[37] |= 8u;
        if ((unint64_t)v57 >= v16 || *v57 != 40) {
          continue;
        }
        int v23 = v57 + 1;
        *((void *)this + 1) = v23;
LABEL_111:
        unsigned int v113 = 0;
        if ((unint64_t)v23 >= v16 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!result) {
            return result;
          }
          unsigned int v58 = v113;
          unsigned int v59 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v58 = *v23;
          unsigned int v59 = v23 + 1;
          *((void *)this + 1) = v59;
        }
        a1[6] = v58;
        a1[37] |= 0x10u;
        if ((unint64_t)v59 >= v16 || *v59 != 48) {
          continue;
        }
        int v24 = v59 + 1;
        *((void *)this + 1) = v24;
LABEL_119:
        unsigned int v113 = 0;
        if ((unint64_t)v24 >= v16 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!result) {
            return result;
          }
          unsigned int v60 = v113;
          unsigned int v61 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v60 = *v24;
          unsigned int v61 = v24 + 1;
          *((void *)this + 1) = v61;
        }
        a1[7] = v60;
        a1[37] |= 0x20u;
        if ((unint64_t)v61 >= v16 || *v61 != 56) {
          continue;
        }
        int v25 = v61 + 1;
        *((void *)this + 1) = v25;
LABEL_127:
        unsigned int v113 = 0;
        if ((unint64_t)v25 >= v16 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!result) {
            return result;
          }
          unsigned int v62 = v113;
          unsigned int v63 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v62 = *v25;
          unsigned int v63 = v25 + 1;
          *((void *)this + 1) = v63;
        }
        a1[8] = v62;
        a1[37] |= 0x40u;
        if ((unint64_t)v63 >= v16 || *v63 != 64) {
          continue;
        }
        int v26 = v63 + 1;
        *((void *)this + 1) = v26;
LABEL_135:
        unsigned int v113 = 0;
        if ((unint64_t)v26 >= v16 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!result) {
            return result;
          }
          unsigned int v64 = v113;
          unsigned int v65 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v64 = *v26;
          unsigned int v65 = v26 + 1;
          *((void *)this + 1) = v65;
        }
        a1[9] = v64;
        a1[37] |= 0x80u;
        if ((unint64_t)v65 >= v16 || *v65 != 72) {
          continue;
        }
        int v27 = v65 + 1;
        *((void *)this + 1) = v27;
LABEL_143:
        if ((unint64_t)v27 >= v16 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          __int16 v66 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v7 = *v27;
          __int16 v66 = v27 + 1;
          *((void *)this + 1) = v66;
        }
        a1[37] |= 0x100u;
        if ((unint64_t)v66 >= v16 || *v66 != 80) {
          continue;
        }
        int v28 = v66 + 1;
        *((void *)this + 1) = v28;
LABEL_151:
        if ((unint64_t)v28 >= v16 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          unsigned int v67 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v28;
          unsigned int v67 = v28 + 1;
          *((void *)this + 1) = v67;
        }
        a1[37] |= 0x200u;
        if ((unint64_t)v67 >= v16 || *v67 != 88) {
          continue;
        }
        int v29 = v67 + 1;
        *((void *)this + 1) = v29;
LABEL_159:
        unsigned int v113 = 0;
        if ((unint64_t)v29 >= v16 || *v29 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!result) {
            return result;
          }
          unsigned int v68 = v113;
          int v69 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v68 = *v29;
          int v69 = v29 + 1;
          *((void *)this + 1) = v69;
        }
        a1[12] = v68;
        a1[37] |= 0x400u;
        if ((unint64_t)v69 >= v16 || *v69 != 96) {
          continue;
        }
        int v30 = v69 + 1;
        *((void *)this + 1) = v30;
LABEL_167:
        unsigned int v113 = 0;
        if ((unint64_t)v30 >= v16 || *v30 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!result) {
            return result;
          }
          unsigned int v70 = v113;
          unsigned int v71 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v70 = *v30;
          unsigned int v71 = v30 + 1;
          *((void *)this + 1) = v71;
        }
        a1[13] = v70;
        a1[37] |= 0x800u;
        if ((unint64_t)v71 >= v16 || *v71 != 104) {
          continue;
        }
        int v31 = v71 + 1;
        *((void *)this + 1) = v31;
LABEL_175:
        unsigned int v113 = 0;
        if ((unint64_t)v31 >= v16 || *v31 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!result) {
            return result;
          }
          unsigned int v72 = v113;
          int v73 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v72 = *v31;
          int v73 = v31 + 1;
          *((void *)this + 1) = v73;
        }
        a1[14] = v72;
        a1[37] |= 0x1000u;
        if ((unint64_t)v73 >= v16 || *v73 != 112) {
          continue;
        }
        int v32 = v73 + 1;
        *((void *)this + 1) = v32;
LABEL_183:
        unsigned int v113 = 0;
        if ((unint64_t)v32 >= v16 || *v32 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!result) {
            return result;
          }
          unsigned int v74 = v113;
          double v75 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v74 = *v32;
          double v75 = v32 + 1;
          *((void *)this + 1) = v75;
        }
        a1[15] = v74;
        a1[37] |= 0x2000u;
        if ((unint64_t)v75 >= v16 || *v75 != 120) {
          continue;
        }
        int v33 = v75 + 1;
        *((void *)this + 1) = v33;
LABEL_191:
        unsigned int v113 = 0;
        if ((unint64_t)v33 >= v16 || (char)*v33 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!result) {
            return result;
          }
          unsigned int v76 = v113;
          unsigned int v77 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v76 = *v33;
          unsigned int v77 = v33 + 1;
          *((void *)this + 1) = v77;
        }
        a1[16] = v76;
        a1[37] |= 0x4000u;
        if ((int)v16 - (int)v77 < 2 || *v77 != 128 || v77[1] != 1) {
          continue;
        }
        int v34 = v77 + 2;
        *((void *)this + 1) = v34;
LABEL_200:
        if ((unint64_t)v34 >= v16 || (char)*v34 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          v78 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v9 = *v34;
          v78 = v34 + 1;
          *((void *)this + 1) = v78;
        }
        a1[37] |= 0x8000u;
        if ((int)v16 - (int)v78 < 2 || *v78 != 136 || v78[1] != 1) {
          continue;
        }
        int v35 = v78 + 2;
        *((void *)this + 1) = v35;
LABEL_209:
        unsigned int v113 = 0;
        if ((unint64_t)v35 >= v16 || (char)*v35 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!result) {
            return result;
          }
          unsigned int v79 = v113;
          v80 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v79 = *v35;
          v80 = v35 + 1;
          *((void *)this + 1) = v80;
        }
        a1[18] = v79;
        a1[37] |= 0x10000u;
        if ((int)v16 - (int)v80 < 2 || *v80 != 144 || v80[1] != 1) {
          continue;
        }
        int v36 = v80 + 2;
        *((void *)this + 1) = v36;
LABEL_218:
        unsigned int v113 = 0;
        if ((unint64_t)v36 >= v16 || (char)*v36 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!result) {
            return result;
          }
          unsigned int v81 = v113;
          v82 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v81 = *v36;
          v82 = v36 + 1;
          *((void *)this + 1) = v82;
        }
        a1[19] = v81;
        a1[37] |= 0x20000u;
        if ((int)v16 - (int)v82 < 2 || *v82 != 152 || v82[1] != 1) {
          continue;
        }
        int v37 = v82 + 2;
        *((void *)this + 1) = v37;
LABEL_227:
        unsigned int v113 = 0;
        if ((unint64_t)v37 >= v16 || (char)*v37 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!result) {
            return result;
          }
          unsigned int v83 = v113;
          v84 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v83 = *v37;
          v84 = v37 + 1;
          *((void *)this + 1) = v84;
        }
        a1[20] = v83;
        a1[37] |= 0x40000u;
        if ((int)v16 - (int)v84 < 2 || *v84 != 160 || v84[1] != 1) {
          continue;
        }
        int v38 = v84 + 2;
        *((void *)this + 1) = v38;
LABEL_236:
        unsigned int v113 = 0;
        if ((unint64_t)v38 >= v16 || (char)*v38 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!result) {
            return result;
          }
          unsigned int v85 = v113;
          v86 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v85 = *v38;
          v86 = v38 + 1;
          *((void *)this + 1) = v86;
        }
        a1[21] = v85;
        a1[37] |= 0x80000u;
        if ((int)v16 - (int)v86 < 2 || *v86 != 168 || v86[1] != 1) {
          continue;
        }
        int v39 = v86 + 2;
        *((void *)this + 1) = v39;
LABEL_245:
        if ((unint64_t)v39 >= v16 || (char)*v39 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v112);
          if (!result) {
            return result;
          }
          v87 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v112 = *v39;
          v87 = v39 + 1;
          *((void *)this + 1) = v87;
        }
        a1[37] |= 0x100000u;
        if ((int)v16 - (int)v87 < 2 || *v87 != 176 || v87[1] != 1) {
          continue;
        }
        int v40 = v87 + 2;
        *((void *)this + 1) = v40;
LABEL_254:
        if ((unint64_t)v40 >= v16 || (char)*v40 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v111);
          if (!result) {
            return result;
          }
          v88 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v111 = *v40;
          v88 = v40 + 1;
          *((void *)this + 1) = v88;
        }
        a1[37] |= 0x200000u;
        if ((int)v16 - (int)v88 < 2 || *v88 != 184 || v88[1] != 1) {
          continue;
        }
        BOOL v41 = v88 + 2;
        *((void *)this + 1) = v41;
LABEL_263:
        if ((unint64_t)v41 >= v16 || (char)*v41 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v110);
          if (!result) {
            return result;
          }
          v89 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v110 = *v41;
          v89 = v41 + 1;
          *((void *)this + 1) = v89;
        }
        a1[37] |= 0x400000u;
        if ((int)v16 - (int)v89 < 2 || *v89 != 192 || v89[1] != 1) {
          continue;
        }
        int v42 = v89 + 2;
        *((void *)this + 1) = v42;
LABEL_272:
        unsigned int v113 = 0;
        if ((unint64_t)v42 >= v16 || (char)*v42 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!result) {
            return result;
          }
          unsigned int v90 = v113;
          v91 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v90 = *v42;
          v91 = v42 + 1;
          *((void *)this + 1) = v91;
        }
        a1[25] = v90;
        a1[37] |= 0x800000u;
        if ((int)v16 - (int)v91 < 2 || *v91 != 200 || v91[1] != 1) {
          continue;
        }
        int v43 = v91 + 2;
        *((void *)this + 1) = v43;
LABEL_281:
        unint64_t v44 = *((void *)this + 2);
        if ((unint64_t)v43 >= v44 || (char)*v43 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v109);
          if (!result) {
            return result;
          }
          v92 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v44 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v109 = *v43;
          v92 = v43 + 1;
          *((void *)this + 1) = v92;
        }
        a1[37] |= 0x1000000u;
        if ((int)v44 - (int)v92 < 2 || *v92 != 208 || v92[1] != 1) {
          continue;
        }
        unsigned int v45 = v92 + 2;
        *((void *)this + 1) = v45;
LABEL_290:
        if ((unint64_t)v45 >= v44 || (char)*v45 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v108);
          if (!result) {
            return result;
          }
          v93 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v44 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v108 = *v45;
          v93 = v45 + 1;
          *((void *)this + 1) = v93;
        }
        a1[37] |= 0x2000000u;
        if ((int)v44 - (int)v93 < 2 || *v93 != 216 || v93[1] != 1) {
          continue;
        }
        unsigned int v46 = v93 + 2;
        *((void *)this + 1) = v46;
LABEL_299:
        if ((unint64_t)v46 >= v44 || (char)*v46 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v107);
          if (!result) {
            return result;
          }
          v94 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v44 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v107 = *v46;
          v94 = v46 + 1;
          *((void *)this + 1) = v94;
        }
        a1[37] |= 0x4000000u;
        if ((int)v44 - (int)v94 < 2 || *v94 != 224 || v94[1] != 1) {
          continue;
        }
        unsigned int v47 = v94 + 2;
        *((void *)this + 1) = v47;
LABEL_308:
        unsigned int v113 = 0;
        if ((unint64_t)v47 >= v44 || (char)*v47 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v113);
          if (!result) {
            return result;
          }
          unsigned int v95 = v113;
          v96 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v44 = *((void *)this + 2);
        }
        else
        {
          unsigned int v95 = *v47;
          v96 = v47 + 1;
          *((void *)this + 1) = v96;
        }
        a1[29] = v95;
        a1[37] |= 0x8000000u;
        if ((int)v44 - (int)v96 < 2 || *v96 != 232 || v96[1] != 1) {
          continue;
        }
        int v48 = v96 + 2;
        *((void *)this + 1) = v48;
LABEL_317:
        if ((unint64_t)v48 >= v44 || (char)*v48 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v106);
          if (!result) {
            return result;
          }
          v97 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v44 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v106 = *v48;
          v97 = v48 + 1;
          *((void *)this + 1) = v97;
        }
        a1[37] |= 0x10000000u;
        if ((int)v44 - (int)v97 < 2 || *v97 != 240 || v97[1] != 1) {
          continue;
        }
        int v49 = v97 + 2;
        *((void *)this + 1) = v49;
LABEL_326:
        if ((unint64_t)v49 >= v44 || (char)*v49 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v105);
          if (!result) {
            return result;
          }
          v98 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v44 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v105 = *v49;
          v98 = v49 + 1;
          *((void *)this + 1) = v98;
        }
        a1[37] |= 0x20000000u;
        if ((int)v44 - (int)v98 < 2 || *v98 != 248 || v98[1] != 1) {
          continue;
        }
        unsigned int v50 = v98 + 2;
        *((void *)this + 1) = v50;
LABEL_335:
        if ((unint64_t)v50 >= v44 || (char)*v50 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v104);
          if (!result) {
            return result;
          }
          v99 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v44 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v104 = *v50;
          v99 = v50 + 1;
          *((void *)this + 1) = v99;
        }
        a1[37] |= 0x40000000u;
        if ((int)v44 - (int)v99 < 2 || *v99 != 128 || v99[1] != 2) {
          continue;
        }
        unsigned int v51 = v99 + 2;
        *((void *)this + 1) = v51;
LABEL_344:
        if ((unint64_t)v51 >= v44 || (char)*v51 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!result) {
            return result;
          }
          v100 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v44 = *((void *)this + 2);
        }
        else
        {
          *int v10 = *v51;
          v100 = v51 + 1;
          *((void *)this + 1) = v100;
        }
        a1[37] |= 0x80000000;
        if ((int)v44 - (int)v100 < 2 || *v100 != 136 || v100[1] != 2) {
          continue;
        }
        unsigned int v52 = v100 + 2;
        *((void *)this + 1) = v52;
LABEL_353:
        if ((unint64_t)v52 >= v44 || (char)*v52 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
          if (!result) {
            return result;
          }
          v101 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v44 = *((void *)this + 2);
        }
        else
        {
          *int v11 = *v52;
          v101 = v52 + 1;
          *((void *)this + 1) = v101;
        }
        a1[38] |= 1u;
        if ((int)v44 - (int)v101 < 2 || *v101 != 144 || v101[1] != 2) {
          continue;
        }
        unsigned int v53 = (char *)(v101 + 2);
        *((void *)this + 1) = v53;
LABEL_362:
        if ((unint64_t)v53 >= v44 || *v53 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v12);
          if (!result) {
            return result;
          }
          v102 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v44 = *((void *)this + 2);
        }
        else
        {
          *int v12 = *v53;
          v102 = (unsigned __int8 *)(v53 + 1);
          *((void *)this + 1) = v102;
        }
        a1[38] |= 2u;
        if (v102 != (unsigned __int8 *)v44
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v21 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_95;
      case 4u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v22 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_103;
      case 5u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v23 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_111;
      case 6u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v24 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_119;
      case 7u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v25 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_127;
      case 8u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v26 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_135;
      case 9u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v27 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_143;
      case 0xAu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v28 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_151;
      case 0xBu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v29 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_159;
      case 0xCu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v30 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_167;
      case 0xDu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v31 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_175;
      case 0xEu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v32 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_183;
      case 0xFu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v33 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_191;
      case 0x10u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v34 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_200;
      case 0x11u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v35 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_209;
      case 0x12u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v36 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_218;
      case 0x13u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v37 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_227;
      case 0x14u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v38 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_236;
      case 0x15u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v39 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_245;
      case 0x16u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v40 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_254;
      case 0x17u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        BOOL v41 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_263;
      case 0x18u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v42 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_272;
      case 0x19u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v43 = (unsigned __int8 *)*((void *)this + 1);
        goto LABEL_281;
      case 0x1Au:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        unsigned int v45 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v44 = *((void *)this + 2);
        goto LABEL_290;
      case 0x1Bu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        unsigned int v46 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v44 = *((void *)this + 2);
        goto LABEL_299;
      case 0x1Cu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        unsigned int v47 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v44 = *((void *)this + 2);
        goto LABEL_308;
      case 0x1Du:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v48 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v44 = *((void *)this + 2);
        goto LABEL_317;
      case 0x1Eu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        int v49 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v44 = *((void *)this + 2);
        goto LABEL_326;
      case 0x1Fu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        unsigned int v50 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v44 = *((void *)this + 2);
        goto LABEL_335;
      case 0x20u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        unsigned int v51 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v44 = *((void *)this + 2);
        goto LABEL_344;
      case 0x21u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        unsigned int v52 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v44 = *((void *)this + 2);
        goto LABEL_353;
      case 0x22u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_78;
        }
        unsigned int v53 = (char *)*((void *)this + 1);
        unint64_t v44 = *((void *)this + 2);
        goto LABEL_362;
      default:
        int v15 = TagFallback & 7;
LABEL_78:
        if (v15 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

int *sub_1008F8DF8(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  int v6 = result[37];
  if (v6)
  {
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    int v6 = v5[37];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_39;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  int v6 = v5[37];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  int v6 = v5[37];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[9], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[10], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v5[11], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v5[12], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v5[13], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v5[14], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v5[15], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, v5[16], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v5[17], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, v5[18], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, v5[19], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, v5[20], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, v5[21], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_58;
  }
LABEL_57:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, v5[22], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, v5[23], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x400000) == 0)
  {
LABEL_24:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_60;
  }
LABEL_59:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, v5[24], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_61;
  }
LABEL_60:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, v5[25], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, v5[26], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_63;
  }
LABEL_62:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, v5[27], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_64;
  }
LABEL_63:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, v5[28], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_65;
  }
LABEL_64:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, v5[29], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x10000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_66;
  }
LABEL_65:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, v5[30], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_32;
    }
LABEL_67:
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1F, v5[32], a2, a4);
    if ((v5[37] & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_68;
  }
LABEL_66:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1E, v5[31], a2, a4);
  int v6 = v5[37];
  if ((v6 & 0x40000000) != 0) {
    goto LABEL_67;
  }
LABEL_32:
  if ((v6 & 0x80000000) == 0) {
    goto LABEL_33;
  }
LABEL_68:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x20, v5[33], a2, a4);
LABEL_33:
  int v7 = v5[38];
  if (v7)
  {
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x21, v5[34], a2, a4);
    int v7 = v5[38];
  }
  if ((v7 & 2) != 0)
  {
    int v8 = v5[35];
    return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x22, v8, a2, a4);
  }
  return result;
}

uint64_t sub_1008F91E4(uint64_t a1, unsigned int a2)
{
  unsigned int v3 = *(_DWORD *)(a1 + 148);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_57;
  }
  if ((v3 & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
  if ((v5 & 0x80000000) != 0)
  {
    int v6 = 10;
  }
  else if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    unsigned int v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v6 = 1;
  }
  uint64_t v4 = (v6 + 1);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if ((v7 & 0x80000000) != 0)
    {
      int v8 = 10;
    }
    else if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      unsigned int v3 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      int v8 = 1;
    }
    uint64_t v4 = (v4 + v8 + 1);
  }
LABEL_18:
  if ((v3 & 4) != 0)
  {
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
      unsigned int v3 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      int v10 = 1;
    }
    uint64_t v4 = (v4 + v10 + 1);
    if ((v3 & 8) == 0)
    {
LABEL_20:
      if ((v3 & 0x10) == 0) {
        goto LABEL_21;
      }
      goto LABEL_33;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_20;
  }
  int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    unsigned int v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v12 = 1;
  }
  uint64_t v4 = (v4 + v12 + 1);
  if ((v3 & 0x10) == 0)
  {
LABEL_21:
    if ((v3 & 0x20) == 0) {
      goto LABEL_22;
    }
    goto LABEL_39;
  }
LABEL_33:
  int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if ((v13 & 0x80000000) != 0)
  {
    int v14 = 10;
  }
  else if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
    unsigned int v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v14 = 1;
  }
  uint64_t v4 = (v4 + v14 + 1);
  if ((v3 & 0x20) == 0)
  {
LABEL_22:
    if ((v3 & 0x40) == 0) {
      goto LABEL_23;
    }
    goto LABEL_45;
  }
LABEL_39:
  int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
  if ((v15 & 0x80000000) != 0)
  {
    int v16 = 10;
  }
  else if (v15 >= 0x80)
  {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
    unsigned int v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v16 = 1;
  }
  uint64_t v4 = (v4 + v16 + 1);
  if ((v3 & 0x40) == 0)
  {
LABEL_23:
    if ((v3 & 0x80) == 0) {
      goto LABEL_57;
    }
    goto LABEL_51;
  }
LABEL_45:
  int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
  if ((v17 & 0x80000000) != 0)
  {
    int v18 = 10;
  }
  else if (v17 >= 0x80)
  {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2);
    unsigned int v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v18 = 1;
  }
  uint64_t v4 = (v4 + v18 + 1);
  if ((v3 & 0x80) != 0)
  {
LABEL_51:
    int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
    if ((v19 & 0x80000000) != 0)
    {
      int v20 = 10;
    }
    else if (v19 >= 0x80)
    {
      int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2);
      unsigned int v3 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      int v20 = 1;
    }
    uint64_t v4 = (v4 + v20 + 1);
  }
LABEL_57:
  if ((v3 & 0xFF00) == 0) {
    goto LABEL_109;
  }
  if ((v3 & 0x100) != 0)
  {
    int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
    if (v21 >= 0x80)
    {
      int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2);
      unsigned int v3 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      int v22 = 1;
    }
    uint64_t v4 = (v4 + v22 + 1);
    if ((v3 & 0x200) == 0)
    {
LABEL_60:
      if ((v3 & 0x400) == 0) {
        goto LABEL_61;
      }
      goto LABEL_75;
    }
  }
  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_60;
  }
  int v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
  if (v23 >= 0x80)
  {
    int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23, a2);
    unsigned int v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v24 = 1;
  }
  uint64_t v4 = (v4 + v24 + 1);
  if ((v3 & 0x400) == 0)
  {
LABEL_61:
    if ((v3 & 0x800) == 0) {
      goto LABEL_62;
    }
    goto LABEL_81;
  }
LABEL_75:
  int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
  if ((v25 & 0x80000000) != 0)
  {
    int v26 = 10;
  }
  else if (v25 >= 0x80)
  {
    int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2);
    unsigned int v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v26 = 1;
  }
  uint64_t v4 = (v4 + v26 + 1);
  if ((v3 & 0x800) == 0)
  {
LABEL_62:
    if ((v3 & 0x1000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_87;
  }
LABEL_81:
  int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
  if ((v27 & 0x80000000) != 0)
  {
    int v28 = 10;
  }
  else if (v27 >= 0x80)
  {
    int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2);
    unsigned int v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v28 = 1;
  }
  uint64_t v4 = (v4 + v28 + 1);
  if ((v3 & 0x1000) == 0)
  {
LABEL_63:
    if ((v3 & 0x2000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_93;
  }
LABEL_87:
  int v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
  if ((v29 & 0x80000000) != 0)
  {
    int v30 = 10;
  }
  else if (v29 >= 0x80)
  {
    int v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29, a2);
    unsigned int v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v30 = 1;
  }
  uint64_t v4 = (v4 + v30 + 1);
  if ((v3 & 0x2000) == 0)
  {
LABEL_64:
    if ((v3 & 0x4000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_99;
  }
LABEL_93:
  int v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
  if ((v31 & 0x80000000) != 0)
  {
    int v32 = 10;
  }
  else if (v31 >= 0x80)
  {
    int v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31, a2);
    unsigned int v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v32 = 1;
  }
  uint64_t v4 = (v4 + v32 + 1);
  if ((v3 & 0x4000) == 0)
  {
LABEL_65:
    if ((v3 & 0x8000) == 0) {
      goto LABEL_109;
    }
    goto LABEL_105;
  }
LABEL_99:
  int v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
  if ((v33 & 0x80000000) != 0)
  {
    int v34 = 10;
  }
  else if (v33 >= 0x80)
  {
    int v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33, a2);
    unsigned int v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v34 = 1;
  }
  uint64_t v4 = (v4 + v34 + 1);
  if ((v3 & 0x8000) != 0)
  {
LABEL_105:
    int v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 68);
    if (v35 >= 0x80)
    {
      int v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v35, a2);
      unsigned int v3 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      int v36 = 1;
    }
    uint64_t v4 = (v4 + v36 + 2);
  }
LABEL_109:
  if ((v3 & 0xFF0000) == 0) {
    goto LABEL_161;
  }
  if ((v3 & 0x10000) != 0)
  {
    int v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 72);
    if ((v37 & 0x80000000) != 0)
    {
      int v38 = 10;
    }
    else if (v37 >= 0x80)
    {
      int v38 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37, a2);
      unsigned int v3 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      int v38 = 1;
    }
    uint64_t v4 = (v4 + v38 + 2);
    if ((v3 & 0x20000) == 0)
    {
LABEL_112:
      if ((v3 & 0x40000) == 0) {
        goto LABEL_113;
      }
      goto LABEL_131;
    }
  }
  else if ((v3 & 0x20000) == 0)
  {
    goto LABEL_112;
  }
  int v39 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 76);
  if ((v39 & 0x80000000) != 0)
  {
    int v40 = 10;
  }
  else if (v39 >= 0x80)
  {
    int v40 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v39, a2);
    unsigned int v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v40 = 1;
  }
  uint64_t v4 = (v4 + v40 + 2);
  if ((v3 & 0x40000) == 0)
  {
LABEL_113:
    if ((v3 & 0x80000) == 0) {
      goto LABEL_114;
    }
    goto LABEL_137;
  }
LABEL_131:
  BOOL v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 80);
  if ((v41 & 0x80000000) != 0)
  {
    int v42 = 10;
  }
  else if (v41 >= 0x80)
  {
    int v42 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v41, a2);
    unsigned int v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v42 = 1;
  }
  uint64_t v4 = (v4 + v42 + 2);
  if ((v3 & 0x80000) == 0)
  {
LABEL_114:
    if ((v3 & 0x100000) == 0) {
      goto LABEL_115;
    }
    goto LABEL_143;
  }
LABEL_137:
  int v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 84);
  if ((v43 & 0x80000000) != 0)
  {
    int v44 = 10;
  }
  else if (v43 >= 0x80)
  {
    int v44 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v43, a2);
    unsigned int v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v44 = 1;
  }
  uint64_t v4 = (v4 + v44 + 2);
  if ((v3 & 0x100000) == 0)
  {
LABEL_115:
    if ((v3 & 0x200000) == 0) {
      goto LABEL_116;
    }
    goto LABEL_147;
  }
LABEL_143:
  unsigned int v45 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 88);
  if (v45 >= 0x80)
  {
    int v46 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v45, a2);
    unsigned int v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v46 = 1;
  }
  uint64_t v4 = (v4 + v46 + 2);
  if ((v3 & 0x200000) == 0)
  {
LABEL_116:
    if ((v3 & 0x400000) == 0) {
      goto LABEL_117;
    }
    goto LABEL_151;
  }
LABEL_147:
  unsigned int v47 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 92);
  if (v47 >= 0x80)
  {
    int v48 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v47, a2);
    unsigned int v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v48 = 1;
  }
  uint64_t v4 = (v4 + v48 + 2);
  if ((v3 & 0x400000) == 0)
  {
LABEL_117:
    if ((v3 & 0x800000) == 0) {
      goto LABEL_161;
    }
    goto LABEL_155;
  }
LABEL_151:
  int v49 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 96);
  if (v49 >= 0x80)
  {
    int v50 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v49, a2);
    unsigned int v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v50 = 1;
  }
  uint64_t v4 = (v4 + v50 + 2);
  if ((v3 & 0x800000) != 0)
  {
LABEL_155:
    unsigned int v51 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 100);
    if ((v51 & 0x80000000) != 0)
    {
      int v52 = 10;
    }
    else if (v51 >= 0x80)
    {
      int v52 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v51, a2);
      unsigned int v3 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      int v52 = 1;
    }
    uint64_t v4 = (v4 + v52 + 2);
  }
LABEL_161:
  if (!HIBYTE(v3)) {
    goto LABEL_205;
  }
  if ((v3 & 0x1000000) != 0)
  {
    unsigned int v53 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 104);
    if (v53 >= 0x80)
    {
      int v54 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v53, a2);
      unsigned int v3 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      int v54 = 1;
    }
    uint64_t v4 = (v4 + v54 + 2);
    if ((v3 & 0x2000000) == 0)
    {
LABEL_164:
      if ((v3 & 0x4000000) == 0) {
        goto LABEL_165;
      }
      goto LABEL_179;
    }
  }
  else if ((v3 & 0x2000000) == 0)
  {
    goto LABEL_164;
  }
  unsigned int v55 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 108);
  if (v55 >= 0x80)
  {
    int v56 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v55, a2);
    unsigned int v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v56 = 1;
  }
  uint64_t v4 = (v4 + v56 + 2);
  if ((v3 & 0x4000000) == 0)
  {
LABEL_165:
    if ((v3 & 0x8000000) == 0) {
      goto LABEL_166;
    }
    goto LABEL_183;
  }
LABEL_179:
  int v57 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 112);
  if (v57 >= 0x80)
  {
    int v58 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v57, a2);
    unsigned int v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v58 = 1;
  }
  uint64_t v4 = (v4 + v58 + 2);
  if ((v3 & 0x8000000) == 0)
  {
LABEL_166:
    if ((v3 & 0x10000000) == 0) {
      goto LABEL_167;
    }
    goto LABEL_189;
  }
LABEL_183:
  unsigned int v59 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 116);
  if ((v59 & 0x80000000) != 0)
  {
    int v60 = 12;
  }
  else if (v59 >= 0x80)
  {
    int v60 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v59, a2) + 2;
    unsigned int v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v60 = 3;
  }
  uint64_t v4 = (v60 + v4);
  if ((v3 & 0x10000000) == 0)
  {
LABEL_167:
    if ((v3 & 0x20000000) == 0) {
      goto LABEL_168;
    }
    goto LABEL_193;
  }
LABEL_189:
  unsigned int v61 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 120);
  if (v61 >= 0x80)
  {
    int v62 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v61, a2) + 2;
    unsigned int v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v62 = 3;
  }
  uint64_t v4 = (v62 + v4);
  if ((v3 & 0x20000000) == 0)
  {
LABEL_168:
    if ((v3 & 0x40000000) == 0) {
      goto LABEL_169;
    }
    goto LABEL_197;
  }
LABEL_193:
  unsigned int v63 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 124);
  if (v63 >= 0x80)
  {
    int v64 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v63, a2) + 2;
    unsigned int v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v64 = 3;
  }
  uint64_t v4 = (v64 + v4);
  if ((v3 & 0x40000000) == 0)
  {
LABEL_169:
    if ((v3 & 0x80000000) == 0) {
      goto LABEL_205;
    }
    goto LABEL_201;
  }
LABEL_197:
  unsigned int v65 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 128);
  if (v65 >= 0x80)
  {
    int v66 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v65, a2) + 2;
    unsigned int v3 = *(_DWORD *)(a1 + 148);
  }
  else
  {
    int v66 = 3;
  }
  uint64_t v4 = (v66 + v4);
  if ((v3 & 0x80000000) != 0)
  {
LABEL_201:
    unsigned int v67 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 132);
    if (v67 >= 0x80) {
      int v68 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v67, a2) + 2;
    }
    else {
      int v68 = 3;
    }
    uint64_t v4 = (v68 + v4);
  }
LABEL_205:
  LOBYTE(v69) = *(unsigned char *)(a1 + 152);
  if ((_BYTE)v69)
  {
    if (*(unsigned char *)(a1 + 152))
    {
      unsigned int v70 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 136);
      if (v70 >= 0x80)
      {
        int v71 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v70, a2) + 2;
        int v69 = *(_DWORD *)(a1 + 152);
      }
      else
      {
        int v71 = 3;
      }
      uint64_t v4 = (v71 + v4);
    }
    if ((v69 & 2) != 0)
    {
      unsigned int v72 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 140);
      if (v72 >= 0x80) {
        int v73 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v72, a2) + 2;
      }
      else {
        int v73 = 3;
      }
      uint64_t v4 = (v73 + v4);
    }
  }
  *(_DWORD *)(a1 + 144) = v4;
  return v4;
}

void sub_1008F98D4(_DWORD *a1, void *lpsrc)
{
  sub_1008F752C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008F995C()
{
  return 1;
}

void *sub_1008F9964@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.GpsEphemeris");
}

void sub_1008F9974(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2), *(_DWORD *)(a2 + 16) + a1[4]);
  if (*(int *)(a2 + 16) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 8) + 8 * v4);
      int v6 = a1[5];
      uint64_t v7 = (int)a1[4];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[6])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2), v6 + 1);
          int v6 = a1[5];
        }
        a1[5] = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)a1 + 1);
      a1[4] = v7 + 1;
      sub_1008F752C(*(_DWORD **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 16));
  }
  LOBYTE(v9) = *(unsigned char *)(a2 + 52);
  if ((_BYTE)v9)
  {
    if (*(unsigned char *)(a2 + 52))
    {
      int v10 = *(_DWORD *)(a2 + 32);
      a1[13] |= 1u;
      a1[8] = v10;
      int v9 = *(_DWORD *)(a2 + 52);
    }
    if ((v9 & 4) != 0)
    {
      unsigned int v11 = *(_DWORD *)(a2 + 36);
      if (v11 >= 6) {
        sub_101A73890();
      }
      a1[13] |= 4u;
      a1[9] = v11;
      int v9 = *(_DWORD *)(a2 + 52);
    }
    if ((v9 & 8) != 0)
    {
      unsigned int v12 = *(_DWORD *)(a2 + 40);
      if (v12 >= 7) {
        sub_101A73864();
      }
      a1[13] |= 8u;
      a1[10] = v12;
      int v9 = *(_DWORD *)(a2 + 52);
    }
    if ((v9 & 0x10) != 0)
    {
      int v13 = *(_DWORD *)(a2 + 44);
      a1[13] |= 0x10u;
      a1[11] = v13;
    }
  }
}

void sub_1008F9B84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008F9B9C(uint64_t *a1)
{
  *a1 = (uint64_t)off_1022D2568;
  sub_10016B2E8(a1 + 1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_1008F9BF8(uint64_t *a1)
{
  sub_1008F9B9C(a1);

  operator delete();
}

uint64_t sub_1008F9C30(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10248A690;
  if (!qword_10248A690)
  {
    sub_1008C4C78(0, a2, a3, a4);
    return qword_10248A690;
  }
  return result;
}

void sub_1008F9C60()
{
}

uint64_t sub_1008F9CB8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 52))
  {
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
  }
  uint64_t result = sub_10026DEDC(a1 + 8);
  *(_DWORD *)(a1 + 52) = 0;
  return result;
}

uint64_t sub_1008F9CF0(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = a1 + 8;
  int v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2);
  uint64_t v7 = a1 + 11;
LABEL_2:
  while (2)
  {
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        unsigned int v11 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v11 >= v12 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v13 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v5 = *v11;
          int v13 = v11 + 1;
          *((void *)this + 1) = v13;
        }
        a1[13] |= 1u;
        if ((unint64_t)v13 >= v12 || *v13 != 18) {
          continue;
        }
        goto LABEL_28;
      case 2u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_20;
        }
        while (2)
        {
          int v21 = a1[5];
          uint64_t v22 = (int)a1[4];
          if ((int)v22 >= v21)
          {
            if (v21 == a1[6])
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v21 + 1);
              int v21 = a1[5];
            }
            a1[5] = v21 + 1;
            operator new();
          }
          uint64_t v23 = *((void *)a1 + 1);
          a1[4] = v22 + 1;
          int v24 = *(unsigned int **)(v23 + 8 * v22);
          unsigned int v41 = 0;
          int v25 = (char *)*((void *)this + 1);
          if ((unint64_t)v25 >= *((void *)this + 2) || *v25 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v41))return 0; {
          }
            }
          else
          {
            unsigned int v41 = *v25;
            *((void *)this + 1) = v25 + 1;
          }
          int v26 = *((_DWORD *)this + 14);
          int v27 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v26 + 1;
          if (v26 < v27)
          {
            int v28 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v41);
            if (sub_1008F7B60(v24, this, v29))
            {
              if (*((unsigned char *)this + 36))
              {
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v28);
                int v30 = *((_DWORD *)this + 14);
                BOOL v31 = __OFSUB__(v30, 1);
                int v32 = v30 - 1;
                if (v32 < 0 == v31) {
                  *((_DWORD *)this + 14) = v32;
                }
                int v13 = (unsigned char *)*((void *)this + 1);
                unint64_t v15 = *((void *)this + 2);
                if ((unint64_t)v13 < v15)
                {
                  int v33 = *v13;
                  if (v33 == 18)
                  {
LABEL_28:
                    *((void *)this + 1) = v13 + 1;
                    continue;
                  }
                  if (v33 == 24)
                  {
                    int v14 = v13 + 1;
                    *((void *)this + 1) = v14;
LABEL_47:
                    unsigned int v40 = 0;
                    if ((unint64_t)v14 >= v15 || *v14 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
                      if (!result) {
                        return result;
                      }
                      unsigned int v34 = v40;
                    }
                    else
                    {
                      unsigned int v34 = *v14;
                      *((void *)this + 1) = v14 + 1;
                    }
                    if (v34 <= 5)
                    {
                      a1[13] |= 4u;
                      a1[9] = v34;
                    }
                    int v35 = (unsigned char *)*((void *)this + 1);
                    unint64_t v16 = *((void *)this + 2);
                    if ((unint64_t)v35 < v16 && *v35 == 32)
                    {
                      int v17 = v35 + 1;
                      *((void *)this + 1) = v17;
LABEL_57:
                      unsigned int v39 = 0;
                      if ((unint64_t)v17 >= v16 || *v17 < 0)
                      {
                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v39);
                        if (!result) {
                          return result;
                        }
                        unsigned int v36 = v39;
                      }
                      else
                      {
                        unsigned int v36 = *v17;
                        *((void *)this + 1) = v17 + 1;
                      }
                      if (v36 <= 6)
                      {
                        a1[13] |= 8u;
                        a1[10] = v36;
                      }
                      int v37 = (unsigned char *)*((void *)this + 1);
                      unint64_t v18 = *((void *)this + 2);
                      if ((unint64_t)v37 < v18 && *v37 == 40)
                      {
                        int v19 = v37 + 1;
                        *((void *)this + 1) = v19;
LABEL_67:
                        if ((unint64_t)v19 >= v18 || *v19 < 0)
                        {
                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
                          if (!result) {
                            return result;
                          }
                          int v38 = (unsigned __int8 *)*((void *)this + 1);
                          unint64_t v18 = *((void *)this + 2);
                        }
                        else
                        {
                          *uint64_t v7 = *v19;
                          int v38 = (unsigned __int8 *)(v19 + 1);
                          *((void *)this + 1) = v38;
                        }
                        a1[13] |= 0x10u;
                        if (v38 == (unsigned __int8 *)v18
                          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                        {
                          *((_DWORD *)this + 8) = 0;
                          uint64_t result = 1;
                          *((unsigned char *)this + 36) = 1;
                          return result;
                        }
                      }
                    }
                  }
                }
                goto LABEL_2;
              }
            }
          }
          return 0;
        }
      case 3u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_47;
      case 4u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_57;
      case 5u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_67;
      default:
        int v10 = TagFallback & 7;
LABEL_20:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1008FA16C(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 52)) {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 32), a2, a4);
  }
  if (*(int *)(v5 + 16) >= 1)
  {
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  int v7 = *(_DWORD *)(v5 + 52);
  if ((v7 & 4) == 0)
  {
    if ((v7 & 8) == 0) {
      goto LABEL_8;
    }
LABEL_11:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 40), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 52) & 0x10) == 0) {
      return result;
    }
    goto LABEL_12;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 36), (int)a2, a4);
  int v7 = *(_DWORD *)(v5 + 52);
  if ((v7 & 8) != 0) {
    goto LABEL_11;
  }
LABEL_8:
  if ((v7 & 0x10) == 0) {
    return result;
  }
LABEL_12:
  int v8 = *(_DWORD *)(v5 + 44);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v8, a2, a4);
}

uint64_t sub_1008FA250(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 52);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    goto LABEL_29;
  }
  if (*(unsigned char *)(a1 + 52))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if (v5 >= 0x80)
    {
      int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 52);
      if ((v3 & 4) == 0) {
        goto LABEL_16;
      }
    }
    else
    {
      int v4 = 2;
      if ((v3 & 4) == 0) {
        goto LABEL_16;
      }
    }
  }
  else
  {
    int v4 = 0;
    if ((*(unsigned char *)(a1 + 52) & 4) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
  if ((v6 & 0x80000000) != 0)
  {
    int v7 = 11;
  }
  else if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 52);
  }
  else
  {
    int v7 = 2;
  }
  v4 += v7;
LABEL_16:
  if ((v3 & 8) == 0)
  {
    if ((v3 & 0x10) == 0) {
      goto LABEL_29;
    }
    goto LABEL_25;
  }
  int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
  if ((v8 & 0x80000000) != 0)
  {
    int v9 = 11;
  }
  else if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 52);
  }
  else
  {
    int v9 = 2;
  }
  v4 += v9;
  if ((v3 & 0x10) != 0)
  {
LABEL_25:
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
    if (v10 >= 0x80) {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    }
    else {
      int v11 = 2;
    }
    v4 += v11;
  }
LABEL_29:
  int v12 = *(_DWORD *)(a1 + 16);
  uint64_t v13 = (v12 + v4);
  if (v12 >= 1)
  {
    uint64_t v14 = 0;
    do
    {
      unint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008F91E4(*(void *)(*(void *)(a1 + 8) + 8 * v14), a2);
      int v16 = (int)v15;
      if (v15 >= 0x80) {
        int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
      }
      else {
        int v17 = 1;
      }
      uint64_t v13 = (v16 + v13 + v17);
      ++v14;
    }
    while (v14 < *(int *)(a1 + 16));
  }
  *(_DWORD *)(a1 + 48) = v13;
  return v13;
}

void sub_1008FA3AC(_DWORD *a1, void *lpsrc)
{
  sub_1008F9974(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008FA434()
{
  return 1;
}

void *sub_1008FA43C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.GpsNavigationModel");
}

void sub_1008FA44C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if (*(unsigned char *)(a2 + 16))
  {
    char v4 = *(unsigned char *)(a2 + 8);
    *(_DWORD *)(a1 + 16) |= 1u;
    *(unsigned char *)(a1 + 8) = v4;
  }
}

void sub_1008FA4D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008FA4F0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D25E0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008FA510(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D25E0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008FA564()
{
}

uint64_t sub_1008FA5B4(uint64_t result)
{
  if (*(unsigned char *)(result + 16)) {
    *(unsigned char *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1008FA5C8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
      }
      if (TagFallback != 8) {
        break;
      }
      unsigned int v12 = 0;
      int v8 = (char *)*((void *)this + 1);
      unint64_t v7 = *((void *)this + 2);
      if ((unint64_t)v8 >= v7 || *v8 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v12);
        if (!result) {
          return result;
        }
        unsigned int v9 = v12;
        int v10 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v7 = *((void *)this + 2);
      }
      else
      {
        unsigned int v9 = *v8;
        int v10 = (unsigned __int8 *)(v8 + 1);
        *((void *)this + 1) = v10;
      }
      *(unsigned char *)(a1 + 8) = v9 != 0;
      *(_DWORD *)(a1 + 16) |= 1u;
      if (v10 == (unsigned __int8 *)v7 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_1008FA6E8(uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(result + 16)) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
  }
  return result;
}

uint64_t sub_1008FA704(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 16)) {
    uint64_t v1 = 2 * (*(_DWORD *)(a1 + 16) & 1u);
  }
  else {
    uint64_t v1 = 0;
  }
  *(_DWORD *)(a1 + 12) = v1;
  return v1;
}

void sub_1008FA720(uint64_t a1, void *lpsrc)
{
  sub_1008FA44C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008FA7A8()
{
  return 1;
}

void *sub_1008FA7B0@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.CplaneConfig");
}

void sub_1008FA7C0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      *(_DWORD *)(a1 + 28) |= 1u;
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_10248A6A0 + 8);
      }
      sub_1008C78D8(v5, v6);
      int v4 = *(_DWORD *)(a2 + 28);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 28) |= 2u;
      uint64_t v7 = *(void *)(a1 + 16);
      if (!v7) {
        operator new();
      }
      int v8 = *(unsigned char **)(a2 + 16);
      if (!v8) {
        int v8 = *(unsigned char **)(qword_10248A6A0 + 16);
      }
      sub_1008FB058(v7, v8);
    }
  }
}

void sub_1008FA918(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1008FA930(void *result)
{
  if ((void *)qword_10248A6A0 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t result = (void *)v1[2];
    if (result)
    {
      int v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_1008FA9D0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D2658;
  sub_1008FA930(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008FAA24(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D2658;
  sub_1008FA930(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

uint64_t sub_1008FAA8C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10248A6A0;
  if (!qword_10248A6A0)
  {
    sub_1008C4C78(0, a2, a3, a4);
    return qword_10248A6A0;
  }
  return result;
}

void sub_1008FAABC()
{
}

uint64_t sub_1008FAB08(uint64_t result)
{
  LOBYTE(v1) = *(unsigned char *)(result + 28);
  if ((_BYTE)v1)
  {
    if (*(unsigned char *)(result + 28))
    {
      uint64_t v2 = *(void *)(result + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 24))
        {
          *(_WORD *)(v2 + 16) = 0;
          *(void *)(v2 + 8) = 0;
        }
        *(_DWORD *)(v2 + 24) = 0;
        int v1 = *(_DWORD *)(result + 28);
      }
    }
    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(result + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 16)) {
          *(_DWORD *)(v3 + 8) = 0;
        }
        *(_DWORD *)(v3 + 16) = 0;
      }
    }
  }
  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_1008FAB58(uint64_t result)
{
  if (*(unsigned char *)(result + 16)) {
    *(_DWORD *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1008FAB6C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_17;
        }
        *(_DWORD *)(a1 + 28) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        unsigned int v27 = 0;
        unsigned int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27))return 0; {
        }
          }
        else
        {
          unsigned int v27 = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27);
        if (!sub_1008C7AA0(v8, this, v13) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        int v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 < *((void *)this + 2) && *v17 == 18)
        {
          *((void *)this + 1) = v17 + 1;
          goto LABEL_29;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v7 = TagFallback & 7;
      if (v7 != 2) {
        goto LABEL_17;
      }
LABEL_29:
      *(_DWORD *)(a1 + 28) |= 2u;
      uint64_t v18 = *(void *)(a1 + 16);
      if (!v18) {
        operator new();
      }
      unsigned int v28 = 0;
      int v19 = (char *)*((void *)this + 1);
      if ((unint64_t)v19 >= *((void *)this + 2) || *v19 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v28))return 0; {
      }
        }
      else
      {
        unsigned int v28 = *v19;
        *((void *)this + 1) = v19 + 1;
      }
      int v20 = *((_DWORD *)this + 14);
      int v21 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v20 + 1;
      if (v20 >= v21) {
        return 0;
      }
      int v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v28);
      if (!sub_1009024F0(v18, this, v23) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v22);
      int v24 = *((_DWORD *)this + 14);
      BOOL v15 = __OFSUB__(v24, 1);
      int v25 = v24 - 1;
      if (v25 < 0 == v15) {
        *((_DWORD *)this + 14) = v25;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v7 = TagFallback & 7;
LABEL_17:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1008FAE60(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(result + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248A6A0 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 28) & 2) != 0)
  {
LABEL_7:
    uint64_t v8 = *(void *)(v5 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_10248A6A0 + 16);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  }
  return result;
}

uint64_t sub_1008FAEF0(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 28))
  {
    uint64_t v2 = 0;
    goto LABEL_22;
  }
  if ((*(unsigned char *)(a1 + 28) & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((*(unsigned char *)(a1 + 28) & 2) == 0) {
      goto LABEL_22;
    }
    goto LABEL_16;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (!v3) {
    uint64_t v3 = *(void *)(qword_10248A6A0 + 8);
  }
  int v4 = *(_DWORD *)(v3 + 24);
  int v5 = 2 * (v4 & 1);
  if ((v4 & 2) != 0) {
    v5 += 2;
  }
  if ((v4 & 4) != 0) {
    v5 |= 9u;
  }
  if (*(_DWORD *)(v3 + 24)) {
    int v6 = v5;
  }
  else {
    int v6 = 0;
  }
  *(_DWORD *)(v3 + 20) = v6;
  uint64_t v2 = (v6 + 2);
  if ((*(_DWORD *)(a1 + 28) & 2) != 0)
  {
LABEL_16:
    uint64_t v7 = *(void *)(a1 + 16);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_10248A6A0 + 16);
    }
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100902880(v7);
    int v10 = (int)v8;
    if (v8 >= 0x80) {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, v9);
    }
    else {
      int v11 = 1;
    }
    uint64_t v2 = (v2 + v10 + v11 + 1);
  }
LABEL_22:
  *(_DWORD *)(a1 + 24) = v2;
  return v2;
}

void sub_1008FAFD0(uint64_t a1, void *lpsrc)
{
  sub_1008FA7C0(a1, (uint64_t)lpsrc);
}

void sub_1008FB058(uint64_t a1, unsigned char *a2)
{
  if (a2 == (unsigned char *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = a2[16];
  if ((_BYTE)v4)
  {
    if (a2[16])
    {
      char v6 = a2[8];
      *(_DWORD *)(a1 + 16) |= 1u;
      *(unsigned char *)(a1 + 8) = v6;
      int v4 = *((_DWORD *)a2 + 4);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((a2[16] & 2) == 0)
    {
      goto LABEL_6;
    }
    char v7 = a2[9];
    *(_DWORD *)(a1 + 16) |= 2u;
    *(unsigned char *)(a1 + 9) = v7;
    int v4 = *((_DWORD *)a2 + 4);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }
LABEL_12:
    char v8 = a2[10];
    *(_DWORD *)(a1 + 16) |= 4u;
    *(unsigned char *)(a1 + 10) = v8;
    if ((*((_DWORD *)a2 + 4) & 8) == 0) {
      return;
    }
LABEL_8:
    char v5 = a2[11];
    *(_DWORD *)(a1 + 16) |= 8u;
    *(unsigned char *)(a1 + 11) = v5;
  }
}

void sub_1008FB14C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1008FB164()
{
  return 1;
}

void *sub_1008FB16C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.CplaneContext");
}

void sub_1008FB17C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 40);
  if (!(_BYTE)v4) {
    return;
  }
  if ((*(unsigned char *)(a2 + 40) & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 40) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_10:
    char v6 = *(const std::string **)(a2 + 8);
    *(_DWORD *)(a1 + 40) |= 2u;
    char v7 = *(std::string **)(a1 + 8);
    if (v7 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v7, v6);
    int v4 = *(_DWORD *)(a2 + 40);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_18;
    }
    goto LABEL_13;
  }
  char v5 = *(unsigned char *)(a2 + 32);
  *(_DWORD *)(a1 + 40) |= 1u;
  *(unsigned char *)(a1 + 32) = v5;
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_6:
  if ((v4 & 4) == 0) {
    goto LABEL_7;
  }
LABEL_13:
  *(_DWORD *)(a1 + 40) |= 4u;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    operator new();
  }
  uint64_t v9 = *(void *)(a2 + 16);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_10248A6A8 + 16);
  }
  sub_1008FA44C(v8, v9);
  if ((*(_DWORD *)(a2 + 40) & 8) != 0)
  {
LABEL_18:
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v10 = *(void *)(a1 + 24);
    if (!v10) {
      operator new();
    }
    uint64_t v11 = *(void *)(a2 + 24);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_10248A6A8 + 24);
    }
    sub_1008C914C(v10, v11);
  }
}

void sub_1008FB368(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1008FB380(void *result)
{
  int v1 = result;
  uint64_t v2 = result[1];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  if ((void *)qword_10248A6A8 != result)
  {
    uint64_t v4 = result[2];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t result = (void *)v1[3];
    if (result)
    {
      char v5 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v5();
    }
  }
  return result;
}

void sub_1008FB460(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D26D0;
  sub_1008FB380(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008FB4B4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D26D0;
  sub_1008FB380(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

uint64_t sub_1008FB51C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10248A6A8;
  if (!qword_10248A6A8)
  {
    sub_1008C4C78(0, a2, a3, a4);
    return qword_10248A6A8;
  }
  return result;
}

void sub_1008FB54C()
{
}

uint64_t sub_1008FB5A8(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(unsigned char *)(result + 40);
  if (v2)
  {
    *(unsigned char *)(result + 32) = 0;
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = *(void *)(result + 8);
      if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    int v4 = *(_DWORD *)(result + 40);
    if ((v4 & 4) != 0)
    {
      uint64_t v5 = *(void *)(result + 16);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 16)) {
          *(unsigned char *)(v5 + 8) = 0;
        }
        *(_DWORD *)(v5 + 16) = 0;
        int v4 = *(_DWORD *)(result + 40);
      }
    }
    if ((v4 & 8) != 0)
    {
      uint64_t result = *(void *)(result + 24);
      if (result) {
        uint64_t result = sub_1008C93EC(result);
      }
    }
  }
  *(_DWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t sub_1008FB644(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 < *((void *)this + 2) && (*v5 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_6;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        unsigned int v33 = 0;
        uint64_t v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v33);
          if (!result) {
            return result;
          }
          unsigned int v10 = v33;
          uint64_t v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v10 = *v9;
          uint64_t v11 = v9 + 1;
          *((void *)this + 1) = v11;
        }
        *(unsigned char *)(a1 + 32) = v10 != 0;
        int v12 = *(_DWORD *)(a1 + 40) | 1;
        *(_DWORD *)(a1 + 40) = v12;
        if ((unint64_t)v11 < v8 && *v11 == 18)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_25;
        }
        continue;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_17;
        }
        int v12 = *(_DWORD *)(a1 + 40);
LABEL_25:
        *(_DWORD *)(a1 + 40) = v12 | 2;
        if (*(_UNKNOWN **)(a1 + 8) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 != 26) {
          continue;
        }
        *((void *)this + 1) = v14 + 1;
LABEL_31:
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v15 = *(void *)(a1 + 16);
        if (!v15) {
          operator new();
        }
        unsigned int v34 = 0;
        int v16 = (char *)*((void *)this + 1);
        if ((unint64_t)v16 >= *((void *)this + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v34))return 0; {
        }
          }
        else
        {
          unsigned int v34 = *v16;
          *((void *)this + 1) = v16 + 1;
        }
        int v17 = *((_DWORD *)this + 14);
        int v18 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v17 + 1;
        if (v17 >= v18) {
          return 0;
        }
        int v19 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34);
        if (!sub_1008FA5C8(v15, this, v20) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v19);
        int v21 = *((_DWORD *)this + 14);
        BOOL v22 = __OFSUB__(v21, 1);
        int v23 = v21 - 1;
        if (v23 < 0 == v22) {
          *((_DWORD *)this + 14) = v23;
        }
        int v24 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 != 34) {
          continue;
        }
        *((void *)this + 1) = v24 + 1;
LABEL_45:
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v25 = *(void *)(a1 + 24);
        if (!v25) {
          operator new();
        }
        unsigned int v35 = 0;
        int v26 = (char *)*((void *)this + 1);
        if ((unint64_t)v26 >= *((void *)this + 2) || *v26 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v35))return 0; {
        }
          }
        else
        {
          unsigned int v35 = *v26;
          *((void *)this + 1) = v26 + 1;
        }
        int v27 = *((_DWORD *)this + 14);
        int v28 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v27 + 1;
        if (v27 >= v28) {
          return 0;
        }
        int v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v35);
        if (!sub_1008C943C(v25, this, v30) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
        int v31 = *((_DWORD *)this + 14);
        BOOL v22 = __OFSUB__(v31, 1);
        int v32 = v31 - 1;
        if (v32 < 0 == v22) {
          *((_DWORD *)this + 14) = v32;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_31;
        }
        goto LABEL_17;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_17;
        }
        goto LABEL_45;
      default:
        int v7 = TagFallback & 7;
LABEL_17:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1008FBA70(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 40);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 32), (BOOL)a2, a4);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_8:
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248A6A8 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 40) & 8) != 0)
  {
LABEL_11:
    uint64_t v8 = *(void *)(v5 + 24);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_10248A6A8 + 24);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v8, a2, a4);
  }
  return result;
}

uint64_t sub_1008FBB38(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_28;
  }
  uint64_t v4 = 2 * (v3 & 1u);
  if ((v3 & 2) != 0)
  {
    uint64_t v5 = *(void *)(a1 + 8);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    char v7 = v6;
    uint64_t v8 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
    }
    else {
      unint64_t v9 = v8;
    }
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9, a2);
      int v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v8 = *(void *)(v5 + 8);
      int v3 = *(_DWORD *)(a1 + 40);
      char v7 = *(unsigned char *)(v5 + 23);
    }
    else
    {
      int v10 = 1;
    }
    if (v7 < 0) {
      int v6 = v8;
    }
    uint64_t v4 = (v4 | 1) + v10 + v6;
    if ((v3 & 4) == 0)
    {
LABEL_4:
      if ((v3 & 8) == 0) {
        goto LABEL_28;
      }
      goto LABEL_22;
    }
  }
  else if ((v3 & 4) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v11 = *(void *)(a1 + 16);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_10248A6A8 + 16);
  }
  if (*(_DWORD *)(v11 + 16)) {
    int v12 = 2 * (*(_DWORD *)(v11 + 16) & 1);
  }
  else {
    int v12 = 0;
  }
  *(_DWORD *)(v11 + 12) = v12;
  uint64_t v4 = (v4 + v12 + 2);
  if ((*(_DWORD *)(a1 + 40) & 8) != 0)
  {
LABEL_22:
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13) {
      uint64_t v13 = *(void *)(qword_10248A6A8 + 24);
    }
    int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008C990C(v13, a2);
    int v16 = (int)v14;
    if (v14 >= 0x80) {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, v15);
    }
    else {
      int v17 = 1;
    }
    uint64_t v4 = (v4 + v16 + v17 + 1);
  }
LABEL_28:
  *(_DWORD *)(a1 + 36) = v4;
  return v4;
}

void sub_1008FBC60(uint64_t a1, void *lpsrc)
{
  sub_1008FB17C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008FBCE8()
{
  return 1;
}

void *sub_1008FBCF0@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.EmergConfig");
}

void sub_1008FBD00(_DWORD *a1, _DWORD *a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  int v4 = a2[16];
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    int v6 = a2[2];
    a1[16] |= 1u;
    a1[2] = v6;
    int v4 = a2[16];
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_22;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v7 = a2[3];
  a1[16] |= 2u;
  a1[3] = v7;
  int v4 = a2[16];
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v8 = a2[4];
  a1[16] |= 4u;
  a1[4] = v8;
  int v4 = a2[16];
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }
LABEL_23:
  int v9 = a2[5];
  a1[16] |= 8u;
  a1[5] = v9;
  int v4 = a2[16];
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_25:
    int v11 = a2[7];
    a1[16] |= 0x20u;
    a1[7] = v11;
    int v4 = a2[16];
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_24:
  int v10 = a2[6];
  a1[16] |= 0x10u;
  a1[6] = v10;
  int v4 = a2[16];
  if ((v4 & 0x20) != 0) {
    goto LABEL_25;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_26:
  int v12 = a2[8];
  a1[16] |= 0x40u;
  a1[8] = v12;
  int v4 = a2[16];
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = a2[9];
    a1[16] |= 0x80u;
    a1[9] = v5;
    int v4 = a2[16];
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    int v13 = a2[10];
    a1[16] |= 0x100u;
    a1[10] = v13;
    int v4 = a2[16];
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_30;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  int v14 = a2[11];
  a1[16] |= 0x200u;
  a1[11] = v14;
  int v4 = a2[16];
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      goto LABEL_18;
    }
LABEL_31:
    int v16 = a2[13];
    a1[16] |= 0x800u;
    a1[13] = v16;
    if ((a2[16] & 0x1000) == 0) {
      return;
    }
    goto LABEL_32;
  }
LABEL_30:
  int v15 = a2[12];
  a1[16] |= 0x400u;
  a1[12] = v15;
  int v4 = a2[16];
  if ((v4 & 0x800) != 0) {
    goto LABEL_31;
  }
LABEL_18:
  if ((v4 & 0x1000) == 0) {
    return;
  }
LABEL_32:
  unsigned int v17 = a2[14];
  if (v17 >= 7) {
    sub_101A738BC();
  }
  a1[16] |= 0x1000u;
  a1[14] = v17;
}

void sub_1008FBF2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008FBF44(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D2748;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008FBF64(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D2748;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008FBFB8()
{
}

uint64_t sub_1008FC014(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 64);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(result + 40) = 0;
    *(void *)(result + 48) = 0;
    *(_DWORD *)(result + 56) = 0;
  }
  *(_DWORD *)(result + 64) = 0;
  return result;
}

uint64_t sub_1008FC044(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v44 = a1 + 2;
  unsigned int v45 = a1 + 3;
  int v46 = a1 + 4;
  unsigned int v47 = a1 + 5;
  int v5 = a1 + 6;
  int v6 = a1 + 7;
  int v7 = a1 + 8;
  int v8 = a1 + 9;
  int v9 = a1 + 10;
  int v10 = a1 + 11;
  int v11 = a1 + 12;
  int v12 = a1 + 13;
  while (2)
  {
    int v13 = (char *)*((void *)this + 1);
    if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v13;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v13 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        unsigned int v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        if ((unint64_t)v17 < v16 && (*v17 & 0x80000000) == 0)
        {
          *int v44 = *v17;
          int v18 = v17 + 1;
          *((void *)this + 1) = v18;
LABEL_42:
          a1[16] |= 1u;
          if ((unint64_t)v18 < v16 && *v18 == 16)
          {
            int v19 = v18 + 1;
            *((void *)this + 1) = v19;
            goto LABEL_45;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v44);
        if (result)
        {
          int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
          goto LABEL_42;
        }
        break;
      case 2u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
LABEL_45:
        if ((unint64_t)v19 >= v16 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v45);
          if (!result) {
            return result;
          }
          int v31 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v45 = *v19;
          int v31 = v19 + 1;
          *((void *)this + 1) = v31;
        }
        a1[16] |= 2u;
        if ((unint64_t)v31 >= v16 || *v31 != 24) {
          continue;
        }
        unsigned int v20 = v31 + 1;
        *((void *)this + 1) = v20;
LABEL_53:
        if ((unint64_t)v20 >= v16 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v46);
          if (!result) {
            return result;
          }
          int v32 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v46 = *v20;
          int v32 = v20 + 1;
          *((void *)this + 1) = v32;
        }
        a1[16] |= 4u;
        if ((unint64_t)v32 >= v16 || *v32 != 32) {
          continue;
        }
        int v21 = v32 + 1;
        *((void *)this + 1) = v21;
LABEL_61:
        if ((unint64_t)v21 >= v16 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v47);
          if (!result) {
            return result;
          }
          unsigned int v33 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *unsigned int v47 = *v21;
          unsigned int v33 = v21 + 1;
          *((void *)this + 1) = v33;
        }
        a1[16] |= 8u;
        if ((unint64_t)v33 >= v16 || *v33 != 40) {
          continue;
        }
        BOOL v22 = v33 + 1;
        *((void *)this + 1) = v22;
LABEL_69:
        if ((unint64_t)v22 >= v16 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          unsigned int v34 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v5 = *v22;
          unsigned int v34 = v22 + 1;
          *((void *)this + 1) = v34;
        }
        a1[16] |= 0x10u;
        if ((unint64_t)v34 >= v16 || *v34 != 48) {
          continue;
        }
        int v23 = v34 + 1;
        *((void *)this + 1) = v23;
LABEL_77:
        if ((unint64_t)v23 >= v16 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          unsigned int v35 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v23;
          unsigned int v35 = v23 + 1;
          *((void *)this + 1) = v35;
        }
        a1[16] |= 0x20u;
        if ((unint64_t)v35 >= v16 || *v35 != 56) {
          continue;
        }
        int v24 = v35 + 1;
        *((void *)this + 1) = v24;
LABEL_85:
        if ((unint64_t)v24 >= v16 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          unsigned int v36 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v7 = *v24;
          unsigned int v36 = v24 + 1;
          *((void *)this + 1) = v36;
        }
        a1[16] |= 0x40u;
        if ((unint64_t)v36 >= v16 || *v36 != 64) {
          continue;
        }
        uint64_t v25 = v36 + 1;
        *((void *)this + 1) = v25;
LABEL_93:
        if ((unint64_t)v25 >= v16 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v37 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v25;
          int v37 = v25 + 1;
          *((void *)this + 1) = v37;
        }
        a1[16] |= 0x80u;
        if ((unint64_t)v37 >= v16 || *v37 != 72) {
          continue;
        }
        int v26 = v37 + 1;
        *((void *)this + 1) = v26;
LABEL_101:
        if ((unint64_t)v26 >= v16 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          int v38 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v9 = *v26;
          int v38 = v26 + 1;
          *((void *)this + 1) = v38;
        }
        a1[16] |= 0x100u;
        if ((unint64_t)v38 >= v16 || *v38 != 80) {
          continue;
        }
        int v27 = v38 + 1;
        *((void *)this + 1) = v27;
LABEL_109:
        if ((unint64_t)v27 >= v16 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!result) {
            return result;
          }
          unsigned int v39 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v10 = *v27;
          unsigned int v39 = v27 + 1;
          *((void *)this + 1) = v39;
        }
        a1[16] |= 0x200u;
        if ((unint64_t)v39 >= v16 || *v39 != 88) {
          continue;
        }
        int v28 = v39 + 1;
        *((void *)this + 1) = v28;
LABEL_117:
        if ((unint64_t)v28 >= v16 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
          if (!result) {
            return result;
          }
          unsigned int v40 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v11 = *v28;
          unsigned int v40 = v28 + 1;
          *((void *)this + 1) = v40;
        }
        a1[16] |= 0x400u;
        if ((unint64_t)v40 >= v16 || *v40 != 96) {
          continue;
        }
        int v29 = v40 + 1;
        *((void *)this + 1) = v29;
LABEL_125:
        if ((unint64_t)v29 >= v16 || *v29 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v12);
          if (!result) {
            return result;
          }
          unsigned int v41 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *int v12 = *v29;
          unsigned int v41 = v29 + 1;
          *((void *)this + 1) = v41;
        }
        a1[16] |= 0x800u;
        if ((unint64_t)v41 >= v16 || *v41 != 104) {
          continue;
        }
        unsigned int v30 = v41 + 1;
        *((void *)this + 1) = v30;
LABEL_133:
        unsigned int v48 = 0;
        if ((unint64_t)v30 >= v16 || *v30 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v48);
          if (!result) {
            return result;
          }
          unsigned int v42 = v48;
        }
        else
        {
          unsigned int v42 = *v30;
          *((void *)this + 1) = v30 + 1;
        }
        if (v42 <= 6)
        {
          a1[16] |= 0x1000u;
          a1[14] = v42;
        }
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        unsigned int v20 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_53;
      case 4u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v21 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_61;
      case 5u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        BOOL v22 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_69;
      case 6u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v23 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_77;
      case 7u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v24 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_85;
      case 8u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        uint64_t v25 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_93;
      case 9u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v26 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_101;
      case 0xAu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v27 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_109;
      case 0xBu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v28 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_117;
      case 0xCu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v29 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_125;
      case 0xDu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        unsigned int v30 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_133;
      default:
        int v15 = TagFallback & 7;
LABEL_36:
        if (v15 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

int *sub_1008FC778(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  int v6 = result[16];
  if (v6)
  {
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
    int v6 = v5[16];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
  int v6 = v5[16];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], a2, a4);
  int v6 = v5[16];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], a2, a4);
  int v6 = v5[16];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], a2, a4);
  int v6 = v5[16];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], a2, a4);
  int v6 = v5[16];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], a2, a4);
  int v6 = v5[16];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[9], a2, a4);
  int v6 = v5[16];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[10], a2, a4);
  int v6 = v5[16];
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v5[11], a2, a4);
  int v6 = v5[16];
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
LABEL_26:
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v5[13], a2, a4);
    if ((v5[16] & 0x1000) == 0) {
      return result;
    }
    goto LABEL_27;
  }
LABEL_25:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v5[12], a2, a4);
  int v6 = v5[16];
  if ((v6 & 0x800) != 0) {
    goto LABEL_26;
  }
LABEL_13:
  if ((v6 & 0x1000) == 0) {
    return result;
  }
LABEL_27:
  int v7 = v5[14];

  return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v7, a2, a4);
}

uint64_t sub_1008FC91C(unsigned int *a1, unsigned int a2)
{
  unsigned int v3 = a1[16];
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_45;
  }
  if ((v3 & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_10;
  }
  int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[2];
  if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    unsigned int v3 = a1[16];
  }
  else
  {
    int v6 = 1;
  }
  uint64_t v4 = (v6 + 1);
  if ((v3 & 2) != 0)
  {
LABEL_10:
    int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[3];
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      unsigned int v3 = a1[16];
    }
    else
    {
      int v8 = 1;
    }
    uint64_t v4 = (v4 + v8 + 1);
  }
LABEL_14:
  if ((v3 & 4) != 0)
  {
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[4];
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
      unsigned int v3 = a1[16];
    }
    else
    {
      int v10 = 1;
    }
    uint64_t v4 = (v4 + v10 + 1);
    if ((v3 & 8) == 0)
    {
LABEL_16:
      if ((v3 & 0x10) == 0) {
        goto LABEL_17;
      }
      goto LABEL_29;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[5];
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    unsigned int v3 = a1[16];
  }
  else
  {
    int v12 = 1;
  }
  uint64_t v4 = (v4 + v12 + 1);
  if ((v3 & 0x10) == 0)
  {
LABEL_17:
    if ((v3 & 0x20) == 0) {
      goto LABEL_18;
    }
    goto LABEL_33;
  }
LABEL_29:
  int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[6];
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
    unsigned int v3 = a1[16];
  }
  else
  {
    int v14 = 1;
  }
  uint64_t v4 = (v4 + v14 + 1);
  if ((v3 & 0x20) == 0)
  {
LABEL_18:
    if ((v3 & 0x40) == 0) {
      goto LABEL_19;
    }
    goto LABEL_37;
  }
LABEL_33:
  int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[7];
  if (v15 >= 0x80)
  {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
    unsigned int v3 = a1[16];
  }
  else
  {
    int v16 = 1;
  }
  uint64_t v4 = (v4 + v16 + 1);
  if ((v3 & 0x40) == 0)
  {
LABEL_19:
    if ((v3 & 0x80) == 0) {
      goto LABEL_45;
    }
    goto LABEL_41;
  }
LABEL_37:
  unsigned int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[8];
  if (v17 >= 0x80)
  {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
    unsigned int v3 = a1[16];
  }
  else
  {
    int v18 = 2;
  }
  uint64_t v4 = (v18 + v4);
  if ((v3 & 0x80) != 0)
  {
LABEL_41:
    int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[9];
    if (v19 >= 0x80)
    {
      int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
      unsigned int v3 = a1[16];
    }
    else
    {
      int v20 = 2;
    }
    uint64_t v4 = (v20 + v4);
  }
LABEL_45:
  if ((v3 & 0xFF00) == 0) {
    goto LABEL_74;
  }
  if ((v3 & 0x100) != 0)
  {
    int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[10];
    if (v21 >= 0x80)
    {
      int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2) + 1;
      unsigned int v3 = a1[16];
    }
    else
    {
      int v22 = 2;
    }
    uint64_t v4 = (v22 + v4);
    if ((v3 & 0x200) == 0)
    {
LABEL_48:
      if ((v3 & 0x400) == 0) {
        goto LABEL_49;
      }
      goto LABEL_60;
    }
  }
  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_48;
  }
  int v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[11];
  if (v23 >= 0x80)
  {
    int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23, a2) + 1;
    unsigned int v3 = a1[16];
  }
  else
  {
    int v24 = 2;
  }
  uint64_t v4 = (v24 + v4);
  if ((v3 & 0x400) == 0)
  {
LABEL_49:
    if ((v3 & 0x800) == 0) {
      goto LABEL_50;
    }
    goto LABEL_64;
  }
LABEL_60:
  uint64_t v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[12];
  if (v25 >= 0x80)
  {
    int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2) + 1;
    unsigned int v3 = a1[16];
  }
  else
  {
    int v26 = 2;
  }
  uint64_t v4 = (v26 + v4);
  if ((v3 & 0x800) == 0)
  {
LABEL_50:
    if ((v3 & 0x1000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_68;
  }
LABEL_64:
  int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[13];
  if (v27 >= 0x80)
  {
    int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2) + 1;
    unsigned int v3 = a1[16];
  }
  else
  {
    int v28 = 2;
  }
  uint64_t v4 = (v28 + v4);
  if ((v3 & 0x1000) != 0)
  {
LABEL_68:
    int v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[14];
    if ((v29 & 0x80000000) != 0)
    {
      int v30 = 11;
    }
    else if (v29 >= 0x80)
    {
      int v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29, a2) + 1;
    }
    else
    {
      int v30 = 2;
    }
    uint64_t v4 = (v30 + v4);
  }
LABEL_74:
  a1[15] = v4;
  return v4;
}

void sub_1008FCBA4(_DWORD *a1, _DWORD *lpsrc)
{
  sub_1008FBD00(a1, lpsrc);
}

uint64_t sub_1008FCC2C()
{
  return 1;
}

void *sub_1008FCC34@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.GpsAcqElement");
}

void sub_1008FCC44(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), *(_DWORD *)(a2 + 32) + *(_DWORD *)(a1 + 32));
  if (*(int *)(a2 + 32) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      int v5 = *(_DWORD **)(*(void *)(a2 + 24) + 8 * v4);
      int v6 = *(_DWORD *)(a1 + 36);
      uint64_t v7 = *(int *)(a1 + 32);
      if ((int)v7 >= v6)
      {
        if (v6 == *(_DWORD *)(a1 + 40))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), v6 + 1);
          int v6 = *(_DWORD *)(a1 + 36);
        }
        *(_DWORD *)(a1 + 36) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *(void *)(a1 + 24);
      *(_DWORD *)(a1 + 32) = v7 + 1;
      sub_1008FBD00(*(_DWORD **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 32));
  }
  LOBYTE(v9) = *(unsigned char *)(a2 + 68);
  if (!(_BYTE)v9) {
    return;
  }
  if (*(unsigned char *)(a2 + 68))
  {
    int v11 = *(_DWORD *)(a2 + 8);
    *(_DWORD *)(a1 + 68) |= 1u;
    *(_DWORD *)(a1 + 8) = v11;
    int v9 = *(_DWORD *)(a2 + 68);
    if ((v9 & 2) == 0)
    {
LABEL_14:
      if ((v9 & 4) == 0) {
        goto LABEL_15;
      }
      goto LABEL_23;
    }
  }
  else if ((*(unsigned char *)(a2 + 68) & 2) == 0)
  {
    goto LABEL_14;
  }
  int v12 = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 68) |= 2u;
  *(_DWORD *)(a1 + 12) = v12;
  int v9 = *(_DWORD *)(a2 + 68);
  if ((v9 & 4) == 0)
  {
LABEL_15:
    if ((v9 & 0x10) == 0) {
      goto LABEL_16;
    }
    goto LABEL_28;
  }
LABEL_23:
  *(_DWORD *)(a1 + 68) |= 4u;
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13) {
    operator new();
  }
  uint64_t v14 = *(void *)(a2 + 16);
  if (!v14) {
    uint64_t v14 = *(void *)(qword_10248A6B8 + 16);
  }
  sub_1008F47D4(v13, v14);
  int v9 = *(_DWORD *)(a2 + 68);
  if ((v9 & 0x10) == 0)
  {
LABEL_16:
    if ((v9 & 0x20) == 0) {
      goto LABEL_17;
    }
LABEL_29:
    unsigned int v16 = *(_DWORD *)(a2 + 52);
    if (v16 >= 6) {
      sub_101A73914();
    }
    *(_DWORD *)(a1 + 68) |= 0x20u;
    *(_DWORD *)(a1 + 52) = v16;
    int v9 = *(_DWORD *)(a2 + 68);
    if ((v9 & 0x40) == 0)
    {
LABEL_18:
      if ((v9 & 0x80) == 0) {
        return;
      }
      goto LABEL_19;
    }
    goto LABEL_31;
  }
LABEL_28:
  int v15 = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 68) |= 0x10u;
  *(_DWORD *)(a1 + 48) = v15;
  int v9 = *(_DWORD *)(a2 + 68);
  if ((v9 & 0x20) != 0) {
    goto LABEL_29;
  }
LABEL_17:
  if ((v9 & 0x40) == 0) {
    goto LABEL_18;
  }
LABEL_31:
  unsigned int v17 = *(_DWORD *)(a2 + 56);
  if (v17 >= 7) {
    sub_101A738E8();
  }
  *(_DWORD *)(a1 + 68) |= 0x40u;
  *(_DWORD *)(a1 + 56) = v17;
  if ((*(_DWORD *)(a2 + 68) & 0x80) != 0)
  {
LABEL_19:
    int v10 = *(_DWORD *)(a2 + 60);
    *(_DWORD *)(a1 + 68) |= 0x80u;
    *(_DWORD *)(a1 + 60) = v10;
  }
}

void sub_1008FCF04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008FCF1C(uint64_t *a1)
{
  *a1 = (uint64_t)off_1022D27C0;
  if ((uint64_t *)qword_10248A6B8 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  sub_10016B2E8(a1 + 3);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_1008FCFB8(uint64_t *a1)
{
  sub_1008FCF1C(a1);

  operator delete();
}

uint64_t sub_1008FCFF0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10248A6B8;
  if (!qword_10248A6B8)
  {
    sub_1008C4C78(0, a2, a3, a4);
    return qword_10248A6B8;
  }
  return result;
}

void sub_1008FD020()
{
}

uint64_t sub_1008FD080(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 68);
  if (v2)
  {
    *(void *)(a1 + 8) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t v3 = *(void *)(a1 + 16);
      if (v3) {
        sub_1008F4A10(v3);
      }
    }
    *(void *)(a1 + 48) = 0;
    *(void *)(a1 + 56) = 0;
  }
  uint64_t result = sub_10026DEDC(a1 + 24);
  *(_DWORD *)(a1 + 68) = 0;
  return result;
}

uint64_t sub_1008FD0CC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 8);
  int v6 = (unsigned int *)(a1 + 12);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24);
  uint64_t v8 = (unsigned int *)(a1 + 48);
  int v9 = (unsigned int *)(a1 + 60);
LABEL_2:
  while (2)
  {
    int v10 = (char *)*((void *)this + 1);
    if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v10;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *int v5 = *v14;
          int v15 = v14 + 1;
          *((void *)this + 1) = v15;
        }
        *(_DWORD *)(a1 + 68) |= 1u;
        if ((unint64_t)v15 < v13 && *v15 == 16)
        {
          unsigned int v16 = v15 + 1;
          *((void *)this + 1) = v16;
          goto LABEL_35;
        }
        continue;
      case 2u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        unsigned int v16 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
LABEL_35:
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v26 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v16;
          int v26 = v16 + 1;
          *((void *)this + 1) = v26;
        }
        int v17 = *(_DWORD *)(a1 + 68) | 2;
        *(_DWORD *)(a1 + 68) = v17;
        if ((unint64_t)v26 >= v13 || *v26 != 26) {
          continue;
        }
        *((void *)this + 1) = v26 + 1;
LABEL_43:
        *(_DWORD *)(a1 + 68) = v17 | 4;
        uint64_t v27 = *(void *)(a1 + 16);
        if (!v27) {
          operator new();
        }
        unsigned int v55 = 0;
        int v28 = (char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v55))return 0; {
        }
          }
        else
        {
          unsigned int v55 = *v28;
          *((void *)this + 1) = v28 + 1;
        }
        int v29 = *((_DWORD *)this + 14);
        int v30 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v29 + 1;
        if (v29 < v30)
        {
          int v31 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v55);
          if (sub_1008F4A50(v27, this, v32))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v31);
              int v33 = *((_DWORD *)this + 14);
              BOOL v34 = __OFSUB__(v33, 1);
              int v35 = v33 - 1;
              if (v35 < 0 == v34) {
                *((_DWORD *)this + 14) = v35;
              }
              unsigned int v36 = (unsigned char *)*((void *)this + 1);
              if ((unint64_t)v36 < *((void *)this + 2) && *v36 == 34)
              {
                do
                {
                  *((void *)this + 1) = v36 + 1;
LABEL_57:
                  int v37 = *(_DWORD *)(a1 + 36);
                  uint64_t v38 = *(int *)(a1 + 32);
                  if ((int)v38 >= v37)
                  {
                    if (v37 == *(_DWORD *)(a1 + 40))
                    {
                      wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7, v37 + 1);
                      int v37 = *(_DWORD *)(a1 + 36);
                    }
                    *(_DWORD *)(a1 + 36) = v37 + 1;
                    operator new();
                  }
                  uint64_t v39 = *(void *)(a1 + 24);
                  *(_DWORD *)(a1 + 32) = v38 + 1;
                  unsigned int v40 = *(unsigned int **)(v39 + 8 * v38);
                  unsigned int v55 = 0;
                  unsigned int v41 = (char *)*((void *)this + 1);
                  if ((unint64_t)v41 >= *((void *)this + 2) || *v41 < 0)
                  {
                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v55))return 0; {
                  }
                    }
                  else
                  {
                    unsigned int v55 = *v41;
                    *((void *)this + 1) = v41 + 1;
                  }
                  int v42 = *((_DWORD *)this + 14);
                  int v43 = *((_DWORD *)this + 15);
                  *((_DWORD *)this + 14) = v42 + 1;
                  if (v42 >= v43) {
                    return 0;
                  }
                  int v44 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v55);
                  if (!sub_1008FC044(v40, this, v45) || !*((unsigned char *)this + 36)) {
                    return 0;
                  }
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v44);
                  int v46 = *((_DWORD *)this + 14);
                  BOOL v34 = __OFSUB__(v46, 1);
                  int v47 = v46 - 1;
                  if (v47 < 0 == v34) {
                    *((_DWORD *)this + 14) = v47;
                  }
                  unsigned int v36 = (unsigned char *)*((void *)this + 1);
                  unint64_t v18 = *((void *)this + 2);
                  if ((unint64_t)v36 >= v18) {
                    goto LABEL_2;
                  }
                  int v48 = *v36;
                }
                while (v48 == 34);
                if (v48 == 40)
                {
                  int v19 = v36 + 1;
                  *((void *)this + 1) = v19;
LABEL_75:
                  if ((unint64_t)v19 >= v18 || *v19 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
                    if (!result) {
                      return result;
                    }
                    int v49 = (unsigned char *)*((void *)this + 1);
                    unint64_t v18 = *((void *)this + 2);
                  }
                  else
                  {
                    *uint64_t v8 = *v19;
                    int v49 = v19 + 1;
                    *((void *)this + 1) = v49;
                  }
                  *(_DWORD *)(a1 + 68) |= 0x10u;
                  if ((unint64_t)v49 < v18 && *v49 == 48)
                  {
                    int v20 = v49 + 1;
                    *((void *)this + 1) = v20;
LABEL_83:
                    unsigned int v55 = 0;
                    if ((unint64_t)v20 >= v18 || *v20 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v55);
                      if (!result) {
                        return result;
                      }
                      unsigned int v50 = v55;
                    }
                    else
                    {
                      unsigned int v50 = *v20;
                      *((void *)this + 1) = v20 + 1;
                    }
                    if (v50 <= 5)
                    {
                      *(_DWORD *)(a1 + 68) |= 0x20u;
                      *(_DWORD *)(a1 + 52) = v50;
                    }
                    unsigned int v51 = (unsigned char *)*((void *)this + 1);
                    unint64_t v21 = *((void *)this + 2);
                    if ((unint64_t)v51 < v21 && *v51 == 56)
                    {
                      int v22 = v51 + 1;
                      *((void *)this + 1) = v22;
LABEL_93:
                      unsigned int v55 = 0;
                      if ((unint64_t)v22 >= v21 || *v22 < 0)
                      {
                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v55);
                        if (!result) {
                          return result;
                        }
                        unsigned int v52 = v55;
                      }
                      else
                      {
                        unsigned int v52 = *v22;
                        *((void *)this + 1) = v22 + 1;
                      }
                      if (v52 <= 6)
                      {
                        *(_DWORD *)(a1 + 68) |= 0x40u;
                        *(_DWORD *)(a1 + 56) = v52;
                      }
                      unsigned int v53 = (unsigned char *)*((void *)this + 1);
                      unint64_t v23 = *((void *)this + 2);
                      if ((unint64_t)v53 < v23 && *v53 == 64)
                      {
                        int v24 = v53 + 1;
                        *((void *)this + 1) = v24;
LABEL_103:
                        if ((unint64_t)v24 >= v23 || *v24 < 0)
                        {
                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
                          if (!result) {
                            return result;
                          }
                          int v54 = (unsigned __int8 *)*((void *)this + 1);
                          unint64_t v23 = *((void *)this + 2);
                        }
                        else
                        {
                          *int v9 = *v24;
                          int v54 = (unsigned __int8 *)(v24 + 1);
                          *((void *)this + 1) = v54;
                        }
                        *(_DWORD *)(a1 + 68) |= 0x80u;
                        if (v54 == (unsigned __int8 *)v23
                          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                        {
                          *((_DWORD *)this + 8) = 0;
                          uint64_t result = 1;
                          *((unsigned char *)this + 36) = 1;
                          return result;
                        }
                      }
                    }
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_26;
        }
        int v17 = *(_DWORD *)(a1 + 68);
        goto LABEL_43;
      case 4u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_57;
        }
        goto LABEL_26;
      case 5u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_75;
      case 6u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_83;
      case 7u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v22 = (char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        goto LABEL_93;
      case 8u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v24 = (char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        goto LABEL_103;
      default:
        int v12 = TagFallback & 7;
LABEL_26:
        if (v12 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1008FD748(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 68);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 68);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_10;
      }
      goto LABEL_7;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  if ((*(_DWORD *)(v5 + 68) & 4) == 0) {
    goto LABEL_10;
  }
LABEL_7:
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248A6B8 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
LABEL_10:
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v8 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(*(void *)(v5 + 24) + 8 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 32));
  }
  int v9 = *(_DWORD *)(v5 + 68);
  if ((v9 & 0x10) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 48), a2, a4);
    int v9 = *(_DWORD *)(v5 + 68);
    if ((v9 & 0x20) == 0)
    {
LABEL_15:
      if ((v9 & 0x40) == 0) {
        goto LABEL_16;
      }
LABEL_20:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 56), (int)a2, a4);
      if ((*(_DWORD *)(v5 + 68) & 0x80) == 0) {
        return result;
      }
      goto LABEL_21;
    }
  }
  else if ((v9 & 0x20) == 0)
  {
    goto LABEL_15;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 52), (int)a2, a4);
  int v9 = *(_DWORD *)(v5 + 68);
  if ((v9 & 0x40) != 0) {
    goto LABEL_20;
  }
LABEL_16:
  if ((v9 & 0x80) == 0) {
    return result;
  }
LABEL_21:
  int v10 = *(_DWORD *)(v5 + 60);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v10, a2, a4);
}

uint64_t sub_1008FD894(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 68);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    goto LABEL_46;
  }
  if ((*(unsigned char *)(a1 + 68) & 1) == 0)
  {
    int v4 = 0;
    if ((*(unsigned char *)(a1 + 68) & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_10;
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
  if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    int v3 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    int v6 = 1;
  }
  int v4 = v6 + 1;
  if ((v3 & 2) != 0)
  {
LABEL_10:
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 68);
    }
    else
    {
      int v8 = 2;
    }
    v4 += v8;
  }
LABEL_14:
  if ((v3 & 4) != 0)
  {
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_10248A6B8 + 16);
    }
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008F4D28(v9, a2);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    }
    else {
      int v12 = 1;
    }
    v4 += v11 + v12 + 1;
    int v3 = *(_DWORD *)(a1 + 68);
    if ((v3 & 0x10) == 0)
    {
LABEL_16:
      if ((v3 & 0x20) == 0) {
        goto LABEL_17;
      }
      goto LABEL_30;
    }
  }
  else if ((v3 & 0x10) == 0)
  {
    goto LABEL_16;
  }
  unint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    int v14 = 2;
  }
  v4 += v14;
  if ((v3 & 0x20) == 0)
  {
LABEL_17:
    if ((v3 & 0x40) == 0) {
      goto LABEL_18;
    }
    goto LABEL_36;
  }
LABEL_30:
  int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
  if ((v15 & 0x80000000) != 0)
  {
    int v16 = 11;
  }
  else if (v15 >= 0x80)
  {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    int v16 = 2;
  }
  v4 += v16;
  if ((v3 & 0x40) == 0)
  {
LABEL_18:
    if ((v3 & 0x80) == 0) {
      goto LABEL_46;
    }
    goto LABEL_42;
  }
LABEL_36:
  int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
  if ((v17 & 0x80000000) != 0)
  {
    int v18 = 11;
  }
  else if (v17 >= 0x80)
  {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 68);
  }
  else
  {
    int v18 = 2;
  }
  v4 += v18;
  if ((v3 & 0x80) != 0)
  {
LABEL_42:
    int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
    if (v19 >= 0x80) {
      int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
    }
    else {
      int v20 = 2;
    }
    v4 += v20;
  }
LABEL_46:
  int v21 = *(_DWORD *)(a1 + 32);
  uint64_t v22 = (v21 + v4);
  if (v21 >= 1)
  {
    uint64_t v23 = 0;
    do
    {
      int v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008FC91C(*(unsigned int **)(*(void *)(a1 + 24)+ 8 * v23), a2);
      int v25 = (int)v24;
      if (v24 >= 0x80) {
        int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24, a2);
      }
      else {
        int v26 = 1;
      }
      uint64_t v22 = (v25 + v22 + v26);
      ++v23;
    }
    while (v23 < *(int *)(a1 + 32));
  }
  *(_DWORD *)(a1 + 64) = v22;
  return v22;
}

void sub_1008FDA90(uint64_t a1, void *lpsrc)
{
  sub_1008FCC44(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008FDB18()
{
  return 1;
}

void *sub_1008FDB20@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.GpsAcqAssistance");
}

void sub_1008FDB30(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if (*(unsigned char *)(a2 + 16))
  {
    unsigned int v4 = *(_DWORD *)(a2 + 8);
    if (v4 >= 6) {
      sub_101A73940();
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    *(_DWORD *)(a1 + 8) = v4;
  }
}

void sub_1008FDBC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008FDBE0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D2838;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008FDC00(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D2838;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

uint64_t sub_1008FDC54(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10248A6C0;
  if (!qword_10248A6C0)
  {
    sub_1008C4C78(0, a2, a3, a4);
    return qword_10248A6C0;
  }
  return result;
}

void sub_1008FDC84()
{
}

uint64_t sub_1008FDCD0(uint64_t result)
{
  if (*(unsigned char *)(result + 16)) {
    *(_DWORD *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1008FDCE4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
      }
      if (TagFallback != 8) {
        break;
      }
      unsigned int v10 = 0;
      uint64_t v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v10);
        if (!result) {
          return result;
        }
        unsigned int v8 = v10;
      }
      else
      {
        unsigned int v8 = *v7;
        *((void *)this + 1) = v7 + 1;
      }
      if (v8 <= 5)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 8) = v8;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_1008FDE04(uint64_t result, int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(result + 16)) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
  }
  return result;
}

uint64_t sub_1008FDE20(uint64_t a1, unsigned int a2)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unsigned int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v4 & 0x80000000) != 0)
    {
      uint64_t result = 11;
    }
    else if (v4 >= 0x80)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4, a2)
             + 1;
    }
    else
    {
      uint64_t result = 2;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 12) = result;
  return result;
}

void sub_1008FDE7C(uint64_t a1, void *lpsrc)
{
  sub_1008FDB30(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008FDF04()
{
  return 1;
}

void *sub_1008FDF0C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.CellFTAssistanceRequest");
}

void sub_1008FDF1C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      unsigned int v5 = *(_DWORD *)(a2 + 8);
      if (!sub_100748708(v5)) {
        sub_101A73998();
      }
      *(_DWORD *)(a1 + 28) |= 1u;
      *(_DWORD *)(a1 + 8) = v5;
      int v4 = *(_DWORD *)(a2 + 28);
    }
    if ((v4 & 2) != 0)
    {
      unsigned int v6 = *(_DWORD *)(a2 + 12);
      if (v6 >= 6) {
        sub_101A7396C();
      }
      *(_DWORD *)(a1 + 28) |= 2u;
      *(_DWORD *)(a1 + 12) = v6;
      int v4 = *(_DWORD *)(a2 + 28);
    }
    if ((v4 & 4) != 0)
    {
      *(_DWORD *)(a1 + 28) |= 4u;
      uint64_t v7 = *(void *)(a1 + 16);
      if (!v7) {
        operator new();
      }
      uint64_t v8 = *(void *)(a2 + 16);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_10248A6C8 + 16);
      }
      sub_1008F3F64(v7, v8);
    }
  }
}

void sub_1008FE05C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008FE074(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022D28B0;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_10248A6C8 != this)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1008FE104(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1008FE074(a1);

  operator delete();
}

uint64_t sub_1008FE13C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10248A6C8;
  if (!qword_10248A6C8)
  {
    sub_1008C4C78(0, a2, a3, a4);
    return qword_10248A6C8;
  }
  return result;
}

void sub_1008FE16C()
{
}

uint64_t sub_1008FE1B8(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(unsigned char *)(result + 28);
  if (v2)
  {
    *(void *)(result + 8) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t result = *(void *)(result + 16);
      if (result) {
        uint64_t result = sub_1008F427C(result);
      }
    }
  }
  *(_DWORD *)(v1 + 28) = 0;
  return result;
}

uint64_t sub_1008FE1F8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          unsigned int v5 = (char *)*((void *)this + 1);
          if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v5;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v5 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v8 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_18;
          }
          unsigned int v27 = 0;
          uint64_t v9 = (char *)*((void *)this + 1);
          if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27);
            if (!result) {
              return result;
            }
            unsigned int v10 = v27;
          }
          else
          {
            unsigned int v10 = *v9;
            *((void *)this + 1) = v9 + 1;
          }
          if (sub_100748708(v10))
          {
            if (!sub_100748708(v10)) {
              sub_101A73998();
            }
            *(_DWORD *)(a1 + 28) |= 1u;
            *(_DWORD *)(a1 + 8) = v10;
          }
          int v14 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
          if ((unint64_t)v14 < v11 && *v14 == 16)
          {
            int v12 = v14 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_29;
          }
        }
        if (v7 != 2) {
          break;
        }
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v12 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
LABEL_29:
        unsigned int v26 = 0;
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26);
          if (!result) {
            return result;
          }
          unsigned int v15 = v26;
        }
        else
        {
          unsigned int v15 = *v12;
          *((void *)this + 1) = v12 + 1;
        }
        if (v15 <= 5)
        {
          *(_DWORD *)(a1 + 28) |= 2u;
          *(_DWORD *)(a1 + 12) = v15;
        }
        int v16 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v16 < *((void *)this + 2) && *v16 == 26)
        {
          *((void *)this + 1) = v16 + 1;
          goto LABEL_39;
        }
      }
      if (v7 != 3)
      {
        int v8 = TagFallback & 7;
        goto LABEL_18;
      }
      int v8 = TagFallback & 7;
      if (v8 == 2) {
        break;
      }
LABEL_18:
      if (v8 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
LABEL_39:
    *(_DWORD *)(a1 + 28) |= 4u;
    uint64_t v17 = *(void *)(a1 + 16);
    if (!v17) {
      operator new();
    }
    unsigned int v28 = 0;
    int v18 = (char *)*((void *)this + 1);
    if ((unint64_t)v18 >= *((void *)this + 2) || *v18 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v28)) {
        return 0;
      }
    }
    else
    {
      unsigned int v28 = *v18;
      *((void *)this + 1) = v18 + 1;
    }
    int v19 = *((_DWORD *)this + 14);
    int v20 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v19 + 1;
    if (v19 >= v20) {
      return 0;
    }
    int v21 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v28);
    if (!sub_1008F42DC(v17, this, v22) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v21);
    int v23 = *((_DWORD *)this + 14);
    BOOL v24 = __OFSUB__(v23, 1);
    int v25 = v23 - 1;
    if (v25 < 0 == v24) {
      *((_DWORD *)this + 14) = v25;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_1008FE4EC(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 28) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248A6C8 + 16);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t sub_1008FE588(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 28);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_26;
  }
  if (*(unsigned char *)(a1 + 28))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v5 & 0x80000000) != 0)
    {
      uint64_t v4 = 11;
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }
    else if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 28);
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 28) & 2) == 0) {
      goto LABEL_19;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if ((v6 & 0x80000000) != 0)
  {
    int v7 = 11;
  }
  else if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 28);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_19:
  if ((v3 & 4) != 0)
  {
    uint64_t v8 = *(void *)(a1 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_10248A6C8 + 16);
    }
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008F4660(v8, a2);
    int v11 = (int)v9;
    if (v9 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, v10);
    }
    else {
      int v12 = 1;
    }
    uint64_t v4 = (v4 + v11 + v12 + 1);
  }
LABEL_26:
  *(_DWORD *)(a1 + 24) = v4;
  return v4;
}

void sub_1008FE684(uint64_t a1, void *lpsrc)
{
  sub_1008FDF1C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008FE70C()
{
  return 1;
}

void *sub_1008FE714@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.CellFTAssistance");
}

void sub_1008FE724(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D2928;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008FE744(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D2928;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008FE798()
{
}

uint64_t sub_1008FE7F4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)(a1 + 48);
  int v6 = (unsigned int *)(a1 + 52);
  while (2)
  {
    int v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_40;
        }
        unint64_t v21 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v21) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 8) = v21;
        *(_DWORD *)(a1 + 60) |= 1u;
        unsigned int v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 != 17) {
          continue;
        }
        *((void *)this + 1) = v10 + 1;
        goto LABEL_15;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_40;
        }
LABEL_15:
        unint64_t v21 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v21) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v21;
        *(_DWORD *)(a1 + 60) |= 2u;
        int v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 != 25) {
          continue;
        }
        *((void *)this + 1) = v11 + 1;
LABEL_20:
        unint64_t v21 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v21) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 24) = v21;
        *(_DWORD *)(a1 + 60) |= 4u;
        int v12 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 != 33) {
          continue;
        }
        *((void *)this + 1) = v12 + 1;
LABEL_25:
        unint64_t v21 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v21) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 32) = v21;
        *(_DWORD *)(a1 + 60) |= 8u;
        unint64_t v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 != 41) {
          continue;
        }
        *((void *)this + 1) = v13 + 1;
LABEL_30:
        unint64_t v21 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v21))
        {
          *(void *)(a1 + 40) = v21;
          *(_DWORD *)(a1 + 60) |= 0x10u;
          unsigned int v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
          if ((unint64_t)v15 < v14 && *v15 == 48)
          {
            int v16 = v15 + 1;
            *((void *)this + 1) = v16;
LABEL_36:
            if ((unint64_t)v16 >= v14 || *v16 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
              if (!result) {
                return result;
              }
              uint64_t v17 = (unsigned char *)*((void *)this + 1);
              unint64_t v14 = *((void *)this + 2);
            }
            else
            {
              *uint64_t v5 = *v16;
              uint64_t v17 = v16 + 1;
              *((void *)this + 1) = v17;
            }
            *(_DWORD *)(a1 + 60) |= 0x20u;
            if ((unint64_t)v17 < v14 && *v17 == 56)
            {
              int v18 = v17 + 1;
              *((void *)this + 1) = v18;
LABEL_49:
              if ((unint64_t)v18 >= v14 || *v18 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
                if (!result) {
                  return result;
                }
                int v20 = (unsigned __int8 *)*((void *)this + 1);
                unint64_t v14 = *((void *)this + 2);
              }
              else
              {
                *int v6 = *v18;
                int v20 = (unsigned __int8 *)(v18 + 1);
                *((void *)this + 1) = v20;
              }
              *(_DWORD *)(a1 + 60) |= 0x40u;
              if (v20 == (unsigned __int8 *)v14
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_20;
        }
        goto LABEL_40;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_25;
        }
        goto LABEL_40;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_30;
        }
        goto LABEL_40;
      case 6u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_36;
      case 7u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_49;
      default:
        int v9 = TagFallback & 7;
LABEL_40:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1008FEB90(uint64_t result, unsigned int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 60);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(result + 8), a3);
    int v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_14:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 48), a2, a4);
    if ((*(_DWORD *)(v5 + 60) & 0x40) == 0) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x20) != 0) {
    goto LABEL_14;
  }
LABEL_7:
  if ((v6 & 0x40) == 0) {
    return result;
  }
LABEL_15:
  int v7 = *(_DWORD *)(v5 + 52);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v7, a2, a4);
}

uint64_t sub_1008FEC8C(uint64_t a1, unsigned int a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 60);
  if (*(unsigned char *)(a1 + 60))
  {
    unsigned int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 0x20) != 0)
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
      if (v6 >= 0x80)
      {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 60);
      }
      else
      {
        int v7 = 2;
      }
      uint64_t v5 = (v7 + v5);
    }
    if ((v3 & 0x40) != 0)
    {
      uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
      if (v8 >= 0x80) {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      }
      else {
        int v9 = 2;
      }
      uint64_t v5 = (v9 + v5);
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  *(_DWORD *)(a1 + 56) = v5;
  return v5;
}

void sub_1008FED4C(uint64_t a1, void *lpsrc)
{
  sub_1008D2CA0(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008FEDD4()
{
  return 1;
}

void *sub_1008FEDDC@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.NetworkReferenceLocation");
}

void sub_1008FEDEC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D29A0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008FEE0C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D29A0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008FEE60()
{
}

uint64_t sub_1008FEEAC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)(a1 + 8);
  int v6 = (unsigned int *)(a1 + 12);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          int v7 = (char *)*((void *)this + 1);
          if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v7;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v7 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v9 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v10 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_19;
          }
          int v12 = (char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
          if ((unint64_t)v12 >= v11 || *v12 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
            if (!result) {
              return result;
            }
            unint64_t v13 = (unsigned char *)*((void *)this + 1);
            unint64_t v11 = *((void *)this + 2);
          }
          else
          {
            *uint64_t v5 = *v12;
            unint64_t v13 = v12 + 1;
            *((void *)this + 1) = v13;
          }
          *(_DWORD *)(a1 + 28) |= 1u;
          if ((unint64_t)v13 < v11 && *v13 == 16)
          {
            unint64_t v14 = v13 + 1;
            *((void *)this + 1) = v14;
            goto LABEL_27;
          }
        }
        if (v9 != 2) {
          break;
        }
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
LABEL_27:
        if ((unint64_t)v14 >= v11 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v14;
          int v16 = v14 + 1;
          *((void *)this + 1) = v16;
        }
        *(_DWORD *)(a1 + 28) |= 2u;
        if ((unint64_t)v16 < v11 && *v16 == 25)
        {
          *((void *)this + 1) = v16 + 1;
          goto LABEL_35;
        }
      }
      if (v9 != 3) {
        break;
      }
      int v10 = TagFallback & 7;
      if (v10 != 1) {
        goto LABEL_19;
      }
LABEL_35:
      unint64_t v17 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v17) & 1) == 0) {
        return 0;
      }
      *(void *)(a1 + 16) = v17;
      *(_DWORD *)(a1 + 28) |= 4u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v10 = TagFallback & 7;
LABEL_19:
    if (v10 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return 0;
}

uint64_t sub_1008FF0B4(uint64_t result, unsigned int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
    if ((*(_DWORD *)(v5 + 28) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
  int v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  double v7 = *(double *)(v5 + 16);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, v7, a3);
}

uint64_t sub_1008FF140(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 28);
  if (!(_BYTE)v3)
  {
    uint64_t result = 0;
    goto LABEL_17;
  }
  if ((*(unsigned char *)(a1 + 28) & 1) == 0)
  {
    unsigned int v4 = 0;
    if ((*(unsigned char *)(a1 + 28) & 2) == 0) {
      goto LABEL_14;
    }
LABEL_10:
    double v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 28);
    }
    else
    {
      int v8 = 2;
    }
    v4 += v8;
    goto LABEL_14;
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
  if (v6 >= 0x80)
  {
    unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 28);
    if ((v3 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_10;
  }
  unsigned int v4 = 2;
  if ((v3 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_14:
  if ((v3 & 4) != 0) {
    uint64_t result = v4 + 9;
  }
  else {
    uint64_t result = v4;
  }
LABEL_17:
  *(_DWORD *)(a1 + 24) = result;
  return result;
}

void sub_1008FF1DC(uint64_t a1, void *lpsrc)
{
  sub_1008D2E0C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008FF264()
{
  return 1;
}

void *sub_1008FF26C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.NetworkReferenceTime");
}

void sub_1008FF27C(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      int v6 = *(_DWORD *)(a2 + 8);
      a1[6] |= 1u;
      a1[2] = v6;
      int v4 = *(_DWORD *)(a2 + 24);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 24) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 12);
    a1[6] |= 2u;
    a1[3] = v7;
    if ((*(_DWORD *)(a2 + 24) & 4) == 0) {
      return;
    }
LABEL_7:
    int v5 = *(_DWORD *)(a2 + 16);
    a1[6] |= 4u;
    a1[4] = v5;
  }
}

void sub_1008FF350(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008FF368(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D2A18;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008FF388(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D2A18;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008FF3DC()
{
}

uint64_t sub_1008FF42C(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    *(void *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1008FF444(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  int v7 = a1 + 4;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v8;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v8 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v10 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v14 >= v12 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          unsigned int v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v5 = *v14;
          unsigned int v15 = v14 + 1;
          *((void *)this + 1) = v15;
        }
        a1[6] |= 1u;
        if ((unint64_t)v15 < v12 && *v15 == 16)
        {
          int v16 = v15 + 1;
          *((void *)this + 1) = v16;
          goto LABEL_27;
        }
      }
      if (v10 != 2) {
        break;
      }
      int v11 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_19;
      }
      int v16 = (char *)*((void *)this + 1);
      unint64_t v12 = *((void *)this + 2);
LABEL_27:
      if ((unint64_t)v16 >= v12 || *v16 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
        if (!result) {
          return result;
        }
        unint64_t v17 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
      }
      else
      {
        *int v6 = *v16;
        unint64_t v17 = v16 + 1;
        *((void *)this + 1) = v17;
      }
      a1[6] |= 2u;
      if ((unint64_t)v17 < v12 && *v17 == 24)
      {
        unint64_t v13 = v17 + 1;
        *((void *)this + 1) = v13;
LABEL_35:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v18 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *int v7 = *v13;
          int v18 = (unsigned __int8 *)(v13 + 1);
          *((void *)this + 1) = v18;
        }
        a1[6] |= 4u;
        if (v18 == (unsigned __int8 *)v12
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v10 == 3)
    {
      int v11 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        unint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_35;
      }
    }
    else
    {
      int v11 = TagFallback & 7;
    }
LABEL_19:
    if (v11 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

int *sub_1008FF668(int *result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = result;
  int v6 = result[6];
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], a2, a4);
    if ((v5[6] & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, result[2], a2, a4);
  int v6 = v5[6];
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_7:
  int v7 = v5[4];

  return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t sub_1008FF6F4(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 24);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_19;
  }
  if (*(unsigned char *)(a1 + 24))
  {
    int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 24);
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 24);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_14:
  if ((v3 & 4) != 0)
  {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v8 >= 0x80) {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    }
    else {
      int v9 = 2;
    }
    uint64_t v4 = (v9 + v4);
  }
LABEL_19:
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_1008FF7AC(_DWORD *a1, void *lpsrc)
{
  sub_1008FF27C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008FF834()
{
  return 1;
}

void *sub_1008FF83C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.Is801VelocityInfo");
}

void sub_1008FF84C(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 20))
    {
      int v5 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v5;
      int v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v6;
    }
  }
}

void sub_1008FF8F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008FF910(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D2A90;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008FF930(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D2A90;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008FF984()
{
}

uint64_t sub_1008FF9D0(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1008FF9E4(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  while (1)
  {
    while (1)
    {
      int v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unint64_t v12 = (char *)*((void *)this + 1);
      unint64_t v10 = *((void *)this + 2);
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!result) {
          return result;
        }
        unint64_t v13 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
      }
      else
      {
        *int v5 = *v12;
        unint64_t v13 = v12 + 1;
        *((void *)this + 1) = v13;
      }
      a1[5] |= 1u;
      if ((unint64_t)v13 < v10 && *v13 == 16)
      {
        int v11 = v13 + 1;
        *((void *)this + 1) = v11;
LABEL_24:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          unint64_t v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v11;
          unint64_t v14 = (unsigned __int8 *)(v11 + 1);
          *((void *)this + 1) = v14;
        }
        a1[5] |= 2u;
        if (v14 == (unsigned __int8 *)v10
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v9 = TagFallback & 7;
    }
LABEL_16:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1008FFB84(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(_DWORD *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_1008FFBF0(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 20);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 20))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_14;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 20) & 2) == 0) {
        goto LABEL_14;
      }
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v6 >= 0x80) {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    }
    else {
      int v7 = 2;
    }
    uint64_t v4 = (v7 + v4);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_14:
  *(_DWORD *)(a1 + 16) = v4;
  return v4;
}

void sub_1008FFC80(_DWORD *a1, void *lpsrc)
{
  sub_1008FF84C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1008FFD08()
{
  return 1;
}

void *sub_1008FFD10@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.Is801ClockInfo");
}

void sub_1008FFD20(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 20))
    {
      int v5 = *(_DWORD *)(a2 + 8);
      a1[5] |= 1u;
      a1[2] = v5;
      int v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 12);
      a1[5] |= 2u;
      a1[3] = v6;
    }
  }
}

void sub_1008FFDCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1008FFDE4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D2B08;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1008FFE04(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D2B08;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1008FFE58()
{
}

uint64_t sub_1008FFEA4(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1008FFEB8(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = a1 + 2;
  int v6 = a1 + 3;
  while (1)
  {
    while (1)
    {
      int v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      unint64_t v12 = (char *)*((void *)this + 1);
      unint64_t v10 = *((void *)this + 2);
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!result) {
          return result;
        }
        unint64_t v13 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
      }
      else
      {
        *int v5 = *v12;
        unint64_t v13 = v12 + 1;
        *((void *)this + 1) = v13;
      }
      a1[5] |= 1u;
      if ((unint64_t)v13 < v10 && *v13 == 16)
      {
        int v11 = v13 + 1;
        *((void *)this + 1) = v11;
LABEL_24:
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          unint64_t v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v11;
          unint64_t v14 = (unsigned __int8 *)(v11 + 1);
          *((void *)this + 1) = v14;
        }
        a1[5] |= 2u;
        if (v14 == (unsigned __int8 *)v10
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v9 = TagFallback & 7;
    }
LABEL_16:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_100900058(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(_DWORD *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_1009000C4(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 20);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 20))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_14;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 20) & 2) == 0) {
        goto LABEL_14;
      }
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v6 >= 0x80) {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    }
    else {
      int v7 = 2;
    }
    uint64_t v4 = (v7 + v4);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_14:
  *(_DWORD *)(a1 + 16) = v4;
  return v4;
}

void sub_100900154(_DWORD *a1, void *lpsrc)
{
  sub_1008FFD20(a1, (uint64_t)lpsrc);
}

uint64_t sub_1009001DC()
{
  return 1;
}

void *sub_1009001E4@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.Is801HeightInfo");
}

void sub_1009001F4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }
  int v4 = *(_DWORD *)(a2 + 64);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      int v8 = *(_DWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 64) |= 1u;
      *(_DWORD *)(a1 + 8) = v8;
      int v4 = *(_DWORD *)(a2 + 64);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_26;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_6;
    }
    int v9 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 64) |= 2u;
    *(_DWORD *)(a1 + 12) = v9;
    int v4 = *(_DWORD *)(a2 + 64);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_27;
    }
LABEL_26:
    int v10 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 64) |= 4u;
    *(_DWORD *)(a1 + 16) = v10;
    int v4 = *(_DWORD *)(a2 + 64);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_28;
    }
LABEL_27:
    int v11 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 64) |= 8u;
    *(_DWORD *)(a1 + 20) = v11;
    int v4 = *(_DWORD *)(a2 + 64);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_29;
    }
LABEL_28:
    int v12 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 64) |= 0x10u;
    *(_DWORD *)(a1 + 24) = v12;
    int v4 = *(_DWORD *)(a2 + 64);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
LABEL_29:
    unsigned int v13 = *(_DWORD *)(a2 + 28);
    if (v13 >= 4) {
      sub_101A739C4();
    }
    *(_DWORD *)(a1 + 64) |= 0x20u;
    *(_DWORD *)(a1 + 28) = v13;
    int v4 = *(_DWORD *)(a2 + 64);
    if ((v4 & 0x40) == 0) {
      goto LABEL_12;
    }
LABEL_11:
    char v5 = *(unsigned char *)(a2 + 56);
    *(_DWORD *)(a1 + 64) |= 0x40u;
    *(unsigned char *)(a1 + 56) = v5;
    int v4 = *(_DWORD *)(a2 + 64);
LABEL_12:
    if ((v4 & 0x80) != 0)
    {
      *(_DWORD *)(a1 + 64) |= 0x80u;
      int v6 = *(_DWORD **)(a1 + 32);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 32);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_10248A6F8 + 32);
      }
      sub_1008FF27C(v6, v7);
      int v4 = *(_DWORD *)(a2 + 64);
    }
  }
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    char v14 = *(unsigned char *)(a2 + 57);
    *(_DWORD *)(a1 + 64) |= 0x100u;
    *(unsigned char *)(a1 + 57) = v14;
    int v4 = *(_DWORD *)(a2 + 64);
    if ((v4 & 0x200) == 0)
    {
LABEL_21:
      if ((v4 & 0x400) == 0) {
        goto LABEL_22;
      }
LABEL_38:
      char v17 = *(unsigned char *)(a2 + 58);
      *(_DWORD *)(a1 + 64) |= 0x400u;
      *(unsigned char *)(a1 + 58) = v17;
      if ((*(_DWORD *)(a2 + 64) & 0x800) == 0) {
        return;
      }
      goto LABEL_39;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_21;
  }
  *(_DWORD *)(a1 + 64) |= 0x200u;
  unsigned int v15 = *(_DWORD **)(a1 + 40);
  if (!v15) {
    operator new();
  }
  uint64_t v16 = *(void *)(a2 + 40);
  if (!v16) {
    uint64_t v16 = *(void *)(qword_10248A6F8 + 40);
  }
  sub_1008FF84C(v15, v16);
  int v4 = *(_DWORD *)(a2 + 64);
  if ((v4 & 0x400) != 0) {
    goto LABEL_38;
  }
LABEL_22:
  if ((v4 & 0x800) == 0) {
    return;
  }
LABEL_39:
  *(_DWORD *)(a1 + 64) |= 0x800u;
  int v18 = *(_DWORD **)(a1 + 48);
  if (!v18) {
    operator new();
  }
  uint64_t v19 = *(void *)(a2 + 48);
  if (!v19) {
    uint64_t v19 = *(void *)(qword_10248A6F8 + 48);
  }
  sub_1008FFD20(v18, v19);
}

void sub_1009004FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_100900514(void *result)
{
  if ((void *)qword_10248A6F8 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[4];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[5];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t result = (void *)v1[6];
    if (result)
    {
      int v4 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v4();
    }
  }
  return result;
}

void sub_1009005E0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D2B80;
  sub_100900514(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100900634(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D2B80;
  sub_100900514(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10090069C()
{
}

uint64_t sub_1009006FC(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 64);
  if ((_BYTE)v1)
  {
    *(unsigned char *)(result + 56) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)(result + 8) = 0;
    if ((v1 & 0x80) != 0)
    {
      uint64_t v2 = *(void *)(result + 32);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 24))
        {
          *(void *)(v2 + 8) = 0;
          *(_DWORD *)(v2 + 16) = 0;
        }
        *(_DWORD *)(v2 + 24) = 0;
        int v1 = *(_DWORD *)(result + 64);
      }
    }
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(unsigned char *)(result + 57) = 0;
    if ((v1 & 0x200) != 0)
    {
      uint64_t v3 = *(void *)(result + 40);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 20)) {
          *(void *)(v3 + 8) = 0;
        }
        *(_DWORD *)(v3 + 20) = 0;
        int v1 = *(_DWORD *)(result + 64);
      }
    }
    *(unsigned char *)(result + 58) = 0;
    if ((v1 & 0x800) != 0)
    {
      uint64_t v4 = *(void *)(result + 48);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 20)) {
          *(void *)(v4 + 8) = 0;
        }
        *(_DWORD *)(v4 + 20) = 0;
      }
    }
  }
  *(_DWORD *)(result + 64) = 0;
  return result;
}

uint64_t sub_10090078C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  char v5 = (unsigned int *)(a1 + 8);
  int v6 = (unsigned int *)(a1 + 12);
  uint64_t v7 = (unsigned int *)(a1 + 16);
  int v8 = (unsigned int *)(a1 + 20);
  int v9 = (unsigned int *)(a1 + 24);
  while (2)
  {
    int v10 = (char *)*((void *)this + 1);
    if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v10;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        char v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          unsigned int v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *char v5 = *v14;
          unsigned int v15 = v14 + 1;
          *((void *)this + 1) = v15;
        }
        *(_DWORD *)(a1 + 64) |= 1u;
        if ((unint64_t)v15 < v13 && *v15 == 16)
        {
          uint64_t v16 = v15 + 1;
          *((void *)this + 1) = v16;
          goto LABEL_43;
        }
        continue;
      case 2u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        uint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
LABEL_43:
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v31 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v16;
          int v31 = v16 + 1;
          *((void *)this + 1) = v31;
        }
        *(_DWORD *)(a1 + 64) |= 2u;
        if ((unint64_t)v31 >= v13 || *v31 != 24) {
          continue;
        }
        char v17 = v31 + 1;
        *((void *)this + 1) = v17;
LABEL_51:
        if ((unint64_t)v17 >= v13 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          unsigned int v32 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v7 = *v17;
          unsigned int v32 = v17 + 1;
          *((void *)this + 1) = v32;
        }
        *(_DWORD *)(a1 + 64) |= 4u;
        if ((unint64_t)v32 >= v13 || *v32 != 32) {
          continue;
        }
        int v18 = v32 + 1;
        *((void *)this + 1) = v18;
LABEL_59:
        if ((unint64_t)v18 >= v13 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v33 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *int v8 = *v18;
          int v33 = v18 + 1;
          *((void *)this + 1) = v33;
        }
        *(_DWORD *)(a1 + 64) |= 8u;
        if ((unint64_t)v33 >= v13 || *v33 != 40) {
          continue;
        }
        uint64_t v19 = v33 + 1;
        *((void *)this + 1) = v19;
LABEL_67:
        if ((unint64_t)v19 >= v13 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          BOOL v34 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          *int v9 = *v19;
          BOOL v34 = v19 + 1;
          *((void *)this + 1) = v34;
        }
        *(_DWORD *)(a1 + 64) |= 0x10u;
        if ((unint64_t)v34 >= v13 || *v34 != 48) {
          continue;
        }
        int v20 = v34 + 1;
        *((void *)this + 1) = v20;
LABEL_75:
        unsigned int v70 = 0;
        if ((unint64_t)v20 >= v13 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v70);
          if (!result) {
            return result;
          }
          unsigned int v35 = v70;
        }
        else
        {
          unsigned int v35 = *v20;
          *((void *)this + 1) = v20 + 1;
        }
        if (v35 <= 3)
        {
          *(_DWORD *)(a1 + 64) |= 0x20u;
          *(_DWORD *)(a1 + 28) = v35;
        }
        unsigned int v36 = (unsigned char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        if ((unint64_t)v36 >= v21 || *v36 != 56) {
          continue;
        }
        unsigned int v22 = v36 + 1;
        *((void *)this + 1) = v22;
LABEL_85:
        unsigned int v70 = 0;
        if ((unint64_t)v22 >= v21 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v70);
          if (!result) {
            return result;
          }
          unsigned int v37 = v70;
          uint64_t v38 = (unsigned char *)*((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
        }
        else
        {
          unsigned int v37 = *v22;
          uint64_t v38 = v22 + 1;
          *((void *)this + 1) = v38;
        }
        *(unsigned char *)(a1 + 56) = v37 != 0;
        int v23 = *(_DWORD *)(a1 + 64) | 0x40;
        *(_DWORD *)(a1 + 64) = v23;
        if ((unint64_t)v38 >= v21 || *v38 != 66) {
          continue;
        }
        *((void *)this + 1) = v38 + 1;
LABEL_93:
        *(_DWORD *)(a1 + 64) = v23 | 0x80;
        uint64_t v39 = *(unsigned int **)(a1 + 32);
        if (!v39) {
          operator new();
        }
        unsigned int v70 = 0;
        unsigned int v40 = (char *)*((void *)this + 1);
        if ((unint64_t)v40 >= *((void *)this + 2) || *v40 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v70))return 0; {
        }
          }
        else
        {
          unsigned int v70 = *v40;
          *((void *)this + 1) = v40 + 1;
        }
        int v41 = *((_DWORD *)this + 14);
        int v42 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v41 + 1;
        if (v41 >= v42) {
          return 0;
        }
        int v43 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v70);
        if (!sub_1008FF444(v39, this, v44) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v43);
        int v45 = *((_DWORD *)this + 14);
        BOOL v46 = __OFSUB__(v45, 1);
        int v47 = v45 - 1;
        if (v47 < 0 == v46) {
          *((_DWORD *)this + 14) = v47;
        }
        int v48 = (unsigned char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        if ((unint64_t)v48 >= v24 || *v48 != 72) {
          continue;
        }
        int v25 = v48 + 1;
        *((void *)this + 1) = v25;
LABEL_107:
        unsigned int v70 = 0;
        if ((unint64_t)v25 >= v24 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v70);
          if (!result) {
            return result;
          }
          unsigned int v49 = v70;
          unsigned int v50 = (unsigned char *)*((void *)this + 1);
          unint64_t v24 = *((void *)this + 2);
        }
        else
        {
          unsigned int v49 = *v25;
          unsigned int v50 = v25 + 1;
          *((void *)this + 1) = v50;
        }
        *(unsigned char *)(a1 + 57) = v49 != 0;
        int v26 = *(_DWORD *)(a1 + 64) | 0x100;
        *(_DWORD *)(a1 + 64) = v26;
        if ((unint64_t)v50 >= v24 || *v50 != 82) {
          continue;
        }
        *((void *)this + 1) = v50 + 1;
LABEL_115:
        *(_DWORD *)(a1 + 64) = v26 | 0x200;
        unsigned int v51 = *(unsigned int **)(a1 + 40);
        if (!v51) {
          operator new();
        }
        unsigned int v70 = 0;
        unsigned int v52 = (char *)*((void *)this + 1);
        if ((unint64_t)v52 >= *((void *)this + 2) || *v52 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v70))return 0; {
        }
          }
        else
        {
          unsigned int v70 = *v52;
          *((void *)this + 1) = v52 + 1;
        }
        int v53 = *((_DWORD *)this + 14);
        int v54 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v53 + 1;
        if (v53 >= v54) {
          return 0;
        }
        int v55 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v70);
        if (!sub_1008FF9E4(v51, this, v56) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v55);
        int v57 = *((_DWORD *)this + 14);
        BOOL v46 = __OFSUB__(v57, 1);
        int v58 = v57 - 1;
        if (v58 < 0 == v46) {
          *((_DWORD *)this + 14) = v58;
        }
        unsigned int v59 = (unsigned char *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        if ((unint64_t)v59 >= v27 || *v59 != 88) {
          continue;
        }
        unsigned int v28 = v59 + 1;
        *((void *)this + 1) = v28;
LABEL_129:
        unsigned int v70 = 0;
        if ((unint64_t)v28 >= v27 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v70);
          if (!result) {
            return result;
          }
          unsigned int v60 = v70;
          unsigned int v61 = (unsigned char *)*((void *)this + 1);
          unint64_t v27 = *((void *)this + 2);
        }
        else
        {
          unsigned int v60 = *v28;
          unsigned int v61 = v28 + 1;
          *((void *)this + 1) = v61;
        }
        *(unsigned char *)(a1 + 58) = v60 != 0;
        int v29 = *(_DWORD *)(a1 + 64) | 0x400;
        *(_DWORD *)(a1 + 64) = v29;
        if ((unint64_t)v61 >= v27 || *v61 != 98) {
          continue;
        }
        *((void *)this + 1) = v61 + 1;
LABEL_137:
        *(_DWORD *)(a1 + 64) = v29 | 0x800;
        int v62 = *(unsigned int **)(a1 + 48);
        if (!v62) {
          operator new();
        }
        unsigned int v70 = 0;
        unsigned int v63 = (char *)*((void *)this + 1);
        if ((unint64_t)v63 >= *((void *)this + 2) || *v63 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v70))return 0; {
        }
          }
        else
        {
          unsigned int v70 = *v63;
          *((void *)this + 1) = v63 + 1;
        }
        int v64 = *((_DWORD *)this + 14);
        int v65 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v64 + 1;
        if (v64 < v65)
        {
          int v66 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v70);
          if (sub_1008FFEB8(v62, this, v67))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v66);
              int v68 = *((_DWORD *)this + 14);
              BOOL v46 = __OFSUB__(v68, 1);
              int v69 = v68 - 1;
              if (v69 < 0 == v46) {
                *((_DWORD *)this + 14) = v69;
              }
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        char v17 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_51;
      case 4u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_59;
      case 5u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        uint64_t v19 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_67;
      case 6u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_75;
      case 7u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        unsigned int v22 = (char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        goto LABEL_85;
      case 8u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_35;
        }
        int v23 = *(_DWORD *)(a1 + 64);
        goto LABEL_93;
      case 9u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        int v25 = (char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_107;
      case 0xAu:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_35;
        }
        int v26 = *(_DWORD *)(a1 + 64);
        goto LABEL_115;
      case 0xBu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        unsigned int v28 = (char *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        goto LABEL_129;
      case 0xCu:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_35;
        }
        int v29 = *(_DWORD *)(a1 + 64);
        goto LABEL_137;
      default:
        int v12 = TagFallback & 7;
LABEL_35:
        if (v12 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100901044(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 64);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 64);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 16), a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 20), a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 24), a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 28), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 56), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_21:
  uint64_t v7 = *(void *)(v5 + 32);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248A6F8 + 32);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned __int8 *)(v5 + 57), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
LABEL_28:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned __int8 *)(v5 + 58), (BOOL)a2, a4);
    if ((*(_DWORD *)(v5 + 64) & 0x800) == 0) {
      return result;
    }
    goto LABEL_29;
  }
LABEL_25:
  uint64_t v8 = *(void *)(v5 + 40);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_10248A6F8 + 40);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x400) != 0) {
    goto LABEL_28;
  }
LABEL_12:
  if ((v6 & 0x800) == 0) {
    return result;
  }
LABEL_29:
  uint64_t v9 = *(void *)(v5 + 48);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_10248A6F8 + 48);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v9, a2, a4);
}

uint64_t sub_1009011FC(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 64);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_47;
  }
  if ((v3 & 1) == 0)
  {
    LODWORD(v4) = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_10;
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
  if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    int v3 = *(_DWORD *)(a1 + 64);
  }
  else
  {
    int v6 = 1;
  }
  LODWORD(v4) = v6 + 1;
  if ((v3 & 2) != 0)
  {
LABEL_10:
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      int v3 = *(_DWORD *)(a1 + 64);
    }
    else
    {
      int v8 = 1;
    }
    LODWORD(v4) = v4 + v8 + 1;
  }
LABEL_14:
  if ((v3 & 4) != 0)
  {
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
      int v3 = *(_DWORD *)(a1 + 64);
    }
    else
    {
      int v10 = 1;
    }
    LODWORD(v4) = v4 + v10 + 1;
    if ((v3 & 8) == 0)
    {
LABEL_16:
      if ((v3 & 0x10) == 0) {
        goto LABEL_17;
      }
      goto LABEL_27;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 64);
  }
  else
  {
    int v12 = 2;
  }
  LODWORD(v4) = v12 + v4;
  if ((v3 & 0x10) == 0)
  {
LABEL_17:
    if ((v3 & 0x20) == 0) {
      goto LABEL_37;
    }
    goto LABEL_31;
  }
LABEL_27:
  unint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 64);
  }
  else
  {
    int v14 = 2;
  }
  LODWORD(v4) = v14 + v4;
  if ((v3 & 0x20) != 0)
  {
LABEL_31:
    unsigned int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if ((v15 & 0x80000000) != 0)
    {
      int v16 = 11;
    }
    else if (v15 >= 0x80)
    {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 64);
    }
    else
    {
      int v16 = 2;
    }
    LODWORD(v4) = v16 + v4;
  }
LABEL_37:
  if ((v3 & 0x40) != 0) {
    uint64_t v4 = (v4 + 2);
  }
  else {
    uint64_t v4 = v4;
  }
  if ((v3 & 0x80) != 0)
  {
    uint64_t v17 = *(void *)(a1 + 32);
    if (!v17) {
      uint64_t v17 = *(void *)(qword_10248A6F8 + 32);
    }
    int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008FF6F4(v17, a2);
    int v19 = (int)v18;
    if (v18 >= 0x80) {
      int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
    }
    else {
      int v20 = 1;
    }
    uint64_t v4 = (v4 + v19 + v20 + 1);
    int v3 = *(_DWORD *)(a1 + 64);
  }
LABEL_47:
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0) {
      unsigned int v21 = v4 + 2;
    }
    else {
      unsigned int v21 = v4;
    }
    if ((v3 & 0x200) != 0)
    {
      uint64_t v22 = *(void *)(a1 + 40);
      if (!v22) {
        uint64_t v22 = *(void *)(qword_10248A6F8 + 40);
      }
      int v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008FFBF0(v22, a2);
      int v24 = (int)v23;
      if (v23 >= 0x80) {
        int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23, a2);
      }
      else {
        int v25 = 1;
      }
      v21 += v24 + v25 + 1;
      int v3 = *(_DWORD *)(a1 + 64);
    }
    if ((v3 & 0x400) != 0) {
      uint64_t v4 = v21 + 2;
    }
    else {
      uint64_t v4 = v21;
    }
    if ((v3 & 0x800) != 0)
    {
      uint64_t v26 = *(void *)(a1 + 48);
      if (!v26) {
        uint64_t v26 = *(void *)(qword_10248A6F8 + 48);
      }
      unint64_t v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1009000C4(v26, a2);
      int v29 = (int)v27;
      if (v27 >= 0x80) {
        int v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, v28);
      }
      else {
        int v30 = 1;
      }
      uint64_t v4 = (v4 + v29 + v30 + 1);
    }
  }
  *(_DWORD *)(a1 + 60) = v4;
  return v4;
}

void sub_100901454(uint64_t a1, void *lpsrc)
{
  sub_1009001F4(a1, (uint64_t)lpsrc);
}

uint64_t sub_1009014DC()
{
  return 1;
}

void *sub_1009014E4@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.Is801LocationInd");
}

void sub_1009014F4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 52);
  if (!(_BYTE)v4) {
    return;
  }
  if (*(unsigned char *)(a2 + 52))
  {
    unsigned int v5 = *(_DWORD *)(a2 + 8);
    if (v5 >= 9) {
      sub_101A73A1C();
    }
    *(_DWORD *)(a1 + 52) |= 1u;
    *(_DWORD *)(a1 + 8) = v5;
    int v4 = *(_DWORD *)(a2 + 52);
  }
  if ((v4 & 2) != 0)
  {
    int v7 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 52) |= 2u;
    *(_DWORD *)(a1 + 12) = v7;
    int v4 = *(_DWORD *)(a2 + 52);
    if ((v4 & 4) == 0)
    {
LABEL_9:
      if ((v4 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_21;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_9;
  }
  *(_DWORD *)(a1 + 52) |= 4u;
  int v8 = *(_DWORD **)(a1 + 16);
  if (!v8) {
    operator new();
  }
  uint64_t v9 = *(void *)(a2 + 16);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_10248A700 + 16);
  }
  sub_1008D4334(v8, v9);
  int v4 = *(_DWORD *)(a2 + 52);
  if ((v4 & 8) == 0)
  {
LABEL_10:
    if ((v4 & 0x10) == 0) {
      goto LABEL_11;
    }
LABEL_26:
    *(_DWORD *)(a1 + 52) |= 0x10u;
    uint64_t v12 = *(void *)(a1 + 32);
    if (!v12) {
      operator new();
    }
    uint64_t v13 = *(void *)(a2 + 32);
    if (!v13) {
      uint64_t v13 = *(void *)(qword_10248A700 + 32);
    }
    sub_1009001F4(v12, v13);
    int v4 = *(_DWORD *)(a2 + 52);
    if ((v4 & 0x20) == 0)
    {
LABEL_12:
      if ((v4 & 0x40) == 0) {
        return;
      }
      goto LABEL_13;
    }
    goto LABEL_31;
  }
LABEL_21:
  *(_DWORD *)(a1 + 52) |= 8u;
  uint64_t v10 = *(void *)(a1 + 24);
  if (!v10) {
    operator new();
  }
  uint64_t v11 = *(void *)(a2 + 24);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_10248A700 + 24);
  }
  sub_1008E9E54(v10, v11);
  int v4 = *(_DWORD *)(a2 + 52);
  if ((v4 & 0x10) != 0) {
    goto LABEL_26;
  }
LABEL_11:
  if ((v4 & 0x20) == 0) {
    goto LABEL_12;
  }
LABEL_31:
  unsigned int v14 = *(_DWORD *)(a2 + 40);
  if (v14 >= 4) {
    sub_101A739F0();
  }
  *(_DWORD *)(a1 + 52) |= 0x20u;
  *(_DWORD *)(a1 + 40) = v14;
  if ((*(_DWORD *)(a2 + 52) & 0x40) != 0)
  {
LABEL_13:
    char v6 = *(unsigned char *)(a2 + 44);
    *(_DWORD *)(a1 + 52) |= 0x40u;
    *(unsigned char *)(a1 + 44) = v6;
  }
}

void sub_100901780(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_100901798(void *result)
{
  if ((void *)qword_10248A700 != result)
  {
    int v1 = result;
    uint64_t v2 = result[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[3];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t result = (void *)v1[4];
    if (result)
    {
      int v4 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v4();
    }
  }
  return result;
}

void sub_100901864(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D2BF8;
  sub_100901798(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1009018B8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D2BF8;
  sub_100901798(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

uint64_t sub_100901920(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10248A700;
  if (!qword_10248A700)
  {
    sub_1008C4C78(0, a2, a3, a4);
    return qword_10248A700;
  }
  return result;
}

void sub_100901950()
{
}

uint64_t sub_1009019AC(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(unsigned char *)(result + 52);
  if ((_BYTE)v2)
  {
    *(void *)(result + 8) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t v3 = *(void *)(result + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 24))
        {
          *(void *)(v3 + 8) = 0;
          *(_DWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 24) = 0;
        int v2 = *(_DWORD *)(result + 52);
      }
    }
    if ((v2 & 8) != 0)
    {
      uint64_t result = *(void *)(result + 24);
      if (result)
      {
        uint64_t result = sub_1008EA324(result);
        int v2 = *(_DWORD *)(v1 + 52);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      uint64_t result = *(void *)(v1 + 32);
      if (result) {
        uint64_t result = sub_1009006FC(result);
      }
    }
    *(_DWORD *)(v1 + 40) = 0;
    *(unsigned char *)(v1 + 44) = 0;
  }
  *(_DWORD *)(v1 + 52) = 0;
  return result;
}

uint64_t sub_100901A2C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int v5 = (unsigned int *)(a1 + 12);
  while (2)
  {
    char v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        unsigned int v53 = 0;
        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v53);
          if (!result) {
            return result;
          }
          unsigned int v10 = v53;
        }
        else
        {
          unsigned int v10 = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        if (v10 <= 8)
        {
          *(_DWORD *)(a1 + 52) |= 1u;
          *(_DWORD *)(a1 + 8) = v10;
        }
        int v19 = (unsigned char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        if ((unint64_t)v19 < v11 && *v19 == 16)
        {
          uint64_t v12 = v19 + 1;
          *((void *)this + 1) = v12;
          goto LABEL_35;
        }
        continue;
      case 2u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        uint64_t v12 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
LABEL_35:
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v20 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          *unsigned int v5 = *v12;
          int v20 = v12 + 1;
          *((void *)this + 1) = v20;
        }
        int v13 = *(_DWORD *)(a1 + 52) | 2;
        *(_DWORD *)(a1 + 52) = v13;
        if ((unint64_t)v20 >= v11 || *v20 != 26) {
          continue;
        }
        *((void *)this + 1) = v20 + 1;
LABEL_43:
        *(_DWORD *)(a1 + 52) = v13 | 4;
        unsigned int v21 = *(_DWORD **)(a1 + 16);
        if (!v21) {
          operator new();
        }
        unsigned int v53 = 0;
        uint64_t v22 = (char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v53))return 0; {
        }
          }
        else
        {
          unsigned int v53 = *v22;
          *((void *)this + 1) = v22 + 1;
        }
        int v23 = *((_DWORD *)this + 14);
        int v24 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v23 + 1;
        if (v23 >= v24) {
          return 0;
        }
        int v25 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v53);
        if (!sub_1008D4508(v21, this, v26) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v25);
        int v27 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v27, 1);
        int v29 = v27 - 1;
        if (v29 < 0 == v28) {
          *((_DWORD *)this + 14) = v29;
        }
        int v30 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v30 >= *((void *)this + 2) || *v30 != 34) {
          continue;
        }
        *((void *)this + 1) = v30 + 1;
LABEL_57:
        *(_DWORD *)(a1 + 52) |= 8u;
        uint64_t v31 = *(void *)(a1 + 24);
        if (!v31) {
          operator new();
        }
        unsigned int v53 = 0;
        unsigned int v32 = (char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v53))return 0; {
        }
          }
        else
        {
          unsigned int v53 = *v32;
          *((void *)this + 1) = v32 + 1;
        }
        int v33 = *((_DWORD *)this + 14);
        int v34 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v33 + 1;
        if (v33 >= v34) {
          return 0;
        }
        int v35 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v53);
        if (!sub_1008EA398(v31, this, v36) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v35);
        int v37 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v37, 1);
        int v38 = v37 - 1;
        if (v38 < 0 == v28) {
          *((_DWORD *)this + 14) = v38;
        }
        uint64_t v39 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v39 >= *((void *)this + 2) || *v39 != 42) {
          continue;
        }
        *((void *)this + 1) = v39 + 1;
LABEL_71:
        *(_DWORD *)(a1 + 52) |= 0x10u;
        uint64_t v40 = *(void *)(a1 + 32);
        if (!v40) {
          operator new();
        }
        unsigned int v53 = 0;
        int v41 = (char *)*((void *)this + 1);
        if ((unint64_t)v41 >= *((void *)this + 2) || *v41 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v53))return 0; {
        }
          }
        else
        {
          unsigned int v53 = *v41;
          *((void *)this + 1) = v41 + 1;
        }
        int v42 = *((_DWORD *)this + 14);
        int v43 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v42 + 1;
        if (v42 < v43)
        {
          int v44 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v53);
          if (sub_10090078C(v40, this, v45))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v44);
              int v46 = *((_DWORD *)this + 14);
              BOOL v28 = __OFSUB__(v46, 1);
              int v47 = v46 - 1;
              if (v47 < 0 == v28) {
                *((_DWORD *)this + 14) = v47;
              }
              int v48 = (unsigned char *)*((void *)this + 1);
              unint64_t v14 = *((void *)this + 2);
              if ((unint64_t)v48 < v14 && *v48 == 48)
              {
                unsigned int v15 = v48 + 1;
                *((void *)this + 1) = v15;
LABEL_85:
                unsigned int v53 = 0;
                if ((unint64_t)v15 >= v14 || *v15 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v53);
                  if (!result) {
                    return result;
                  }
                  unsigned int v49 = v53;
                }
                else
                {
                  unsigned int v49 = *v15;
                  *((void *)this + 1) = v15 + 1;
                }
                if (v49 <= 3)
                {
                  *(_DWORD *)(a1 + 52) |= 0x20u;
                  *(_DWORD *)(a1 + 40) = v49;
                }
                unsigned int v50 = (unsigned char *)*((void *)this + 1);
                unint64_t v16 = *((void *)this + 2);
                if ((unint64_t)v50 < v16 && *v50 == 56)
                {
                  uint64_t v17 = v50 + 1;
                  *((void *)this + 1) = v17;
LABEL_95:
                  unsigned int v53 = 0;
                  if ((unint64_t)v17 >= v16 || *v17 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v53);
                    if (!result) {
                      return result;
                    }
                    unsigned int v51 = v53;
                    unsigned int v52 = (unsigned __int8 *)*((void *)this + 1);
                    unint64_t v16 = *((void *)this + 2);
                  }
                  else
                  {
                    unsigned int v51 = *v17;
                    unsigned int v52 = (unsigned __int8 *)(v17 + 1);
                    *((void *)this + 1) = v52;
                  }
                  *(unsigned char *)(a1 + 44) = v51 != 0;
                  *(_DWORD *)(a1 + 52) |= 0x40u;
                  if (v52 == (unsigned __int8 *)v16
                    && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                  {
                    *((_DWORD *)this + 8) = 0;
                    uint64_t result = 1;
                    *((unsigned char *)this + 36) = 1;
                    return result;
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_24;
        }
        int v13 = *(_DWORD *)(a1 + 52);
        goto LABEL_43;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_57;
        }
        goto LABEL_24;
      case 5u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_71;
        }
        goto LABEL_24;
      case 6u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        unsigned int v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_85;
      case 7u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        uint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_95;
      default:
        int v8 = TagFallback & 7;
LABEL_24:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100902094(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 52);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), (int)a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_11:
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10248A700 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_14:
  uint64_t v8 = *(void *)(v5 + 24);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_10248A700 + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_20:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 40), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 52) & 0x40) == 0) {
      return result;
    }
    goto LABEL_21;
  }
LABEL_17:
  uint64_t v9 = *(void *)(v5 + 32);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_10248A700 + 32);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x20) != 0) {
    goto LABEL_20;
  }
LABEL_7:
  if ((v6 & 0x40) == 0) {
    return result;
  }
LABEL_21:
  int v10 = *(unsigned __int8 *)(v5 + 44);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v10, (BOOL)a2, a4);
}

uint64_t sub_1009021C0(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 52);
  if (!(_BYTE)v3)
  {
    uint64_t result = 0;
    goto LABEL_49;
  }
  if (*(unsigned char *)(a1 + 52))
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v6 & 0x80000000) != 0)
    {
      unsigned int v4 = 11;
      if ((v3 & 2) == 0) {
        goto LABEL_17;
      }
    }
    else if (v6 >= 0x80)
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 52);
      if ((v3 & 2) == 0) {
        goto LABEL_17;
      }
    }
    else
    {
      unsigned int v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_17;
      }
    }
  }
  else
  {
    unsigned int v4 = 0;
    if ((*(unsigned char *)(a1 + 52) & 2) == 0) {
      goto LABEL_17;
    }
  }
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if (v7 >= 0x80)
  {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 52);
  }
  else
  {
    int v8 = 2;
  }
  v4 += v8;
LABEL_17:
  if ((v3 & 4) != 0)
  {
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_10248A700 + 16);
    }
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008D47D0(v9, a2);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    }
    else {
      int v12 = 1;
    }
    v4 += v11 + v12 + 1;
    int v3 = *(_DWORD *)(a1 + 52);
    if ((v3 & 8) == 0)
    {
LABEL_19:
      if ((v3 & 0x10) == 0) {
        goto LABEL_20;
      }
LABEL_34:
      uint64_t v17 = *(void *)(a1 + 32);
      if (!v17) {
        uint64_t v17 = *(void *)(qword_10248A700 + 32);
      }
      int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1009011FC(v17, a2);
      int v19 = (int)v18;
      if (v18 >= 0x80) {
        int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
      }
      else {
        int v20 = 1;
      }
      v4 += v19 + v20 + 1;
      int v3 = *(_DWORD *)(a1 + 52);
      if ((v3 & 0x20) == 0) {
        goto LABEL_46;
      }
      goto LABEL_40;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_19;
  }
  uint64_t v13 = *(void *)(a1 + 24);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_10248A700 + 24);
  }
  unint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1008EAC94(v13, a2);
  int v15 = (int)v14;
  if (v14 >= 0x80) {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
  }
  else {
    int v16 = 1;
  }
  v4 += v15 + v16 + 1;
  int v3 = *(_DWORD *)(a1 + 52);
  if ((v3 & 0x10) != 0) {
    goto LABEL_34;
  }
LABEL_20:
  if ((v3 & 0x20) != 0)
  {
LABEL_40:
    unsigned int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
    if ((v21 & 0x80000000) != 0)
    {
      int v22 = 11;
    }
    else if (v21 >= 0x80)
    {
      int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 52);
    }
    else
    {
      int v22 = 2;
    }
    v4 += v22;
  }
LABEL_46:
  if ((v3 & 0x40) != 0) {
    uint64_t result = v4 + 2;
  }
  else {
    uint64_t result = v4;
  }
LABEL_49:
  *(_DWORD *)(a1 + 48) = result;
  return result;
}

void sub_100902390(uint64_t a1, void *lpsrc)
{
  sub_1009014F4(a1, (uint64_t)lpsrc);
}

uint64_t sub_100902418()
{
  return 1;
}

void *sub_100902420@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.MeasurementReportWithEstimate");
}

void sub_100902430(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D2C70;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100902450(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022D2C70;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1009024A4()
{
}

uint64_t sub_1009024F0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        unsigned int v22 = 0;
        uint64_t v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 < v8 && (*v9 & 0x80000000) == 0)
        {
          unsigned int v10 = *v9;
          int v11 = v9 + 1;
          *((void *)this + 1) = v11;
LABEL_23:
          *(unsigned char *)(a1 + 8) = v10 != 0;
          *(_DWORD *)(a1 + 16) |= 1u;
          if ((unint64_t)v11 < v8 && *v11 == 16)
          {
            int v12 = v11 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_26;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
        if (result)
        {
          unsigned int v10 = v22;
          int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
          goto LABEL_23;
        }
        break;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        int v12 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
LABEL_26:
        unsigned int v22 = 0;
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v15 = v22;
          int v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v15 = *v12;
          int v16 = v12 + 1;
          *((void *)this + 1) = v16;
        }
        *(unsigned char *)(a1 + 9) = v15 != 0;
        *(_DWORD *)(a1 + 16) |= 2u;
        if ((unint64_t)v16 >= v8 || *v16 != 24) {
          continue;
        }
        uint64_t v13 = v16 + 1;
        *((void *)this + 1) = v13;
LABEL_34:
        unsigned int v22 = 0;
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v17 = v22;
          int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v17 = *v13;
          int v18 = v13 + 1;
          *((void *)this + 1) = v18;
        }
        *(unsigned char *)(a1 + 10) = v17 != 0;
        *(_DWORD *)(a1 + 16) |= 4u;
        if ((unint64_t)v18 >= v8 || *v18 != 32) {
          continue;
        }
        unint64_t v14 = v18 + 1;
        *((void *)this + 1) = v14;
LABEL_42:
        unsigned int v22 = 0;
        if ((unint64_t)v14 >= v8 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v19 = v22;
          int v20 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v19 = *v14;
          int v20 = (unsigned __int8 *)(v14 + 1);
          *((void *)this + 1) = v20;
        }
        *(unsigned char *)(a1 + 11) = v19 != 0;
        *(_DWORD *)(a1 + 16) |= 8u;
        if (v20 != (unsigned __int8 *)v8 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_34;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        unint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_42;
      default:
        int v7 = TagFallback & 7;
LABEL_17:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_1009027D8(uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 16);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 16);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), a2, a4);
      if ((*(_DWORD *)(v5 + 16) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), a2, a4);
  int v6 = *(_DWORD *)(v5 + 16);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  int v7 = *(unsigned __int8 *)(v5 + 11);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
}

uint64_t sub_100902880(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  unsigned int v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0) {
    v2 += 2;
  }
  if ((v1 & 4) != 0) {
    v2 += 2;
  }
  if ((v1 & 8) != 0) {
    v2 += 2;
  }
  if (*(_DWORD *)(a1 + 16)) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  *(_DWORD *)(a1 + 12) = v3;
  return v3;
}

void sub_1009028C0(uint64_t a1, unsigned char *lpsrc)
{
  sub_1008FB058(a1, lpsrc);
}

uint64_t sub_100902948()
{
  return 1;
}

void *sub_100902950@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "proto.gnss.Emergency.Cdma1xContext");
}

void sub_100902960(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *a1, uint64_t a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, *(_DWORD *)(a2 + 8) + *((_DWORD *)a1 + 2));
  if (*(int *)(a2 + 8) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)a2 + 8 * v4);
      int v6 = *((_DWORD *)a1 + 3);
      uint64_t v7 = *((int *)a1 + 2);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)a1 + 4))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, v6 + 1);
          int v6 = *((_DWORD *)a1 + 3);
        }
        *((_DWORD *)a1 + 3) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *(void *)a1;
      *((_DWORD *)a1 + 2) = v7 + 1;
      sub_1008CCC08(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 8));
  }
}

void *sub_100902A80(void *a1, uint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  sub_10090326C((uint64_t)(a1 + 3), a2);
  return a1;
}

void sub_100902AB4(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100902AD4(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_101014448(a2, a3);
  int v6 = *a1;
  uint64_t v5 = a1[1];
  if (*a1 != v5)
  {
    while (*v6 != result)
    {
      v6 += 5;
      if (v6 == v5) {
        return result;
      }
    }
  }
  if (v6 != v5)
  {
    uint64_t result = sub_100902B6C((uint64_t)a1, 0, v6);
    uint64_t v7 = a1[1];
    int64_t v8 = (char *)v7 - (char *)(v6 + 5);
    if (v7 != v6 + 5) {
      uint64_t result = (uint64_t)memmove(v6, v6 + 5, (char *)v7 - (char *)(v6 + 5));
    }
    a1[1] = (uint64_t *)((char *)v6 + v8);
  }
  return result;
}

uint64_t sub_100902B6C(uint64_t result, int a2, uint64_t *a3)
{
  if (*(void *)(result + 48))
  {
    uint64_t v3 = result;
    uint64_t v7 = 0;
    if (a2) {
      uint64_t v4 = 20;
    }
    else {
      uint64_t v4 = 21;
    }
    memset(v6, 0, sizeof(v6));
    sub_100903020(v4, *a3, a3[1], a3[2], a3[3], (uint64_t)v6);
    uint64_t v5 = *(void *)(v3 + 48);
    if (!v5) {
      sub_10015E48C();
    }
    return (*(uint64_t (**)(uint64_t, _OWORD *))(*(void *)v5 + 48))(v5, v6);
  }
  return result;
}

void sub_100902C40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_101014448(a2, a3);
  int v12 = *(char **)a1;
  int v11 = *(char **)(a1 + 8);
  if (*(char **)a1 != v11)
  {
    while (*(void *)v12 != v10)
    {
      v12 += 40;
      if (v12 == v11) {
        goto LABEL_9;
      }
    }
  }
  if (v12 == v11)
  {
LABEL_9:
    sub_100902D40(a1);
  }
  else
  {
    int64_t v13 = v11 - (v12 + 40);
    if (v11 != v12 + 40) {
      memmove(v12, v12 + 40, v11 - (v12 + 40));
    }
    *(void *)(a1 + 8) = &v12[v13];
    sub_100902D40(a1);
    sub_100902D98((void **)a1, a2, a3, a4, a5, (uint64_t)v14);
  }
}

uint64_t sub_100902D40(uint64_t result)
{
  uint64_t v1 = (uint64_t **)result;
  unsigned int v2 = *(uint64_t **)result;
  uint64_t v3 = *(uint64_t **)(result + 8);
  if (*(uint64_t **)result != v3)
  {
    do
    {
      uint64_t result = sub_100902B6C((uint64_t)v1, 0, v2);
      v2 += 5;
    }
    while (v2 != v3);
    unsigned int v2 = *v1;
  }
  v1[1] = v2;
  return result;
}

void sub_100902D98(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(void *)a6 = sub_101014448(a2, a3);
  *(void *)(a6 + 8) = a3;
  *(void *)(a6 + 16) = a4;
  *(void *)(a6 + 24) = a5;
  *(CFAbsoluteTime *)(a6 + 32) = CFAbsoluteTimeGetCurrent();
  int v11 = (char *)a1[2];
  int v12 = (char *)a1[1];
  if (v12 >= v11)
  {
    unint64_t v15 = 0xCCCCCCCCCCCCCCCDLL * ((v12 - (unsigned char *)*a1) >> 3);
    unint64_t v16 = v15 + 1;
    if (v15 + 1 > 0x666666666666666) {
      sub_1001D7FD4();
    }
    unint64_t v17 = 0xCCCCCCCCCCCCCCCDLL * ((v11 - (unsigned char *)*a1) >> 3);
    if (2 * v17 > v16) {
      unint64_t v16 = 2 * v17;
    }
    if (v17 >= 0x333333333333333) {
      unint64_t v18 = 0x666666666666666;
    }
    else {
      unint64_t v18 = v16;
    }
    if (v18) {
      unsigned int v19 = (char *)sub_1002E5328((uint64_t)(a1 + 2), v18);
    }
    else {
      unsigned int v19 = 0;
    }
    int v20 = &v19[40 * v15];
    unsigned int v21 = &v19[40 * v18];
    long long v22 = *(_OWORD *)(a6 + 16);
    *(_OWORD *)int v20 = *(_OWORD *)a6;
    *((_OWORD *)v20 + 1) = v22;
    *((void *)v20 + 4) = *(void *)(a6 + 32);
    unint64_t v14 = v20 + 40;
    int v24 = (char *)*a1;
    int v23 = (char *)a1[1];
    if (v23 != *a1)
    {
      do
      {
        long long v25 = *(_OWORD *)(v23 - 40);
        long long v26 = *(_OWORD *)(v23 - 24);
        *((void *)v20 - 1) = *((void *)v23 - 1);
        *(_OWORD *)(v20 - 24) = v26;
        *(_OWORD *)(v20 - 40) = v25;
        v20 -= 40;
        v23 -= 40;
      }
      while (v23 != v24);
      int v23 = (char *)*a1;
    }
    *a1 = v20;
    a1[1] = v14;
    a1[2] = v21;
    if (v23) {
      operator delete(v23);
    }
  }
  else
  {
    long long v13 = *(_OWORD *)(a6 + 16);
    *(_OWORD *)int v12 = *(_OWORD *)a6;
    *((_OWORD *)v12 + 1) = v13;
    *((void *)v12 + 4) = *(void *)(a6 + 32);
    unint64_t v14 = v12 + 40;
  }
  a1[1] = v14;
}

double sub_100902EFC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_101014448(a2, a3);
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  if (*a1 != v6)
  {
    while (*(void *)v5 != v4)
    {
      v5 += 40;
      if (v5 == v6) {
        return -1.0;
      }
    }
  }
  if (v5 == v6) {
    return -1.0;
  }
  else {
    return *(double *)(v5 + 32);
  }
}

uint64_t sub_100902F64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = sub_101014448(a2, a3);
  int v11 = *(void **)a1;
  int v12 = *(void **)(a1 + 8);
  if (*(void **)a1 != v12)
  {
    while (*v11 != result)
    {
      v11 += 5;
      if (v11 == v12) {
        goto LABEL_6;
      }
    }
  }
  if (v11 == v12)
  {
LABEL_6:
    sub_100902D98((void **)a1, a2, a3, a4, a5, (uint64_t)v13);
    return sub_100902B6C(a1, 1, v13);
  }
  return result;
}

void *sub_100903014(void *result)
{
  result[1] = *result;
  return result;
}

void sub_100903020(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(void *)(a6 + 224) = 0;
  *(_OWORD *)(a6 + 192) = 0u;
  *(_OWORD *)(a6 + 208) = 0u;
  *(_OWORD *)(a6 + 160) = 0u;
  *(_OWORD *)(a6 + 176) = 0u;
  *(_OWORD *)(a6 + 128) = 0u;
  *(_OWORD *)(a6 + 144) = 0u;
  *(_OWORD *)(a6 + 96) = 0u;
  *(_OWORD *)(a6 + 112) = 0u;
  *(_OWORD *)(a6 + 64) = 0u;
  *(_OWORD *)(a6 + 80) = 0u;
  *(_OWORD *)(a6 + 32) = 0u;
  *(_OWORD *)(a6 + 48) = 0u;
  *(_OWORD *)a6 = 0u;
  *(_OWORD *)(a6 + 16) = 0u;
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  *(CFAbsoluteTime *)a6 = Current;
  *(CFAbsoluteTime *)(a6 + 8) = Current;
  *(CFAbsoluteTime *)(a6 + 24) = Current;
  *(void *)(a6 + 112) = a2;
  *(void *)(a6 + 120) = a3;
  *(void *)(a6 + 128) = a4;
  *(void *)(a6 + 136) = a5;
  if ((a1 & 0xFFFFFFFFFFFFFFFELL) == 0x14)
  {
    *(void *)(a6 + 16) = a1;
  }
  else
  {
    *(void *)(a6 + 16) = 23;
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022D35C0);
    }
    long long v13 = qword_1024191C8;
    if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134217984;
      uint64_t v16 = a1;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_FAULT, "Unsupported event type passed to prewarm manager %lu, sending out a null event", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024191C0 != -1) {
        dispatch_once(&qword_1024191C0, &stru_1022D35C0);
      }
      unint64_t v14 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "static CLMotionStateMediator_Type::WorkoutEvent CLWorkoutUtil::PrewarmManager::createPrewarmWorkoutEvent(CMWorkoutEvent, CMWorkoutType, CMWorkoutLocationType, CLMotionStateMediator_Type::WorkoutAttrib)", "%s\n", v14);
      if (v14 != (char *)buf) {
        free(v14);
      }
    }
  }
}

void sub_10090323C(id a1)
{
  qword_1024191C8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Workout");
}

uint64_t sub_10090326C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_100903304(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v5 = (void *)sub_100054C14(a1, a2, a3, a4, a5);
  *uint64_t v5 = off_1022D35F0;
  v5[6] = 0;
  sub_100D5EF54();
}

void sub_1009033E0(_Unwind_Exception *a1)
{
  uint64_t v3 = *(void *)(v1 + 48);
  *(void *)(v1 + 48) = 0;
  if (v3) {
    sub_101A6A9C8(v3);
  }
  sub_100029A7C(v1);
  _Unwind_Resume(a1);
}

void sub_100903404(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 8), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022D3670);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    int64_t v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLSkiDataSubscription::onSkiNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022D3670);
    }
    uint64_t v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      unint64_t v15 = "";
      __int16 v16 = 2082;
      unint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLSkiDataSubscription::onSkiNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_100904594(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1009035C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1009035E4(void *a1)
{
  *a1 = off_1022D35F0;
  uint64_t v2 = a1[6];
  a1[6] = 0;
  if (v2)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    uint64_t v3 = a1[6];
    a1[6] = 0;
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
  }

  return sub_100029A7C((uint64_t)a1);
}

void sub_100903698(void *a1)
{
  sub_1009035E4(a1);

  operator delete();
}

void *sub_1009036D0@<X0>(uint64_t a1@<X8>)
{
  v6[0] = off_1022D36C0;
  v6[1] = sub_100903920;
  v6[2] = 0;
  v6[3] = v6;
  sub_100134750(v7, "kCLConnectionMessageSkiDataUpdate");
  sub_100904CB4((uint64_t)&v8, (uint64_t)v6);
  v5[0] = off_1022D3770;
  v5[1] = sub_100903D34;
  v5[2] = 0;
  v5[3] = v5;
  sub_100134750(v9, "kCLConnectionMessageSkiDataQuery");
  sub_100904CB4((uint64_t)&v10, (uint64_t)v5);
  v4[0] = off_1022D36C0;
  v4[1] = sub_10090412C;
  _DWORD v4[2] = 0;
  v4[3] = v4;
  sub_100134750(v11, "kCLConnectionMessageSkiDataLiveUpdate");
  sub_100904CB4((uint64_t)v12, (uint64_t)v4);
  sub_100905324(a1, (unsigned __int8 *)v7, 3);
  for (uint64_t i = 0; i != -21; i -= 7)
  {
    sub_10090510C(&v12[i * 8]);
    if (SHIBYTE(v11[i + 2]) < 0) {
      operator delete((void *)v11[i]);
    }
  }
  sub_10090510C(v4);
  sub_10090510C(v5);
  return sub_10090510C(v6);
}

void sub_100903898(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  for (uint64_t i = 112; i != -56; i -= 56)
    sub_100904558((uint64_t)(&a21 + i));
  sub_10090510C(&a9);
  sub_10090510C(&a13);
  sub_10090510C(&a17);
  _Unwind_Resume(a1);
}

void sub_100903920(uint64_t a1, int a2)
{
  id v4 = objc_alloc_init((Class)NSAutoreleasePool);
  if (qword_102419180 != -1) {
    dispatch_once(&qword_102419180, &stru_1022D3690);
  }
  uint64_t v5 = qword_102419188;
  if (os_log_type_enabled((os_log_t)qword_102419188, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 24);
    *(_DWORD *)uint64_t buf = 138412802;
    *(void *)&uint8_t buf[4] = v6;
    __int16 v24 = 2048;
    uint64_t v25 = a1;
    __int16 v26 = 1024;
    int v27 = a2;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "SkiData subscription changed, %@, %p, %d", buf, 0x1Cu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419180 != -1) {
      dispatch_once(&qword_102419180, &stru_1022D3690);
    }
    uint64_t v12 = *(void *)(a1 + 24);
    int v17 = 138412802;
    uint64_t v18 = v12;
    __int16 v19 = 2048;
    uint64_t v20 = a1;
    __int16 v21 = 1024;
    int v22 = a2;
    int v13 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLSkiDataSubscription::handleRequestSkiDataUpdate(BOOL, const CLNameValuePair &)", "%s\n", v13);
    if (v13 != buf) {
      free(v13);
    }
  }
  if (sub_1010A4D14(a1))
  {
    if ((sub_1000A16E8() & 0x400000000) != 0)
    {
      sub_10009C834(a1);
      uint64_t v9 = *(void *)(a1 + 48);
      uint64_t v11 = *(void *)(v9 + 8);
      uint64_t v10 = *(void **)(v9 + 16);
      if (a2) {
        [v10 register:v11 forNotification:0 registrationInfo:0];
      }
      else {
        [v10 unregister:v11 forNotification:0];
      }
      goto LABEL_16;
    }
    uint64_t v7 = 109;
  }
  else
  {
    uint64_t v7 = 111;
  }
  if (qword_102419180 != -1) {
    dispatch_once(&qword_102419180, &stru_1022D3690);
  }
  uint64_t v8 = qword_102419188;
  if (os_log_type_enabled((os_log_t)qword_102419188, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#Warning Failed to subscribe to ski updates.", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419180 != -1) {
      dispatch_once(&qword_102419180, &stru_1022D3690);
    }
    LOWORD(v17) = 0;
    __int16 v14 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLSkiDataSubscription::handleRequestSkiDataUpdate(BOOL, const CLNameValuePair &)", "%s\n", v14);
    if (v14 != buf) {
      free(v14);
    }
  }
  uint64_t v15 = CMErrorMessage;
  __int16 v16 = +[NSNumber numberWithUnsignedInt:v7];
  *(void *)uint64_t buf = +[NSDictionary dictionaryWithObjects:&v16 forKeys:&v15 count:1];
  sub_100904894(a1);
LABEL_16:
}

void sub_100903CF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100903D34(uint64_t a1, uint64_t a2)
{
  id v4 = objc_alloc_init((Class)NSAutoreleasePool);
  if (!sub_1010A4D14(a1))
  {
    uint64_t v5 = 111;
    goto LABEL_5;
  }
  if ((sub_1000A16E8() & 0x400000000) == 0)
  {
    uint64_t v5 = 109;
LABEL_5:
    uint64_t v34 = CMErrorMessage;
    int v35 = +[NSNumber numberWithUnsignedInt:v5];
    +[NSDictionary dictionaryWithObjects:&v35 forKeys:&v34 count:1];
    CLConnectionMessage::sendReply();
    goto LABEL_6;
  }
  uint64_t v6 = objc_opt_class();
  uint64_t v7 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", v6, objc_opt_class(), 0);
  DictionaryOfClasses = (void *)CLConnectionMessage::getDictionaryOfClasses(*(CLConnectionMessage **)a2, v7);
  uint64_t v9 = DictionaryOfClasses;
  if (DictionaryOfClasses
    && (uint64_t v10 = CMSkiKeyDataRecord, [DictionaryOfClasses objectForKeyedSubscript:CMSkiKeyDataRecord]))
  {
    sub_1000E1294((uint64_t *)v15, (uint64_t)"CLDaemonClient.SkiNotifierQuery", 0);
    [objc_msgSend(v9, "objectForKeyedSubscript:", v10) convertToSkiEntry:buf];
    uint64_t v11 = *(void **)(*(void *)(a1 + 48) + 16);
    v25[2] = v30;
    v25[3] = v31;
    v25[4] = v32;
    v25[5] = v33;
    v25[0] = *(_OWORD *)buf;
    v25[1] = v29;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3321888768;
    v16[2] = sub_100904928;
    v16[3] = &unk_1022D3610;
    long long v17 = *(_OWORD *)buf;
    long long v18 = v29;
    long long v21 = v32;
    long long v22 = v33;
    long long v19 = v30;
    long long v20 = v31;
    uint64_t v12 = *(std::__shared_weak_count **)(a2 + 8);
    int v23 = *(CLConnectionMessage **)a2;
    __int16 v24 = v12;
    if (v12) {
      atomic_fetch_add_explicit(&v12->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    [v11 queryUsingRecord:v25 withReply:v16];
    if (v24) {
      sub_1000DB0A0(v24);
    }
    sub_1000E1098(v15);
  }
  else
  {
    if (qword_102419180 != -1) {
      dispatch_once(&qword_102419180, &stru_1022D3690);
    }
    int v13 = qword_102419188;
    if (os_log_type_enabled((os_log_t)qword_102419188, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_FAULT, "Programmer error: Wrong parameters were passed.", buf, 2u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419180 != -1) {
        dispatch_once(&qword_102419180, &stru_1022D3690);
      }
      LOWORD(v15[0]) = 0;
      __int16 v14 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "void CLSkiDataSubscription::handleMessageSkiDataQuery(std::shared_ptr<CLConnectionMessage>)", "%s\n", v14);
      if (v14 != (char *)buf) {
        free(v14);
      }
    }
    uint64_t v26 = CMErrorMessage;
    int v27 = &off_102392C00;
    +[NSDictionary dictionaryWithObjects:&v27 forKeys:&v26 count:1];
    CLConnectionMessage::sendReply();
  }
LABEL_6:
}

void sub_1009040D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10090412C(uint64_t a1, int a2)
{
  id v4 = objc_alloc_init((Class)NSAutoreleasePool);
  if (qword_102419180 != -1) {
    dispatch_once(&qword_102419180, &stru_1022D3690);
  }
  uint64_t v5 = qword_102419188;
  if (os_log_type_enabled((os_log_t)qword_102419188, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 24);
    *(_DWORD *)uint64_t buf = 138412802;
    *(void *)&uint8_t buf[4] = v6;
    __int16 v24 = 2048;
    uint64_t v25 = a1;
    __int16 v26 = 1024;
    int v27 = a2;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "[live data] subscription changed, %@, %p, %d", buf, 0x1Cu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419180 != -1) {
      dispatch_once(&qword_102419180, &stru_1022D3690);
    }
    uint64_t v12 = *(void *)(a1 + 24);
    int v17 = 138412802;
    uint64_t v18 = v12;
    __int16 v19 = 2048;
    uint64_t v20 = a1;
    __int16 v21 = 1024;
    int v22 = a2;
    int v13 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLSkiDataSubscription::handleRequestLiveSkiDataUpdate(BOOL, const CLNameValuePair &)", "%s\n", v13);
    if (v13 != buf) {
      free(v13);
    }
  }
  if (sub_1010A4D14(a1))
  {
    if ((sub_1000A16E8() & 0x400000000) != 0)
    {
      sub_10009C834(a1);
      uint64_t v9 = *(void *)(a1 + 48);
      uint64_t v11 = *(void *)(v9 + 8);
      uint64_t v10 = *(void **)(v9 + 16);
      if (a2) {
        [v10 register:v11 forNotification:2 registrationInfo:0];
      }
      else {
        [v10 unregister:v11 forNotification:2];
      }
      goto LABEL_16;
    }
    uint64_t v7 = 109;
  }
  else
  {
    uint64_t v7 = 111;
  }
  if (qword_102419180 != -1) {
    dispatch_once(&qword_102419180, &stru_1022D3690);
  }
  uint64_t v8 = qword_102419188;
  if (os_log_type_enabled((os_log_t)qword_102419188, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)uint64_t buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v7;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "[live data] Failed to subscribe to live updates due to error %d", buf, 8u);
  }
  if (sub_10013D1A0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419180 != -1) {
      dispatch_once(&qword_102419180, &stru_1022D3690);
    }
    int v17 = 67109120;
    LODWORD(v18) = v7;
    __int16 v14 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "void CLSkiDataSubscription::handleRequestLiveSkiDataUpdate(BOOL, const CLNameValuePair &)", "%s\n", v14);
    if (v14 != buf) {
      free(v14);
    }
  }
  uint64_t v15 = CMErrorMessage;
  __int16 v16 = +[NSNumber numberWithUnsignedInt:v7];
  *(void *)uint64_t buf = +[NSDictionary dictionaryWithObjects:&v16 forKeys:&v15 count:1];
  sub_100904BF0(a1);
LABEL_16:
}

void sub_100904518(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100904558(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_100904594(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  if (*a3 == 2)
  {
    sub_100134750(&__p, "kCLConnectionMessageSkiDataLiveUpdate");
    char v8 = sub_10012E364(a1);
    char v9 = v8;
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v9 & 1) == 0) {
        return;
      }
    }
    else if ((v8 & 1) == 0)
    {
      return;
    }
    id v10 = [objc_alloc((Class)CMLiveSkiData) initWithDate:[objc_alloc((Class)NSDate) initWithTimeIntervalSinceReferenceDate:*(double *)a4] distance:*(unsigned int *)(a4 + 32) averageSpeed:*(double *)(a4 + 8) verticalDescent:*(double *)(a4 + 16) runCount:*(double *)(a4 + 24) maximumSpeed:*(double *)(a4 + 40)];
    uint64_t v13 = CMSkiKeyDataRecord;
    id v14 = v10;
    std::string __p = +[NSDictionary dictionaryWithObjects:&v14 forKeys:&v13 count:1];
    sub_100904810(a1);

    return;
  }
  if (!*a3)
  {
    id v6 = [objc_alloc((Class)CMSkiData) initWithSkiEntry:a4];
    if (v6)
    {
      uint64_t v7 = v6;
      id v15 = v6;
      uint64_t v16 = CMSkiKeyDataArray;
      int v17 = +[NSArray arrayWithObjects:&v15 count:1];
      std::string __p = +[NSDictionary dictionaryWithObjects:&v17 forKeys:&v16 count:1];

      sub_10090478C(a1);
    }
  }
}

void sub_100904768(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10090478C(uint64_t a1)
{
  sub_1000E9420(&off_1022D37E0, &v2);
  sub_1000E956C(a1, &v2);
  if (v3) {
    sub_1000DB0A0(v3);
  }
}

void sub_1009047F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  if (a11) {
    sub_1000DB0A0(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_100904810(uint64_t a1)
{
  sub_10048C758(&off_1022D37E8, &v2);
  sub_1000E956C(a1, &v2);
  if (v3) {
    sub_1000DB0A0(v3);
  }
}

void sub_10090487C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  if (a11) {
    sub_1000DB0A0(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_100904894(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  sub_10048C758(&off_1022D37E0, &v2);
  (*(void (**)(uint64_t, uint64_t *, void))(*(void *)v1 + 24))(v1, &v2, 0);
  if (v3) {
    sub_1000DB0A0(v3);
  }
}

void sub_100904910(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  if (a11) {
    sub_1000DB0A0(a11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100904928(uint64_t a1, void *a2)
{
  if (a2) {
    id v4 = a2;
  }
  else {
    id v4 = &__NSArray0__struct;
  }
  uint64_t v19 = CMSkiKeyDataArray;
  uint64_t v20 = v4;
  +[NSDictionary dictionaryWithObjects:&v20 forKeys:&v19 count:1];
  memset(out, 0, 37);
  memset(v17, 0, 37);
  uuid_unparse((const unsigned __int8 *)(a1 + 56), out);
  uuid_unparse((const unsigned __int8 *)(a1 + 40), v17);
  if (qword_102419180 != -1) {
    dispatch_once(&qword_102419180, &stru_1022D3690);
  }
  uint64_t v5 = qword_102419188;
  if (os_log_type_enabled((os_log_t)qword_102419188, OS_LOG_TYPE_INFO))
  {
    uint64_t v6 = *(void *)(a1 + 32);
    *(_DWORD *)uint64_t buf = 134218754;
    uint64_t v10 = v6;
    __int16 v11 = 2080;
    char v12 = out;
    __int16 v13 = 2080;
    id v14 = v17;
    __int16 v15 = 2048;
    id v16 = [a2 count];
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Query: id, %llu, session, %s, source, %s, count: %lu", buf, 0x2Au);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419180 != -1) {
      dispatch_once(&qword_102419180, &stru_1022D3690);
    }
    [a2 count];
    char v8 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLSkiDataSubscription::handleMessageSkiDataQuery(std::shared_ptr<CLConnectionMessage>)_block_invoke", "%s\n", v8);
    if (v8 != (char *)buf) {
      free(v8);
    }
  }
  return CLConnectionMessage::sendReply();
}

uint64_t sub_100904BC4(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 136);
  *(void *)(result + 128) = *(void *)(a2 + 128);
  *(void *)(result + 136) = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_100904BE0(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 136);
  if (v1) {
    sub_1000DB0A0(v1);
  }
}

void sub_100904BF0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  sub_10048C758(&off_1022D37E8, &v2);
  (*(void (**)(uint64_t, uint64_t *, void))(*(void *)v1 + 24))(v1, &v2, 0);
  if (v3) {
    sub_1000DB0A0(v3);
  }
}

void sub_100904C6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  if (a11) {
    sub_1000DB0A0(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_100904C84(id a1)
{
  qword_102419588 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

uint64_t sub_100904CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(*(void *)*v3 + 24))(*v3, a1);
      return a1;
    }
    *(void *)(a1 + 24) = v4;
  }
  else
  {
    uint64_t v3 = (void *)(a1 + 24);
  }
  *uint64_t v3 = 0;
  return a1;
}

void sub_100904D34(id a1)
{
  qword_102419188 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Skiing");
}

__n128 sub_100904D64(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x18uLL);
  *(void *)uint64_t v2 = off_1022D36C0;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_100904DB0(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = off_1022D36C0;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_100904DE0(uint64_t a1, uint64_t a2, long long *a3)
{
}

uint64_t sub_100904DE8(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100904E28()
{
}

void sub_100904E34(uint64_t a1, uint64_t a2, long long *a3)
{
  long long v3 = *a3;
  *(void *)a3 = 0;
  *((void *)a3 + 1) = 0;
  sub_100904E90(a1, a2, (CLConnectionMessage **)&v3);
  if (*((void *)&v3 + 1)) {
    sub_1000DB0A0(*((std::__shared_weak_count **)&v3 + 1));
  }
}

void sub_100904E78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1000DB0A0(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100904E90(uint64_t a1, uint64_t a2, CLConnectionMessage **a3)
{
  uint64_t v6 = (NSSet *)(*(uint64_t (**)(uint64_t))(*(void *)a2 + 16))(a2);
  CFDictionaryRef DictionaryOfClasses = (const __CFDictionary *)CLConnectionMessage::getDictionaryOfClasses(*a3, v6);
  sub_10013FA80((int)v15, DictionaryOfClasses);
  BOOL v14 = 0;
  if (sub_1000D2988((uint64_t)v15, "kCLConnectionMessageSubscribeKey", &v14))
  {
    char v8 = *(void (**)(void *, BOOL, uint8_t *))a1;
    uint64_t v9 = *(void *)(a1 + 8);
    uint64_t v10 = (void *)(a2 + (v9 >> 1));
    if (v9) {
      char v8 = *(void (**)(void *, BOOL, uint8_t *))(*v10 + v8);
    }
    v8(v10, v14, v15);
  }
  else
  {
    if (qword_102419520 != -1) {
      dispatch_once(&qword_102419520, &stru_1022D3730);
    }
    __int16 v11 = qword_102419528;
    if (os_log_type_enabled((os_log_t)qword_102419528, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      int v17 = 0;
      __int16 v18 = 2082;
      uint64_t v19 = "";
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"Couldn't get value for kCLConnectionMessageSubscribeKey key\"}", buf, 0x12u);
      if (qword_102419520 != -1) {
        dispatch_once(&qword_102419520, &stru_1022D3730);
      }
    }
    char v12 = qword_102419528;
    if (os_signpost_enabled((os_log_t)qword_102419528))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      int v17 = 0;
      __int16 v18 = 2082;
      uint64_t v19 = "";
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v12, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Couldn't get value for kCLConnectionMessageSubscribeKey key", "{\"msg%{public}.0s\":\"Couldn't get value for kCLConnectionMessageSubscribeKey key\"}", buf, 0x12u);
    }
  }
  return sub_10013F3C4(v15);
}

void sub_1009050C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
}

void sub_1009050DC(id a1)
{
  qword_102419528 = (uint64_t)os_log_create("com.apple.locationd.Core", "Client");
}

void *sub_10090510C(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

__n128 sub_100905190(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x18uLL);
  *(void *)uint64_t v2 = off_1022D3770;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_1009051DC(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = off_1022D3770;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_10090520C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
}

uint64_t sub_100905214(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100905254()
{
}

void sub_100905260(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  uint64_t v4 = (std::__shared_weak_count *)a3[1];
  *a3 = 0;
  a3[1] = 0;
  uint64_t v5 = *(void (**)(void *, uint64_t *))a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = (void *)(a2 + (v6 >> 1));
  if (v6) {
    uint64_t v5 = *(void (**)(void *, uint64_t *))(*v7 + v5);
  }
  uint64_t v8 = v3;
  uint64_t v9 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  v5(v7, &v8);
  if (v9) {
    sub_1000DB0A0(v9);
  }
  if (v4) {
    sub_1000DB0A0(v4);
  }
}

void sub_100905300(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1000DB0A0(a10);
  }
  if (v10) {
    sub_1000DB0A0(v10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100905324(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  if (a3)
  {
    uint64_t v5 = 56 * a3;
    do
    {
      sub_1009053A0(a1, a2, (long long *)a2);
      a2 += 56;
      v5 -= 56;
    }
    while (v5);
  }
  return a1;
}

void sub_10090538C(_Unwind_Exception *a1)
{
  sub_100905854(v1);
  _Unwind_Resume(a1);
}

unsigned __int8 *sub_1009053A0(uint64_t a1, unsigned __int8 *a2, long long *a3)
{
  uint64_t v7 = (void *)(a1 + 24);
  unint64_t v8 = sub_100103388(a1 + 24, (uint64_t)a2);
  unint64_t v9 = v8;
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    unint64_t v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v3 = v8;
      if (v8 >= v10) {
        unint64_t v3 = v8 % v10;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v8;
    }
    __int16 v13 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v3);
    if (v13)
    {
      for (uint64_t i = *v13; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v15 = *((void *)i + 1);
        if (v15 == v9)
        {
          if (sub_100103744(a1 + 32, i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v12 > 1)
          {
            if (v15 >= v10) {
              v15 %= v10;
            }
          }
          else
          {
            v15 &= v10 - 1;
          }
          if (v15 != v3) {
            break;
          }
        }
      }
    }
  }
  sub_100905624(a1, v9, a3, (uint64_t)v25);
  float v16 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v17 = *(float *)(a1 + 32);
  if (!v10 || (float)(v17 * (float)v10) < v16)
  {
    BOOL v18 = 1;
    if (v10 >= 3) {
      BOOL v18 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v19 = v18 | (2 * v10);
    unint64_t v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20) {
      size_t v21 = v20;
    }
    else {
      size_t v21 = v19;
    }
    sub_100100330(a1, v21);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
      else {
        unint64_t v3 = v9;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v9;
    }
  }
  int v22 = *(void **)(*(void *)a1 + 8 * v3);
  if (v22)
  {
    *(void *)v25[0] = *v22;
    *int v22 = v25[0];
  }
  else
  {
    *(void *)v25[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v25[0];
    *(void *)(*(void *)a1 + 8 * v3) = a1 + 16;
    if (*(void *)v25[0])
    {
      unint64_t v23 = *(void *)(*(void *)v25[0] + 8);
      if ((v10 & (v10 - 1)) != 0)
      {
        if (v23 >= v10) {
          v23 %= v10;
        }
      }
      else
      {
        v23 &= v10 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v23) = v25[0];
    }
  }
  uint64_t i = (unsigned __int8 *)v25[0];
  v25[0] = 0;
  ++*v7;
  sub_1009057AC((uint64_t)v25, 0);
  return i;
}

void sub_10090560C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1009057AC((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

void *sub_100905624@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  unint64_t v8 = operator new(0x48uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(unsigned char *)(a4 + 16) = 0;
  *unint64_t v8 = 0;
  v8[1] = a2;
  __n128 result = sub_10090569C(v8 + 2, a3);
  *(unsigned char *)(a4 + 16) = 1;
  return result;
}

void sub_100905684(_Unwind_Exception *a1)
{
  sub_1009057AC(v1, 0);
  _Unwind_Resume(a1);
}

void *sub_10090569C(void *__dst, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000DC48C(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)long long __dst = v4;
  }
  sub_100905714((uint64_t)(__dst + 3), (uint64_t)a2 + 24);
  return __dst;
}

void sub_1009056F8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100905714(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_1009057AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_100905804((uint64_t)v2 + 16);
    }
    operator delete(v2);
  }
}

void sub_100905804(uint64_t a1)
{
  sub_10090510C((void *)(a1 + 24));
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v2 = *(void **)a1;
    operator delete(v2);
  }
}

uint64_t sub_100905854(uint64_t a1)
{
  sub_100905890(a1, *(void **)(a1 + 16));
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void sub_100905890(uint64_t a1, void *a2)
{
  if (a2)
  {
    uint64_t v2 = a2;
    do
    {
      uint64_t v3 = (void *)*v2;
      sub_100905804((uint64_t)(v2 + 2));
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
}

uint64_t sub_1009058D4()
{
  sub_100134750(qword_10247EDD0, "VO2MaxPowerBudgetEstimatorLastExtendedBudgetAllotmentReason");

  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247EDD0, (void *)&_mh_execute_header);
}

void sub_100905C80(uint64_t a1, int a2)
{
  if (a2)
  {
    if (qword_102419520 != -1) {
      dispatch_once(&qword_102419520, &stru_1022D37F0);
    }
    uint64_t v3 = qword_102419528;
    if (os_log_type_enabled((os_log_t)qword_102419528, OS_LOG_TYPE_INFO))
    {
      id v4 = [*(id *)(*(void *)(a1 + 32) + 24) UTF8String];
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 16);
      *(_DWORD *)uint64_t buf = 136446466;
      id v22 = v4;
      __int16 v23 = 1026;
      int v24 = v5;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Completed async acquire of status bar assertion for %{public}s (PID:%{public}d)", buf, 0x12u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419520 != -1) {
        dispatch_once(&qword_102419520, &stru_1022D37F0);
      }
      id v9 = [*(id *)(*(void *)(a1 + 32) + 24) UTF8String];
      int v10 = *(_DWORD *)(*(void *)(a1 + 32) + 16);
      int v17 = 136446466;
      id v18 = v9;
      __int16 v19 = 1026;
      int v20 = v10;
      uint8x8_t v11 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "-[CLStatusBarAssertion setDesiredEnablementState:]_block_invoke", "%s\n", v11);
      if (v11 != (char *)buf) {
        free(v11);
      }
    }
    v15[0] = @"Status";
    v15[1] = @"Pid";
    v16[0] = &__kCFBooleanTrue;
    v16[1] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 16)];
    sub_1000FC494((uint64_t)+[NSDictionary dictionaryWithObjects:v16 forKeys:v15 count:2], (uint64_t)"StatusBarOverride");
  }
  else
  {
    if (qword_102419520 != -1) {
      dispatch_once(&qword_102419520, &stru_1022D37F0);
    }
    uint64_t v6 = qword_102419528;
    if (os_log_type_enabled((os_log_t)qword_102419528, OS_LOG_TYPE_FAULT))
    {
      id v7 = [*(id *)(*(void *)(a1 + 32) + 24) UTF8String];
      int v8 = *(_DWORD *)(*(void *)(a1 + 32) + 16);
      *(_DWORD *)uint64_t buf = 136446466;
      id v22 = v7;
      __int16 v23 = 1026;
      int v24 = v8;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_FAULT, "Failed async acquire of status bar assertion for %{public}s (PID:%{public}d)", buf, 0x12u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419520 != -1) {
        dispatch_once(&qword_102419520, &stru_1022D37F0);
      }
      id v12 = [*(id *)(*(void *)(a1 + 32) + 24) UTF8String];
      int v13 = *(_DWORD *)(*(void *)(a1 + 32) + 16);
      int v17 = 136446466;
      id v18 = v12;
      __int16 v19 = 1026;
      int v20 = v13;
      BOOL v14 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "-[CLStatusBarAssertion setDesiredEnablementState:]_block_invoke", "%s\n", v14);
      if (v14 != (char *)buf) {
        free(v14);
      }
    }
  }
}

void sub_100906080(id a1)
{
  qword_102419528 = (uint64_t)os_log_create("com.apple.locationd.Core", "Client");
}

BOOL sub_1009060B0()
{
  uint64_t v1 = qword_102419528;
  return os_log_type_enabled(v1, OS_LOG_TYPE_FAULT);
}

void sub_1009060D0(double *a1)
{
  double v1 = fabs(*a1) / 90.0;
  if (v1 > 1.0 || (double v5 = a1[1], v5 < -180.0) || v5 > 180.0)
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022D3830);
    }
    uint64_t v2 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_FAULT, "Lat/lon is out of range for conversion.", buf, 2u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022D3830);
      }
      uint64_t v3 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "void DPPoint::convertLatLon()", "%s\n", v3);
      if (v3 != (char *)buf) {
        free(v3);
      }
    }
  }
  else
  {
    double v6 = (1.0 - v1) * 6378137.0 + v1 * 6356752.31;
    double v7 = v5 / 57.2957795;
    __double2 v8 = __sincos_stret((90.0 - *a1) / 57.2957795);
    __double2 v9 = __sincos_stret(v7);
    *a1 = v8.__sinval * v6 * v9.__cosval;
    a1[1] = v8.__sinval * v6 * v9.__sinval;
    a1[2] = v8.__cosval * v6;
  }
}

void sub_10090630C(uint64_t *a1, double *a2, uint64_t *a3, int a4, double a5)
{
  if (!a4)
  {
    sub_100906C18(a1, a3, 0xFFFFFFFFLL, 0xFFFFFFFFLL, a5);
    int v58 = a1;
    goto LABEL_68;
  }
  uint64_t v10 = (a3[1] - *a3) >> 3;
  unint64_t v11 = 0xAAAAAAAAAAAAAAABLL * v10;
  unint64_t v12 = -1431655765 * (int)v10;
  sub_100644360(v92, v12);
  int v13 = v11 - 1;
  sub_100644360(v91, (int)v11 - 1);
  sub_1009075A4(v90, (int)v11 - 1);
  v88 = a2;
  if ((int)v11 < 1) {
    goto LABEL_13;
  }
  uint64_t v14 = 0;
  uint64_t v15 = v92[0];
  do
  {
    sub_100907574(v15 + 24 * v14, v12);
    uint64_t v16 = *(void *)(v92[0] + 24 * v14);
    uint64_t v17 = v14;
    do
    {
      *(void *)(v16 + 8 * v17) = 0;
      double v18 = sub_100907044(a3, v14, v17, a4, v93);
      uint64_t v15 = v92[0];
      uint64_t v16 = *(void *)(v92[0] + 24 * v14);
      *(double *)(v16 + 8 * v17++) = v18;
    }
    while (v11 != v17);
    ++v14;
  }
  while (v14 != v11);
  if ((int)v11 < 2)
  {
LABEL_13:
    int v29 = 0;
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v20 = (v11 - 1);
    do
    {
      sub_100907574(v91[0] + v19, v13);
      sub_10027BFBC(v90[0] + v19, v13);
      v19 += 24;
      --v20;
    }
    while (v20);
    size_t v21 = (void **)v91[0];
    id v22 = (_DWORD **)v90[0];
    __int16 v23 = (uint64_t *)(*(void *)v92[0] + 8);
    uint64_t v24 = (v11 - 1);
    do
    {
      uint64_t v25 = *v23++;
      uint64_t v26 = v25;
      int v27 = *v21;
      v21 += 3;
      *int v27 = v26;
      BOOL v28 = *v22;
      v22 += 3;
      *BOOL v28 = 0;
      --v24;
    }
    while (v24);
    int v29 = 1;
  }
  uint64_t v30 = 0;
  uint64_t v31 = v90[0];
  uint64_t v32 = v91[0];
  uint64_t v33 = 24;
  uint64_t v34 = (void *)(v91[0] + 24 * (int)(((v11 << 32) - 0x200000000) >> 32));
  if (v13 <= 1) {
    int v35 = 1;
  }
  else {
    int v35 = v11 - 1;
  }
  uint64_t v36 = (v35 - 1);
  int v37 = 2;
  uint64_t v38 = 1;
  uint64_t v39 = (uint64_t *)v91[0];
  do
  {
    if (v30 == v36)
    {
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022D3830);
      }
      int v66 = qword_102419638;
      if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v66, OS_LOG_TYPE_DEFAULT, "#Warning Never achieved the desired simplification. Using the original curve.", buf, 2u);
      }
      int v58 = a1;
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419630 != -1) {
          dispatch_once(&qword_102419630, &stru_1022D3830);
        }
        LOWORD(v93[0]) = 0;
        v87 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void DynamicProgramPolygonSimplify(PointList &, const PointList &, double, SimplifyType)", "%s\n", v87);
        if (v87 != (char *)buf) {
          free(v87);
        }
        int v58 = a1;
      }
      sub_100907300(v58, v12);
      if ((int)v11 >= 1)
      {
        uint64_t v67 = v11;
        int v68 = (void *)(*v58 + 16);
        int v69 = (void *)(*a3 + 16);
        do
        {
          *((_OWORD *)v68 - 1) = *((_OWORD *)v69 - 1);
          uint64_t v70 = *v69;
          v69 += 3;
          *int v68 = v70;
          v68 += 3;
          --v67;
        }
        while (v67);
      }
      goto LABEL_67;
    }
    int v40 = v37;
    unint64_t v41 = v38;
    *(_DWORD *)(*(void *)(v31 + 24 * v38) + 4 * v38) = v38;
    *(void *)(*(void *)(v32 + 24 * v38) + 8 * v38) = 0;
    if (++v38 < v13)
    {
      uint64_t v42 = v37;
      int v43 = (uint64_t *)(v92[0] + v33);
      do
      {
        uint64_t v44 = v42 + 1;
        if (v41 <= v42)
        {
          int v45 = -1;
          int v47 = v43;
          int v48 = v39;
          uint64_t v49 = v30;
          double v46 = 1.0e300;
          do
          {
            ++v49;
            uint64_t v50 = *v47;
            v47 += 3;
            double v51 = *(double *)(v50 + 8 * (v42 + 1));
            uint64_t v52 = *v48;
            v48 += 3;
            double v53 = *(double *)(v52 + 8 * (v41 - 1));
            if (v53 <= v51) {
              double v54 = v51;
            }
            else {
              double v54 = v53;
            }
            double v55 = v51 + v53;
            if (a4 != 2) {
              double v55 = v54;
            }
            if (v55 < v46 || v45 == -1)
            {
              int v45 = v49;
              double v46 = v55;
            }
          }
          while (v49 < v42);
        }
        else
        {
          int v45 = -1;
          double v46 = 1.0e300;
        }
        uint64_t v57 = 3 * v42;
        *(double *)(*(void *)(v32 + 8 * v57) + 8 * v41) = v46;
        *(_DWORD *)(*(void *)(v31 + 8 * v57) + 4 * v41) = v45;
        uint64_t v42 = v44;
      }
      while (v13 != v44);
    }
    ++v30;
    ++v37;
    v39 += 3;
    v33 += 24;
  }
  while (*(double *)(*v34 + 8 * v41) >= a5);
  int v58 = a1;
  sub_100907300(a1, (v41 + 2));
  uint64_t v59 = *a3;
  uint64_t v60 = *a3 + 24 * ((int)v11 - 1);
  uint64_t v61 = *a1;
  uint64_t v62 = *a1 + 24 * v38;
  *(_OWORD *)uint64_t v62 = *(_OWORD *)v60;
  *(void *)(v62 + 16) = *(void *)(v60 + 16);
  if (!v29)
  {
    int v40 = v38;
LABEL_53:
    if (!(v40 | v13)) {
      goto LABEL_67;
    }
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022D3830);
    }
    int v71 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 67240448;
      *(_DWORD *)&uint8_t buf[4] = v41;
      *(_WORD *)&uint8_t buf[8] = 1026;
      *(_DWORD *)&buf[10] = v13;
      _os_log_impl((void *)&_mh_execute_header, v71, OS_LOG_TYPE_FAULT, "Programming error. Number of points in backtrack do not match expected (2): %{public}d, %{public}d", buf, 0xEu);
    }
    if (!sub_10013D1A0(115, 0)) {
      goto LABEL_67;
    }
    bzero(buf, 0x65CuLL);
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022D3830);
    }
    v93[0] = 67240448;
    v93[1] = v41;
    __int16 v94 = 1026;
    int v95 = v13;
    unsigned int v72 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "void DynamicProgramPolygonSimplify(PointList &, const PointList &, double, SimplifyType)", "%s\n", v72);
LABEL_80:
    if (v72 != (char *)buf) {
      free(v72);
    }
    int v58 = a1;
    goto LABEL_67;
  }
  uint64_t v63 = v90[0];
  while (v40 > 0)
  {
    int v13 = *(_DWORD *)(*(void *)(v63 + 24 * (v13 - 1)) + 4 * --v40);
    uint64_t v64 = v59 + 24 * v13;
    uint64_t v65 = v61 + 24 * v40;
    *(_OWORD *)uint64_t v65 = *(_OWORD *)v64;
    *(void *)(v65 + 16) = *(void *)(v64 + 16);
    if (v13 <= 0)
    {
      LODWORD(v41) = v40 - 1;
      goto LABEL_53;
    }
  }
  if (qword_102419630 != -1) {
    dispatch_once(&qword_102419630, &stru_1022D3830);
  }
  int v73 = qword_102419638;
  if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_FAULT))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v73, OS_LOG_TYPE_FAULT, "Programming error. Number of points in backtrack do not match expected (1).", buf, 2u);
  }
  if (sub_10013D1A0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022D3830);
    }
    LOWORD(v93[0]) = 0;
    unsigned int v72 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "void DynamicProgramPolygonSimplify(PointList &, const PointList &, double, SimplifyType)", "%s\n", v72);
    goto LABEL_80;
  }
LABEL_67:
  *(void *)uint64_t buf = v90;
  sub_1001DCABC((void ***)buf);
  *(void *)uint64_t buf = v91;
  sub_1001DCABC((void ***)buf);
  *(void *)uint64_t buf = v92;
  sub_1001DCABC((void ***)buf);
  a2 = v88;
LABEL_68:
  uint64_t v98 = 0;
  uint64_t v99 = 0;
  uint64_t v100 = 0;
  uint64_t v75 = *v58;
  uint64_t v74 = v58[1];
  *(_OWORD *)uint64_t buf = *(_OWORD *)*v58;
  uint64_t v97 = *(void *)(v75 + 16);
  unint64_t v76 = 0xAAAAAAAAAAAAAAABLL * ((v74 - v75) >> 3);
  double v77 = 0.0;
  if (v76 >= 2)
  {
    uint64_t v78 = 0;
    unint64_t v79 = v76 - 1;
    v80 = (double *)(v75 + 40);
    do
    {
      unsigned int v81 = (double *)&buf[24 * v78];
      v78 ^= 1uLL;
      v82 = &buf[24 * v78];
      long long v83 = *((_OWORD *)v80 - 1);
      *(_OWORD *)v82 = v83;
      double v84 = *v80;
      v80 += 3;
      *((double *)v82 + 2) = v84;
      double v85 = *v81 - *(double *)&v83;
      *(double *)&long long v83 = v81[1] - *((double *)&v83 + 1);
      *unsigned int v81 = v85;
      *((void *)v81 + 1) = v83;
      double v86 = v81[2] - v84;
      v81[2] = v86;
      double v77 = v77 + sqrt(*(double *)&v83 * *(double *)&v83 + v85 * v85 + v86 * v86);
      --v79;
    }
    while (v79);
  }
  *a2 = v77;
}

void sub_100906BA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void **a25)
{
  a25 = (void **)&a14;
  sub_1001DCABC(&a25);
  a25 = (void **)&a17;
  sub_1001DCABC(&a25);
  a25 = (void **)&a20;
  sub_1001DCABC(&a25);
  _Unwind_Resume(a1);
}

void sub_100906C18(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v6 = a3;
  if ((a3 & 0x80000000) != 0)
  {
    uint64_t v6 = 0;
    a4 = -1431655765 * ((unint64_t)(a2[1] - *a2) >> 3) - 1;
  }
  unsigned int v10 = a4 - v6;
  if ((int)a4 - (int)v6 < 0)
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022D3830);
    }
    uint64_t v26 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_FAULT, "Input to Douglas-Peucker algorithm must have at least one vertex.", buf, 2u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022D3830);
      }
      LOWORD(v36) = 0;
      int v27 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "void DouglasPeuckerPolygonSimplify(PointList &, const PointList &, double, int, int)", "%s\n", v27);
      if (v27 != (char *)buf) {
        free(v27);
      }
    }
  }
  else
  {
    unsigned int v39 = 0;
    double v11 = sub_100907044(a2, v6, a4, 0, &v39);
    if (v10 >= 2)
    {
      uint64_t v12 = v39;
      if ((v39 & 0x80000000) == 0)
      {
        if (v11 <= a5)
        {
          sub_100907300(a1, 2uLL);
          uint64_t v32 = *a2;
          uint64_t v33 = *a2 + 24 * v6;
          uint64_t v34 = *a1;
          *(_OWORD *)uint64_t v34 = *(_OWORD *)v33;
          *(void *)(v34 + 16) = *(void *)(v33 + 16);
          uint64_t v35 = v32 + 24 * (int)a4;
          *(_OWORD *)(v34 + 24) = *(_OWORD *)v35;
          *(void *)(v34 + 40) = *(void *)(v35 + 16);
          return;
        }
        *(void *)uint64_t buf = 0;
        uint64_t v41 = 0;
        uint64_t v42 = 0;
        uint64_t v36 = 0;
        int v37 = 0;
        uint64_t v38 = 0;
        sub_100906C18(buf, a2, v6, v39, a5);
        sub_100906C18(&v36, a2, v12, a4, a5);
        sub_100907300(a1, 0xAAAAAAAAAAAAAAABLL * ((v37 - (unsigned char *)v36) >> 3) - 0x5555555555555555 * ((v41 - *(void *)buf) >> 3) - 1);
        int v13 = *(void **)buf;
        int v14 = -1431655765 * ((v41 - *(void *)buf) >> 3);
        if (v14 >= 1)
        {
          uint64_t v15 = -1431655765 * ((v41 - *(void *)buf) >> 3);
          uint64_t v16 = (void *)(*(void *)buf + 16);
          uint64_t v17 = (void *)(*a1 + 16);
          do
          {
            *((_OWORD *)v17 - 1) = *((_OWORD *)v16 - 1);
            uint64_t v18 = *v16;
            v16 += 3;
            void *v17 = v18;
            v17 += 3;
            --v15;
          }
          while (v15);
        }
        uint64_t v19 = v36;
        unint64_t v20 = 0xAAAAAAAAAAAAAAABLL * ((v37 - (unsigned char *)v36) >> 3);
        if (v20 < 2)
        {
          if (!v36) {
            goto LABEL_29;
          }
        }
        else
        {
          int v21 = v14 - 1;
          id v22 = v36 + 5;
          __int16 v23 = (void *)(*a1 + 24 * v21 + 40);
          unint64_t v24 = v20 - 1;
          do
          {
            *((_OWORD *)v23 - 1) = *((_OWORD *)v22 - 1);
            uint64_t v25 = *v22;
            v22 += 3;
            *__int16 v23 = v25;
            v23 += 3;
            --v24;
          }
          while (v24);
        }
        int v37 = v19;
        operator delete(v19);
        int v13 = *(void **)buf;
LABEL_29:
        if (v13)
        {
          uint64_t v41 = (uint64_t)v13;
          operator delete(v13);
        }
        return;
      }
    }
    sub_100907300(a1, v10 + 1);
    uint64_t v28 = v10 + 1;
    int v29 = (void *)(*a2 + 24 * v6 + 16);
    uint64_t v30 = (void *)(*a1 + 16);
    do
    {
      *((_OWORD *)v30 - 1) = *((_OWORD *)v29 - 1);
      uint64_t v31 = *v29;
      v29 += 3;
      *uint64_t v30 = v31;
      v30 += 3;
      --v28;
    }
    while (v28);
  }
}

void sub_100906FE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16)
{
  if (__p) {
    operator delete(__p);
  }
  if (a15) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

void sub_100907014(id a1)
{
  qword_102419638 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

double sub_100907044(void *a1, int a2, int a3, int a4, _DWORD *a5)
{
  if (a4 == 2)
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022D3830);
    }
    double v5 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "DynamicProgramArea distance is not implemented", buf, 2u);
    }
    double v6 = 0.0;
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022D3830);
      }
      double v7 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "double curveSegmentCompare(const PointList &, int, int, SimplifyType, int &)", "%s\n", v7);
      if (v7 != (char *)buf) {
        free(v7);
      }
    }
  }
  else
  {
    *a5 = -1;
    double v6 = 0.0;
    if (a3 - a2 >= 2)
    {
      int v8 = a2 + 1;
      if (a2 + 1 < a3)
      {
        __double2 v9 = (double *)(*a1 + 24 * a2);
        double v10 = *v9;
        double v11 = v9[1];
        double v12 = v9[2];
        uint64_t v13 = *a1 + 24 * a3;
        double v14 = *(double *)v13;
        double v15 = *(double *)(v13 + 8);
        double v16 = *(double *)(v13 + 16);
        double v17 = *(double *)v13 - v10;
        double v18 = v15 - v11;
        double v19 = v16 - v12;
        double v20 = v18 * v18 + v17 * v17 + v19 * v19;
        int v21 = (double *)(*a1 + 24 * v8 + 16);
        do
        {
          double v22 = *(v21 - 2);
          double v23 = *(v21 - 1);
          double v24 = v12;
          double v25 = v11;
          double v26 = v10;
          double v27 = *v21;
          if (v20 > 0.0)
          {
            double v28 = (v18 * (v23 - v11) + v17 * (v22 - v10) + v19 * (v27 - v12)) / v20;
            double v24 = v16;
            double v25 = v15;
            double v26 = v14;
            if (v28 <= 1.0)
            {
              double v24 = v12;
              double v25 = v11;
              double v26 = v10;
              if (v28 >= 0.0)
              {
                double v26 = v10 + v17 * v28;
                double v25 = v11 + v18 * v28;
                double v24 = v12 + v19 * v28;
              }
            }
          }
          double v29 = sqrt((v25 - v23) * (v25 - v23) + (v26 - v22) * (v26 - v22) + (v24 - v27) * (v24 - v27));
          if (v29 > v6)
          {
            *a5 = v8;
            double v6 = v29;
          }
          ++v8;
          v21 += 3;
        }
        while (a3 != v8);
      }
    }
  }
  return v6;
}

void sub_100907300(uint64_t *a1, unint64_t a2)
{
  unint64_t v2 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  BOOL v3 = a2 >= v2;
  unint64_t v4 = a2 - v2;
  if (v4 != 0 && v3)
  {
    sub_10090733C(a1, v4);
  }
  else if (!v3)
  {
    a1[1] = *a1 + 24 * a2;
  }
}

void sub_10090733C(uint64_t *a1, unint64_t a2)
{
  uint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  uint64_t v5 = v6;
  uint64_t v7 = *(void *)(v4 - 8);
  if (0xAAAAAAAAAAAAAAABLL * ((v6 - v7) >> 3) >= a2)
  {
    if (a2)
    {
      size_t v13 = 24 * ((24 * a2 - 24) / 0x18) + 24;
      bzero(*(void **)(v4 - 8), v13);
      v7 += v13;
    }
    a1[1] = v7;
  }
  else
  {
    unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((v7 - *a1) >> 3);
    unint64_t v9 = v8 + a2;
    if (v8 + a2 > 0xAAAAAAAAAAAAAAALL) {
      sub_1001D7FD4();
    }
    unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((v5 - *a1) >> 3);
    if (2 * v10 > v9) {
      unint64_t v9 = 2 * v10;
    }
    if (v10 >= 0x555555555555555) {
      unint64_t v11 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v11 = v9;
    }
    uint64_t v19 = v4;
    if (v11) {
      double v12 = (char *)sub_1000DA5D8(v4, v11);
    }
    else {
      double v12 = 0;
    }
    std::string __p = v12;
    double v16 = &v12[24 * v8];
    double v18 = &v12[24 * v11];
    size_t v14 = 24 * ((24 * a2 - 24) / 0x18) + 24;
    bzero(v16, v14);
    double v17 = &v16[v14];
    sub_100907514(a1, &__p);
    if (v17 != v16) {
      double v17 = &v16[(v17 - v16 - 24) % 0x18uLL];
    }
    if (__p) {
      operator delete(__p);
    }
  }
}

void sub_1009074C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_100907514(uint64_t *result, void *a2)
{
  uint64_t v3 = *result;
  uint64_t v2 = result[1];
  uint64_t v4 = a2[1];
  while (v2 != v3)
  {
    long long v5 = *(_OWORD *)(v2 - 24);
    v2 -= 24;
    *(_OWORD *)(v4 - 24) = v5;
    v4 -= 24;
    *(void *)(v4 + 16) = *(void *)(v2 + 16);
  }
  a2[1] = v4;
  uint64_t v6 = *result;
  *__n128 result = v4;
  a2[1] = v6;
  uint64_t v7 = result[1];
  result[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = result[2];
  result[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void sub_100907574(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 3;
  if (a2 <= v2)
  {
    if (a2 < v2) {
      *(void *)(a1 + 8) = *(void *)a1 + 8 * a2;
    }
  }
  else
  {
    sub_100907648((char **)a1, a2 - v2);
  }
}

void *sub_1009075A4(void *a1, unint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_1000DA584(a1, a2);
    uint64_t v4 = (char *)a1[1];
    size_t v5 = 24 * ((24 * a2 - 24) / 0x18) + 24;
    bzero(v4, v5);
    a1[1] = &v4[v5];
  }
  return a1;
}

void sub_100907634(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

void sub_100907648(char **a1, unint64_t a2)
{
  uint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  size_t v5 = v6;
  uint64_t v7 = *(char **)(v4 - 8);
  if (a2 <= (v6 - v7) >> 3)
  {
    if (a2)
    {
      bzero(*(void **)(v4 - 8), 8 * a2);
      v7 += 8 * a2;
    }
    a1[1] = v7;
  }
  else
  {
    uint64_t v8 = *a1;
    uint64_t v9 = v7 - *a1;
    unint64_t v10 = a2 + (v9 >> 3);
    if (v10 >> 61) {
      sub_1001D7FD4();
    }
    uint64_t v11 = v9 >> 3;
    uint64_t v12 = v5 - v8;
    if (v12 >> 2 > v10) {
      unint64_t v10 = v12 >> 2;
    }
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v13 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v13 = v10;
    }
    if (v13)
    {
      size_t v14 = (char *)sub_1000DA54C(v4, v13);
      uint64_t v8 = *a1;
      uint64_t v7 = a1[1];
    }
    else
    {
      size_t v14 = 0;
    }
    double v15 = &v14[8 * v11];
    double v16 = &v14[8 * v13];
    bzero(v15, 8 * a2);
    double v17 = &v15[8 * a2];
    while (v7 != v8)
    {
      uint64_t v18 = *((void *)v7 - 1);
      v7 -= 8;
      *((void *)v15 - 1) = v18;
      v15 -= 8;
    }
    *a1 = v15;
    a1[1] = v17;
    a1[2] = v16;
    if (v8)
    {
      operator delete(v8);
    }
  }
}

void sub_100907814(id a1)
{
  qword_10247EE00 = (uint64_t)[objc_alloc((Class)CLDispatchSilo) initWithIdentifier:@"CLTimeZoneManagerSilo"];
}

void sub_1009078EC()
{
}

id sub_100907920(uint64_t a1)
{
  uint64_t v2 = sub_1000A6958();
  sub_1004CF870(v2);
  uint64_t v3 = sub_1000A6958();
  sub_1004CF870(v3);
  uint64_t v4 = sub_1000A6958();
  sub_1004CF870(v4);
  if (sub_1001198CC() == 1 || sub_100170B44(a1 + 624) != 3)
  {
    if ((*(char *)(a1 + 119) & 0x80000000) == 0)
    {
      if (!*(unsigned char *)(a1 + 119)) {
        goto LABEL_6;
      }
      goto LABEL_5;
    }
    if (*(void *)(a1 + 104))
    {
LABEL_5:
      uint64_t v5 = sub_1000A6958();
      sub_1004D3820(v5, @"PreviousTimeZone", (char *)(a1 + 96));
    }
  }
LABEL_6:
  [*(id *)(a1 + 832) invalidate];
  uint64_t v6 = *(void **)(a1 + 848);

  return [v6 invalidate];
}

void sub_100907A54(uint64_t a1, void *a2)
{
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 64) = a2;
  id v3 = [a2 silo];
  *(_OWORD *)(a1 + 96) = 0u;
  *(void *)(a1 + 72) = v3;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a1 + 80) = _Q0;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(void *)(a1 + 144) = 0;
  *(_DWORD *)(a1 + 152) = 0xFFFF;
  *(void *)(a1 + 164) = 0;
  *(void *)(a1 + 156) = 0;
  *(_OWORD *)(a1 + 172) = xmmword_101D1C320;
  *(_OWORD *)(a1 + 188) = _Q0;
  *(_OWORD *)(a1 + 204) = _Q0;
  *(_OWORD *)(a1 + 220) = _Q0;
  *(_DWORD *)(a1 + 236) = 0;
  *(void *)(a1 + 248) = 0;
  *(void *)(a1 + 256) = 0;
  *(void *)(a1 + 240) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 264) = 0;
  *(void *)(a1 + 268) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 276) = 0x7FFFFFFF;
  *(void *)(a1 + 288) = 0;
  *(void *)(a1 + 296) = 0;
  *(void *)(a1 + 280) = 0;
  *(unsigned char *)(a1 + 304) = 0;
  *(_DWORD *)(a1 + 308) = 0xFFFF;
  *(void *)(a1 + 312) = 0;
  *(void *)(a1 + 320) = 0;
  *(void *)(a1 + 328) = 0xBFF0000000000000;
  *(_OWORD *)(a1 + 336) = xmmword_101D1C570;
  *(_OWORD *)(a1 + 352) = _Q0;
  *(_OWORD *)(a1 + 368) = _Q0;
  *(void *)(a1 + 384) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 392) = 0;
  *(void *)(a1 + 396) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 420) = 0;
  *(void *)(a1 + 404) = 0;
  *(void *)(a1 + 412) = 0;
  *(void *)(a1 + 424) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 432) = 0x7FFFFFFF;
  *(unsigned char *)(a1 + 460) = 0;
  *(void *)(a1 + 444) = 0;
  *(void *)(a1 + 452) = 0;
  *(void *)(a1 + 436) = 0;
  *(_DWORD *)(a1 + 464) = 0xFFFF;
  *(void *)(a1 + 476) = 0;
  *(void *)(a1 + 468) = 0;
  *(_OWORD *)(a1 + 484) = xmmword_101D1C320;
  *(_OWORD *)(a1 + 500) = _Q0;
  *(_OWORD *)(a1 + 516) = _Q0;
  *(_OWORD *)(a1 + 532) = _Q0;
  *(_DWORD *)(a1 + 548) = 0;
  *(void *)(a1 + 560) = 0;
  *(void *)(a1 + 568) = 0;
  *(void *)(a1 + 552) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 576) = 0;
  *(void *)(a1 + 580) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 588) = 0x7FFFFFFF;
  *(void *)(a1 + 592) = 0;
  *(void *)(a1 + 600) = 0;
  *(unsigned char *)(a1 + 616) = 0;
  *(void *)(a1 + 608) = 0;
  sub_100ECEB98(a1 + 624, "TimeZone", *(void *)(a1 + 64));
  *(_WORD *)(a1 + 824) = 0;
  *(void *)(a1 + 816) = 0;
  *(void *)(a1 + 832) = 0;
  *(void *)(a1 + 848) = 0;
  *(void *)(a1 + 840) = 0;
  *(_DWORD *)(a1 + 856) = -1;
  *(void *)(a1 + 864) = 0xBFF0000000000000;
  *(void *)(a1 + 872) = 0;
  sub_101171D90(a1 + 984);
  *(_OWORD *)(a1 + 1056) = 0u;
  *(_OWORD *)(a1 + 1040) = 0u;
  *(_OWORD *)(a1 + 1024) = 0u;
  sub_101389C2C();
}

void sub_100908424(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39)
{
  sub_100C0AB60(v41);
  if (*(char *)(v39 + 143) < 0) {
    operator delete(*(void **)(v39 + 120));
  }
  if (*(char *)(v39 + 119) < 0) {
    operator delete(*v40);
  }
  uint64_t v43 = *(void *)(v39 + 56);
  *(void *)(v39 + 56) = 0;
  if (v43) {
    (*(void (**)(uint64_t))(*(void *)v43 + 8))(v43);
  }
  uint64_t v44 = *(void *)(v39 + 48);
  *(void *)(v39 + 48) = 0;
  if (v44) {
    (*(void (**)(uint64_t))(*(void *)v44 + 8))(v44);
  }
  uint64_t v45 = *(void *)(v39 + 40);
  *(void *)(v39 + 40) = 0;
  if (v45) {
    (*(void (**)(uint64_t))(*(void *)v45 + 8))(v45);
  }
  uint64_t v46 = *(void *)(v39 + 32);
  *(void *)(v39 + 32) = 0;
  if (v46) {
    (*(void (**)(uint64_t))(*(void *)v46 + 8))(v46);
  }
  uint64_t v47 = *(void *)(v39 + 24);
  *(void *)(v39 + 24) = 0;
  if (v47) {
    (*(void (**)(uint64_t))(*(void *)v47 + 8))(v47);
  }
  uint64_t v48 = *(void *)(v39 + 16);
  *(void *)(v39 + 16) = 0;
  if (v48) {
    (*(void (**)(uint64_t))(*(void *)v48 + 8))(v48);
  }
  uint64_t v49 = *(void *)(v39 + 8);
  *(void *)(v39 + 8) = 0;
  if (v49) {
    (*(void (**)(uint64_t))(*(void *)v49 + 8))(v49);
  }
  _Unwind_Resume(a1);
}

void sub_100908644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 64), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022D3890);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v8 = 1;
    uint64_t v5 = _os_activity_create((void *)&_mh_execute_header, "CL: CLTimeZoneManager::onSettingsNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v5, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022D3890);
    }
    uint64_t v6 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v10 = 0;
      __int16 v11 = 2082;
      uint64_t v12 = "";
      __int16 v13 = 2082;
      size_t v14 = "activity";
      __int16 v15 = 2050;
      uint64_t v16 = a4;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLTimeZoneManager::onSettingsNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v8 = 0;
  }
  sub_100908808((_DWORD *)a4);
  if (v8) {
    os_activity_scope_leave(&state);
  }
}

void sub_1009087E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100908808(_DWORD *a1)
{
  sub_1000C7F88(&v16);
  char v2 = sub_1000A6A10(v16, (uint64_t)off_10241EAA8, a1 + 220);
  if (v17) {
    sub_1000DB0A0(v17);
  }
  if ((v2 & 1) == 0) {
    *((void *)a1 + 110) = 0x405F400000000000;
  }
  sub_1000C7F88(&v16);
  char v3 = sub_1000A6A10(v16, (uint64_t)off_10241EAB0, a1 + 222);
  if (v17) {
    sub_1000DB0A0(v17);
  }
  if ((v3 & 1) == 0) {
    *((void *)a1 + 111) = 0x40F86A0000000000;
  }
  sub_1000C7F88(&v16);
  char v4 = sub_1000A6A10(v16, (uint64_t)off_10241EAB8, a1 + 224);
  if (v17) {
    sub_1000DB0A0(v17);
  }
  if ((v4 & 1) == 0) {
    *((void *)a1 + 112) = 0x404E000000000000;
  }
  sub_1000C7F88(&v16);
  char v5 = sub_1000A6A10(v16, (uint64_t)off_10241EAC0, a1 + 226);
  if (v17) {
    sub_1000DB0A0(v17);
  }
  if ((v5 & 1) == 0) {
    *((void *)a1 + 113) = 0x4066800000000000;
  }
  sub_1000C7F88(&v16);
  char v6 = sub_10013E418(v16, (uint64_t)off_10241EAC8, a1 + 228);
  if (v17) {
    sub_1000DB0A0(v17);
  }
  if ((v6 & 1) == 0) {
    a1[228] = 2;
  }
  sub_1000C7F88(&v16);
  char v7 = sub_1000A6A10(v16, (uint64_t)off_10241EAD0, a1 + 230);
  if (v17) {
    sub_1000DB0A0(v17);
  }
  if ((v7 & 1) == 0) {
    *((void *)a1 + 115) = 0x404E000000000000;
  }
  sub_1000C7F88(&v16);
  char v8 = sub_1000A6A10(v16, (uint64_t)off_10241EAD8, a1 + 232);
  if (v17) {
    sub_1000DB0A0(v17);
  }
  if ((v8 & 1) == 0) {
    *((void *)a1 + 116) = 0x40AC200000000000;
  }
  sub_1000C7F88(&v16);
  char v9 = sub_1000A6A10(v16, (uint64_t)off_10241EAE0, a1 + 234);
  if (v17) {
    sub_1000DB0A0(v17);
  }
  if ((v9 & 1) == 0) {
    *((void *)a1 + 117) = 0x4082C00000000000;
  }
  sub_1000C7F88(&v16);
  char v10 = sub_1000A6A10(v16, (uint64_t)off_10241EAE8, a1 + 236);
  if (v17) {
    sub_1000DB0A0(v17);
  }
  if ((v10 & 1) == 0) {
    *((void *)a1 + 118) = 0x40AC200000000000;
  }
  sub_1000C7F88(&v16);
  char v11 = sub_1000A6A10(v16, (uint64_t)off_10241EAF0, a1 + 238);
  if (v17) {
    sub_1000DB0A0(v17);
  }
  if ((v11 & 1) == 0) {
    *((void *)a1 + 119) = 0x3FE8000000000000;
  }
  sub_1000C7F88(&v16);
  char v12 = sub_1000A6A10(v16, (uint64_t)off_10241EAF8, a1 + 240);
  if (v17) {
    sub_1000DB0A0(v17);
  }
  if ((v12 & 1) == 0) {
    *((void *)a1 + 120) = 0x404E000000000000;
  }
  sub_1000C7F88(&v16);
  char v13 = sub_1000A6A10(v16, (uint64_t)off_10241EB00, a1 + 242);
  if (v17) {
    sub_1000DB0A0(v17);
  }
  if ((v13 & 1) == 0) {
    *((void *)a1 + 121) = 0x4092C00000000000;
  }
  sub_1000C7F88(&v16);
  size_t v14 = a1 + 244;
  char v15 = sub_1000A6A10(v16, (uint64_t)off_10241EB08, v14);
  if (v17) {
    sub_1000DB0A0(v17);
  }
  if ((v15 & 1) == 0) {
    *size_t v14 = 0x408C200000000000;
  }
}

void sub_100908B98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1000DB0A0(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_100908BE0(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 64), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022D3890);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    char v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLTimeZoneManager::onStatusNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022D3890);
    }
    char v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      char v15 = "";
      __int16 v16 = 2082;
      double v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLTimeZoneManager::onStatusNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_10090D68C(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100908D9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100908DBC(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 64), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022D3890);
  }
  BOOL v6 = os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG);
  if (v6)
  {
    char v11 = 1;
    char v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLTimeZoneManager::onTelephonyNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022D3890);
    }
    char v9 = qword_102419588;
    BOOL v6 = os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG);
    if (v6)
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      char v15 = "";
      __int16 v16 = 2082;
      double v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLTimeZoneManager::onTelephonyNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_10090DD04(v6, v7, a2);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100908F6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100908F8C(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 64), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022D3890);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v10 = 1;
    uint64_t v7 = _os_activity_create((void *)&_mh_execute_header, "CL: CLTimeZoneManager::onManagerNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v7, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022D3890);
    }
    char v8 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v12 = 0;
      __int16 v13 = 2082;
      __int16 v14 = "";
      __int16 v15 = 2082;
      __int16 v16 = "activity";
      __int16 v17 = 2050;
      uint64_t v18 = a4;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLTimeZoneManager::onManagerNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v10 = 0;
  }
  sub_10090E23C(a4, v6, a2);
  if (v10) {
    os_activity_scope_leave(&state);
  }
}

void sub_100909140(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100909160(uint64_t a1)
{
}

void sub_100909168(uint64_t a1, uint64_t a2)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a2 + 64), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022D3890);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v6 = 1;
    char v3 = _os_activity_create((void *)&_mh_execute_header, "CL: CLTimeZoneManager::onActiveModeTimer", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v3, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022D3890);
    }
    char v4 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v8 = 0;
      __int16 v9 = 2082;
      char v10 = "";
      __int16 v11 = 2082;
      int v12 = "activity";
      __int16 v13 = 2050;
      uint64_t v14 = a2;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLTimeZoneManager::onActiveModeTimer\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v6 = 0;
  }
  sub_10090A9C0(a2);
  if (v6) {
    os_activity_scope_leave(&state);
  }
}

void sub_10090930C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10090932C(uint64_t a1)
{
}

void sub_100909334(uint64_t a1)
{
  if (qword_102419590 != -1) {
    dispatch_once(&qword_102419590, &stru_1022D38B0);
  }
  char v2 = qword_102419598;
  if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Continuous location timer fired", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419590 != -1) {
      dispatch_once(&qword_102419590, &stru_1022D38B0);
    }
    char v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLTimeZoneManager::onContinuousLocationTimer()", "%s\n", v6);
    if (v6 != (char *)buf) {
      free(v6);
    }
  }
  if (*(int *)(a1 + 816) >= 1)
  {
    if (*(double *)(a1 + 484) >= 0.0)
    {
      sub_10004A990(a1, a1 + 464, 1);
    }
    else
    {
      if (qword_102419590 != -1) {
        dispatch_once(&qword_102419590, &stru_1022D38B0);
      }
      char v3 = qword_102419598;
      if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#Warning Failed to get any fix while in continuous location mode", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419590 != -1) {
          dispatch_once(&qword_102419590, &stru_1022D38B0);
        }
        char v4 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLTimeZoneManager::onContinuousLocationTimer()", "%s\n", v4);
        if (v4 != (char *)buf) {
          free(v4);
        }
      }
    }
    int v5 = *(_DWORD *)(a1 + 816);
    sub_10090B324(a1);
    if (v5 == 2) {
      sub_10090B69C(a1, 1);
    }
  }
}

id sub_10090963C(uint64_t a1)
{
  return sub_100909644(*(void *)(a1 + 32));
}

id sub_100909644(uint64_t a1)
{
  if (qword_102419590 != -1) {
    dispatch_once(&qword_102419590, &stru_1022D38B0);
  }
  char v2 = qword_102419598;
  if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "ReachabilityTimer fired", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419590 != -1) {
      dispatch_once(&qword_102419590, &stru_1022D38B0);
    }
    int v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLTimeZoneManager::onReachabilityTimer()", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3)
  {
    [*(id *)(v3 + 16) unregister:*(void *)(v3 + 8) forNotification:6];
    [*(id *)(*(void *)(a1 + 32) + 16) register:*(void *)(*(void *)(a1 + 32) + 8) forNotification:6 registrationInfo:0];
  }
  return [*(id *)(a1 + 872) setNextFireDelay:1.79769313e308];
}

void sub_100909810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a2 + 64), "silo") assertOutside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022D3890);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v15 = 1;
    char v10 = _os_activity_create((void *)&_mh_execute_header, "CL: CLTimeZoneManager::onImmediateCheckNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v10, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022D3890);
    }
    __int16 v11 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v17 = 0;
      __int16 v18 = 2082;
      uint64_t v19 = "";
      __int16 v20 = 2082;
      int v21 = "activity";
      __int16 v22 = 2050;
      uint64_t v23 = a2;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLTimeZoneManager::onImmediateCheckNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v15 = 0;
  }
  id v12 = [*(id *)(a2 + 64) silo];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_10090E6F4;
  v13[3] = &unk_1022ACFE0;
  v13[4] = a2;
  uint64_t v13[5] = a1;
  v13[6] = a3;
  v13[7] = a4;
  v13[8] = a5;
  [v12 sync:v13];
  if (v15) {
    os_activity_scope_leave(&state);
  }
}

void sub_100909A2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, os_activity_scope_state_s state, char a19)
{
  if (a19) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100909A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a2 + 64), "silo") assertOutside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022D3890);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v15 = 1;
    char v10 = _os_activity_create((void *)&_mh_execute_header, "CL: CLTimeZoneManager::onLocationTimeZoneActiveNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v10, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022D3890);
    }
    __int16 v11 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v17 = 0;
      __int16 v18 = 2082;
      uint64_t v19 = "";
      __int16 v20 = 2082;
      int v21 = "activity";
      __int16 v22 = 2050;
      uint64_t v23 = a2;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLTimeZoneManager::onLocationTimeZoneActiveNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v15 = 0;
  }
  id v12 = [*(id *)(a2 + 64) silo];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_10090E6FC;
  v13[3] = &unk_1022ACFE0;
  v13[4] = a2;
  uint64_t v13[5] = a1;
  v13[6] = a3;
  v13[7] = a4;
  v13[8] = a5;
  [v12 sync:v13];
  if (v15) {
    os_activity_scope_leave(&state);
  }
}

void sub_100909C68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, os_activity_scope_state_s state, char a19)
{
  if (a19) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

id sub_100909C88(uint64_t a1, double *a2)
{
  if (qword_102419590 != -1) {
    dispatch_once(&qword_102419590, &stru_1022D38B0);
  }
  char v4 = qword_102419598;
  if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v5 = *(void *)a2;
    *(_DWORD *)uint64_t buf = 134217984;
    uint64_t v9 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Setting start timer to fire after %.2fs", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419590 != -1) {
      dispatch_once(&qword_102419590, &stru_1022D38B0);
    }
    uint64_t v7 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLTimeZoneManager::setStartTimer(const CFTimeInterval &)", "%s\n", v7);
    if (v7 != (char *)buf) {
      free(v7);
    }
  }
  return [*(id *)(a1 + 832) setNextFireDelay:*a2];
}

id sub_100909E4C(uint64_t a1, double *a2)
{
  if (*a2 == 1.79769313e308)
  {
    uint64_t v3 = *(void *)(a1 + 840);
    return sub_1001B0AE4(v3);
  }
  else
  {
    double Current = CFAbsoluteTimeGetCurrent();
    double v7 = *a2;
    if (qword_102419590 != -1) {
      dispatch_once(&qword_102419590, &stru_1022D38B0);
    }
    double v8 = Current + v7;
    uint64_t v9 = qword_102419598;
    if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_DEBUG))
    {
      double v10 = *a2;
      *(_DWORD *)uint64_t buf = 134218240;
      double v13 = v8;
      __int16 v14 = 2048;
      double v15 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "Setting active mode timer to fire at %.2f (%.2fs away)", buf, 0x16u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419590 != -1) {
        dispatch_once(&qword_102419590, &stru_1022D38B0);
      }
      __int16 v11 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLTimeZoneManager::setActiveModeTimer(const CFTimeInterval &)", "%s\n", v11);
      if (v11 != (char *)buf) {
        free(v11);
      }
    }
    return sub_1001165F8(*(void *)(a1 + 840), v8);
  }
}

id sub_10090A09C(uint64_t a1, double *a2)
{
  if (qword_102419590 != -1) {
    dispatch_once(&qword_102419590, &stru_1022D38B0);
  }
  char v4 = qword_102419598;
  if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v5 = *(void *)a2;
    *(_DWORD *)uint64_t buf = 134217984;
    uint64_t v9 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Setting continuous location timer to fire after %.2fs", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419590 != -1) {
      dispatch_once(&qword_102419590, &stru_1022D38B0);
    }
    double v7 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLTimeZoneManager::setContinuousLocationTimer(const CFTimeInterval &)", "%s\n", v7);
    if (v7 != (char *)buf) {
      free(v7);
    }
  }
  return [*(id *)(a1 + 848) setNextFireDelay:*a2];
}

void sub_10090A260(uint64_t a1)
{
  *(unsigned char *)(a1 + 824) = 1;
  if (sub_1001198CC() != 1)
  {
    if (qword_102419590 != -1) {
      dispatch_once(&qword_102419590, &stru_1022D38B0);
    }
    uint64_t v5 = qword_102419598;
    if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Location services are disabled; stopping automatic time zone",
        buf,
        2u);
    }
    if (!sub_10013D1A0(115, 2)) {
      goto LABEL_31;
    }
    bzero(buf, 0x65CuLL);
    if (qword_102419590 == -1) {
      goto LABEL_51;
    }
    goto LABEL_65;
  }
  if (sub_100170B44(a1 + 624) != 3)
  {
    if (qword_102419590 != -1) {
      dispatch_once(&qword_102419590, &stru_1022D38B0);
    }
    char v6 = qword_102419598;
    if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Time Zone system service disabled; stopping automatic time zone",
        buf,
        2u);
    }
    if (!sub_10013D1A0(115, 2)) {
      goto LABEL_31;
    }
    bzero(buf, 0x65CuLL);
    if (qword_102419590 == -1)
    {
LABEL_51:
      double v15 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLTimeZoneManager::checkStatus()", "%s\n", v15);
      if (v15 != (char *)buf) {
        free(v15);
      }
LABEL_31:
      uint64_t v7 = sub_1000A6958();
      sub_1004CF870(v7);
      uint64_t v8 = sub_1000A6958();
      sub_1004CF870(v8);
      uint64_t v9 = sub_1000A6958();
      sub_1004CF870(v9);
      uint64_t v10 = *(void *)sub_1000A6958();
      (*(void (**)(void))(v10 + 944))();
      *(_DWORD *)(a1 + 820) = 0;
      sub_10090BD78(a1);
      __int16 v11 = &off_10241EBE0;
      goto LABEL_45;
    }
LABEL_65:
    dispatch_once(&qword_102419590, &stru_1022D38B0);
    goto LABEL_51;
  }
  int v2 = *(_DWORD *)(a1 + 856);
  if (v2 == -1)
  {
    int v3 = off_10241EBE8();
    if (v3) {
      int v2 = 2;
    }
    else {
      int v2 = 1;
    }
    if (*(_DWORD *)(a1 + 856) != 2 && v3) {
      *(void *)(a1 + 144) = 0;
    }
    *(_DWORD *)(a1 + 856) = v2;
  }
  if (v2 == 2)
  {
    if (qword_102419590 != -1) {
      dispatch_once(&qword_102419590, &stru_1022D38B0);
    }
    id v12 = qword_102419598;
    if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "Automatic time zone starting in active mode", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419590 != -1) {
        dispatch_once(&qword_102419590, &stru_1022D38B0);
      }
      int v17 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLTimeZoneManager::checkStatus()", "%s\n", v17);
      if (v17 != (char *)buf) {
        free(v17);
      }
    }
    sub_10090C104(a1);
  }
  else if (v2 == 1)
  {
    if (qword_102419590 != -1) {
      dispatch_once(&qword_102419590, &stru_1022D38B0);
    }
    char v4 = qword_102419598;
    if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Automatic time zone starting in passive mode", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419590 != -1) {
        dispatch_once(&qword_102419590, &stru_1022D38B0);
      }
      __int16 v16 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLTimeZoneManager::checkStatus()", "%s\n", v16);
      if (v16 != (char *)buf) {
        free(v16);
      }
    }
    sub_10090BF30(a1);
  }
  else
  {
    if (qword_102419590 != -1) {
      dispatch_once(&qword_102419590, &stru_1022D38B0);
    }
    double v13 = qword_102419598;
    if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "Automatic time zone disabled", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419590 != -1) {
        dispatch_once(&qword_102419590, &stru_1022D38B0);
      }
      __int16 v18 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLTimeZoneManager::checkStatus()", "%s\n", v18);
      if (v18 != (char *)buf) {
        free(v18);
      }
    }
    sub_10090BD78(a1);
  }
  __int16 v11 = &off_10241EBF0;
LABEL_45:
  if (qword_10247EE10 != -1) {
    dispatch_once(&qword_10247EE10, &stru_1022D3870);
  }
  if (qword_10247EE18)
  {
    uint64_t v14 = off_10241EBD8();
    ((void (*)(uint64_t))*v11)(v14);
  }
}

void sub_10090A9C0(uint64_t a1)
{
  sub_100909E4C(a1, (double *)(a1 + 944));
  if (!*(_DWORD *)(a1 + 816))
  {
    sub_10090AA18(a1, 1, 0);
  }
}

void sub_10090AA18(uint64_t a1, int a2, int a3)
{
  *(void *)(a1 + 144) = 0;
  int v6 = *(_DWORD *)(a1 + 816);
  if (v6 < 1)
  {
    if (sub_1001198CC())
    {
      if (sub_100170B44(a1 + 624) == 3)
      {
        int v8 = *(_DWORD *)(a1 + 856);
        if (v8 == -1)
        {
          int v9 = off_10241EBE8();
          if (v9) {
            int v8 = 2;
          }
          else {
            int v8 = 1;
          }
          if (*(_DWORD *)(a1 + 856) != 2 && v9) {
            *(void *)(a1 + 144) = 0;
          }
          *(_DWORD *)(a1 + 856) = v8;
        }
        if (v8 == 2 || (a3 & 1) != 0)
        {
          if (qword_102419590 != -1) {
            dispatch_once(&qword_102419590, &stru_1022D38B0);
          }
          double v15 = qword_102419598;
          if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)uint64_t buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "Entering continuous location mode", buf, 2u);
          }
          if (sub_10013D1A0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_102419590 != -1) {
              dispatch_once(&qword_102419590, &stru_1022D38B0);
            }
            int v21 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 2, "void CLTimeZoneManager::enterContinuousLocationMode(ContinuousLocationMode, BOOL)", "%s\n", v21);
            if (v21 != (char *)buf) {
              free(v21);
            }
          }
          if (off_10241EC00())
          {
            *(unsigned char *)(a1 + 1024) = 0;
            [*(id *)(*(void *)(a1 + 16) + 16) unregister:*(void *)(*(void *)(a1 + 16) + 8) forNotification:0];
            __int16 v16 = (unsigned char *)(a1 + 1025);
            uint64_t v17 = 1;
          }
          else
          {
            if (qword_102419590 != -1) {
              dispatch_once(&qword_102419590, &stru_1022D38B0);
            }
            __int16 v18 = qword_102419598;
            if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)uint64_t buf = 0;
              _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "Timezone is not confirmed.", buf, 2u);
            }
            if (sub_10013D1A0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_102419590 != -1) {
                dispatch_once(&qword_102419590, &stru_1022D38B0);
              }
              __int16 v22 = (char *)_os_log_send_and_compose_impl();
              sub_1004BA5E4("Generic", 1, 0, 2, "void CLTimeZoneManager::enterContinuousLocationMode(ContinuousLocationMode, BOOL)", "%s\n", v22);
              if (v22 != (char *)buf) {
                free(v22);
              }
            }
            __int16 v16 = (unsigned char *)(a1 + 1024);
            *(unsigned char *)(a1 + 1025) = 0;
            [*(id *)(*(void *)(a1 + 16) + 16) unregister:*(void *)(*(void *)(a1 + 16) + 8) forNotification:1];
            uint64_t v17 = 0;
          }
          *__int16 v16 = 1;
          [*(id *)(*(void *)(a1 + 16) + 16) register:*(void *)(*(void *)(a1 + 16) + 8) forNotification:v17 registrationInfo:0];
          [*(id *)(*(void *)(a1 + 32) + 16) register:*(void *)(*(void *)(a1 + 32) + 8) forNotification:19 registrationInfo:0];
          *(_DWORD *)(a1 + 816) = a2;
          goto LABEL_65;
        }
        if (qword_102419590 != -1) {
          dispatch_once(&qword_102419590, &stru_1022D38B0);
        }
        uint64_t v10 = qword_102419598;
        if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)uint64_t buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "In bystander-only mode; not starting continuous location",
            buf,
            2u);
        }
        if (!sub_10013D1A0(115, 2)) {
          return;
        }
        bzero(buf, 0x65CuLL);
        if (qword_102419590 == -1)
        {
LABEL_49:
          uint64_t v14 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLTimeZoneManager::enterContinuousLocationMode(ContinuousLocationMode, BOOL)", "%s\n", v14);
          if (v14 != (char *)buf) {
            free(v14);
          }
          return;
        }
      }
      else
      {
        if (qword_102419590 != -1) {
          dispatch_once(&qword_102419590, &stru_1022D38B0);
        }
        double v13 = qword_102419598;
        if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)uint64_t buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "Time Zone system service disabled; not starting continuous location",
            buf,
            2u);
        }
        if (!sub_10013D1A0(115, 2)) {
          return;
        }
        bzero(buf, 0x65CuLL);
        if (qword_102419590 == -1) {
          goto LABEL_49;
        }
      }
    }
    else
    {
      if (qword_102419590 != -1) {
        dispatch_once(&qword_102419590, &stru_1022D38B0);
      }
      id v12 = qword_102419598;
      if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "Location services are disabled; not starting continuous location",
          buf,
          2u);
      }
      if (!sub_10013D1A0(115, 2)) {
        return;
      }
      bzero(buf, 0x65CuLL);
      if (qword_102419590 == -1) {
        goto LABEL_49;
      }
    }
    dispatch_once(&qword_102419590, &stru_1022D38B0);
    goto LABEL_49;
  }
  if (a2 == 2 && v6 == 1)
  {
    if (qword_102419590 != -1) {
      dispatch_once(&qword_102419590, &stru_1022D38B0);
    }
    uint64_t v7 = qword_102419598;
    if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Transition from continuous active to continuous active with retry", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419590 != -1) {
        dispatch_once(&qword_102419590, &stru_1022D38B0);
      }
      uint64_t v19 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLTimeZoneManager::enterContinuousLocationMode(ContinuousLocationMode, BOOL)", "%s\n", v19);
      if (v19 != (char *)buf) {
        free(v19);
      }
    }
    *(_DWORD *)(a1 + 816) = 2;
    return;
  }
  if (qword_102419590 != -1) {
    dispatch_once(&qword_102419590, &stru_1022D38B0);
  }
  __int16 v11 = qword_102419598;
  if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "Already in continuous location mode; not re-entering",
      buf,
      2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419590 != -1) {
      dispatch_once(&qword_102419590, &stru_1022D38B0);
    }
    __int16 v20 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLTimeZoneManager::enterContinuousLocationMode(ContinuousLocationMode, BOOL)", "%s\n", v20);
    if (v20 != (char *)buf) {
      free(v20);
    }
  }
  if (a3) {
LABEL_65:
  }
    sub_10090A09C(a1, (double *)(a1 + 960));
}

void sub_10090B324(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 816))
  {
    if (qword_102419590 != -1) {
      dispatch_once(&qword_102419590, &stru_1022D38B0);
    }
    int v2 = qword_102419598;
    if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Exiting continuous location mode", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419590 != -1) {
        dispatch_once(&qword_102419590, &stru_1022D38B0);
      }
      int v9 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLTimeZoneManager::exitContinuousLocationMode()", "%s\n", v9);
      if (v9 != (char *)buf) {
        free(v9);
      }
    }
    *(unsigned char *)(a1 + 1024) = 0;
    [*(id *)(*(void *)(a1 + 16) + 16) unregister:*(void *)(*(void *)(a1 + 16) + 8) forNotification:0];
    *(unsigned char *)(a1 + 1025) = 0;
    [*(id *)(*(void *)(a1 + 16) + 16) unregister:*(void *)(*(void *)(a1 + 16) + 8) forNotification:1];
    [*(id *)(*(void *)(a1 + 32) + 16) unregister:*(void *)(*(void *)(a1 + 32) + 8) forNotification:19];
    *(_DWORD *)(a1 + 816) = 0;
    *(void *)uint64_t buf = 0x7FEFFFFFFFFFFFFFLL;
    sub_10090A09C(a1, (double *)buf);
    *(_DWORD *)(a1 + 464) = 0xFFFF;
    *(void *)(a1 + 476) = 0;
    *(void *)(a1 + 468) = 0;
    __asm { FMOV            V1.2D, #-1.0 }
    *(_OWORD *)(a1 + 484) = xmmword_101D1C320;
    *(_OWORD *)(a1 + 500) = _Q1;
    *(_OWORD *)(a1 + 516) = _Q1;
    *(_OWORD *)(a1 + 532) = _Q1;
    *(_DWORD *)(a1 + 548) = 0;
    *(void *)(a1 + 552) = 0xBFF0000000000000;
    *(void *)(a1 + 568) = 0;
    *(void *)(a1 + 560) = 0;
    *(_DWORD *)(a1 + 576) = 0;
    *(void *)(a1 + 580) = 0xBFF0000000000000;
    *(_DWORD *)(a1 + 588) = 0x7FFFFFFF;
    *(void *)(a1 + 592) = 0;
    *(void *)(a1 + 608) = 0;
    *(void *)(a1 + 600) = 0;
    *(unsigned char *)(a1 + 616) = 0;
  }
  else
  {
    if (qword_102419590 != -1) {
      dispatch_once(&qword_102419590, &stru_1022D38B0);
    }
    int v8 = qword_102419598;
    if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "Not in continuous location mode; not exiting",
        buf,
        2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419590 != -1) {
        dispatch_once(&qword_102419590, &stru_1022D38B0);
      }
      uint64_t v10 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLTimeZoneManager::exitContinuousLocationMode()", "%s\n", v10);
      if (v10 != (char *)buf) {
        free(v10);
      }
    }
  }
}

void sub_10090B69C(uint64_t a1, int a2)
{
  if (a2) {
    goto LABEL_12;
  }
  if (*(unsigned char *)(a1 + 1024) || *(unsigned char *)(a1 + 1025))
  {
    if (*(int *)(a1 + 816) >= 1)
    {
      if (qword_102419590 != -1) {
        dispatch_once(&qword_102419590, &stru_1022D38B0);
      }
      char v4 = qword_102419598;
      if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Got location unavailable while in continuous location mode; ignoring location failure",
          buf,
          2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419590 == -1)
        {
LABEL_40:
          uint64_t v14 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLTimeZoneManager::locationFailed(BOOL)", "%s\n", v14);
          if (v14 != (char *)buf) {
            free(v14);
          }
          return;
        }
LABEL_54:
        dispatch_once(&qword_102419590, &stru_1022D38B0);
        goto LABEL_40;
      }
      return;
    }
LABEL_12:
    DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
    CFNotificationCenterPostNotification(DarwinNotifyCenter, @"AutomaticTimeZoneUpdateFailed", 0, 0, 1u);
    ++*(_DWORD *)(a1 + 820);
    if (qword_102419590 != -1) {
      dispatch_once(&qword_102419590, &stru_1022D38B0);
    }
    int v6 = qword_102419598;
    if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_DEFAULT))
    {
      int v7 = *(_DWORD *)(a1 + 820);
      *(_DWORD *)uint64_t buf = 67109376;
      LODWORD(v19[0]) = a2;
      WORD2(v19[0]) = 1024;
      *(_DWORD *)((char *)v19 + 6) = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#Warning Location failed for time zone (exiting continuous mode %d; failure count now %d)",
        buf,
        0xEu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419590 != -1) {
        dispatch_once(&qword_102419590, &stru_1022D38B0);
      }
      double v15 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLTimeZoneManager::locationFailed(BOOL)", "%s\n", v15);
      if (v15 != (char *)buf) {
        free(v15);
      }
    }
    if (!*(unsigned char *)(a1 + 825)) {
      sub_10090BD78(a1);
    }
    if (*(_DWORD *)(a1 + 820) >= *(_DWORD *)(a1 + 912))
    {
      if (qword_102419590 != -1) {
        dispatch_once(&qword_102419590, &stru_1022D38B0);
      }
      __int16 v11 = qword_102419598;
      if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_INFO))
      {
        uint64_t v12 = *(void *)(a1 + 928);
        *(_DWORD *)uint64_t buf = 134217984;
        v19[0] = v12;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "Exceeded maximum failures; not retrying for %.2f seconds",
          buf,
          0xCu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419590 != -1) {
          dispatch_once(&qword_102419590, &stru_1022D38B0);
        }
        uint64_t v17 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLTimeZoneManager::locationFailed(BOOL)", "%s\n", v17);
        if (v17 != (char *)buf) {
          free(v17);
        }
      }
      uint64_t v10 = (double *)(a1 + 928);
    }
    else
    {
      if (qword_102419590 != -1) {
        dispatch_once(&qword_102419590, &stru_1022D38B0);
      }
      int v8 = qword_102419598;
      if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_INFO))
      {
        uint64_t v9 = *(void *)(a1 + 920);
        *(_DWORD *)uint64_t buf = 134217984;
        v19[0] = v9;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Maximum failure count not exceeded; retrying in %.2f seconds",
          buf,
          0xCu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419590 != -1) {
          dispatch_once(&qword_102419590, &stru_1022D38B0);
        }
        __int16 v16 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLTimeZoneManager::locationFailed(BOOL)", "%s\n", v16);
        if (v16 != (char *)buf) {
          free(v16);
        }
      }
      uint64_t v10 = (double *)(a1 + 920);
    }
    sub_100909C88(a1, v10);
    return;
  }
  if (qword_102419590 != -1) {
    dispatch_once(&qword_102419590, &stru_1022D38B0);
  }
  double v13 = qword_102419598;
  if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "Not registered for location or fine location; ignoring location failure",
      buf,
      2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419590 == -1) {
      goto LABEL_40;
    }
    goto LABEL_54;
  }
}

id sub_10090BD78(uint64_t a1)
{
  if (qword_102419590 != -1) {
    dispatch_once(&qword_102419590, &stru_1022D38B0);
  }
  int v2 = qword_102419598;
  if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#Notice Stopping automatic time zone", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419590 != -1) {
      dispatch_once(&qword_102419590, &stru_1022D38B0);
    }
    char v4 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLTimeZoneManager::stop()", "%s\n", v4);
    if (v4 != (char *)buf) {
      free(v4);
    }
  }
  sub_10090B324(a1);
  sub_10090C5B0(a1);
  *(void *)uint64_t buf = 0x7FEFFFFFFFFFFFFFLL;
  return sub_100909C88(a1, (double *)buf);
}

void sub_10090BF30(uint64_t a1)
{
  if (qword_102419590 != -1) {
    dispatch_once(&qword_102419590, &stru_1022D38B0);
  }
  int v2 = qword_102419598;
  if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Starting automatic time zone in passive mode", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419590 != -1) {
      dispatch_once(&qword_102419590, &stru_1022D38B0);
    }
    int v3 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLTimeZoneManager::startPassive()", "%s\n", v3);
    if (v3 != (char *)buf) {
      free(v3);
    }
  }
  if (*(unsigned char *)(a1 + 825)) {
    sub_10090C5B0(a1);
  }
  if (!*(_DWORD *)(a1 + 816))
  {
    *(unsigned char *)(a1 + 1024) = 0;
    [*(id *)(*(void *)(a1 + 16) + 16) unregister:*(void *)(*(void *)(a1 + 16) + 8) forNotification:0];
    *(unsigned char *)(a1 + 1025) = 0;
    [*(id *)(*(void *)(a1 + 16) + 16) unregister:*(void *)(*(void *)(a1 + 16) + 8) forNotification:1];
  }
}

void sub_10090C104(uint64_t a1)
{
  if (qword_102419590 != -1) {
    dispatch_once(&qword_102419590, &stru_1022D38B0);
  }
  int v2 = qword_102419598;
  if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Starting automatic time zone in active mode", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419590 != -1) {
      dispatch_once(&qword_102419590, &stru_1022D38B0);
    }
    uint64_t v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLTimeZoneManager::startActive()", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
  sub_10090C3EC((unsigned char *)a1);
  if (*(double *)(a1 + 80) < 0.0 || *(_DWORD *)(a1 + 820))
  {
    sub_10090AA18(a1, 2, 0);
  }
  else
  {
    if (qword_102419590 != -1) {
      dispatch_once(&qword_102419590, &stru_1022D38B0);
    }
    int v3 = qword_102419598;
    if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Already have previous border distance and timestamp", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419590 != -1) {
        dispatch_once(&qword_102419590, &stru_1022D38B0);
      }
      char v4 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLTimeZoneManager::startActive()", "%s\n", v4);
      if (v4 != (char *)buf) {
        free(v4);
      }
    }
  }
}

unsigned char *sub_10090C3EC(unsigned char *result)
{
  if (!result[825])
  {
    uint64_t v1 = (uint64_t)result;
    if (qword_102419590 != -1) {
      dispatch_once(&qword_102419590, &stru_1022D38B0);
    }
    int v2 = qword_102419598;
    if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Entering active location mode", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419590 != -1) {
        dispatch_once(&qword_102419590, &stru_1022D38B0);
      }
      int v3 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLTimeZoneManager::enterActiveMode()", "%s\n", v3);
      if (v3 != (char *)buf) {
        free(v3);
      }
    }
    sub_100909E4C(v1, (double *)(v1 + 944));
    *(unsigned char *)(v1 + 825) = 1;
    return [*(id *)(*(void *)(v1 + 24) + 16) register:*(void *)(*(void *)(v1 + 24) + 8) forNotification:4 registrationInfo:0];
  }
  return result;
}

id sub_10090C5B0(uint64_t a1)
{
  if (qword_102419590 != -1) {
    dispatch_once(&qword_102419590, &stru_1022D38B0);
  }
  int v2 = qword_102419598;
  if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Exiting active location mode", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419590 != -1) {
      dispatch_once(&qword_102419590, &stru_1022D38B0);
    }
    char v4 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLTimeZoneManager::exitActiveMode()", "%s\n", v4);
    if (v4 != (char *)buf) {
      free(v4);
    }
  }
  *(void *)uint64_t buf = 0x7FEFFFFFFFFFFFFFLL;
  sub_100909E4C(a1, (double *)buf);
  *(unsigned char *)(a1 + 825) = 0;
  return [*(id *)(*(void *)(a1 + 24) + 16) unregister:*(void *)(*(void *)(a1 + 24) + 8) forNotification:4];
}

BOOL sub_10090C76C(uint64_t a1, unsigned __int8 *a2, uint64_t a3, double *a4)
{
  if (*(double *)(a3 + 20) > *(double *)(a1 + 888))
  {
    if (qword_102419590 != -1) {
      dispatch_once(&qword_102419590, &stru_1022D38B0);
    }
    char v4 = qword_102419598;
    if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_FAULT, "We ran point-in-polygon on a location we threw out anyway!", buf, 2u);
    }
    BOOL v5 = sub_10013D1A0(115, 0);
    BOOL result = 0;
    if (v5)
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419590 != -1) {
        dispatch_once(&qword_102419590, &stru_1022D38B0);
      }
      LOWORD(v31) = 0;
      int v7 = (uint8_t *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "BOOL CLTimeZoneManager::shouldSetSystemTimeZone(const std::string &, const CLDaemonLocation &, double &)", "%s\n");
LABEL_10:
      if (v7 != buf) {
        free(v7);
      }
      return 0;
    }
    return result;
  }
  __int16 v11 = (char *)(a1 + 96);
  uint64_t v12 = a2[23];
  size_t v13 = *((void *)a2 + 1);
  if ((v12 & 0x80u) == 0) {
    uint64_t v14 = a2[23];
  }
  else {
    uint64_t v14 = *((void *)a2 + 1);
  }
  uint64_t v15 = *(unsigned __int8 *)(a1 + 119);
  int v16 = (char)v15;
  if ((v15 & 0x80u) != 0) {
    uint64_t v15 = *(void *)(a1 + 104);
  }
  if (v14 == v15)
  {
    if (v16 >= 0) {
      uint64_t v17 = (char *)(a1 + 96);
    }
    else {
      uint64_t v17 = *(char **)v11;
    }
    if ((v12 & 0x80) != 0)
    {
      if (!memcmp(*(const void **)a2, v17, v13) || v13 == 0) {
        return 1;
      }
      goto LABEL_33;
    }
    if (!a2[23]) {
      return 1;
    }
    while (*a2 == *v17)
    {
      ++a2;
      ++v17;
      if (!--v12) {
        return 1;
      }
    }
  }
  if (!v15) {
    return 1;
  }
LABEL_33:
  char v30 = 0;
  uint64_t v19 = *(void *)a1;
  if (!*(void *)a1)
  {
    uint64_t v19 = sub_10065AD6C();
    *(void *)a1 = v19;
  }
  if ((sub_1006615E0(v19, v11, (double *)(a3 + 4), (double *)(a3 + 12), &v30, a4) & 1) == 0)
  {
    if (qword_102419590 != -1) {
      dispatch_once(&qword_102419590, &stru_1022D38B0);
    }
    double v25 = qword_102419598;
    if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_INFO))
    {
      double v26 = v11;
      if (*(char *)(a1 + 119) < 0) {
        double v26 = *(char **)v11;
      }
      uint64_t v27 = *(void *)(a3 + 20);
      *(_DWORD *)uint64_t buf = 136315394;
      double v36 = *(double *)&v26;
      __int16 v37 = 2048;
      uint64_t v38 = v27;
      _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_INFO, "Current time zone %s not in database; changing time because of acceptable location accuracy %.3f",
        buf,
        0x16u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419590 != -1) {
        dispatch_once(&qword_102419590, &stru_1022D38B0);
      }
      if (*(char *)(a1 + 119) < 0) {
        __int16 v11 = *(char **)v11;
      }
      uint64_t v28 = *(void *)(a3 + 20);
      int v31 = 136315394;
      double v32 = *(double *)&v11;
      __int16 v33 = 2048;
      uint64_t v34 = v28;
      double v29 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLTimeZoneManager::shouldSetSystemTimeZone(const std::string &, const CLDaemonLocation &, double &)", "%s\n", v29);
      if (v29 != (char *)buf) {
        free(v29);
      }
    }
    return 1;
  }
  if (*a4 >= *(double *)(a3 + 20)) {
    return 1;
  }
  if (qword_102419590 != -1) {
    dispatch_once(&qword_102419590, &stru_1022D38B0);
  }
  __int16 v20 = qword_102419598;
  if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_DEFAULT))
  {
    double v21 = *a4;
    uint64_t v22 = *(void *)(a3 + 20);
    *(_DWORD *)uint64_t buf = 134218240;
    double v36 = v21;
    __int16 v37 = 2048;
    uint64_t v38 = v22;
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "#Warning Distance from previous time zone's border is %.3f; accuracy of position is %.3f",
      buf,
      0x16u);
  }
  BOOL result = sub_10013D1A0(115, 2);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419590 != -1) {
      dispatch_once(&qword_102419590, &stru_1022D38B0);
    }
    double v23 = *a4;
    uint64_t v24 = *(void *)(a3 + 20);
    int v31 = 134218240;
    double v32 = v23;
    __int16 v33 = 2048;
    uint64_t v34 = v24;
    int v7 = (uint8_t *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLTimeZoneManager::shouldSetSystemTimeZone(const std::string &, const CLDaemonLocation &, double &)", "%s\n");
    goto LABEL_10;
  }
  return result;
}

BOOL sub_10090CCE0(uint64_t a1, const char *a2)
{
  int v2 = (const std::string *)a2;
  if (a2[23] < 0) {
    a2 = *(const char **)a2;
  }
  CFStringRef v4 = CFStringCreateWithCString(kCFAllocatorDefault, a2, 0x8000100u);
  if (v4)
  {
    if (qword_102419590 != -1) {
      dispatch_once(&qword_102419590, &stru_1022D38B0);
    }
    BOOL v5 = qword_102419598;
    if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_DEBUG))
    {
      if ((v2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v6 = v2;
      }
      else {
        int v6 = (const std::string *)v2->__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)uint64_t buf = 136315138;
      uint64_t v10 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Telling timed the time zone is \"%s\".", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419590 != -1) {
        dispatch_once(&qword_102419590, &stru_1022D38B0);
      }
      int v8 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLTimeZoneManager::setSystemTimeZone(const std::string &)", "%s\n", v8);
      if (v8 != (char *)buf) {
        free(v8);
      }
    }
    off_10241EBF8(@"Location", (uint64_t)v4);
    std::string::operator=((std::string *)(a1 + 96), v2);
    *(CFAbsoluteTime *)(a1 + 144) = CFAbsoluteTimeGetCurrent();
    if (*(unsigned char *)(a1 + 825)) {
      sub_100909E4C(a1, (double *)(a1 + 944));
    }
    CFRelease(v4);
  }
  return v4 != 0;
}

BOOL sub_10090CF38(uint64_t a1, std::string *a2, uint64_t a3)
{
  *(void *)(a1 + 88) = 0xBFF0000000000000;
  int v6 = (void *)(a1 + 88);
  BOOL v7 = sub_10090C76C(a1, (unsigned __int8 *)a2, a3, (double *)(a1 + 88));
  if (!v7)
  {
    std::string::operator=((std::string *)(a1 + 120), a2);
    long long v16 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)(a1 + 308) = *(_OWORD *)a3;
    *(_OWORD *)(a1 + 324) = v16;
    long long v17 = *(_OWORD *)(a3 + 80);
    long long v19 = *(_OWORD *)(a3 + 32);
    long long v18 = *(_OWORD *)(a3 + 48);
    *(_OWORD *)(a1 + 372) = *(_OWORD *)(a3 + 64);
    *(_OWORD *)(a1 + 388) = v17;
    *(_OWORD *)(a1 + 340) = v19;
    *(_OWORD *)(a1 + 356) = v18;
    long long v21 = *(_OWORD *)(a3 + 112);
    long long v20 = *(_OWORD *)(a3 + 128);
    long long v22 = *(_OWORD *)(a3 + 96);
    *(_OWORD *)(a1 + 448) = *(_OWORD *)(a3 + 140);
    *(_OWORD *)(a1 + 420) = v21;
    *(_OWORD *)(a1 + 436) = v20;
    *(_OWORD *)(a1 + 404) = v22;
    return v7;
  }
  *(_DWORD *)(a1 + 820) = 0;
  if (!*(_DWORD *)(a1 + 816))
  {
    if (qword_102419590 != -1) {
      dispatch_once(&qword_102419590, &stru_1022D38B0);
    }
    int v8 = qword_102419598;
    if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#Warning bystander location, used to set time zone, billed to 'TimeZone' system service", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419590 != -1) {
        dispatch_once(&qword_102419590, &stru_1022D38B0);
      }
      __int16 v33 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLTimeZoneManager::setTimeZoneIfAppropriate(const std::string &, const CLDaemonLocation &)", "%s\n", v33);
      if (v33 != (char *)buf) {
        free(v33);
      }
    }
    sub_100C0C648(a1 + 624);
  }
  if (!sub_1004BA5A0())
  {
    if (qword_102419590 != -1) {
      dispatch_once(&qword_102419590, &stru_1022D38B0);
    }
    double v23 = qword_102419598;
    if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_DEFAULT))
    {
      if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v24 = a2;
      }
      else {
        uint64_t v24 = (std::string *)a2->__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)uint64_t buf = 136446210;
      __int16 v37 = v24;
      _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "#Notice Potentially setting system time zone to %{public}s", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419590 != -1) {
        dispatch_once(&qword_102419590, &stru_1022D38B0);
      }
      uint64_t v34 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLTimeZoneManager::setTimeZoneIfAppropriate(const std::string &, const CLDaemonLocation &)", "%s\n", v34);
      if (v34 != (char *)buf) {
        free(v34);
      }
    }
    if (qword_102419590 != -1) {
      dispatch_once(&qword_102419590, &stru_1022D38B0);
    }
    double v25 = qword_102419598;
    if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_INFO))
    {
      if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        double v26 = a2;
      }
      else {
        double v26 = (std::string *)a2->__r_.__value_.__r.__words[0];
      }
      uint64_t v27 = *(void *)(a3 + 4);
      uint64_t v28 = *(void *)(a3 + 12);
      uint64_t v29 = *(void *)(a3 + 20);
      uint64_t v30 = *(void *)(a3 + 76);
      int v31 = *(_DWORD *)(a3 + 84);
      *(_DWORD *)uint64_t buf = 136316419;
      __int16 v37 = v26;
      __int16 v38 = 2049;
      uint64_t v39 = v27;
      __int16 v40 = 2049;
      uint64_t v41 = v28;
      __int16 v42 = 2048;
      uint64_t v43 = v29;
      __int16 v44 = 2048;
      uint64_t v45 = v30;
      __int16 v46 = 1024;
      int v47 = v31;
      _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_INFO, "Potentially setting system time zone to %s based on <%{private}+.8lf,%{private}+.8lf> acc %.2f timestamp %.2f confidence %d", buf, 0x3Au);
    }
    if (!sub_10013D1A0(115, 2)) {
      goto LABEL_37;
    }
    bzero(buf, 0x65CuLL);
    if (qword_102419590 == -1) {
      goto LABEL_51;
    }
    goto LABEL_53;
  }
  if (qword_102419590 != -1) {
    dispatch_once(&qword_102419590, &stru_1022D38B0);
  }
  uint64_t v9 = qword_102419598;
  if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_DEFAULT))
  {
    if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v10 = a2;
    }
    else {
      uint64_t v10 = (std::string *)a2->__r_.__value_.__r.__words[0];
    }
    uint64_t v11 = *(void *)(a3 + 4);
    uint64_t v12 = *(void *)(a3 + 12);
    uint64_t v13 = *(void *)(a3 + 20);
    uint64_t v14 = *(void *)(a3 + 76);
    int v15 = *(_DWORD *)(a3 + 84);
    *(_DWORD *)uint64_t buf = 136316419;
    __int16 v37 = v10;
    __int16 v38 = 2049;
    uint64_t v39 = v11;
    __int16 v40 = 2049;
    uint64_t v41 = v12;
    __int16 v42 = 2048;
    uint64_t v43 = v13;
    __int16 v44 = 2048;
    uint64_t v45 = v14;
    __int16 v46 = 1024;
    int v47 = v15;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "#Notice Potentially setting system time zone to %s based on <%{private}+.8lf,%{private}+.8lf> acc %.2f timestamp %.2f confidence %d", buf, 0x3Au);
  }
  if (!sub_10013D1A0(115, 2)) {
    goto LABEL_37;
  }
  bzero(buf, 0x65CuLL);
  if (qword_102419590 != -1) {
LABEL_53:
  }
    dispatch_once(&qword_102419590, &stru_1022D38B0);
LABEL_51:
  uint64_t v35 = (char *)_os_log_send_and_compose_impl();
  sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLTimeZoneManager::setTimeZoneIfAppropriate(const std::string &, const CLDaemonLocation &)", "%s\n", v35);
  if (v35 != (char *)buf) {
    free(v35);
  }
LABEL_37:
  sub_10090CCE0(a1, (const char *)a2);
  if (*(char *)(a1 + 143) < 0)
  {
    **(unsigned char **)(a1 + 120) = 0;
    *(void *)(a1 + 128) = 0;
  }
  else
  {
    *(unsigned char *)(a1 + 120) = 0;
    *(unsigned char *)(a1 + 143) = 0;
  }
  *int v6 = 0xBFF0000000000000;
  return v7;
}

void sub_10090D68C(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  if (*a3 == 8)
  {
    if (*(unsigned char *)a4)
    {
      if (qword_102419590 != -1) {
        dispatch_once(&qword_102419590, &stru_1022D38B0);
      }
      uint64_t v14 = qword_102419598;
      if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "Got airplane entered notification", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419590 != -1) {
          dispatch_once(&qword_102419590, &stru_1022D38B0);
        }
        int v15 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLTimeZoneManager::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v15);
        if (v15 != (char *)buf) {
          free(v15);
        }
      }
    }
    else
    {
      int v16 = *(_DWORD *)(a1 + 856);
      if (v16)
      {
        if (v16 == -1)
        {
          int v17 = off_10241EBE8();
          if (v17) {
            int v18 = 2;
          }
          else {
            int v18 = 1;
          }
          if (*(_DWORD *)(a1 + 856) != 2 && v17) {
            *(void *)(a1 + 144) = 0;
          }
          *(_DWORD *)(a1 + 856) = v18;
        }
        if (qword_102419590 != -1) {
          dispatch_once(&qword_102419590, &stru_1022D38B0);
        }
        long long v19 = qword_102419598;
        if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)uint64_t buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, "Got airplane mode exited notification; entering continuous location mode",
            buf,
            2u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419590 != -1) {
            dispatch_once(&qword_102419590, &stru_1022D38B0);
          }
          long long v22 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLTimeZoneManager::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v22);
          if (v22 != (char *)buf) {
            free(v22);
          }
        }
        sub_100909C88(a1, (double *)(a1 + 928));
        sub_10090AA18(a1, 2, 1);
      }
    }
  }
  else if (*a3 == 6 && *(int *)(a1 + 820) >= 1 && *(_DWORD *)(a4 + 4) != 0)
  {
    int v6 = off_10241EBE8();
    if (v6) {
      int v7 = 2;
    }
    else {
      int v7 = 1;
    }
    if (*(_DWORD *)(a1 + 856) != 2 && v6 != 0) {
      *(void *)(a1 + 144) = 0;
    }
    *(_DWORD *)(a1 + 856) = v7;
    double v9 = CFAbsoluteTimeGetCurrent() - *(double *)(a1 + 864);
    double v10 = *(double *)(a1 + 976);
    if (v9 >= v10)
    {
      if (qword_102419590 != -1) {
        dispatch_once(&qword_102419590, &stru_1022D38B0);
      }
      long long v20 = qword_102419598;
      if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_INFO, "Got data mode change notification; entering continuous location mode",
          buf,
          2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419590 != -1) {
          dispatch_once(&qword_102419590, &stru_1022D38B0);
        }
        double v23 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLTimeZoneManager::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v23);
        if (v23 != (char *)buf) {
          free(v23);
        }
      }
      sub_100909C88(a1, (double *)(a1 + 928));
      sub_10090AA18(a1, 2, 0);
      *(CFAbsoluteTime *)(a1 + 864) = CFAbsoluteTimeGetCurrent();
    }
    else
    {
      if (qword_102419590 != -1)
      {
        double v24 = *(double *)(a1 + 976);
        dispatch_once(&qword_102419590, &stru_1022D38B0);
        double v10 = v24;
      }
      double v11 = v10 - v9;
      uint64_t v12 = qword_102419598;
      if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_INFO))
      {
        uint64_t v13 = *(void *)(a1 + 976);
        *(_DWORD *)uint64_t buf = 134218240;
        uint64_t v26 = v13;
        __int16 v27 = 2048;
        double v28 = v11;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "Got data mode change notification, but haven't exceeded reachability interval(%.3f s).  Will try again in %.3f s", buf, 0x16u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419590 != -1) {
          dispatch_once(&qword_102419590, &stru_1022D38B0);
        }
        long long v21 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLTimeZoneManager::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v21);
        if (v21 != (char *)buf) {
          free(v21);
        }
      }
      [*(id *)(a1 + 872) setNextFireDelay:v11];
    }
  }
}

void sub_10090DD04(uint64_t a1, uint64_t a2, int *a3)
{
  CFStringRef v4 = (const void *)sub_1000FA17C(a3);
  if (CFEqual(v4, kCTRegistrationNewServingNetworkNotification))
  {
    if (qword_102419590 != -1) {
      dispatch_once(&qword_102419590, &stru_1022D38B0);
    }
    BOOL v5 = qword_102419598;
    if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Ignoring kCTRegistrationNewServingNetworkNotification until <rdar://problem/10068712> is fixed", buf, 2u);
    }
    if (!sub_10013D1A0(115, 2)) {
      return;
    }
    bzero(buf, 0x65CuLL);
    if (qword_102419590 != -1) {
      dispatch_once(&qword_102419590, &stru_1022D38B0);
    }
    *(_WORD *)uint64_t v12 = 0;
    int v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLTimeZoneManager::onTelephonyNotification(int, const CLTelephonyService_Type::Notification &, const CLTelephonyService_Type::NotificationData &)", "%s\n", v6);
    if (v6 == (char *)buf) {
      return;
    }
LABEL_29:
    free(v6);
    return;
  }
  if (qword_102419590 != -1) {
    dispatch_once(&qword_102419590, &stru_1022D38B0);
  }
  int v7 = qword_102419598;
  if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_DEFAULT))
  {
    CFStringRef v8 = (const __CFString *)sub_1000FA17C(a3);
    sub_1000FECE0(v8, (uint64_t)buf);
    double v9 = v17 >= 0 ? buf : *(uint8_t **)buf;
    *(_DWORD *)uint64_t v12 = 136315138;
    *(void *)&v12[4] = v9;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#Warning received unknown notification %s from telephony service", v12, 0xCu);
    if (v17 < 0) {
      operator delete(*(void **)buf);
    }
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419590 != -1) {
      dispatch_once(&qword_102419590, &stru_1022D38B0);
    }
    CFStringRef v10 = (const __CFString *)sub_1000FA17C(a3);
    sub_1000FECE0(v10, (uint64_t)v12);
    if (v13 >= 0) {
      double v11 = v12;
    }
    else {
      double v11 = *(unsigned char **)v12;
    }
    int v14 = 136315138;
    int v15 = v11;
    int v6 = (char *)_os_log_send_and_compose_impl();
    if (v13 < 0) {
      operator delete(*(void **)v12);
    }
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLTimeZoneManager::onTelephonyNotification(int, const CLTelephonyService_Type::Notification &, const CLTelephonyService_Type::NotificationData &)", "%s\n", v6);
    if (v6 != (char *)buf) {
      goto LABEL_29;
    }
  }
}

void sub_10090E058(uint64_t a1)
{
  int v2 = off_10241EBE8();
  if (v2) {
    int v3 = 2;
  }
  else {
    int v3 = 1;
  }
  if (*(_DWORD *)(a1 + 856) != 2 && v2 != 0) {
    *(void *)(a1 + 144) = 0;
  }
  *(_DWORD *)(a1 + 856) = v3;
  if (qword_102419590 != -1) {
    dispatch_once(&qword_102419590, &stru_1022D38B0);
  }
  BOOL v5 = qword_102419598;
  if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)uint64_t buf = 67109120;
    int v8 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Automatic time is now in mode %d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419590 != -1) {
      dispatch_once(&qword_102419590, &stru_1022D38B0);
    }
    int v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLTimeZoneManager::onLocationTimeZoneActiveNotification(CFNotificationCenterRef, CFStringRef, const void *, CFDictionaryRef)", "%s\n", v6);
    if (v6 != (char *)buf) {
      free(v6);
    }
  }
  sub_10090A260(a1);
}

void sub_10090E23C(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  if (*a3 == 4)
  {
    sub_10090A260(a1);
  }
  else if (!*a3)
  {
    if (qword_102419590 != -1) {
      dispatch_once(&qword_102419590, &stru_1022D38B0);
    }
    CFStringRef v4 = qword_102419598;
    if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#Warning location status reset; removing all clients",
        buf,
        2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419590 != -1) {
        dispatch_once(&qword_102419590, &stru_1022D38B0);
      }
      char v13 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLTimeZoneManager::onManagerNotification(int, const CLClientManager_Type::Notification &, const CLClientManager_Type::NotificationData &)", "%s\n", v13);
      if (v13 != (char *)buf) {
        free(v13);
      }
    }
    *(_DWORD *)(a1 + 152) = 0xFFFF;
    uint64_t v5 = a1 + 152;
    *(void *)(v5 + 12) = 0;
    *(void *)(v5 + 4) = 0;
    *(_OWORD *)(v5 + 20) = xmmword_101D1C320;
    __asm { FMOV            V0.2D, #-1.0 }
    *(_OWORD *)(v5 + 36) = _Q0;
    *(_OWORD *)(v5 + 52) = _Q0;
    *(_OWORD *)(v5 + 68) = _Q0;
    *(_DWORD *)(v5 + 84) = 0;
    *(void *)(v5 + 96) = 0;
    *(void *)(v5 + 104) = 0;
    *(void *)(v5 + 88) = 0xBFF0000000000000;
    *(_DWORD *)(v5 + 112) = 0;
    *(void *)(v5 + 116) = 0xBFF0000000000000;
    *(_DWORD *)(v5 + 124) = 0x7FFFFFFF;
    *(void *)(v5 + 136) = 0;
    *(void *)(v5 + 144) = 0;
    *(void *)(v5 + 128) = 0;
    *(unsigned char *)(v5 + 152) = 0;
    id v11 = [[objc_msgSend(*(id *)(v5 - 88), "vendor") proxyForService:@"CLClientManager"];
    if (byte_10247EDFF >= 0) {
      uint64_t v12 = &qword_10247EDE8;
    }
    else {
      uint64_t v12 = (uint64_t *)qword_10247EDE8;
    }
    [v11 resetNotificationConsumedForIdentifier:[NSString stringWithUTF8String:v12]];
  }
}

void sub_10090E4C4(uint64_t a1)
{
  if (qword_102419590 != -1) {
    dispatch_once(&qword_102419590, &stru_1022D38B0);
  }
  int v2 = qword_102419598;
  if (os_log_type_enabled((os_log_t)qword_102419598, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Got immediate check notification", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419590 != -1) {
      dispatch_once(&qword_102419590, &stru_1022D38B0);
    }
    int v3 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLTimeZoneManager::onImmediateCheckNotification(CFNotificationCenterRef, CFStringRef, const void *, CFDictionaryRef)", "%s\n", v3);
    if (v3 != (char *)buf) {
      free(v3);
    }
  }
  sub_10090AA18(a1, 2, 1);
}

void sub_10090E668(id a1)
{
  qword_10247EE18 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/CoreTime.framework/CoreTime", 2);
}

void sub_10090E694(id a1)
{
  qword_102419588 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_10090E6C4(id a1)
{
  qword_102419598 = (uint64_t)os_log_create("com.apple.locationd.Core", "TZ");
}

void sub_10090E6F4(uint64_t a1)
{
}

void sub_10090E6FC(uint64_t a1)
{
}

uint64_t sub_10090E704()
{
  if (qword_10247EE10 != -1) {
    dispatch_once(&qword_10247EE10, &stru_1022D3870);
  }
  uint64_t v0 = (uint64_t *)dlsym((void *)qword_10247EE18, "TMLocationTimeZoneActiveNotification");
  if (v0)
  {
    uint64_t result = *v0;
    qword_10247EE20 = result;
  }
  else
  {
    uint64_t result = qword_10247EE20;
  }
  off_10241EBD0 = sub_10090E784;
  return result;
}

uint64_t sub_10090E784()
{
  return qword_10247EE20;
}

uint64_t sub_10090E790(uint64_t a1)
{
  if (qword_10247EE10 != -1) {
    dispatch_once(&qword_10247EE10, &stru_1022D3870);
  }
  int v2 = (uint64_t (*)())dlsym((void *)qword_10247EE18, "TMSetSourceUnavailable");
  off_10241EBE0 = v2;

  return ((uint64_t (*)(uint64_t))v2)(a1);
}

uint64_t sub_10090E80C()
{
  if (qword_10247EE10 != -1) {
    dispatch_once(&qword_10247EE10, &stru_1022D3870);
  }
  uint64_t v0 = (uint64_t *)dlsym((void *)qword_10247EE18, "TMSourceLocation");
  if (v0)
  {
    uint64_t result = *v0;
    qword_10247EE28 = result;
  }
  else
  {
    uint64_t result = qword_10247EE28;
  }
  off_10241EBD8 = sub_10090E88C;
  return result;
}

uint64_t sub_10090E88C()
{
  return qword_10247EE28;
}

uint64_t sub_10090E898()
{
  if (qword_10247EE10 != -1) {
    dispatch_once(&qword_10247EE10, &stru_1022D3870);
  }
  uint64_t v0 = (uint64_t (*)())dlsym((void *)qword_10247EE18, "TMIsAutomaticTimeZoneEnabled");
  off_10241EBE8 = v0;

  return v0();
}

uint64_t sub_10090E900(uint64_t a1)
{
  if (qword_10247EE10 != -1) {
    dispatch_once(&qword_10247EE10, &stru_1022D3870);
  }
  int v2 = (uint64_t (*)())dlsym((void *)qword_10247EE18, "TMSetSourceAvailable");
  off_10241EBF0 = v2;

  return ((uint64_t (*)(uint64_t))v2)(a1);
}

uint64_t sub_10090E97C(uint64_t a1, uint64_t a2)
{
  if (qword_10247EE10 != -1) {
    dispatch_once(&qword_10247EE10, &stru_1022D3870);
  }
  CFStringRef v4 = (uint64_t (*)())dlsym((void *)qword_10247EE18, "TMSetSourceTimeZone");
  off_10241EBF8 = v4;

  return ((uint64_t (*)(uint64_t, uint64_t))v4)(a1, a2);
}

uint64_t sub_10090EA00()
{
  if (qword_10247EE10 != -1) {
    dispatch_once(&qword_10247EE10, &stru_1022D3870);
  }
  uint64_t v0 = (uint64_t (*)())dlsym((void *)qword_10247EE18, "TMIsTimeZoneConfirmed");
  off_10241EC00 = v0;

  return v0();
}

void sub_10090EA68()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241ADF0, memory_order_acquire) & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_10241ADF0))
    {
      uint64_t v1 = 0x7FFFFFFF00000000;
      v0[2] = xmmword_101D52CA0;
      v0[3] = unk_101D52CB0;
      v0[4] = xmmword_101D52CC0;
      v0[0] = xmmword_101D52C80;
      v0[1] = unk_101D52C90;
      sub_1003BFBA4((uint64_t)&unk_10241ADD8, (int *)v0, 11);
      __cxa_atexit((void (*)(void *))sub_1003BE998, &unk_10241ADD8, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_10241ADF0);
    }
  }
}

void sub_10090EB48(_Unwind_Exception *a1)
{
}

uint64_t sub_10090EB60()
{
  sub_100134750(&qword_10247EDE8, "TimeZoneManager");

  return __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10247EDE8, (void *)&_mh_execute_header);
}

void sub_10090F67C(id a1)
{
  qword_1024193C8 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeoFencing");
}

void sub_100910950(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,void *a55,uint64_t a56,int a57,__int16 a58,char a59,char a60)
{
  if (a42 < 0) {
    operator delete(__p);
  }
  if (a51 < 0) {
    operator delete(a46);
  }
  if (a60 < 0) {
    operator delete(a55);
  }
  _Unwind_Resume(exception_object);
}

void sub_100910A34(uint64_t a1@<X0>, void *a2@<X8>, double a3@<D0>)
{
  __int16 v33 = 0;
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  sub_1001DD364(&v33, *(const void **)a1, *(void *)(a1 + 8), (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 3);
  uint64_t v6 = (char *)v34 - (char *)v33;
  if (v34 == v33)
  {
    if (!v34)
    {
      double v9 = *(double **)a1;
      if (*(void *)(a1 + 8) != *(void *)a1) {
        goto LABEL_30;
      }
LABEL_36:
      sub_100134750(a2, "(--inf,inf)");
      return;
    }
    LODWORD(v7) = 0;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v8 = v6 >> 3;
    if ((unint64_t)(v6 >> 3) <= 1) {
      uint64_t v8 = 1;
    }
    while (v33[v7] < a3)
    {
      if (v8 == ++v7)
      {
        LODWORD(v7) = v8;
        break;
      }
    }
  }
  uint64_t v34 = v33;
  operator delete(v33);
  double v9 = *(double **)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10 == *(void *)a1) {
    goto LABEL_36;
  }
  if (!v7)
  {
LABEL_30:
    std::to_string(&v31, *v9);
    double v25 = std::string::insert(&v31, 0, "(--inf,");
    long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
    v32.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v26;
    v25->__r_.__value_.__l.__size_ = 0;
    v25->__r_.__value_.__r.__words[2] = 0;
    v25->__r_.__value_.__r.__words[0] = 0;
    char v13 = std::string::append(&v32, "]");
LABEL_31:
    long long v27 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
    a2[2] = *((void *)&v13->__r_.__value_.__l + 2);
    *(_OWORD *)a2 = v27;
    v13->__r_.__value_.__l.__size_ = 0;
    v13->__r_.__value_.__r.__words[2] = 0;
    v13->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v32.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0)
    {
      double v24 = (void *)v31.__r_.__value_.__r.__words[0];
      goto LABEL_35;
    }
    return;
  }
  if ((v10 - *(void *)a1) >> 3 == (int)v7)
  {
    std::to_string(&v31, *(double *)(v10 - 8));
    id v11 = std::string::insert(&v31, 0, "(");
    long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
    v32.__r_.__value_.__r.__words[2] = v11->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v12;
    v11->__r_.__value_.__l.__size_ = 0;
    v11->__r_.__value_.__r.__words[2] = 0;
    v11->__r_.__value_.__r.__words[0] = 0;
    char v13 = std::string::append(&v32, ",inf)");
    goto LABEL_31;
  }
  std::to_string(&v29, v9[(int)v7 - 1]);
  int v14 = std::string::insert(&v29, 0, "(");
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v30.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v30.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  int v16 = std::string::append(&v30, ",");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v31.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  std::to_string(&__p, *(double *)(*(void *)a1 + 8 * (int)v7));
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  long long v20 = std::string::append(&v31, (const std::string::value_type *)p_p, size);
  long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
  v32.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v21;
  v20->__r_.__value_.__l.__size_ = 0;
  v20->__r_.__value_.__r.__words[2] = 0;
  v20->__r_.__value_.__r.__words[0] = 0;
  long long v22 = std::string::append(&v32, "]");
  long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  a2[2] = *((void *)&v22->__r_.__value_.__l + 2);
  *(_OWORD *)a2 = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v32.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v31.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v30.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0)
  {
    double v24 = (void *)v29.__r_.__value_.__r.__words[0];
LABEL_35:
    operator delete(v24);
  }
}

void sub_100910D10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 73) < 0) {
    operator delete(*(void **)(v33 - 96));
  }
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a33 < 0) {
    operator delete(a28);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

NSDictionary *sub_100910DC0(char *a1)
{
  v6[0] = @"altitudeDifferenceWhenThresholdSet";
  int v2 = a1 + 32;
  if (a1[55] < 0) {
    int v2 = (void *)*v2;
  }
  v7[0] = +[NSString stringWithUTF8String:v2];
  v6[1] = @"maxAltitudeChangeFromThresholdSetToTrigger";
  int v3 = a1 + 56;
  if (a1[79] < 0) {
    int v3 = (void *)*v3;
  }
  v7[1] = +[NSString stringWithUTF8String:v3];
  v6[2] = @"timeFromThresholdSetToTrigger";
  CFStringRef v4 = a1 + 80;
  if (a1[103] < 0) {
    CFStringRef v4 = (void *)*v4;
  }
  _DWORD v7[2] = +[NSString stringWithUTF8String:v4];
  return +[NSDictionary dictionaryWithObjects:v7 forKeys:v6 count:3];
}

unsigned char *sub_100910EA8(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 55) < 0)
  {
    sub_1000DC48C((unsigned char *)(a1 + 32), *(void **)(a2 + 32), *(void *)(a2 + 40));
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = v4;
  }
  if (*(char *)(a2 + 79) < 0)
  {
    sub_1000DC48C((unsigned char *)(a1 + 56), *(void **)(a2 + 56), *(void *)(a2 + 64));
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 56);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = v5;
  }
  uint64_t result = (unsigned char *)(a1 + 80);
  if (*(char *)(a2 + 103) < 0) {
    return sub_1000DC48C(result, *(void **)(a2 + 80), *(void *)(a2 + 88));
  }
  long long v7 = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_OWORD *)uint64_t result = v7;
  return result;
}

void sub_100910F60(_Unwind_Exception *exception_object)
{
  if (*(char *)(v2 + 79) < 0) {
    operator delete(*v3);
  }
  if (*(char *)(v2 + 55) < 0) {
    operator delete(*v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_100910F94(uint64_t a1)
{
  if (*(char *)(a1 + 103) < 0) {
    operator delete(*(void **)(a1 + 80));
  }
  if (*(char *)(a1 + 79) < 0) {
    operator delete(*(void **)(a1 + 56));
  }
  if (*(char *)(a1 + 55) < 0)
  {
    uint64_t v2 = *(void **)(a1 + 32);
    operator delete(v2);
  }
}

void sub_100911070(id a1)
{
  qword_1024191E8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Altimeter");
}

_OWORD *sub_1009110A0(uint64_t **a1, _OWORD *a2)
{
  long long v4 = operator new(0x40uLL);
  long long v5 = v4;
  long long v6 = a2[1];
  _DWORD v4[2] = *a2;
  v4[3] = v6;
  long long v7 = a1 + 1;
  uint64_t v8 = a1[1];
  if (v8)
  {
    do
    {
      while (1)
      {
        long long v7 = (uint64_t **)v8;
        if (*((float *)v4 + 8) >= *((float *)v8 + 8)) {
          break;
        }
        uint64_t v8 = (uint64_t *)*v8;
        double v9 = v7;
        if (!*v7) {
          goto LABEL_8;
        }
      }
      uint64_t v8 = (uint64_t *)v8[1];
    }
    while (v8);
    double v9 = v7 + 1;
  }
  else
  {
    double v9 = a1 + 1;
  }
LABEL_8:
  sub_1000EDF90(a1, (uint64_t)v7, v9, (uint64_t *)v4);
  return v5;
}

uint64_t **sub_100911138(uint64_t **a1, unint64_t *a2, _OWORD *a3)
{
  long long v6 = a1 + 1;
  long long v5 = a1[1];
  if (v5)
  {
    unint64_t v7 = *a2;
    while (1)
    {
      while (1)
      {
        uint64_t v8 = (uint64_t **)v5;
        unint64_t v9 = v5[4];
        if (v7 >= v9) {
          break;
        }
        long long v5 = *v8;
        long long v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (v9 >= v7) {
        break;
      }
      long long v5 = v8[1];
      if (!v5)
      {
        long long v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    uint64_t v8 = a1 + 1;
LABEL_10:
    uint64_t v10 = (uint64_t *)operator new(0x50uLL);
    long long v11 = a3[1];
    *((_OWORD *)v10 + 2) = *a3;
    *((_OWORD *)v10 + 3) = v11;
    *((_OWORD *)v10 + 4) = a3[2];
    sub_1000EDF90(a1, (uint64_t)v8, v6, v10);
    return (uint64_t **)v10;
  }
  return v8;
}

uint64_t sub_1009111FC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = a1 + 8;
  sub_100911254((char *)a1, *(void **)a2, (void *)(a2 + 8));
  return a1;
}

void sub_10091123C(_Unwind_Exception *a1)
{
  sub_1000F5BB0(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

char *sub_100911254(char *result, void *a2, void *a3)
{
  if (a2 != a3)
  {
    long long v4 = a2;
    long long v5 = (uint64_t **)result;
    long long v6 = (float *)(result + 8);
    do
    {
      uint64_t result = (char *)sub_1009112DC(v5, v6, (_OWORD *)v4 + 2);
      unint64_t v7 = (void *)v4[1];
      if (v7)
      {
        do
        {
          uint64_t v8 = v7;
          unint64_t v7 = (void *)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          uint64_t v8 = (void *)v4[2];
          BOOL v9 = *v8 == (void)v4;
          long long v4 = v8;
        }
        while (!v9);
      }
      long long v4 = v8;
    }
    while (v8 != a3);
  }
  return result;
}

void *sub_1009112DC(uint64_t **a1, float *a2, _OWORD *a3)
{
  long long v6 = operator new(0x40uLL);
  long long v7 = a3[1];
  *((_OWORD *)v6 + 2) = *a3;
  *((_OWORD *)v6 + 3) = v7;
  uint64_t v8 = sub_100911368(a1, a2, &v10, (float *)v6 + 8);
  sub_1000EDF90(a1, (uint64_t)v10, (uint64_t **)v8, (uint64_t *)v6);
  return v6;
}

void sub_100911354(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

float *sub_100911368(void *a1, float *a2, float **a3, float *a4)
{
  long long v4 = (float *)(a1 + 1);
  if (a1 + 1 != (void *)a2 && a2[8] < *a4)
  {
    while (1)
    {
      uint64_t v5 = *(void *)v4;
      a2 = v4;
      if (!*(void *)v4) {
        break;
      }
      while (1)
      {
        long long v4 = (float *)v5;
        if (*(float *)(v5 + 32) >= *a4) {
          break;
        }
        uint64_t v5 = *(void *)(v5 + 8);
        if (!v5) {
          goto LABEL_19;
        }
      }
    }
LABEL_20:
    *a3 = v4;
    return a2;
  }
  uint64_t v6 = *(void *)a2;
  if ((float *)*a1 == a2)
  {
    uint64_t v8 = a2;
  }
  else
  {
    if (v6)
    {
      uint64_t v7 = *(void *)a2;
      do
      {
        uint64_t v8 = (float *)v7;
        uint64_t v7 = *(void *)(v7 + 8);
      }
      while (v7);
    }
    else
    {
      BOOL v9 = a2;
      do
      {
        uint64_t v8 = (float *)*((void *)v9 + 2);
        BOOL v10 = *(void *)v8 == (void)v9;
        BOOL v9 = v8;
      }
      while (v10);
    }
    if (*a4 < v8[8])
    {
      while (1)
      {
        uint64_t v11 = *(void *)v4;
        a2 = v4;
        if (!*(void *)v4) {
          goto LABEL_20;
        }
        while (1)
        {
          long long v4 = (float *)v11;
          if (*a4 < *(float *)(v11 + 32)) {
            break;
          }
          uint64_t v11 = *(void *)(v11 + 8);
          if (!v11)
          {
LABEL_19:
            a2 = v4 + 2;
            goto LABEL_20;
          }
        }
      }
    }
  }
  if (v6)
  {
    *a3 = v8;
    return v8 + 2;
  }
  else
  {
    *a3 = a2;
  }
  return a2;
}

uint64_t sub_100911450()
{
  sub_100134750(qword_10247EE30, "VO2MaxPowerBudgetEstimatorLastExtendedBudgetAllotmentReason");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247EE30, (void *)&_mh_execute_header);
  qword_10247EE50 = 0;
  qword_10247EE58 = 0;
  qword_10247EE48 = 0;
  uint64_t v0 = operator new(0x98uLL);
  qword_10247EE58 = (uint64_t)v0 + 152;
  v0[6] = xmmword_101D52D40;
  v0[7] = unk_101D52D50;
  v0[8] = xmmword_101D52D60;
  *((void *)v0 + 18) = 0x40B3880000000000;
  v0[2] = xmmword_101D52D00;
  v0[3] = unk_101D52D10;
  v0[4] = xmmword_101D52D20;
  _OWORD v0[5] = unk_101D52D30;
  *uint64_t v0 = xmmword_101D52CE0;
  v0[1] = unk_101D52CF0;
  qword_10247EE48 = (uint64_t)v0;
  qword_10247EE50 = (uint64_t)v0 + 152;
  __cxa_atexit((void (*)(void *))sub_10039DF6C, &qword_10247EE48, (void *)&_mh_execute_header);
  qword_10247EE68 = 0;
  unk_10247EE70 = 0;
  qword_10247EE60 = 0;
  uint64_t v1 = operator new(0x58uLL);
  qword_10247EE68 = (uint64_t)v1 + 88;
  unk_10247EE70 = (char *)v1 + 88;
  v1[2] = xmmword_101D52D98;
  v1[3] = unk_101D52DA8;
  v1[4] = xmmword_101D52DB8;
  *((void *)v1 + 10) = 0x4115F90000000000;
  _OWORD *v1 = xmmword_101D52D78;
  v1[1] = unk_101D52D88;
  qword_10247EE60 = (uint64_t)v1;

  return __cxa_atexit((void (*)(void *))sub_10039DF6C, &qword_10247EE60, (void *)&_mh_execute_header);
}

void sub_100911644(id a1)
{
  qword_10247EE78 = (uint64_t)[objc_alloc((Class)CLDispatchSilo) initWithIdentifier:@"CLFenceManagerSilo"];
}

uint64_t sub_100911704(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100914BE4;
  block[3] = &unk_10229FED8;
  void block[4] = a1;
  if (qword_10247EE98 != -1) {
    dispatch_once(&qword_10247EE98, block);
  }
  return qword_10248A710;
}

void sub_1009119D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100488394((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1009119EC(uint64_t *a1, uint64_t a2)
{
  sub_10048AEC0((char *)&__str, (long long *)a2);
  sub_10091F33C((uint64_t)&v91);
  std::string::operator=(&v91, &__str);
  std::string::operator=(&v92, &v107);
  std::string::operator=(&v93, &v108);
  long long v98 = v113;
  long long v99 = v114;
  *(_OWORD *)uint64_t v100 = *(_OWORD *)v115;
  *(void *)&v100[13] = *(void *)&v115[13];
  long long v94 = v109;
  long long v95 = v110;
  long long v96 = v111;
  long long v97 = v112;
  std::string::operator=(&v101, &v116);
  long long v4 = v102;
  id v102 = v117;

  sub_10027C3B4(v103, (char *)__src, (uint64_t)v119, (v119 - (unsigned char *)__src) >> 4);
  memset(v90, 0, sizeof(v90));
  if (v119 != __src && !sub_100BA99C0((uint64_t)&__str))
  {
    sub_100917E48((uint64_t)a1, (uint64_t)&v91);
    uint64_t v10 = 0;
    goto LABEL_264;
  }
  sub_10048AEC0(__dst, (long long *)a2);
  sub_1001AC054((uint64_t)v104, (long long *)__dst);
  if (__p)
  {
    v131 = __p;
    operator delete(__p);
  }

  if (v128 < 0) {
    operator delete(v127);
  }
  if (v126 < 0) {
    operator delete(v125);
  }
  if (v124 < 0) {
    operator delete(*(void **)&__dst[24]);
  }
  if ((__dst[23] & 0x80000000) != 0) {
    operator delete(*(void **)__dst);
  }
  uint64_t v105 = 0x4079000000000000;
  sub_100110970((char *)v79);
  if (!sub_100DAA584((uint64_t)(a1 + 14)))
  {
LABEL_38:
    memset(&buf, 0, sizeof(buf));
    uint64_t v11 = *(unsigned __int8 *)(a2 + 71);
    if ((v11 & 0x80u) != 0) {
      uint64_t v11 = *(void *)(a2 + 56);
    }
    if (v11) {
      long long v12 = (const std::string *)(a2 + 48);
    }
    else {
      long long v12 = (const std::string *)a2;
    }
    std::string::operator=(&buf, v12);
    if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0)
    {
      std::string::size_type size = buf.__r_.__value_.__l.__size_;
      if (buf.__r_.__value_.__l.__size_ == 19)
      {
        BOOL v17 = *(void *)buf.__r_.__value_.__l.__data_ == 0x6C7070612E6D6F63
           && *(void *)(buf.__r_.__value_.__r.__words[0] + 8) == 0x646E696D65722E65;
        if (v17 && *(void *)(buf.__r_.__value_.__r.__words[0] + 11) == 0x737265646E696D65) {
          goto LABEL_110;
        }
      }
      if (buf.__r_.__value_.__l.__size_ == 84)
      {
        if (!memcmp(buf.__r_.__value_.__l.__data_, "com.apple.locationd.bundle-/System/Library/PrivateFrameworks/BulletinBoard.framework", 0x54uLL))goto LABEL_110; {
        std::string::size_type size = buf.__r_.__value_.__l.__size_;
        }
      }
      if (size == 74)
      {
        if (!memcmp(buf.__r_.__value_.__l.__data_, "com.apple.locationd.bundle-/System/Library/PrivateFrameworks/FMF.framework", 0x4AuLL))goto LABEL_110; {
        std::string::size_type size = buf.__r_.__value_.__l.__size_;
        }
      }
      if (size == 83)
      {
        if (!memcmp(buf.__r_.__value_.__l.__data_, "com.apple.locationd.bundle-/System/Library/PrivateFrameworks/FindMyDevice.framework", 0x53uLL))goto LABEL_110; {
        std::string::size_type size = buf.__r_.__value_.__l.__size_;
        }
      }
      if (size != 81) {
        goto LABEL_76;
      }
      p_std::string buf = (std::string *)buf.__r_.__value_.__r.__words[0];
    }
    else
    {
      if (HIBYTE(buf.__r_.__value_.__r.__words[2]) <= 0x50u)
      {
        if (HIBYTE(buf.__r_.__value_.__r.__words[2]) == 19)
        {
          if (buf.__r_.__value_.__r.__words[0] == 0x6C7070612E6D6F63
            && buf.__r_.__value_.__l.__size_ == 0x646E696D65722E65
            && *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 3) == 0x737265646E696D65)
          {
            goto LABEL_110;
          }
        }
        else if (HIBYTE(buf.__r_.__value_.__r.__words[2]) == 74 {
               && !memcmp(&buf, "com.apple.locationd.bundle-/System/Library/PrivateFrameworks/FMF.framework", 0x4AuLL))
        }
        {
          goto LABEL_110;
        }
        goto LABEL_76;
      }
      if (HIBYTE(buf.__r_.__value_.__r.__words[2]) != 81)
      {
        if (HIBYTE(buf.__r_.__value_.__r.__words[2]) != 83)
        {
          if (HIBYTE(buf.__r_.__value_.__r.__words[2]) == 84)
          {
            char v13 = "com.apple.locationd.bundle-/System/Library/PrivateFrameworks/BulletinBoard.framework";
            p_std::string buf = &buf;
            size_t v15 = 84;
            goto LABEL_75;
          }
LABEL_76:
          if (sub_1009183C0(&buf, "com.apple.locationd.bundle-/System/Library/LocationBundles/RemindersAlerts.bundle")
            && sub_1009183C0(&buf, "com.apple.locationd.bundle-/System/Library/LocationBundles/Wea.bundle")
            && sub_1009183C0(&buf, "com.apple.locationd.bundle-/AppleInternal/Library/Frameworks/CoreAutomationDevice.framework")&& sub_1009183C0(&buf, "com.apple.locationd.bundle-/AppleInternal/Library/LocationBundles/FenceTester.bundle")&& sub_1009183C0(&buf, "com.apple.locationd.bundle-/System/Library/LocationBundles/LocationFenceSync.bundle")&& sub_1009183C0(&buf, "com.apple.locationd.bundle-/System/Library/LocationBundles/LocationdInternal.bundle"))
          {
            unsigned int v19 = sub_100DAB2AC((uint64_t)(a1 + 14));
            unsigned int v20 = v19;
            if ((v19 & 0x80000000) != 0)
            {
              if (qword_1024193C0 != -1) {
                dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
              }
              uint64_t v52 = qword_1024193C8;
              if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_FAULT))
              {
                double v53 = &buf;
                if ((buf.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                  double v53 = (std::string *)buf.__r_.__value_.__r.__words[0];
                }
                *(_DWORD *)long long __dst = 68289282;
                *(_DWORD *)&__dst[4] = 0;
                *(_WORD *)&__dst[8] = 2082;
                *(void *)&__dst[10] = "";
                *(_WORD *)&__dst[18] = 2082;
                *(void *)&__dst[20] = v53;
                _os_log_impl((void *)&_mh_execute_header, v52, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"Fence: unable to retrieve count of Fences\", \"bundleID\":%{public, location:escape_only}s}", __dst, 0x1Cu);
                if (qword_1024193C0 != -1) {
                  dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
                }
              }
              double v54 = qword_1024193C8;
              if (!os_signpost_enabled((os_log_t)qword_1024193C8))
              {
LABEL_218:
                unsigned int v56 = qword_1024193C8;
                if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
                {
                  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                    std::string::size_type v57 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
                  }
                  else {
                    std::string::size_type v57 = __str.__r_.__value_.__l.__size_;
                  }
                  int v58 = __dst;
                  sub_1001110E4((uint64_t)__dst, v57 + 1);
                  if (__dst[23] < 0) {
                    int v58 = *(unsigned char **)__dst;
                  }
                  if (v57)
                  {
                    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                      p_str = &__str;
                    }
                    else {
                      p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
                    }
                    memmove(v58, p_str, v57);
                  }
                  *(_WORD *)&v58[v57] = 47;
                  if ((v107.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                    uint64_t v60 = &v107;
                  }
                  else {
                    uint64_t v60 = (std::string *)v107.__r_.__value_.__r.__words[0];
                  }
                  if ((v107.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                    std::string::size_type v61 = HIBYTE(v107.__r_.__value_.__r.__words[2]);
                  }
                  else {
                    std::string::size_type v61 = v107.__r_.__value_.__l.__size_;
                  }
                  uint64_t v62 = std::string::append((std::string *)__dst, (const std::string::value_type *)v60, v61);
                  long long v63 = *(_OWORD *)&v62->__r_.__value_.__l.__data_;
                  v121.__r_.__value_.__r.__words[2] = v62->__r_.__value_.__r.__words[2];
                  *(_OWORD *)&v121.__r_.__value_.__l.__data_ = v63;
                  v62->__r_.__value_.__l.__size_ = 0;
                  v62->__r_.__value_.__r.__words[2] = 0;
                  v62->__r_.__value_.__r.__words[0] = 0;
                  if ((__dst[23] & 0x80000000) != 0) {
                    operator delete(*(void **)__dst);
                  }
                  uint64_t v64 = &v121;
                  if ((v121.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                    uint64_t v64 = (std::string *)v121.__r_.__value_.__r.__words[0];
                  }
                  LODWORD(v120.__r_.__value_.__l.__data_) = 136380675;
                  *(std::string::size_type *)((char *)v120.__r_.__value_.__r.__words + 4) = (std::string::size_type)v64;
                  _os_log_impl((void *)&_mh_execute_header, v56, OS_LOG_TYPE_DEBUG, "canPerformMonitoringForFence is false, fence, %{private}s", (uint8_t *)&v120, 0xCu);
                  if (SHIBYTE(v121.__r_.__value_.__r.__words[2]) < 0) {
                    operator delete(v121.__r_.__value_.__l.__data_);
                  }
                }
                if (!sub_10013D1A0(115, 2)) {
                  goto LABEL_242;
                }
                bzero(__dst, 0x65CuLL);
                if (qword_1024193C0 != -1) {
                  dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
                }
                sub_100918454((const void **)&__str.__r_.__value_.__l.__data_, &v121);
                if ((v121.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  uint64_t v70 = &v121;
                }
                else {
                  uint64_t v70 = (std::string *)v121.__r_.__value_.__r.__words[0];
                }
                LODWORD(v120.__r_.__value_.__l.__data_) = 136380675;
                *(std::string::size_type *)((char *)v120.__r_.__value_.__r.__words + 4) = (std::string::size_type)v70;
                uint64_t v50 = (char *)_os_log_send_and_compose_impl();
                if (SHIBYTE(v121.__r_.__value_.__r.__words[2]) < 0) {
                  operator delete(v121.__r_.__value_.__l.__data_);
                }
                sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLFenceManager::addFence(const CLFenceManager_Type::Fence &)", "%s\n", v50);
                if (v50 == __dst) {
                  goto LABEL_242;
                }
                goto LABEL_292;
              }
              double v55 = &buf;
              if ((buf.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                double v55 = (std::string *)buf.__r_.__value_.__r.__words[0];
              }
              *(_DWORD *)long long __dst = 68289282;
              *(_DWORD *)&__dst[4] = 0;
              *(_WORD *)&__dst[8] = 2082;
              *(void *)&__dst[10] = "";
              *(_WORD *)&__dst[18] = 2082;
              *(void *)&__dst[20] = v55;
              _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v54, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Fence: unable to retrieve count of Fences", "{\"msg%{public}.0s\":\"Fence: unable to retrieve count of Fences\", \"bundleID\":%{public, location:escape_only}s}", __dst, 0x1Cu);
              goto LABEL_216;
            }
            if (v19 >= 0x14)
            {
              if (qword_1024193C0 != -1) {
                dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
              }
              long long v21 = qword_1024193C8;
              if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
              {
                sub_100918454((const void **)a2, &v121);
                long long v22 = (v121.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
                    ? &v121
                    : (std::string *)v121.__r_.__value_.__r.__words[0];
                *(_DWORD *)long long __dst = 136381187;
                *(void *)&__dst[4] = v22;
                *(_WORD *)&__dst[12] = 1025;
                *(_DWORD *)&__dst[14] = v20;
                *(_WORD *)&__dst[18] = 1025;
                *(_DWORD *)&__dst[20] = 20;
                _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "Fence: fence not added, too many fences, %{private}s, %{private}d, %{private}u", __dst, 0x18u);
                if (SHIBYTE(v121.__r_.__value_.__r.__words[2]) < 0) {
                  operator delete(v121.__r_.__value_.__l.__data_);
                }
              }
              if (!sub_10013D1A0(115, 2)) {
                goto LABEL_216;
              }
              bzero(__dst, 0x65CuLL);
              if (qword_1024193C0 != -1) {
                dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
              }
              sub_100918454((const void **)a2, &v120);
              if ((v120.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                long long v23 = &v120;
              }
              else {
                long long v23 = (std::string *)v120.__r_.__value_.__r.__words[0];
              }
              LODWORD(v121.__r_.__value_.__l.__data_) = 136381187;
              *(std::string::size_type *)((char *)v121.__r_.__value_.__r.__words + 4) = (std::string::size_type)v23;
              WORD2(v121.__r_.__value_.__r.__words[1]) = 1025;
              *(_DWORD *)((char *)&v121.__r_.__value_.__r.__words[1] + 6) = v20;
              WORD1(v121.__r_.__value_.__r.__words[2]) = 1025;
              HIDWORD(v121.__r_.__value_.__r.__words[2]) = 20;
              double v24 = (char *)_os_log_send_and_compose_impl();
              if (SHIBYTE(v120.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(v120.__r_.__value_.__l.__data_);
              }
              sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLFenceManager::addFence(const CLFenceManager_Type::Fence &)", "%s\n", v24);
              if (v24 == __dst) {
                goto LABEL_216;
              }
              goto LABEL_129;
            }
          }
LABEL_110:
          sub_100103240();
          if ((sub_1001073D0() & 0x100) != 0)
          {
            if (*(void *)(a2 + 232) == *(void *)(a2 + 224)
              && !sub_1000EF68C(*(double *)(a2 + 72), *(double *)(a2 + 80)))
            {
              if (qword_1024193C0 != -1) {
                dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
              }
              uint64_t v45 = qword_1024193C8;
              if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
              {
                __int16 v46 = &__str;
                if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                  __int16 v46 = (std::string *)__str.__r_.__value_.__r.__words[0];
                }
                if ((v107.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  int v47 = &v107;
                }
                else {
                  int v47 = (std::string *)v107.__r_.__value_.__r.__words[0];
                }
                *(_DWORD *)long long __dst = 136380931;
                *(void *)&__dst[4] = v46;
                *(_WORD *)&__dst[12] = 2081;
                *(void *)&__dst[14] = v47;
                _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_DEFAULT, "Not adding fence %{private}s/%{private}s because coordinate is invalid", __dst, 0x16u);
              }
              if (!sub_10013D1A0(115, 2)) {
                goto LABEL_242;
              }
              bzero(__dst, 0x65CuLL);
              if (qword_1024193C0 != -1) {
                dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
              }
              uint64_t v48 = &__str;
              if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                uint64_t v48 = (std::string *)__str.__r_.__value_.__r.__words[0];
              }
              uint64_t v49 = (v107.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
                  ? &v107
                  : (std::string *)v107.__r_.__value_.__r.__words[0];
              LODWORD(v121.__r_.__value_.__l.__data_) = 136380931;
              *(std::string::size_type *)((char *)v121.__r_.__value_.__r.__words + 4) = (std::string::size_type)v48;
              WORD2(v121.__r_.__value_.__r.__words[1]) = 2081;
              *(std::string::size_type *)((char *)&v121.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v49;
              uint64_t v50 = (char *)_os_log_send_and_compose_impl();
              sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLFenceManager::addFence(const CLFenceManager_Type::Fence &)", "%s\n", v50);
              if (v50 == __dst) {
                goto LABEL_242;
              }
LABEL_292:
              free(v50);
              goto LABEL_242;
            }
            if (sub_100DCCD8C(&__str, v104))
            {
              if (qword_1024193C0 != -1) {
                dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
              }
              std::string v32 = qword_1024193C8;
              if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
              {
                if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  std::string::size_type v33 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
                }
                else {
                  std::string::size_type v33 = __str.__r_.__value_.__l.__size_;
                }
                uint64_t v34 = __dst;
                sub_1001110E4((uint64_t)__dst, v33 + 1);
                if (__dst[23] < 0) {
                  uint64_t v34 = *(unsigned char **)__dst;
                }
                if (v33)
                {
                  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                    uint64_t v35 = &__str;
                  }
                  else {
                    uint64_t v35 = (std::string *)__str.__r_.__value_.__r.__words[0];
                  }
                  memmove(v34, v35, v33);
                }
                *(_WORD *)&v34[v33] = 47;
                if ((v107.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  double v36 = &v107;
                }
                else {
                  double v36 = (std::string *)v107.__r_.__value_.__r.__words[0];
                }
                if ((v107.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  std::string::size_type v37 = HIBYTE(v107.__r_.__value_.__r.__words[2]);
                }
                else {
                  std::string::size_type v37 = v107.__r_.__value_.__l.__size_;
                }
                __int16 v38 = std::string::append((std::string *)__dst, (const std::string::value_type *)v36, v37);
                long long v39 = *(_OWORD *)&v38->__r_.__value_.__l.__data_;
                v121.__r_.__value_.__r.__words[2] = v38->__r_.__value_.__r.__words[2];
                *(_OWORD *)&v121.__r_.__value_.__l.__data_ = v39;
                v38->__r_.__value_.__l.__size_ = 0;
                v38->__r_.__value_.__r.__words[2] = 0;
                v38->__r_.__value_.__r.__words[0] = 0;
                if ((__dst[23] & 0x80000000) != 0) {
                  operator delete(*(void **)__dst);
                }
                __int16 v40 = &v121;
                if ((v121.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                  __int16 v40 = (std::string *)v121.__r_.__value_.__r.__words[0];
                }
                LODWORD(v120.__r_.__value_.__l.__data_) = 136380675;
                *(std::string::size_type *)((char *)v120.__r_.__value_.__r.__words + 4) = (std::string::size_type)v40;
                _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEBUG, "canPerformMonitoringForFence is true, fence, %{private}s", (uint8_t *)&v120, 0xCu);
                if (SHIBYTE(v121.__r_.__value_.__r.__words[2]) < 0) {
                  operator delete(v121.__r_.__value_.__l.__data_);
                }
              }
              if (sub_10013D1A0(115, 2))
              {
                bzero(__dst, 0x65CuLL);
                if (qword_1024193C0 != -1) {
                  dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
                }
                sub_100918454((const void **)&__str.__r_.__value_.__l.__data_, &v121);
                if ((v121.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  int v73 = &v121;
                }
                else {
                  int v73 = (std::string *)v121.__r_.__value_.__r.__words[0];
                }
                LODWORD(v120.__r_.__value_.__l.__data_) = 136380675;
                *(std::string::size_type *)((char *)v120.__r_.__value_.__r.__words + 4) = (std::string::size_type)v73;
                uint64_t v74 = (char *)_os_log_send_and_compose_impl();
                if (SHIBYTE(v121.__r_.__value_.__r.__words[2]) < 0) {
                  operator delete(v121.__r_.__value_.__l.__data_);
                }
                sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLFenceManager::addFence(const CLFenceManager_Type::Fence &)", "%s\n", v74);
                if (v74 != __dst) {
                  free(v74);
                }
              }
              if (qword_1024193C0 != -1) {
                dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
              }
              uint64_t v41 = qword_1024193C8;
              if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
              {
                sub_100C8C864((uint64_t)&__str);
                __int16 v42 = __dst[23] >= 0 ? __dst : *(unsigned char **)__dst;
                LODWORD(v121.__r_.__value_.__l.__data_) = 136380675;
                *(std::string::size_type *)((char *)v121.__r_.__value_.__r.__words + 4) = (std::string::size_type)v42;
                _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEBUG, "Adding fence %{private}s", (uint8_t *)&v121, 0xCu);
                if ((__dst[23] & 0x80000000) != 0) {
                  operator delete(*(void **)__dst);
                }
              }
              if (sub_10013D1A0(115, 2))
              {
                bzero(__dst, 0x65CuLL);
                if (qword_1024193C0 != -1) {
                  dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
                }
                sub_100C8C864((uint64_t)&__str);
                if ((v121.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  uint64_t v75 = &v121;
                }
                else {
                  uint64_t v75 = (std::string *)v121.__r_.__value_.__r.__words[0];
                }
                LODWORD(v120.__r_.__value_.__l.__data_) = 136380675;
                *(std::string::size_type *)((char *)v120.__r_.__value_.__r.__words + 4) = (std::string::size_type)v75;
                unint64_t v76 = (char *)_os_log_send_and_compose_impl();
                if (SHIBYTE(v121.__r_.__value_.__r.__words[2]) < 0) {
                  operator delete(v121.__r_.__value_.__l.__data_);
                }
                sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLFenceManager::addFence(const CLFenceManager_Type::Fence &)", "%s\n", v76);
                if (v76 != __dst) {
                  free(v76);
                }
              }
              if (sub_100DA9D1C(a1 + 14, (uint64_t)&__str))
              {
                if (qword_1024193C0 != -1) {
                  dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
                }
                uint64_t v43 = qword_1024193C8;
                if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
                {
                  sub_100C8C864((uint64_t)&v91);
                  __int16 v44 = __dst[23] >= 0 ? __dst : *(unsigned char **)__dst;
                  LODWORD(v121.__r_.__value_.__l.__data_) = 136380675;
                  *(std::string::size_type *)((char *)v121.__r_.__value_.__r.__words + 4) = (std::string::size_type)v44;
                  _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEFAULT, "Fence:Add sending kNotificationFenceSetupCompleted, fence, %{private}s", (uint8_t *)&v121, 0xCu);
                  if ((__dst[23] & 0x80000000) != 0) {
                    operator delete(*(void **)__dst);
                  }
                }
                if (sub_10013D1A0(115, 2))
                {
                  bzero(__dst, 0x65CuLL);
                  if (qword_1024193C0 != -1) {
                    dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
                  }
                  sub_100C8C864((uint64_t)&v91);
                  if ((v121.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                    double v77 = &v121;
                  }
                  else {
                    double v77 = (std::string *)v121.__r_.__value_.__r.__words[0];
                  }
                  LODWORD(v120.__r_.__value_.__l.__data_) = 136380675;
                  *(std::string::size_type *)((char *)v120.__r_.__value_.__r.__words + 4) = (std::string::size_type)v77;
                  uint64_t v78 = (char *)_os_log_send_and_compose_impl();
                  if (SHIBYTE(v121.__r_.__value_.__r.__words[2]) < 0) {
                    operator delete(v121.__r_.__value_.__l.__data_);
                  }
                  sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLFenceManager::addFence(const CLFenceManager_Type::Fence &)", "%s\n", v78);
                  if (v78 != __dst) {
                    free(v78);
                  }
                }
                *(_DWORD *)long long __dst = 3;
                (*(void (**)(uint64_t *, unsigned char *, std::string *, void, uint64_t, void))(*a1 + 152))(a1, __dst, &v91, 0, 0xFFFFFFFFLL, 0);
                uint64_t v10 = 1;
                goto LABEL_252;
              }
LABEL_242:
              if (qword_1024193C0 != -1) {
                dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
              }
              uint64_t v65 = qword_1024193C8;
              if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
              {
                sub_100C8C864((uint64_t)&v91);
                int v66 = __dst[23] >= 0 ? __dst : *(unsigned char **)__dst;
                LODWORD(v121.__r_.__value_.__l.__data_) = 136380675;
                *(std::string::size_type *)((char *)v121.__r_.__value_.__r.__words + 4) = (std::string::size_type)v66;
                _os_log_impl((void *)&_mh_execute_header, v65, OS_LOG_TYPE_DEFAULT, "Fence:Fail sending kNotificationFenceFailure, fence, %{private}s", (uint8_t *)&v121, 0xCu);
                if ((__dst[23] & 0x80000000) != 0) {
                  operator delete(*(void **)__dst);
                }
              }
              if (sub_10013D1A0(115, 2))
              {
                bzero(__dst, 0x65CuLL);
                if (qword_1024193C0 != -1) {
                  dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
                }
                sub_100C8C864((uint64_t)&v91);
                if ((v121.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  int v68 = &v121;
                }
                else {
                  int v68 = (std::string *)v121.__r_.__value_.__r.__words[0];
                }
                LODWORD(v120.__r_.__value_.__l.__data_) = 136380675;
                *(std::string::size_type *)((char *)v120.__r_.__value_.__r.__words + 4) = (std::string::size_type)v68;
                int v69 = (char *)_os_log_send_and_compose_impl();
                if (SHIBYTE(v121.__r_.__value_.__r.__words[2]) < 0) {
                  operator delete(v121.__r_.__value_.__l.__data_);
                }
                sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLFenceManager::addFence(const CLFenceManager_Type::Fence &)", "%s\n", v69);
                if (v69 != __dst) {
                  free(v69);
                }
              }
              sub_100917E48((uint64_t)a1, (uint64_t)&v91);
              uint64_t v10 = 0;
LABEL_252:
              if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(buf.__r_.__value_.__l.__data_);
              }
              goto LABEL_254;
            }
            goto LABEL_216;
          }
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
          }
          long long v27 = qword_1024193C8;
          if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
          {
            double v28 = &__str;
            if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              double v28 = (std::string *)__str.__r_.__value_.__r.__words[0];
            }
            if ((v107.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              std::string v29 = &v107;
            }
            else {
              std::string v29 = (std::string *)v107.__r_.__value_.__r.__words[0];
            }
            *(_DWORD *)long long __dst = 136380931;
            *(void *)&__dst[4] = v28;
            *(_WORD *)&__dst[12] = 2081;
            *(void *)&__dst[14] = v29;
            _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "Fence: monitoring is not supported on this platform; not adding fence %{private}s/%{private}s",
              __dst,
              0x16u);
          }
          if (sub_10013D1A0(115, 2))
          {
            bzero(__dst, 0x65CuLL);
            if (qword_1024193C0 != -1) {
              dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
            }
            std::string v30 = &__str;
            if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              std::string v30 = (std::string *)__str.__r_.__value_.__r.__words[0];
            }
            std::string v31 = (v107.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
                ? &v107
                : (std::string *)v107.__r_.__value_.__r.__words[0];
            LODWORD(v121.__r_.__value_.__l.__data_) = 136380931;
            *(std::string::size_type *)((char *)v121.__r_.__value_.__r.__words + 4) = (std::string::size_type)v30;
            WORD2(v121.__r_.__value_.__r.__words[1]) = 2081;
            *(std::string::size_type *)((char *)&v121.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v31;
            double v24 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLFenceManager::addFence(const CLFenceManager_Type::Fence &)", "%s\n", v24);
            if (v24 != __dst) {
LABEL_129:
            }
              free(v24);
          }
LABEL_216:
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
          }
          goto LABEL_218;
        }
        char v13 = "com.apple.locationd.bundle-/System/Library/PrivateFrameworks/FindMyDevice.framework";
        p_std::string buf = &buf;
        size_t v15 = 83;
LABEL_75:
        if (!memcmp(p_buf, v13, v15)) {
          goto LABEL_110;
        }
        goto LABEL_76;
      }
      p_std::string buf = &buf;
    }
    char v13 = "com.apple.locationd.bundle-/System/Library/LocationBundles/FindMyDevice.framework";
    size_t v15 = 81;
    goto LABEL_75;
  }
  if (!sub_100C8C770(a2, (uint64_t)v79))
  {
    sub_100DA6F70((uint64_t)(a1 + 14), (long long *)a2);
    goto LABEL_38;
  }
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
  }
  uint64_t v5 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
  {
    sub_100C8C864((uint64_t)&v91);
    uint64_t v6 = __dst[23] >= 0 ? __dst : *(unsigned char **)__dst;
    LODWORD(buf.__r_.__value_.__l.__data_) = 136380675;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Fence:Add sending kNotificationFenceSetupCompleted - existed, fence, %{private}s", (uint8_t *)&buf, 0xCu);
    if ((__dst[23] & 0x80000000) != 0) {
      operator delete(*(void **)__dst);
    }
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(__dst, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    sub_100C8C864((uint64_t)&v91);
    if ((buf.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v71 = &buf;
    }
    else {
      int v71 = (std::string *)buf.__r_.__value_.__r.__words[0];
    }
    LODWORD(v121.__r_.__value_.__l.__data_) = 136380675;
    *(std::string::size_type *)((char *)v121.__r_.__value_.__r.__words + 4) = (std::string::size_type)v71;
    unsigned int v72 = (char *)_os_log_send_and_compose_impl();
    if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(buf.__r_.__value_.__l.__data_);
    }
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLFenceManager::addFence(const CLFenceManager_Type::Fence &)", "%s\n", v72);
    if (v72 != __dst) {
      free(v72);
    }
  }
  *(_DWORD *)long long __dst = 3;
  (*(void (**)(uint64_t *, unsigned char *, std::string *, void, uint64_t, void))(*a1 + 152))(a1, __dst, &v91, 0, 0xFFFFFFFFLL, 0);
  if (!sub_100DA671C((uint64_t)(a1 + 14), (uint64_t)&__str)) {
    goto LABEL_204;
  }
  unsigned int v7 = sub_100D80460((uint64_t)(a1 + 43), (uint64_t)&__str, 1);
  LODWORD(buf.__r_.__value_.__l.__data_) = v7;
  if (v7 < 2)
  {
    *(_DWORD *)long long __dst = 8;
    sub_100917F98((uint64_t)a1, (uint64_t)&__str, (int *)&buf, (int *)__dst, 0xFFFFFFFFLL);
  }
  else
  {
    if (v7 == 2)
    {
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
      }
      double v51 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)long long __dst = 0;
        _os_log_impl((void *)&_mh_execute_header, v51, OS_LOG_TYPE_DEFAULT, "#Warning monitoring for identical pre-existing fence hasn't started yet", __dst, 2u);
      }
      if (!sub_10013D1A0(115, 2)) {
        goto LABEL_204;
      }
      bzero(__dst, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
      }
      LOWORD(v121.__r_.__value_.__l.__data_) = 0;
      BOOL v9 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLFenceManager::addFence(const CLFenceManager_Type::Fence &)", "%s\n", v9);
    }
    else
    {
      if (v7 != 3) {
        goto LABEL_204;
      }
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
      }
      uint64_t v8 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)long long __dst = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_FAULT, "Fence Status Not Set used for analytics received in FenceManager", __dst, 2u);
      }
      if (!sub_10013D1A0(115, 0)) {
        goto LABEL_204;
      }
      bzero(__dst, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
      }
      LOWORD(v121.__r_.__value_.__l.__data_) = 0;
      BOOL v9 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "BOOL CLFenceManager::addFence(const CLFenceManager_Type::Fence &)", "%s\n", v9);
    }
    if (v9 != __dst) {
      free(v9);
    }
  }
LABEL_204:
  uint64_t v10 = 1;
LABEL_254:
  if (v88)
  {
    v89 = v88;
    operator delete(v88);
  }

  if (v86 < 0) {
    operator delete(v85);
  }
  if (v84 < 0) {
    operator delete(v83);
  }
  if (v82 < 0) {
    operator delete(v81);
  }
  if (v80 < 0) {
    operator delete(v79[0]);
  }
LABEL_264:
  *(void *)long long __dst = v90;
  sub_10008DF5C((void ***)__dst);
  sub_1001111C8((uint64_t)&v91);
  if (__src)
  {
    v119 = __src;
    operator delete(__src);
  }

  if (SHIBYTE(v116.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v116.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v108.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v108.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v107.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v107.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  return v10;
}

void sub_1009134D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,char a46)
{
  if (SLOBYTE(STACK[0x8C7]) < 0) {
    operator delete((void *)STACK[0x8B0]);
  }
  sub_100488394((uint64_t)&a12);
  a12 = (void **)&a43;
  sub_10008DF5C(&a12);
  sub_1001111C8((uint64_t)&a46);
  sub_100488394((uint64_t)&STACK[0x770]);
  _Unwind_Resume(a1);
}

void sub_1009136BC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100488394((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1009136D0(uint64_t a1, long long *a2)
{
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
  }
  long long v4 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
  {
    if (*((char *)a2 + 23) >= 0) {
      uint64_t v5 = (uint64_t *)a2;
    }
    else {
      uint64_t v5 = *(uint64_t **)a2;
    }
    if (*((char *)a2 + 47) >= 0) {
      uint64_t v6 = (uint64_t *)a2 + 3;
    }
    else {
      uint64_t v6 = (uint64_t *)*((void *)a2 + 3);
    }
    *(_DWORD *)std::string buf = 136446467;
    uint64_t v11 = v5;
    __int16 v12 = 2081;
    char v13 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Fence:Remove fence %{public}s/%{private}s", buf, 0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    BOOL v9 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLFenceManager::removeFence(const CLFenceManager_Type::Fence &)", "%s\n", v9);
    if (v9 != (char *)buf) {
      free(v9);
    }
  }
  sub_1000E1294((uint64_t *)buf, (uint64_t)"CLFenceManager.removeFence", 0);
  uint64_t v7 = sub_100DA6F70(a1 + 112, a2);
  sub_1000E1098((id *)buf);
  return v7;
}

void sub_100913910(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  sub_1000E1098((id *)va);
  _Unwind_Resume(a1);
}

void sub_1009139E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100488394((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1009139F4(uint64_t a1, uint64_t a2)
{
  __int16 v37 = 0;
  sub_100DAB778(a1 + 112, a2, (unsigned char *)&v37 + 1, &v37);
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
  }
  long long v4 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    if (*(char *)(a2 + 23) >= 0) {
      uint64_t v5 = a2;
    }
    else {
      uint64_t v5 = *(void *)a2;
    }
    if (*(char *)(a2 + 47) >= 0) {
      uint64_t v6 = a2 + 24;
    }
    else {
      uint64_t v6 = *(void *)(a2 + 24);
    }
    *(_DWORD *)std::string buf = 136381443;
    uint64_t v47 = v5;
    __int16 v48 = 2081;
    uint64_t v49 = v6;
    __int16 v50 = 1026;
    int v51 = HIBYTE(v37);
    __int16 v52 = 1026;
    LODWORD(v53) = v37;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Fence: requestRegionState, %{private}s/%{private}s, registered, %{public}d, authorized, %{public}d", buf, 0x22u);
  }
  int v7 = 2;
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    if (*(char *)(a2 + 23) >= 0) {
      uint64_t v25 = a2;
    }
    else {
      uint64_t v25 = *(void *)a2;
    }
    if (*(char *)(a2 + 47) >= 0) {
      uint64_t v26 = a2 + 24;
    }
    else {
      uint64_t v26 = *(void *)(a2 + 24);
    }
    int v38 = 136381443;
    uint64_t v39 = v25;
    __int16 v40 = 2081;
    uint64_t v41 = v26;
    __int16 v42 = 1026;
    int v43 = HIBYTE(v37);
    __int16 v44 = 1026;
    LODWORD(v45) = v37;
    long long v27 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::requestRegionState(const CLFenceManager_Type::Fence &)", "%s\n", v27);
    if (v27 != (char *)buf) {
      free(v27);
    }
  }
  int v36 = 2;
  int v8 = HIBYTE(v37);
  if ((_BYTE)v37 && HIBYTE(v37))
  {
    int v7 = sub_100D80460(a1 + 344, a2, 1);
    int v36 = v7;
    int v8 = HIBYTE(v37);
  }
  if (!v8)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    char v13 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
    {
      if (*(char *)(a2 + 23) >= 0) {
        uint64_t v14 = a2;
      }
      else {
        uint64_t v14 = *(void *)a2;
      }
      if (*(char *)(a2 + 47) >= 0) {
        uint64_t v15 = a2 + 24;
      }
      else {
        uint64_t v15 = *(void *)(a2 + 24);
      }
      *(_DWORD *)std::string buf = 136380931;
      uint64_t v47 = v14;
      __int16 v48 = 2081;
      uint64_t v49 = v15;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "Fence: requestRegionState, fence, %{private}s/%{private}s, not registered", buf, 0x16u);
    }
    if (!sub_10013D1A0(115, 2)) {
      return sub_100917E48(a1, a2);
    }
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    if (*(char *)(a2 + 23) >= 0) {
      uint64_t v16 = a2;
    }
    else {
      uint64_t v16 = *(void *)a2;
    }
    if (*(char *)(a2 + 47) >= 0) {
      uint64_t v17 = a2 + 24;
    }
    else {
      uint64_t v17 = *(void *)(a2 + 24);
    }
    goto LABEL_105;
  }
  if ((_BYTE)v37 && v7 != 2)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    BOOL v9 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      if (*(char *)(a2 + 23) >= 0) {
        uint64_t v10 = a2;
      }
      else {
        uint64_t v10 = *(void *)a2;
      }
      if (*(char *)(a2 + 47) >= 0) {
        uint64_t v11 = a2 + 24;
      }
      else {
        uint64_t v11 = *(void *)(a2 + 24);
      }
      if ((v7 + 1) > 4) {
        __int16 v12 = "---";
      }
      else {
        __int16 v12 = off_1022D3DA0[v7 + 1];
      }
      *(_DWORD *)std::string buf = 136381443;
      uint64_t v47 = v10;
      __int16 v48 = 2081;
      uint64_t v49 = v11;
      __int16 v50 = 1025;
      int v51 = v7;
      __int16 v52 = 2081;
      double v53 = v12;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "Fence: requestRegionState, fence, %{private}s/%{private}s, status, %{private}d, %{private}s", buf, 0x26u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
      }
      if (*(char *)(a2 + 23) >= 0) {
        uint64_t v28 = a2;
      }
      else {
        uint64_t v28 = *(void *)a2;
      }
      if (*(char *)(a2 + 47) >= 0) {
        uint64_t v29 = a2 + 24;
      }
      else {
        uint64_t v29 = *(void *)(a2 + 24);
      }
      if ((v7 + 1) > 4) {
        std::string v30 = "---";
      }
      else {
        std::string v30 = off_1022D3DC8[v7 + 1];
      }
      int v38 = 136381443;
      uint64_t v39 = v28;
      __int16 v40 = 2081;
      uint64_t v41 = v29;
      __int16 v42 = 1025;
      int v43 = v7;
      __int16 v44 = 2081;
      uint64_t v45 = v30;
      std::string v32 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::requestRegionState(const CLFenceManager_Type::Fence &)", "%s\n", v32);
      if (v32 != (char *)buf) {
        free(v32);
      }
    }
    *(_DWORD *)std::string buf = 6;
    return sub_100917F98(a1, a2, &v36, (int *)buf, 0xFFFFFFFFLL);
  }
  if ((_BYTE)v37)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    int v18 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
    {
      if (*(char *)(a2 + 23) >= 0) {
        uint64_t v19 = a2;
      }
      else {
        uint64_t v19 = *(void *)a2;
      }
      if (*(char *)(a2 + 47) >= 0) {
        uint64_t v20 = a2 + 24;
      }
      else {
        uint64_t v20 = *(void *)(a2 + 24);
      }
      *(_DWORD *)std::string buf = 136380931;
      uint64_t v47 = v19;
      __int16 v48 = 2081;
      uint64_t v49 = v20;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "Fence: requestRegionState, fence, %{private}s/%{private}s, error.", buf, 0x16u);
    }
    if (!sub_10013D1A0(115, 2)) {
      return sub_100917E48(a1, a2);
    }
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    if (*(char *)(a2 + 23) >= 0) {
      uint64_t v16 = a2;
    }
    else {
      uint64_t v16 = *(void *)a2;
    }
    if (*(char *)(a2 + 47) >= 0) {
      uint64_t v17 = a2 + 24;
    }
    else {
      uint64_t v17 = *(void *)(a2 + 24);
    }
LABEL_105:
    int v38 = 136380931;
    uint64_t v39 = v16;
    __int16 v40 = 2081;
    uint64_t v41 = v17;
    std::string v31 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::requestRegionState(const CLFenceManager_Type::Fence &)", "%s\n", v31);
    if (v31 != (char *)buf) {
      free(v31);
    }
    return sub_100917E48(a1, a2);
  }
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
  }
  long long v22 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
  {
    if (*(char *)(a2 + 23) >= 0) {
      uint64_t v23 = a2;
    }
    else {
      uint64_t v23 = *(void *)a2;
    }
    if (*(char *)(a2 + 47) >= 0) {
      uint64_t v24 = a2 + 24;
    }
    else {
      uint64_t v24 = *(void *)(a2 + 24);
    }
    *(_DWORD *)std::string buf = 136380931;
    uint64_t v47 = v23;
    __int16 v48 = 2081;
    uint64_t v49 = v24;
    _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_INFO, "Fence: requestRegionState, fence, %{private}s/%{private}s, not authorized", buf, 0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    if (*(char *)(a2 + 23) >= 0) {
      uint64_t v33 = a2;
    }
    else {
      uint64_t v33 = *(void *)a2;
    }
    if (*(char *)(a2 + 47) >= 0) {
      uint64_t v34 = a2 + 24;
    }
    else {
      uint64_t v34 = *(void *)(a2 + 24);
    }
    int v38 = 136380931;
    uint64_t v39 = v33;
    __int16 v40 = 2081;
    uint64_t v41 = v34;
    uint64_t v35 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::requestRegionState(const CLFenceManager_Type::Fence &)", "%s\n", v35);
    if (v35 != (char *)buf) {
      free(v35);
    }
  }
  return sub_100918BF0(a1, a2);
}

void sub_10091441C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009144AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009145E8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 - 73) < 0) {
    operator delete(*(void **)(v1 - 96));
  }
  if (*(char *)(v1 - 49) < 0) {
    operator delete(*(void **)(v1 - 72));
  }
  _Unwind_Resume(exception_object);
}

void sub_10091461C(uint64_t a1, uint64_t a2, const void **a3, int a4, _OWORD *a5)
{
  int v50 = a4;
  uint64_t v47 = 0;
  uint64_t v48 = 0;
  uint64_t v49 = 0;
  uint64_t v8 = a1 + 112;
  sub_100DAB434(a1 + 112, a2, &v47);
  sub_100110970((char *)&v34);
  uint64_t v9 = v47;
  uint64_t v10 = v48;
  if (v47 == v48)
  {
LABEL_22:
    if (qword_1024195A0 != -1) {
      dispatch_once(&qword_1024195A0, &stru_1022D3BD8);
    }
    uint64_t v19 = qword_1024195A8;
    if (os_log_type_enabled((os_log_t)qword_1024195A8, OS_LOG_TYPE_DEFAULT))
    {
      if (*((char *)a3 + 23) >= 0) {
        uint64_t v20 = (std::string *)a3;
      }
      else {
        uint64_t v20 = (std::string *)*a3;
      }
      uint64_t buf = 68289282;
      __int16 v52 = 2082;
      double v53 = "";
      __int16 v54 = 2082;
      double v55 = v20;
      long long v21 = "{\"msg%{public}.0s\":\"Found the bundleID but it contained no fences with fenceID\", \"fenceID\":%{public, l"
            "ocation:escape_only}s}";
      long long v22 = v19;
      uint32_t v23 = 28;
LABEL_29:
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, v21, (uint8_t *)&buf, v23);
    }
  }
  else
  {
    int v11 = *((char *)a3 + 23);
    if (v11 >= 0) {
      unint64_t v12 = *((unsigned __int8 *)a3 + 23);
    }
    else {
      unint64_t v12 = (unint64_t)a3[1];
    }
    if (v11 >= 0) {
      char v13 = (std::string *)a3;
    }
    else {
      char v13 = (std::string *)*a3;
    }
    while (1)
    {
      int v14 = *(char *)(v9 + 47);
      unint64_t v15 = v14 >= 0 ? *(unsigned __int8 *)(v9 + 47) : *(void *)(v9 + 32);
      uint64_t v16 = v14 >= 0 ? (const void *)(v9 + 24) : *(const void **)(v9 + 24);
      size_t v17 = v15 >= v12 ? v12 : v15;
      if (!memcmp(v13, v16, v17) && v15 == v12) {
        break;
      }
      v9 += 248;
      if (v9 == v10) {
        goto LABEL_22;
      }
    }
    std::string::operator=(&v34, (const std::string *)v9);
    std::string::operator=(&v35, (const std::string *)(v9 + 24));
    std::string::operator=(&v36, (const std::string *)(v9 + 48));
    long long v24 = *(_OWORD *)(v9 + 72);
    long long v25 = *(_OWORD *)(v9 + 88);
    long long v26 = *(_OWORD *)(v9 + 120);
    long long v39 = *(_OWORD *)(v9 + 104);
    long long v40 = v26;
    long long v37 = v24;
    long long v38 = v25;
    long long v27 = *(_OWORD *)(v9 + 136);
    long long v28 = *(_OWORD *)(v9 + 152);
    long long v29 = *(_OWORD *)(v9 + 168);
    *(void *)&v43[13] = *(void *)(v9 + 181);
    *(_OWORD *)int v43 = v29;
    long long v42 = v28;
    long long v41 = v27;
    std::string::operator=(&v44, (const std::string *)(v9 + 192));
    id v30 = v45;
    id v45 = *(id *)(v9 + 216);

    if ((std::string *)v9 != &v34) {
      sub_10027C3B4((char *)__p, *(char **)(v9 + 224), *(void *)(v9 + 232), (uint64_t)(*(void *)(v9 + 232) - *(void *)(v9 + 224)) >> 4);
    }
    if (sub_100DA671C(v8, (uint64_t)&v34))
    {
      sub_100918550(a1, (long long *)&v34, &v50, a5);
      goto LABEL_43;
    }
    if (qword_1024195A0 != -1) {
      dispatch_once(&qword_1024195A0, &stru_1022D3BD8);
    }
    uint64_t v31 = qword_1024195A8;
    if (os_log_type_enabled((os_log_t)qword_1024195A8, OS_LOG_TYPE_DEFAULT))
    {
      std::string v32 = &v34;
      if ((v34.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string v32 = (std::string *)v34.__r_.__value_.__r.__words[0];
      }
      if ((v35.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v33 = &v35;
      }
      else {
        uint64_t v33 = (std::string *)v35.__r_.__value_.__r.__words[0];
      }
      uint64_t buf = 68289538;
      __int16 v52 = 2082;
      double v53 = "";
      __int16 v54 = 2082;
      double v55 = v32;
      __int16 v56 = 2082;
      std::string::size_type v57 = v33;
      long long v21 = "{\"msg%{public}.0s\":\"You're not authorized for fence.\", \"bundleID\":%{public, location:escape_only}s, \""
            "fenceId\":%{public, location:escape_only}s}";
      long long v22 = v31;
      uint32_t v23 = 38;
      goto LABEL_29;
    }
  }
LABEL_43:
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }

  if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v44.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v36.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v35.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v34.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v34.__r_.__value_.__l.__data_);
  }
  v34.__r_.__value_.__r.__words[0] = (std::string::size_type)&v47;
  sub_10008DF5C((void ***)&v34);
}

void sub_1009149CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10)
{
  sub_100488394((uint64_t)&a10);
  a10 = (void **)(v10 - 176);
  sub_10008DF5C(&a10);
  _Unwind_Resume(a1);
}

void sub_100914AC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100914ADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = 0;
  int v7 = 0;
  uint64_t v8 = 0;
  sub_100DAB434(a1 + 112, a2, (uint64_t *)&v6);
  memset(v5, 0, sizeof(v5));
  sub_1009203E4((char *)v5, v6, v7, 0xEF7BDEF7BDEF7BDFLL * (((char *)v7 - (char *)v6) >> 3));
  id v4 = sub_100918B1C(v5);
  (*(void (**)(uint64_t, id))(a3 + 16))(a3, v4);
  uint64_t v9 = v5;
  sub_10008DF5C((void ***)&v9);
  uint64_t v9 = &v6;
  sub_10008DF5C((void ***)&v9);
}

void sub_100914B88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  *(void *)(v14 - 24) = v13;
  sub_10008DF5C((void ***)(v14 - 24));
  *(void *)(v14 - 24) = &a13;
  sub_10008DF5C((void ***)(v14 - 24));
  _Unwind_Resume(a1);
}

void sub_100914BB8(id a1)
{
  if ((sub_1001073D0() & 0x100) != 0) {
    byte_10247EE88 = 1;
  }
}

void sub_100914BE4()
{
}

void sub_100914C30()
{
}

void sub_100914C54(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000E9354(a2);
  sub_1004D37A8(a2, "kCLConnectionMessageNameKey", (char *)(a1 + 24));
  sub_10000FF54((std::string *)(a1 + 48), (uint64_t)v9);
  sub_1000A84C8((uint64_t)v9);
  unint64_t v4 = v18;
  if ((v18 & 0x80u) != 0) {
    unint64_t v4 = (unint64_t)__p[1];
  }
  if (v4)
  {
    sub_1000A84C8((uint64_t)v9);
    uint64_t v5 = (char *)__p;
  }
  else
  {
    uint64_t v5 = (char *)&v13;
  }
  sub_1004D37A8(a2, "kCLConnectionMessageOnBehalfOfKey", v5);
  int v8 = 1;
  sub_1000EA838(a2, "kCLConnectionMessageRegionTypeKey", &v8);
  sub_10016332C(a2, "kCLConnectionMessageLatitudeKey", (const void *)(a1 + 72));
  sub_10016332C(a2, "kCLConnectionMessageLongitudeKey", (const void *)(a1 + 80));
  sub_10016332C(a2, "kCLConnectionMessageRadiusKey", (const void *)(a1 + 88));
  int v8 = *(_DWORD *)(a1 + 180);
  sub_1000EA838(a2, "kCLConnectionMessageReferenceFrameKey", &v8);
  LOBYTE(v8) = *(unsigned char *)(a1 + 160) & 1;
  sub_1000EA238(a2, "kCLConnectionMessageNotifyOnEntryKey", &v8);
  LOBYTE(v8) = (*(unsigned char *)(a1 + 160) & 2) != 0;
  sub_1000EA238(a2, "kCLConnectionMessageNotifyOnExitKey", &v8);
  LOBYTE(v8) = (*(unsigned char *)(a1 + 160) & 4) != 0;
  sub_1000EA238(a2, "kCLConnectionMessageConservativeEntry", &v8);
  LOBYTE(v8) = (*(unsigned char *)(a1 + 160) & 0x10) != 0;
  sub_1000EA238(a2, "kCLConnectionMessageEmergencyKey", &v8);
  uint64_t v6 = *(void **)(a1 + 216);
  if (v6) {
    int v7 = (char *)[[[v6 UUIDString] UTF8String];
  }
  else {
    int v7 = "";
  }
  sub_1004D34AC(a2, "kCLConnectionMessageDeviceIDKey", v7);
  sub_1004D37A8(a2, "kCLConnectionMessageHandoffTagKey", (char *)(a1 + 192));
  if (v22 < 0) {
    operator delete(v21);
  }
  if (v20 < 0) {
    operator delete(v19);
  }
  if ((char)v18 < 0) {
    operator delete(__p[0]);
  }
  if (v16 < 0) {
    operator delete(v15);
  }
  if (v14 < 0) {
    operator delete(v13);
  }
  if (v12 < 0) {
    operator delete(v11);
  }
  if (v10 < 0) {
    operator delete(v9[0]);
  }
}

void sub_100914EA8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000064D0((uint64_t)va);
  sub_10013F3C4(v2);
  _Unwind_Resume(a1);
}

void sub_100914EEC(uint64_t a1, void *a2)
{
  int v3 = (void *)sub_100915224(a1, "FenceManager", a2);
  *int v3 = off_1022D39B8;
  sub_100DA5570(v3 + 14, v3[4]);
  sub_100D7EB50(a1 + 344, *(void *)(a1 + 32));
  sub_100D98920(a1 + 3352, *(void *)(a1 + 32));
  sub_101171D90(a1 + 3808);
  *(unsigned char *)(a1 + 3848) = 0;
  sub_100103240();
  *(unsigned char *)(a1 + 3849) = sub_1007414F8();
  *(unsigned char *)(a1 + 3850) = 0;
  *(void *)(a1 + 3856) = 0;
  *(void *)(a1 + 3896) = 0;
  *(void *)(a1 + 3888) = 0;
  *(void *)(a1 + 3880) = a1 + 3888;
  *(void *)(a1 + 3920) = 0;
  *(void *)(a1 + 3912) = 0;
  *(void *)(a1 + 3904) = a1 + 3912;
  *(void *)(a1 + 3944) = 0;
  *(void *)(a1 + 3936) = 0;
  *(void *)(a1 + 3928) = a1 + 3936;
  *(void *)(a1 + 3968) = 0;
  *(void *)(a1 + 3960) = 0;
  *(void *)(a1 + 3952) = a1 + 3960;
  *(void *)(a1 + 4008) = 0;
  *(_OWORD *)(a1 + 3976) = 0u;
  *(_OWORD *)(a1 + 3992) = 0u;
  *(void *)(a1 + 4024) = off_1022B6DB8;
  unint64_t v4 = operator new(0x20uLL);
  v4[1] = 0;
  _DWORD v4[2] = 0;
  *unint64_t v4 = off_1022B6DF0;
  *((_DWORD *)v4 + 6) = 31337;
  *(void *)(a1 + 4032) = v4 + 3;
  *(void *)(a1 + 4040) = v4;
  *(void *)(a1 + 4024) = off_1022C7F70;
  *(void *)(a1 + 4048) = 0;
  sub_1009152D0(a1);
}

void sub_100915088(_Unwind_Exception *a1)
{
  size_t v17 = v5;
  sub_100789878(v6);
  uint64_t v12 = v1[501];
  v1[501] = 0;
  if (v12) {
    sub_101A62790(v12);
  }
  uint64_t v13 = v1[500];
  v1[500] = 0;
  if (v13) {
    (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
  }
  uint64_t v14 = v1[499];
  v1[499] = 0;
  if (v14) {
    (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
  }
  uint64_t v15 = v1[498];
  v1[498] = 0;
  if (v15) {
    (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
  }
  uint64_t v16 = *v10;
  *char v10 = 0;
  if (v16) {
    (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
  }
  sub_1000DB264((uint64_t)(v1 + 494), *v9);
  sub_10091F6E8((uint64_t)(v1 + 491), *v8);
  sub_10091F604((uint64_t)(v1 + 488), *v7);
  sub_10091F604((uint64_t)(v1 + 485), *v17);
  sub_100D98C1C(v4);
  sub_100D7F0E8(v3);
  sub_100DA56E0(v2);
  sub_100915BCC((uint64_t)v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100915224(uint64_t a1, char *a2, void *a3)
{
  *(void *)a1 = off_1022D3C08;
  sub_100134750((void *)(a1 + 8), a2);
  *(void *)(a1 + 32) = a3;
  *(void *)(a1 + 40) = [a3 silo];
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(unsigned char *)(a1 + 108) = 0;
  return a1;
}

void sub_1009152B4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009152D0(uint64_t a1)
{
  uint64_t v13 = 0x404E000000000000;
  sub_1000C7F88(&buf);
  int v2 = sub_1000A699C(buf, "FenceStartDelay", &v13);
  if (*((void *)&buf + 1)) {
    sub_1000DB0A0(*((std::__shared_weak_count **)&buf + 1));
  }
  if (v2)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    uint64_t v3 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
    {
      LODWORD(buf) = 134283521;
      *(void *)((char *)&buf + 4) = v13;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Overriding fence start delay to %{private}.2f", (uint8_t *)&buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
      }
      int v14 = 134283521;
      uint64_t v15 = v13;
      uint64_t v12 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::init()", "%s\n", v12);
      if (v12 != (char *)&buf) {
        free(v12);
      }
    }
  }
  sub_1000C7F88(&buf);
  sub_1000D2988(buf, "FenceShowTriggerDialog", (BOOL *)&byte_10247EEA0);
  if (*((void *)&buf + 1)) {
    sub_1000DB0A0(*((std::__shared_weak_count **)&buf + 1));
  }
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
  }
  uint64_t v4 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    LODWORD(buf) = 67174657;
    DWORD1(buf) = byte_10247EEA0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "setting FenceStartShowDialog to %{private}d", (uint8_t *)&buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    int v14 = 67174657;
    LODWORD(v15) = byte_10247EEA0;
    int v11 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::init()", "%s\n", v11);
    if (v11 != (char *)&buf) {
      free(v11);
    }
  }
  uint64_t v5 = sub_1000A6958();
  if ((sub_1000A699C(v5, off_102474608, (void *)(a1 + 3872)) & 1) == 0)
  {
    *(CFAbsoluteTime *)(a1 + 3872) = CFAbsoluteTimeGetCurrent();
    uint64_t v6 = sub_1000A6958();
    sub_10016332C(v6, off_102474608, (const void *)(a1 + 3872));
    uint64_t v7 = sub_1000A6958();
    (*(void (**)(uint64_t))(*(void *)v7 + 944))(v7);
  }
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  uint64_t v9 = *(void **)(a1 + 32);
  *(CFAbsoluteTime *)(a1 + 3864) = Current;
  id v10 = [[[v9 vendor] proxyForService:@"CLClientManager"]
  *(void *)(a1 + 4016) = v10;
  [v10 registerDelegate:sub_1000C86C4(a1 + 4024) inSilo:[*(id *)(a1 + 32) silo]];
  sub_1007E0344();
}

void sub_100915B70(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
}

uint64_t sub_100915BCC(uint64_t a1)
{
  *(void *)a1 = off_1022D3C08;
  [*(id *)(a1 + 48) invalidate];

  sub_1004459BC(a1 + 80, *(void **)(a1 + 88));
  sub_1007E53C4(a1 + 56, *(void **)(a1 + 64));
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

uint64_t sub_100915C50(uint64_t a1)
{
  *(void *)a1 = off_1022D39B8;
  sub_10091717C(a1);
  sub_100789878(a1 + 4024);
  uint64_t v2 = *(void *)(a1 + 4008);
  *(void *)(a1 + 4008) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(void *)(a1 + 4000);
  *(void *)(a1 + 4000) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  uint64_t v4 = *(void *)(a1 + 3992);
  *(void *)(a1 + 3992) = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  uint64_t v5 = *(void *)(a1 + 3984);
  *(void *)(a1 + 3984) = 0;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  uint64_t v6 = *(void *)(a1 + 3976);
  *(void *)(a1 + 3976) = 0;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  sub_1000DB264(a1 + 3952, *(char **)(a1 + 3960));
  sub_10091F6E8(a1 + 3928, *(void **)(a1 + 3936));
  sub_10091F604(a1 + 3904, *(void **)(a1 + 3912));
  sub_10091F604(a1 + 3880, *(void **)(a1 + 3888));
  sub_100D98C1C(a1 + 3352);
  sub_100D7F0E8(a1 + 344);
  sub_100DA56E0(a1 + 112);

  return sub_100915BCC(a1);
}

void sub_100915DEC(uint64_t a1)
{
  sub_100915C50(a1);

  operator delete();
}

void sub_100915E24(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022D3B98);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    int v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLFenceManager::onClientNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022D3B98);
    }
    uint64_t v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      size_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLFenceManager::onClientNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_10091C918(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100915FE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100916000(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022D3B98);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v12 = 1;
    uint64_t v9 = _os_activity_create((void *)&_mh_execute_header, "CL: CLFenceManager::onMonitorNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v9, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022D3B98);
    }
    id v10 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 68289538;
      int v14 = 0;
      __int16 v15 = 2082;
      __int16 v16 = "";
      __int16 v17 = 2082;
      __int16 v18 = "activity";
      __int16 v19 = 2050;
      uint64_t v20 = a4;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLFenceManager::onMonitorNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v12 = 0;
  }
  sub_10091BE18(a4, v7, a2, a3, v8);
  if (v12) {
    os_activity_scope_leave(&state);
  }
}

void sub_1009161BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009161DC(uint64_t a1, uint64_t a2)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a2 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022D3B98);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v6 = 1;
    uint64_t v3 = _os_activity_create((void *)&_mh_execute_header, "CL: CLFenceManager::onStartTimer", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v3, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022D3B98);
    }
    uint64_t v4 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 68289538;
      int v8 = 0;
      __int16 v9 = 2082;
      id v10 = "";
      __int16 v11 = 2082;
      char v12 = "activity";
      __int16 v13 = 2050;
      uint64_t v14 = a2;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLFenceManager::onStartTimer\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v6 = 0;
  }
  sub_100916930(a2, 0);
  if (v6) {
    os_activity_scope_leave(&state);
  }
}

void sub_100916384(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1009163A4(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022D3B98);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v10 = 1;
    uint64_t v7 = _os_activity_create((void *)&_mh_execute_header, "CL: CLFenceManager::onDaemonStatusNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v7, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022D3B98);
    }
    int v8 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 68289538;
      int v12 = 0;
      __int16 v13 = 2082;
      uint64_t v14 = "";
      __int16 v15 = 2082;
      __int16 v16 = "activity";
      __int16 v17 = 2050;
      uint64_t v18 = a4;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLFenceManager::onDaemonStatusNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v10 = 0;
  }
  sub_100916C14(a4, v6, a2);
  if (v10) {
    os_activity_scope_leave(&state);
  }
}

void sub_100916558(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100916578(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022D3B98);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    int v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLFenceManager::onDataDownloadNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022D3B98);
    }
    __int16 v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      __int16 v15 = "";
      __int16 v16 = 2082;
      __int16 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLFenceManager::onDataDownloadNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_10091C32C((uint64_t *)a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100916734(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100916754(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022D3B98);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    int v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLFenceManager::onAuthorizationNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022D3B98);
    }
    __int16 v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      __int16 v15 = "";
      __int16 v16 = 2082;
      __int16 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLFenceManager::onAuthorizationNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_10091CC68(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100916910(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100916930(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 3848))
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    uint64_t v2 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Fence: Already started fence monitoring", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
      }
      uint64_t v3 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::start(BOOL)", "%s\n", v3);
      if (v3 != (char *)buf) {
        free(v3);
      }
    }
  }
  else
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    uint64_t v6 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Fence: Starting fence monitoring", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
      }
      uint64_t v7 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::start(BOOL)", "%s\n", v7);
      if (v7 != (char *)buf) {
        free(v7);
      }
    }
    *(unsigned char *)(a1 + 3848) = 1;
    sub_100916DE0(a1, 0, a2, a2 ^ 1);
  }
}

void sub_100916C14(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  if (*(unsigned char *)(a1 + 3848)) {
    BOOL v3 = 0;
  }
  else {
    BOOL v3 = *a3 == 17;
  }
  if (v3)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    uint64_t v5 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Fence: Start after unclean shutdown", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
      }
      uint64_t v6 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::onDaemonStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v6);
      if (v6 != (char *)buf) {
        free(v6);
      }
    }
    sub_1001B0AE4(*(void *)(a1 + 3856));
    [*(id *)(*(void *)(a1 + 4008) + 16) unregister:*(void *)(*(void *)(a1 + 4008) + 8) forNotification:17];
    sub_100916930(a1, 1);
  }
}

void sub_100916DE0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
  }
  uint64_t v6 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Fence: startMonitoringAllFences_nl", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    LOWORD(v10) = 0;
    int v8 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::startMonitoringAllFences_nl(BOOL, BOOL, BOOL)", "%s\n", v8);
    if (v8 != buf) {
      free(v8);
    }
  }
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  sub_100DAA940((uint64_t *)(a1 + 112), &v10);
  sub_100DA5C14(a1 + 112);
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
  }
  uint64_t v7 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)long long buf = 134349056;
    *(void *)&uint8_t buf[4] = 0xEF7BDEF7BDEF7BDFLL * ((v11 - v10) >> 3);
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Starting to monitor all %{public}ld authorized fences", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    int v13 = 134349056;
    unint64_t v14 = 0xEF7BDEF7BDEF7BDFLL * ((v11 - v10) >> 3);
    __int16 v9 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::startMonitoringAllFences_nl(BOOL, BOOL, BOOL)", "%s\n", v9);
    if (v9 != buf) {
      free(v9);
    }
  }
  sub_100917668(a1, &v10);
  if (a4) {
    sub_100D80374(a1 + 344, &v10);
  }
  *(void *)long long buf = &v10;
  sub_10008DF5C((void ***)buf);
}

void sub_100917154(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void **a17)
{
  a17 = (void **)&a11;
  sub_10008DF5C(&a17);
  _Unwind_Resume(a1);
}

id sub_10091717C(uint64_t a1)
{
  *(CFAbsoluteTime *)(a1 + 3872) = CFAbsoluteTimeGetCurrent();
  uint64_t v2 = sub_1000A6958();
  sub_10016332C(v2, off_102474608, (const void *)(a1 + 3872));
  uint64_t v3 = *(void *)sub_1000A6958();
  (*(void (**)(void))(v3 + 944))();
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
  }
  uint64_t v4 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Fence: CLFenceManager, shutdown", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    int v13 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLFenceManager::shutdown()", "%s\n", v13);
    if (v13 != (char *)buf) {
      free(v13);
    }
  }
  uint64_t v5 = *(void *)(a1 + 4008);
  *(void *)(a1 + 4008) = 0;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  uint64_t v6 = *(void *)(a1 + 3976);
  *(void *)(a1 + 3976) = 0;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  uint64_t v7 = *(void *)(a1 + 3984);
  *(void *)(a1 + 3984) = 0;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  uint64_t v8 = *(void *)(a1 + 3992);
  *(void *)(a1 + 3992) = 0;
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
  }
  uint64_t v9 = *(void *)(a1 + 4000);
  *(void *)(a1 + 4000) = 0;
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
  }

  *(void *)(a1 + 4016) = 0;
  sub_100D86884(a1 + 344);
  id v10 = objc_alloc_init((Class)NSAutoreleasePool);
  uint64_t v11 = *(void *)(a1 + 3856);
  if (v11)
  {
    sub_100998C38(v11);
    operator delete();
  }
  return [v10 drain];
}

void sub_1009174B0(uint64_t a1)
{
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
  }
  uint64_t v2 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Fence: resetFenceMonitoring_nl", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    uint64_t v3 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::resetFenceMonitoring_nl()", "%s\n", v3);
    if (v3 != (char *)buf) {
      free(v3);
    }
  }
  sub_100D802DC(a1 + 344);
  sub_100D9B924((void *)(a1 + 3352));
  sub_100916DE0(a1, 0, 1, 0);
}

void sub_100917668(uint64_t a1, uint64_t *a2)
{
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
  }
  uint64_t v4 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Fence: startMonitoringFences_nl", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    uint64_t v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::startMonitoringFences_nl(const std::vector<CLFenceManager_Type::Fence> &)", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
  sub_100D7FB0C((uint64_t *)(a1 + 344), a2);
  sub_100D98CE4((void *)(a1 + 3352), (long long **)a2);
}

void sub_100917818(uint64_t a1, unsigned __int8 **a2, int a3)
{
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
  }
  uint64_t v6 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Fence: stopMonitoringFences_nl", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    uint64_t v7 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::stopMonitoringFences_nl(const std::vector<CLFenceManager_Type::Fence> &, BOOL)", "%s\n", v7);
    if (v7 != (char *)buf) {
      free(v7);
    }
  }
  sub_100D801F4(a1 + 344, a2, a3);
  sub_100D9B0B8((uint64_t *)(a1 + 3352), (uint64_t *)a2);
}

double sub_1009179D8(uint64_t a1, uint64_t a2)
{
  sub_10091F604(a1 + 3880, *(void **)(a1 + 3888));
  *(void *)(a1 + 3880) = a1 + 3888;
  *(void *)(a1 + 3896) = 0;
  *(void *)(a1 + 3888) = 0;
  sub_10091F604(a1 + 3904, *(void **)(a1 + 3912));
  *(void *)(a1 + 3904) = a1 + 3912;
  *(void *)(a1 + 3920) = 0;
  *(void *)(a1 + 3912) = 0;
  sub_10091F6E8(a1 + 3928, *(void **)(a1 + 3936));
  *(void *)(a1 + 3928) = a1 + 3936;
  *(void *)(a1 + 3944) = 0;
  *(void *)(a1 + 3936) = 0;
  sub_100D7FB04(a1 + 344, a2);

  return sub_1006156AC(a1 + 3808);
}

void sub_100917A78(uint64_t *a1)
{
  double Current = CFAbsoluteTimeGetCurrent();
  uint64_t v3 = a1[494];
  uint64_t v4 = a1[496];
  uint64_t v5 = v4;
  if ((uint64_t *)v3 != a1 + 495)
  {
    double v6 = Current;
    uint64_t v15 = a1[496];
    do
    {
      if (sub_100474AD8(v3 + 56, v6))
      {
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
        }
        uint64_t v7 = qword_1024193C8;
        if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v8 = v3 + 32;
          if (*(char *)(v3 + 55) < 0) {
            uint64_t v8 = *(void *)(v3 + 32);
          }
          *(_DWORD *)long long buf = 136380675;
          uint64_t v17 = v8;
          _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Fence: erasing dormant bucket %{private}s", buf, 0xCu);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
          }
          uint64_t v12 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::maintenanceActiveRateLimiters()", "%s\n", v12);
          if (v12 != (char *)buf) {
            free(v12);
          }
        }
        uint64_t v9 = sub_100645C00((uint64_t **)a1 + 494, v3);
      }
      else
      {
        id v10 = *(uint64_t **)(v3 + 8);
        if (v10)
        {
          do
          {
            uint64_t v9 = v10;
            id v10 = (uint64_t *)*v10;
          }
          while (v10);
        }
        else
        {
          do
          {
            uint64_t v9 = *(uint64_t **)(v3 + 16);
            BOOL v11 = *v9 == v3;
            uint64_t v3 = (uint64_t)v9;
          }
          while (!v11);
        }
      }
      uint64_t v3 = (uint64_t)v9;
    }
    while (v9 != a1 + 495);
    uint64_t v5 = a1[496];
    uint64_t v4 = v15;
  }
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
  }
  int v13 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)long long buf = 134349312;
    uint64_t v17 = v4;
    __int16 v18 = 2050;
    uint64_t v19 = v5;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "Fence: Number of buckets,%{public}lu,%{public}lu", buf, 0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    unint64_t v14 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::maintenanceActiveRateLimiters()", "%s\n", v14);
    if (v14 != (char *)buf) {
      free(v14);
    }
  }
}

uint64_t sub_100917E48(uint64_t a1, uint64_t a2)
{
  sub_10091F33C((uint64_t)&v9);
  std::string::operator=(&v9, (const std::string *)a2);
  std::string::operator=(&v10, (const std::string *)(a2 + 24));
  std::string::operator=(&v11, (const std::string *)(a2 + 48));
  long long v16 = *(_OWORD *)(a2 + 136);
  long long v17 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)__int16 v18 = *(_OWORD *)(a2 + 168);
  *(void *)&v18[13] = *(void *)(a2 + 181);
  long long v4 = *(_OWORD *)(a2 + 88);
  long long v12 = *(_OWORD *)(a2 + 72);
  long long v13 = v4;
  long long v5 = *(_OWORD *)(a2 + 120);
  long long v14 = *(_OWORD *)(a2 + 104);
  long long v15 = v5;
  std::string::operator=(&v19, (const std::string *)(a2 + 192));
  double v6 = v20;
  id v20 = *(id *)(a2 + 216);

  if (&v9 != (std::string *)a2) {
    sub_10027C3B4(v21, *(char **)(a2 + 224), *(void *)(a2 + 232), (uint64_t)(*(void *)(a2 + 232) - *(void *)(a2 + 224)) >> 4);
  }
  int v8 = 4;
  (*(void (**)(uint64_t, int *, std::string *, void, uint64_t, void))(*(void *)a1 + 152))(a1, &v8, &v9, 0, 0xFFFFFFFFLL, 0);
  return sub_1001111C8((uint64_t)&v9);
}

void sub_100917F80(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1001111C8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100917F98(uint64_t a1, uint64_t a2, int *a3, int *a4, uint64_t a5)
{
  if ((a5 & 0x80000000) != 0)
  {
    double Current = CFAbsoluteTimeGetCurrent();
    sub_10091A148(a1, a2, a3, a4, Current);
  }
  sub_10091F33C((uint64_t)&v27);
  std::string::operator=(&v27, (const std::string *)a2);
  std::string::operator=(&v28, (const std::string *)(a2 + 24));
  std::string::operator=(&v29, (const std::string *)(a2 + 48));
  long long v34 = *(_OWORD *)(a2 + 136);
  long long v35 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)std::string v36 = *(_OWORD *)(a2 + 168);
  *(void *)&v36[13] = *(void *)(a2 + 181);
  long long v11 = *(_OWORD *)(a2 + 88);
  long long v30 = *(_OWORD *)(a2 + 72);
  long long v31 = v11;
  long long v12 = *(_OWORD *)(a2 + 120);
  long long v32 = *(_OWORD *)(a2 + 104);
  long long v33 = v12;
  std::string::operator=(&v37, (const std::string *)(a2 + 192));
  long long v13 = v38;
  id v38 = *(id *)(a2 + 216);

  if (&v27 != (std::string *)a2) {
    sub_10027C3B4(v39, *(char **)(a2 + 224), *(void *)(a2 + 232), (uint64_t)(*(void *)(a2 + 232) - *(void *)(a2 + 224)) >> 4);
  }
  int v40 = *a3;
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
  }
  long long v14 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    BOOL v15 = *a4 == 6;
    if ((v29.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      long long v16 = &v29;
    }
    else {
      long long v16 = (std::string *)v29.__r_.__value_.__r.__words[0];
    }
    long long v17 = &v27;
    if ((v27.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      long long v17 = (std::string *)v27.__r_.__value_.__r.__words[0];
    }
    __int16 v18 = (std::string *)v28.__r_.__value_.__r.__words[0];
    std::string v19 = "";
    if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      __int16 v18 = &v28;
    }
    if ((int)a5 < 0) {
      std::string v19 = " (all)";
    }
    *(_DWORD *)long long buf = 67175939;
    BOOL v54 = v15;
    __int16 v55 = 2082;
    __int16 v56 = v16;
    __int16 v57 = 2081;
    int v58 = v17;
    __int16 v59 = 2081;
    uint64_t v60 = v18;
    __int16 v61 = 1026;
    int v62 = a5;
    __int16 v63 = 2081;
    uint64_t v64 = v19;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "Fence: Sending state notification (requested: %{private}d) for [%{public}s]/%{private}s/%{private}s to client %{public}d%{private}s", buf, 0x36u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    BOOL v21 = *a4 == 6;
    if ((v29.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      char v22 = &v29;
    }
    else {
      char v22 = (std::string *)v29.__r_.__value_.__r.__words[0];
    }
    uint32_t v23 = &v27;
    if ((v27.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      uint32_t v23 = (std::string *)v27.__r_.__value_.__r.__words[0];
    }
    if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      long long v24 = &v28;
    }
    else {
      long long v24 = (std::string *)v28.__r_.__value_.__r.__words[0];
    }
    long long v25 = "";
    if ((int)a5 < 0) {
      long long v25 = " (all)";
    }
    int v41 = 67175939;
    BOOL v42 = v21;
    __int16 v43 = 2082;
    std::string v44 = v22;
    __int16 v45 = 2081;
    __int16 v46 = v23;
    __int16 v47 = 2081;
    uint64_t v48 = v24;
    __int16 v49 = 1026;
    int v50 = a5;
    __int16 v51 = 2081;
    __int16 v52 = v25;
    long long v26 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::notifyFenceStateForAuthorizedFence(const CLFenceManager_Type::Fence &, const CLFenceManager_Type::FenceStatus &, const CLFenceManager_Type::Notification &, int)", "%s\n", v26);
    if (v26 != (char *)buf) {
      free(v26);
    }
  }
  (*(void (**)(uint64_t, int *, std::string *, void, uint64_t, void))(*(void *)a1 + 152))(a1, a4, &v27, 0, a5, 0);
  return sub_1001111C8((uint64_t)&v27);
}

void sub_1009183A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_1001111C8((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_1009183C0(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (*((char *)a1 + 23) < 0)
  {
    if (v4 == a1[1])
    {
      if (v4 == -1) {
        goto LABEL_10;
      }
      a1 = (void *)*a1;
      return memcmp(a1, __s, v4) != 0;
    }
  }
  else if (v4 == *((unsigned __int8 *)a1 + 23))
  {
    if (v4 == -1) {
LABEL_10:
    }
      sub_1002E93D4();
    return memcmp(a1, __s, v4) != 0;
  }
  return 1;
}

void sub_100918454(const void **a1@<X0>, std::string *a2@<X8>)
{
  if (*((char *)a1 + 23) >= 0) {
    size_t v4 = *((unsigned __int8 *)a1 + 23);
  }
  else {
    size_t v4 = (size_t)a1[1];
  }
  p_p = &__p;
  sub_1001110E4((uint64_t)&__p, v4 + 1);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if (v4)
  {
    if (*((char *)a1 + 23) >= 0) {
      double v6 = a1;
    }
    else {
      double v6 = *a1;
    }
    memmove(p_p, v6, v4);
  }
  *(_WORD *)((char *)&p_p->__r_.__value_.__l.__data_ + v4) = 47;
  std::string v9 = (const std::string::value_type *)a1[3];
  int v8 = a1 + 3;
  uint64_t v7 = v9;
  int v10 = *((char *)v8 + 23);
  if (v10 >= 0) {
    long long v11 = (const std::string::value_type *)v8;
  }
  else {
    long long v11 = v7;
  }
  if (v10 >= 0) {
    std::string::size_type v12 = *((unsigned __int8 *)v8 + 23);
  }
  else {
    std::string::size_type v12 = (std::string::size_type)v8[1];
  }
  long long v13 = std::string::append(&__p, v11, v12);
  *a2 = *v13;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_100918534(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100918550(uint64_t a1, long long *a2, int *a3, _OWORD *a4)
{
  if (*a3 >= 2)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    std::string v19 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_FAULT))
    {
      int v20 = *a3;
      *(_DWORD *)long long buf = 67109120;
      *(_DWORD *)&uint8_t buf[4] = v20;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_FAULT, "#Warning Invalid fence status, %d", buf, 8u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
      }
      int v21 = *a3;
      *(_DWORD *)uint64_t v65 = 67109120;
      *(_DWORD *)&v65[4] = v21;
      char v22 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "void CLFenceManager::notifyAndLaunchClientForAuthorizedFenceOnEntryExit(const CLFenceManager_Type::Fence &, const CLFenceManager_Type::FenceStatus &, const CLDaemonLocation &)", "%s\n", v22);
      if (v22 != (char *)buf) {
        free(v22);
      }
    }
  }
  else
  {
    sub_10048AEC0((char *)buf, a2);
    int v7 = *a3;
    long long v8 = a4[7];
    long long v70 = a4[6];
    long long v71 = v8;
    v72[0] = a4[8];
    *(_OWORD *)((char *)v72 + 12) = *(_OWORD *)((char *)a4 + 140);
    long long v9 = a4[3];
    long long v66 = a4[2];
    long long v67 = v9;
    long long v10 = a4[5];
    long long v68 = a4[4];
    long long v69 = v10;
    long long v11 = a4[1];
    *(_OWORD *)uint64_t v65 = *a4;
    *(_OWORD *)&v65[16] = v11;
    v63[6] = v70;
    v63[7] = v71;
    v64[0] = v72[0];
    *(_OWORD *)((char *)v64 + 12) = *(_OWORD *)((char *)v72 + 12);
    v63[2] = v66;
    v63[3] = v67;
    v63[4] = v68;
    v63[5] = v69;
    v63[0] = *(_OWORD *)v65;
    v63[1] = v11;
    id v12 = [objc_alloc((Class)CLLocation) initWithClientLocation:v63];
    long long v13 = *(void **)(a1 + 4016);
    if (v74 >= 0) {
      long long v14 = buf;
    }
    else {
      long long v14 = *(uint8_t **)buf;
    }
    BOOL v15 = +[NSString stringWithUTF8String:v14];
    v41[0] = _NSConcreteStackBlock;
    v41[1] = 3321888768;
    v41[2] = sub_10091BC24;
    v41[3] = &unk_1022D3AE0;
    v41[4] = a1;
    sub_10048AEC0((char *)&v42, (long long *)buf);
    int v53 = v7;
    long long v60 = v70;
    long long v61 = v71;
    *(_OWORD *)int v62 = v72[0];
    long long v56 = v66;
    long long v57 = v67;
    long long v58 = v68;
    long long v59 = v69;
    long long v54 = *(_OWORD *)v65;
    long long v55 = *(_OWORD *)&v65[16];
    *(_OWORD *)&v62[12] = *(_OWORD *)((char *)v72 + 12);
    [v13 handleProvisionalIntermediationForService:1 forClientKey:v15 at:v12 withReply:v41];
    if (byte_10247EEA0)
    {
      long long v16 = +[NSDate date];
      long long v17 = [+[NSCalendar currentCalendar] components:248 fromDate:v16];
      double v18 = sub_1001ABE28((uint64_t)v65, (uint64_t)buf, (double *)(a1 + 3808));
      if (sub_1004BA5BC())
      {
        uint32_t v23 = "EXIT";
        if (!v7) {
          uint32_t v23 = "ENTER";
        }
        int v40 = v23;
        if (v76 >= 0) {
          long long v24 = &v75;
        }
        else {
          long long v24 = v75;
        }
        if (v74 >= 0) {
          long long v25 = buf;
        }
        else {
          long long v25 = *(uint8_t **)buf;
        }
        uint64_t v26 = v79;
        std::string v27 = sub_10003E9A4(v70);
        uint64_t v28 = *(void *)&v65[4];
        uint64_t v29 = *(void *)&v65[12];
        uint64_t v30 = *(void *)&v65[20];
        id v31 = [(NSDateComponents *)v17 month];
        id v32 = [(NSDateComponents *)v17 day];
        id v33 = [(NSDateComponents *)v17 hour];
        id v34 = [(NSDateComponents *)v17 minute];
        id v35 = [(NSDateComponents *)v17 second];
        [(NSDate *)v16 timeIntervalSinceReferenceDate];
        uint64_t v37 = v36;
        [(NSDate *)v16 timeIntervalSinceReferenceDate];
        CFStringRef v39 = CFStringCreateWithFormat(kCFAllocatorDefault, 0, @"Fence %s detected\n name: \"%s\"\n bundle: %s\n rad: %.1lf\n location: %s %+.8lf,%+.8lf\n acc:±%.2lfm dist: %.1lf \n date: %ld/%ld, %ld:%ld:%ld\n time: %.2lf lat: %.1lf", v40, v24, v25, v26, v27, v28, v29, v30, *(void *)&v18, v31, v32, v33, v34, v35, v37, v38 - v80);
        sub_100DE3130(@"Fence Trigger", 0, v39);
        CFRelease(v39);
      }
    }
    if (__p)
    {
      __int16 v52 = __p;
      operator delete(__p);
    }

    if (v49 < 0) {
      operator delete(v48);
    }
    if (v47 < 0) {
      operator delete(v46);
    }
    if (v45 < 0) {
      operator delete(v44);
    }
    if (v43 < 0) {
      operator delete(v42);
    }
    if (v84)
    {
      double v85 = v84;
      operator delete(v84);
    }

    if (v82 < 0) {
      operator delete(v81);
    }
    if (v78 < 0) {
      operator delete(v77);
    }
    if (v76 < 0) {
      operator delete(v75);
    }
    if (v74 < 0) {
      operator delete(*(void **)buf);
    }
  }
}

void sub_100918ACC(_Unwind_Exception *a1)
{
  sub_100488394(v1);
  sub_100488394((uint64_t)&STACK[0x390]);
  _Unwind_Resume(a1);
}

id sub_100918B1C(long long **a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3321888768;
  v3[2] = sub_100920358;
  v3[3] = &unk_1022D3D48;
  memset(v4, 0, sizeof(v4));
  sub_1009203E4((char *)v4, *a1, a1[1], 0xEF7BDEF7BDEF7BDFLL * (((char *)a1[1] - (char *)*a1) >> 3));
  id v1 = [v3 copy];
  long long v5 = (void **)v4;
  sub_10008DF5C(&v5);
  return v1;
}

void sub_100918BD8(_Unwind_Exception *a1)
{
  *(void *)(v2 - 24) = v1;
  sub_10008DF5C((void ***)(v2 - 24));
  _Unwind_Resume(a1);
}

uint64_t sub_100918BF0(uint64_t a1, uint64_t a2)
{
  sub_10091F33C((uint64_t)&v9);
  std::string::operator=(&v9, (const std::string *)a2);
  std::string::operator=(&v10, (const std::string *)(a2 + 24));
  std::string::operator=(&v11, (const std::string *)(a2 + 48));
  long long v16 = *(_OWORD *)(a2 + 136);
  long long v17 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)double v18 = *(_OWORD *)(a2 + 168);
  *(void *)&v18[13] = *(void *)(a2 + 181);
  long long v4 = *(_OWORD *)(a2 + 88);
  long long v12 = *(_OWORD *)(a2 + 72);
  long long v13 = v4;
  long long v5 = *(_OWORD *)(a2 + 120);
  long long v14 = *(_OWORD *)(a2 + 104);
  long long v15 = v5;
  std::string::operator=(&v19, (const std::string *)(a2 + 192));
  double v6 = v20;
  id v20 = *(id *)(a2 + 216);

  if (&v9 != (std::string *)a2) {
    sub_10027C3B4(v21, *(char **)(a2 + 224), *(void *)(a2 + 232), (uint64_t)(*(void *)(a2 + 232) - *(void *)(a2 + 224)) >> 4);
  }
  int v8 = 7;
  (*(void (**)(uint64_t, int *, std::string *, void, uint64_t, void))(*(void *)a1 + 152))(a1, &v8, &v9, 0, 0xFFFFFFFFLL, 0);
  return sub_1001111C8((uint64_t)&v9);
}

void sub_100918D28(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1001111C8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100918D40(uint64_t a1, void *a2)
{
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
  }
  long long v4 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
  {
    unint64_t v5 = 0xEF7BDEF7BDEF7BDFLL * ((uint64_t)(a2[1] - *a2) >> 3);
    *(_DWORD *)long long buf = 134217984;
    long long v14 = (void *)v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Notifying failure for %lu fences", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    long long v12 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::notifyClientsOfInvalidFences(const std::vector<CLFenceManager_Type::Fence> &)", "%s\n", v12);
    if (v12 != (char *)buf) {
      free(v12);
    }
  }
  if (a2[1] != *a2)
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0;
    do
    {
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
      }
      int v8 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v9 = *a2 + v6;
        std::string v10 = (void *)(v9 + 24);
        if (*(char *)(v9 + 47) < 0) {
          std::string v10 = (void *)*v10;
        }
        *(_DWORD *)long long buf = 136315138;
        long long v14 = v10;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Notifying failure for Fence, %s", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
        }
        std::string v11 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::notifyClientsOfInvalidFences(const std::vector<CLFenceManager_Type::Fence> &)", "%s\n", v11);
        if (v11 != (char *)buf) {
          free(v11);
        }
      }
      sub_100919110(a1, (long long *)(*a2 + v6));
      ++v7;
      v6 += 248;
    }
    while (0xEF7BDEF7BDEF7BDFLL * ((uint64_t)(a2[1] - *a2) >> 3) > v7);
  }
}

void sub_100919110(uint64_t a1, long long *a2)
{
  long long v33 = xmmword_101D82F18;
  long long v34 = xmmword_101D82F28;
  memset(v35, 0, 28);
  long long v29 = xmmword_101D82ED8;
  long long v30 = xmmword_101D82EE8;
  long long v31 = xmmword_101D82EF8;
  long long v32 = xmmword_101D82F08;
  long long v27 = xmmword_101D82EB8;
  long long v28 = xmmword_101D82EC8;
  sub_10048AEC0((char *)__dst, a2);
  uint64_t v3 = *(void **)(a1 + 4016);
  if (v37 >= 0) {
    long long v4 = __dst;
  }
  else {
    long long v4 = (void **)__dst[0];
  }
  unint64_t v5 = +[NSString stringWithUTF8String:v4];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3321888768;
  v6[2] = sub_10091B95C;
  void v6[3] = &unk_1022D3AB0;
  void v6[4] = a1;
  sub_10048AEC0((char *)&v7, (long long *)__dst);
  *(_OWORD *)((char *)v26 + 12) = *(_OWORD *)((char *)v35 + 12);
  long long v24 = v33;
  long long v25 = v34;
  v26[0] = v35[0];
  long long v20 = v29;
  long long v21 = v30;
  long long v22 = v31;
  long long v23 = v32;
  long long v18 = v27;
  long long v19 = v28;
  [v3 handleProvisionalIntermediationForService:1 forClientKey:v5 at:0 withReply:v6];
  if (__p)
  {
    long long v17 = __p;
    operator delete(__p);
  }

  if (v14 < 0) {
    operator delete(v13);
  }
  if (v12 < 0) {
    operator delete(v11);
  }
  if (v10 < 0) {
    operator delete(v9);
  }
  if (v8 < 0) {
    operator delete(v7);
  }
  if (v45)
  {
    __int16 v46 = v45;
    operator delete(v45);
  }

  if (v43 < 0) {
    operator delete(v42);
  }
  if (v41 < 0) {
    operator delete(v40);
  }
  if (v39 < 0) {
    operator delete(v38);
  }
  if (v37 < 0) {
    operator delete(__dst[0]);
  }
}

void sub_100919310(_Unwind_Exception *a1)
{
  sub_100488394(v1);
  sub_100488394((uint64_t)&STACK[0x268]);
  _Unwind_Resume(a1);
}

void sub_100919334(uint64_t a1, int *a2, uint64_t a3, int *a4, uint64_t a5, _OWORD *a6)
{
  uint64_t v8 = sub_1000A6958();
  uint64_t v9 = off_102474608;
  *(void *)long long buf = CFAbsoluteTimeGetCurrent();
  sub_10016332C(v8, v9, buf);
  uint64_t v10 = sub_1000A6958();
  (*(void (**)(uint64_t))(*(void *)v10 + 944))(v10);
  if (sub_100DA671C(a1 + 112, a3))
  {
    double Current = CFAbsoluteTimeGetCurrent();
    double v12 = *(double *)(a3 + 120);
    int v49 = *a2;
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    double v13 = Current - v12;
    char v14 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      sub_100C8C864(a3);
      id v15 = v57[9] >= 0 ? __p : *(unsigned char **)__p;
      unsigned int v16 = *a4 + 1;
      long long v17 = v16 > 4 ? "---" : off_1022D3DC8[v16];
      uint64_t v26 = *(void *)(a1 + 3872);
      uint64_t v27 = *(void *)(a1 + 3864);
      *(_DWORD *)long long buf = 136381955;
      *(void *)&uint8_t buf[4] = v15;
      __int16 v63 = 2081;
      *(void *)uint64_t v64 = v17;
      *(_WORD *)&v64[8] = 1026;
      LODWORD(v65) = v49 == 0;
      WORD2(v65) = 2050;
      *(double *)((char *)&v65 + 6) = v13;
      HIWORD(v65) = 2049;
      uint64_t v66 = v26;
      __int16 v67 = 2049;
      uint64_t v68 = v27;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "Fence:Status fence, %{private}s, status, %{private}s, isIssueNotification, %{public}d, fenceAge, %{public}.1lf, StopTime, %{private}.1lf, StartTime, %{private}.1lf", buf, 0x3Au);
      if ((v57[9] & 0x80000000) != 0) {
        operator delete(*(void **)__p);
      }
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
      }
      sub_100C8C864(a3);
      if (v54 >= 0) {
        int v40 = v53;
      }
      else {
        int v40 = (void **)v53[0];
      }
      unsigned int v41 = *a4 + 1;
      if (v41 > 4) {
        BOOL v42 = "---";
      }
      else {
        BOOL v42 = off_1022D3DC8[v41];
      }
      uint64_t v45 = *(void *)(a1 + 3872);
      uint64_t v46 = *(void *)(a1 + 3864);
      *(_DWORD *)std::string __p = 136381955;
      *(void *)&__p[4] = v40;
      __int16 v56 = 2081;
      *(void *)long long v57 = v42;
      *(_WORD *)&v57[8] = 1026;
      LODWORD(v58) = v49 == 0;
      WORD2(v58) = 2050;
      *(double *)((char *)&v58 + 6) = v13;
      HIWORD(v58) = 2049;
      uint64_t v59 = v45;
      __int16 v60 = 2049;
      uint64_t v61 = v46;
      char v47 = (char *)_os_log_send_and_compose_impl();
      if (v54 < 0) {
        operator delete(v53[0]);
      }
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::fenceStatusChanged(const CLFenceMonitor_Type::Notification &, const CLFenceManager_Type::Fence &, const CLFenceManager_Type::FenceStatus &, const CLFenceManager_Type::FenceStatus &, const CLDaemonLocation &)", "%s\n", v47);
      if (v47 != buf) {
        free(v47);
      }
    }
    unint64_t v28 = *(void *)(a3 + 232) - *(void *)(a3 + 224);
    if (v28)
    {
      unint64_t v52 = v28 >> 4;
      if ((int)(v28 >> 4) >= -8)
      {
        int v29 = 0;
        int v30 = ((int)v52 - 1) / 10;
        int v31 = -1;
        unint64_t v32 = v28 >> 4;
        do
        {
          if (v29 >= v30) {
            int v33 = v32;
          }
          else {
            int v33 = 10;
          }
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
          }
          ++v29;
          long long v34 = qword_1024193C8;
          if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
          {
            if (*(char *)(a3 + 47) >= 0) {
              uint64_t v35 = a3 + 24;
            }
            else {
              uint64_t v35 = *(void *)(a3 + 24);
            }
            sub_100C8D16C(a3, v31 + 1, v33 + v31);
            uint64_t v36 = __p;
            if (v57[9] < 0) {
              uint64_t v36 = *(unsigned char **)__p;
            }
            *(_DWORD *)long long buf = 136447235;
            *(void *)&uint8_t buf[4] = v35;
            __int16 v63 = 1026;
            *(_DWORD *)uint64_t v64 = v52;
            *(_WORD *)&v64[4] = 1026;
            *(_DWORD *)&v64[6] = v29;
            LOWORD(v65) = 1024;
            *(_DWORD *)((char *)&v65 + 2) = v30 + 1;
            WORD3(v65) = 2081;
            *((void *)&v65 + 1) = v36;
            _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, "Fence:Poly, %{public}s, %{public}d, %{public}d, %{publice}d, %{private}s", buf, 0x28u);
            if ((v57[9] & 0x80000000) != 0) {
              operator delete(*(void **)__p);
            }
          }
          if (sub_10013D1A0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1024193C0 != -1) {
              dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
            }
            if (*(char *)(a3 + 47) >= 0) {
              uint64_t v37 = a3 + 24;
            }
            else {
              uint64_t v37 = *(void *)(a3 + 24);
            }
            sub_100C8D16C(a3, v31 + 1, v33 + v31);
            double v38 = v53;
            if (v54 < 0) {
              double v38 = (void **)v53[0];
            }
            *(_DWORD *)std::string __p = 136447235;
            *(void *)&__p[4] = v37;
            __int16 v56 = 1026;
            *(_DWORD *)long long v57 = v52;
            *(_WORD *)&v57[4] = 1026;
            *(_DWORD *)&v57[6] = v29;
            LOWORD(v58) = 1024;
            *(_DWORD *)((char *)&v58 + 2) = v30 + 1;
            WORD3(v58) = 2081;
            *((void *)&v58 + 1) = v38;
            char v39 = (char *)_os_log_send_and_compose_impl();
            if (v54 < 0) {
              operator delete(v53[0]);
            }
            sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::fenceStatusChanged(const CLFenceMonitor_Type::Notification &, const CLFenceManager_Type::Fence &, const CLFenceManager_Type::FenceStatus &, const CLFenceManager_Type::FenceStatus &, const CLDaemonLocation &)", "%s\n", v39);
            if (v39 != buf) {
              free(v39);
            }
          }
          v31 += 10;
          LODWORD(v32) = v32 - 10;
        }
        while ((v30 & ~(v30 >> 31)) + 1 != v29);
      }
    }
    if (v49)
    {
      *(_DWORD *)long long buf = 8;
      sub_100917F98(a1, a3, a4, (int *)buf, 0xFFFFFFFFLL);
    }
    else
    {
      sub_100918550(a1, (long long *)a3, a4, a6);
    }
  }
  else
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    long long v18 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      sub_100C8C864(a3);
      long long v19 = v57[9] >= 0 ? __p : *(unsigned char **)__p;
      unsigned int v20 = *a4 + 1;
      long long v21 = v20 > 4 ? "---" : off_1022D3DC8[v20];
      uint64_t v22 = *(char *)(a3 + 23) >= 0 ? a3 : *(void *)a3;
      *(_DWORD *)long long buf = 136381187;
      *(void *)&uint8_t buf[4] = v19;
      __int16 v63 = 2081;
      *(void *)uint64_t v64 = v21;
      *(_WORD *)&v64[8] = 2081;
      *(void *)&long long v65 = v22;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEBUG, "Fence: fence, %{private}s, new status, %{private}s, bundleId, %{private}s, not authorized, avoiding notification\n", buf, 0x20u);
      if ((v57[9] & 0x80000000) != 0) {
        operator delete(*(void **)__p);
      }
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
      }
      sub_100C8C864(a3);
      if (v54 >= 0) {
        long long v23 = v53;
      }
      else {
        long long v23 = (void **)v53[0];
      }
      unsigned int v24 = *a4 + 1;
      if (v24 > 4) {
        long long v25 = "---";
      }
      else {
        long long v25 = off_1022D3DC8[v24];
      }
      if (*(char *)(a3 + 23) >= 0) {
        uint64_t v43 = a3;
      }
      else {
        uint64_t v43 = *(void *)a3;
      }
      *(_DWORD *)std::string __p = 136381187;
      *(void *)&__p[4] = v23;
      __int16 v56 = 2081;
      *(void *)long long v57 = v25;
      *(_WORD *)&v57[8] = 2081;
      *(void *)&long long v58 = v43;
      id v44 = (char *)_os_log_send_and_compose_impl();
      if (v54 < 0) {
        operator delete(v53[0]);
      }
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::fenceStatusChanged(const CLFenceMonitor_Type::Notification &, const CLFenceManager_Type::Fence &, const CLFenceManager_Type::FenceStatus &, const CLFenceManager_Type::FenceStatus &, const CLDaemonLocation &)", "%s\n", v44);
      if (v44 != buf) {
        free(v44);
      }
    }
  }
}

void sub_100919C64(uint64_t a1, uint64_t a2, _DWORD *a3, long long *a4, double a5)
{
  LODWORD(v42.__r_.__value_.__l.__data_) = *a3;
  *(double *)&v42.__r_.__value_.__l.__size_ = a5;
  LODWORD(v42.__r_.__value_.__r.__words[2]) = 8;
  uint64_t v10 = [[CLOSTransaction alloc] initWithDescription:"Pending geofence notification"];
  long long v11 = a4[6];
  long long v12 = a4[8];
  long long v51 = a4[7];
  v52[0] = v12;
  *(_OWORD *)((char *)v52 + 12) = *(long long *)((char *)a4 + 140);
  long long v13 = a4[3];
  long long v46 = a4[2];
  long long v47 = v13;
  long long v14 = a4[5];
  long long v48 = a4[4];
  id v43 = v10;
  long long v49 = v14;
  long long v50 = v11;
  long long v15 = a4[1];
  long long v44 = *a4;
  long long v45 = v15;
  *(void *)std::string __p = a2;
  unsigned int v16 = sub_100920640((uint64_t **)(a1 + 3880), (unsigned __int8 *)a2, (uint64_t)&unk_101D0B290, (long long **)__p);
  sub_10091A550((int *)v16 + 70, (int *)&v42);
  long long v17 = *(_OWORD *)(v16 + 53);
  long long v58 = *(_OWORD *)(v16 + 51);
  long long v59 = v17;
  v60[0] = *(_OWORD *)(v16 + 55);
  *(_OWORD *)((char *)v60 + 12) = *(_OWORD *)((char *)v16 + 452);
  long long v18 = *(_OWORD *)(v16 + 45);
  long long v54 = *(_OWORD *)(v16 + 43);
  long long v55 = v18;
  long long v19 = *(_OWORD *)(v16 + 49);
  long long v56 = *(_OWORD *)(v16 + 47);
  long long v57 = v19;
  long long v20 = *(_OWORD *)(v16 + 41);
  *(_OWORD *)std::string __p = *(_OWORD *)(v16 + 39);
  *(_OWORD *)&__p[16] = v20;
  long long v21 = v51;
  *(_OWORD *)(v16 + 51) = v50;
  *(_OWORD *)(v16 + 53) = v21;
  *(_OWORD *)(v16 + 55) = v52[0];
  *(_OWORD *)((char *)v16 + 452) = *(_OWORD *)((char *)v52 + 12);
  long long v22 = v47;
  *(_OWORD *)(v16 + 43) = v46;
  *(_OWORD *)(v16 + 45) = v22;
  long long v23 = v49;
  *(_OWORD *)(v16 + 47) = v48;
  *(_OWORD *)(v16 + 49) = v23;
  long long v24 = v45;
  *(_OWORD *)(v16 + 39) = v44;
  *(_OWORD *)(v16 + 41) = v24;
  long long v50 = v58;
  long long v51 = v59;
  v52[0] = v60[0];
  *(_OWORD *)((char *)v52 + 12) = *(_OWORD *)((char *)v60 + 12);
  long long v46 = v54;
  long long v47 = v55;
  long long v48 = v56;
  long long v49 = v57;
  long long v44 = *(_OWORD *)__p;
  long long v45 = *(_OWORD *)&__p[16];

  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
  }
  long long v25 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    unsigned int v26 = *a3 + 1;
    if (v26 > 4) {
      uint64_t v27 = "---";
    }
    else {
      uint64_t v27 = off_1022D3DC8[v26];
    }
    if (*(char *)(a2 + 23) >= 0) {
      size_t v28 = *(unsigned __int8 *)(a2 + 23);
    }
    else {
      size_t v28 = *(void *)(a2 + 8);
    }
    int v29 = &v42;
    sub_1001110E4((uint64_t)&v42, v28 + 1);
    if ((v42.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v29 = (std::string *)v42.__r_.__value_.__r.__words[0];
    }
    if (v28)
    {
      if (*(char *)(a2 + 23) >= 0) {
        int v30 = (const void *)a2;
      }
      else {
        int v30 = *(const void **)a2;
      }
      memmove(v29, v30, v28);
    }
    *(_WORD *)((char *)&v29->__r_.__value_.__l.__data_ + v28) = 47;
    int v31 = *(char *)(a2 + 47);
    if (v31 >= 0) {
      unint64_t v32 = (const std::string::value_type *)(a2 + 24);
    }
    else {
      unint64_t v32 = *(const std::string::value_type **)(a2 + 24);
    }
    if (v31 >= 0) {
      std::string::size_type v33 = *(unsigned __int8 *)(a2 + 47);
    }
    else {
      std::string::size_type v33 = *(void *)(a2 + 32);
    }
    long long v34 = std::string::append(&v42, v32, v33);
    long long v35 = *(_OWORD *)&v34->__r_.__value_.__l.__data_;
    *(void *)&__p[16] = *((void *)&v34->__r_.__value_.__l + 2);
    *(_OWORD *)std::string __p = v35;
    v34->__r_.__value_.__l.__size_ = 0;
    v34->__r_.__value_.__r.__words[2] = 0;
    v34->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v42.__r_.__value_.__l.__data_);
    }
    uint64_t v36 = __p;
    if (__p[23] < 0) {
      uint64_t v36 = *(unsigned char **)__p;
    }
    LODWORD(v42.__r_.__value_.__l.__data_) = 136381187;
    *(std::string::size_type *)((char *)v42.__r_.__value_.__r.__words + 4) = (std::string::size_type)v27;
    WORD2(v42.__r_.__value_.__r.__words[1]) = 2081;
    *(std::string::size_type *)((char *)&v42.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v36;
    HIWORD(v42.__r_.__value_.__r.__words[2]) = 2049;
    id v43 = *(id *)&a5;
    _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEBUG, "pending, transition, %{private}s, fence, %{private}s, timestamp, %{private}.1lf", (uint8_t *)&v42, 0x20u);
    if ((__p[23] & 0x80000000) != 0) {
      operator delete(*(void **)__p);
    }
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&v42, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    unsigned int v37 = *a3 + 1;
    if (v37 > 4) {
      double v38 = "---";
    }
    else {
      double v38 = off_1022D3DC8[v37];
    }
    sub_100918454((const void **)a2, &v41);
    if ((v41.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      char v39 = &v41;
    }
    else {
      char v39 = (std::string *)v41.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)std::string __p = 136381187;
    *(void *)&__p[4] = v38;
    *(_WORD *)&unsigned char __p[12] = 2081;
    *(void *)&__p[14] = v39;
    *(_WORD *)&__p[22] = 2049;
    *(double *)&__p[24] = a5;
    int v40 = (std::string *)_os_log_send_and_compose_impl();
    if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v41.__r_.__value_.__l.__data_);
    }
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::addPendingFenceEntryExitNotification(CFAbsoluteTime, const CLFenceManager_Type::Fence &, const CLFenceManager_Type::FenceStatus &, const CLDaemonLocation &)", "%s\n", (const char *)v40);
    if (v40 != &v42) {
      free(v40);
    }
  }
}

void sub_10091A0FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10091A148(uint64_t a1, uint64_t a2, _DWORD *a3, int *a4, double a5)
{
  int v9 = *a4;
  LODWORD(v30.__r_.__value_.__l.__data_) = *a3;
  *(double *)&v30.__r_.__value_.__l.__size_ = a5;
  LODWORD(v30.__r_.__value_.__r.__words[2]) = v9;
  id v31 = [[CLOSTransaction alloc] initWithDescription:"Pending geofence notification"];
  *(void *)std::string __p = a2;
  uint64_t v10 = sub_100920968((uint64_t **)(a1 + 3904), (unsigned __int8 *)a2, (uint64_t)&unk_101D0B290, (long long **)__p);
  sub_10091A550((int *)v10 + 70, (int *)&v30);

  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
  }
  long long v11 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    unsigned int v12 = *a3 + 1;
    if (v12 > 4) {
      long long v13 = "---";
    }
    else {
      long long v13 = off_1022D3DC8[v12];
    }
    if (*(char *)(a2 + 23) >= 0) {
      size_t v14 = *(unsigned __int8 *)(a2 + 23);
    }
    else {
      size_t v14 = *(void *)(a2 + 8);
    }
    long long v15 = &v30;
    sub_1001110E4((uint64_t)&v30, v14 + 1);
    if ((v30.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      long long v15 = (std::string *)v30.__r_.__value_.__r.__words[0];
    }
    if (v14)
    {
      if (*(char *)(a2 + 23) >= 0) {
        unsigned int v16 = (const void *)a2;
      }
      else {
        unsigned int v16 = *(const void **)a2;
      }
      memmove(v15, v16, v14);
    }
    *(_WORD *)((char *)&v15->__r_.__value_.__l.__data_ + v14) = 47;
    int v17 = *(char *)(a2 + 47);
    if (v17 >= 0) {
      long long v18 = (const std::string::value_type *)(a2 + 24);
    }
    else {
      long long v18 = *(const std::string::value_type **)(a2 + 24);
    }
    if (v17 >= 0) {
      std::string::size_type v19 = *(unsigned __int8 *)(a2 + 47);
    }
    else {
      std::string::size_type v19 = *(void *)(a2 + 32);
    }
    long long v20 = std::string::append(&v30, v18, v19);
    long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    *(void *)&__p[16] = *((void *)&v20->__r_.__value_.__l + 2);
    *(_OWORD *)std::string __p = v21;
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v30.__r_.__value_.__l.__data_);
    }
    long long v22 = __p;
    if (__p[23] < 0) {
      long long v22 = *(unsigned char **)__p;
    }
    LODWORD(v30.__r_.__value_.__l.__data_) = 136381187;
    *(std::string::size_type *)((char *)v30.__r_.__value_.__r.__words + 4) = (std::string::size_type)v13;
    WORD2(v30.__r_.__value_.__r.__words[1]) = 2081;
    *(std::string::size_type *)((char *)&v30.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v22;
    HIWORD(v30.__r_.__value_.__r.__words[2]) = 2049;
    id v31 = *(id *)&a5;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "pending, state, %{private}s, fence, %{private}s, timestamp, %{private}.1lf", (uint8_t *)&v30, 0x20u);
    if ((__p[23] & 0x80000000) != 0) {
      operator delete(*(void **)__p);
    }
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&v30, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    unsigned int v23 = *a3 + 1;
    if (v23 > 4) {
      long long v24 = "---";
    }
    else {
      long long v24 = off_1022D3DC8[v23];
    }
    sub_100918454((const void **)a2, &v27);
    if ((v27.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      long long v25 = &v27;
    }
    else {
      long long v25 = (std::string *)v27.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)std::string __p = 136381187;
    *(void *)&__p[4] = v24;
    *(_WORD *)&unsigned char __p[12] = 2081;
    *(void *)&__p[14] = v25;
    *(_WORD *)&__p[22] = 2049;
    double v29 = a5;
    unsigned int v26 = (std::string *)_os_log_send_and_compose_impl();
    if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v27.__r_.__value_.__l.__data_);
    }
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::addPendingFenceStateNotification(CFAbsoluteTime, const CLFenceManager_Type::Fence &, const CLFenceManager_Type::FenceStatus &, const CLFenceManager_Type::Notification &)", "%s\n", (const char *)v26);
    if (v26 != &v30) {
      free(v26);
    }
  }
}

void sub_10091A504(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

int *sub_10091A550(int *a1, int *a2)
{
  uint64_t v3 = (void *)*((void *)a2 + 3);
  *((void *)a2 + 3) = 0;
  int v4 = *a1;
  *a1 = *a2;
  *a2 = v4;
  uint64_t v5 = *((void *)a1 + 1);
  *((void *)a1 + 1) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v5;
  int v6 = a1[4];
  a1[4] = a2[4];
  a2[4] = v6;
  uint64_t v7 = *((void *)a1 + 3);
  *((void *)a1 + 3) = 0;
  *((void *)a2 + 3) = v7;

  return a1;
}

void sub_10091A5C0(uint64_t a1, std::string::size_type a2, int *a3, double a4)
{
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
  }
  uint64_t v8 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    if (*(char *)(a2 + 23) >= 0) {
      size_t v9 = *(unsigned __int8 *)(a2 + 23);
    }
    else {
      size_t v9 = *(void *)(a2 + 8);
    }
    uint64_t v10 = &v39;
    sub_1001110E4((uint64_t)&v39, v9 + 1);
    if ((v39.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      uint64_t v10 = (std::string *)v39.__r_.__value_.__r.__words[0];
    }
    if (v9)
    {
      if (*(char *)(a2 + 23) >= 0) {
        long long v11 = (const void *)a2;
      }
      else {
        long long v11 = *(const void **)a2;
      }
      memmove(v10, v11, v9);
    }
    *(_WORD *)((char *)&v10->__r_.__value_.__l.__data_ + v9) = 47;
    int v12 = *(char *)(a2 + 47);
    if (v12 >= 0) {
      long long v13 = (const std::string::value_type *)(a2 + 24);
    }
    else {
      long long v13 = *(const std::string::value_type **)(a2 + 24);
    }
    if (v12 >= 0) {
      std::string::size_type v14 = *(unsigned __int8 *)(a2 + 47);
    }
    else {
      std::string::size_type v14 = *(void *)(a2 + 32);
    }
    long long v15 = std::string::append(&v39, v13, v14);
    long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
    __p.__r_.__value_.__r.__words[2] = v15->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v16;
    v15->__r_.__value_.__l.__size_ = 0;
    v15->__r_.__value_.__r.__words[2] = 0;
    v15->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v39.__r_.__value_.__l.__data_);
    }
    p_p = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    LODWORD(v39.__r_.__value_.__l.__data_) = 136380931;
    *(std::string::size_type *)((char *)v39.__r_.__value_.__r.__words + 4) = (std::string::size_type)p_p;
    WORD2(v39.__r_.__value_.__r.__words[1]) = 2049;
    *(double *)((char *)&v39.__r_.__value_.__r.__words[1] + 6) = a4;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "pending, failure, fence, %{private}s, timestamp, %{private}.1lf", (uint8_t *)&v39, 0x16u);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&v39, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    sub_100918454((const void **)a2, &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string v30 = &__p;
    }
    else {
      std::string v30 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    int v35 = 136380931;
    uint64_t v36 = v30;
    __int16 v37 = 2049;
    double v38 = a4;
    id v31 = (std::string *)_os_log_send_and_compose_impl();
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::addPendingFenceFailureNotification(CFAbsoluteTime, const CLFenceManager_Type::Fence &, const CLFenceManager_Type::Notification &)", "%s\n", (const char *)v31);
    if (v31 != &v39) {
      free(v31);
    }
  }
  int v18 = *a3;
  *(double *)&v39.__r_.__value_.__l.__data_ = a4;
  LODWORD(v39.__r_.__value_.__r.__words[1]) = v18;
  v39.__r_.__value_.__r.__words[2] = (std::string::size_type)[[CLOSTransaction alloc] initWithDescription:"Pending geofence failure notification"];
  __p.__r_.__value_.__r.__words[0] = a2;
  std::string::size_type v19 = sub_100920B24((uint64_t **)(a1 + 3928), (unsigned __int8 *)a2, (uint64_t)&unk_101D0B290, (long long **)&__p);
  sub_10091ABBC(v19 + 35, (uint64_t *)&v39);

  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
  }
  long long v20 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    if (*(char *)(a2 + 23) >= 0) {
      size_t v21 = *(unsigned __int8 *)(a2 + 23);
    }
    else {
      size_t v21 = *(void *)(a2 + 8);
    }
    long long v22 = &v39;
    sub_1001110E4((uint64_t)&v39, v21 + 1);
    if ((v39.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      long long v22 = (std::string *)v39.__r_.__value_.__r.__words[0];
    }
    if (v21)
    {
      if (*(char *)(a2 + 23) >= 0) {
        unsigned int v23 = (const void *)a2;
      }
      else {
        unsigned int v23 = *(const void **)a2;
      }
      memmove(v22, v23, v21);
    }
    *(_WORD *)((char *)&v22->__r_.__value_.__l.__data_ + v21) = 47;
    int v24 = *(char *)(a2 + 47);
    if (v24 >= 0) {
      long long v25 = (const std::string::value_type *)(a2 + 24);
    }
    else {
      long long v25 = *(const std::string::value_type **)(a2 + 24);
    }
    if (v24 >= 0) {
      std::string::size_type v26 = *(unsigned __int8 *)(a2 + 47);
    }
    else {
      std::string::size_type v26 = *(void *)(a2 + 32);
    }
    std::string v27 = std::string::append(&v39, v25, v26);
    long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
    __p.__r_.__value_.__r.__words[2] = v27->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v28;
    v27->__r_.__value_.__l.__size_ = 0;
    v27->__r_.__value_.__r.__words[2] = 0;
    v27->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v39.__r_.__value_.__l.__data_);
    }
    double v29 = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      double v29 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    LODWORD(v39.__r_.__value_.__l.__data_) = 136380931;
    *(std::string::size_type *)((char *)v39.__r_.__value_.__r.__words + 4) = (std::string::size_type)v29;
    WORD2(v39.__r_.__value_.__r.__words[1]) = 2049;
    *(double *)((char *)&v39.__r_.__value_.__r.__words[1] + 6) = a4;
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "pending, failure, fence, %{private}s, timestamp, %{private}.1lf, created transaction", (uint8_t *)&v39, 0x16u);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&v39, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    sub_100918454((const void **)a2, &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      unint64_t v32 = &__p;
    }
    else {
      unint64_t v32 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    int v35 = 136380931;
    uint64_t v36 = v32;
    __int16 v37 = 2049;
    double v38 = a4;
    std::string::size_type v33 = (std::string *)_os_log_send_and_compose_impl();
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::addPendingFenceFailureNotification(CFAbsoluteTime, const CLFenceManager_Type::Fence &, const CLFenceManager_Type::Notification &)", "%s\n", (const char *)v33);
    if (v33 != &v39) {
      free(v33);
    }
  }
}

void sub_10091AB70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_10091ABBC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = (void *)a2[2];
  a2[2] = 0;
  uint64_t v4 = *a1;
  *a1 = *a2;
  *a2 = v4;
  int v5 = *((_DWORD *)a1 + 2);
  *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
  *((_DWORD *)a2 + 2) = v5;
  uint64_t v6 = a1[2];
  a1[2] = 0;
  a2[2] = v6;

  return a1;
}

uint64_t sub_10091AC1C(uint64_t a1, uint64_t a2, _DWORD *a3, long long *a4, uint64_t a5)
{
  if (*a3 >= 2u) {
    sub_101A73EF0();
  }
  uint64_t v95 = 0;
  long long v96 = (double *)&v95;
  uint64_t v97 = 0x2020000000;
  CFAbsoluteTime Current = 0.0;
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  if ((a5 & 0x80000000) != 0) {
    sub_100919C64(a1, a2, a3, a4, v96[3]);
  }
  uint64_t v91 = 0;
  std::string v92 = &v91;
  uint64_t v93 = 0x2020000000;
  BOOL v94 = *a3 != 0;
  uint64_t v84 = 0;
  double v85 = &v84;
  uint64_t v86 = 0x67812000000;
  id v87 = sub_100177B08;
  v88 = sub_100177434;
  v89 = "/!0/-0";
  sub_10091F33C((uint64_t)v90);
  uint64_t v76 = 0;
  double v77 = &v76;
  uint64_t v78 = 0xB812000000;
  uint64_t v79 = sub_10091B528;
  double v80 = nullsub_417;
  unsigned int v81 = "";
  memset(v82, 0, sizeof(v82));
  uint64_t v83 = 0;
  sub_1001A08C0(a1 + 344, (uint64_t)v82);
  uint64_t v10 = v85;
  long long v11 = v85 + 6;
  std::string::operator=((std::string *)v85 + 2, (const std::string *)a2);
  std::string::operator=((std::string *)v10 + 3, (const std::string *)(a2 + 24));
  std::string::operator=((std::string *)v10 + 4, (const std::string *)(a2 + 48));
  long long v12 = *(_OWORD *)(a2 + 72);
  long long v13 = *(_OWORD *)(a2 + 88);
  long long v14 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(v10 + 21) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(v10 + 19) = v14;
  *(_OWORD *)(v10 + 17) = v13;
  *(_OWORD *)(v10 + 15) = v12;
  long long v15 = *(_OWORD *)(a2 + 136);
  long long v16 = *(_OWORD *)(a2 + 152);
  long long v17 = *(_OWORD *)(a2 + 168);
  *(uint64_t *)((char *)v10 + 229) = *(void *)(a2 + 181);
  *(_OWORD *)(v10 + 27) = v17;
  *(_OWORD *)(v10 + 25) = v16;
  *(_OWORD *)(v10 + 23) = v15;
  std::string::operator=((std::string *)v10 + 10, (const std::string *)(a2 + 192));
  int v18 = (void *)v10[33];
  v10[33] = (uint64_t)*(id *)(a2 + 216);

  if (v11 != (void *)a2) {
    sub_10027C3B4((char *)v10 + 272, *(char **)(a2 + 224), *(void *)(a2 + 232), (uint64_t)(*(void *)(a2 + 232) - *(void *)(a2 + 224)) >> 4);
  }
  std::string::size_type v19 = v85;
  long long v20 = v85 + 68;
  long long v21 = a4[1];
  *((_OWORD *)v85 + 34) = *a4;
  *((_OWORD *)v19 + 35) = v21;
  long long v22 = a4[5];
  long long v24 = a4[2];
  long long v23 = a4[3];
  *((_OWORD *)v19 + 38) = a4[4];
  *((_OWORD *)v19 + 39) = v22;
  *((_OWORD *)v19 + 36) = v24;
  *((_OWORD *)v19 + 37) = v23;
  long long v26 = a4[7];
  long long v25 = a4[8];
  long long v27 = a4[6];
  *(_OWORD *)((char *)v20 + 140) = *(long long *)((char *)a4 + 140);
  *((_OWORD *)v19 + 41) = v26;
  *((_OWORD *)v19 + 42) = v25;
  *((_OWORD *)v19 + 40) = v27;
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
  }
  long long v28 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    if (*((_DWORD *)v92 + 6)) {
      double v29 = "exited";
    }
    else {
      double v29 = "entered";
    }
    std::string v30 = v85 + 12;
    if (*((char *)v85 + 119) < 0) {
      std::string v30 = (void *)*v30;
    }
    id v31 = v85 + 6;
    if (*((char *)v85 + 71) < 0) {
      id v31 = (void *)*v31;
    }
    unint64_t v32 = v85 + 9;
    if (*((char *)v85 + 95) < 0) {
      unint64_t v32 = (void *)*v32;
    }
    std::string::size_type v33 = " (all)";
    if ((int)a5 >= 0) {
      std::string::size_type v33 = "";
    }
    double v34 = *((double *)v85 + 18);
    int v35 = *((unsigned __int8 *)v85 + 236);
    unsigned int v73 = a5;
    long long v70 = v30;
    unsigned int v72 = v29;
    uint64_t v66 = v32;
    uint64_t v68 = v31;
    uint64_t v64 = v33;
    if (v34 <= 400.0)
    {
      if (*((unsigned char *)v85 + 236))
      {
        BOOL v62 = 0;
        int v35 = 1;
LABEL_27:
        uint64_t v36 = v85[25];
        BOOL v37 = v34 >= 7000.0;
        unsigned int v38 = *((_DWORD *)v85 + 52);
        BOOL v39 = v85[35] != v85[34];
        int isStatic = CLMotionActivity::isStatic((CLMotionActivity *)(v77 + 6));
        int isWalking = CLMotionActivity::isWalking((CLMotionActivity *)(v77 + 6));
        int isDriving = CLMotionActivity::isDriving((CLMotionActivity *)(v77 + 6));
        int v43 = CLMotionActivity::isInVehicle((CLMotionActivity *)(v77 + 6));
        *(_DWORD *)long long buf = 136384515;
        v132 = v72;
        __int16 v133 = 2082;
        v134 = v70;
        __int16 v135 = 2081;
        v136 = v68;
        __int16 v137 = 2081;
        v138 = v66;
        __int16 v139 = 1026;
        unsigned int v140 = v73;
        __int16 v141 = 2081;
        v142 = v64;
        __int16 v143 = 2049;
        uint64_t v144 = v36;
        __int16 v145 = 1025;
        BOOL v146 = v62;
        __int16 v147 = 1025;
        BOOL v148 = v37;
        a5 = v73;
        __int16 v149 = 1025;
        int v150 = (v38 >> 4) & 1;
        __int16 v151 = 1025;
        BOOL v152 = v39;
        __int16 v153 = 1025;
        int v154 = v35;
        __int16 v155 = 1025;
        int v156 = isStatic;
        __int16 v157 = 1025;
        int v158 = isWalking;
        __int16 v159 = 1025;
        int v160 = isDriving;
        __int16 v161 = 1025;
        int v162 = v43;
        _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEBUG, "Fence: Sending %{private}s notification for [%{public}s]/%{private}s/%{private}s to client %{public}d%{private}s, sinceLast,%{private}.1f, type,%{private}d,%{private}d,%{private}d,%{private}d,%{private}d, motion,%{private}d,%{private}d,%{private}d,%{private}d", buf, 0x7Au);
        goto LABEL_28;
      }
      if (*((_DWORD *)v85 + 57) != 2 && v85[35] == v85[34])
      {
        int v35 = 0;
        BOOL v62 = (v85[26] & 0x20) == 0;
        goto LABEL_27;
      }
      int v35 = 0;
    }
    BOOL v62 = 0;
    goto LABEL_27;
  }
LABEL_28:
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    if (*((_DWORD *)v92 + 6)) {
      long long v46 = "exited";
    }
    else {
      long long v46 = "entered";
    }
    long long v71 = v46;
    long long v47 = v85 + 12;
    if (*((char *)v85 + 119) < 0) {
      long long v47 = (void *)*v47;
    }
    long long v48 = v85 + 6;
    long long v49 = v85 + 6;
    if (*((char *)v85 + 71) < 0) {
      long long v49 = (void *)*v48;
    }
    long long v50 = v85 + 9;
    long long v69 = v49;
    if (*((char *)v85 + 95) < 0) {
      long long v50 = (void *)*v50;
    }
    long long v51 = "";
    unsigned int v74 = a5;
    if ((int)a5 < 0) {
      long long v51 = " (all)";
    }
    long long v65 = v51;
    uint64_t v67 = v85[25];
    BOOL v63 = sub_100489D88((uint64_t)v48);
    BOOL v52 = *((double *)v85 + 18) >= 7000.0;
    unsigned int v53 = *((_DWORD *)v85 + 52);
    BOOL v54 = v85[35] != v85[34];
    int v55 = *((unsigned __int8 *)v85 + 236);
    int v56 = CLMotionActivity::isStatic((CLMotionActivity *)(v77 + 6));
    int v57 = CLMotionActivity::isWalking((CLMotionActivity *)(v77 + 6));
    int v58 = CLMotionActivity::isDriving((CLMotionActivity *)(v77 + 6));
    int v59 = CLMotionActivity::isInVehicle((CLMotionActivity *)(v77 + 6));
    int v60 = (v53 >> 4) & 1;
    int v99 = 136384515;
    uint64_t v100 = v71;
    __int16 v101 = 2082;
    id v102 = v47;
    __int16 v103 = 2081;
    v104 = v69;
    __int16 v105 = 2081;
    v106 = v50;
    __int16 v107 = 1026;
    a5 = v74;
    unsigned int v108 = v74;
    __int16 v109 = 2081;
    long long v110 = v65;
    __int16 v111 = 2049;
    uint64_t v112 = v67;
    __int16 v113 = 1025;
    BOOL v114 = v63;
    __int16 v115 = 1025;
    BOOL v116 = v52;
    __int16 v117 = 1025;
    int v118 = v60;
    __int16 v119 = 1025;
    BOOL v120 = v54;
    __int16 v121 = 1025;
    int v122 = v55;
    __int16 v123 = 1025;
    int v124 = v56;
    __int16 v125 = 1025;
    int v126 = v57;
    __int16 v127 = 1025;
    int v128 = v58;
    __int16 v129 = 1025;
    int v130 = v59;
    uint64_t v61 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLFenceManager::notifyFenceEntryExitForAuthorizedFence(const CLFenceManager_Type::Fence &, const CLFenceManager_Type::FenceStatus &, const CLDaemonLocation &, int)", "%s\n", v61);
    if (v61 != (char *)buf) {
      free(v61);
    }
  }
  (*(void (**)(uint64_t, uint64_t *, uint64_t *, void, uint64_t, void))(*(void *)a1 + 152))(a1, v92 + 3, v85 + 6, 0, a5, 0);
  if (*(unsigned char *)(a1 + 3849) && !*(unsigned char *)(a1 + 3850))
  {
    long long v44 = *(void **)(a1 + 32);
    v75[0] = _NSConcreteStackBlock;
    v75[1] = 3221225472;
    v75[2] = sub_10091B560;
    v75[3] = &unk_1022D3A90;
    v75[4] = &v95;
    v75[5] = &v91;
    v75[6] = &v84;
    v75[7] = &v76;
    sub_100163648(v44, (uint64_t)v75);
  }
  _Block_object_dispose(&v76, 8);
  _Block_object_dispose(&v84, 8);
  sub_1001111C8((uint64_t)v90);
  _Block_object_dispose(&v91, 8);
  _Block_object_dispose(&v95, 8);
  return 1;
}

void sub_10091B4B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,char a50)
{
}

__n128 sub_10091B528(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 4_Block_object_dispose(&STACK[0x7E0], 8) = *(_OWORD *)(a2 + 48);
  long long v2 = *(_OWORD *)(a2 + 64);
  long long v3 = *(_OWORD *)(a2 + 80);
  long long v4 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v4;
  *(_OWORD *)(a1 + 64) = v2;
  *(_OWORD *)(a1 + 80) = v3;
  __n128 result = *(__n128 *)(a2 + 128);
  long long v6 = *(_OWORD *)(a2 + 144);
  long long v7 = *(_OWORD *)(a2 + 160);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(_OWORD *)(a1 + 144) = v6;
  *(_OWORD *)(a1 + 160) = v7;
  *(__n128 *)(a1 + 12_Block_object_dispose(&STACK[0x7E0], 8) = result;
  return result;
}

void sub_10091B560(void *a1)
{
  sub_100F5E738((_DWORD *)(*(void *)(a1[5] + 8) + 24), *(void *)(a1[6] + 8) + 48, (CLMotionActivity *)(*(void *)(a1[7] + 8) + 48), (uint64_t)__p, *(double *)(*(void *)(a1[4] + 8) + 24));
  sub_100009A0C((uint64_t *)__p);
  if (v2 < 0) {
    operator delete(__p[0]);
  }
}

void sub_10091B5D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10091B5F0(uint64_t a1, std::string::size_type a2, long long *a3, int a4)
{
  int v39 = 4;
  sub_10091F33C((uint64_t)&v17);
  std::string::operator=(&v17, (const std::string *)a2);
  std::string::operator=(&v18, (const std::string *)(a2 + 24));
  std::string::operator=(&v19, (const std::string *)(a2 + 48));
  long long v24 = *(_OWORD *)(a2 + 136);
  long long v25 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)long long v26 = *(_OWORD *)(a2 + 168);
  *(void *)&v26[13] = *(void *)(a2 + 181);
  long long v20 = *(_OWORD *)(a2 + 72);
  long long v21 = *(_OWORD *)(a2 + 88);
  long long v22 = *(_OWORD *)(a2 + 104);
  long long v23 = *(_OWORD *)(a2 + 120);
  std::string::operator=(&v27, (const std::string *)(a2 + 192));
  uint64_t v8 = v28;
  id v28 = *(id *)(a2 + 216);

  if (&v17 != (std::string *)a2) {
    sub_10027C3B4(v29, *(char **)(a2 + 224), *(void *)(a2 + 232), (uint64_t)(*(void *)(a2 + 232) - *(void *)(a2 + 224)) >> 4);
  }
  *(_OWORD *)((char *)v38 + 12) = *(long long *)((char *)a3 + 140);
  long long v9 = a3[7];
  long long v36 = a3[6];
  long long v37 = v9;
  v38[0] = a3[8];
  long long v10 = a3[3];
  long long v32 = a3[2];
  long long v33 = v10;
  long long v11 = a3[5];
  long long v34 = a3[4];
  long long v35 = v11;
  long long v12 = a3[1];
  long long v30 = *a3;
  long long v31 = v12;
  if (a4 < 0)
  {
    double Current = CFAbsoluteTimeGetCurrent();
    sub_10091A5C0(a1, a2, &v39, Current);
  }
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
  }
  long long v14 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "Sending Fence Failure notification", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    long long v16 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLFenceManager::notifyFenceFailure(const CLFenceManager_Type::Fence &, const CLDaemonLocation &, int)", "%s\n", v16);
    if (v16 != (char *)buf) {
      free(v16);
    }
  }
  *(_DWORD *)long long buf = 4;
  (*(void (**)(uint64_t, uint8_t *, std::string *, void, uint64_t, void))(*(void *)a1 + 152))(a1, buf, &v17, 0, 0xFFFFFFFFLL, 0);
  *(_DWORD *)long long buf = 10;
  (*(void (**)(uint64_t, uint8_t *, std::string *, void, uint64_t, void))(*(void *)a1 + 152))(a1, buf, &v17, 0, 0xFFFFFFFFLL, 0);
  sub_1001111C8((uint64_t)&v17);
  return 1;
}

void sub_10091B930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1001111C8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10091B95C(uint64_t a1, char a2)
{
  if (a2)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    long long v4 = (void *)(a1 + 40);
    sub_10091B5F0(v3, a1 + 40, (long long *)(a1 + 288), -1);
    id v5 = [[[*(id *)(v3 + 32) vendor] proxyForService:@"CLApplicationLifecycleManager"];
    if (*(char *)(a1 + 63) < 0) {
      long long v4 = (void *)*v4;
    }
    long long v6 = +[NSString stringWithUTF8String:v4];
    [v5 launchApplication:v6 requiringAuthForServiceMask:2];
  }
  else
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    long long v7 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Not launching client", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
      }
      uint64_t v8 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::notifyAndLaunchClientForAuthorizedFenceFailure(const CLFenceManager_Type::Fence &)_block_invoke", "%s\n", v8);
      if (v8 != (char *)buf) {
        free(v8);
      }
    }
  }
}

char *sub_10091BB84(uint64_t a1, uint64_t a2)
{
  return sub_10048AEC0((char *)(a1 + 40), (long long *)(a2 + 40));
}

void sub_10091BB90(uint64_t a1)
{
  char v2 = *(void **)(a1 + 264);
  if (v2)
  {
    *(void *)(a1 + 272) = v2;
    operator delete(v2);
  }

  if (*(char *)(a1 + 255) < 0) {
    operator delete(*(void **)(a1 + 232));
  }
  if (*(char *)(a1 + 111) < 0) {
    operator delete(*(void **)(a1 + 88));
  }
  if (*(char *)(a1 + 87) < 0) {
    operator delete(*(void **)(a1 + 64));
  }
  if (*(char *)(a1 + 63) < 0)
  {
    uint64_t v3 = *(void **)(a1 + 40);
    operator delete(v3);
  }
}

char *sub_10091BC24(char *result, int a2)
{
  if (a2)
  {
    char v2 = result;
    uint64_t v3 = *((void *)result + 4);
    long long v4 = result + 40;
    sub_10091AC1C(v3, (uint64_t)(result + 40), (_DWORD *)result + 72, (long long *)(result + 292), 0xFFFFFFFFLL);
    id v5 = [[objc_msgSend(*(id *)(v3 + 32), "vendor") proxyForService:@"CLApplicationLifecycleManager"];
    if (v2[63] < 0) {
      long long v4 = (void *)*v4;
    }
    long long v6 = +[NSString stringWithUTF8String:v4];
    return (char *)[v5 launchApplication:v6 requiringAuthForServiceMask:2];
  }
  return result;
}

uint64_t sub_10091BCC4()
{
  return 1;
}

uint64_t sub_10091BCCC()
{
  return 1;
}

void *sub_10091BCD4@<X0>(_DWORD *a1@<X1>, void *a2@<X8>)
{
  snprintf(__str, 0x20uLL, "%d", *a1);
  return sub_100134750(a2, __str);
}

BOOL sub_10091BD50(uint64_t a1, uint64_t a2, _DWORD *a3, unsigned __int8 *a4, uint64_t a5, unsigned __int8 *a6)
{
  BOOL result = 1;
  if (*a3 <= 8u && ((1 << *a3) & 0x143) != 0)
  {
    uint64_t v8 = a6[23];
    uint64_t v9 = *((void *)a6 + 1);
    if ((v8 & 0x80u) == 0) {
      uint64_t v10 = a6[23];
    }
    else {
      uint64_t v10 = *((void *)a6 + 1);
    }
    uint64_t v11 = a4[23];
    int v12 = (char)v11;
    if ((v11 & 0x80u) != 0) {
      uint64_t v11 = *((void *)a4 + 1);
    }
    if (v10 != v11) {
      return v10 == 0;
    }
    if (v12 >= 0) {
      long long v13 = a4;
    }
    else {
      long long v13 = *(unsigned __int8 **)a4;
    }
    if ((v8 & 0x80) == 0)
    {
      if (!a6[23]) {
        return result;
      }
      while (*a6 == *v13)
      {
        ++a6;
        ++v13;
        if (!--v8) {
          return 1;
        }
      }
      return v10 == 0;
    }
    int v14 = memcmp(*(const void **)a6, v13, *((void *)a6 + 1));
    uint64_t v10 = v9;
    if (v14) {
      return v10 == 0;
    }
    return 1;
  }
  return result;
}

void sub_10091BE18(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, uint64_t a5)
{
  switch(*a3)
  {
    case 0:
      if (*(_DWORD *)(a4 + 408) == -1)
      {
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
        }
        uint64_t v8 = qword_1024193C8;
        if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_ERROR))
        {
          LOWORD(buf.__r_.__value_.__l.__data_) = 0;
          _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Transtion, but prev state unknown", (uint8_t *)&buf, 2u);
        }
        if (sub_10013D1A0(115, 0))
        {
          bzero(&buf, 0x65CuLL);
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
          }
          LOWORD(v14[0]) = 0;
          long long v13 = (std::string *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 0, "void CLFenceManager::onMonitorNotification(int, const CLFenceMonitor_Type::Notification &, const CLFenceMonitor_Type::NotificationData &)", "%s\n", (const char *)v13);
          if (v13 != &buf) {
            free(v13);
          }
        }
      }
      sub_100919334(a1, a3, a4, (int *)(a4 + 248), a5, (_OWORD *)(a4 + 252));
      break;
    case 1:
      uint64_t v9 = (int *)(a4 + 248);
      sub_100919334(a1, a3, a4, v9, a5, (_OWORD *)(a4 + 252));
      break;
    case 4:
      uint64_t v10 = a1 + 3352;
      sub_100D9B620(v10, a4);
      break;
    case 5:
      if (sub_100DA671C(a1 + 112, a4))
      {
        sub_10091F33C((uint64_t)&buf);
        std::string::operator=(&buf, (const std::string *)a4);
        std::string::operator=(&v16, (const std::string *)(a4 + 24));
        std::string::operator=(&v17, (const std::string *)(a4 + 48));
        long long v22 = *(_OWORD *)(a4 + 136);
        long long v23 = *(_OWORD *)(a4 + 152);
        *(_OWORD *)long long v24 = *(_OWORD *)(a4 + 168);
        *(void *)&v24[13] = *(void *)(a4 + 181);
        long long v18 = *(_OWORD *)(a4 + 72);
        long long v19 = *(_OWORD *)(a4 + 88);
        long long v20 = *(_OWORD *)(a4 + 104);
        long long v21 = *(_OWORD *)(a4 + 120);
        std::string::operator=(&v25, (const std::string *)(a4 + 192));
        uint64_t v11 = v26;
        id v26 = *(id *)(a4 + 216);

        if (&buf != (std::string *)a4) {
          sub_10027C3B4(v27, *(char **)(a4 + 224), *(void *)(a4 + 232), (uint64_t)(*(void *)(a4 + 232) - *(void *)(a4 + 224)) >> 4);
        }
        uint64_t v29 = *(void *)(a4 + 416);
        v14[0] = 9;
        (*(void (**)(uint64_t, _DWORD *, std::string *, void, uint64_t, void))(*(void *)a1 + 152))(a1, v14, &buf, 0, 0xFFFFFFFFLL, 0);
        goto LABEL_22;
      }
      break;
    case 6:
      sub_10091F33C((uint64_t)&buf);
      memcpy(v30, (const void *)(a4 + 424), sizeof(v30));
      std::string::operator=(&buf, (const std::string *)a4);
      std::string::operator=(&v16, (const std::string *)(a4 + 24));
      std::string::operator=(&v17, (const std::string *)(a4 + 48));
      long long v22 = *(_OWORD *)(a4 + 136);
      long long v23 = *(_OWORD *)(a4 + 152);
      *(_OWORD *)long long v24 = *(_OWORD *)(a4 + 168);
      *(void *)&v24[13] = *(void *)(a4 + 181);
      long long v18 = *(_OWORD *)(a4 + 72);
      long long v19 = *(_OWORD *)(a4 + 88);
      long long v21 = *(_OWORD *)(a4 + 120);
      long long v20 = *(_OWORD *)(a4 + 104);
      std::string::operator=(&v25, (const std::string *)(a4 + 192));
      int v12 = v26;
      id v26 = *(id *)(a4 + 216);

      if (&buf != (std::string *)a4) {
        sub_10027C3B4(v27, *(char **)(a4 + 224), *(void *)(a4 + 232), (uint64_t)(*(void *)(a4 + 232) - *(void *)(a4 + 224)) >> 4);
      }
      int v28 = *(_DWORD *)(a4 + 248);
      v14[0] = 11;
      (*(void (**)(uint64_t, _DWORD *, std::string *, void, uint64_t, void))(*(void *)a1 + 152))(a1, v14, &buf, 0, 0xFFFFFFFFLL, 0);
LABEL_22:
      sub_1001111C8((uint64_t)&buf);
      break;
    default:
      return;
  }
}

void sub_10091C2E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1001111C8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10091C32C(uint64_t *a1, uint64_t a2, int *a3, uint64_t a4)
{
  int v5 = *a3;
  if (*a3 == 2)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    uint64_t v11 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "Fence: Got data download invalidated notification", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
      }
      std::string v17 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::onDataDownloadNotification(int, const CLFenceDataDownloadManager_Type::Notification &, const CLFenceDataDownloadManager_Type::NotificationData &)", "%s\n", v17);
      if (v17 != buf) {
        free(v17);
      }
    }
    sub_100DAC89C((uint64_t)(a1 + 14));
  }
  else if (v5 == 1)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    int v12 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      if (*(char *)(a4 + 71) >= 0) {
        uint64_t v13 = a4 + 48;
      }
      else {
        uint64_t v13 = *(void *)(a4 + 48);
      }
      if (*(char *)(a4 + 23) >= 0) {
        uint64_t v14 = a4;
      }
      else {
        uint64_t v14 = *(void *)a4;
      }
      uint64_t v15 = a4 + 24;
      if (*(char *)(a4 + 47) < 0) {
        uint64_t v15 = *(void *)(a4 + 24);
      }
      *(_DWORD *)std::string buf = 136446723;
      *(void *)&uint8_t buf[4] = v13;
      __int16 v20 = 2081;
      uint64_t v21 = v14;
      __int16 v22 = 2081;
      uint64_t v23 = v15;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "#Warning Fence: Got data download failure notification for [%{public}s]/%{private}s/%{private}s", buf, 0x20u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
      }
      long long v18 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::onDataDownloadNotification(int, const CLFenceDataDownloadManager_Type::Notification &, const CLFenceDataDownloadManager_Type::NotificationData &)", "%s\n", v18);
      if (v18 != buf) {
        free(v18);
      }
    }
    *(void *)std::string buf = 0;
    sub_100DAC6CC((uint64_t)(a1 + 14), (uint64_t *)a4, (uint64_t *)(a4 + 48), (uint64_t *)(a4 + 24), (double *)buf);
  }
  else if (!v5)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    long long v7 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      if (*(char *)(a4 + 71) >= 0) {
        uint64_t v8 = a4 + 48;
      }
      else {
        uint64_t v8 = *(void *)(a4 + 48);
      }
      if (*(char *)(a4 + 23) >= 0) {
        uint64_t v9 = a4;
      }
      else {
        uint64_t v9 = *(void *)a4;
      }
      if (*(char *)(a4 + 47) >= 0) {
        uint64_t v10 = a4 + 24;
      }
      else {
        uint64_t v10 = *(void *)(a4 + 24);
      }
      *(_DWORD *)std::string buf = 136446723;
      *(void *)&uint8_t buf[4] = v8;
      __int16 v20 = 2082;
      uint64_t v21 = v9;
      __int16 v22 = 2081;
      uint64_t v23 = v10;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Fence: Got data downloaded notification for [%{public}s]/%{public}s/%{private}s", buf, 0x20u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
      }
      std::string v16 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::onDataDownloadNotification(int, const CLFenceDataDownloadManager_Type::Notification &, const CLFenceDataDownloadManager_Type::NotificationData &)", "%s\n", v16);
      if (v16 != buf) {
        free(v16);
      }
    }
    *(void *)std::string buf = CFAbsoluteTimeGetCurrent();
    sub_100DAC6CC((uint64_t)(a1 + 14), (uint64_t *)a4, (uint64_t *)(a4 + 48), (uint64_t *)(a4 + 24), (double *)buf);
    if (!*(unsigned char *)(a4 + 248)) {
      sub_100917A78(a1);
    }
    sub_100D82738((uint64_t)(a1 + 43), a4);
  }
}

void sub_10091C918(uint64_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  if (*a3 == 4)
  {
    double Current = CFAbsoluteTimeGetCurrent();
    int v7 = *(_DWORD *)(a4 + 188);
    uint64_t v8 = 3872;
    if (v7) {
      uint64_t v8 = 3864;
    }
    *(double *)(a1 + v_Block_object_dispose(&STACK[0x7E0], 8) = Current;
    sub_1009179D8(a1, v7 != 0);
    sub_100D99718(a1 + 3352);
    sub_100D9CA14(a1 + 3352);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    uint64_t v9 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v10 = *(void *)(a1 + 3872);
      uint64_t v11 = *(void *)(a1 + 3864);
      *(_DWORD *)std::string buf = 67240704;
      BOOL v17 = v7 != 0;
      __int16 v18 = 2050;
      uint64_t v19 = v10;
      __int16 v20 = 2050;
      uint64_t v21 = v11;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "Fence: Got kNotificationLocationServicesStatus, enabled, %{public}d, StopTime, %{public}.1lf, StartTime, %{public}.1lf", buf, 0x1Cu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 == -1)
      {
LABEL_18:
        uint64_t v15 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::onClientNotification(int, const CLClientManager_Type::Notification &, const CLClientManager_Type::NotificationData &)", "%s\n", v15);
        if (v15 != (char *)buf) {
          free(v15);
        }
        return;
      }
LABEL_20:
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
      goto LABEL_18;
    }
  }
  else
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
    }
    uint64_t v13 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
    {
      int v14 = *a3;
      *(_DWORD *)std::string buf = 67240192;
      BOOL v17 = v14;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "#Warning Got unknown client notification %{public}d", buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193C0 == -1) {
        goto LABEL_18;
      }
      goto LABEL_20;
    }
  }
}

void sub_10091CC68(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  uint64_t v4 = a4;
  switch(*a3)
  {
    case 0:
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
      }
      long long v6 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
      {
        unint64_t v7 = 0xEF7BDEF7BDEF7BDFLL * ((uint64_t)(*(void *)(v4 + 8) - *(void *)v4) >> 3);
        *(_DWORD *)std::string buf = 136315394;
        *(void *)&uint8_t buf[4] = "onAuthorizationNotification";
        __int16 v96 = 2050;
        uint64_t v97 = (unsigned char *)v7;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%s, Got fence addition notification for %{public}ld fences", buf, 0x16u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
        }
        unint64_t v57 = 0xEF7BDEF7BDEF7BDFLL * ((uint64_t)(*(void *)(v4 + 8) - *(void *)v4) >> 3);
        *(_DWORD *)long long __dst = 136315394;
        *(void *)&__dst[4] = "onAuthorizationNotification";
        __int16 v82 = 2050;
        unint64_t v83 = v57;
        int v58 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::onAuthorizationNotification(int, const CLFenceAuthorizationManager_Type::Notification &, const CLFenceAuthorizationManager_Type::NotificationData &)", "%s\n", v58);
        if (v58 != buf) {
          free(v58);
        }
      }
      double Current = CFAbsoluteTimeGetCurrent();
      uint64_t v73 = 0;
      unsigned int v74 = 0;
      unint64_t v75 = 0;
      uint64_t v9 = *(void *)v4;
      uint64_t v10 = *(void *)(v4 + 8);
      if (*(void *)v4 != v10)
      {
        double v11 = Current;
        uint64_t v4 = a1 + 112;
        do
        {
          if (sub_100DA671C(a1 + 112, v9))
          {
            if (qword_1024193C0 != -1) {
              dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
            }
            int v12 = qword_1024193C8;
            if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v13 = (void *)(v9 + 48);
              if (*(char *)(v9 + 71) < 0) {
                uint64_t v13 = (void *)*v13;
              }
              uint64_t v14 = v9;
              if (*(char *)(v9 + 23) < 0) {
                uint64_t v14 = *(void *)v9;
              }
              uint64_t v15 = (void *)(v9 + 24);
              if (*(char *)(v9 + 47) < 0) {
                uint64_t v15 = (void *)*v15;
              }
              *(_DWORD *)std::string buf = 136446723;
              *(void *)&uint8_t buf[4] = v13;
              __int16 v96 = 2082;
              uint64_t v97 = (unsigned char *)v14;
              __int16 v98 = 2081;
              int v99 = v15;
              _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "Fence [%{public}s]/%{public}s/%{private}s is authorized", buf, 0x20u);
            }
            if (sub_10013D1A0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1024193C0 != -1) {
                dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
              }
              unsigned int v38 = (void *)(v9 + 48);
              if (*(char *)(v9 + 71) < 0) {
                unsigned int v38 = (void *)*v38;
              }
              uint64_t v39 = v9;
              if (*(char *)(v9 + 23) < 0) {
                uint64_t v39 = *(void *)v9;
              }
              int v40 = (void *)(v9 + 24);
              if (*(char *)(v9 + 47) < 0) {
                int v40 = (void *)*v40;
              }
              *(_DWORD *)long long __dst = 136446723;
              *(void *)&__dst[4] = v38;
              __int16 v82 = 2082;
              unint64_t v83 = v39;
              __int16 v84 = 2081;
              double v85 = v40;
              std::string v41 = (char *)_os_log_send_and_compose_impl();
              sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::onAuthorizationNotification(int, const CLFenceAuthorizationManager_Type::Notification &, const CLFenceAuthorizationManager_Type::NotificationData &)", "%s\n", v41);
              if (v41 != buf) {
                free(v41);
              }
            }
            if (*(_DWORD *)(v9 + 184) == -1)
            {
              sub_101A74088();
              abort_report_np();
              __break(1u);
              goto LABEL_146;
            }
            if (*(double *)(v9 + 96) > 400.0
              || *(unsigned char *)(v9 + 188)
              || *(_DWORD *)(v9 + 180) == 2
              || *(void *)(v9 + 232) != *(void *)(v9 + 224)
              || (*(unsigned char *)(v9 + 160) & 0x20) != 0)
            {
              std::string v25 = v74;
              if ((unint64_t)v74 >= v75)
              {
                id v26 = (char *)sub_100920FEC(&v73, (long long *)v9);
              }
              else
              {
                sub_10048AEC0(v74, (long long *)v9);
                id v26 = v25 + 248;
              }
              unsigned int v74 = v26;
            }
            else
            {
              memset(&v72, 0, sizeof(v72));
              if (*(char *)(v9 + 71) < 0) {
                uint64_t v16 = *(void *)(v9 + 56);
              }
              else {
                uint64_t v16 = *(unsigned __int8 *)(v9 + 71);
              }
              if (v16) {
                std::string v27 = (const std::string *)(v9 + 48);
              }
              else {
                std::string v27 = (const std::string *)v9;
              }
              std::string::operator=(&v72, v27);
              *(void *)long long __dst = &v72;
              int v28 = sub_100920E4C((uint64_t **)(a1 + 3952), (const void **)&v72.__r_.__value_.__l.__data_, (uint64_t)&unk_101D0B290, (long long **)__dst);
              if (sub_1004749E4((uint64_t)(v28 + 7), v11))
              {
                uint64_t v29 = v74;
                if ((unint64_t)v74 >= v75)
                {
                  long long v30 = (char *)sub_100920FEC(&v73, (long long *)v9);
                }
                else
                {
                  sub_10048AEC0(v74, (long long *)v9);
                  long long v30 = v29 + 248;
                }
                unsigned int v74 = v30;
              }
              else
              {
                sub_10048AEC0(__dst, (long long *)v9);
                char v89 = 1;
                if (qword_1024193C0 != -1) {
                  dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
                }
                uint64_t v31 = qword_1024193C8;
                if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
                {
                  int v65 = v88;
                  uint64_t v67 = (void **)v87[0];
                  long long v69 = v31;
                  int v32 = SHIBYTE(v84);
                  BOOL v63 = *(unsigned char **)__dst;
                  sub_100C8C864((uint64_t)__dst);
                  long long v33 = __dst;
                  if (v32 < 0) {
                    long long v33 = v63;
                  }
                  long long v34 = v87;
                  if (v65 < 0) {
                    long long v34 = v67;
                  }
                  *(_DWORD *)std::string buf = 136446723;
                  long long v35 = __p;
                  if (v79 < 0) {
                    long long v35 = *(unsigned char **)__p;
                  }
                  *(void *)&uint8_t buf[4] = v34;
                  __int16 v96 = 2082;
                  uint64_t v97 = v33;
                  __int16 v98 = 2081;
                  int v99 = v35;
                  _os_log_impl((void *)&_mh_execute_header, v69, OS_LOG_TYPE_DEBUG, "#Warning throttle fine fence usage by client [%{public}s]/%{public}s, %{private}s", buf, 0x20u);
                  if (SHIBYTE(v79) < 0) {
                    operator delete(*(void **)__p);
                  }
                }
                if (sub_10013D1A0(115, 2))
                {
                  bzero(buf, 0x65CuLL);
                  if (qword_1024193C0 != -1) {
                    dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
                  }
                  int v66 = v88;
                  uint64_t v68 = (void **)v87[0];
                  int v42 = SHIBYTE(v84);
                  uint64_t v64 = *(unsigned char **)__dst;
                  sub_100C8C864((uint64_t)__dst);
                  int v43 = __dst;
                  if (v42 < 0) {
                    int v43 = v64;
                  }
                  long long v44 = v87;
                  if (v66 < 0) {
                    long long v44 = v68;
                  }
                  *(_DWORD *)std::string __p = 136446723;
                  long long v45 = &v70;
                  if (v71 < 0) {
                    long long v45 = v70;
                  }
                  *(void *)&__p[4] = v44;
                  __int16 v77 = 2082;
                  uint64_t v78 = v43;
                  __int16 v79 = 2081;
                  double v80 = v45;
                  long long v46 = (char *)_os_log_send_and_compose_impl();
                  if (v71 < 0) {
                    operator delete(v70);
                  }
                  sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::onAuthorizationNotification(int, const CLFenceAuthorizationManager_Type::Notification &, const CLFenceAuthorizationManager_Type::NotificationData &)", "%s\n", v46);
                  if (v46 != buf) {
                    free(v46);
                  }
                }
                long long v36 = v74;
                if ((unint64_t)v74 >= v75)
                {
                  long long v37 = (char *)sub_100920FEC(&v73, (long long *)__dst);
                }
                else
                {
                  sub_10048AEC0(v74, (long long *)__dst);
                  long long v37 = v36 + 248;
                }
                unsigned int v74 = v37;
                if (v93)
                {
                  BOOL v94 = v93;
                  operator delete(v93);
                }

                if (v91 < 0) {
                  operator delete(v90);
                }
                if (v88 < 0) {
                  operator delete(v87[0]);
                }
                if (v86 < 0) {
                  operator delete(v85);
                }
                if (SHIBYTE(v84) < 0) {
                  operator delete(*(void **)__dst);
                }
              }
              if (SHIBYTE(v72.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(v72.__r_.__value_.__l.__data_);
              }
            }
          }
          else
          {
            if (qword_1024193C0 != -1) {
              dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
            }
            BOOL v17 = qword_1024193C8;
            if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
            {
              __int16 v18 = (void *)(v9 + 48);
              if (*(char *)(v9 + 71) < 0) {
                __int16 v18 = (void *)*v18;
              }
              uint64_t v19 = v9;
              if (*(char *)(v9 + 23) < 0) {
                uint64_t v19 = *(void *)v9;
              }
              __int16 v20 = (void *)(v9 + 24);
              if (*(char *)(v9 + 47) < 0) {
                __int16 v20 = (void *)*v20;
              }
              *(_DWORD *)std::string buf = 136446723;
              *(void *)&uint8_t buf[4] = v18;
              __int16 v96 = 2082;
              uint64_t v97 = (unsigned char *)v19;
              __int16 v98 = 2081;
              int v99 = v20;
              _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEBUG, "Fence [%{public}s]/%{public}s/%{private}s is not authorized", buf, 0x20u);
            }
            if (sub_10013D1A0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1024193C0 != -1) {
                dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
              }
              uint64_t v21 = (void *)(v9 + 48);
              if (*(char *)(v9 + 71) < 0) {
                uint64_t v21 = (void *)*v21;
              }
              uint64_t v22 = v9;
              if (*(char *)(v9 + 23) < 0) {
                uint64_t v22 = *(void *)v9;
              }
              uint64_t v23 = (void *)(v9 + 24);
              if (*(char *)(v9 + 47) < 0) {
                uint64_t v23 = (void *)*v23;
              }
              *(_DWORD *)long long __dst = 136446723;
              *(void *)&__dst[4] = v21;
              __int16 v82 = 2082;
              unint64_t v83 = v22;
              __int16 v84 = 2081;
              double v85 = v23;
              long long v24 = (char *)_os_log_send_and_compose_impl();
              sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::onAuthorizationNotification(int, const CLFenceAuthorizationManager_Type::Notification &, const CLFenceAuthorizationManager_Type::NotificationData &)", "%s\n", v24);
              if (v24 != buf) {
                free(v24);
              }
            }
          }
          v9 += 248;
        }
        while (v9 != v10);
      }
      sub_100917668(a1, &v73);
      *(void *)std::string buf = &v73;
      sub_10008DF5C((void ***)buf);
      break;
    case 1:
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
      }
      long long v51 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
      {
        unint64_t v52 = 0xEF7BDEF7BDEF7BDFLL * ((uint64_t)(*(void *)(v4 + 8) - *(void *)v4) >> 3);
        *(_DWORD *)std::string buf = 136315394;
        *(void *)&uint8_t buf[4] = "onAuthorizationNotification";
        __int16 v96 = 2050;
        uint64_t v97 = (unsigned char *)v52;
        _os_log_impl((void *)&_mh_execute_header, v51, OS_LOG_TYPE_DEFAULT, "%s, Got fence removal notification for %{public}ld fences", buf, 0x16u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
        }
        unint64_t v59 = 0xEF7BDEF7BDEF7BDFLL * ((uint64_t)(*(void *)(v4 + 8) - *(void *)v4) >> 3);
        *(_DWORD *)long long __dst = 136315394;
        *(void *)&__dst[4] = "onAuthorizationNotification";
        __int16 v82 = 2050;
        unint64_t v83 = v59;
        int v60 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::onAuthorizationNotification(int, const CLFenceAuthorizationManager_Type::Notification &, const CLFenceAuthorizationManager_Type::NotificationData &)", "%s\n", v60);
        if (v60 != buf) {
          free(v60);
        }
      }
      sub_100917818(a1, (unsigned __int8 **)v4, *(unsigned __int8 *)(v4 + 24));
      break;
    case 2:
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
      }
      long long v48 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::string buf = 136315138;
        *(void *)&uint8_t buf[4] = "onAuthorizationNotification";
        _os_log_impl((void *)&_mh_execute_header, v48, OS_LOG_TYPE_DEFAULT, "%s, Got fence reset notification", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
        }
        *(_DWORD *)long long __dst = 136315138;
        *(void *)&__dst[4] = "onAuthorizationNotification";
        int v56 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::onAuthorizationNotification(int, const CLFenceAuthorizationManager_Type::Notification &, const CLFenceAuthorizationManager_Type::NotificationData &)", "%s\n", v56);
        if (v56 != buf) {
          free(v56);
        }
      }
      BOOL v49 = sub_1001198CC() == 1;
      sub_100D7FAF4(a1 + 344, v49);
      sub_1009174B0(a1);
      break;
    case 3:
      if (*(unsigned char *)(a4 + 25))
      {
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
        }
        long long v50 = qword_1024193C8;
        if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)std::string buf = 136315138;
          *(void *)&uint8_t buf[4] = "onAuthorizationNotification";
          _os_log_impl((void *)&_mh_execute_header, v50, OS_LOG_TYPE_DEFAULT, "%s, Got fence enable notification", buf, 0xCu);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
          }
          *(_DWORD *)long long __dst = 136315138;
          *(void *)&__dst[4] = "onAuthorizationNotification";
          uint64_t v61 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::onAuthorizationNotification(int, const CLFenceAuthorizationManager_Type::Notification &, const CLFenceAuthorizationManager_Type::NotificationData &)", "%s\n", v61);
          if (v61 != buf) {
            free(v61);
          }
        }
        sub_100D7FAF4(a1 + 344, 1);
        sub_100916DE0(a1, 0, 1, 0);
      }
      else
      {
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
        }
        unsigned int v53 = qword_1024193C8;
        if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)std::string buf = 136315138;
          *(void *)&uint8_t buf[4] = "onAuthorizationNotification";
          _os_log_impl((void *)&_mh_execute_header, v53, OS_LOG_TYPE_DEFAULT, "%s, Got fence disable notification", buf, 0xCu);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024193C0 != -1) {
            dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
          }
          *(_DWORD *)long long __dst = 136315138;
          *(void *)&__dst[4] = "onAuthorizationNotification";
          BOOL v62 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::onAuthorizationNotification(int, const CLFenceAuthorizationManager_Type::Notification &, const CLFenceAuthorizationManager_Type::NotificationData &)", "%s\n", v62);
          if (v62 != buf) {
            free(v62);
          }
        }
        uint64_t v54 = a1 + 344;
        sub_100D7FAF4(v54, 0);
        sub_100D802DC(v54);
      }
      break;
    case 4:
      if (qword_1024193C0 != -1) {
LABEL_146:
      }
        dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
      long long v47 = qword_1024193C8;
      if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::string buf = 136315138;
        *(void *)&uint8_t buf[4] = "onAuthorizationNotification";
        _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_DEFAULT, "%s, Got fence failure notification", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193C0 != -1) {
          dispatch_once(&qword_1024193C0, &stru_1022D3BB8);
        }
        *(_DWORD *)long long __dst = 136315138;
        *(void *)&__dst[4] = "onAuthorizationNotification";
        int v55 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLFenceManager::onAuthorizationNotification(int, const CLFenceAuthorizationManager_Type::Notification &, const CLFenceAuthorizationManager_Type::NotificationData &)", "%s\n", v55);
        if (v55 != buf) {
          free(v55);
        }
      }
      sub_100918D40(a1, (void *)v4);
      break;
    default:
      return;
  }
}

void sub_10091DE94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  sub_100488394((uint64_t)&a38);
  if (a30 < 0) {
    operator delete(__p);
  }
  a70 = (uint64_t)&a31;
  sub_10008DF5C((void ***)&a70);
  _Unwind_Resume(a1);
}

uint64_t sub_10091DF48(uint64_t a1, uint64_t a2, int a3)
{
  int v4 = a3;
  return (*(uint64_t (**)(uint64_t, uint64_t, int *))(*(void *)a1 + 104))(a1, a2, &v4);
}

uint64_t sub_10091DF90(uint64_t a1, uint64_t a2, int a3)
{
  int v4 = a3;
  return (*(uint64_t (**)(uint64_t, uint64_t, int *))(*(void *)a1 + 112))(a1, a2, &v4);
}

uint64_t sub_10091DFD8(uint64_t a1, int a2)
{
  int v3 = a2;
  return (*(uint64_t (**)(uint64_t, int *))(*(void *)a1 + 120))(a1, &v3);
}

uint64_t sub_10091E020(uint64_t a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241ECE8, memory_order_acquire) & 1) == 0)
  {
    uint64_t v4 = a1;
    int v3 = __cxa_guard_acquire(&qword_10241ECE8);
    a1 = v4;
    if (v3)
    {
      qword_10241ECD0 = 0;
      *(void *)algn_10241ECD8 = 0;
      qword_10241ECE0 = 0;
      __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10241ECD0, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_10241ECE8);
      a1 = v4;
    }
  }
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)a1 + 96);

  return v1();
}

BOOL sub_10091E0FC(uint64_t a1, int a2, int *a3)
{
  uint64_t v5 = *(void *)(a1 + 88);
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v6 = a1 + 88;
  do
  {
    int v7 = *(_DWORD *)(v5 + 32);
    BOOL v8 = v7 < a2;
    if (v7 >= a2) {
      uint64_t v9 = (uint64_t *)v5;
    }
    else {
      uint64_t v9 = (uint64_t *)(v5 + 8);
    }
    if (!v8) {
      uint64_t v6 = v5;
    }
    uint64_t v5 = *v9;
  }
  while (*v9);
  if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= a2)
  {
    uint64_t v16 = *(void *)(v6 + 48);
    uint64_t v14 = v6 + 48;
    uint64_t v15 = v16;
    if (!v16) {
      goto LABEL_29;
    }
    int v17 = *a3;
    uint64_t v18 = v14;
    do
    {
      int v19 = *(_DWORD *)(v15 + 28);
      BOOL v20 = v19 < v17;
      if (v19 >= v17) {
        uint64_t v21 = (uint64_t *)v15;
      }
      else {
        uint64_t v21 = (uint64_t *)(v15 + 8);
      }
      if (!v20) {
        uint64_t v18 = v15;
      }
      uint64_t v15 = *v21;
    }
    while (*v21);
    if (v18 == v14 || v17 < *(_DWORD *)(v18 + 28)) {
LABEL_29:
    }
      uint64_t v18 = v14;
    return v18 != v14;
  }
  else
  {
LABEL_11:
    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022D3B98);
    }
    uint64_t v10 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_FAULT))
    {
      double v11 = (void *)(a1 + 8);
      if (*(char *)(a1 + 31) < 0) {
        double v11 = (void *)*v11;
      }
      *(_DWORD *)std::string buf = 136446466;
      long long v24 = v11;
      __int16 v25 = 1026;
      int v26 = a2;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_FAULT, "%{public}s; client %{public}d does not exist",
        buf,
        0x12u);
    }
    BOOL v12 = sub_10013D1A0(115, 0);
    BOOL result = 0;
    if (v12)
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419580 != -1) {
        dispatch_once(&qword_102419580, &stru_1022D3B98);
      }
      uint64_t v22 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "virtual BOOL CLNotifier<CLFenceManager_Type::Notification, CLFenceManager_Type::NotificationData, char, std::string>::clientRegistered(int, const Notification_T &) [Notification_T = CLFenceManager_Type::Notification, NotificationData_T = CLFenceManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = std::string]", "%s\n", v22);
      if (v22 != (char *)buf) {
        free(v22);
      }
      return 0;
    }
  }
  return result;
}

uint64_t sub_10091E380(uint64_t a1, int *a2, long long *a3)
{
  sub_10091FD88(a3, &v10);
  int v9 = *a2;
  double v11 = &v9;
  uint64_t v5 = sub_10078BC58((uint64_t **)(a1 + 56), &v9, (uint64_t)&unk_101D0B290, &v11);
  long long v6 = v10;
  long long v10 = 0uLL;
  int v7 = (std::__shared_weak_count *)v5[9];
  *((_OWORD *)v5 + 4) = v6;
  if (v7)
  {
    sub_1000DB0A0(v7);
    if (*((void *)&v10 + 1)) {
      sub_1000DB0A0(*((std::__shared_weak_count **)&v10 + 1));
    }
  }
  return 1;
}

void sub_10091E414(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1000DB0A0(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10091E42C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100110970(v14);
  sub_100110970(v15);
  int v16 = 0xFFFF;
  long long v17 = 0u;
  __asm { FMOV            V1.2D, #-1.0 }
  long long v18 = xmmword_101D1C320;
  long long v19 = _Q1;
  long long v20 = _Q1;
  long long v21 = _Q1;
  int v22 = 0;
  unint64_t v23 = 0xBFF0000000000000;
  long long v24 = 0u;
  int v25 = 0;
  unint64_t v26 = 0xBFF0000000000000;
  int v27 = 0x7FFFFFFF;
  long long v29 = 0u;
  uint64_t v28 = 0;
  char v30 = 0;
  uint64_t v32 = 1;
  long long v31 = 0u;
  unint64_t v33 = 0xBFF0000000000000;
  long long v34 = _Q1;
  long long v35 = _Q1;
  long long v36 = _Q1;
  long long v37 = _Q1;
  long long v38 = _Q1;
  long long v39 = _Q1;
  long long v40 = xmmword_101D1C320;
  int v41 = 0xFFFF;
  uint64_t v43 = 0;
  uint64_t v42 = 0;
  long long v44 = xmmword_101D1C320;
  long long v45 = _Q1;
  long long v46 = _Q1;
  long long v47 = _Q1;
  int v48 = 0;
  unint64_t v49 = 0xBFF0000000000000;
  uint64_t v51 = 0;
  uint64_t v50 = 0;
  int v52 = 0;
  unint64_t v53 = 0xBFF0000000000000;
  int v54 = 0x7FFFFFFF;
  char v58 = 0;
  uint64_t v56 = 0;
  uint64_t v55 = 0;
  uint64_t v57 = 0;
  int v59 = 0xFFFF;
  uint64_t v61 = 0;
  uint64_t v60 = 0;
  long long v62 = xmmword_101D1C320;
  long long v63 = _Q1;
  long long v64 = _Q1;
  long long v65 = _Q1;
  int v66 = 0;
  unint64_t v67 = 0xBFF0000000000000;
  uint64_t v68 = 0;
  uint64_t v69 = 0;
  int v70 = 0;
  unint64_t v71 = 0xBFF0000000000000;
  int v72 = 0x7FFFFFFF;
  uint64_t v73 = 0;
  uint64_t v74 = 0;
  uint64_t v75 = 0;
  char v76 = 0;
  int v77 = 0xFFFF;
  uint64_t v79 = 0;
  uint64_t v78 = 0;
  long long v80 = xmmword_101D1C320;
  long long v81 = _Q1;
  long long v82 = _Q1;
  long long v83 = _Q1;
  int v84 = 0;
  unint64_t v85 = 0xBFF0000000000000;
  uint64_t v87 = 0;
  uint64_t v86 = 0;
  int v88 = 0;
  unint64_t v89 = 0xBFF0000000000000;
  int v90 = 0x7FFFFFFF;
  uint64_t v92 = 0;
  uint64_t v91 = 0;
  char v94 = 0;
  uint64_t v93 = 0;
  long long v114 = 0u;
  long long v115 = 0u;
  long long v112 = 0u;
  long long v113 = 0u;
  long long v110 = 0u;
  long long v111 = 0u;
  long long v108 = 0u;
  long long v109 = 0u;
  long long v106 = 0u;
  long long v107 = 0u;
  long long v104 = 0u;
  long long v105 = 0u;
  long long v102 = 0u;
  long long v103 = 0u;
  long long v100 = 0u;
  long long v101 = 0u;
  long long v98 = 0u;
  long long v99 = 0u;
  long long v96 = 0u;
  long long v97 = 0u;
  long long v95 = 0u;
  int v116 = 0;
  (*(void (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t, void))(*(void *)a1 + 152))(a1, a2, v14, a3, a4, 0);
  return sub_1001111C8((uint64_t)v14);
}

void sub_10091E69C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1001111C8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10091E6C0(uint64_t a1, unsigned int *a2, long long *a3, int a4)
{
  if (*(unsigned char *)(a1 + 108)) {
    return;
  }
  BOOL v8 = _os_activity_create((void *)&_mh_execute_header, "CL: notifyClientsWithData (Fallback)", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_IF_NONE_PRESENT);
  os_activity_scope_enter(v8, &state);

  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022D3B98);
  }
  int v9 = qword_102419588;
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    long long v10 = (void *)(a1 + 8);
    if (*(char *)(a1 + 31) < 0) {
      long long v10 = (void *)*v10;
    }
    double v11 = (std::__shared_weak_count *)*a2;
    *(_DWORD *)std::string buf = 68289794;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    *(_WORD *)&buf[18] = 2082;
    *(void *)&buf[20] = "activity";
    __int16 v23 = 2082;
    long long v24 = v10;
    __int16 v25 = 2050;
    unint64_t v26 = v11;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"notifyClientsWithData\", \"event\":%{public, location:escape_only}s, \"name\":%{public, location:escape_only}s, \"notification\":%{public}lld}", buf, 0x30u);
  }
  uint64_t v12 = *(void *)(a1 + 64);
  if (!v12) {
    goto LABEL_18;
  }
  int v13 = *a2;
  uint64_t v14 = (uint64_t **)(a1 + 64);
  do
  {
    int v15 = *(_DWORD *)(v12 + 32);
    BOOL v16 = v15 < v13;
    if (v15 >= v13) {
      long long v17 = (uint64_t *)v12;
    }
    else {
      long long v17 = (uint64_t *)(v12 + 8);
    }
    if (!v16) {
      uint64_t v14 = (uint64_t **)v12;
    }
    uint64_t v12 = *v17;
  }
  while (*v17);
  if (v14 == (uint64_t **)(a1 + 64) || v13 < *((_DWORD *)v14 + 8))
  {
LABEL_18:
    int v27 = v28;
    memset(v28, 0, sizeof(v28));
    long long v29 = 0;
    sub_10078A4E4((uint64_t)buf, a2, (uint64_t)&v27);
    uint64_t v14 = sub_10078A368((uint64_t **)(a1 + 56), (__n128 *)buf);
    if (v26) {
      sub_1000DB0A0(v26);
    }
    sub_10078A7B0((uint64_t)&buf[8], *(char **)&buf[16]);
    if (v29) {
      sub_1000DB0A0(v29);
    }
    sub_10078A7B0((uint64_t)&v27, v28[0]);
  }
  if (!a4)
  {
    long long v20 = (std::__shared_weak_count *)v14[9];
    v14[8] = 0;
    v14[9] = 0;
    if (!v20) {
      goto LABEL_29;
    }
LABEL_28:
    sub_1000DB0A0(v20);
    goto LABEL_29;
  }
  sub_10091FD88(a3, buf);
  long long v18 = *(_OWORD *)buf;
  *(void *)std::string buf = 0;
  *(void *)&uint8_t buf[8] = 0;
  long long v19 = (std::__shared_weak_count *)v14[9];
  *((_OWORD *)v14 + 4) = v18;
  if (v19)
  {
    sub_1000DB0A0(v19);
    long long v20 = *(std::__shared_weak_count **)&buf[8];
    if (*(void *)&buf[8]) {
      goto LABEL_28;
    }
  }
LABEL_29:
  if (v14[7]) {
    sub_10091F7CC();
  }
  os_activity_scope_leave(&state);
}

void sub_10091EC90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state, char a18)
{
}

void sub_10091ECDC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 108))
  {
    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022D3B98);
    }
    char v2 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      int v3 = (void *)(a1 + 8);
      if (*(char *)(a1 + 31) < 0) {
        int v3 = (void *)*v3;
      }
      *(_DWORD *)std::string buf = 136315138;
      int v22 = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "%s; already shutdown; not listing clients",
        buf,
        0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419580 != -1) {
        dispatch_once(&qword_102419580, &stru_1022D3B98);
      }
      uint64_t v4 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLNotifier<CLFenceManager_Type::Notification, CLFenceManager_Type::NotificationData, char, std::string>::listClients() [Notification_T = CLFenceManager_Type::Notification, NotificationData_T = CLFenceManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = std::string]", "%s\n", v4);
      if (v4 != (char *)buf) {
        free(v4);
      }
    }
  }
  else
  {
    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022D3B98);
    }
    uint64_t v5 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      long long v6 = (void *)(a1 + 8);
      if (*(char *)(a1 + 31) < 0) {
        long long v6 = (void *)*v6;
      }
      uint64_t v7 = *(void *)(a1 + 96);
      *(_DWORD *)std::string buf = 136315394;
      int v22 = v6;
      __int16 v23 = 2048;
      v24[0] = v7;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "%s; listing clients, num clients: %zu",
        buf,
        0x16u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419580 != -1) {
        dispatch_once(&qword_102419580, &stru_1022D3B98);
      }
      long long v20 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLNotifier<CLFenceManager_Type::Notification, CLFenceManager_Type::NotificationData, char, std::string>::listClients() [Notification_T = CLFenceManager_Type::Notification, NotificationData_T = CLFenceManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = std::string]", "%s\n", v20);
      if (v20 != (char *)buf) {
        free(v20);
      }
    }
    BOOL v8 = *(void **)(a1 + 80);
    if (v8 != (void *)(a1 + 88))
    {
      do
      {
        int v9 = (void *)v8[5];
        if (v9 != v8 + 6)
        {
          do
          {
            if (qword_102419580 != -1) {
              dispatch_once(&qword_102419580, &stru_1022D3B98);
            }
            long long v10 = qword_102419588;
            if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
            {
              double v11 = (void *)(a1 + 8);
              if (*(char *)(a1 + 31) < 0) {
                double v11 = *(void **)(a1 + 8);
              }
              int v12 = *((_DWORD *)v8 + 8);
              int v13 = *((_DWORD *)v9 + 7);
              *(_DWORD *)std::string buf = 136315650;
              int v22 = v11;
              __int16 v23 = 1024;
              LODWORD(v24[0]) = v12;
              WORD2(v24[0]) = 1024;
              *(_DWORD *)((char *)v24 + 6) = v13;
              _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "%s; clients, id: %d, notification: %d",
                buf,
                0x18u);
            }
            if (sub_10013D1A0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_102419580 != -1) {
                dispatch_once(&qword_102419580, &stru_1022D3B98);
              }
              long long v17 = (char *)_os_log_send_and_compose_impl();
              sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLNotifier<CLFenceManager_Type::Notification, CLFenceManager_Type::NotificationData, char, std::string>::listClients() [Notification_T = CLFenceManager_Type::Notification, NotificationData_T = CLFenceManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = std::string]", "%s\n", v17);
              if (v17 != (char *)buf) {
                free(v17);
              }
            }
            uint64_t v14 = (void *)v9[1];
            if (v14)
            {
              do
              {
                int v15 = v14;
                uint64_t v14 = (void *)*v14;
              }
              while (v14);
            }
            else
            {
              do
              {
                int v15 = (void *)v9[2];
                BOOL v16 = *v15 == (void)v9;
                int v9 = v15;
              }
              while (!v16);
            }
            int v9 = v15;
          }
          while (v15 != v8 + 6);
        }
        long long v18 = (void *)v8[1];
        if (v18)
        {
          do
          {
            long long v19 = v18;
            long long v18 = (void *)*v18;
          }
          while (v18);
        }
        else
        {
          do
          {
            long long v19 = (void *)v8[2];
            BOOL v16 = *v19 == (void)v8;
            BOOL v8 = v19;
          }
          while (!v16);
        }
        BOOL v8 = v19;
      }
      while (v19 != (void *)(a1 + 88));
    }
  }
}

id sub_10091F28C(uint64_t a1, int a2, void *a3)
{
  id result = sub_10091FF08(a3);
  if (result)
  {
    int v6 = a2;
    return (id)(*(uint64_t (**)(void, int *, id, void))(a1 + 24))(0, &v6, result, *(void *)(a1 + 32));
  }
  return result;
}

void sub_10091F2DC(id a1)
{
  qword_102419588 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_10091F30C(id a1)
{
  qword_1024193C8 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeoFencing");
}

uint64_t sub_10091F33C(uint64_t a1)
{
  char v2 = sub_100110970((char *)a1);
  sub_100110970(v2 + 248);
  *(_DWORD *)(a1 + 496) = 0xFFFF;
  *(void *)(a1 + 50_Block_object_dispose(&STACK[0x7E0], 8) = 0;
  *(void *)(a1 + 500) = 0;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a1 + 516) = xmmword_101D1C320;
  *(_OWORD *)(a1 + 532) = _Q0;
  *(_OWORD *)(a1 + 54_Block_object_dispose(&STACK[0x7E0], 8) = _Q0;
  *(_OWORD *)(a1 + 564) = _Q0;
  *(_DWORD *)(a1 + 580) = 0;
  *(void *)(a1 + 584) = 0xBFF0000000000000;
  *(void *)(a1 + 600) = 0;
  *(void *)(a1 + 592) = 0;
  *(_DWORD *)(a1 + 60_Block_object_dispose(&STACK[0x7E0], 8) = 0;
  *(void *)(a1 + 612) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 620) = 0x7FFFFFFF;
  *(void *)(a1 + 624) = 0;
  *(void *)(a1 + 640) = 0;
  *(void *)(a1 + 632) = 0;
  *(unsigned char *)(a1 + 64_Block_object_dispose(&STACK[0x7E0], 8) = 0;
  *(unsigned char *)(a1 + 672) = 1;
  *(void *)(a1 + 680) = 0xBFF0000000000000;
  *(_OWORD *)(a1 + 68_Block_object_dispose(&STACK[0x7E0], 8) = _Q0;
  *(_OWORD *)(a1 + 704) = _Q0;
  *(_OWORD *)(a1 + 720) = _Q0;
  *(_OWORD *)(a1 + 736) = _Q0;
  *(_OWORD *)(a1 + 752) = _Q0;
  *(_OWORD *)(a1 + 76_Block_object_dispose(&STACK[0x7E0], 8) = _Q0;
  *(void *)(a1 + 784) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 800) = 0xFFFF;
  *(void *)(a1 + 812) = 0;
  *(void *)(a1 + 804) = 0;
  *(_OWORD *)(a1 + 820) = xmmword_101D1C320;
  *(_OWORD *)(a1 + 836) = _Q0;
  *(_OWORD *)(a1 + 852) = _Q0;
  *(_OWORD *)(a1 + 86_Block_object_dispose(&STACK[0x7E0], 8) = _Q0;
  *(_DWORD *)(a1 + 884) = 0;
  *(void *)(a1 + 88_Block_object_dispose(&STACK[0x7E0], 8) = 0xBFF0000000000000;
  *(void *)(a1 + 904) = 0;
  *(void *)(a1 + 896) = 0;
  *(_DWORD *)(a1 + 912) = 0;
  *(void *)(a1 + 916) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 924) = 0x7FFFFFFF;
  *(unsigned char *)(a1 + 952) = 0;
  *(void *)(a1 + 936) = 0;
  *(void *)(a1 + 92_Block_object_dispose(&STACK[0x7E0], 8) = 0;
  *(void *)(a1 + 944) = 0;
  *(_DWORD *)(a1 + 956) = 0xFFFF;
  *(void *)(a1 + 96_Block_object_dispose(&STACK[0x7E0], 8) = 0;
  *(void *)(a1 + 960) = 0;
  *(_OWORD *)(a1 + 976) = xmmword_101D1C320;
  *(_OWORD *)(a1 + 992) = _Q0;
  *(_OWORD *)(a1 + 100_Block_object_dispose(&STACK[0x7E0], 8) = _Q0;
  *(_OWORD *)(a1 + 1024) = _Q0;
  *(_DWORD *)(a1 + 1040) = 0;
  *(void *)(a1 + 1044) = 0xBFF0000000000000;
  *(void *)(a1 + 1052) = 0;
  *(void *)(a1 + 1060) = 0;
  *(_DWORD *)(a1 + 106_Block_object_dispose(&STACK[0x7E0], 8) = 0;
  *(void *)(a1 + 1072) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 1080) = 0x7FFFFFFF;
  *(void *)(a1 + 1084) = 0;
  *(void *)(a1 + 1092) = 0;
  *(unsigned char *)(a1 + 110_Block_object_dispose(&STACK[0x7E0], 8) = 0;
  *(void *)(a1 + 1100) = 0;
  *(_DWORD *)(a1 + 1112) = 0xFFFF;
  *(void *)(a1 + 1124) = 0;
  *(void *)(a1 + 1116) = 0;
  *(_OWORD *)(a1 + 1132) = xmmword_101D1C320;
  *(_OWORD *)(a1 + 114_Block_object_dispose(&STACK[0x7E0], 8) = _Q0;
  *(_OWORD *)(a1 + 1164) = _Q0;
  *(_OWORD *)(a1 + 1180) = _Q0;
  *(_DWORD *)(a1 + 1196) = 0;
  *(void *)(a1 + 1200) = 0xBFF0000000000000;
  *(void *)(a1 + 1216) = 0;
  *(void *)(a1 + 120_Block_object_dispose(&STACK[0x7E0], 8) = 0;
  *(_DWORD *)(a1 + 1224) = 0;
  *(void *)(a1 + 122_Block_object_dispose(&STACK[0x7E0], 8) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 1236) = 0x7FFFFFFF;
  *(void *)(a1 + 124_Block_object_dispose(&STACK[0x7E0], 8) = 0;
  *(void *)(a1 + 1240) = 0;
  *(unsigned char *)(a1 + 1264) = 0;
  *(void *)(a1 + 1256) = 0;
  return a1;
}

void sub_10091F4C4(_Unwind_Exception *a1)
{
  sub_100488394(v1);
  _Unwind_Resume(a1);
}

void sub_10091F4D8(id a1)
{
  qword_1024195A8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Simulation");
}

uint64_t sub_10091F508(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  return a1;
}

uint64_t sub_10091F53C(uint64_t a1)
{
  *(void *)(a1 + 16) = 0;
  return a1;
}

void sub_10091F570(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)(a2 + 224);
  if (v3)
  {
    *(void *)(a2 + 232) = v3;
    operator delete(v3);
  }

  if (*(char *)(a2 + 215) < 0) {
    operator delete(*(void **)(a2 + 192));
  }
  if (*(char *)(a2 + 71) < 0) {
    operator delete(*(void **)(a2 + 48));
  }
  if (*(char *)(a2 + 47) < 0) {
    operator delete(*(void **)(a2 + 24));
  }
  if (*(char *)(a2 + 23) < 0)
  {
    uint64_t v4 = *(void **)a2;
    operator delete(v4);
  }
}

void sub_10091F604(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10091F604(a1, *a2);
    sub_10091F604(a1, a2[1]);
    sub_10091F660((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

uint64_t sub_10091F660(uint64_t a1)
{
  sub_10091F508(a1 + 248);
  char v2 = *(void **)(a1 + 224);
  if (v2)
  {
    *(void *)(a1 + 232) = v2;
    operator delete(v2);
  }

  if (*(char *)(a1 + 215) < 0) {
    operator delete(*(void **)(a1 + 192));
  }
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_10091F6E8(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10091F6E8(a1, *a2);
    sub_10091F6E8(a1, a2[1]);
    sub_10091F744((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

uint64_t sub_10091F744(uint64_t a1)
{
  sub_10091F53C(a1 + 248);
  char v2 = *(void **)(a1 + 224);
  if (v2)
  {
    *(void *)(a1 + 232) = v2;
    operator delete(v2);
  }

  if (*(char *)(a1 + 215) < 0) {
    operator delete(*(void **)(a1 + 192));
  }
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_10091F7CC()
{
}

void sub_10091F87C()
{
}

void sub_10091F8A0(void *a1, int *a2, void *a3)
{
  if (!*((unsigned char *)a1 + 108))
  {
    uint64_t v5 = a1 + 8;
    uint64_t v4 = a1[8];
    if (v4)
    {
      int v8 = *a2;
      int v9 = a1 + 8;
      do
      {
        int v10 = *(_DWORD *)(v4 + 32);
        BOOL v11 = v10 < v8;
        if (v10 >= v8) {
          int v12 = (uint64_t *)v4;
        }
        else {
          int v12 = (uint64_t *)(v4 + 8);
        }
        if (!v11) {
          int v9 = (void *)v4;
        }
        uint64_t v4 = *v12;
      }
      while (*v12);
      if (v9 != v5 && v8 >= *((_DWORD *)v9 + 8))
      {
        unint64_t v49 = v9;
        id v13 = sub_10091FF08(a3);
        (*(void (**)(void *, int *, id, void *))(*a1 + 184))(a1, a2, v13, v9 + 10);
        uint64_t v14 = (void *)v9[5];
        if (v14 != v9 + 6)
        {
          int v15 = a1 + 11;
          BOOL v16 = a1 + 1;
          do
          {
            uint64_t v17 = *v15;
            if (!*v15) {
              goto LABEL_25;
            }
            int v18 = *((_DWORD *)v14 + 8);
            long long v19 = a1 + 11;
            do
            {
              int v20 = *(_DWORD *)(v17 + 32);
              BOOL v21 = v20 < v18;
              if (v20 >= v18) {
                int v22 = (uint64_t *)v17;
              }
              else {
                int v22 = (uint64_t *)(v17 + 8);
              }
              if (!v21) {
                long long v19 = (uint64_t *)v17;
              }
              uint64_t v17 = *v22;
            }
            while (*v22);
            if (v19 != v15 && (int v23 = *((_DWORD *)v19 + 8), v18 >= v23))
            {
              int v48 = v19;
              sub_10091FC90(a1, (uint64_t)&v48, (uint64_t)&v49, a3);
              uint64_t v27 = a1[8];
              if (!v27) {
                return;
              }
              int v28 = *a2;
              long long v29 = v5;
              do
              {
                int v30 = *(_DWORD *)(v27 + 32);
                BOOL v31 = v30 < v28;
                if (v30 >= v28) {
                  uint64_t v32 = (uint64_t *)v27;
                }
                else {
                  uint64_t v32 = (uint64_t *)(v27 + 8);
                }
                if (!v31) {
                  long long v29 = (void *)v27;
                }
                uint64_t v27 = *v32;
              }
              while (*v32);
              if (v29 == v5 || v28 < *((_DWORD *)v29 + 8)) {
                return;
              }
              unint64_t v49 = v29;
              uint64_t v34 = v29[6];
              uint64_t v14 = v29 + 6;
              uint64_t v33 = v34;
              if (v34)
              {
                long long v35 = v14;
                uint64_t v36 = v33;
                do
                {
                  int v37 = *(_DWORD *)(v36 + 32);
                  BOOL v38 = v37 < v23;
                  if (v37 >= v23) {
                    long long v39 = (uint64_t *)v36;
                  }
                  else {
                    long long v39 = (uint64_t *)(v36 + 8);
                  }
                  if (!v38) {
                    long long v35 = (void *)v36;
                  }
                  uint64_t v36 = *v39;
                }
                while (*v39);
                if (v35 == v14 || v23 < *((_DWORD *)v35 + 8))
                {
                  do
                  {
                    int v40 = *(_DWORD *)(v33 + 32);
                    BOOL v41 = v23 < v40;
                    if (v23 >= v40) {
                      uint64_t v42 = (uint64_t *)(v33 + 8);
                    }
                    else {
                      uint64_t v42 = (uint64_t *)v33;
                    }
                    if (v41) {
                      uint64_t v14 = (void *)v33;
                    }
                    uint64_t v33 = *v42;
                  }
                  while (*v42);
                }
                else
                {
                  uint64_t v43 = (void *)v35[1];
                  if (v43)
                  {
                    do
                    {
                      uint64_t v14 = v43;
                      uint64_t v43 = (void *)*v43;
                    }
                    while (v43);
                  }
                  else
                  {
                    do
                    {
                      uint64_t v14 = (void *)v35[2];
                      BOOL v44 = *v14 == (void)v35;
                      long long v35 = v14;
                    }
                    while (!v44);
                  }
                }
              }
            }
            else
            {
LABEL_25:
              int v48 = a1 + 11;
              if (qword_102419580 != -1) {
                dispatch_once(&qword_102419580, &stru_1022D3B98);
              }
              long long v24 = qword_102419588;
              if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_FAULT))
              {
                __int16 v25 = a1 + 1;
                if (*((char *)a1 + 31) < 0) {
                  __int16 v25 = (void *)*v16;
                }
                int v26 = *((_DWORD *)v14 + 8);
                *(_DWORD *)std::string buf = 136446466;
                uint64_t v55 = v25;
                __int16 v56 = 1026;
                int v57 = v26;
                _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_FAULT, "%{public}s; unknown client %{public}d",
                  buf,
                  0x12u);
              }
              if (sub_10013D1A0(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_102419580 != -1) {
                  dispatch_once(&qword_102419580, &stru_1022D3B98);
                }
                long long v45 = a1 + 1;
                if (*((char *)a1 + 31) < 0) {
                  long long v45 = (void *)*v16;
                }
                int v46 = *((_DWORD *)v14 + 8);
                int v50 = 136446466;
                uint64_t v51 = v45;
                __int16 v52 = 1026;
                int v53 = v46;
                long long v47 = (char *)_os_log_send_and_compose_impl();
                sub_1004BA5E4("Generic", 1, 0, 0, "void CLNotifier<CLFenceManager_Type::Notification, CLFenceManager_Type::NotificationData, char, std::string>::invokeClientsWithData(const Notification_T &, CLCppContainer *) [Notification_T = CLFenceManager_Type::Notification, NotificationData_T = CLFenceManager_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = std::string]", "%s\n", v47);
                if (v47 != (char *)buf) {
                  free(v47);
                }
              }
            }
          }
          while (v14 != v49 + 6);
        }
      }
    }
  }
}

unsigned char *sub_10091FC90(unsigned char *result, uint64_t a2, uint64_t a3, void *a4)
{
  if (!result[108])
  {
    uint64_t v7 = result;
    uint64_t v8 = *(unsigned int *)(*(void *)a2 + 32);
    LODWORD(v13) = *(_DWORD *)(*(void *)a3 + 32);
    id v9 = sub_10091FF08(a4);
    uint64_t v10 = *(void *)a3 + 80;
    BOOL v11 = (uint64_t **)(*(void *)a3 + 40);
    uint64_t v14 = (int *)(*(void *)a2 + 32);
    int v12 = sub_1000EAEE4(v11, v14, (uint64_t)&unk_101D0B290, &v14);
    id result = (unsigned char *)(*(uint64_t (**)(unsigned char *, uint64_t, uint64_t *, id, uint64_t, uint64_t **))(*(void *)v7 + 192))(v7, v8, &v13, v9, v10, v12 + 5);
    if (result) {
      return [*(id *)(*(void *)a2 + 64) onNotification:*(unsigned int *)(*(void *)a3 + 32) withData:a4, v13];
    }
  }
  return result;
}

uint64_t sub_10091FD88@<X0>(long long *a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = (char *)operator new(0x660uLL);
  uint64_t result = sub_10091FDE4((uint64_t)v4, a1);
  *a2 = v4 + 24;
  a2[1] = v4;
  return result;
}

void sub_10091FDD0(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10091FDE4(uint64_t a1, long long *a2)
{
  *(void *)(a1 + _Block_object_dispose(&STACK[0x7E0], 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = off_1022D3CE8;
  sub_10089FBB8((char *)(a1 + 24), a2);
  return a1;
}

void sub_10091FE2C(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_10091FE40(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1022D3CE8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10091FE60(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1022D3CE8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_10091FEB4(uint64_t a1)
{
  return sub_1001111C8(a1 + 24);
}

uint64_t sub_10091FEC0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result)
  {
    sub_1001111C8(result);
    operator delete();
  }
  return result;
}

id sub_10091FF08(void *a1)
{
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    return 0;
  }

  return sub_10091FF68(a1);
}

id sub_10091FF68(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (v2)
  {
    if (getenv("_INTERSILO_UNIT_TEST"))
    {
      if (qword_102418F90 != -1) {
        dispatch_once(&qword_102418F90, &stru_1022D3D28);
      }
      int v3 = qword_102418F98;
      if (os_log_type_enabled((os_log_t)qword_102418F98, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)std::string buf = 134218498;
        id v8 = v2;
        __int16 v9 = 2048;
        uint64_t v10 = 0;
        __int16 v11 = 2080;
        unint64_t v12 = 0x8000000101D53040 & 0x7FFFFFFFFFFFFFFFLL;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly", buf, 0x20u);
      }
      if (!sub_10013D1A0(115, 0)) {
        return 0;
      }
      bzero(buf, 0x65CuLL);
      if (qword_102418F90 == -1)
      {
LABEL_20:
        int v6 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLFenceManager_Type::NotificationData, Callback = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:228:46)]", "%s\n", v6);
        if (v6 != (char *)buf) {
          free(v6);
        }
        return 0;
      }
    }
    else
    {
      if (qword_102418F90 != -1) {
        dispatch_once(&qword_102418F90, &stru_1022D3D28);
      }
      uint64_t v5 = qword_102418F98;
      if (os_log_type_enabled((os_log_t)qword_102418F98, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)std::string buf = 134218498;
        id v8 = v2;
        __int16 v9 = 2048;
        uint64_t v10 = 0;
        __int16 v11 = 2080;
        unint64_t v12 = 0x8000000101D53040 & 0x7FFFFFFFFFFFFFFFLL;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly", buf, 0x20u);
      }
      if (!sub_10013D1A0(115, 0)) {
        return 0;
      }
      bzero(buf, 0x65CuLL);
      if (qword_102418F90 == -1) {
        goto LABEL_20;
      }
    }
    dispatch_once(&qword_102418F90, &stru_1022D3D28);
    goto LABEL_20;
  }

  return [a1 cppObjectPtr];
}

void sub_100920328(id a1)
{
  qword_102418F98 = (uint64_t)os_log_create("com.apple.locationd.Support", "Support");
}

char *sub_100920358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(void *)(a2 + _Block_object_dispose(&STACK[0x7E0], 8) = 0;
  *(void *)(a2 + 16) = 0;
  return sub_1009203E4((char *)a2, *(long long **)(a1 + 32), *(long long **)(a1 + 40), 0xEF7BDEF7BDEF7BDFLL * ((uint64_t)(*(void *)(a1 + 40) - *(void *)(a1 + 32)) >> 3));
}

char *sub_100920388(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  uint64_t v2 = a1 + 32;
  *(void *)(v2 + 16) = 0;
  return sub_1009203E4((char *)v2, *(long long **)(a2 + 32), *(long long **)(a2 + 40), 0xEF7BDEF7BDEF7BDFLL * ((uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 3));
}

void sub_1009203B8(uint64_t a1)
{
  uint64_t v1 = (void **)(a1 + 32);
  sub_10008DF5C(&v1);
}

char *sub_1009203E4(char *result, long long *a2, long long *a3, unint64_t a4)
{
  if (a4)
  {
    int v6 = result;
    sub_10092046C(result, a4);
    uint64_t result = sub_100920510((uint64_t)(v6 + 16), a2, a3, *((char **)v6 + 1));
    *((void *)v6 + 1) = result;
  }
  return result;
}

void sub_10092044C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + _Block_object_dispose(&STACK[0x7E0], 8) = v10;
  sub_10008DF5C(&a9);
  _Unwind_Resume(a1);
}

char *sub_10092046C(void *a1, unint64_t a2)
{
  if (a2 >= 0x108421084210843) {
    sub_1001D7FD4();
  }
  uint64_t result = (char *)sub_1009204C4((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[248 * v4];
  return result;
}

void *sub_1009204C4(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x108421084210843) {
    sub_1001D7FA0();
  }
  return operator new(248 * a2);
}

char *sub_100920510(uint64_t a1, long long *a2, long long *a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v10 = __dst;
  __int16 v11 = __dst;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  char v9 = 0;
  if (a2 != a3)
  {
    int v6 = a2;
    do
    {
      sub_10048AEC0(v4, v6);
      int v6 = (long long *)((char *)v6 + 248);
      uint64_t v4 = v11 + 248;
      v11 += 248;
    }
    while (v6 != a3);
  }
  char v9 = 1;
  sub_1009205B4((uint64_t)v8);
  return v4;
}

void sub_1009205A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1009205B4(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_1009205EC((uint64_t *)a1);
  }
  return a1;
}

void sub_1009205EC(uint64_t *a1)
{
  uint64_t v2 = (uint64_t *)a1[1];
  uint64_t v1 = (uint64_t *)a1[2];
  uint64_t v3 = *v1;
  uint64_t v4 = *v2;
  if (*v1 != *v2)
  {
    uint64_t v5 = *a1;
    do
    {
      v3 -= 248;
      sub_10091F570(v5, v3);
    }
    while (v3 != v4);
  }
}

uint64_t *sub_100920640(uint64_t **a1, unsigned __int8 *a2, uint64_t a3, long long **a4)
{
  int v6 = (uint64_t **)sub_1009206EC((uint64_t)a1, &v11, a2);
  uint64_t v7 = *v6;
  if (!*v6)
  {
    id v8 = v6;
    sub_100920780((uint64_t)a1, a4, (uint64_t)v10);
    sub_1000EDF90(a1, v11, v8, v10[0]);
    uint64_t v7 = v10[0];
    v10[0] = 0;
    sub_100920910((uint64_t)v10, 0);
  }
  return v7;
}

void *sub_1009206EC(uint64_t a1, void *a2, unsigned __int8 *a3)
{
  uint64_t v5 = (void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        uint64_t v7 = (void *)v4;
        id v8 = (unsigned __int8 *)(v4 + 32);
        if (!sub_10001A540(a3, (unsigned __int8 *)(v4 + 32))) {
          break;
        }
        uint64_t v4 = *v7;
        uint64_t v5 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }
      if (!sub_10001A540(v8, a3)) {
        break;
      }
      uint64_t v5 = v7 + 1;
      uint64_t v4 = v7[1];
    }
    while (v4);
  }
  else
  {
    uint64_t v7 = (void *)(a1 + 8);
  }
LABEL_9:
  *a2 = v7;
  return v5;
}

char *sub_100920780@<X0>(uint64_t a1@<X0>, long long **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  int v6 = (char *)operator new(0x1D8uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + _Block_object_dispose(&STACK[0x7E0], 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  id v8 = *a2;
  uint64_t result = sub_100920800(v6 + 32, &v8);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_1009207E8(_Unwind_Exception *a1)
{
  sub_100920910(v1, 0);
  _Unwind_Resume(a1);
}

char *sub_100920800(char *a1, long long **a2)
{
  uint64_t v3 = sub_10048AEC0(a1, *a2);
  sub_100920864((uint64_t)(v3 + 248));
  return a1;
}

void sub_100920834(_Unwind_Exception *a1)
{
  uint64_t v3 = *(void **)(v1 + 224);
  if (v3)
  {
    *(void *)(v1 + 232) = v3;
    operator delete(v3);
  }

  sub_101A74210();
  _Unwind_Resume(a1);
}

uint64_t sub_100920864(uint64_t a1)
{
  *(_DWORD *)a1 = -1;
  *(void *)(a1 + _Block_object_dispose(&STACK[0x7E0], 8) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 16) = 8;
  *(void *)(a1 + 24) = [[CLOSTransaction alloc] initWithDescription:"Pending geofence notification"];
  *(_DWORD *)(a1 + 32) = 0xFFFF;
  *(void *)(a1 + 44) = 0;
  *(void *)(a1 + 36) = 0;
  *(_OWORD *)(a1 + 52) = xmmword_101D1C320;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a1 + 6_Block_object_dispose(&STACK[0x7E0], 8) = _Q0;
  *(_OWORD *)(a1 + 84) = _Q0;
  *(_OWORD *)(a1 + 100) = _Q0;
  *(_DWORD *)(a1 + 116) = 0;
  *(void *)(a1 + 12_Block_object_dispose(&STACK[0x7E0], 8) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 120) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 144) = 0;
  *(void *)(a1 + 14_Block_object_dispose(&STACK[0x7E0], 8) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 156) = 0x7FFFFFFF;
  *(void *)(a1 + 16_Block_object_dispose(&STACK[0x7E0], 8) = 0;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 160) = 0;
  *(unsigned char *)(a1 + 184) = 0;
  return a1;
}

void sub_100920910(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_10091F660((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

uint64_t *sub_100920968(uint64_t **a1, unsigned __int8 *a2, uint64_t a3, long long **a4)
{
  int v6 = (uint64_t **)sub_1009206EC((uint64_t)a1, &v11, a2);
  uint64_t v7 = *v6;
  if (!*v6)
  {
    id v8 = v6;
    sub_100920A14((uint64_t)a1, a4, (uint64_t)v10);
    sub_1000EDF90(a1, v11, v8, v10[0]);
    uint64_t v7 = v10[0];
    v10[0] = 0;
    sub_100920910((uint64_t)v10, 0);
  }
  return v7;
}

uint64_t sub_100920A14@<X0>(uint64_t a1@<X0>, long long **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  int v6 = operator new(0x138uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + _Block_object_dispose(&STACK[0x7E0], 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  id v8 = *a2;
  uint64_t result = sub_100920A94((uint64_t)v6 + 32, &v8);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_100920A7C(_Unwind_Exception *a1)
{
  sub_100920910(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_100920A94(uint64_t a1, long long **a2)
{
  uint64_t v3 = sub_10048AEC0((char *)a1, *a2);
  *((_DWORD *)v3 + 62) = -1;
  *((void *)v3 + 32) = 0xBFF0000000000000;
  *((_DWORD *)v3 + 66) = 8;
  *(void *)(a1 + 272) = [[CLOSTransaction alloc] initWithDescription:"Pending geofence notification"];
  return a1;
}

void sub_100920AF4(_Unwind_Exception *a1)
{
  uint64_t v3 = *(void **)(v1 + 224);
  if (v3)
  {
    *(void *)(v1 + 232) = v3;
    operator delete(v3);
  }

  sub_101A74210();
  _Unwind_Resume(a1);
}

uint64_t *sub_100920B24(uint64_t **a1, unsigned __int8 *a2, uint64_t a3, long long **a4)
{
  int v6 = (uint64_t **)sub_1009206EC((uint64_t)a1, &v11, a2);
  uint64_t v7 = *v6;
  if (!*v6)
  {
    id v8 = v6;
    sub_100920BD0((uint64_t)a1, a4, (uint64_t)v10);
    sub_1000EDF90(a1, v11, v8, v10[0]);
    uint64_t v7 = v10[0];
    v10[0] = 0;
    sub_100920CD8((uint64_t)v10, 0);
  }
  return v7;
}

uint64_t sub_100920BD0@<X0>(uint64_t a1@<X0>, long long **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  int v6 = operator new(0x130uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + _Block_object_dispose(&STACK[0x7E0], 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  id v8 = *a2;
  uint64_t result = sub_100920C50((uint64_t)v6 + 32, &v8);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_100920C38(_Unwind_Exception *a1)
{
  sub_100920CD8(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_100920C50(uint64_t a1, long long **a2)
{
  uint64_t v3 = sub_10048AEC0((char *)a1, *a2);
  *((void *)v3 + 31) = 0xBFF0000000000000;
  *((_DWORD *)v3 + 64) = 4;
  *(void *)(a1 + 264) = [[CLOSTransaction alloc] initWithDescription:"Pending geofence failure notification"];
  return a1;
}

void sub_100920CA8(_Unwind_Exception *a1)
{
  uint64_t v3 = *(void **)(v1 + 224);
  if (v3)
  {
    *(void *)(v1 + 232) = v3;
    operator delete(v3);
  }

  sub_101A74210();
  _Unwind_Resume(a1);
}

void sub_100920CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_10091F744((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

void sub_100920D30()
{
}

void sub_100920DE0()
{
}

uint64_t sub_100920E04(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result)
  {
    sub_1001111C8(result);
    operator delete();
  }
  return result;
}

uint64_t *sub_100920E4C(uint64_t **a1, const void **a2, uint64_t a3, long long **a4)
{
  int v6 = (uint64_t **)sub_1001070AC((uint64_t)a1, &v9, a2);
  uint64_t result = *v6;
  if (!*v6)
  {
    sub_100920EE4((uint64_t)a1, a4, (uint64_t)&v8);
    sub_1000EDF90(a1, v9, v6, v8);
    return v8;
  }
  return result;
}

void *sub_100920EE4@<X0>(uint64_t a1@<X0>, long long **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  int v6 = operator new(0x58uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + _Block_object_dispose(&STACK[0x7E0], 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = sub_100920F68(v6 + 4, *a2);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_100920F4C(_Unwind_Exception *a1)
{
  void *v1 = 0;
  sub_1001F7F34(v3, v2);
  _Unwind_Resume(a1);
}

void *sub_100920F68(void *__dst, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000DC48C(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v3 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)long long __dst = v3;
  }
  sub_1004749D0((uint64_t)(__dst + 3), 40, 1, 360.0);
  return __dst;
}

void sub_100920FD0(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100920FEC(uint64_t *a1, long long *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xEF7BDEF7BDEF7BDFLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0x108421084210842) {
    sub_1001D7FD4();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xEF7BDEF7BDEF7BDFLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x84210842108421) {
    unint64_t v9 = 0x108421084210842;
  }
  else {
    unint64_t v9 = v5;
  }
  uint64_t v17 = a1 + 2;
  if (v9) {
    uint64_t v10 = (char *)sub_1009204C4(v7, v9);
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t v13 = v10;
  uint64_t v14 = &v10[248 * v4];
  BOOL v16 = &v10[248 * v9];
  sub_10048AEC0(v14, a2);
  int v15 = v14 + 248;
  sub_10092110C(a1, &v13);
  uint64_t v11 = a1[1];
  sub_1009212CC(&v13);
  return v11;
}

void sub_1009210F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1009212CC((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10092110C(uint64_t *a1, void *a2)
{
  uint64_t result = sub_100921184((uint64_t)(a1 + 2), a1[1], (long long *)a1[1], *a1, (long long *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_100921184(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, long long *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  char v13 = 0;
  if (a3 == a5)
  {
    uint64_t v10 = a6;
  }
  else
  {
    unint64_t v9 = a3;
    do
    {
      unint64_t v9 = (long long *)((char *)v9 - 248);
      sub_10048AEC0((char *)(v7 - 248), v9);
      uint64_t v7 = *((void *)&v15 + 1) - 248;
      *((void *)&v15 + 1) -= 248;
    }
    while (v9 != a5);
    uint64_t v10 = v15;
  }
  char v13 = 1;
  sub_100921240((uint64_t)v12);
  return v10;
}

void sub_10092122C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100921240(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_100921278((uint64_t *)a1);
  }
  return a1;
}

void sub_100921278(uint64_t *a1)
{
  uint64_t v1 = *(void *)(a1[2] + 8);
  uint64_t v2 = *(void *)(a1[1] + 8);
  if (v1 != v2)
  {
    uint64_t v3 = *a1;
    do
    {
      sub_10091F570(v3, v1);
      v1 += 248;
    }
    while (v1 != v2);
  }
}

void **sub_1009212CC(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void sub_100921300(void *a1)
{
  uint64_t v2 = a1[1];
  for (uint64_t i = a1[2]; i != v2; uint64_t i = a1[2])
  {
    uint64_t v4 = a1[4];
    a1[2] = i - 248;
    sub_10091F570(v4, i - 248);
  }
}

uint64_t sub_100921348(uint64_t a1, uint64_t a2)
{
  std::string::operator=((std::string *)a1, (const std::string *)a2);
  std::string::operator=((std::string *)(a1 + 24), (const std::string *)(a2 + 24));
  std::string::operator=((std::string *)(a1 + 48), (const std::string *)(a2 + 48));
  long long v4 = *(_OWORD *)(a2 + 88);
  long long v5 = *(_OWORD *)(a2 + 104);
  long long v6 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 120) = v6;
  *(_OWORD *)(a1 + 104) = v5;
  *(_OWORD *)(a1 + 8_Block_object_dispose(&STACK[0x7E0], 8) = v4;
  long long v7 = *(_OWORD *)(a2 + 152);
  long long v8 = *(_OWORD *)(a2 + 168);
  uint64_t v9 = *(void *)(a2 + 181);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 181) = v9;
  *(_OWORD *)(a1 + 16_Block_object_dispose(&STACK[0x7E0], 8) = v8;
  *(_OWORD *)(a1 + 152) = v7;
  std::string::operator=((std::string *)(a1 + 192), (const std::string *)(a2 + 192));
  uint64_t v10 = *(void **)(a1 + 216);
  *(void *)(a1 + 216) = *(id *)(a2 + 216);

  if (a1 != a2) {
    sub_10027C3B4((char *)(a1 + 224), *(char **)(a2 + 224), *(void *)(a2 + 232), (uint64_t)(*(void *)(a2 + 232) - *(void *)(a2 + 224)) >> 4);
  }
  std::string::operator=((std::string *)(a1 + 248), (const std::string *)(a2 + 248));
  std::string::operator=((std::string *)(a1 + 272), (const std::string *)(a2 + 272));
  std::string::operator=((std::string *)(a1 + 296), (const std::string *)(a2 + 296));
  long long v11 = *(_OWORD *)(a2 + 368);
  long long v13 = *(_OWORD *)(a2 + 320);
  long long v12 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 36_Block_object_dispose(&STACK[0x7E0], 8) = v11;
  *(_OWORD *)(a1 + 320) = v13;
  *(_OWORD *)(a1 + 336) = v12;
  long long v15 = *(_OWORD *)(a2 + 400);
  long long v14 = *(_OWORD *)(a2 + 416);
  long long v16 = *(_OWORD *)(a2 + 384);
  *(void *)(a1 + 429) = *(void *)(a2 + 429);
  *(_OWORD *)(a1 + 400) = v15;
  *(_OWORD *)(a1 + 416) = v14;
  *(_OWORD *)(a1 + 384) = v16;
  std::string::operator=((std::string *)(a1 + 440), (const std::string *)(a2 + 440));
  uint64_t v17 = *(void **)(a1 + 464);
  *(void *)(a1 + 464) = *(id *)(a2 + 464);

  if (a1 != a2) {
    sub_10027C3B4((char *)(a1 + 472), *(char **)(a2 + 472), *(void *)(a2 + 480), (uint64_t)(*(void *)(a2 + 480) - *(void *)(a2 + 472)) >> 4);
  }
  memcpy((void *)(a1 + 496), (const void *)(a2 + 496), 0x458uLL);
  return a1;
}

BOOL sub_1009214BC()
{
  uint64_t v1 = qword_1024193C8;
  return os_log_type_enabled(v1, OS_LOG_TYPE_FAULT);
}

void sub_1009214DC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241AD20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10241AD20))
  {
    qword_10241AD08 = 0;
    qword_10241AD10 = 0;
    qword_10241AD18 = 0;
    __cxa_atexit((void (*)(void *))sub_1003BE920, &qword_10241AD08, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10241AD20);
  }
}

void sub_10092155C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241ADD0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10241ADD0))
  {
    std::__shared_mutex_base::__shared_mutex_base(&stru_10241AD28);
    __cxa_atexit((void (*)(void *))sub_1003BE954, &stru_10241AD28, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10241ADD0);
  }
}

void sub_1009215EC(_Unwind_Exception *a1)
{
}

void sub_100921604()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241ADF0, memory_order_acquire) & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_10241ADF0))
    {
      uint64_t v1 = 0x7FFFFFFF00000000;
      v0[2] = xmmword_101D52E10;
      v0[3] = unk_101D52E20;
      v0[4] = xmmword_101D52E30;
      v0[0] = xmmword_101D52DF0;
      v0[1] = unk_101D52E00;
      sub_1003BFBA4((uint64_t)&unk_10241ADD8, (int *)v0, 11);
      __cxa_atexit((void (*)(void *))sub_1003BE998, &unk_10241ADD8, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_10241ADF0);
    }
  }
}

void sub_1009216E4(_Unwind_Exception *a1)
{
}

double sub_100921700(uint64_t a1)
{
  uint64_t v1 = sub_1005B1BA4(a1, 3600);
  *(void *)uint64_t v1 = off_1022D3E00;
  double result = 0.0;
  *(_OWORD *)(v1 + 36) = 0u;
  *(_OWORD *)(v1 + 52) = 0u;
  *(_DWORD *)(v1 + 6_Block_object_dispose(&STACK[0x7E0], 8) = 0;
  return result;
}

uint64_t sub_100921748(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) += a2;
  ++*(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_100921764(uint64_t result, int a2)
{
  *(_DWORD *)(result + 44) += a2;
  ++*(_DWORD *)(result + 56);
  return result;
}

uint64_t sub_100921780(uint64_t result, int a2)
{
  *(_DWORD *)(result + 48) += a2;
  ++*(_DWORD *)(result + 60);
  return result;
}

uint64_t sub_10092179C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 64) = a2;
  return result;
}

uint64_t sub_1009217A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 6_Block_object_dispose(&STACK[0x7E0], 8) = a2;
  return result;
}

uint64_t sub_1009217AC(uint64_t result)
{
  return result;
}

void sub_1009217BC(_DWORD *a1)
{
  if (qword_1024193A0 != -1) {
    dispatch_once(&qword_1024193A0, &stru_1022D3E38);
  }
  uint64_t v2 = qword_1024193A8;
  if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEBUG))
  {
    int v4 = a1[16];
    int v3 = a1[17];
    *(_DWORD *)std::string buf = 67240448;
    int v18 = v3;
    __int16 v19 = 1026;
    int v20 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "@Wsb, WifiManager AP cache cnt, %{public}d, Aonsensed AP cache cnt, %{public}d", buf, 0xEu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022D3E38);
    }
    long long v14 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLWsbScanComparatorMetrics::logMetricData()", "%s\n", v14);
    if (v14 != (char *)buf) {
      free(v14);
    }
  }
  if (qword_1024193A0 != -1) {
    dispatch_once(&qword_1024193A0, &stru_1022D3E38);
  }
  long long v5 = qword_1024193A8;
  if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEBUG))
  {
    int v6 = a1[11];
    int v7 = a1[12];
    int v9 = a1[9];
    int v8 = a1[10];
    *(_DWORD *)std::string buf = 67240960;
    int v18 = v6;
    __int16 v19 = 1026;
    int v20 = v8;
    __int16 v21 = 1026;
    int v22 = v7;
    __int16 v23 = 1026;
    int v24 = v9;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "@Wsb, WifiManager AP total cnt, %{public}d, Aonsensed AP total cnt, %{public}d, NotificationScan AP total cnt, %{public}d, matched WSB AP cnt, %{public}d", buf, 0x1Au);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022D3E38);
    }
    long long v15 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLWsbScanComparatorMetrics::logMetricData()", "%s\n", v15);
    if (v15 != (char *)buf) {
      free(v15);
    }
  }
  if (qword_1024193A0 != -1) {
    dispatch_once(&qword_1024193A0, &stru_1022D3E38);
  }
  uint64_t v10 = qword_1024193A8;
  if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEBUG))
  {
    int v12 = a1[14];
    int v11 = a1[15];
    int v13 = a1[13];
    *(_DWORD *)std::string buf = 67240704;
    int v18 = v12;
    __int16 v19 = 1026;
    int v20 = v11;
    __int16 v21 = 1026;
    int v22 = v13;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "@Wsb, WifiManager WSB notifications, %{public}d, scan notifications, %{public}d, Aonsensed notifications, %{public}d", buf, 0x14u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022D3E38);
    }
    long long v16 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLWsbScanComparatorMetrics::logMetricData()", "%s\n", v16);
    if (v16 != (char *)buf) {
      free(v16);
    }
  }
}

double sub_100921C88(uint64_t a1)
{
  *(_DWORD *)(a1 + 6_Block_object_dispose(&STACK[0x7E0], 8) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 52) = 0u;
  *(_OWORD *)(a1 + ++*(_DWORD *)(result + 36) = 0u;
  return result;
}

uint64_t sub_100921C9C(unsigned int *a1)
{
  v8[0] = @"numScannedApsFromAonsensed";
  v9[0] = +[NSNumber numberWithInt:a1[10]];
  v8[1] = @"numScannedApsFromWifiManager";
  v9[1] = +[NSNumber numberWithInt:a1[11]];
  v8[2] = @"numScannedApsFromNotificationScan";
  v9[2] = +[NSNumber numberWithInt:a1[12]];
  void v8[3] = @"numNotificationScanCachesFromAonsensed";
  void v9[3] = +[NSNumber numberWithInt:a1[13]];
  v8[4] = @"numNotificationScanCachesFromWifiManager";
  v9[4] = +[NSNumber numberWithInt:a1[14]];
  v8[5] = @"numNotificationScans";
  v9[5] = +[NSNumber numberWithInt:a1[15]];
  v8[6] = @"numMatchedApsBetweenAonsensedAndWifiManager";
  v9[6] = +[NSNumber numberWithInt:a1[9]];
  v8[7] = @"numCachedApsFromAonsensed";
  v9[7] = +[NSNumber numberWithInt:a1[16]];
  v8[8] = @"numCachedApsFromWifiManager";
  v9[8] = +[NSNumber numberWithInt:a1[17]];
  uint64_t v2 = +[NSDictionary dictionaryWithObjects:v9 forKeys:v8 count:9];
  if (qword_1024193A0 != -1) {
    dispatch_once(&qword_1024193A0, &stru_1022D3E38);
  }
  int v3 = qword_1024193A8;
  if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::string buf = 138477827;
    int v7 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "@Wsb, submitting CoreAnalytics event for WSB scan comparisons, %{private}@", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022D3E38);
    }
    long long v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLWsbScanComparatorMetrics::sendCoreAnalyticsEvent()", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
  return AnalyticsSendEventLazy();
}

uint64_t sub_100921FBC(uint64_t a1)
{
  return *(void *)(a1 + 32);
}

void sub_100921FC4()
{
}

void sub_100921FD8(id a1)
{
  qword_1024193A8 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

void sub_100922BC0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)&STACK[0x278]);
  _Unwind_Resume(a1);
}

uint64_t sub_100922BF8()
{
  sub_10010F274((uint64_t)v25);
  uint64_t v0 = sub_100132EFC(v26, (uint64_t)"nominal,", 8);
  sub_10046AD0C();
  if ((v24 & 0x80u) == 0) {
    uint64_t v1 = v23;
  }
  else {
    uint64_t v1 = (void **)v23[0];
  }
  if ((v24 & 0x80u) == 0) {
    uint64_t v2 = v24;
  }
  else {
    uint64_t v2 = (uint64_t)v23[1];
  }
  int v3 = sub_100132EFC(v0, (uint64_t)v1, v2);
  int v4 = sub_100132EFC(v3, (uint64_t)",cellular,", 10);
  sub_100924720();
  if ((v22 & 0x80u) == 0) {
    long long v5 = v21;
  }
  else {
    long long v5 = (void **)v21[0];
  }
  if ((v22 & 0x80u) == 0) {
    uint64_t v6 = v22;
  }
  else {
    uint64_t v6 = (uint64_t)v21[1];
  }
  int v7 = sub_100132EFC(v4, (uint64_t)v5, v6);
  int v8 = sub_100132EFC(v7, (uint64_t)",thermal,", 9);
  sub_1004693B8();
  if ((v20 & 0x80u) == 0) {
    int v9 = v19;
  }
  else {
    int v9 = (void **)v19[0];
  }
  if ((v20 & 0x80u) == 0) {
    uint64_t v10 = v20;
  }
  else {
    uint64_t v10 = (uint64_t)v19[1];
  }
  int v11 = sub_100132EFC(v8, (uint64_t)v9, v10);
  int v12 = sub_100132EFC(v11, (uint64_t)",peakPower,", 11);
  sub_1004693B8();
  if ((v18 & 0x80u) == 0) {
    int v13 = __p;
  }
  else {
    int v13 = (void **)__p[0];
  }
  if ((v18 & 0x80u) == 0) {
    uint64_t v14 = v18;
  }
  else {
    uint64_t v14 = (uint64_t)__p[1];
  }
  sub_100132EFC(v12, (uint64_t)v13, v14);
  if ((char)v18 < 0) {
    operator delete(__p[0]);
  }
  if ((char)v20 < 0) {
    operator delete(v19[0]);
  }
  if ((char)v22 < 0) {
    operator delete(v21[0]);
  }
  if ((char)v24 < 0) {
    operator delete(v23[0]);
  }
  std::stringbuf::str();
  *(void *)((char *)v25
  v26[0] = v15;
  if (v27 < 0) {
    operator delete((void *)v26[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return std::ios::~ios();
}

void sub_100922EB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,char a34)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  if (a33 < 0) {
    operator delete(a28);
  }
  sub_101A129A8((uint64_t)&a34);
  _Unwind_Resume(a1);
}

void sub_100922F38(uint64_t a1, uint64_t a2)
{
  id Weak = objc_loadWeak((id *)(a1 + 32));
  if (Weak)
  {
    if (a2)
    {
      _[Weak processIncomingMitigation:a2];
    }
    else
    {
      if (qword_1024193E0 != -1) {
        dispatch_once(&qword_1024193E0, &stru_1022D3E80);
      }
      int v4 = qword_1024193E8;
      if (os_log_type_enabled((os_log_t)qword_1024193E8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)std::string buf = 136446210;
        int v7 = "-[CLEEDCoexMonitor initWithUniverse:initialMitigation:mitigationConfig:activeSim:Rat:wifiEmergency:cachedCo"
             "exMetricData:mitigationCB:coexMetricUpdateCB:]_block_invoke";
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#EED2CXMN,%{public}s mitigation nil", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193E0 != -1) {
          dispatch_once(&qword_1024193E0, &stru_1022D3E80);
        }
        long long v5 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "-[CLEEDCoexMonitor initWithUniverse:initialMitigation:mitigationConfig:activeSim:Rat:wifiEmergency:cachedCoexMetricData:mitigationCB:coexMetricUpdateCB:]_block_invoke", "%s\n", v5);
        if (v5 != (char *)buf) {
          free(v5);
        }
      }
    }
  }
}

void sub_100923138(uint64_t a1)
{
  id Weak = objc_loadWeak((id *)(a1 + 32));
  if (Weak)
  {
    uint64_t v2 = Weak;
    if ([Weak createCoexMetricDictForCASubmission:0])
    {
      int v3 = (void (*)(void))*((void *)[v2 fCoexMetricUpdateCallback] + 2);
      v3();
    }
    else
    {
      if (qword_1024193E0 != -1) {
        dispatch_once(&qword_1024193E0, &stru_1022D3E80);
      }
      int v4 = qword_1024193E8;
      if (os_log_type_enabled((os_log_t)qword_1024193E8, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)std::string buf = 136446210;
        int v7 = "-[CLEEDCoexMonitor initWithUniverse:initialMitigation:mitigationConfig:activeSim:Rat:wifiEmergency:cachedCo"
             "exMetricData:mitigationCB:coexMetricUpdateCB:]_block_invoke_2";
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "#EED2CXMN,%{public}s, coexMetricDict nil", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193E0 != -1) {
          dispatch_once(&qword_1024193E0, &stru_1022D3E80);
        }
        long long v5 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "-[CLEEDCoexMonitor initWithUniverse:initialMitigation:mitigationConfig:activeSim:Rat:wifiEmergency:cachedCoexMetricData:mitigationCB:coexMetricUpdateCB:]_block_invoke", "%s\n", v5);
        if (v5 != (char *)buf) {
          free(v5);
        }
      }
    }
  }
}

uint64_t sub_1009246B0(uint64_t a1)
{
  return *(void *)(a1 + 32);
}

void sub_1009246F0(id a1)
{
  qword_1024193E8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Emergency");
}

uint64_t sub_100924720()
{
  sub_10010F274((uint64_t)v12);
  sub_100132EFC(v13, (uint64_t)"enabled,", 8);
  uint64_t v0 = (void *)std::ostream::operator<<();
  sub_100132EFC(v0, (uint64_t)",rsrpThresholddBm,", 18);
  uint64_t v1 = (void *)std::ostream::operator<<();
  sub_100132EFC(v1, (uint64_t)",rsrpQueryRateSecs,", 19);
  uint64_t v2 = (void *)std::ostream::operator<<();
  sub_100132EFC(v2, (uint64_t)",rsrpSamplesToAvg,", 18);
  int v3 = (void *)std::ostream::operator<<();
  sub_100132EFC(v3, (uint64_t)",ulFreqThresholdMHz,", 20);
  int v4 = (void *)std::ostream::operator<<();
  long long v5 = sub_100132EFC(v4, (uint64_t)",belowThresholdParams,", 22);
  sub_10046AD0C();
  if ((v11 & 0x80u) == 0) {
    uint64_t v6 = __p;
  }
  else {
    uint64_t v6 = (void **)__p[0];
  }
  if ((v11 & 0x80u) == 0) {
    uint64_t v7 = v11;
  }
  else {
    uint64_t v7 = (uint64_t)__p[1];
  }
  sub_100132EFC(v5, (uint64_t)v6, v7);
  if ((char)v11 < 0) {
    operator delete(__p[0]);
  }
  std::stringbuf::str();
  *(void *)((char *)v12
  v13[0] = v8;
  if (v14 < 0) {
    operator delete((void *)v13[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return std::ios::~ios();
}

void sub_100924958(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_101A129A8((uint64_t)&a15);
  _Unwind_Resume(a1);
}

void sub_100924A18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_alloc_init((Class)NSAutoreleasePool);
  if (sub_100926088(a1))
  {
    v7[0] = CMMotionAlarmKey;
    v7[1] = CMErrorMessage;
    v8[0] = a2;
    v8[1] = +[NSNumber numberWithUnsignedInt:a3];
    +[NSDictionary dictionaryWithObjects:v8 forKeys:v7 count:2];
    sub_100926124(a1);
  }
}

void sub_100924AFC(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_1001C7F8C(exception_object);
}

uint64_t sub_100924B48(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v7 = sub_100054C14(a1, a2, a3, a4, a5);
  *(void *)uint64_t v7 = off_1022D3EB0;
  *(_WORD *)(v7 + 41) = 0;
  *(void *)(a1 + 4_Block_object_dispose(&STACK[0x7E0], 8) = [objc_msgSend(objc_msgSend(a3, "vendor"), "proxyForService:", @"CLMotionAlarmNotifier");
  uint64_t v8 = [[CLMotionAlarmSubscriptionAdapter alloc] initWithMotionAlarmSubscription:a1];
  *(void *)(a1 + 56) = v8;
  [(CLMotionAlarmSubscriptionAdapter *)v8 setValid:1];
  [*(id *)(a1 + 48) registerDelegate:*(void *)(a1 + 56) inSilo:[a3 silo]];
  *(unsigned char *)(a1 + 42) = sub_100924C14(a1);
  return a1;
}

void sub_100924C00(_Unwind_Exception *a1)
{
  sub_100029A7C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100924C14(uint64_t a1)
{
  sub_100134750(&__p, "com.apple.locationd.motion_alarms-system-client");
  uint64_t v2 = sub_1010A4BAC(a1);
  if (v5 < 0) {
    operator delete(__p);
  }
  return v2;
}

void sub_100924C70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100924C90(uint64_t a1)
{
  *(void *)a1 = off_1022D3EB0;
  if (*(unsigned char *)(a1 + 41))
  {
    uint64_t v2 = *(void **)(a1 + 48);
    int v3 = *(void **)(a1 + 24);
    if (v3)
    {
      [v3 clientName];
    }
    else
    {
      uint64_t v16 = 0;
      *(_OWORD *)std::string __p = 0u;
      long long v15 = 0u;
      long long v12 = 0u;
      *(_OWORD *)int v13 = 0u;
      long long v10 = 0u;
      *(_OWORD *)unsigned __int8 v11 = 0u;
      *(_OWORD *)uint64_t v8 = 0u;
      *(_OWORD *)int v9 = 0u;
      *(_OWORD *)id v6 = 0u;
      long long v7 = 0u;
      *(_OWORD *)char v5 = 0u;
    }
    [v2 unregisterClient:sub_1000376D4((long long *)v5) systemClient:*(unsigned __int8 *)(a1 + 42)];
    if (SHIBYTE(v15) < 0) {
      operator delete(__p[1]);
    }
    if (SHIBYTE(__p[0]) < 0) {
      operator delete(v13[0]);
    }
    if (SHIBYTE(v12) < 0) {
      operator delete(v11[1]);
    }
    if (SHIBYTE(v10) < 0) {
      operator delete(v9[1]);
    }
    if (SHIBYTE(v9[0]) < 0) {
      operator delete(v8[0]);
    }
    if (SHIBYTE(v7) < 0) {
      operator delete(v6[1]);
    }
    if (SHIBYTE(v6[0]) < 0) {
      operator delete(v5[0]);
    }
  }

  *(void *)(a1 + 4_Block_object_dispose(&STACK[0x7E0], 8) = 0;
  [*(id *)(a1 + 56) setValid:0];

  *(void *)(a1 + 56) = 0;
  return sub_100029A7C(a1);
}

void sub_100924DD0(uint64_t a1)
{
  sub_100924C90(a1);

  operator delete();
}

void *sub_100924E08@<X0>(uint64_t a1@<X8>)
{
  v10[0] = off_1022D3FC0;
  v10[1] = sub_100925140;
  v10[2] = 0;
  v10[3] = v10;
  sub_100134750(v11, "kCLConnectionMessageMotionAlarmFire");
  sub_100926894((uint64_t)&v12, (uint64_t)v10);
  long long v7 = off_1022D4070;
  v8[0] = sub_100925464;
  v8[1] = 0;
  int v9 = &v7;
  sub_100134750(v13, "kCLConnectionMessageMotionAlarmRegister");
  sub_100926894((uint64_t)&v14, (uint64_t)&v7);
  v6[0] = off_1022D4070;
  v6[1] = sub_1009258AC;
  v6[2] = 0;
  void v6[3] = v6;
  sub_100134750(v15, "kCLConnectionMessageMotionAlarmUnregister");
  sub_100926894((uint64_t)&v16, (uint64_t)v6);
  v5[0] = off_1022D4070;
  v5[1] = sub_100925B58;
  v5[2] = 0;
  v5[3] = v5;
  sub_100134750(v17, "kCLConnectionMessageMotionAlarmAcknowledge");
  sub_100926894((uint64_t)&v18, (uint64_t)v5);
  v4[0] = off_1022D4070;
  v4[1] = sub_100925E04;
  _DWORD v4[2] = 0;
  void v4[3] = v4;
  sub_100134750(v19, "kCLConnectionMessageMotionAlarmLaunchRemoteApplication");
  sub_100926894((uint64_t)&v20, (uint64_t)v4);
  sub_100926F04(a1, (unsigned __int8 *)v11, 5);
  uint64_t v2 = 35;
  do
  {
    sub_100926CEC(&v10[v2]);
    if (SHIBYTE((&v9)[v2]) < 0) {
      operator delete((void *)v8[v2]);
    }
    v2 -= 7;
  }
  while (v2 * 8);
  sub_100926CEC(v4);
  sub_100926CEC(v5);
  sub_100926CEC(v6);
  sub_100926CEC(&v7);
  return sub_100926CEC(v10);
}

void sub_100925090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  for (uint64_t i = 224; i != -56; i -= 56)
    sub_10092604C((uint64_t)(&a29 + i));
  sub_100926CEC(&a9);
  sub_100926CEC(&a13);
  sub_100926CEC(&a17);
  sub_100926CEC(&a21);
  sub_100926CEC(&a25);
  _Unwind_Resume(a1);
}

void sub_100925140(uint64_t a1, int a2)
{
  id v4 = objc_alloc_init((Class)NSAutoreleasePool);
  if (sub_100926088(a1))
  {
    if (qword_102419130 != -1) {
      dispatch_once(&qword_102419130, &stru_1022D3F60);
    }
    char v5 = qword_102419138;
    if (os_log_type_enabled((os_log_t)qword_102419138, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = *(void *)(a1 + 24);
      uint64_t buf = 68289794;
      __int16 v36 = 2082;
      int v37 = "";
      __int16 v38 = 2114;
      uint64_t v39 = v6;
      __int16 v40 = 2050;
      uint64_t v41 = a1;
      __int16 v42 = 1026;
      int v43 = a2;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"Motion alarm fire subscription changed\", \"Client\":%{public, location:escape_only}@, \"subscription\":\"%{public}p\", \"subscribe\":%{public}hhd}", (uint8_t *)&buf, 0x2Cu);
    }
    sub_10009C834(a1);
    long long v7 = *(void **)(a1 + 48);
    uint64_t v8 = *(void **)(a1 + 24);
    if (a2)
    {
      if (v8)
      {
        [v8 clientName];
      }
      else
      {
        uint64_t v34 = 0;
        *(_OWORD *)std::string __p = 0u;
        long long v33 = 0u;
        long long v30 = 0u;
        *(_OWORD *)BOOL v31 = 0u;
        long long v28 = 0u;
        *(_OWORD *)long long v29 = 0u;
        *(_OWORD *)int v26 = 0u;
        *(_OWORD *)char v27 = 0u;
        *(_OWORD *)unsigned __int8 v24 = 0u;
        long long v25 = 0u;
        long long v23 = 0u;
      }
      [v7 registerClient:sub_1000376D4(&v23) adapter:*(void *)(a1 + 56) systemClient:*(unsigned __int8 *)(a1 + 42)];
      if (SHIBYTE(v33) < 0) {
        operator delete(__p[1]);
      }
      if (SHIBYTE(__p[0]) < 0) {
        operator delete(v31[0]);
      }
      if (SHIBYTE(v30) < 0) {
        operator delete(v29[1]);
      }
      if (SHIBYTE(v28) < 0) {
        operator delete(v27[1]);
      }
      if (SHIBYTE(v27[0]) < 0) {
        operator delete(v26[0]);
      }
      if (SHIBYTE(v25) < 0) {
        operator delete(v24[1]);
      }
      char v9 = 1;
      if ((SHIBYTE(v24[0]) & 0x80000000) == 0) {
        goto LABEL_42;
      }
      long long v10 = &v23;
    }
    else
    {
      if (v8)
      {
        [v8 clientName];
      }
      else
      {
        uint64_t v22 = 0;
        *(_OWORD *)uint64_t v20 = 0u;
        long long v21 = 0u;
        long long v18 = 0u;
        *(_OWORD *)__int16 v19 = 0u;
        long long v16 = 0u;
        *(_OWORD *)uint64_t v17 = 0u;
        *(_OWORD *)uint64_t v14 = 0u;
        *(_OWORD *)long long v15 = 0u;
        *(_OWORD *)uint64_t v12 = 0u;
        long long v13 = 0u;
        long long v11 = 0u;
      }
      [v7 unregisterClient:sub_1000376D4(&v11) systemClient:*(unsigned __int8 *)(a1 + 42)];
      if (SHIBYTE(v21) < 0) {
        operator delete(v20[1]);
      }
      if (SHIBYTE(v20[0]) < 0) {
        operator delete(v19[0]);
      }
      if (SHIBYTE(v18) < 0) {
        operator delete(v17[1]);
      }
      if (SHIBYTE(v16) < 0) {
        operator delete(v15[1]);
      }
      if (SHIBYTE(v15[0]) < 0) {
        operator delete(v14[0]);
      }
      if (SHIBYTE(v13) < 0) {
        operator delete(v12[1]);
      }
      char v9 = 0;
      if ((SHIBYTE(v12[0]) & 0x80000000) == 0) {
        goto LABEL_42;
      }
      long long v10 = &v11;
    }
    operator delete(*(void **)v10);
LABEL_42:
    *(unsigned char *)(a1 + 41) = v9;
  }
}

void sub_100925420(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000064D0((uint64_t)&a9);

  _Unwind_Resume(a1);
}

void sub_100925464(uint64_t a1, uint64_t a2)
{
  id v4 = objc_alloc_init((Class)NSAutoreleasePool);
  if (sub_100926088(a1))
  {
    uint64_t v5 = objc_opt_class();
    uint64_t v6 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", v5, objc_opt_class(), 0);
    id v7 = [[(id)CLConnectionMessage::getDictionaryOfClasses(*(CLConnectionMessage **)a2, v6) objectForKey:CMMotionAlarmKey];
    if (qword_102419130 != -1) {
      dispatch_once(&qword_102419130, &stru_1022D3F60);
    }
    uint64_t v8 = qword_102419138;
    if (os_log_type_enabled((os_log_t)qword_102419138, OS_LOG_TYPE_INFO))
    {
      id v9 = [*(id *)(a1 + 24) legacyClientKey];
      uint64_t v10 = *(void *)(a1 + 24);
      *(_DWORD *)uint64_t buf = 138543618;
      id v36 = v9;
      __int16 v37 = 2114;
      uint64_t v38 = v10;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "#MotionAlarm handleMessageMotionAlarmRegister  clientKey: %{public}@  client: %{public}@", buf, 0x16u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419130 != -1) {
        dispatch_once(&qword_102419130, &stru_1022D3F60);
      }
      id v14 = [*(id *)(a1 + 24) legacyClientKey];
      uint64_t v15 = *(void *)(a1 + 24);
      int v31 = 138543618;
      id v32 = v14;
      __int16 v33 = 2114;
      uint64_t v34 = v15;
      long long v16 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionAlarmSubscription::handleMessageMotionAlarmRegister(std::shared_ptr<CLConnectionMessage>)", "%s\n", v16);
      if (v16 != (char *)buf) {
        free(v16);
      }
    }
    long long v11 = *(void **)(a1 + 24);
    if (v11)
    {
      [v11 clientName];
    }
    else
    {
      uint64_t v30 = 0;
      *(_OWORD *)std::string __p = 0u;
      long long v29 = 0u;
      long long v26 = 0u;
      *(_OWORD *)char v27 = 0u;
      long long v24 = 0u;
      *(_OWORD *)long long v25 = 0u;
      *(_OWORD *)uint64_t v22 = 0u;
      *(_OWORD *)long long v23 = 0u;
      *(_OWORD *)uint64_t v20 = 0u;
      long long v21 = 0u;
      *(_OWORD *)__int16 v19 = 0u;
    }
    [v7 setBundleId:sub_1009261A8((uint64_t)v19)];
    if (SHIBYTE(v29) < 0) {
      operator delete(__p[1]);
    }
    if (SHIBYTE(__p[0]) < 0) {
      operator delete(v27[0]);
    }
    if (SHIBYTE(v26) < 0) {
      operator delete(v25[1]);
    }
    if (SHIBYTE(v24) < 0) {
      operator delete(v23[1]);
    }
    if (SHIBYTE(v23[0]) < 0) {
      operator delete(v22[0]);
    }
    if (SHIBYTE(v21) < 0) {
      operator delete(v20[1]);
    }
    if (SHIBYTE(v20[0]) < 0) {
      operator delete(v19[0]);
    }
    uint64_t v12 = *(void **)(a1 + 48);
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3321888768;
    unsigned int v17[2] = sub_100926600;
    void v17[3] = &unk_1022D3ED0;
    long long v13 = *(std::__shared_weak_count **)(a2 + 8);
    v17[4] = *(void *)a2;
    long long v18 = v13;
    if (v13) {
      atomic_fetch_add_explicit(&v13->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    [v12 registerAlarm:v7 withReply:v17];
    if (v18) {
      sub_1000DB0A0(v18);
    }
  }
  else
  {
    uint64_t v39 = CMErrorMessage;
    __int16 v40 = &off_102392C18;
    +[NSDictionary dictionaryWithObjects:&v40 forKeys:&v39 count:1];
    CLConnectionMessage::sendReply();
  }
}

void sub_100925848(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1009258AC(uint64_t a1, uint64_t a2)
{
  id v4 = objc_alloc_init((Class)NSAutoreleasePool);
  if (sub_100926088(a1))
  {
    uint64_t v5 = objc_opt_class();
    uint64_t v6 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", v5, objc_opt_class(), 0);
    id v7 = [[(id)CLConnectionMessage::getDictionaryOfClasses(*(CLConnectionMessage **)a2, v6) objectForKey:@"CMMotionAlarmKey"];
    uint64_t v8 = *(void **)(a1 + 24);
    if (v8)
    {
      [v8 clientName];
    }
    else
    {
      uint64_t v24 = 0;
      *(_OWORD *)std::string __p = 0u;
      long long v23 = 0u;
      long long v20 = 0u;
      *(_OWORD *)long long v21 = 0u;
      long long v18 = 0u;
      *(_OWORD *)__int16 v19 = 0u;
      *(_OWORD *)long long v16 = 0u;
      *(_OWORD *)uint64_t v17 = 0u;
      *(_OWORD *)id v14 = 0u;
      long long v15 = 0u;
      *(_OWORD *)long long v13 = 0u;
    }
    [v7 setBundleId:sub_1009261A8((uint64_t)v13)];
    if (SHIBYTE(v23) < 0) {
      operator delete(__p[1]);
    }
    if (SHIBYTE(__p[0]) < 0) {
      operator delete(v21[0]);
    }
    if (SHIBYTE(v20) < 0) {
      operator delete(v19[1]);
    }
    if (SHIBYTE(v18) < 0) {
      operator delete(v17[1]);
    }
    if (SHIBYTE(v17[0]) < 0) {
      operator delete(v16[0]);
    }
    if (SHIBYTE(v15) < 0) {
      operator delete(v14[1]);
    }
    if (SHIBYTE(v14[0]) < 0) {
      operator delete(v13[0]);
    }
    id v9 = *(void **)(a1 + 48);
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3321888768;
    v11[2] = sub_1009266A8;
    void v11[3] = &unk_1022D3ED0;
    uint64_t v10 = *(std::__shared_weak_count **)(a2 + 8);
    v11[4] = *(void *)a2;
    uint64_t v12 = v10;
    if (v10) {
      atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    [v9 unregisterAlarm:v7 withReply:v11];
    if (v12) {
      sub_1000DB0A0(v12);
    }
  }
  else
  {
    uint64_t v25 = CMErrorMessage;
    long long v26 = &off_102392C18;
    +[NSDictionary dictionaryWithObjects:&v26 forKeys:&v25 count:1];
    CLConnectionMessage::sendReply();
  }
}

void sub_100925B00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  if (a16) {
    sub_1000DB0A0(a16);
  }

  _Unwind_Resume(a1);
}

void sub_100925B58(uint64_t a1, uint64_t a2)
{
  id v4 = objc_alloc_init((Class)NSAutoreleasePool);
  if (sub_100926088(a1))
  {
    uint64_t v5 = objc_opt_class();
    uint64_t v6 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", v5, objc_opt_class(), 0);
    id v7 = [[(id)CLConnectionMessage::getDictionaryOfClasses(*(CLConnectionMessage **)a2, v6) objectForKey:CMMotionAlarmKey];
    uint64_t v8 = *(void **)(a1 + 24);
    if (v8)
    {
      [v8 clientName];
    }
    else
    {
      uint64_t v24 = 0;
      *(_OWORD *)std::string __p = 0u;
      long long v23 = 0u;
      long long v20 = 0u;
      *(_OWORD *)long long v21 = 0u;
      long long v18 = 0u;
      *(_OWORD *)__int16 v19 = 0u;
      *(_OWORD *)long long v16 = 0u;
      *(_OWORD *)uint64_t v17 = 0u;
      *(_OWORD *)id v14 = 0u;
      long long v15 = 0u;
      *(_OWORD *)long long v13 = 0u;
    }
    [v7 setBundleId:sub_1009261A8((uint64_t)v13)];
    if (SHIBYTE(v23) < 0) {
      operator delete(__p[1]);
    }
    if (SHIBYTE(__p[0]) < 0) {
      operator delete(v21[0]);
    }
    if (SHIBYTE(v20) < 0) {
      operator delete(v19[1]);
    }
    if (SHIBYTE(v18) < 0) {
      operator delete(v17[1]);
    }
    if (SHIBYTE(v17[0]) < 0) {
      operator delete(v16[0]);
    }
    if (SHIBYTE(v15) < 0) {
      operator delete(v14[1]);
    }
    if (SHIBYTE(v14[0]) < 0) {
      operator delete(v13[0]);
    }
    id v9 = *(void **)(a1 + 48);
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3321888768;
    v11[2] = sub_100926750;
    void v11[3] = &unk_1022D3ED0;
    uint64_t v10 = *(std::__shared_weak_count **)(a2 + 8);
    v11[4] = *(void *)a2;
    uint64_t v12 = v10;
    if (v10) {
      atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    [v9 acknowledgeAlarm:v7 withReply:v11];
    if (v12) {
      sub_1000DB0A0(v12);
    }
  }
  else
  {
    uint64_t v25 = CMErrorMessage;
    long long v26 = &off_102392C18;
    +[NSDictionary dictionaryWithObjects:&v26 forKeys:&v25 count:1];
    CLConnectionMessage::sendReply();
  }
}

void sub_100925DAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  if (a16) {
    sub_1000DB0A0(a16);
  }

  _Unwind_Resume(a1);
}

void sub_100925E04(uint64_t a1, void *a2)
{
  id v4 = objc_alloc_init((Class)NSAutoreleasePool);
  if (sub_100926088(a1))
  {
    uint64_t v5 = *(void **)(a1 + 24);
    if (v5)
    {
      [v5 clientName];
    }
    else
    {
      uint64_t v22 = 0;
      *(_OWORD *)std::string __p = 0u;
      long long v21 = 0u;
      long long v18 = 0u;
      *(_OWORD *)__int16 v19 = 0u;
      long long v16 = 0u;
      *(_OWORD *)uint64_t v17 = 0u;
      *(_OWORD *)id v14 = 0u;
      *(_OWORD *)long long v15 = 0u;
      *(_OWORD *)uint64_t v12 = 0u;
      long long v13 = 0u;
      *(_OWORD *)long long v11 = 0u;
    }
    uint64_t v6 = sub_1009261A8((uint64_t)v11);
    if (SHIBYTE(v21) < 0) {
      operator delete(__p[1]);
    }
    if (SHIBYTE(__p[0]) < 0) {
      operator delete(v19[0]);
    }
    if (SHIBYTE(v18) < 0) {
      operator delete(v17[1]);
    }
    if (SHIBYTE(v16) < 0) {
      operator delete(v15[1]);
    }
    if (SHIBYTE(v15[0]) < 0) {
      operator delete(v14[0]);
    }
    if (SHIBYTE(v13) < 0) {
      operator delete(v12[1]);
    }
    if (SHIBYTE(v12[0]) < 0) {
      operator delete(v11[0]);
    }
    id v7 = *(void **)(a1 + 48);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3321888768;
    v9[2] = sub_1009267F8;
    void v9[3] = &unk_1022D3F00;
    uint64_t v8 = (std::__shared_weak_count *)a2[1];
    v9[4] = *a2;
    uint64_t v10 = v8;
    if (v8) {
      atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    [v7 launchRemoteApplication:v6 withReply:v9];
    if (v10) {
      sub_1000DB0A0(v10);
    }
  }
  else
  {
    uint64_t v23 = CMErrorMessage;
    uint64_t v24 = &off_102392C18;
    +[NSDictionary dictionaryWithObjects:&v24 forKeys:&v23 count:1];
    CLConnectionMessage::sendReply();
  }
}

void sub_100925FFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10092604C(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_100926088(uint64_t a1)
{
  sub_100134750(&__p, "com.apple.locationd.motion_alarms");
  if (sub_1010A4BAC(a1))
  {
    if (v5 < 0) {
      operator delete(__p);
    }
    return 1;
  }
  else
  {
    uint64_t v2 = sub_100924C14(a1);
    if (v5 < 0) {
      operator delete(__p);
    }
  }
  return v2;
}

void sub_100926108(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100926124(uint64_t a1)
{
  sub_10048C758(&off_1022D40E0, &v2);
  sub_1000E956C(a1, &v2);
  if (v3) {
    sub_1000DB0A0(v3);
  }
}

void sub_100926190(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  if (a11) {
    sub_1000DB0A0(a11);
  }
  _Unwind_Resume(exception_object);
}

NSString *sub_1009261A8(uint64_t a1)
{
  sub_1000A84C8(a1);
  if (*(char *)(a1 + 151) < 0) {
    uint64_t v2 = *(void *)(a1 + 136);
  }
  else {
    uint64_t v2 = *(unsigned __int8 *)(a1 + 151);
  }
  int v3 = (void **)(a1 + 128);
  if (v2)
  {
    sub_1000A84C8(a1);
    id v4 = (void *)(a1 + 128);
    if (*(char *)(a1 + 151) < 0) {
      id v4 = *v3;
    }
    goto LABEL_19;
  }
  sub_1000A84C8(a1);
  if (*(char *)(a1 + 127) < 0)
  {
    if (*(void *)(a1 + 112)) {
      goto LABEL_10;
    }
  }
  else if (*(unsigned char *)(a1 + 127))
  {
LABEL_10:
    char v5 = (void *)(a1 + 104);
    sub_1000A84C8(a1);
    if (*(char *)(a1 + 127) < 0) {
      char v5 = (void *)*v5;
    }
    id v4 = v5;
LABEL_19:
    uint64_t v6 = +[NSString stringWithUTF8String:v4];
    id v7 = v6;
    if (v6 && [(NSString *)v6 length]) {
      return v7;
    }
    goto LABEL_21;
  }
  id v4 = (void *)(a1 + 24);
  if (*(char *)(a1 + 47) < 0)
  {
    if (*(void *)(a1 + 32))
    {
      id v4 = (void *)*v4;
      goto LABEL_19;
    }
  }
  else if (*(unsigned char *)(a1 + 47))
  {
    goto LABEL_19;
  }
LABEL_21:
  if (qword_102419130 != -1) {
    dispatch_once(&qword_102419130, &stru_1022D3F60);
  }
  uint64_t v8 = qword_102419138;
  if (os_log_type_enabled((os_log_t)qword_102419138, OS_LOG_TYPE_ERROR))
  {
    sub_1000A7FBC(a1, (uint64_t)v23);
    if (v24 >= 0) {
      id v9 = v23;
    }
    else {
      id v9 = (void **)v23[0];
    }
    sub_1000A84C8(a1);
    uint64_t v10 = (void *)(a1 + 128);
    if (*(char *)(a1 + 151) < 0) {
      uint64_t v10 = *v3;
    }
    sub_1000A84C8(a1);
    long long v11 = (void *)(a1 + 104);
    if (*(char *)(a1 + 127) < 0) {
      long long v11 = (void *)*v11;
    }
    uint64_t v12 = (void *)(a1 + 48);
    if (*(char *)(a1 + 71) < 0) {
      uint64_t v12 = (void *)*v12;
    }
    long long v13 = (void *)(a1 + 24);
    if (*(char *)(a1 + 47) < 0) {
      long long v13 = (void *)*v13;
    }
    sub_1000372B8(a1, &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)uint64_t buf = 68290562;
    int v26 = 0;
    __int16 v27 = 2082;
    long long v28 = "";
    __int16 v29 = 2082;
    uint64_t v30 = v9;
    __int16 v31 = 2082;
    id v32 = (void **)v10;
    __int16 v33 = 2082;
    uint64_t v34 = v11;
    __int16 v35 = 2082;
    id v36 = v12;
    __int16 v37 = 2082;
    uint64_t v38 = v13;
    __int16 v39 = 2082;
    __int16 v40 = p_p;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"Unable to find bundleId or executable!\", \"clientKey\":%{public, location:escape_only}s, \"pluginBundleId\":%{public, location:escape_only}s, \"bundleId\":%{public, location:escape_only}s, \"bundlePath\":%{public, location:escape_only}s, \"executable\":%{public, location:escape_only}s, \"client\":%{public, location:escape_only}s}", buf, 0x4Eu);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (v24 < 0) {
      operator delete(v23[0]);
    }
    if (qword_102419130 != -1) {
      dispatch_once(&qword_102419130, &stru_1022D3F60);
    }
  }
  long long v15 = qword_102419138;
  if (os_signpost_enabled((os_log_t)qword_102419138))
  {
    long long v16 = v23;
    sub_1000A7FBC(a1, (uint64_t)v23);
    if (v24 < 0) {
      long long v16 = (void **)v23[0];
    }
    sub_1000A84C8(a1);
    if (*(char *)(a1 + 151) < 0) {
      int v3 = (void **)*v3;
    }
    sub_1000A84C8(a1);
    uint64_t v17 = (void *)(a1 + 104);
    if (*(char *)(a1 + 127) < 0) {
      uint64_t v17 = (void *)*v17;
    }
    long long v18 = (void *)(a1 + 48);
    if (*(char *)(a1 + 71) < 0) {
      long long v18 = (void *)*v18;
    }
    __int16 v19 = (void *)(a1 + 24);
    if (*(char *)(a1 + 47) < 0) {
      __int16 v19 = (void *)*v19;
    }
    sub_1000372B8(a1, &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      long long v20 = &__p;
    }
    else {
      long long v20 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)uint64_t buf = 68290562;
    int v26 = 0;
    __int16 v27 = 2082;
    long long v28 = "";
    __int16 v29 = 2082;
    uint64_t v30 = v16;
    __int16 v31 = 2082;
    id v32 = v3;
    __int16 v33 = 2082;
    uint64_t v34 = v17;
    __int16 v35 = 2082;
    id v36 = v18;
    __int16 v37 = 2082;
    uint64_t v38 = v19;
    __int16 v39 = 2082;
    __int16 v40 = v20;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v15, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Unable to find bundleId or executable!", "{\"msg%{public}.0s\":\"Unable to find bundleId or executable!\", \"clientKey\":%{public, location:escape_only}s, \"pluginBundleId\":%{public, location:escape_only}s, \"bundleId\":%{public, location:escape_only}s, \"bundlePath\":%{public, location:escape_only}s, \"executable\":%{public, location:escape_only}s, \"client\":%{public, location:escape_only}s}", buf, 0x4Eu);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (v24 < 0) {
      operator delete(v23[0]);
    }
  }
  return 0;
}

void sub_1009265D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100926600(uint64_t a1, uint64_t a2)
{
  v4[0] = a2;
  v3[0] = CMMotionAlarmKey;
  v3[1] = CMErrorMessage;
  v4[1] = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:");
  +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:2];
  return CLConnectionMessage::sendReply();
}

uint64_t sub_1009266A8(uint64_t a1, uint64_t a2)
{
  v4[0] = a2;
  v3[0] = CMMotionAlarmKey;
  v3[1] = CMErrorMessage;
  v4[1] = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:");
  +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:2];
  return CLConnectionMessage::sendReply();
}

uint64_t sub_100926750(uint64_t a1, uint64_t a2)
{
  v4[0] = a2;
  v3[0] = CMMotionAlarmKey;
  v3[1] = CMErrorMessage;
  v4[1] = +[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:");
  +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:2];
  return CLConnectionMessage::sendReply();
}

uint64_t sub_1009267F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = CMErrorMessage;
  id v4 = +[NSNumber numberWithUnsignedInt:a2];
  +[NSDictionary dictionaryWithObjects:&v4 forKeys:&v3 count:1];
  return CLConnectionMessage::sendReply();
}

uint64_t sub_100926894(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(*(void *)*v3 + 24))(*v3, a1);
      return a1;
    }
    *(void *)(a1 + 24) = v4;
  }
  else
  {
    uint64_t v3 = (void *)(a1 + 24);
  }
  *uint64_t v3 = 0;
  return a1;
}

void sub_100926914(id a1)
{
  qword_102419138 = (uint64_t)os_log_create("com.apple.locationd.Motion", "MotionAlarm");
}

__n128 sub_100926944(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x18uLL);
  *(void *)uint64_t v2 = off_1022D3FC0;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + _Block_object_dispose(&STACK[0x7E0], 8) = result;
  return result;
}

__n128 sub_100926990(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = off_1022D3FC0;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + _Block_object_dispose(&STACK[0x7E0], 8) = result;
  return result;
}

void sub_1009269C0(uint64_t a1, uint64_t a2, long long *a3)
{
}

uint64_t sub_1009269C8(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100926A08()
{
}

void sub_100926A14(uint64_t a1, uint64_t a2, long long *a3)
{
  long long v3 = *a3;
  *(void *)a3 = 0;
  *((void *)a3 + 1) = 0;
  sub_100926A70(a1, a2, (CLConnectionMessage **)&v3);
  if (*((void *)&v3 + 1)) {
    sub_1000DB0A0(*((std::__shared_weak_count **)&v3 + 1));
  }
}

void sub_100926A58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1000DB0A0(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100926A70(uint64_t a1, uint64_t a2, CLConnectionMessage **a3)
{
  uint64_t v6 = (NSSet *)(*(uint64_t (**)(uint64_t))(*(void *)a2 + 16))(a2);
  CFDictionaryRef DictionaryOfClasses = (const __CFDictionary *)CLConnectionMessage::getDictionaryOfClasses(*a3, v6);
  sub_10013FA80((int)v15, DictionaryOfClasses);
  BOOL v14 = 0;
  if (sub_1000D2988((uint64_t)v15, "kCLConnectionMessageSubscribeKey", &v14))
  {
    uint64_t v8 = *(void (**)(void *, BOOL, uint8_t *))a1;
    uint64_t v9 = *(void *)(a1 + 8);
    uint64_t v10 = (void *)(a2 + (v9 >> 1));
    if (v9) {
      uint64_t v8 = *(void (**)(void *, BOOL, uint8_t *))(*v10 + v8);
    }
    v8(v10, v14, v15);
  }
  else
  {
    if (qword_102419520 != -1) {
      dispatch_once(&qword_102419520, &stru_1022D4030);
    }
    long long v11 = qword_102419528;
    if (os_log_type_enabled((os_log_t)qword_102419528, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      int v17 = 0;
      __int16 v18 = 2082;
      __int16 v19 = "";
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"Couldn't get value for kCLConnectionMessageSubscribeKey key\"}", buf, 0x12u);
      if (qword_102419520 != -1) {
        dispatch_once(&qword_102419520, &stru_1022D4030);
      }
    }
    uint64_t v12 = qword_102419528;
    if (os_signpost_enabled((os_log_t)qword_102419528))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      int v17 = 0;
      __int16 v18 = 2082;
      __int16 v19 = "";
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v12, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Couldn't get value for kCLConnectionMessageSubscribeKey key", "{\"msg%{public}.0s\":\"Couldn't get value for kCLConnectionMessageSubscribeKey key\"}", buf, 0x12u);
    }
  }
  return sub_10013F3C4(v15);
}

void sub_100926CA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
}

void sub_100926CBC(id a1)
{
  qword_102419528 = (uint64_t)os_log_create("com.apple.locationd.Core", "Client");
}

void *sub_100926CEC(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

__n128 sub_100926D70(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x18uLL);
  *(void *)uint64_t v2 = off_1022D4070;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + _Block_object_dispose(&STACK[0x7E0], 8) = result;
  return result;
}

__n128 sub_100926DBC(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = off_1022D4070;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + _Block_object_dispose(&STACK[0x7E0], 8) = result;
  return result;
}

void sub_100926DEC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
}

uint64_t sub_100926DF4(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100926E34()
{
}

void sub_100926E40(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  uint64_t v4 = (std::__shared_weak_count *)a3[1];
  *a3 = 0;
  a3[1] = 0;
  char v5 = *(void (**)(void *, uint64_t *))a1;
  uint64_t v6 = *(void *)(a1 + 8);
  id v7 = (void *)(a2 + (v6 >> 1));
  if (v6) {
    char v5 = *(void (**)(void *, uint64_t *))(*v7 + v5);
  }
  uint64_t v8 = v3;
  uint64_t v9 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  v5(v7, &v8);
  if (v9) {
    sub_1000DB0A0(v9);
  }
  if (v4) {
    sub_1000DB0A0(v4);
  }
}

void sub_100926EE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1000DB0A0(a10);
  }
  if (v10) {
    sub_1000DB0A0(v10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100926F04(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  if (a3)
  {
    uint64_t v5 = 56 * a3;
    do
    {
      sub_100926F80(a1, a2, (long long *)a2);
      a2 += 56;
      v5 -= 56;
    }
    while (v5);
  }
  return a1;
}

void sub_100926F6C(_Unwind_Exception *a1)
{
  sub_100927434(v1);
  _Unwind_Resume(a1);
}

unsigned __int8 *sub_100926F80(uint64_t a1, unsigned __int8 *a2, long long *a3)
{
  id v7 = (void *)(a1 + 24);
  unint64_t v8 = sub_100103388(a1 + 24, (uint64_t)a2);
  unint64_t v9 = v8;
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    unint64_t v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v3 = v8;
      if (v8 >= v10) {
        unint64_t v3 = v8 % v10;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v8;
    }
    long long v13 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v3);
    if (v13)
    {
      for (uint64_t i = *v13; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v15 = *((void *)i + 1);
        if (v15 == v9)
        {
          if (sub_100103744(a1 + 32, i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v12 > 1)
          {
            if (v15 >= v10) {
              v15 %= v10;
            }
          }
          else
          {
            v15 &= v10 - 1;
          }
          if (v15 != v3) {
            break;
          }
        }
      }
    }
  }
  sub_100927204(a1, v9, a3, (uint64_t)v25);
  float v16 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v17 = *(float *)(a1 + 32);
  if (!v10 || (float)(v17 * (float)v10) < v16)
  {
    BOOL v18 = 1;
    if (v10 >= 3) {
      BOOL v18 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v19 = v18 | (2 * v10);
    unint64_t v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20) {
      size_t v21 = v20;
    }
    else {
      size_t v21 = v19;
    }
    sub_100100330(a1, v21);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
      else {
        unint64_t v3 = v9;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v9;
    }
  }
  uint64_t v22 = *(void **)(*(void *)a1 + 8 * v3);
  if (v22)
  {
    *(void *)v25[0] = *v22;
    *uint64_t v22 = v25[0];
  }
  else
  {
    *(void *)v25[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v25[0];
    *(void *)(*(void *)a1 + 8 * v3) = a1 + 16;
    if (*(void *)v25[0])
    {
      unint64_t v23 = *(void *)(*(void *)v25[0] + 8);
      if ((v10 & (v10 - 1)) != 0)
      {
        if (v23 >= v10) {
          v23 %= v10;
        }
      }
      else
      {
        v23 &= v10 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v23) = v25[0];
    }
  }
  uint64_t i = (unsigned __int8 *)v25[0];
  v25[0] = 0;
  ++*v7;
  sub_10092738C((uint64_t)v25, 0);
  return i;
}

void sub_1009271EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10092738C((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

void *sub_100927204@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  unint64_t v8 = operator new(0x48uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + _Block_object_dispose(&STACK[0x7E0], 8) = v7;
  *(unsigned char *)(a4 + 16) = 0;
  *unint64_t v8 = 0;
  v8[1] = a2;
  __n128 result = sub_10092727C(v8 + 2, a3);
  *(unsigned char *)(a4 + 16) = 1;
  return result;
}

void sub_100927264(_Unwind_Exception *a1)
{
  sub_10092738C(v1, 0);
  _Unwind_Resume(a1);
}

void *sub_10092727C(void *__dst, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000DC48C(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)long long __dst = v4;
  }
  sub_1009272F4((uint64_t)(__dst + 3), (uint64_t)a2 + 24);
  return __dst;
}

void sub_1009272D8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1009272F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_10092738C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_1009273E4((uint64_t)v2 + 16);
    }
    operator delete(v2);
  }
}

void sub_1009273E4(uint64_t a1)
{
  sub_100926CEC((void *)(a1 + 24));
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v2 = *(void **)a1;
    operator delete(v2);
  }
}

uint64_t sub_100927434(uint64_t a1)
{
  sub_100927470(a1, *(void **)(a1 + 16));
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void sub_100927470(uint64_t a1, void *a2)
{
  if (a2)
  {
    uint64_t v2 = a2;
    do
    {
      uint64_t v3 = (void *)*v2;
      sub_1009273E4((uint64_t)(v2 + 2));
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
}

void *sub_1009274B4(void *a1, void *a2, void *a3, void *a4)
{
  *((_OWORD *)a1 + 1) = 0u;
  *((_OWORD *)a1 + 2) = 0u;
  *(_OWORD *)a1 = 0u;
  a1[6] = *a2;
  uint64_t v5 = a2[1];
  a1[7] = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  a1[8] = *a3;
  uint64_t v6 = a3[1];
  a1[9] = v6;
  if (v6) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
  }
  a1[10] = *a4;
  uint64_t v7 = a4[1];
  a1[11] = v7;
  if (v7) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v7 + 8), 1uLL, memory_order_relaxed);
  }
  *((_OWORD *)a1 + 6) = xmmword_101D53510;
  *((_OWORD *)a1 + 7) = unk_101D53520;
  *((_OWORD *)a1 + _Block_object_dispose(&STACK[0x7E0], 8) = xmmword_101D53530;
  *(_OWORD *)((char *)a1 + 140) = *(long long *)((char *)&xmmword_101D53530 + 12);
  *((_OWORD *)a1 + 13) = 0u;
  *((_OWORD *)a1 + 14) = 0u;
  *((_OWORD *)a1 + 15) = 0u;
  *(_OWORD *)((char *)a1 + 252) = 0u;
  *((_OWORD *)a1 + 17) = 0u;
  *((_OWORD *)a1 + 1_Block_object_dispose(&STACK[0x7E0], 8) = 0u;
  *(_OWORD *)((char *)a1 + 29_Block_object_dispose(&STACK[0x7E0], 8) = 0u;
  *(_OWORD *)((char *)a1 + 156) = 0u;
  *(_OWORD *)((char *)a1 + 172) = 0u;
  *((_DWORD *)a1 + 47) = 0;
  *((_OWORD *)a1 + 20) = xmmword_101D53480;
  *((_OWORD *)a1 + 21) = xmmword_101D53490;
  *((_OWORD *)a1 + 22) = xmmword_101D534A0;
  *((_OWORD *)a1 + 23) = xmmword_101D534B0;
  a1[48] = 0x404B800000000000;
  uint64_t v8 = sub_1000D3E78();
  sub_10006B564(v8, buf);
  int v9 = sub_1000A699C(*(uint64_t *)&buf[0], "HRR_MaxDiffPeakHRMaxRecoveryHR", a1 + 41);
  if (*((void *)&buf[0] + 1)) {
    sub_1000DB0A0(*((std::__shared_weak_count **)&buf[0] + 1));
  }
  if (v9)
  {
    if (qword_1024192C0 != -1) {
      dispatch_once(&qword_1024192C0, &stru_1022D40E8);
    }
    unint64_t v10 = qword_1024192C8;
    if (os_log_type_enabled((os_log_t)qword_1024192C8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v11 = a1[41];
      LODWORD(buf[0]) = 134349056;
      *(void *)((char *)buf + 4) = v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Estimator,fMaxDiffPeakHRMaxRecoveryHR overridden (%{public}f)", (uint8_t *)buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024192C0 != -1) {
        dispatch_once(&qword_1024192C0, &stru_1022D40E8);
      }
      __int16 v37 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "CLHRRecoveryEstimator::CLHRRecoveryEstimator(std::shared_ptr<CLHRRecoveryInputHRRecorderDb>, std::shared_ptr<CLHRRecoveryInputWRRecorderDb>, std::shared_ptr<CLHRRecoverySessionRecorderDb>)", "%s\n", v37);
      if (v37 != (char *)buf) {
        free(v37);
      }
    }
  }
  uint64_t v12 = sub_1000D3E78();
  sub_10006B564(v12, buf);
  int v13 = sub_1000A699C(*(uint64_t *)&buf[0], "HRR_MaxDiffSteadyStateHRMinRecoveryHR", a1 + 42);
  if (*((void *)&buf[0] + 1)) {
    sub_1000DB0A0(*((std::__shared_weak_count **)&buf[0] + 1));
  }
  if (v13)
  {
    if (qword_1024192C0 != -1) {
      dispatch_once(&qword_1024192C0, &stru_1022D40E8);
    }
    BOOL v14 = qword_1024192C8;
    if (os_log_type_enabled((os_log_t)qword_1024192C8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v15 = a1[42];
      LODWORD(buf[0]) = 134349056;
      *(void *)((char *)buf + 4) = v15;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "Estimator,fMaxDiffSteadyStateHRMinRecoveryHR overridden (%{public}f)", (uint8_t *)buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024192C0 != -1) {
        dispatch_once(&qword_1024192C0, &stru_1022D40E8);
      }
      uint64_t v38 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "CLHRRecoveryEstimator::CLHRRecoveryEstimator(std::shared_ptr<CLHRRecoveryInputHRRecorderDb>, std::shared_ptr<CLHRRecoveryInputWRRecorderDb>, std::shared_ptr<CLHRRecoverySessionRecorderDb>)", "%s\n", v38);
      if (v38 != (char *)buf) {
        free(v38);
      }
    }
  }
  uint64_t v16 = sub_1000D3E78();
  sub_10006B564(v16, buf);
  int v17 = sub_1000A699C(*(uint64_t *)&buf[0], "HRR_PeakHRExertionThreshold", a1 + 43);
  if (*((void *)&buf[0] + 1)) {
    sub_1000DB0A0(*((std::__shared_weak_count **)&buf[0] + 1));
  }
  if (v17)
  {
    if (qword_1024192C0 != -1) {
      dispatch_once(&qword_1024192C0, &stru_1022D40E8);
    }
    BOOL v18 = qword_1024192C8;
    if (os_log_type_enabled((os_log_t)qword_1024192C8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v19 = a1[43];
      LODWORD(buf[0]) = 134349056;
      *(void *)((char *)buf + 4) = v19;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "Estimator,fPeakHRExertionThreshold overridden (%{public}f)", (uint8_t *)buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024192C0 != -1) {
        dispatch_once(&qword_1024192C0, &stru_1022D40E8);
      }
      __int16 v39 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "CLHRRecoveryEstimator::CLHRRecoveryEstimator(std::shared_ptr<CLHRRecoveryInputHRRecorderDb>, std::shared_ptr<CLHRRecoveryInputWRRecorderDb>, std::shared_ptr<CLHRRecoverySessionRecorderDb>)", "%s\n", v39);
      if (v39 != (char *)buf) {
        free(v39);
      }
    }
  }
  uint64_t v20 = sub_1000D3E78();
  sub_10006B564(v20, buf);
  int v21 = sub_1000A699C(*(uint64_t *)&buf[0], "HRR_MinDiffPeakHRSteadyStateHR", a1 + 44);
  if (*((void *)&buf[0] + 1)) {
    sub_1000DB0A0(*((std::__shared_weak_count **)&buf[0] + 1));
  }
  if (v21)
  {
    if (qword_1024192C0 != -1) {
      dispatch_once(&qword_1024192C0, &stru_1022D40E8);
    }
    uint64_t v22 = qword_1024192C8;
    if (os_log_type_enabled((os_log_t)qword_1024192C8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v23 = a1[44];
      LODWORD(buf[0]) = 134349056;
      *(void *)((char *)buf + 4) = v23;
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "Estimator,fMinDiffPeakHRSteadyStateHR overridden (%{public}f)", (uint8_t *)buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024192C0 != -1) {
        dispatch_once(&qword_1024192C0, &stru_1022D40E8);
      }
      __int16 v40 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "CLHRRecoveryEstimator::CLHRRecoveryEstimator(std::shared_ptr<CLHRRecoveryInputHRRecorderDb>, std::shared_ptr<CLHRRecoveryInputWRRecorderDb>, std::shared_ptr<CLHRRecoverySessionRecorderDb>)", "%s\n", v40);
      if (v40 != (char *)buf) {
        free(v40);
      }
    }
  }
  uint64_t v24 = sub_1000D3E78();
  sub_10006B564(v24, buf);
  int v25 = sub_1000A699C(*(uint64_t *)&buf[0], "HRR_MinExplainedVarianceScore", a1 + 46);
  if (*((void *)&buf[0] + 1)) {
    sub_1000DB0A0(*((std::__shared_weak_count **)&buf[0] + 1));
  }
  if (v25)
  {
    if (qword_1024192C0 != -1) {
      dispatch_once(&qword_1024192C0, &stru_1022D40E8);
    }
    int v26 = qword_1024192C8;
    if (os_log_type_enabled((os_log_t)qword_1024192C8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v27 = a1[46];
      LODWORD(buf[0]) = 134349056;
      *(void *)((char *)buf + 4) = v27;
      _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "Estimator,fMinExplainedVarianceScore overridden (%{public}f)", (uint8_t *)buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024192C0 != -1) {
        dispatch_once(&qword_1024192C0, &stru_1022D40E8);
      }
      uint64_t v41 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "CLHRRecoveryEstimator::CLHRRecoveryEstimator(std::shared_ptr<CLHRRecoveryInputHRRecorderDb>, std::shared_ptr<CLHRRecoveryInputWRRecorderDb>, std::shared_ptr<CLHRRecoverySessionRecorderDb>)", "%s\n", v41);
      if (v41 != (char *)buf) {
        free(v41);
      }
    }
  }
  uint64_t v28 = sub_1000D3E78();
  sub_10006B564(v28, buf);
  int v29 = sub_1000A699C(*(uint64_t *)&buf[0], "HRR_MinAllowedEstimate", a1 + 47);
  if (*((void *)&buf[0] + 1)) {
    sub_1000DB0A0(*((std::__shared_weak_count **)&buf[0] + 1));
  }
  if (v29)
  {
    if (qword_1024192C0 != -1) {
      dispatch_once(&qword_1024192C0, &stru_1022D40E8);
    }
    uint64_t v30 = qword_1024192C8;
    if (os_log_type_enabled((os_log_t)qword_1024192C8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v31 = a1[47];
      LODWORD(buf[0]) = 134349056;
      *(void *)((char *)buf + 4) = v31;
      _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, "Estimator,fMinAllowedEstimate overridden (%{public}f)", (uint8_t *)buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024192C0 != -1) {
        dispatch_once(&qword_1024192C0, &stru_1022D40E8);
      }
      __int16 v42 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "CLHRRecoveryEstimator::CLHRRecoveryEstimator(std::shared_ptr<CLHRRecoveryInputHRRecorderDb>, std::shared_ptr<CLHRRecoveryInputWRRecorderDb>, std::shared_ptr<CLHRRecoverySessionRecorderDb>)", "%s\n", v42);
      if (v42 != (char *)buf) {
        free(v42);
      }
    }
  }
  uint64_t v32 = sub_1000D3E78();
  sub_10006B564(v32, buf);
  int v33 = sub_1000A699C(*(uint64_t *)&buf[0], "HRR_MaxAllowedEstimate", a1 + 48);
  if (*((void *)&buf[0] + 1)) {
    sub_1000DB0A0(*((std::__shared_weak_count **)&buf[0] + 1));
  }
  if (v33)
  {
    if (qword_1024192C0 != -1) {
      dispatch_once(&qword_1024192C0, &stru_1022D40E8);
    }
    uint64_t v34 = qword_1024192C8;
    if (os_log_type_enabled((os_log_t)qword_1024192C8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v35 = a1[48];
      LODWORD(buf[0]) = 134349056;
      *(void *)((char *)buf + 4) = v35;
      _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, "Estimator,fMaxAllowedEstimate overridden (%{public}f)", (uint8_t *)buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024192C0 != -1) {
        dispatch_once(&qword_1024192C0, &stru_1022D40E8);
      }
      int v43 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "CLHRRecoveryEstimator::CLHRRecoveryEstimator(std::shared_ptr<CLHRRecoveryInputHRRecorderDb>, std::shared_ptr<CLHRRecoveryInputWRRecorderDb>, std::shared_ptr<CLHRRecoverySessionRecorderDb>)", "%s\n", v43);
      if (v43 != (char *)buf) {
        free(v43);
      }
    }
  }
  return a1;
}

void sub_1009280D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v16 = (std::__shared_weak_count *)v14[11];
  if (v16) {
    sub_1000DB0A0(v16);
  }
  int v17 = (std::__shared_weak_count *)v14[9];
  if (v17) {
    sub_1000DB0A0(v17);
  }
  BOOL v18 = (std::__shared_weak_count *)v14[7];
  if (v18) {
    sub_1000DB0A0(v18);
  }
  _Unwind_Resume(exception_object);
}

void sub_100928170(uint64_t a1, long long *a2)
{
  long long v3 = *a2;
  long long v4 = a2[1];
  long long v5 = a2[2];
  *(_OWORD *)(a1 + 140) = *(long long *)((char *)a2 + 44);
  *(_OWORD *)(a1 + 112) = v4;
  *(_OWORD *)(a1 + 12_Block_object_dispose(&STACK[0x7E0], 8) = v5;
  *(_OWORD *)(a1 + 96) = v3;
  if (qword_1024192C0 != -1) {
    dispatch_once(&qword_1024192C0, &stru_1022D40E8);
  }
  uint64_t v6 = qword_1024192C8;
  if (os_log_type_enabled((os_log_t)qword_1024192C8, OS_LOG_TYPE_DEBUG))
  {
    int v7 = *(unsigned __int8 *)(a1 + 152);
    double v8 = *(float *)(a1 + 116);
    int v9 = *(_DWORD *)(a1 + 100);
    int v10 = *(unsigned __int8 *)(a1 + 153);
    double v11 = *(float *)(a1 + 104);
    int v12 = *(unsigned __int8 *)(a1 + 154);
    double v13 = *(float *)(a1 + 108);
    int v14 = *(unsigned __int8 *)(a1 + 144);
    *(_DWORD *)uint64_t buf = 67241985;
    int v17 = v7;
    __int16 v18 = 2049;
    double v19 = v8;
    __int16 v20 = 1025;
    int v21 = v9;
    __int16 v22 = 1026;
    int v23 = v10;
    __int16 v24 = 2049;
    double v25 = v11;
    __int16 v26 = 1026;
    int v27 = v12;
    __int16 v28 = 2049;
    double v29 = v13;
    __int16 v30 = 1025;
    int v31 = v14;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Estimator,IsAgeSet,%{public}d,Age,%{private}f,BiologicalSex,%{private}d,IsHeightSet,%{public}d,Height,%{private}f,IsWeightSet,%{public}d,Weight,%{private}f,BetaBlockerUse,%{private}d", buf, 0x3Eu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024192C0 != -1) {
      dispatch_once(&qword_1024192C0, &stru_1022D40E8);
    }
    uint64_t v15 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLHRRecoveryEstimator::feedBodyMetrics(const CLBodyMetrics &)", "%s\n", v15);
    if (v15 != (char *)buf) {
      free(v15);
    }
  }
}

void sub_10092840C(uint64_t a1, float a2)
{
  if (qword_1024192C0 != -1) {
    dispatch_once(&qword_1024192C0, &stru_1022D40E8);
  }
  long long v4 = qword_1024192C8;
  if (os_log_type_enabled((os_log_t)qword_1024192C8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 134283521;
    double v8 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Estimator,restingHeartRateSevenDay,%{private}f", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024192C0 != -1) {
      dispatch_once(&qword_1024192C0, &stru_1022D40E8);
    }
    double v5 = a2;
    uint64_t v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLHRRecoveryEstimator::feedRestingHeartRate(float)", "%s\n", v6);
    if (v6 != (char *)buf) {
      free(v6);
    }
  }
  else
  {
    double v5 = a2;
  }
  *(double *)(a1 + 320) = v5;
}

void sub_1009285D4(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a1 + 156))
  {
    if (qword_1024192C0 != -1) {
      dispatch_once(&qword_1024192C0, &stru_1022D40E8);
    }
    long long v4 = qword_1024192C8;
    if (os_log_type_enabled((os_log_t)qword_1024192C8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = *(void *)(a2 + 40);
      uint64_t v6 = *(void *)(a2 + 8);
      uint64_t v7 = *(void *)(a2 + 16);
      *(_DWORD *)uint64_t buf = 134284033;
      *(void *)&uint8_t buf[4] = v5;
      *(_WORD *)&unsigned char buf[12] = 2049;
      *(void *)&buf[14] = v6;
      *(_WORD *)&buf[22] = 2049;
      *(void *)&buf[24] = v7;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Estimator,startTime,%{private}f,hr,%{private}f,hrConfidence,%{private}f", buf, 0x20u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024192C0 != -1) {
        dispatch_once(&qword_1024192C0, &stru_1022D40E8);
      }
      double v8 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLHRRecoveryEstimator::feedStreamingHeartRate(const CLCatherineData &)", "%s\n", v8);
      if (v8 != buf) {
        free(v8);
      }
    }
    sub_1009287FC(a1, 0, *(double *)(a2 + 40));
    if (*(_DWORD *)(a1 + 156))
    {
      *(void *)uint64_t buf = 0;
      *(void *)&uint8_t buf[8] = *(void *)(a2 + 40);
      *(_OWORD *)&uint8_t buf[16] = *(_OWORD *)(a2 + 8);
      sub_101437110(*(void *)(a1 + 48), (uint64_t)buf);
    }
  }
}

void sub_1009287FC(uint64_t a1, int a2, double a3)
{
  if (a2 == 1)
  {
    uint64_t v6 = (double *)(a1 + 304);
LABEL_5:
    *uint64_t v6 = a3;
    double Current = CFAbsoluteTimeGetCurrent();
    int v8 = *(_DWORD *)(a1 + 156);
    if (v8 == 3)
    {
      if (*(double *)(a1 + 296) - *(double *)(a1 + 184) <= 180.0) {
        return;
      }
      if (qword_1024192C0 != -1) {
        dispatch_once(&qword_1024192C0, &stru_1022D40E8);
      }
      int v21 = qword_1024192C8;
      if (os_log_type_enabled((os_log_t)qword_1024192C8, OS_LOG_TYPE_DEFAULT))
      {
        double v22 = *(double *)(a1 + 184);
        *(_DWORD *)uint64_t buf = 134283777;
        double v37 = v22;
        __int16 v38 = 2049;
        *(void *)__int16 v39 = 0x4066800000000000;
        _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "Estimator: Workout paused from %{private}f, exceeding max pause duration:%{private}.2f seconds, need to unregister HR notification", buf, 0x16u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024192C0 != -1) {
          dispatch_once(&qword_1024192C0, &stru_1022D40E8);
        }
        int v31 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLHRRecoveryEstimator::evaluateForSessionEnd(CFAbsoluteTime, HRRecoveryInputType)", "%s\n", v31);
        if (v31 != (char *)buf) {
          free(v31);
        }
      }
      int v17 = 0;
      BOOL v14 = 0;
      int v18 = 0;
      *(_DWORD *)(a1 + 156) = 4;
    }
    else
    {
      if (v8 != 2) {
        return;
      }
      double v9 = Current;
      if (*(double *)(a1 + 176) + 178.0 >= a3) {
        return;
      }
      if (qword_1024192C0 != -1) {
        dispatch_once(&qword_1024192C0, &stru_1022D40E8);
      }
      int v10 = qword_1024192C8;
      if (os_log_type_enabled((os_log_t)qword_1024192C8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = 134284033;
        double v37 = a3;
        __int16 v38 = 2049;
        *(double *)__int16 v39 = v9;
        *(_WORD *)&v39[8] = 1025;
        *(_DWORD *)&v39[10] = a2;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Estimator: Input sample time:%{private}f, now:%{private}f, inputType:%{private}d ", buf, 0x1Cu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024192C0 != -1) {
          dispatch_once(&qword_1024192C0, &stru_1022D40E8);
        }
        __int16 v30 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLHRRecoveryEstimator::evaluateForSessionEnd(CFAbsoluteTime, HRRecoveryInputType)", "%s\n", v30);
        if (v30 != (char *)buf) {
          free(v30);
        }
      }
      double v11 = *(double *)(a1 + 176) + 178.0;
      double v12 = *(double *)(a1 + 296);
      double v13 = *(double *)(a1 + 304);
      BOOL v14 = v13 > v11;
      if (v9 - a3 > 185.0)
      {
        if (qword_1024192C0 != -1) {
          dispatch_once(&qword_1024192C0, &stru_1022D40E8);
        }
        uint64_t v15 = qword_1024192C8;
        if (os_log_type_enabled((os_log_t)qword_1024192C8, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)uint64_t buf = 134284289;
          double v37 = a3;
          __int16 v38 = 1025;
          *(_DWORD *)__int16 v39 = a2;
          *(_WORD *)&v39[4] = 2049;
          *(double *)&v39[6] = v9;
          __int16 v40 = 2049;
          double v41 = v9 - a3;
          _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "Estimator: Input sample time exceeds allowed delay, sample time:%{private}f, inputType:%{private}d, now:%{private}f, delay:%{private}f ", buf, 0x26u);
        }
        if (sub_10013D1A0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024192C0 != -1) {
            dispatch_once(&qword_1024192C0, &stru_1022D40E8);
          }
          uint64_t v32 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 0, "void CLHRRecoveryEstimator::evaluateForSessionEnd(CFAbsoluteTime, HRRecoveryInputType)", "%s\n", v32);
          if (v32 != (char *)buf) {
            free(v32);
          }
        }
      }
      if (v13 > v11 && v12 <= v11)
      {
        if (v9 - *(double *)(a1 + 296) <= 240.0)
        {
          int v17 = 0;
          int v18 = 0;
          BOOL v14 = 1;
          goto LABEL_58;
        }
        if (qword_1024192C0 != -1) {
          dispatch_once(&qword_1024192C0, &stru_1022D40E8);
        }
        int v23 = qword_1024192C8;
        if (os_log_type_enabled((os_log_t)qword_1024192C8, OS_LOG_TYPE_ERROR))
        {
          double v24 = *(double *)(a1 + 296);
          *(_DWORD *)uint64_t buf = 134283777;
          double v37 = v9 - v24;
          __int16 v38 = 2049;
          *(double *)__int16 v39 = v24;
          _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_ERROR, "Estimator: HR samples not received for %{private}f seconds, lastHRTime:%{private}f)", buf, 0x16u);
        }
        if (sub_10013D1A0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024192C0 != -1) {
            dispatch_once(&qword_1024192C0, &stru_1022D40E8);
          }
          uint64_t v35 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 0, "void CLHRRecoveryEstimator::evaluateForSessionEnd(CFAbsoluteTime, HRRecoveryInputType)", "%s\n", v35);
          if (v35 != (char *)buf) {
            free(v35);
          }
        }
        int v18 = 0;
        int v17 = 1;
        BOOL v14 = 1;
      }
      else
      {
        int v17 = 0;
        if (v12 <= v11)
        {
          int v18 = 0;
LABEL_58:
          if (v14 && v17 | v18)
          {
            if (v18)
            {
              if (qword_1024192C0 != -1) {
                dispatch_once(&qword_1024192C0, &stru_1022D40E8);
              }
              int v27 = qword_1024192C8;
              if (os_log_type_enabled((os_log_t)qword_1024192C8, OS_LOG_TYPE_DEFAULT))
              {
                double v28 = *(double *)(a1 + 168);
                uint64_t v29 = *(void *)(a1 + 176);
                *(_DWORD *)uint64_t buf = 134283777;
                double v37 = v28;
                __int16 v38 = 2049;
                *(void *)__int16 v39 = v29;
                _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "Estimator: Ending session due to reaching the end of the post activity period (sessionStartTime:%{private}f, activityEndTime:%{private}f)", buf, 0x16u);
              }
              if (sub_10013D1A0(115, 2))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1024192C0 != -1) {
                  dispatch_once(&qword_1024192C0, &stru_1022D40E8);
                }
                int v33 = (char *)_os_log_send_and_compose_impl();
                sub_1004BA5E4("Generic", 1, 0, 2, "void CLHRRecoveryEstimator::evaluateForSessionEnd(CFAbsoluteTime, HRRecoveryInputType)", "%s\n", v33);
                if (v33 != (char *)buf) {
                  free(v33);
                }
              }
            }
            sub_10092AA14(a1, v18);
          }
          return;
        }
        int v18 = 1;
      }
    }
    if (*(void *)(a1 + 24) && !*(unsigned char *)(a1 + 312))
    {
      if (qword_1024192C0 != -1) {
        dispatch_once(&qword_1024192C0, &stru_1022D40E8);
      }
      double v25 = qword_1024192C8;
      if (os_log_type_enabled((os_log_t)qword_1024192C8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "Estimator: Unregistering HR notification", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024192C0 != -1) {
          dispatch_once(&qword_1024192C0, &stru_1022D40E8);
        }
        uint64_t v34 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLHRRecoveryEstimator::evaluateForSessionEnd(CFAbsoluteTime, HRRecoveryInputType)", "%s\n", v34);
        if (v34 != (char *)buf) {
          free(v34);
        }
      }
      uint64_t v26 = sub_1000A6958();
      sub_1004CF7DC(v26, "HRRecoveryWorkoutSessionCachedId", 0xFFFFFFFFLL);
      *(unsigned char *)(a1 + 312) = 1;
      (*(void (**)(void))(a1 + 24))(*(void *)(a1 + 40));
    }
    goto LABEL_58;
  }
  if (!a2)
  {
    uint64_t v6 = (double *)(a1 + 296);
    goto LABEL_5;
  }
  if (qword_1024192C0 != -1) {
    dispatch_once(&qword_1024192C0, &stru_1022D40E8);
  }
  double v19 = qword_1024192C8;
  if (os_log_type_enabled((os_log_t)qword_1024192C8, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)uint64_t buf = 134283777;
    double v37 = a3;
    __int16 v38 = 1025;
    *(_DWORD *)__int16 v39 = a2;
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "Estimator: Received input sample of unknown type, event time:%{private}f, inputType:%{private}d ", buf, 0x12u);
  }
  if (sub_10013D1A0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024192C0 != -1) {
      dispatch_once(&qword_1024192C0, &stru_1022D40E8);
    }
    __int16 v20 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "void CLHRRecoveryEstimator::evaluateForSessionEnd(CFAbsoluteTime, HRRecoveryInputType)", "%s\n", v20);
    if (v20 != (char *)buf) {
      free(v20);
    }
  }
}

void sub_1009293B4(uint64_t a1, int a2, int a3, double a4, double a5, double a6, double a7)
{
  if (*(_DWORD *)(a1 + 156))
  {
    if (qword_1024192C0 != -1) {
      dispatch_once(&qword_1024192C0, &stru_1022D40E8);
    }
    BOOL v14 = qword_1024192C8;
    if (os_log_type_enabled((os_log_t)qword_1024192C8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 134284801;
      *(double *)&uint8_t buf[4] = a4;
      *(_WORD *)&unsigned char buf[12] = 2049;
      *(double *)&buf[14] = a5;
      *(_WORD *)&buf[22] = 1025;
      int v17 = a2;
      __int16 v18 = 2049;
      *(double *)double v19 = a6;
      *(_WORD *)&v19[8] = 2049;
      double v20 = a7;
      LOWORD(v21[0]) = 1025;
      *(_DWORD *)((char *)v21 + 2) = a3;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "Estimator,computeTime,%{private}f,wrMets,%{private}f,gradeType,%{private}d,grade,%{private}f,userMets,%{private}f,userMetsSource,%{private}d", buf, 0x36u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024192C0 != -1) {
        dispatch_once(&qword_1024192C0, &stru_1022D40E8);
      }
      uint64_t v15 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLHRRecoveryEstimator::feedCalorieUpdate(CFAbsoluteTime, double, GradeType, double, double, CLMetsSource)", "%s\n", v15);
      if (v15 != buf) {
        free(v15);
      }
    }
    sub_1009287FC(a1, 1, a4);
    if (*(_DWORD *)(a1 + 156))
    {
      *(void *)uint64_t buf = 0;
      *(double *)&uint8_t buf[8] = a4;
      *(double *)&uint8_t buf[16] = a5;
      int v17 = a2;
      *(double *)&void v19[2] = a6;
      double v20 = a7;
      v21[0] = a3;
      sub_1010EE5C4(*(void *)(a1 + 64), (uint64_t)buf);
    }
  }
}

void sub_100929630(uint64_t a1, uint64_t a2)
{
  if (qword_1024192C0 != -1) {
    dispatch_once(&qword_1024192C0, &stru_1022D40E8);
  }
  long long v4 = qword_1024192C8;
  if (os_log_type_enabled((os_log_t)qword_1024192C8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(char **)(a2 + 16);
    uint64_t v6 = *(void *)(a2 + 112);
    *(_DWORD *)uint64_t buf = 134283777;
    double v19 = v5;
    __int16 v20 = 2049;
    uint64_t v21 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Estimator,workoutEvent,%{private}ld,workoutType,%{private}ld", buf, 0x16u);
  }
  uint64_t v7 = sub_10013D1A0(115, 2);
  if (v7)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024192C0 != -1) {
      dispatch_once(&qword_1024192C0, &stru_1022D40E8);
    }
    uint64_t v13 = *(void *)(a2 + 16);
    uint64_t v14 = *(void *)(a2 + 112);
    *(_DWORD *)uuid_string_t out = 134283777;
    *(void *)&out[4] = v13;
    *(_WORD *)&out[12] = 2049;
    *(void *)&out[14] = v14;
    uint64_t v15 = (char *)_os_log_send_and_compose_impl();
    uint64_t v7 = sub_1004BA5E4("Generic", 1, 0, 2, "void CLHRRecoveryEstimator::feedWorkoutEvent(const CLMotionStateMediator_Type::WorkoutEvent &)", "%s\n", v15);
    if (v15 != (char *)buf) {
      free(v15);
    }
  }
  uint64_t v8 = *(void *)(a2 + 16);
  switch(v8)
  {
    case 13:
      unint64_t v9 = *(void *)(a2 + 112);
      if ((v9 <= 0x18 && ((1 << v9) & 0x1028000) != 0 || sub_100929B08(v7, v9)) && !*(void *)(a2 + 224)) {
        sub_100929CE0(a1, (const unsigned __int8 *)a2);
      }
      *(unsigned char *)(a1 + 313) = uuid_compare((const unsigned __int8 *)(a2 + 80), (const unsigned __int8 *)(a2 + 64)) != 0;
      return;
    case 14:
      return;
    case 15:
      sub_10092A3B0(a1, a2);
      return;
    case 16:
      if (*(_DWORD *)(a1 + 156) == 1)
      {
        *(_DWORD *)(a1 + 156) = 3;
        *(void *)(a1 + 184) = *(void *)(a2 + 24);
      }
      return;
    case 17:
      sub_10092A848(a1);
      return;
    default:
      if (v8 || !*(unsigned char *)(a1 + 313)) {
        return;
      }
      uint64_t v10 = *(void *)(a2 + 112);
      if (v10 <= 23)
      {
        if (v10 != 15 && v10 != 17) {
          goto LABEL_27;
        }
        goto LABEL_26;
      }
      if (v10 == 33) {
        return;
      }
      if (v10 == 24)
      {
LABEL_26:
        if (!*(void *)(a2 + 224))
        {
          sub_100929CE0(a1, (const unsigned __int8 *)a2);
          return;
        }
      }
LABEL_27:
      if (*(_DWORD *)(a1 + 156)
        && uuid_compare((const unsigned __int8 *)(a2 + 64), (const unsigned __int8 *)(a1 + 192)))
      {
        memset(out, 0, sizeof(out));
        uuid_unparse((const unsigned __int8 *)(a1 + 192), out);
        if (qword_1024192C0 != -1) {
          dispatch_once(&qword_1024192C0, &stru_1022D40E8);
        }
        double v11 = qword_1024192C8;
        if (os_log_type_enabled((os_log_t)qword_1024192C8, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v12 = *(void *)(a2 + 112);
          *(_DWORD *)uint64_t buf = 136380931;
          double v19 = out;
          __int16 v20 = 2049;
          uint64_t v21 = v12;
          _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "Estimator: Terminating session (id,%{private}s) due to new multisport workout leg starting (invalid workout type,%{private}ld).", buf, 0x16u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024192C0 != -1) {
            dispatch_once(&qword_1024192C0, &stru_1022D40E8);
          }
          uint64_t v16 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLHRRecoveryEstimator::feedWorkoutEvent(const CLMotionStateMediator_Type::WorkoutEvent &)", "%s\n", v16);
          if (v16 != (char *)buf) {
            free(v16);
          }
        }
        sub_10092AA14(a1, 0);
      }
      return;
  }
}

uint64_t sub_100929AEC(uint64_t a1, unint64_t a2)
{
  return (a2 < 0x19) & (0x1028000u >> a2);
}

BOOL sub_100929B08(uint64_t a1, unint64_t a2)
{
  if (objc_opt_class()
    && (objc_msgSend(+[MCProfileConnection sharedConnection](MCProfileConnection, "sharedConnection"), "isHealthDataSubmissionAllowed") & 1) != 0)
  {
    if (a2 <= 0x12) {
      return (0x51230u >> a2) & 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    if (qword_1024192C0 != -1) {
      dispatch_once(&qword_1024192C0, &stru_1022D40E8);
    }
    long long v4 = qword_1024192C8;
    if (os_log_type_enabled((os_log_t)qword_1024192C8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "HRRecovery, not collecting analytics, no IHA permission", buf, 2u);
    }
    BOOL result = sub_10013D1A0(115, 2);
    if (result)
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024192C0 != -1) {
        dispatch_once(&qword_1024192C0, &stru_1022D40E8);
      }
      uint64_t v5 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLHRRecoveryEstimator::isValidWorkoutTypeForHRRecoveryCoreAnalytics(CMWorkoutType) const", "%s\n", v5);
      if (v5 != (char *)buf) {
        free(v5);
      }
      return 0;
    }
  }
  return result;
}

BOOL sub_100929CD4(uint64_t a1, uint64_t a2)
{
  return a2 == 0;
}

void sub_100929CE0(uint64_t a1, const unsigned __int8 *a2)
{
  memset(out, 0, 37);
  long long v4 = a2 + 64;
  uuid_unparse(a2 + 64, out);
  if (!*(_DWORD *)(a1 + 156)) {
    goto LABEL_17;
  }
  if (uuid_compare(v4, (const unsigned __int8 *)(a1 + 192)))
  {
    memset(v26, 0, sizeof(v26));
    uuid_unparse((const unsigned __int8 *)(a1 + 192), v26);
    unint64_t v5 = *((void *)a2 + 14);
    if (v5 <= 0x18 && ((1 << v5) & 0x1028000) != 0)
    {
      if (qword_1024192C0 != -1) {
        dispatch_once(&qword_1024192C0, &stru_1022D40E8);
      }
      uint64_t v6 = qword_1024192C8;
      if (os_log_type_enabled((os_log_t)qword_1024192C8, OS_LOG_TYPE_DEFAULT))
      {
        int v7 = *(_DWORD *)(a1 + 156);
        *(_DWORD *)uint64_t buf = 136381187;
        double v37 = v26;
        __int16 v38 = 1025;
        *(_DWORD *)__int16 v39 = v7;
        *(_WORD *)&v39[4] = 2081;
        *(void *)&v39[6] = out;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Estimator: Terminating session (id,%{private}s,state,%{private}d) in favor of newly started session (id,%{private}s)", buf, 0x1Cu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024192C0 != -1) {
          dispatch_once(&qword_1024192C0, &stru_1022D40E8);
        }
        int v21 = *(_DWORD *)(a1 + 156);
        int v32 = 136381187;
        int v33 = v26;
        __int16 v34 = 1025;
        *(_DWORD *)uint64_t v35 = v21;
        *(_WORD *)&v35[4] = 2081;
        *(void *)&v35[6] = out;
        double v22 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLHRRecoveryEstimator::beginWorkout(const CLMotionStateMediator_Type::WorkoutEvent &)", "%s\n", v22);
        if (v22 != (char *)buf) {
          free(v22);
        }
      }
      sub_10092AA14(a1, 0);
    }
    else
    {
      if (qword_1024192C0 != -1) {
        dispatch_once(&qword_1024192C0, &stru_1022D40E8);
      }
      uint64_t v8 = qword_1024192C8;
      if (os_log_type_enabled((os_log_t)qword_1024192C8, OS_LOG_TYPE_DEFAULT))
      {
        int v9 = *(_DWORD *)(a1 + 156);
        uint64_t v10 = *(void *)(a1 + 208);
        *(_DWORD *)uint64_t buf = 136381187;
        double v37 = v26;
        __int16 v38 = 1025;
        *(_DWORD *)__int16 v39 = v9;
        *(_WORD *)&v39[4] = 2048;
        *(void *)&v39[6] = v10;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Estimator: Session in progress (id,%{private}s,state,%{private}d,workoutType,%ld), not starting a new session", buf, 0x1Cu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024192C0 != -1) {
          dispatch_once(&qword_1024192C0, &stru_1022D40E8);
        }
        int v23 = *(_DWORD *)(a1 + 156);
        uint64_t v24 = *(void *)(a1 + 208);
        int v32 = 136381187;
        int v33 = v26;
        __int16 v34 = 1025;
        *(_DWORD *)uint64_t v35 = v23;
        *(_WORD *)&v35[4] = 2048;
        *(void *)&v35[6] = v24;
        double v25 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLHRRecoveryEstimator::beginWorkout(const CLMotionStateMediator_Type::WorkoutEvent &)", "%s\n", v25);
        if (v25 != (char *)buf) {
          free(v25);
        }
      }
    }
  }
  if (!*(_DWORD *)(a1 + 156))
  {
LABEL_17:
    memset(v26, 0, 32);
    long long v27 = 0u;
    long long v28 = 0u;
    memset(v29, 0, sizeof(v29));
    long long v30 = 0u;
    memset(v31, 0, sizeof(v31));
    BOOL v11 = uuid_compare(a2 + 80, v4) != 0;
    if (sub_10092AC20(*(void **)(a1 + 80), (uint64_t)v26) && !uuid_compare(v4, (const unsigned __int8 *)&v26[32]))
    {
      uint64_t v15 = *(void *)&v26[8];
      *(void *)(a1 + 160) = *(void *)v26;
      *(_OWORD *)(a1 + 192) = 0u;
      uint64_t v16 = v27;
      *(void *)(a1 + 16_Block_object_dispose(&STACK[0x7E0], 8) = v15;
      *(_OWORD *)(a1 + 176) = 0u;
      *(void *)(a1 + 20_Block_object_dispose(&STACK[0x7E0], 8) = v16;
      *(_OWORD *)(a1 + 216) = 0u;
      *(_OWORD *)(a1 + 232) = 0u;
      *(_OWORD *)(a1 + 24_Block_object_dispose(&STACK[0x7E0], 8) = 0u;
      *(_DWORD *)(a1 + 264) = 0;
      *(_OWORD *)(a1 + 272) = 0u;
      *(_OWORD *)(a1 + 28_Block_object_dispose(&STACK[0x7E0], 8) = 0u;
      *(_OWORD *)(a1 + 297) = 0u;
      *(unsigned char *)(a1 + 313) = v11;
      uuid_copy((unsigned __int8 *)(a1 + 192), v4);
    }
    else
    {
      uint64_t v12 = *(void *)a2;
      uint64_t v13 = sub_101014448(*((void *)a2 + 14), *((void *)a2 + 15));
      *(_OWORD *)(a1 + 192) = 0u;
      *(void *)(a1 + 160) = 0;
      *(void *)(a1 + 16_Block_object_dispose(&STACK[0x7E0], 8) = v12;
      *(_OWORD *)(a1 + 176) = 0u;
      *(void *)(a1 + 20_Block_object_dispose(&STACK[0x7E0], 8) = v13;
      *(_OWORD *)(a1 + 216) = 0u;
      *(_OWORD *)(a1 + 232) = 0u;
      *(_OWORD *)(a1 + 24_Block_object_dispose(&STACK[0x7E0], 8) = 0u;
      *(_DWORD *)(a1 + 264) = 0;
      *(_OWORD *)(a1 + 272) = 0u;
      *(_OWORD *)(a1 + 28_Block_object_dispose(&STACK[0x7E0], 8) = 0u;
      *(_OWORD *)(a1 + 297) = 0u;
      *(unsigned char *)(a1 + 313) = v11;
      uuid_copy((unsigned __int8 *)(a1 + 192), v4);
      unint64_t v14 = *((void *)a2 + 14);
      if (v14 <= 0x18 && ((1 << v14) & 0x1028000) != 0) {
        sub_100B42540(*(void **)(a1 + 80), (double *)(a1 + 160));
      }
    }
    *(_DWORD *)(a1 + 156) = 1;
    if (*(void *)a1) {
      (*(void (**)(void))a1)(*(void *)(a1 + 40));
    }
    if (qword_1024192C0 != -1) {
      dispatch_once(&qword_1024192C0, &stru_1022D40E8);
    }
    int v17 = qword_1024192C8;
    if (os_log_type_enabled((os_log_t)qword_1024192C8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v18 = *(void *)(a1 + 168);
      *(_DWORD *)uint64_t buf = 136380931;
      double v37 = out;
      __int16 v38 = 2049;
      *(void *)__int16 v39 = v18;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "Estimator: Beginning session due to new workout (id:%{private}s, sessionStartTime:%{private}f)", buf, 0x16u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024192C0 != -1) {
        dispatch_once(&qword_1024192C0, &stru_1022D40E8);
      }
      uint64_t v19 = *(void *)(a1 + 168);
      int v32 = 136380931;
      int v33 = out;
      __int16 v34 = 2049;
      *(void *)uint64_t v35 = v19;
      __int16 v20 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLHRRecoveryEstimator::beginWorkout(const CLMotionStateMediator_Type::WorkoutEvent &)", "%s\n", v20);
      if (v20 != (char *)buf) {
        free(v20);
      }
    }
  }
}

double sub_10092A3B0(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = *(_DWORD *)(a1 + 156);
  BOOL v3 = v2 > 4;
  int v4 = (1 << v2) & 0x1A;
  if (!v3 && v4 != 0)
  {
    uint64_t v8 = (const unsigned __int8 *)(a2 + 64);
    int v9 = (const unsigned __int8 *)(a1 + 192);
    if (uuid_compare((const unsigned __int8 *)(a2 + 64), (const unsigned __int8 *)(a1 + 192)))
    {
      memset(out, 0, 37);
      uuid_unparse(v9, out);
      memset(v20, 0, 37);
      uuid_unparse(v8, v20);
      if (qword_1024192C0 != -1) {
        dispatch_once(&qword_1024192C0, &stru_1022D40E8);
      }
      uint64_t v10 = qword_1024192C8;
      if (os_log_type_enabled((os_log_t)qword_1024192C8, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)uint64_t buf = 136380931;
        double v22 = out;
        __int16 v23 = 2081;
        uint64_t v24 = v20;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "Estimator: Unexpected Workout SessionId (expected,%{private}s,actual,%{private}s)", buf, 0x16u);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024192C0 != -1) {
          dispatch_once(&qword_1024192C0, &stru_1022D40E8);
        }
        uint64_t v18 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "void CLHRRecoveryEstimator::endWorkout(const CLMotionStateMediator_Type::WorkoutEvent &)", "%s\n", v18);
        if (v18 != (char *)buf) {
          free(v18);
        }
      }
      return sub_10092AA14(a1, 0);
    }
    else
    {
      double result = *(double *)(a2 + 24);
      *(double *)(a1 + 176) = result;
      unint64_t v12 = *(void *)(a2 + 112);
      if (v12 <= 0x18 && ((1 << v12) & 0x1028000) != 0)
      {
        uint64_t v13 = *(void **)(a1 + 80);
        if (*(void *)(a1 + 160)) {
          sub_100B422D4((uint64_t)v13);
        }
        else {
          sub_100B42540(v13, (double *)(a1 + 160));
        }
      }
      int v14 = *(_DWORD *)(a1 + 156);
      *(_DWORD *)(a1 + 156) = 2;
      if (v14 == 4)
      {
        return sub_10092AA14(a1, 1);
      }
      else
      {
        unint64_t v15 = *(void *)(a2 + 112);
        if (v15 <= 0x18 && ((1 << v15) & 0x1028000) != 0)
        {
          memset(out, 0, 37);
          uuid_unparse(v9, out);
          if (qword_1024192C0 != -1) {
            dispatch_once(&qword_1024192C0, &stru_1022D40E8);
          }
          uint64_t v16 = qword_1024192C8;
          if (os_log_type_enabled((os_log_t)qword_1024192C8, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)uint64_t buf = 136380675;
            double v22 = out;
            _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEBUG, "Estimator: Caching session id %{private}s.", buf, 0xCu);
          }
          if (sub_10013D1A0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1024192C0 != -1) {
              dispatch_once(&qword_1024192C0, &stru_1022D40E8);
            }
            *(_DWORD *)__int16 v20 = 136380675;
            *(void *)&v20[4] = out;
            uint64_t v19 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 2, "void CLHRRecoveryEstimator::endWorkout(const CLMotionStateMediator_Type::WorkoutEvent &)", "%s\n", v19);
            if (v19 != (char *)buf) {
              free(v19);
            }
          }
          uint64_t v17 = sub_1000A6958();
          sub_1004D34AC(v17, "HRRecoveryWorkoutSessionCachedId", out);
        }
      }
    }
  }
  return result;
}

uint64_t sub_10092A848(uint64_t result)
{
  if ((*(_DWORD *)(result + 156) - 3) <= 1)
  {
    uint64_t v1 = result;
    *(_DWORD *)(result + 156) = 1;
    *(void *)(result + 184) = 0;
    if (*(void *)(result + 32))
    {
      if (*(unsigned char *)(result + 312))
      {
        if (qword_1024192C0 != -1) {
          dispatch_once(&qword_1024192C0, &stru_1022D40E8);
        }
        unsigned int v2 = qword_1024192C8;
        if (os_log_type_enabled((os_log_t)qword_1024192C8, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)uint64_t buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Estimator: Reregistering HR notification on workout resume", buf, 2u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024192C0 != -1) {
            dispatch_once(&qword_1024192C0, &stru_1022D40E8);
          }
          BOOL v3 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLHRRecoveryEstimator::resumeWorkout(const CLMotionStateMediator_Type::WorkoutEvent &)", "%s\n", v3);
          if (v3 != (char *)buf) {
            free(v3);
          }
        }
        *(unsigned char *)(v1 + 312) = 0;
        return (*(uint64_t (**)(void))(v1 + 32))(*(void *)(v1 + 40));
      }
    }
  }
  return result;
}

double sub_10092AA14(uint64_t a1, int a2)
{
  if (a2) {
    sub_10092B2A8((id *)a1);
  }
  uint64_t v3 = sub_1000A6958();
  sub_1004CF7DC(v3, "HRRecoveryWorkoutSessionCachedId", 0xFFFFFFFFLL);
  if (*(void *)(a1 + 24) && !*(unsigned char *)(a1 + 312))
  {
    if (qword_1024192C0 != -1) {
      dispatch_once(&qword_1024192C0, &stru_1022D40E8);
    }
    int v4 = qword_1024192C8;
    if (os_log_type_enabled((os_log_t)qword_1024192C8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Estimator: Unregistering HR notification", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024192C0 != -1) {
        dispatch_once(&qword_1024192C0, &stru_1022D40E8);
      }
      uint64_t v8 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLHRRecoveryEstimator::endSession(BOOL)", "%s\n", v8);
      if (v8 != (char *)buf) {
        free(v8);
      }
    }
    *(unsigned char *)(a1 + 312) = 1;
    (*(void (**)(void))(a1 + 24))(*(void *)(a1 + 40));
  }
  unint64_t v5 = *(void (**)(void))(a1 + 8);
  if (v5) {
    v5(*(void *)(a1 + 40));
  }
  double result = 0.0;
  *(_OWORD *)(a1 + 160) = 0u;
  int v7 = (_OWORD *)(a1 + 160);
  *((_DWORD *)v7 - 1) = 0;
  v7[7] = 0u;
  v7[8] = 0u;
  *(_OWORD *)((char *)v7 + 13_Block_object_dispose(&STACK[0x7E0], 8) = 0u;
  v7[1] = 0u;
  void v7[2] = 0u;
  void v7[3] = 0u;
  v7[4] = 0u;
  v7[5] = 0u;
  *(_OWORD *)((char *)v7 + 92) = 0u;
  return result;
}

BOOL sub_10092AC20(void *a1, uint64_t a2)
{
  int v4 = a1 + 14;
  (*(void (**)(void *))(a1[14] + 16))(a1 + 14);
  LODWORD(a2) = (*(uint64_t (**)(void *, uint64_t))(*a1 + 104))(a1, a2);
  (*(void (**)(void *))(*v4 + 24))(v4);
  return a2 == 0;
}

void sub_10092ACF0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1019DB560((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10092AD04(uint64_t a1)
{
  memset(&__p, 0, sizeof(__p));
  uint64_t v2 = sub_1000A6958();
  if (!sub_1004D1284(v2, "HRRecoveryWorkoutSessionCachedId", &__p)) {
    goto LABEL_20;
  }
  if (qword_1024192C0 != -1) {
    dispatch_once(&qword_1024192C0, &stru_1022D40E8);
  }
  uint64_t v3 = qword_1024192C8;
  if (os_log_type_enabled((os_log_t)qword_1024192C8, OS_LOG_TYPE_DEFAULT))
  {
    p_p = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)uint64_t buf = 136380675;
    long long v27 = p_p;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Estimator: Found cached workout session %{private}s. Will attempt to recover.", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024192C0 != -1) {
      dispatch_once(&qword_1024192C0, &stru_1022D40E8);
    }
    uint64_t v13 = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      uint64_t v13 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    LODWORD(v17) = 136380675;
    *(void *)((char *)&v17 + 4) = v13;
    int v14 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLHRRecoveryEstimator::recoverSessionFromCache()", "%s\n", v14);
    if (v14 != (char *)buf) {
      free(v14);
    }
  }
  memset(uu, 0, sizeof(uu));
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    unint64_t v5 = &__p;
  }
  else {
    unint64_t v5 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  uuid_parse((const char *)v5, uu);
  long long v17 = 0u;
  long long v18 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  memset(v22, 0, sizeof(v22));
  long long v23 = 0u;
  memset(v24, 0, sizeof(v24));
  if (!sub_10092AC20(*(void **)(a1 + 80), (uint64_t)&v17) || uuid_compare(uu, v19))
  {
    if (qword_1024192C0 != -1) {
      dispatch_once(&qword_1024192C0, &stru_1022D40E8);
    }
    uint64_t v6 = qword_1024192C8;
    if (os_log_type_enabled((os_log_t)qword_1024192C8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Estimator: Cached session ID does not match most recent persisted session ID. Terminating recovery attempt.", buf, 2u);
    }
    if (!sub_10013D1A0(115, 2)) {
      goto LABEL_19;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1024192C0 != -1) {
      dispatch_once(&qword_1024192C0, &stru_1022D40E8);
    }
    unint64_t v15 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLHRRecoveryEstimator::recoverSessionFromCache()", "%s\n", v15);
    if (v15 == (char *)buf) {
      goto LABEL_19;
    }
    goto LABEL_41;
  }
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  uint64_t v9 = v18;
  if (Current > *(double *)&v18 + 178.0)
  {
    if (qword_1024192C0 != -1) {
      dispatch_once(&qword_1024192C0, &stru_1022D40E8);
    }
    uint64_t v10 = qword_1024192C8;
    if (os_log_type_enabled((os_log_t)qword_1024192C8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Estimator: Recovered workout session is stale, terminating recovery.", buf, 2u);
    }
    if (!sub_10013D1A0(115, 2)) {
      goto LABEL_19;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1024192C0 != -1) {
      dispatch_once(&qword_1024192C0, &stru_1022D40E8);
    }
    unint64_t v15 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLHRRecoveryEstimator::recoverSessionFromCache()", "%s\n", v15);
    if (v15 == (char *)buf) {
      goto LABEL_19;
    }
LABEL_41:
    free(v15);
LABEL_19:
    uint64_t v7 = sub_1000A6958();
    sub_1004CF7DC(v7, "HRRecoveryWorkoutSessionCachedId", 0xFFFFFFFFLL);
    goto LABEL_20;
  }
  uint64_t v11 = *((void *)&v17 + 1);
  uint64_t v12 = v20;
  *(void *)(a1 + 160) = v17;
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 16_Block_object_dispose(&STACK[0x7E0], 8) = v11;
  *(void *)(a1 + 176) = v9;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 20_Block_object_dispose(&STACK[0x7E0], 8) = v12;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 24_Block_object_dispose(&STACK[0x7E0], 8) = 0u;
  *(_DWORD *)(a1 + 264) = 0;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 28_Block_object_dispose(&STACK[0x7E0], 8) = 0u;
  *(_OWORD *)(a1 + 29_Block_object_dispose(&STACK[0x7E0], 8) = 0u;
  uuid_copy((unsigned __int8 *)(a1 + 192), uu);
  *(_DWORD *)(a1 + 156) = 2;
  if (*(void *)a1) {
    (*(void (**)(void))a1)(*(void *)(a1 + 40));
  }
LABEL_20:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_10092B274(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

id *sub_10092B2A8(id *result)
{
  if (*((_DWORD *)result + 39) != 2) {
    return result;
  }
  uint64_t v1 = (uint64_t)result;
  sub_1000E1294((uint64_t *)v47, (uint64_t)"CLHRRecoveryEstimator::estimateHeartRateRecovery", 0);
  double v3 = *(double *)(v1 + 168);
  double v2 = *(double *)(v1 + 176);
  double v25 = v2 + 178.0;
  LODWORD(v24) = 0;
  double v26 = 0.0;
  double v27 = v2 - v3;
  uint64_t v28 = *(void *)(v1 + 208);
  char v29 = *(unsigned char *)(v1 + 144);
  double v30 = v2;
  long long v31 = 0u;
  long long v32 = 0u;
  __asm { FMOV            V1.2D, #-1.0 }
  long long v33 = _Q1;
  long long v34 = 0u;
  uint64_t v46 = 0;
  long long v35 = 0u;
  long long v36 = 0u;
  long long v37 = 0u;
  char v38 = 0;
  __int16 v41 = 0;
  long long v40 = 0u;
  long long v39 = 0u;
  long long v42 = 0u;
  long long v43 = 0u;
  long long v44 = 0u;
  unsigned __int8 v45 = 0;
  sub_10092B9C0(v1, (uint64_t)&v24);
  int v9 = LODWORD(v24);
  if (v27 >= 360.0)
  {
    if (*((double *)&v44 + 1) <= 0.3 || *(double *)&v44 - *((double *)&v43 + 1) <= 10.0 || LODWORD(v24) == 4) {
      goto LABEL_9;
    }
    char v10 = 1;
  }
  else
  {
    char v10 = 0;
  }
  unsigned __int8 v45 = v10;
LABEL_9:
  if (!LODWORD(v24) || v45)
  {
    if (!LODWORD(v24))
    {
      double v12 = (*((double *)&v31 + 1) - *(double *)&v42) / *((double *)&v31 + 1) * *(float *)(v1 + 124);
      if (*((double *)&v42 + 1) - *(double *)&v35 > v12) {
        double v12 = *((double *)&v42 + 1) - *(double *)&v35;
      }
      double v13 = v12 + -1.6;
      if (*(double *)(v1 + 384) < v13) {
        double v13 = *(double *)(v1 + 384);
      }
      *(double *)&long long v39 = v13;
      if (v13 > 0.0)
      {
        if (v13 < *(double *)(v1 + 376)) {
          double v13 = *(double *)(v1 + 376);
        }
        *(double *)&long long v39 = v13;
      }
      sub_10092BC1C(v1, (uint64_t)&v24);
    }
    double v11 = sub_10092BD48(v1, &v24);
    double v26 = v11;
    if (v11 >= *(double *)(v1 + 376) && v11 <= *(double *)(v1 + 384))
    {
      int v9 = LODWORD(v24);
    }
    else
    {
      int v9 = LODWORD(v24);
      if (LODWORD(v24) == 1)
      {
        int v9 = 13;
        LODWORD(v24) = 13;
      }
      unsigned __int8 v45 = 0;
    }
  }
  else
  {
    double v11 = v26;
  }
  *(void *)&long long v40 = 0xBFF999999999999ALL;
  uint64_t v46 = *(void *)(v1 + 320);
  long long v14 = v32;
  *(double *)(v1 + 216) = v11;
  *(void *)(v1 + 224) = *((void *)&v14 + 1);
  uint64_t v15 = *((void *)&v34 + 1);
  uint64_t v16 = v35;
  *(double *)(v1 + 232) = *(float *)(v1 + 124);
  *(void *)(v1 + 240) = v15;
  uint64_t v17 = *((void *)&v31 + 1);
  *(void *)(v1 + 24_Block_object_dispose(&STACK[0x7E0], 8) = v31;
  *(void *)(v1 + 256) = v14;
  *(void *)(v1 + 272) = v39;
  *(void *)(v1 + 280) = v17;
  *(void *)(v1 + 28_Block_object_dispose(&STACK[0x7E0], 8) = v16;
  *(_DWORD *)(v1 + 264) = v9;
  unint64_t v18 = *(void *)(v1 + 208);
  if (v18 <= 0x18 && ((1 << v18) & 0x1028000) != 0)
  {
    HIBYTE(v41) = sub_100B44D5C(*(void *)(v1 + 80));
    sub_100B422D4(*(void *)(v1 + 80));
  }
  if (qword_1024192C0 != -1) {
    dispatch_once(&qword_1024192C0, &stru_1022D40E8);
  }
  uint64_t v19 = qword_1024192C8;
  if (os_log_type_enabled((os_log_t)qword_1024192C8, OS_LOG_TYPE_DEFAULT))
  {
    int v115 = LODWORD(v24);
    double v117 = v25;
    uint64_t v20 = *(void *)(v1 + 168);
    double v119 = v26;
    uint64_t v121 = v20;
    double v123 = v30;
    uint64_t v125 = v28;
    uint64_t v129 = *((void *)&v31 + 1);
    uint64_t v127 = v31;
    uint64_t v133 = *((void *)&v32 + 1);
    uint64_t v131 = v32;
    uint64_t v137 = *((void *)&v33 + 1);
    uint64_t v135 = v33;
    uint64_t v141 = *((void *)&v34 + 1);
    uint64_t v139 = v34;
    uint64_t v145 = *((void *)&v35 + 1);
    uint64_t v143 = v35;
    uint64_t v149 = *((void *)&v36 + 1);
    uint64_t v147 = v36;
    uint64_t v153 = *((void *)&v37 + 1);
    uint64_t v151 = v37;
    uint64_t v155 = v40;
    uint64_t v159 = *((void *)&v39 + 1);
    uint64_t v157 = v39;
    int v161 = HIBYTE(v41);
    uint64_t v165 = *((void *)&v42 + 1);
    uint64_t v163 = v42;
    uint64_t v171 = *((void *)&v43 + 1);
    uint64_t v167 = v43;
    uint64_t v173 = v44;
    uint64_t v177 = *(void *)(v1 + 320);
    double v169 = *(float *)(v1 + 124);
    __int16 v160 = 1025;
    __int16 v174 = 1025;
    int v175 = v45;
    __int16 v116 = 2049;
    __int16 v118 = 2049;
    __int16 v120 = 2049;
    __int16 v122 = 2049;
    __int16 v124 = 2049;
    __int16 v126 = 2049;
    __int16 v128 = 2049;
    __int16 v130 = 2049;
    __int16 v132 = 2049;
    __int16 v134 = 2049;
    __int16 v136 = 2049;
    __int16 v138 = 2049;
    __int16 v140 = 2049;
    __int16 v142 = 2049;
    __int16 v144 = 2049;
    __int16 v146 = 2049;
    __int16 v148 = 2049;
    __int16 v150 = 2049;
    __int16 v152 = 2049;
    __int16 v154 = 2049;
    __int16 v156 = 2049;
    __int16 v158 = 2049;
    __int16 v162 = 2049;
    __int16 v164 = 2049;
    __int16 v166 = 2049;
    __int16 v168 = 2049;
    __int16 v170 = 2049;
    __int16 v172 = 2049;
    __int16 v176 = 2049;
    __int16 v178 = 2049;
    uint64_t v179 = *((void *)&v44 + 1);
    *(_DWORD *)uint64_t buf = 67182849;
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "Estimator,status,%{private}d,timeOfEstimate,%{private}f,hrRecovery,%{private}f,sessionStartTime,%{private}f,activityEndTime,%{private}f,workoutType,%{private}ld,recoveryOnsetTime,%{private}f,peakHR,%{private}f,steadyStateHR,%{private}f,lambda,%{private}f,mse,%{private}f,evs,%{private}f,tDrop,%{private}f,hrMinAdjusted,%{private}f,hrRecoveryReference,%{private}f,recoveryLoad,%{private}f,maxRecoveryHR,%{private}f,minRecoveryHR,%{private}f,recoveryMetsMean,%{private}f,recoveryMetsStdDev,%{private}f,biasAdjustment,%{private}f,sessionHrRecovery,%{private}f,peakHrOneMinusFhr,%{private}f,isEligibleForHK,%{private}d,hrOneMinPostRecovery,%{private}f,hrRecoveryReferencePeak,%{private}f,hrOneMinExponential,%{private}f,hrmax,%{private}f,minHRAfterWorkoutEnd,%{private}f,maxHRAfterWorkoutEnd,%{private}f,isOtherwiseEligibleForLongitudinal,%{private}d,sevenDayRestingHR,%{private}f,oneMinusFHRAfterWorkoutEnd,%{private}f", buf, 0x140u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024192C0 != -1) {
      dispatch_once(&qword_1024192C0, &stru_1022D40E8);
    }
    int v49 = LODWORD(v24);
    double v51 = v25;
    uint64_t v22 = *(void *)(v1 + 168);
    double v53 = v26;
    uint64_t v55 = v22;
    double v57 = v30;
    uint64_t v59 = v28;
    uint64_t v63 = *((void *)&v31 + 1);
    uint64_t v61 = v31;
    uint64_t v67 = *((void *)&v32 + 1);
    uint64_t v65 = v32;
    uint64_t v71 = *((void *)&v33 + 1);
    uint64_t v69 = v33;
    uint64_t v75 = *((void *)&v34 + 1);
    uint64_t v73 = v34;
    uint64_t v79 = *((void *)&v35 + 1);
    uint64_t v77 = v35;
    uint64_t v83 = *((void *)&v36 + 1);
    uint64_t v81 = v36;
    uint64_t v87 = *((void *)&v37 + 1);
    uint64_t v85 = v37;
    uint64_t v89 = v40;
    uint64_t v93 = *((void *)&v39 + 1);
    uint64_t v91 = v39;
    int v95 = HIBYTE(v41);
    uint64_t v99 = *((void *)&v42 + 1);
    uint64_t v97 = v42;
    uint64_t v105 = *((void *)&v43 + 1);
    uint64_t v101 = v43;
    uint64_t v107 = v44;
    uint64_t v111 = *(void *)(v1 + 320);
    double v103 = *(float *)(v1 + 124);
    __int16 v94 = 1025;
    __int16 v108 = 1025;
    int v109 = v45;
    __int16 v50 = 2049;
    __int16 v52 = 2049;
    __int16 v54 = 2049;
    __int16 v56 = 2049;
    __int16 v58 = 2049;
    __int16 v60 = 2049;
    __int16 v62 = 2049;
    __int16 v64 = 2049;
    __int16 v66 = 2049;
    __int16 v68 = 2049;
    __int16 v70 = 2049;
    __int16 v72 = 2049;
    __int16 v74 = 2049;
    __int16 v76 = 2049;
    __int16 v78 = 2049;
    __int16 v80 = 2049;
    __int16 v82 = 2049;
    __int16 v84 = 2049;
    __int16 v86 = 2049;
    __int16 v88 = 2049;
    __int16 v90 = 2049;
    __int16 v92 = 2049;
    __int16 v96 = 2049;
    __int16 v98 = 2049;
    __int16 v100 = 2049;
    __int16 v102 = 2049;
    __int16 v104 = 2049;
    __int16 v106 = 2049;
    __int16 v110 = 2049;
    __int16 v112 = 2049;
    uint64_t v113 = *((void *)&v44 + 1);
    int v48 = 67182849;
    long long v23 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLHRRecoveryEstimator::estimateHeartRateRecovery()", "%s\n", v23);
    if (v23 != (char *)buf) {
      free(v23);
    }
  }
  long long v21 = *(void (**)(double *, void))(v1 + 16);
  if (v21) {
    v21(&v24, *(void *)(v1 + 40));
  }
  return sub_1000E1098(v47);
}

void sub_10092B9A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,id a47)
{
}

void sub_10092B9C0(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = 0;
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  std::string __p = 0;
  double v3 = 0;
  uint64_t v4 = 0;
  if (sub_10092C1F4(a1, a2, (uint64_t *)&v5, (uint64_t)&__p)) {
    operator new();
  }
  if (__p)
  {
    double v3 = __p;
    operator delete(__p);
  }
  if (v5)
  {
    uint64_t v6 = v5;
    operator delete(v5);
  }
}

void sub_10092BB80(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

uint64_t sub_10092BC1C(uint64_t result, uint64_t a2)
{
  if (!*(unsigned char *)(result + 152))
  {
    int v2 = 10;
    goto LABEL_7;
  }
  if (*(double *)(a2 + 24) < 360.0)
  {
    int v2 = 2;
LABEL_7:
    *(_DWORD *)a2 = v2;
    *(unsigned char *)(a2 + 264) = 0;
    return result;
  }
  if (*(double *)(a2 + 200) < *(double *)(result + 360))
  {
    int v2 = 3;
    goto LABEL_7;
  }
  if (*(unsigned char *)(a2 + 208))
  {
    int v3 = 16;
  }
  else
  {
    double v4 = *(double *)(a2 + 64);
    if (*(double *)(a2 + 136) - v4 <= *(double *)(result + 328))
    {
      if (*(double *)(a2 + 184) <= *(double *)(result + 344))
      {
        int v3 = 14;
      }
      else if (v4 - *(double *)(a2 + 72) <= *(double *)(result + 352))
      {
        int v3 = 15;
      }
      else
      {
        double v5 = *(double *)(a2 + 96);
        if (v5 == -1.0 || v5 < *(double *)(result + 368))
        {
          int v3 = 9;
        }
        else
        {
          double v6 = *(double *)(a2 + 176);
          if (v6 >= *(double *)(result + 376) && v6 <= *(double *)(result + 384))
          {
            if (vabdd_f64(*(double *)(a2 + 232), *(double *)(a2 + 216)) <= 10.0) {
              int v3 = 1;
            }
            else {
              int v3 = 18;
            }
          }
          else
          {
            int v3 = 13;
          }
        }
      }
    }
    else
    {
      int v3 = 11;
    }
  }
  *(_DWORD *)a2 = v3;
  return result;
}

double sub_10092BD48(uint64_t a1, double *a2)
{
  std::string __p = 0;
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  sub_100B428F4(*(void *)(a1 + 80), &__p, 1);
  if (qword_1024192C0 != -1) {
    dispatch_once(&qword_1024192C0, &stru_1022D40E8);
  }
  double v4 = qword_1024192C8;
  if (os_log_type_enabled((os_log_t)qword_1024192C8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)uint64_t buf = 134283521;
    unint64_t v29 = 0xCCCCCCCCCCCCCCCDLL * (((char *)v22 - (unsigned char *)__p) >> 5);
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Estimator,Num of recent estimates:%{private}lu", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024192C0 != -1) {
      dispatch_once(&qword_1024192C0, &stru_1022D40E8);
    }
    int v24 = 134283521;
    unint64_t v25 = 0xCCCCCCCCCCCCCCCDLL * (((char *)v22 - (unsigned char *)__p) >> 5);
    uint64_t v20 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "double CLHRRecoveryEstimator::getLongitudinalEstimate(HRRecoveryResult &)", "%s\n", v20);
    if (v20 != (char *)buf) {
      free(v20);
    }
  }
  int v5 = *(_DWORD *)a2;
  double v6 = 0.0;
  if (*(_DWORD *)a2 == 1) {
    double v7 = a2[22];
  }
  else {
    double v7 = 0.0;
  }
  if (v5 == 1) {
    double v8 = 1.0;
  }
  else {
    double v8 = 0.0;
  }
  int v9 = (double *)__p;
  char v10 = v22;
  if (__p != v22)
  {
    do
    {
      if (v9[14] <= 0.0) {
        double v11 = v9[7];
      }
      else {
        double v11 = v9[14];
      }
      if (v11 >= *(double *)(a1 + 376) && v11 <= *(double *)(a1 + 384))
      {
        double v16 = a2[1] - v9[1];
        long double v17 = exp2(v16 / 86400.0 / -28.0);
        double v7 = v7 + v17 * v11;
        double v8 = v8 + v17;
        if (v16 >= v6) {
          double v18 = v6;
        }
        else {
          double v18 = v16;
        }
        if (v6 == 0.0) {
          double v6 = v16;
        }
        else {
          double v6 = v18;
        }
      }
      else
      {
        if (qword_1024192C0 != -1) {
          dispatch_once(&qword_1024192C0, &stru_1022D40E8);
        }
        double v12 = qword_1024192C8;
        if (os_log_type_enabled((os_log_t)qword_1024192C8, OS_LOG_TYPE_DEBUG))
        {
          unint64_t v13 = *((void *)v9 + 1);
          *(_DWORD *)uint64_t buf = 134283777;
          unint64_t v29 = v13;
          __int16 v30 = 2049;
          double v31 = v11;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "Estimator: Excluding historical estimate from smoothing (startTime:%{private}f, sessionEstimate:%{private}f)", buf, 0x16u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024192C0 != -1) {
            dispatch_once(&qword_1024192C0, &stru_1022D40E8);
          }
          unint64_t v14 = *((void *)v9 + 1);
          int v24 = 134283777;
          unint64_t v25 = v14;
          __int16 v26 = 2049;
          double v27 = v11;
          uint64_t v15 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "double CLHRRecoveryEstimator::getLongitudinalEstimate(HRRecoveryResult &)", "%s\n", v15);
          if (v15 != (char *)buf) {
            free(v15);
          }
        }
      }
      v9 += 20;
    }
    while (v9 != v10);
    int v5 = *(_DWORD *)a2;
  }
  if (v5 != 1 && (v6 > 2419200.0 || v6 == 0.0)) {
    *((unsigned char *)a2 + 264) = 0;
  }
  else {
    double v7 = v7 / v8;
  }
  if (__p)
  {
    uint64_t v22 = (double *)__p;
    operator delete(__p);
  }
  return v7;
}

void sub_10092C1CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_10092C1F4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  if ((*(unsigned int (**)(void, uint64_t, double, double))(**(void **)(a1 + 64) + 48))(*(void *)(a1 + 64), a4, *(double *)(a1 + 168), *(double *)(a2 + 8)) == 2)
  {
    if (qword_1024192C0 != -1) {
      dispatch_once(&qword_1024192C0, &stru_1022D40E8);
    }
    double v7 = qword_1024192C8;
    if (os_log_type_enabled((os_log_t)qword_1024192C8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Estimator: Failed to fetch input work rates for estimation", buf, 2u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024192C0 != -1) {
        dispatch_once(&qword_1024192C0, &stru_1022D40E8);
      }
      LOWORD(__p) = 0;
      long long v21 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "BOOL CLHRRecoveryEstimator::getInputs(HRRecoveryResult &, std::vector<HRRecoveryInputHR> &, std::vector<HRRecoveryInputWR> &)", "%s\n", v21);
      if (v21 != (char *)buf) {
        free(v21);
      }
    }
    BOOL v8 = 0;
    *(_DWORD *)a2 = 4;
  }
  else
  {
    std::string __p = 0;
    int v24 = 0;
    uint64_t v25 = 0;
    int v9 = (*(uint64_t (**)(void, void **, double, double))(**(void **)(a1 + 48) + 48))(*(void *)(a1 + 48), &__p, *(double *)(a1 + 168), *(double *)(a2 + 8));
    BOOL v8 = v9 != 2;
    if (v9 == 2)
    {
      if (qword_1024192C0 != -1) {
        dispatch_once(&qword_1024192C0, &stru_1022D40E8);
      }
      uint64_t v19 = qword_1024192C8;
      if (os_log_type_enabled((os_log_t)qword_1024192C8, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "Estimator: Failed to fetch input heart rates for estimation", buf, 2u);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024192C0 != -1) {
          dispatch_once(&qword_1024192C0, &stru_1022D40E8);
        }
        uint64_t v22 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "BOOL CLHRRecoveryEstimator::getInputs(HRRecoveryResult &, std::vector<HRRecoveryInputHR> &, std::vector<HRRecoveryInputWR> &)", "%s\n", v22);
        if (v22 != (char *)buf) {
          free(v22);
        }
      }
      *(_DWORD *)a2 = 4;
    }
    else
    {
      char v10 = (double *)__p;
      double v11 = v24;
      *(void *)uint64_t buf = a3;
      if (__p != v24)
      {
        do
        {
          if (v10[3] >= 0.6) {
            sub_1002CE0E4((void ***)buf, v10);
          }
          v10 += 4;
        }
        while (v10 != v11);
      }
      double v12 = *(double *)(a1 + 176) + -60.0;
      uint64_t v13 = *a3;
      uint64_t v14 = a3[1];
      double v15 = 0.0;
      double v16 = 0.0;
      if (*a3 != v14)
      {
        int v17 = 0;
        do
        {
          if (*(double *)(v13 + 8) > v12) {
            ++v17;
          }
          v13 += 32;
        }
        while (v13 != v14);
        double v16 = (double)v17;
      }
      double v18 = *(double *)(a2 + 8);
      if (v18 > v12) {
        double v15 = v16 / (v18 - v12);
      }
      *(double *)(a2 + 200) = v15;
    }
    if (__p)
    {
      int v24 = (double *)__p;
      operator delete(__p);
    }
  }
  return v8;
}

void sub_10092C61C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_10092C648(uint64_t a1, double *a2, void *a3)
{
  int v3 = (double *)a3[1];
  if ((double *)*a3 == v3)
  {
    double v8 = a2[31];
  }
  else
  {
    double v4 = a2[6];
    double v5 = a2[30];
    double v6 = a2[28];
    double v7 = a2[15];
    double v8 = a2[31];
    int v9 = (double *)(*a3 + 16);
    do
    {
      double v10 = *(v9 - 1);
      if (v10 > v4 && v10 < v4 + 178.0)
      {
        if (v6 == 0.0)
        {
          double v6 = *v9;
          a2[28] = *v9;
        }
        if (v10 > v4 + 60.0 && v7 == 0.0)
        {
          double v7 = *v9;
          a2[15] = *v9;
        }
        if (v8 < *v9) {
          double v8 = *v9;
        }
        a2[31] = v8;
        double v12 = v9;
        if (v5 != 0.0)
        {
          if (*v9 >= v5) {
            double v12 = a2 + 30;
          }
          else {
            double v12 = v9;
          }
        }
        double v5 = *v12;
        a2[30] = *v12;
      }
      uint64_t v13 = v9 + 2;
      v9 += 4;
    }
    while (v13 != v3);
  }
  double v14 = a2[8];
  if (v14 < v8) {
    double v14 = v8;
  }
  double result = 1.0 - (*(float *)(a1 + 124) - v14) / (*(float *)(a1 + 124) - *(double *)(a1 + 320));
  a2[32] = result;
  return result;
}

uint64_t sub_10092C73C(uint64_t a1, uint64_t a2, void *a3)
{
  double v4 = *(double *)(a2 + 104);
  double v5 = *(double *)(a2 + 56);
  double v6 = *(float *)(a1 + 124);
  double v7 = v6 - *(double *)(a1 + 320);
  double v26 = 0.0;
  double v27 = off_1022B2000;
  memset(v29, 0, sizeof(v29));
  v31[0] = 0;
  v31[1] = 0;
  __int16 v30 = v31;
  int v28 = 3;
  double v8 = (double *)a3[1];
  if ((double *)*a3 == v8)
  {
    uint64_t v22 = 0;
  }
  else
  {
    double v10 = v4 + 60.0;
    double v11 = v5 + 178.0;
    double v12 = v5 + 140.0;
    uint64_t v13 = (double *)(*a3 + 16);
    do
    {
      double v14 = *(v13 - 1);
      if (v14 > *(double *)(a2 + 104))
      {
        double v15 = *(double *)(a2 + 136);
        if (v15 < *v13) {
          double v15 = *v13;
        }
        *(double *)(a2 + 1++*(_DWORD *)(result + 36) = v15;
        if (v14 < v12)
        {
          sub_10007EEB4((uint64_t)&v27, v13);
          if (sub_10007EDE0(&v27, 2, &v26))
          {
            double v16 = *(double *)(a2 + 144);
            if (v26 < v16 || v16 == 0.0) {
              double v16 = v26;
            }
            *(double *)(a2 + 144) = v16;
          }
        }
        double v18 = *(v13 - 1);
        if (v18 > v10 && *(double *)(a2 + 216) == 0.0) {
          *(double *)(a2 + 216) = *v13;
        }
        if (v18 < v11) {
          *(double *)(a2 + 12_Block_object_dispose(&STACK[0x7E0], 8) = *(double *)(a2 + 128) + (*v13 - *(double *)(a1 + 320)) / v7;
        }
      }
      uint64_t v19 = v13 + 2;
      v13 += 4;
    }
    while (v19 != v8);
    double v20 = *(double *)(a1 + 320);
    float v21 = *(float *)(a1 + 124);
    uint64_t v22 = (void *)v31[0];
    double v6 = v21;
    double v7 = v6 - v20;
  }
  double v23 = *(double *)(a2 + 64);
  double v24 = *(double *)(a2 + 72);
  *(double *)(a2 + 184) = 1.0 - (v6 - v23) / v7;
  *(long double *)(a2 + 232) = v24 + (v23 - v24) * exp(*(double *)(a2 + 80) * -60.0);
  double v27 = off_1022B2000;
  sub_1000F5BB0((uint64_t)&v30, v22);
  return sub_10041F48C(v29);
}