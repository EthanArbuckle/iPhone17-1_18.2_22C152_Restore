void sub_101661234(PB::Base *a1)
{
  uint64_t vars8;

  sub_1016611A0(a1);

  operator delete();
}

uint64_t sub_10166126C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_1023333A0;
  *(_OWORD *)(a1 + 8) = 0u;
  v4 = (char *)(a1 + 8);
  *(_OWORD *)(a1 + 56) = 0u;
  v5 = (char *)(a1 + 56);
  *(_DWORD *)(a1 + 116) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  char v6 = *(unsigned char *)(a2 + 116);
  if (v6)
  {
    uint64_t v8 = *(void *)(a2 + 104);
    char v7 = 1;
    *(unsigned char *)(a1 + 116) = 1;
    *(void *)(a1 + 104) = v8;
    char v6 = *(unsigned char *)(a2 + 116);
    if ((v6 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v7 = 0;
  if ((*(unsigned char *)(a2 + 116) & 4) != 0)
  {
LABEL_5:
    char v9 = *(unsigned char *)(a2 + 113);
    v7 |= 4u;
    *(unsigned char *)(a1 + 116) = v7;
    *(unsigned char *)(a1 + 113) = v9;
    char v6 = *(unsigned char *)(a2 + 116);
  }
LABEL_6:
  if ((v6 & 2) != 0)
  {
    char v10 = *(unsigned char *)(a2 + 112);
    *(unsigned char *)(a1 + 116) = v7 | 2;
    *(unsigned char *)(a1 + 112) = v10;
  }
  if (a1 != a2)
  {
    sub_1000FB43C((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
    sub_1000FB43C(v5, *(char **)(a2 + 56), *(void *)(a2 + 64), (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 2);
    sub_1000FB43C((char *)(a1 + 80), *(char **)(a2 + 80), *(void *)(a2 + 88), (uint64_t)(*(void *)(a2 + 88) - *(void *)(a2 + 80)) >> 2);
    sub_1000FB43C(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  return a1;
}

uint64_t sub_101661394(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  v5 = *(float **)(a1 + 8);
  char v6 = *(float **)(a1 + 16);
  while (v5 != v6)
  {
    float v7 = *v5++;
    PB::TextFormatter::format(this, "accelVariance", v7);
  }
  if ((*(unsigned char *)(a1 + 116) & 2) != 0) {
    PB::TextFormatter::format(this, "allowRelaxedGyroMean", *(unsigned char *)(a1 + 112));
  }
  uint64_t v8 = *(float **)(a1 + 32);
  char v9 = *(float **)(a1 + 40);
  while (v8 != v9)
  {
    float v10 = *v8++;
    PB::TextFormatter::format(this, "gyroMean", v10);
  }
  v11 = *(float **)(a1 + 56);
  v12 = *(float **)(a1 + 64);
  while (v11 != v12)
  {
    float v13 = *v11++;
    PB::TextFormatter::format(this, "gyroVariance", v13);
  }
  if ((*(unsigned char *)(a1 + 116) & 4) != 0) {
    PB::TextFormatter::format(this, "stillOnAll", *(unsigned char *)(a1 + 113));
  }
  v14 = *(float **)(a1 + 80);
  v15 = *(float **)(a1 + 88);
  while (v14 != v15)
  {
    float v16 = *v14++;
    PB::TextFormatter::format(this, "temperatureBias", v16);
  }
  if (*(unsigned char *)(a1 + 116)) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 104));
  }

  return PB::TextFormatter::endObject(this);
}

BOOL sub_1016614EC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v8 = (void **)(a1 + 8);
    char v9 = (void **)(a1 + 80);
    uint64_t v136 = a1 + 96;
    uint64_t v137 = a1 + 24;
    float v10 = (void **)(a1 + 56);
    uint64_t v135 = a1 + 72;
    v11 = (void **)(a1 + 32);
    uint64_t v12 = a1 + 48;
    while (1)
    {
      uint64_t v13 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v14 = 0;
      unsigned int v15 = 0;
      unint64_t v16 = 0;
      while (1)
      {
        unint64_t v17 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v18 = *(unsigned char *)(v13 + v2);
        v16 |= (unint64_t)(v18 & 0x7F) << v14;
        if ((v18 & 0x80) == 0) {
          break;
        }
        v14 += 7;
        unint64_t v2 = v17;
        if (v15++ > 8) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v25 = v16 & 7;
      if (v25 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v16 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 116) |= 1u;
          unint64_t v26 = *((void *)this + 1);
          if (v26 > 0xFFFFFFFFFFFFFFF7 || v26 + 8 > *((void *)this + 2)) {
            goto LABEL_204;
          }
          *(void *)(a1 + 104) = *(void *)(*(void *)this + v26);
          uint64_t v27 = *((void *)this + 1) + 8;
          goto LABEL_206;
        case 2u:
          *(unsigned char *)(a1 + 116) |= 4u;
          unint64_t v28 = *((void *)this + 1);
          if (v28 >= *((void *)this + 2))
          {
            BOOL v31 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v29 = v28 + 1;
            int v30 = *(unsigned __int8 *)(*(void *)this + v28);
            *((void *)this + 1) = v29;
            BOOL v31 = v30 != 0;
          }
          *(unsigned char *)(a1 + 113) = v31;
          goto LABEL_207;
        case 3u:
          *(unsigned char *)(a1 + 116) |= 2u;
          unint64_t v32 = *((void *)this + 1);
          if (v32 >= *((void *)this + 2))
          {
            BOOL v35 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v33 = v32 + 1;
            int v34 = *(unsigned __int8 *)(*(void *)this + v32);
            *((void *)this + 1) = v33;
            BOOL v35 = v34 != 0;
          }
          *(unsigned char *)(a1 + 112) = v35;
          goto LABEL_207;
        case 4u:
          if (v25 != 2)
          {
            v93 = *(char **)(a1 + 40);
            unint64_t v92 = *(void *)(a1 + 48);
            if ((unint64_t)v93 >= v92)
            {
              v101 = (char *)*v11;
              uint64_t v102 = (v93 - (unsigned char *)*v11) >> 2;
              unint64_t v103 = v102 + 1;
              if ((unint64_t)(v102 + 1) >> 62) {
LABEL_215:
              }
                sub_1001D7FD4();
              uint64_t v104 = v92 - (void)v101;
              if (v104 >> 1 > v103) {
                unint64_t v103 = v104 >> 1;
              }
              if ((unint64_t)v104 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v105 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v105 = v103;
              }
              if (v105)
              {
                v106 = (char *)sub_10017EA34(v12, v105);
                v101 = *(char **)(a1 + 32);
                v93 = *(char **)(a1 + 40);
              }
              else
              {
                v106 = 0;
              }
              v125 = &v106[4 * v102];
              *(_DWORD *)v125 = 0;
              v94 = v125 + 4;
              while (v93 != v101)
              {
                int v126 = *((_DWORD *)v93 - 1);
                v93 -= 4;
                *((_DWORD *)v125 - 1) = v126;
                v125 -= 4;
              }
              *(void *)(a1 + 32) = v125;
              *(void *)(a1 + 40) = v94;
              *(void *)(a1 + 48) = &v106[4 * v105];
              if (v101) {
                operator delete(v101);
              }
            }
            else
            {
              *(_DWORD *)v93 = 0;
              v94 = v93 + 4;
            }
            *(void *)(a1 + 40) = v94;
            goto LABEL_202;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v36 = *((void *)this + 1);
          unint64_t v37 = *((void *)this + 2);
          while (v36 < v37 && !*((unsigned char *)this + 24))
          {
            v39 = *(char **)(a1 + 40);
            unint64_t v38 = *(void *)(a1 + 48);
            if ((unint64_t)v39 >= v38)
            {
              v41 = (char *)*v11;
              uint64_t v42 = (v39 - (unsigned char *)*v11) >> 2;
              unint64_t v43 = v42 + 1;
              if ((unint64_t)(v42 + 1) >> 62) {
                goto LABEL_215;
              }
              uint64_t v44 = v38 - (void)v41;
              if (v44 >> 1 > v43) {
                unint64_t v43 = v44 >> 1;
              }
              if ((unint64_t)v44 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v45 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v45 = v43;
              }
              if (v45)
              {
                v46 = (char *)sub_10017EA34(v12, v45);
                v41 = *(char **)(a1 + 32);
                v39 = *(char **)(a1 + 40);
              }
              else
              {
                v46 = 0;
              }
              v47 = &v46[4 * v42];
              *(_DWORD *)v47 = 0;
              v40 = v47 + 4;
              while (v39 != v41)
              {
                int v48 = *((_DWORD *)v39 - 1);
                v39 -= 4;
                *((_DWORD *)v47 - 1) = v48;
                v47 -= 4;
              }
              *(void *)(a1 + 32) = v47;
              *(void *)(a1 + 40) = v40;
              *(void *)(a1 + 48) = &v46[4 * v45];
              if (v41) {
                operator delete(v41);
              }
            }
            else
            {
              *(_DWORD *)v39 = 0;
              v40 = v39 + 4;
            }
            *(void *)(a1 + 40) = v40;
            unint64_t v49 = *((void *)this + 1);
            if (v49 > 0xFFFFFFFFFFFFFFFBLL || v49 + 4 > *((void *)this + 2)) {
              goto LABEL_128;
            }
            *(v40 - 1) = *(_DWORD *)(*(void *)this + v49);
            unint64_t v37 = *((void *)this + 2);
            unint64_t v36 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v36;
          }
          goto LABEL_129;
        case 5u:
          if (v25 != 2)
          {
            v96 = *(char **)(a1 + 64);
            unint64_t v95 = *(void *)(a1 + 72);
            if ((unint64_t)v96 >= v95)
            {
              v107 = (char *)*v10;
              uint64_t v108 = (v96 - (unsigned char *)*v10) >> 2;
              unint64_t v109 = v108 + 1;
              if ((unint64_t)(v108 + 1) >> 62) {
LABEL_216:
              }
                sub_1001D7FD4();
              uint64_t v110 = v95 - (void)v107;
              if (v110 >> 1 > v109) {
                unint64_t v109 = v110 >> 1;
              }
              if ((unint64_t)v110 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v111 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v111 = v109;
              }
              if (v111)
              {
                v112 = (char *)sub_10017EA34(v135, v111);
                v107 = *(char **)(a1 + 56);
                v96 = *(char **)(a1 + 64);
              }
              else
              {
                v112 = 0;
              }
              v127 = &v112[4 * v108];
              *(_DWORD *)v127 = 0;
              v94 = v127 + 4;
              while (v96 != v107)
              {
                int v128 = *((_DWORD *)v96 - 1);
                v96 -= 4;
                *((_DWORD *)v127 - 1) = v128;
                v127 -= 4;
              }
              *(void *)(a1 + 56) = v127;
              *(void *)(a1 + 64) = v94;
              *(void *)(a1 + 72) = &v112[4 * v111];
              if (v107) {
                operator delete(v107);
              }
            }
            else
            {
              *(_DWORD *)v96 = 0;
              v94 = v96 + 4;
            }
            *(void *)(a1 + 64) = v94;
            goto LABEL_202;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v50 = *((void *)this + 1);
          unint64_t v51 = *((void *)this + 2);
          while (v50 < v51 && !*((unsigned char *)this + 24))
          {
            v53 = *(char **)(a1 + 64);
            unint64_t v52 = *(void *)(a1 + 72);
            if ((unint64_t)v53 >= v52)
            {
              v55 = (char *)*v10;
              uint64_t v56 = (v53 - (unsigned char *)*v10) >> 2;
              unint64_t v57 = v56 + 1;
              if ((unint64_t)(v56 + 1) >> 62) {
                goto LABEL_216;
              }
              uint64_t v58 = v52 - (void)v55;
              if (v58 >> 1 > v57) {
                unint64_t v57 = v58 >> 1;
              }
              if ((unint64_t)v58 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v59 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v59 = v57;
              }
              if (v59)
              {
                v60 = (char *)sub_10017EA34(v135, v59);
                v55 = *(char **)(a1 + 56);
                v53 = *(char **)(a1 + 64);
              }
              else
              {
                v60 = 0;
              }
              v61 = &v60[4 * v56];
              *(_DWORD *)v61 = 0;
              v54 = v61 + 4;
              while (v53 != v55)
              {
                int v62 = *((_DWORD *)v53 - 1);
                v53 -= 4;
                *((_DWORD *)v61 - 1) = v62;
                v61 -= 4;
              }
              *(void *)(a1 + 56) = v61;
              *(void *)(a1 + 64) = v54;
              *(void *)(a1 + 72) = &v60[4 * v59];
              if (v55) {
                operator delete(v55);
              }
            }
            else
            {
              *(_DWORD *)v53 = 0;
              v54 = v53 + 4;
            }
            *(void *)(a1 + 64) = v54;
            unint64_t v63 = *((void *)this + 1);
            if (v63 > 0xFFFFFFFFFFFFFFFBLL || v63 + 4 > *((void *)this + 2)) {
              goto LABEL_128;
            }
            *(v54 - 1) = *(_DWORD *)(*(void *)this + v63);
            unint64_t v51 = *((void *)this + 2);
            unint64_t v50 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v50;
          }
          goto LABEL_129;
        case 6u:
          if (v25 != 2)
          {
            v98 = *(char **)(a1 + 88);
            unint64_t v97 = *(void *)(a1 + 96);
            if ((unint64_t)v98 >= v97)
            {
              v113 = (char *)*v9;
              uint64_t v114 = (v98 - (unsigned char *)*v9) >> 2;
              unint64_t v115 = v114 + 1;
              if ((unint64_t)(v114 + 1) >> 62) {
LABEL_217:
              }
                sub_1001D7FD4();
              uint64_t v116 = v97 - (void)v113;
              if (v116 >> 1 > v115) {
                unint64_t v115 = v116 >> 1;
              }
              if ((unint64_t)v116 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v117 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v117 = v115;
              }
              if (v117)
              {
                v118 = (char *)sub_10017EA34(v136, v117);
                v113 = *(char **)(a1 + 80);
                v98 = *(char **)(a1 + 88);
              }
              else
              {
                v118 = 0;
              }
              v129 = &v118[4 * v114];
              *(_DWORD *)v129 = 0;
              v94 = v129 + 4;
              while (v98 != v113)
              {
                int v130 = *((_DWORD *)v98 - 1);
                v98 -= 4;
                *((_DWORD *)v129 - 1) = v130;
                v129 -= 4;
              }
              *(void *)(a1 + 80) = v129;
              *(void *)(a1 + 88) = v94;
              *(void *)(a1 + 96) = &v118[4 * v117];
              if (v113) {
                operator delete(v113);
              }
            }
            else
            {
              *(_DWORD *)v98 = 0;
              v94 = v98 + 4;
            }
            *(void *)(a1 + 88) = v94;
            goto LABEL_202;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v64 = *((void *)this + 1);
          unint64_t v65 = *((void *)this + 2);
          while (v64 < v65 && !*((unsigned char *)this + 24))
          {
            v67 = *(char **)(a1 + 88);
            unint64_t v66 = *(void *)(a1 + 96);
            if ((unint64_t)v67 >= v66)
            {
              v69 = (char *)*v9;
              uint64_t v70 = (v67 - (unsigned char *)*v9) >> 2;
              unint64_t v71 = v70 + 1;
              if ((unint64_t)(v70 + 1) >> 62) {
                goto LABEL_217;
              }
              uint64_t v72 = v66 - (void)v69;
              if (v72 >> 1 > v71) {
                unint64_t v71 = v72 >> 1;
              }
              if ((unint64_t)v72 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v73 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v73 = v71;
              }
              if (v73)
              {
                v74 = (char *)sub_10017EA34(v136, v73);
                v69 = *(char **)(a1 + 80);
                v67 = *(char **)(a1 + 88);
              }
              else
              {
                v74 = 0;
              }
              v75 = &v74[4 * v70];
              *(_DWORD *)v75 = 0;
              v68 = v75 + 4;
              while (v67 != v69)
              {
                int v76 = *((_DWORD *)v67 - 1);
                v67 -= 4;
                *((_DWORD *)v75 - 1) = v76;
                v75 -= 4;
              }
              *(void *)(a1 + 80) = v75;
              *(void *)(a1 + 88) = v68;
              *(void *)(a1 + 96) = &v74[4 * v73];
              if (v69) {
                operator delete(v69);
              }
            }
            else
            {
              *(_DWORD *)v67 = 0;
              v68 = v67 + 4;
            }
            *(void *)(a1 + 88) = v68;
            unint64_t v77 = *((void *)this + 1);
            if (v77 > 0xFFFFFFFFFFFFFFFBLL || v77 + 4 > *((void *)this + 2)) {
              goto LABEL_128;
            }
            *(v68 - 1) = *(_DWORD *)(*(void *)this + v77);
            unint64_t v65 = *((void *)this + 2);
            unint64_t v64 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v64;
          }
          goto LABEL_129;
        case 7u:
          if (v25 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v78 = *((void *)this + 1);
            unint64_t v79 = *((void *)this + 2);
            while (v78 < v79 && !*((unsigned char *)this + 24))
            {
              v81 = *(char **)(a1 + 16);
              unint64_t v80 = *(void *)(a1 + 24);
              if ((unint64_t)v81 >= v80)
              {
                v83 = (char *)*v8;
                uint64_t v84 = (v81 - (unsigned char *)*v8) >> 2;
                unint64_t v85 = v84 + 1;
                if ((unint64_t)(v84 + 1) >> 62) {
                  goto LABEL_218;
                }
                uint64_t v86 = v80 - (void)v83;
                if (v86 >> 1 > v85) {
                  unint64_t v85 = v86 >> 1;
                }
                if ((unint64_t)v86 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v87 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v87 = v85;
                }
                if (v87)
                {
                  v88 = (char *)sub_10017EA34(v137, v87);
                  v83 = *(char **)(a1 + 8);
                  v81 = *(char **)(a1 + 16);
                }
                else
                {
                  v88 = 0;
                }
                v89 = &v88[4 * v84];
                *(_DWORD *)v89 = 0;
                v82 = v89 + 4;
                while (v81 != v83)
                {
                  int v90 = *((_DWORD *)v81 - 1);
                  v81 -= 4;
                  *((_DWORD *)v89 - 1) = v90;
                  v89 -= 4;
                }
                *(void *)(a1 + 8) = v89;
                *(void *)(a1 + 16) = v82;
                *(void *)(a1 + 24) = &v88[4 * v87];
                if (v83) {
                  operator delete(v83);
                }
              }
              else
              {
                *(_DWORD *)v81 = 0;
                v82 = v81 + 4;
              }
              *(void *)(a1 + 16) = v82;
              unint64_t v91 = *((void *)this + 1);
              if (v91 > 0xFFFFFFFFFFFFFFFBLL || v91 + 4 > *((void *)this + 2))
              {
LABEL_128:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v82 - 1) = *(_DWORD *)(*(void *)this + v91);
              unint64_t v79 = *((void *)this + 2);
              unint64_t v78 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v78;
            }
LABEL_129:
            PB::Reader::recallMark();
          }
          else
          {
            v100 = *(char **)(a1 + 16);
            unint64_t v99 = *(void *)(a1 + 24);
            if ((unint64_t)v100 >= v99)
            {
              v119 = (char *)*v8;
              uint64_t v120 = (v100 - (unsigned char *)*v8) >> 2;
              unint64_t v121 = v120 + 1;
              if ((unint64_t)(v120 + 1) >> 62) {
LABEL_218:
              }
                sub_1001D7FD4();
              uint64_t v122 = v99 - (void)v119;
              if (v122 >> 1 > v121) {
                unint64_t v121 = v122 >> 1;
              }
              if ((unint64_t)v122 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v123 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v123 = v121;
              }
              if (v123)
              {
                v124 = (char *)sub_10017EA34(v137, v123);
                v119 = *(char **)(a1 + 8);
                v100 = *(char **)(a1 + 16);
              }
              else
              {
                v124 = 0;
              }
              v131 = &v124[4 * v120];
              *(_DWORD *)v131 = 0;
              v94 = v131 + 4;
              while (v100 != v119)
              {
                int v132 = *((_DWORD *)v100 - 1);
                v100 -= 4;
                *((_DWORD *)v131 - 1) = v132;
                v131 -= 4;
              }
              *(void *)(a1 + 8) = v131;
              *(void *)(a1 + 16) = v94;
              *(void *)(a1 + 24) = &v124[4 * v123];
              if (v119) {
                operator delete(v119);
              }
            }
            else
            {
              *(_DWORD *)v100 = 0;
              v94 = v100 + 4;
            }
            *(void *)(a1 + 16) = v94;
LABEL_202:
            unint64_t v133 = *((void *)this + 1);
            if (v133 <= 0xFFFFFFFFFFFFFFFBLL && v133 + 4 <= *((void *)this + 2))
            {
              *(v94 - 1) = *(_DWORD *)(*(void *)this + v133);
              uint64_t v27 = *((void *)this + 1) + 4;
LABEL_206:
              *((void *)this + 1) = v27;
            }
            else
            {
LABEL_204:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_207:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || *((unsigned char *)this + 24)) {
            return v4 == 0;
          }
          break;
        default:
          if ((PB::Reader::skip(this, v16 >> 3, v25, 0) & 1) == 0) {
            return 0;
          }
          goto LABEL_207;
      }
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v16 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v22 = v2 + 1;
      char v23 = *(unsigned char *)(v13 + v2);
      *((void *)this + 1) = v22;
      v16 |= (unint64_t)(v23 & 0x7F) << v20;
      if ((v23 & 0x80) == 0) {
        goto LABEL_21;
      }
      v20 += 7;
      unint64_t v2 = v22;
      if (v21++ >= 9)
      {
LABEL_20:
        unint64_t v16 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101661E94(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 116);
  if ((v4 & 1) == 0)
  {
    if ((*(unsigned char *)(result + 116) & 4) == 0) {
      goto LABEL_3;
    }
LABEL_19:
    result = PB::Writer::write(this, *(unsigned char *)(v3 + 113), 2u);
    if ((*(unsigned char *)(v3 + 116) & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  result = PB::Writer::write(this, *(double *)(result + 104), 1u);
  char v4 = *(unsigned char *)(v3 + 116);
  if ((v4 & 4) != 0) {
    goto LABEL_19;
  }
LABEL_3:
  if ((v4 & 2) != 0) {
LABEL_4:
  }
    result = PB::Writer::write(this, *(unsigned char *)(v3 + 112), 3u);
LABEL_5:
  v5 = *(float **)(v3 + 32);
  char v6 = *(float **)(v3 + 40);
  while (v5 != v6)
  {
    float v7 = *v5++;
    result = PB::Writer::write(this, v7, 4u);
  }
  uint64_t v8 = *(float **)(v3 + 56);
  char v9 = *(float **)(v3 + 64);
  while (v8 != v9)
  {
    float v10 = *v8++;
    result = PB::Writer::write(this, v10, 5u);
  }
  v11 = *(float **)(v3 + 80);
  uint64_t v12 = *(float **)(v3 + 88);
  while (v11 != v12)
  {
    float v13 = *v11++;
    result = PB::Writer::write(this, v13, 6u);
  }
  unsigned int v15 = *(float **)(v3 + 8);
  char v14 = *(float **)(v3 + 16);
  while (v15 != v14)
  {
    float v16 = *v15++;
    result = PB::Writer::write(this, v16, 7u);
  }
  return result;
}

uint64_t sub_101661F94(uint64_t result)
{
  *(void *)result = &off_1023333D8;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_101661FB8(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &off_1023333D8;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_101662038(PB::Base *a1)
{
  sub_101661FB8(a1);

  operator delete();
}

uint64_t sub_101662070(uint64_t result, uint64_t a2)
{
  *(void *)result = &off_1023333D8;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 20) = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  if (*(unsigned char *)(a2 + 20))
  {
    int v2 = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(result + 20) |= 1u;
    *(_DWORD *)(result + 16) = v2;
  }
  return result;
}

uint64_t sub_101662138(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 20)) {
    PB::TextFormatter::format(this, "axis", *(_DWORD *)(a1 + 16));
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "correction");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_1016621D0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v21 = *((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        uint64_t v23 = *(void *)this;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v22)
        {
          char v30 = 0;
          unsigned int v31 = 0;
          uint64_t v26 = 0;
          if (v22 <= v21) {
            unint64_t v22 = *((void *)this + 1);
          }
          while (1)
          {
            if (v22 == v21)
            {
              LODWORD(v26) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_43;
            }
            unint64_t v32 = v21 + 1;
            char v33 = *(unsigned char *)(v23 + v21);
            *((void *)this + 1) = v32;
            v26 |= (unint64_t)(v33 & 0x7F) << v30;
            if ((v33 & 0x80) == 0) {
              break;
            }
            v30 += 7;
            unint64_t v21 = v32;
            BOOL v14 = v31++ > 8;
            if (v14)
            {
LABEL_39:
              LODWORD(v26) = 0;
              goto LABEL_43;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v26) = 0;
          }
        }
        else
        {
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v26 = 0;
          while (1)
          {
            unint64_t v27 = v21 + 1;
            *((void *)this + 1) = v21 + 1;
            char v28 = *(unsigned char *)(v23 + v21);
            v26 |= (unint64_t)(v28 & 0x7F) << v24;
            if ((v28 & 0x80) == 0) {
              break;
            }
            v24 += 7;
            unint64_t v21 = v27;
            BOOL v14 = v25++ > 8;
            if (v14) {
              goto LABEL_39;
            }
          }
        }
LABEL_43:
        *(_DWORD *)(a1 + 16) = v26;
      }
      else
      {
        if (v20 == 1) {
          operator new();
        }
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!result) {
          return result;
        }
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_1016624BC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(const PB::Base **)(result + 8);
  if (v4) {
    uint64_t result = PB::Writer::writeSubmessage(this, v4, 1u);
  }
  if (*(unsigned char *)(v3 + 20))
  {
    int v5 = *(_DWORD *)(v3 + 16);
    return PB::Writer::writeVarInt(this, v5, 2u);
  }
  return result;
}

double sub_101662524(uint64_t a1)
{
  *(void *)a1 = &off_102333410;
  *(_DWORD *)(a1 + 92) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)(a1 + 72) = 0;
  return result;
}

void sub_101662560(PB::Base *this)
{
  *(void *)this = &off_102333410;
  unint64_t v2 = (void *)*((void *)this + 7);
  if (v2)
  {
    *((void *)this + 8) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 4);
  if (v3)
  {
    *((void *)this + 5) = v3;
    operator delete(v3);
  }
  int v4 = (void *)*((void *)this + 1);
  if (v4)
  {
    *((void *)this + 2) = v4;
    operator delete(v4);
  }

  PB::Base::~Base(this);
}

void sub_1016625E4(PB::Base *a1)
{
  sub_101662560(a1);

  operator delete();
}

uint64_t sub_10166261C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 8) = 0u;
  int v4 = (char *)(a1 + 8);
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)a1 = &off_102333410;
  *(_DWORD *)(a1 + 92) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 72) = 0;
  if (*(unsigned char *)(a2 + 92))
  {
    uint64_t v5 = *(void *)(a2 + 80);
    *(unsigned char *)(a1 + 92) = 1;
    *(void *)(a1 + 80) = v5;
  }
  if (a1 != a2)
  {
    sub_1000FB43C(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
    sub_1000FB43C((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
    sub_1000FB43C((char *)(a1 + 56), *(char **)(a2 + 56), *(void *)(a2 + 64), (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 2);
  }
  if ((*(unsigned char *)(a2 + 92) & 2) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 88);
    *(unsigned char *)(a1 + 92) |= 2u;
    *(_DWORD *)(a1 + 88) = v6;
  }
  return a1;
}

uint64_t sub_101662704(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(float **)(a1 + 8);
  int v6 = *(float **)(a1 + 16);
  while (v5 != v6)
  {
    float v7 = *v5++;
    PB::TextFormatter::format(this, "dynamicBiasEstimate", v7);
  }
  uint64_t v8 = *(float **)(a1 + 32);
  char v9 = *(float **)(a1 + 40);
  while (v8 != v9)
  {
    float v10 = *v8++;
    PB::TextFormatter::format(this, "estimateErrorMetric", v10);
  }
  if ((*(unsigned char *)(a1 + 92) & 2) != 0) {
    PB::TextFormatter::format(this, "rawGyroTemperature", *(float *)(a1 + 88));
  }
  unint64_t v11 = *(float **)(a1 + 56);
  unint64_t v12 = *(float **)(a1 + 64);
  while (v11 != v12)
  {
    float v13 = *v11++;
    PB::TextFormatter::format(this, "subFitError", v13);
  }
  if (*(unsigned char *)(a1 + 92)) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 80));
  }

  return PB::TextFormatter::endObject(this);
}

BOOL sub_101662814(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v8 = (void **)(a1 + 56);
    uint64_t v104 = a1 + 72;
    char v9 = (void **)(a1 + 32);
    uint64_t v10 = a1 + 48;
    unint64_t v11 = (void **)(a1 + 8);
    uint64_t v12 = a1 + 24;
    while (1)
    {
      uint64_t v13 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v14 = 0;
      unsigned int v15 = 0;
      unint64_t v16 = 0;
      while (1)
      {
        unint64_t v17 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v18 = *(unsigned char *)(v13 + v2);
        v16 |= (unint64_t)(v18 & 0x7F) << v14;
        if ((v18 & 0x80) == 0) {
          break;
        }
        v14 += 7;
        unint64_t v2 = v17;
        if (v15++ > 8) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v25 = v16 & 7;
      if (v25 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v16 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 92) |= 1u;
          unint64_t v26 = *((void *)this + 1);
          if (v26 > 0xFFFFFFFFFFFFFFF7 || v26 + 8 > *((void *)this + 2)) {
            goto LABEL_158;
          }
          *(void *)(a1 + 80) = *(void *)(*(void *)this + v26);
          uint64_t v27 = *((void *)this + 1) + 8;
          goto LABEL_161;
        case 2u:
          if (v25 != 2)
          {
            uint64_t v72 = *(char **)(a1 + 16);
            unint64_t v71 = *(void *)(a1 + 24);
            if ((unint64_t)v72 >= v71)
            {
              unint64_t v78 = (char *)*v11;
              uint64_t v79 = (v72 - (unsigned char *)*v11) >> 2;
              unint64_t v80 = v79 + 1;
              if ((unint64_t)(v79 + 1) >> 62) {
LABEL_170:
              }
                sub_1001D7FD4();
              uint64_t v81 = v71 - (void)v78;
              if (v81 >> 1 > v80) {
                unint64_t v80 = v81 >> 1;
              }
              if ((unint64_t)v81 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v82 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v82 = v80;
              }
              if (v82)
              {
                v83 = (char *)sub_10017EA34(v12, v82);
                unint64_t v78 = *(char **)(a1 + 8);
                uint64_t v72 = *(char **)(a1 + 16);
              }
              else
              {
                v83 = 0;
              }
              v96 = &v83[4 * v79];
              *(_DWORD *)v96 = 0;
              unint64_t v73 = v96 + 4;
              while (v72 != v78)
              {
                int v97 = *((_DWORD *)v72 - 1);
                v72 -= 4;
                *((_DWORD *)v96 - 1) = v97;
                v96 -= 4;
              }
              *(void *)(a1 + 8) = v96;
              *(void *)(a1 + 16) = v73;
              *(void *)(a1 + 24) = &v83[4 * v82];
              if (v78) {
                operator delete(v78);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v72 = 0;
              unint64_t v73 = v72 + 4;
            }
            *(void *)(a1 + 16) = v73;
            goto LABEL_156;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v28 = *((void *)this + 1);
          unint64_t v29 = *((void *)this + 2);
          while (v28 < v29 && !*((unsigned char *)this + 24))
          {
            unsigned int v31 = *(char **)(a1 + 16);
            unint64_t v30 = *(void *)(a1 + 24);
            if ((unint64_t)v31 >= v30)
            {
              char v33 = (char *)*v11;
              uint64_t v34 = (v31 - (unsigned char *)*v11) >> 2;
              unint64_t v35 = v34 + 1;
              if ((unint64_t)(v34 + 1) >> 62) {
                goto LABEL_170;
              }
              uint64_t v36 = v30 - (void)v33;
              if (v36 >> 1 > v35) {
                unint64_t v35 = v36 >> 1;
              }
              if ((unint64_t)v36 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v37 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v37 = v35;
              }
              if (v37)
              {
                unint64_t v38 = (char *)sub_10017EA34(v12, v37);
                char v33 = *(char **)(a1 + 8);
                unsigned int v31 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v38 = 0;
              }
              v39 = &v38[4 * v34];
              *(_DWORD *)v39 = 0;
              unint64_t v32 = v39 + 4;
              while (v31 != v33)
              {
                int v40 = *((_DWORD *)v31 - 1);
                v31 -= 4;
                *((_DWORD *)v39 - 1) = v40;
                v39 -= 4;
              }
              *(void *)(a1 + 8) = v39;
              *(void *)(a1 + 16) = v32;
              *(void *)(a1 + 24) = &v38[4 * v37];
              if (v33) {
                operator delete(v33);
              }
            }
            else
            {
              *(_DWORD *)unsigned int v31 = 0;
              unint64_t v32 = v31 + 4;
            }
            *(void *)(a1 + 16) = v32;
            unint64_t v41 = *((void *)this + 1);
            if (v41 > 0xFFFFFFFFFFFFFFFBLL || v41 + 4 > *((void *)this + 2)) {
              goto LABEL_109;
            }
            *(v32 - 1) = *(_DWORD *)(*(void *)this + v41);
            unint64_t v29 = *((void *)this + 2);
            unint64_t v28 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v28;
          }
          goto LABEL_110;
        case 3u:
          if (v25 != 2)
          {
            v75 = *(char **)(a1 + 40);
            unint64_t v74 = *(void *)(a1 + 48);
            if ((unint64_t)v75 >= v74)
            {
              uint64_t v84 = (char *)*v9;
              uint64_t v85 = (v75 - (unsigned char *)*v9) >> 2;
              unint64_t v86 = v85 + 1;
              if ((unint64_t)(v85 + 1) >> 62) {
LABEL_171:
              }
                sub_1001D7FD4();
              uint64_t v87 = v74 - (void)v84;
              if (v87 >> 1 > v86) {
                unint64_t v86 = v87 >> 1;
              }
              if ((unint64_t)v87 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v88 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v88 = v86;
              }
              if (v88)
              {
                v89 = (char *)sub_10017EA34(v10, v88);
                uint64_t v84 = *(char **)(a1 + 32);
                v75 = *(char **)(a1 + 40);
              }
              else
              {
                v89 = 0;
              }
              v98 = &v89[4 * v85];
              *(_DWORD *)v98 = 0;
              unint64_t v73 = v98 + 4;
              while (v75 != v84)
              {
                int v99 = *((_DWORD *)v75 - 1);
                v75 -= 4;
                *((_DWORD *)v98 - 1) = v99;
                v98 -= 4;
              }
              *(void *)(a1 + 32) = v98;
              *(void *)(a1 + 40) = v73;
              *(void *)(a1 + 48) = &v89[4 * v88];
              if (v84) {
                operator delete(v84);
              }
            }
            else
            {
              *(_DWORD *)v75 = 0;
              unint64_t v73 = v75 + 4;
            }
            *(void *)(a1 + 40) = v73;
            goto LABEL_156;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v42 = *((void *)this + 1);
          unint64_t v43 = *((void *)this + 2);
          while (v42 < v43 && !*((unsigned char *)this + 24))
          {
            unint64_t v45 = *(char **)(a1 + 40);
            unint64_t v44 = *(void *)(a1 + 48);
            if ((unint64_t)v45 >= v44)
            {
              v47 = (char *)*v9;
              uint64_t v48 = (v45 - (unsigned char *)*v9) >> 2;
              unint64_t v49 = v48 + 1;
              if ((unint64_t)(v48 + 1) >> 62) {
                goto LABEL_171;
              }
              uint64_t v50 = v44 - (void)v47;
              if (v50 >> 1 > v49) {
                unint64_t v49 = v50 >> 1;
              }
              if ((unint64_t)v50 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v51 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v51 = v49;
              }
              if (v51)
              {
                unint64_t v52 = (char *)sub_10017EA34(v10, v51);
                v47 = *(char **)(a1 + 32);
                unint64_t v45 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v52 = 0;
              }
              v53 = &v52[4 * v48];
              *(_DWORD *)v53 = 0;
              v46 = v53 + 4;
              while (v45 != v47)
              {
                int v54 = *((_DWORD *)v45 - 1);
                v45 -= 4;
                *((_DWORD *)v53 - 1) = v54;
                v53 -= 4;
              }
              *(void *)(a1 + 32) = v53;
              *(void *)(a1 + 40) = v46;
              *(void *)(a1 + 48) = &v52[4 * v51];
              if (v47) {
                operator delete(v47);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v45 = 0;
              v46 = v45 + 4;
            }
            *(void *)(a1 + 40) = v46;
            unint64_t v55 = *((void *)this + 1);
            if (v55 > 0xFFFFFFFFFFFFFFFBLL || v55 + 4 > *((void *)this + 2)) {
              goto LABEL_109;
            }
            *(v46 - 1) = *(_DWORD *)(*(void *)this + v55);
            unint64_t v43 = *((void *)this + 2);
            unint64_t v42 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v42;
          }
          goto LABEL_110;
        case 4u:
          if (v25 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v56 = *((void *)this + 1);
            unint64_t v57 = *((void *)this + 2);
            while (v56 < v57 && !*((unsigned char *)this + 24))
            {
              unint64_t v59 = *(char **)(a1 + 64);
              unint64_t v58 = *(void *)(a1 + 72);
              if ((unint64_t)v59 >= v58)
              {
                v61 = (char *)*v8;
                uint64_t v62 = (v59 - (unsigned char *)*v8) >> 2;
                unint64_t v63 = v62 + 1;
                if ((unint64_t)(v62 + 1) >> 62) {
                  goto LABEL_172;
                }
                uint64_t v64 = v58 - (void)v61;
                if (v64 >> 1 > v63) {
                  unint64_t v63 = v64 >> 1;
                }
                if ((unint64_t)v64 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v65 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v65 = v63;
                }
                if (v65)
                {
                  unint64_t v66 = (char *)sub_10017EA34(v104, v65);
                  v61 = *(char **)(a1 + 56);
                  unint64_t v59 = *(char **)(a1 + 64);
                }
                else
                {
                  unint64_t v66 = 0;
                }
                v67 = &v66[4 * v62];
                *(_DWORD *)v67 = 0;
                v60 = v67 + 4;
                while (v59 != v61)
                {
                  int v68 = *((_DWORD *)v59 - 1);
                  v59 -= 4;
                  *((_DWORD *)v67 - 1) = v68;
                  v67 -= 4;
                }
                *(void *)(a1 + 56) = v67;
                *(void *)(a1 + 64) = v60;
                *(void *)(a1 + 72) = &v66[4 * v65];
                if (v61) {
                  operator delete(v61);
                }
              }
              else
              {
                *(_DWORD *)unint64_t v59 = 0;
                v60 = v59 + 4;
              }
              *(void *)(a1 + 64) = v60;
              unint64_t v69 = *((void *)this + 1);
              if (v69 > 0xFFFFFFFFFFFFFFFBLL || v69 + 4 > *((void *)this + 2))
              {
LABEL_109:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v60 - 1) = *(_DWORD *)(*(void *)this + v69);
              unint64_t v57 = *((void *)this + 2);
              unint64_t v56 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v56;
            }
LABEL_110:
            PB::Reader::recallMark();
          }
          else
          {
            unint64_t v77 = *(char **)(a1 + 64);
            unint64_t v76 = *(void *)(a1 + 72);
            if ((unint64_t)v77 >= v76)
            {
              int v90 = (char *)*v8;
              uint64_t v91 = (v77 - (unsigned char *)*v8) >> 2;
              unint64_t v92 = v91 + 1;
              if ((unint64_t)(v91 + 1) >> 62) {
LABEL_172:
              }
                sub_1001D7FD4();
              uint64_t v93 = v76 - (void)v90;
              if (v93 >> 1 > v92) {
                unint64_t v92 = v93 >> 1;
              }
              if ((unint64_t)v93 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v94 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v94 = v92;
              }
              if (v94)
              {
                unint64_t v95 = (char *)sub_10017EA34(v104, v94);
                int v90 = *(char **)(a1 + 56);
                unint64_t v77 = *(char **)(a1 + 64);
              }
              else
              {
                unint64_t v95 = 0;
              }
              v100 = &v95[4 * v91];
              *(_DWORD *)v100 = 0;
              unint64_t v73 = v100 + 4;
              while (v77 != v90)
              {
                int v101 = *((_DWORD *)v77 - 1);
                v77 -= 4;
                *((_DWORD *)v100 - 1) = v101;
                v100 -= 4;
              }
              *(void *)(a1 + 56) = v100;
              *(void *)(a1 + 64) = v73;
              *(void *)(a1 + 72) = &v95[4 * v94];
              if (v90) {
                operator delete(v90);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v77 = 0;
              unint64_t v73 = v77 + 4;
            }
            *(void *)(a1 + 64) = v73;
LABEL_156:
            unint64_t v102 = *((void *)this + 1);
            if (v102 <= 0xFFFFFFFFFFFFFFFBLL && v102 + 4 <= *((void *)this + 2))
            {
              *(v73 - 1) = *(_DWORD *)(*(void *)this + v102);
LABEL_160:
              uint64_t v27 = *((void *)this + 1) + 4;
LABEL_161:
              *((void *)this + 1) = v27;
            }
            else
            {
LABEL_158:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_162:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || *((unsigned char *)this + 24)) {
            return v4 == 0;
          }
          break;
        case 5u:
          *(unsigned char *)(a1 + 92) |= 2u;
          unint64_t v70 = *((void *)this + 1);
          if (v70 > 0xFFFFFFFFFFFFFFFBLL || v70 + 4 > *((void *)this + 2)) {
            goto LABEL_158;
          }
          *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v70);
          goto LABEL_160;
        default:
          if ((PB::Reader::skip(this, v16 >> 3, v25, 0) & 1) == 0) {
            return 0;
          }
          goto LABEL_162;
      }
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v16 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v22 = v2 + 1;
      char v23 = *(unsigned char *)(v13 + v2);
      *((void *)this + 1) = v22;
      v16 |= (unint64_t)(v23 & 0x7F) << v20;
      if ((v23 & 0x80) == 0) {
        goto LABEL_21;
      }
      v20 += 7;
      unint64_t v2 = v22;
      if (v21++ >= 9)
      {
LABEL_20:
        unint64_t v16 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101662FA8(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  if (*(unsigned char *)(result + 92)) {
    double result = PB::Writer::write(this, *(double *)(result + 80), 1u);
  }
  int v4 = *(float **)(v3 + 8);
  uint64_t v5 = *(float **)(v3 + 16);
  while (v4 != v5)
  {
    float v6 = *v4++;
    double result = PB::Writer::write(this, v6, 2u);
  }
  float v7 = *(float **)(v3 + 32);
  uint64_t v8 = *(float **)(v3 + 40);
  while (v7 != v8)
  {
    float v9 = *v7++;
    double result = PB::Writer::write(this, v9, 3u);
  }
  uint64_t v10 = *(float **)(v3 + 56);
  unint64_t v11 = *(float **)(v3 + 64);
  while (v10 != v11)
  {
    float v12 = *v10++;
    double result = PB::Writer::write(this, v12, 4u);
  }
  if ((*(unsigned char *)(v3 + 92) & 2) != 0)
  {
    float v13 = *(float *)(v3 + 88);
    return PB::Writer::write(this, v13, 5u);
  }
  return result;
}

double sub_101663080(uint64_t a1)
{
  *(void *)a1 = &off_102333448;
  *(_DWORD *)(a1 + 60) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return result;
}

void sub_1016630B4(PB::Base *this)
{
  *(void *)this = &off_102333448;
  unint64_t v2 = (void *)*((void *)this + 4);
  if (v2)
  {
    *((void *)this + 5) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 1);
  if (v3)
  {
    *((void *)this + 2) = v3;
    operator delete(v3);
  }

  PB::Base::~Base(this);
}

void sub_101663128(PB::Base *a1)
{
  sub_1016630B4(a1);

  operator delete();
}

uint64_t sub_101663160(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102333448;
  *(_OWORD *)(a1 + 8) = 0u;
  int v4 = (char *)(a1 + 8);
  *(_DWORD *)(a1 + 60) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  if (a1 != a2)
  {
    sub_1000FB43C((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
    sub_1000FB43C(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  if (*(unsigned char *)(a2 + 60))
  {
    int v5 = *(_DWORD *)(a2 + 56);
    *(unsigned char *)(a1 + 60) |= 1u;
    *(_DWORD *)(a1 + 56) = v5;
  }
  return a1;
}

uint64_t sub_101663218(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(float **)(a1 + 8);
  float v6 = *(float **)(a1 + 16);
  while (v5 != v6)
  {
    float v7 = *v5++;
    PB::TextFormatter::format(this, "intercept", v7);
  }
  if (*(unsigned char *)(a1 + 60)) {
    PB::TextFormatter::format(this, "lastMiniCal", *(float *)(a1 + 56));
  }
  uint64_t v8 = *(float **)(a1 + 32);
  float v9 = *(float **)(a1 + 40);
  while (v8 != v9)
  {
    float v10 = *v8++;
    PB::TextFormatter::format(this, "slope", v10);
  }

  return PB::TextFormatter::endObject(this);
}

BOOL sub_1016632E0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v8 = (void **)(a1 + 8);
    uint64_t v9 = a1 + 24;
    float v10 = (void **)(a1 + 32);
    uint64_t v11 = a1 + 48;
    while (1)
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        unint64_t v15 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v21 = v2 + 1;
          char v22 = *(unsigned char *)(v12 + v2);
          *((void *)this + 1) = v21;
          v15 |= (unint64_t)(v22 & 0x7F) << v19;
          if ((v22 & 0x80) == 0) {
            goto LABEL_21;
          }
          v19 += 7;
          unint64_t v2 = v21;
          if (v20++ >= 9)
          {
LABEL_20:
            unint64_t v15 = 0;
            goto LABEL_21;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
        return v4 == 0;
      }
      char v13 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v17 = *(unsigned char *)(v12 + v2);
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          break;
        }
        v13 += 7;
        unint64_t v2 = v16;
        if (v14++ > 8) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v24 = v15 & 7;
      if (v24 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v25 = v15 >> 3;
      if ((v15 >> 3) == 3) {
        break;
      }
      if (v25 == 2)
      {
        if (v24 == 2)
        {
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v41 = *((void *)this + 1);
          unint64_t v42 = *((void *)this + 2);
          while (v41 < v42 && !*((unsigned char *)this + 24))
          {
            unint64_t v44 = *(char **)(a1 + 16);
            unint64_t v43 = *(void *)(a1 + 24);
            if ((unint64_t)v44 >= v43)
            {
              v46 = (char *)*v8;
              uint64_t v47 = (v44 - (unsigned char *)*v8) >> 2;
              unint64_t v48 = v47 + 1;
              if ((unint64_t)(v47 + 1) >> 62) {
                goto LABEL_128;
              }
              uint64_t v49 = v43 - (void)v46;
              if (v49 >> 1 > v48) {
                unint64_t v48 = v49 >> 1;
              }
              if ((unint64_t)v49 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v50 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v50 = v48;
              }
              if (v50)
              {
                unint64_t v51 = (char *)sub_10017EA34(v9, v50);
                v46 = *(char **)(a1 + 8);
                unint64_t v44 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v51 = 0;
              }
              unint64_t v52 = &v51[4 * v47];
              *(_DWORD *)unint64_t v52 = 0;
              unint64_t v45 = v52 + 4;
              while (v44 != v46)
              {
                int v53 = *((_DWORD *)v44 - 1);
                v44 -= 4;
                *((_DWORD *)v52 - 1) = v53;
                v52 -= 4;
              }
              *(void *)(a1 + 8) = v52;
              *(void *)(a1 + 16) = v45;
              *(void *)(a1 + 24) = &v51[4 * v50];
              if (v46) {
                operator delete(v46);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v44 = 0;
              unint64_t v45 = v44 + 4;
            }
            *(void *)(a1 + 16) = v45;
            unint64_t v54 = *((void *)this + 1);
            if (v54 > 0xFFFFFFFFFFFFFFFBLL || v54 + 4 > *((void *)this + 2))
            {
LABEL_82:
              *((unsigned char *)this + 24) = 1;
              goto LABEL_83;
            }
            *(v45 - 1) = *(_DWORD *)(*(void *)this + v54);
            unint64_t v42 = *((void *)this + 2);
            unint64_t v41 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v41;
          }
          goto LABEL_83;
        }
        unint64_t v59 = *(char **)(a1 + 16);
        unint64_t v58 = *(void *)(a1 + 24);
        if ((unint64_t)v59 >= v58)
        {
          unint64_t v66 = (char *)*v8;
          uint64_t v67 = (v59 - (unsigned char *)*v8) >> 2;
          unint64_t v68 = v67 + 1;
          if ((unint64_t)(v67 + 1) >> 62) {
LABEL_128:
          }
            sub_1001D7FD4();
          uint64_t v69 = v58 - (void)v66;
          if (v69 >> 1 > v68) {
            unint64_t v68 = v69 >> 1;
          }
          if ((unint64_t)v69 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v70 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v70 = v68;
          }
          if (v70)
          {
            unint64_t v71 = (char *)sub_10017EA34(v9, v70);
            unint64_t v66 = *(char **)(a1 + 8);
            unint64_t v59 = *(char **)(a1 + 16);
          }
          else
          {
            unint64_t v71 = 0;
          }
          unint64_t v74 = &v71[4 * v67];
          *(_DWORD *)unint64_t v74 = 0;
          unint64_t v57 = v74 + 4;
          while (v59 != v66)
          {
            int v75 = *((_DWORD *)v59 - 1);
            v59 -= 4;
            *((_DWORD *)v74 - 1) = v75;
            v74 -= 4;
          }
          *(void *)(a1 + 8) = v74;
          *(void *)(a1 + 16) = v57;
          *(void *)(a1 + 24) = &v71[4 * v70];
          if (v66) {
            operator delete(v66);
          }
        }
        else
        {
          *(_DWORD *)unint64_t v59 = 0;
          unint64_t v57 = v59 + 4;
        }
        *(void *)(a1 + 16) = v57;
LABEL_114:
        unint64_t v76 = *((void *)this + 1);
        if (v76 > 0xFFFFFFFFFFFFFFFBLL || v76 + 4 > *((void *)this + 2)) {
          goto LABEL_116;
        }
        *(v57 - 1) = *(_DWORD *)(*(void *)this + v76);
LABEL_118:
        *((void *)this + 1) += 4;
        goto LABEL_119;
      }
      if (v25 == 1)
      {
        if (v24 == 2)
        {
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v26 = *((void *)this + 1);
          unint64_t v27 = *((void *)this + 2);
          while (v26 < v27 && !*((unsigned char *)this + 24))
          {
            unint64_t v29 = *(char **)(a1 + 40);
            unint64_t v28 = *(void *)(a1 + 48);
            if ((unint64_t)v29 >= v28)
            {
              unsigned int v31 = (char *)*v10;
              uint64_t v32 = (v29 - (unsigned char *)*v10) >> 2;
              unint64_t v33 = v32 + 1;
              if ((unint64_t)(v32 + 1) >> 62) {
                goto LABEL_127;
              }
              uint64_t v34 = v28 - (void)v31;
              if (v34 >> 1 > v33) {
                unint64_t v33 = v34 >> 1;
              }
              if ((unint64_t)v34 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v35 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v35 = v33;
              }
              if (v35)
              {
                uint64_t v36 = (char *)sub_10017EA34(v11, v35);
                unsigned int v31 = *(char **)(a1 + 32);
                unint64_t v29 = *(char **)(a1 + 40);
              }
              else
              {
                uint64_t v36 = 0;
              }
              unint64_t v37 = &v36[4 * v32];
              *(_DWORD *)unint64_t v37 = 0;
              unint64_t v30 = v37 + 4;
              while (v29 != v31)
              {
                int v38 = *((_DWORD *)v29 - 1);
                v29 -= 4;
                *((_DWORD *)v37 - 1) = v38;
                v37 -= 4;
              }
              *(void *)(a1 + 32) = v37;
              *(void *)(a1 + 40) = v30;
              *(void *)(a1 + 48) = &v36[4 * v35];
              if (v31) {
                operator delete(v31);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v29 = 0;
              unint64_t v30 = v29 + 4;
            }
            *(void *)(a1 + 40) = v30;
            unint64_t v39 = *((void *)this + 1);
            if (v39 > 0xFFFFFFFFFFFFFFFBLL || v39 + 4 > *((void *)this + 2)) {
              goto LABEL_82;
            }
            *(v30 - 1) = *(_DWORD *)(*(void *)this + v39);
            unint64_t v27 = *((void *)this + 2);
            unint64_t v26 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v26;
          }
LABEL_83:
          PB::Reader::recallMark();
          goto LABEL_119;
        }
        unint64_t v56 = *(char **)(a1 + 40);
        unint64_t v55 = *(void *)(a1 + 48);
        if ((unint64_t)v56 >= v55)
        {
          v60 = (char *)*v10;
          uint64_t v61 = (v56 - (unsigned char *)*v10) >> 2;
          unint64_t v62 = v61 + 1;
          if ((unint64_t)(v61 + 1) >> 62) {
LABEL_127:
          }
            sub_1001D7FD4();
          uint64_t v63 = v55 - (void)v60;
          if (v63 >> 1 > v62) {
            unint64_t v62 = v63 >> 1;
          }
          if ((unint64_t)v63 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v64 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v64 = v62;
          }
          if (v64)
          {
            unint64_t v65 = (char *)sub_10017EA34(v11, v64);
            v60 = *(char **)(a1 + 32);
            unint64_t v56 = *(char **)(a1 + 40);
          }
          else
          {
            unint64_t v65 = 0;
          }
          uint64_t v72 = &v65[4 * v61];
          *(_DWORD *)uint64_t v72 = 0;
          unint64_t v57 = v72 + 4;
          while (v56 != v60)
          {
            int v73 = *((_DWORD *)v56 - 1);
            v56 -= 4;
            *((_DWORD *)v72 - 1) = v73;
            v72 -= 4;
          }
          *(void *)(a1 + 32) = v72;
          *(void *)(a1 + 40) = v57;
          *(void *)(a1 + 48) = &v65[4 * v64];
          if (v60) {
            operator delete(v60);
          }
        }
        else
        {
          *(_DWORD *)unint64_t v56 = 0;
          unint64_t v57 = v56 + 4;
        }
        *(void *)(a1 + 40) = v57;
        goto LABEL_114;
      }
      if ((PB::Reader::skip(this, v25, v24, 0) & 1) == 0) {
        return 0;
      }
LABEL_119:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    *(unsigned char *)(a1 + 60) |= 1u;
    unint64_t v40 = *((void *)this + 1);
    if (v40 > 0xFFFFFFFFFFFFFFFBLL || v40 + 4 > *((void *)this + 2))
    {
LABEL_116:
      *((unsigned char *)this + 24) = 1;
      goto LABEL_119;
    }
    *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v40);
    goto LABEL_118;
  }
  return v4 == 0;
}

uint64_t sub_101663854(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(float **)(result + 32);
  int v5 = *(float **)(result + 40);
  while (v4 != v5)
  {
    float v6 = *v4++;
    double result = PB::Writer::write(this, v6, 1u);
  }
  float v7 = *(float **)(v3 + 8);
  uint64_t v8 = *(float **)(v3 + 16);
  while (v7 != v8)
  {
    float v9 = *v7++;
    double result = PB::Writer::write(this, v9, 2u);
  }
  if (*(unsigned char *)(v3 + 60))
  {
    float v10 = *(float *)(v3 + 56);
    return PB::Writer::write(this, v10, 3u);
  }
  return result;
}

void *sub_1016638F4(void *result)
{
  *double result = off_102333480;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void sub_101663918(void **a1)
{
  *a1 = off_102333480;
  unint64_t v2 = a1 + 1;
  sub_1016B1E74(&v2);
  PB::Base::~Base((PB::Base *)a1);
}

void sub_101663974(void **a1)
{
  *a1 = off_102333480;
  unint64_t v2 = a1 + 1;
  sub_1016B1E74(&v2);
  PB::Base::~Base((PB::Base *)a1);
  operator delete();
}

void *sub_1016639E4(void *result, uint64_t a2)
{
  result[1] = 0;
  *double result = off_102333480;
  result[2] = 0;
  result[3] = 0;
  if (*(void *)(a2 + 8) != *(void *)(a2 + 16)) {
    sub_101663A5C();
  }
  return result;
}

void sub_101663A5C()
{
}

void sub_101663B60(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100C341AC((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_101663BA8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(uint64_t **)(a1 + 8);
  float v6 = *(uint64_t **)(a1 + 16);
  while (v5 != v6)
  {
    uint64_t v7 = *v5++;
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v7 + 32))(v7, this, "sample");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101663C40(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        sub_101663DFC();
      }
      uint64_t result = PB::Reader::skip(this, v10 >> 3, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

void sub_101663DFC()
{
}

void sub_101663F14(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100C341AC((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_101663F58(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base ***)(result + 8);
  for (i = *(const PB::Base ***)(result + 16); v2 != i; uint64_t result = PB::Writer::writeSubmessage(this, v5, 1u))
    int v5 = *v2++;
  return result;
}

void *sub_101663FA4(void *result)
{
  *uint64_t result = off_1023334B8;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void sub_101663FC8(void **a1)
{
  *a1 = off_1023334B8;
  unint64_t v2 = a1 + 1;
  sub_1016B1E74(&v2);
  PB::Base::~Base((PB::Base *)a1);
}

void sub_101664024(void **a1)
{
  *a1 = off_1023334B8;
  unint64_t v2 = a1 + 1;
  sub_1016B1E74(&v2);
  PB::Base::~Base((PB::Base *)a1);
  operator delete();
}

void *sub_101664094(void *result, uint64_t a2)
{
  result[1] = 0;
  *uint64_t result = off_1023334B8;
  result[2] = 0;
  result[3] = 0;
  if (*(void *)(a2 + 8) != *(void *)(a2 + 16)) {
    sub_10166410C();
  }
  return result;
}

void sub_10166410C()
{
}

void sub_101664210(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100C341AC((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_101664258(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(uint64_t **)(a1 + 8);
  float v6 = *(uint64_t **)(a1 + 16);
  while (v5 != v6)
  {
    uint64_t v7 = *v5++;
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v7 + 32))(v7, this, "sample");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_1016642F0(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        sub_1016644AC();
      }
      uint64_t result = PB::Reader::skip(this, v10 >> 3, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

void sub_1016644AC()
{
}

void sub_1016645C4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100C341AC((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_101664608(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base ***)(result + 8);
  for (i = *(const PB::Base ***)(result + 16); v2 != i; uint64_t result = PB::Writer::writeSubmessage(this, v5, 1u))
    int v5 = *v2++;
  return result;
}

uint64_t sub_101664654(uint64_t result)
{
  *(void *)uint64_t result = &off_1023334F0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void sub_10166467C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

float sub_1016646B4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_1023334F0;
  *(_DWORD *)(a1 + 24) = 0;
  char v2 = *(unsigned char *)(a2 + 24);
  if (v2)
  {
    float result = *(float *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 24) = 1;
    *(float *)(a1 + 8) = result;
    char v2 = *(unsigned char *)(a2 + 24);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 24) & 2) != 0)
  {
LABEL_5:
    float result = *(float *)(a2 + 12);
    v3 |= 2u;
    *(unsigned char *)(a1 + 24) = v3;
    *(float *)(a1 + 12) = result;
    char v2 = *(unsigned char *)(a2 + 24);
  }
LABEL_6:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      return result;
    }
LABEL_10:
    float result = *(float *)(a2 + 20);
    *(unsigned char *)(a1 + 24) = v3 | 8;
    *(float *)(a1 + 20) = result;
    return result;
  }
  float result = *(float *)(a2 + 16);
  v3 |= 4u;
  *(unsigned char *)(a1 + 24) = v3;
  *(float *)(a1 + 16) = result;
  if ((*(unsigned char *)(a2 + 24) & 8) != 0) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_101664750(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 24);
  if (v5)
  {
    PB::TextFormatter::format(this, "temperature", *(float *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 24);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a1 + 24) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "x", *(float *)(a1 + 12));
  char v5 = *(unsigned char *)(a1 + 24);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(this, "y", *(float *)(a1 + 16));
  if ((*(unsigned char *)(a1 + 24) & 8) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "z", *(float *)(a1 + 20));
LABEL_6:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101664814(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 24) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_37;
        case 2u:
          *(unsigned char *)(a1 + 24) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(_DWORD *)(a1 + 12) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_37;
        case 3u:
          *(unsigned char *)(a1 + 24) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_37;
        case 4u:
          *(unsigned char *)(a1 + 24) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
LABEL_37:
            unint64_t v2 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_35:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101664A8C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 24);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(result + 8), 1u);
    char v4 = *(unsigned char *)(v3 + 24);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16), 3u);
      if ((*(unsigned char *)(v3 + 24) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 24) & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 12), 2u);
  char v4 = *(unsigned char *)(v3 + 24);
  if ((v4 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 8) == 0) {
    return result;
  }
LABEL_9:
  float v5 = *(float *)(v3 + 20);

  return PB::Writer::write(this, v5, 4u);
}

uint64_t sub_101664B34(uint64_t result)
{
  *(void *)uint64_t result = &off_102333528;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void sub_101664B58(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &off_102333528;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_101664BD8(PB::Base *a1)
{
  sub_101664B58(a1);

  operator delete();
}

uint64_t sub_101664C10(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102333528;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 24) = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  if (*(unsigned char *)(a2 + 24))
  {
    uint64_t v2 = *(void *)(a2 + 16);
    *(unsigned char *)(result + 24) |= 1u;
    *(void *)(result + 16) = v2;
  }
  return result;
}

uint64_t sub_101664CD8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }
  if (*(unsigned char *)(a1 + 24)) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 16));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101664D70(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 24) |= 1u;
        unint64_t v21 = *((void *)this + 1);
        if (v21 <= 0xFFFFFFFFFFFFFFF7 && v21 + 8 <= *((void *)this + 2))
        {
          *(void *)(a1 + 16) = *(void *)(*(void *)this + v21);
          *((void *)this + 1) += 8;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        if (v20 == 1) {
          operator new();
        }
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!result) {
          return result;
        }
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101664FE0(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(const PB::Base **)(result + 8);
  if (v4) {
    uint64_t result = PB::Writer::writeSubmessage(this, v4, 1u);
  }
  if (*(unsigned char *)(v3 + 24))
  {
    double v5 = *(double *)(v3 + 16);
    return PB::Writer::write(this, v5, 2u);
  }
  return result;
}

uint64_t sub_101665048(uint64_t result)
{
  if (!*(void *)(result + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_1016650F4(uint64_t result)
{
  *(void *)uint64_t result = &off_102333560;
  *(_DWORD *)(result + 60) = 0;
  return result;
}

void sub_10166511C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_101665154(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102333560;
  *(_DWORD *)(result + 60) = 0;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    __int16 v3 = 1;
    *(_WORD *)(result + 60) = 1;
    *(void *)(result + 8) = v4;
    __int16 v2 = *(_WORD *)(a2 + 60);
    if ((v2 & 0x100) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((*(_WORD *)(a2 + 60) & 0x100) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 44);
    v3 |= 0x100u;
    *(_WORD *)(result + 60) = v3;
    *(_DWORD *)(result + 44) = v5;
    __int16 v2 = *(_WORD *)(a2 + 60);
  }
LABEL_6:
  if ((v2 & 0x200) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 48);
    v3 |= 0x200u;
    *(_WORD *)(result + 60) = v3;
    *(_DWORD *)(result + 48) = v6;
    __int16 v2 = *(_WORD *)(a2 + 60);
    if ((v2 & 0x400) == 0)
    {
LABEL_8:
      if ((v2 & 0x80) == 0) {
        goto LABEL_9;
      }
      goto LABEL_19;
    }
  }
  else if ((v2 & 0x400) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 52);
  v3 |= 0x400u;
  *(_WORD *)(result + 60) = v3;
  *(_DWORD *)(result + 52) = v7;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x80) == 0)
  {
LABEL_9:
    if ((v2 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_19:
  int v8 = *(_DWORD *)(a2 + 40);
  v3 |= 0x80u;
  *(_WORD *)(result + 60) = v3;
  *(_DWORD *)(result + 40) = v8;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x40) == 0)
  {
LABEL_10:
    if ((v2 & 0x800) == 0) {
      goto LABEL_11;
    }
    goto LABEL_21;
  }
LABEL_20:
  int v9 = *(_DWORD *)(a2 + 36);
  v3 |= 0x40u;
  *(_WORD *)(result + 60) = v3;
  *(_DWORD *)(result + 36) = v9;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x800) == 0)
  {
LABEL_11:
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_21:
  int v10 = *(_DWORD *)(a2 + 56);
  v3 |= 0x800u;
  *(_WORD *)(result + 60) = v3;
  *(_DWORD *)(result + 56) = v10;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 2) == 0)
  {
LABEL_12:
    if ((v2 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v11 = *(_DWORD *)(a2 + 16);
  v3 |= 2u;
  *(_WORD *)(result + 60) = v3;
  *(_DWORD *)(result + 16) = v11;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 8) == 0)
  {
LABEL_13:
    if ((v2 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_24;
  }
LABEL_23:
  int v12 = *(_DWORD *)(a2 + 24);
  v3 |= 8u;
  *(_WORD *)(result + 60) = v3;
  *(_DWORD *)(result + 24) = v12;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x10) == 0)
  {
LABEL_14:
    if ((v2 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_25;
  }
LABEL_24:
  int v13 = *(_DWORD *)(a2 + 28);
  v3 |= 0x10u;
  *(_WORD *)(result + 60) = v3;
  *(_DWORD *)(result + 28) = v13;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x20) == 0)
  {
LABEL_15:
    if ((v2 & 4) == 0) {
      return result;
    }
LABEL_26:
    int v15 = *(_DWORD *)(a2 + 20);
    *(_WORD *)(result + 60) = v3 | 4;
    *(_DWORD *)(result + 20) = v15;
    return result;
  }
LABEL_25:
  int v14 = *(_DWORD *)(a2 + 32);
  v3 |= 0x20u;
  *(_WORD *)(result + 60) = v3;
  *(_DWORD *)(result + 32) = v14;
  if ((*(_WORD *)(a2 + 60) & 4) != 0) {
    goto LABEL_26;
  }
  return result;
}

uint64_t sub_1016652D0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "accuracy", *(float *)(a1 + 16));
    __int16 v5 = *(_WORD *)(a1 + 60);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v5 & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "calibrationLevel", *(_DWORD *)(a1 + 20));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "magneticFieldX", *(float *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "magneticFieldY", *(float *)(a1 + 28));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x20) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "magneticFieldZ", *(float *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x40) == 0)
  {
LABEL_7:
    if ((v5 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "magneticHeading", *(float *)(a1 + 36));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x80) == 0)
  {
LABEL_8:
    if ((v5 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "quaternionW", *(float *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x100) == 0)
  {
LABEL_9:
    if ((v5 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "quaternionX", *(float *)(a1 + 44));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x200) == 0)
  {
LABEL_10:
    if ((v5 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "quaternionY", *(float *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x400) == 0)
  {
LABEL_11:
    if ((v5 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "quaternionZ", *(float *)(a1 + 52));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 1) == 0)
  {
LABEL_12:
    if ((v5 & 0x800) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_27:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  if ((*(_WORD *)(a1 + 60) & 0x800) != 0) {
LABEL_13:
  }
    PB::TextFormatter::format(this, "trueHeading", *(float *)(a1 + 56));
LABEL_14:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101665494(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 60) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              unint64_t v2 = *((void *)this + 1) + 8;
              goto LABEL_73;
            case 2u:
              *(_WORD *)(a1 + 60) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_72;
            case 3u:
              *(_WORD *)(a1 + 60) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_72;
            case 4u:
              *(_WORD *)(a1 + 60) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_72;
            case 5u:
              *(_WORD *)(a1 + 60) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_72;
            case 6u:
              *(_WORD *)(a1 + 60) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_72;
            case 7u:
              *(_WORD *)(a1 + 60) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_72;
            case 8u:
              *(_WORD *)(a1 + 60) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_72;
            case 9u:
              *(_WORD *)(a1 + 60) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_72;
            case 0xAu:
              *(_WORD *)(a1 + 60) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_72;
            case 0xBu:
              *(_WORD *)(a1 + 60) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
LABEL_72:
                unint64_t v2 = *((void *)this + 1) + 4;
LABEL_73:
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_56:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_79;
            case 0xCu:
              *(_WORD *)(a1 + 60) |= 4u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v27 = 0;
                unsigned int v28 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_78;
                  }
                  unint64_t v29 = v21++;
                  char v30 = *(unsigned char *)(v22 + v29);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v30 & 0x7F) << v27;
                  if ((v30 & 0x80) == 0) {
                    break;
                  }
                  v27 += 7;
                  BOOL v14 = v28++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_77:
                    unint64_t v2 = v29 + 1;
                    goto LABEL_78;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_77;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_78;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_78:
              *(_DWORD *)(a1 + 20) = v25;
LABEL_79:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_79;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_1016659A8(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 60);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8), 1u);
    __int16 v4 = *(_WORD *)(v3 + 60);
    if ((v4 & 0x100) == 0)
    {
LABEL_3:
      if ((v4 & 0x200) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((*(_WORD *)(result + 60) & 0x100) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44), 2u);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x200) == 0)
  {
LABEL_4:
    if ((v4 & 0x400) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48), 3u);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x400) == 0)
  {
LABEL_5:
    if ((v4 & 0x80) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52), 4u);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x80) == 0)
  {
LABEL_6:
    if ((v4 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40), 5u);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x40) == 0)
  {
LABEL_7:
    if ((v4 & 0x800) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36), 6u);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x800) == 0)
  {
LABEL_8:
    if ((v4 & 2) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56), 7u);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 2) == 0)
  {
LABEL_9:
    if ((v4 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16), 8u);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 8) == 0)
  {
LABEL_10:
    if ((v4 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24), 9u);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x10) == 0)
  {
LABEL_11:
    if ((v4 & 0x20) == 0) {
      goto LABEL_12;
    }
LABEL_24:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32), 0xBu);
    if ((*(_WORD *)(v3 + 60) & 4) == 0) {
      return result;
    }
    goto LABEL_25;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28), 0xAu);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x20) != 0) {
    goto LABEL_24;
  }
LABEL_12:
  if ((v4 & 4) == 0) {
    return result;
  }
LABEL_25:
  int v5 = *(_DWORD *)(v3 + 20);

  return PB::Writer::writeVarInt(this, v5, 0xCu);
}

uint64_t sub_101665B30(uint64_t result)
{
  *(void *)uint64_t result = &off_102333598;
  *(_DWORD *)(result + 12) = 0;
  return result;
}

void sub_101665B58(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

float sub_101665B90(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102333598;
  *(_DWORD *)(a1 + 12) = 0;
  if (*(unsigned char *)(a2 + 12))
  {
    float result = *(float *)(a2 + 8);
    *(unsigned char *)(a1 + 12) = 1;
    *(float *)(a1 + 8) = result;
  }
  return result;
}

uint64_t sub_101665BCC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 12)) {
    PB::TextFormatter::format(this, "dt", *(float *)(a1 + 8));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101665C2C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 12) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
        {
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 4;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101665DC8(uint64_t result, PB::Writer *this)
{
  if (*(unsigned char *)(result + 12)) {
    return PB::Writer::write(this, *(float *)(result + 8), 1u);
  }
  return result;
}

uint64_t sub_101665DE4(uint64_t result)
{
  *(void *)uint64_t result = &off_1023335D0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void sub_101665E0C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

float sub_101665E44(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_1023335D0;
  *(_DWORD *)(a1 + 24) = 0;
  char v2 = *(unsigned char *)(a2 + 24);
  if (v2)
  {
    float result = *(float *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 24) = 1;
    *(float *)(a1 + 8) = result;
    char v2 = *(unsigned char *)(a2 + 24);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 24) & 2) != 0)
  {
LABEL_5:
    float result = *(float *)(a2 + 12);
    v3 |= 2u;
    *(unsigned char *)(a1 + 24) = v3;
    *(float *)(a1 + 12) = result;
    char v2 = *(unsigned char *)(a2 + 24);
  }
LABEL_6:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      return result;
    }
LABEL_10:
    float result = *(float *)(a2 + 20);
    *(unsigned char *)(a1 + 24) = v3 | 8;
    *(float *)(a1 + 20) = result;
    return result;
  }
  float result = *(float *)(a2 + 16);
  v3 |= 4u;
  *(unsigned char *)(a1 + 24) = v3;
  *(float *)(a1 + 16) = result;
  if ((*(unsigned char *)(a2 + 24) & 8) != 0) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_101665EE0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 24);
  if (v5)
  {
    PB::TextFormatter::format(this, "temperature", *(float *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 24);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a1 + 24) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "x", *(float *)(a1 + 12));
  char v5 = *(unsigned char *)(a1 + 24);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(this, "y", *(float *)(a1 + 16));
  if ((*(unsigned char *)(a1 + 24) & 8) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "z", *(float *)(a1 + 20));
LABEL_6:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101665FA4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 24) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_37;
        case 2u:
          *(unsigned char *)(a1 + 24) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(_DWORD *)(a1 + 12) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_37;
        case 3u:
          *(unsigned char *)(a1 + 24) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_37;
        case 4u:
          *(unsigned char *)(a1 + 24) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
LABEL_37:
            unint64_t v2 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_35:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10166621C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 24);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(result + 8), 1u);
    char v4 = *(unsigned char *)(v3 + 24);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16), 3u);
      if ((*(unsigned char *)(v3 + 24) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 24) & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 12), 2u);
  char v4 = *(unsigned char *)(v3 + 24);
  if ((v4 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 8) == 0) {
    return result;
  }
LABEL_9:
  float v5 = *(float *)(v3 + 20);

  return PB::Writer::write(this, v5, 4u);
}

uint64_t sub_1016662C4(uint64_t result)
{
  *(void *)uint64_t result = &off_102333608;
  *(_DWORD *)(result + 28) = 0;
  return result;
}

void sub_1016662EC(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

float sub_101666324(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102333608;
  *(_DWORD *)(a1 + 28) = 0;
  char v2 = *(unsigned char *)(a2 + 28);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 28) = 1;
    *(void *)(a1 + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 28) & 2) != 0)
  {
LABEL_5:
    LODWORD(v4) = *(_DWORD *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(a1 + 28) = v3;
    *(_DWORD *)(a1 + 16) = v4;
    char v2 = *(unsigned char *)(a2 + 28);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    LODWORD(v4) = *(_DWORD *)(a2 + 20);
    v3 |= 4u;
    *(unsigned char *)(a1 + 28) = v3;
    *(_DWORD *)(a1 + 20) = v4;
    if ((*(unsigned char *)(a2 + 28) & 8) == 0) {
      return *(float *)&v4;
    }
  }
  else if ((v2 & 8) == 0)
  {
    return *(float *)&v4;
  }
  LODWORD(v4) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = v3 | 8;
  *(_DWORD *)(a1 + 24) = v4;
  return *(float *)&v4;
}

uint64_t sub_1016663C0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 28);
  if (v5)
  {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 28);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a1 + 28) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "x", *(float *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(this, "y", *(float *)(a1 + 20));
  if ((*(unsigned char *)(a1 + 28) & 8) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "z", *(float *)(a1 + 24));
LABEL_6:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101666484(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 28) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          goto LABEL_38;
        case 2u:
          *(unsigned char *)(a1 + 28) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_37;
        case 3u:
          *(unsigned char *)(a1 + 28) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_37;
        case 4u:
          *(unsigned char *)(a1 + 28) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
LABEL_37:
            unint64_t v2 = *((void *)this + 1) + 4;
LABEL_38:
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_35:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101666704(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 28);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8), 1u);
    char v4 = *(unsigned char *)(v3 + 28);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20), 3u);
      if ((*(unsigned char *)(v3 + 28) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 28) & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16), 2u);
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 8) == 0) {
    return result;
  }
LABEL_9:
  float v5 = *(float *)(v3 + 24);

  return PB::Writer::write(this, v5, 4u);
}

uint64_t sub_1016667AC(uint64_t result)
{
  *(void *)uint64_t result = &off_102333640;
  *(_DWORD *)(result + 36) = 0;
  return result;
}

void sub_1016667D4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_10166680C(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102333640;
  *(_DWORD *)(result + 36) = 0;
  char v2 = *(unsigned char *)(a2 + 36);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(result + 36) = 1;
    *(void *)(result + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 36);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 36) & 4) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 20);
    v3 |= 4u;
    *(unsigned char *)(result + 36) = v3;
    *(_DWORD *)(result + 20) = v5;
    char v2 = *(unsigned char *)(a2 + 36);
  }
LABEL_6:
  if ((v2 & 8) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 24);
    v3 |= 8u;
    *(unsigned char *)(result + 36) = v3;
    *(_DWORD *)(result + 24) = v6;
    char v2 = *(unsigned char *)(a2 + 36);
    if ((v2 & 0x10) == 0)
    {
LABEL_8:
      if ((v2 & 2) == 0) {
        goto LABEL_9;
      }
      goto LABEL_13;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 28);
  v3 |= 0x10u;
  *(unsigned char *)(result + 36) = v3;
  *(_DWORD *)(result + 28) = v7;
  char v2 = *(unsigned char *)(a2 + 36);
  if ((v2 & 2) == 0)
  {
LABEL_9:
    if ((v2 & 0x20) == 0) {
      return result;
    }
LABEL_14:
    char v9 = *(unsigned char *)(a2 + 32);
    *(unsigned char *)(result + 36) = v3 | 0x20;
    *(unsigned char *)(result + 32) = v9;
    return result;
  }
LABEL_13:
  int v8 = *(_DWORD *)(a2 + 16);
  v3 |= 2u;
  *(unsigned char *)(result + 36) = v3;
  *(_DWORD *)(result + 16) = v8;
  if ((*(unsigned char *)(a2 + 36) & 0x20) != 0) {
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_1016668E0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 36);
  if ((v5 & 0x20) != 0)
  {
    PB::TextFormatter::format(this, "fsync", *(unsigned char *)(a1 + 32));
    char v5 = *(unsigned char *)(a1 + 36);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((*(unsigned char *)(a1 + 36) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "sampleNum", *(_DWORD *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 36);
  if ((v5 & 1) == 0)
  {
LABEL_4:
    if ((v5 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  char v5 = *(unsigned char *)(a1 + 36);
  if ((v5 & 4) == 0)
  {
LABEL_5:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(this, "x", *(float *)(a1 + 20));
  char v5 = *(unsigned char *)(a1 + 36);
  if ((v5 & 8) == 0)
  {
LABEL_6:
    if ((v5 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_15:
  PB::TextFormatter::format(this, "y", *(float *)(a1 + 24));
  if ((*(unsigned char *)(a1 + 36) & 0x10) != 0) {
LABEL_7:
  }
    PB::TextFormatter::format(this, "z", *(float *)(a1 + 28));
LABEL_8:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_1016669E4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 36) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_35;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              unint64_t v2 = *((void *)this + 1) + 8;
              goto LABEL_56;
            case 2u:
              *(unsigned char *)(a1 + 36) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_35;
              }
              *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_55;
            case 3u:
              *(unsigned char *)(a1 + 36) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_35;
              }
              *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_55;
            case 4u:
              *(unsigned char *)(a1 + 36) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
LABEL_55:
                unint64_t v2 = *((void *)this + 1) + 4;
LABEL_56:
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_35:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_62;
            case 5u:
              *(unsigned char *)(a1 + 36) |= 2u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v29 = 0;
                unsigned int v30 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_61;
                  }
                  unint64_t v31 = v21++;
                  char v32 = *(unsigned char *)(v22 + v31);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v32 & 0x7F) << v29;
                  if ((v32 & 0x80) == 0) {
                    break;
                  }
                  v29 += 7;
                  BOOL v14 = v30++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_60:
                    unint64_t v2 = v31 + 1;
                    goto LABEL_61;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_60;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_61;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_61:
              *(_DWORD *)(a1 + 16) = v25;
LABEL_62:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 6u:
              *(unsigned char *)(a1 + 36) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v28 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v27 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v28 = v27 != 0;
              }
              *(unsigned char *)(a1 + 32) = v28;
              goto LABEL_62;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_62;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_101666D9C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 36);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8), 1u);
    char v4 = *(unsigned char *)(v3 + 36);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((*(unsigned char *)(result + 36) & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20), 2u);
  char v4 = *(unsigned char *)(v3 + 36);
  if ((v4 & 8) == 0)
  {
LABEL_4:
    if ((v4 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24), 3u);
  char v4 = *(unsigned char *)(v3 + 36);
  if ((v4 & 0x10) == 0)
  {
LABEL_5:
    if ((v4 & 2) == 0) {
      goto LABEL_6;
    }
LABEL_12:
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 16), 5u);
    if ((*(unsigned char *)(v3 + 36) & 0x20) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_11:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28), 4u);
  char v4 = *(unsigned char *)(v3 + 36);
  if ((v4 & 2) != 0) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v4 & 0x20) == 0) {
    return result;
  }
LABEL_13:
  char v5 = *(unsigned char *)(v3 + 32);

  return PB::Writer::write(this, v5, 6u);
}

uint64_t sub_101666E7C(uint64_t result)
{
  *(void *)uint64_t result = &off_102333678;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void sub_101666EA4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_101666EDC(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102333678;
  *(_DWORD *)(result + 16) = 0;
  if ((*(unsigned char *)(a2 + 16) & 2) != 0)
  {
    int v3 = *(_DWORD *)(a2 + 12);
    *(unsigned char *)(result + 16) = 2;
    *(_DWORD *)(result + 12) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 16) & 1) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 1;
  if (*(unsigned char *)(a2 + 16))
  {
LABEL_5:
    int v4 = *(_DWORD *)(a2 + 8);
    *(unsigned char *)(result + 16) = v2;
    *(_DWORD *)(result + 8) = v4;
  }
  return result;
}

uint64_t sub_101666F40(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 16);
  if (v5)
  {
    PB::TextFormatter::format(this, "location", *(_DWORD *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 16);
  }
  if ((v5 & 2) != 0) {
    PB::TextFormatter::format(this, "temperature", *(float *)(a1 + 12));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101666FBC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 16) |= 1u;
        unint64_t v21 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v22 = *(void *)this;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v25 = 0;
          if (v2 <= v21) {
            unint64_t v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v21)
            {
              LODWORD(v25) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_47;
            }
            unint64_t v30 = v21++;
            char v31 = *(unsigned char *)(v22 + v30);
            *((void *)this + 1) = v21;
            v25 |= (unint64_t)(v31 & 0x7F) << v28;
            if ((v31 & 0x80) == 0) {
              break;
            }
            v28 += 7;
            BOOL v14 = v29++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              goto LABEL_46;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v25) = 0;
          }
LABEL_46:
          unint64_t v2 = v30 + 1;
        }
        else
        {
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          while (1)
          {
            unint64_t v2 = v21 + 1;
            *((void *)this + 1) = v21 + 1;
            char v26 = *(unsigned char *)(v22 + v21);
            v25 |= (unint64_t)(v26 & 0x7F) << v23;
            if ((v26 & 0x80) == 0) {
              break;
            }
            v23 += 7;
            unint64_t v21 = v2;
            BOOL v14 = v24++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              break;
            }
          }
        }
LABEL_47:
        *(_DWORD *)(a1 + 8) = v25;
      }
      else if (v20 == 1)
      {
        *(unsigned char *)(a1 + 16) |= 2u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
        {
          *(_DWORD *)(a1 + 12) = *(_DWORD *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 4;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10166724C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 16);
  if ((v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(result + 12), 1u);
    char v4 = *(unsigned char *)(v3 + 16);
  }
  if (v4)
  {
    int v5 = *(_DWORD *)(v3 + 8);
    return PB::Writer::writeVarInt(this, v5, 2u);
  }
  return result;
}

uint64_t sub_1016672B8(uint64_t result)
{
  *(void *)uint64_t result = &off_1023336B0;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_1016672E0(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_101667318(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_1023336B0;
  *(_DWORD *)(result + 20) = 0;
  if (*(unsigned char *)(a2 + 20))
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 20) = 1;
    *(void *)(result + 8) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 20) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 20) & 2) != 0)
  {
LABEL_5:
    char v4 = *(unsigned char *)(a2 + 16);
    *(unsigned char *)(result + 20) = v2;
    *(unsigned char *)(result + 16) = v4;
  }
  return result;
}

uint64_t sub_10166737C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "inShower", *(unsigned char *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 20);
  }
  if (v5) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_1016673F8(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 >= *((void *)this + 2))
        {
          BOOL v22 = 0;
          *((unsigned char *)this + 24) = 1;
        }
        else
        {
          int v21 = *(unsigned __int8 *)(*(void *)this + v2++);
          *((void *)this + 1) = v2;
          BOOL v22 = v21 != 0;
        }
        *(unsigned char *)(a1 + 16) = v22;
      }
      else if (v20 == 1)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
        {
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_1016675E0(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8), 1u);
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if ((v4 & 2) != 0)
  {
    char v5 = *(unsigned char *)(v3 + 16);
    return PB::Writer::write(this, v5, 2u);
  }
  return result;
}

uint64_t sub_10166764C(uint64_t result)
{
  *(void *)uint64_t result = &off_1023336E8;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_101667674(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_1016676AC(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_1023336E8;
  *(_DWORD *)(result + 20) = 0;
  if (*(unsigned char *)(a2 + 20))
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 20) = 1;
    *(void *)(result + 8) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 20) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 20) & 2) != 0)
  {
LABEL_5:
    char v4 = *(unsigned char *)(a2 + 16);
    *(unsigned char *)(result + 20) = v2;
    *(unsigned char *)(result + 16) = v4;
  }
  return result;
}

uint64_t sub_101667710(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "hapticOn", *(unsigned char *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 20);
  }
  if (v5) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10166778C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 >= *((void *)this + 2))
        {
          BOOL v22 = 0;
          *((unsigned char *)this + 24) = 1;
        }
        else
        {
          int v21 = *(unsigned __int8 *)(*(void *)this + v2++);
          *((void *)this + 1) = v2;
          BOOL v22 = v21 != 0;
        }
        *(unsigned char *)(a1 + 16) = v22;
      }
      else if (v20 == 1)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
        {
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101667974(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8), 1u);
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if ((v4 & 2) != 0)
  {
    char v5 = *(unsigned char *)(v3 + 16);
    return PB::Writer::write(this, v5, 2u);
  }
  return result;
}

uint64_t sub_1016679E0(uint64_t result)
{
  *(void *)uint64_t result = &off_102333720;
  *(_DWORD *)(result + 44) = 0;
  return result;
}

void sub_101667A08(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

float sub_101667A40(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102333720;
  *(_DWORD *)(a1 + 44) = 0;
  char v2 = *(unsigned char *)(a2 + 44);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 44) = 1;
    *(void *)(a1 + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 44);
    if ((v2 & 0x80) == 0) {
      goto LABEL_6;
    }
  }
  else
  {
    char v3 = 0;
    if ((*(unsigned char *)(a2 + 44) & 0x80) == 0) {
      goto LABEL_6;
    }
  }
  float result = *(float *)(a2 + 40);
  v3 |= 0x80u;
  *(unsigned char *)(a1 + 44) = v3;
  *(float *)(a1 + 40) = result;
  char v2 = *(unsigned char *)(a2 + 44);
LABEL_6:
  if ((v2 & 2) != 0)
  {
    float result = *(float *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(a1 + 44) = v3;
    *(float *)(a1 + 16) = result;
    char v2 = *(unsigned char *)(a2 + 44);
    if ((v2 & 4) == 0)
    {
LABEL_8:
      if ((v2 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_15;
    }
  }
  else if ((v2 & 4) == 0)
  {
    goto LABEL_8;
  }
  float result = *(float *)(a2 + 20);
  v3 |= 4u;
  *(unsigned char *)(a1 + 44) = v3;
  *(float *)(a1 + 20) = result;
  char v2 = *(unsigned char *)(a2 + 44);
  if ((v2 & 8) == 0)
  {
LABEL_9:
    if ((v2 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_16;
  }
LABEL_15:
  float result = *(float *)(a2 + 24);
  v3 |= 8u;
  *(unsigned char *)(a1 + 44) = v3;
  *(float *)(a1 + 24) = result;
  char v2 = *(unsigned char *)(a2 + 44);
  if ((v2 & 0x10) == 0)
  {
LABEL_10:
    if ((v2 & 0x20) == 0) {
      goto LABEL_11;
    }
    goto LABEL_17;
  }
LABEL_16:
  float result = *(float *)(a2 + 28);
  v3 |= 0x10u;
  *(unsigned char *)(a1 + 44) = v3;
  *(float *)(a1 + 28) = result;
  char v2 = *(unsigned char *)(a2 + 44);
  if ((v2 & 0x20) == 0)
  {
LABEL_11:
    if ((v2 & 0x40) == 0) {
      return result;
    }
LABEL_18:
    float result = *(float *)(a2 + 36);
    *(unsigned char *)(a1 + 44) = v3 | 0x40;
    *(float *)(a1 + 36) = result;
    return result;
  }
LABEL_17:
  float result = *(float *)(a2 + 32);
  v3 |= 0x20u;
  *(unsigned char *)(a1 + 44) = v3;
  *(float *)(a1 + 32) = result;
  if ((*(unsigned char *)(a2 + 44) & 0x40) != 0) {
    goto LABEL_18;
  }
  return result;
}

uint64_t sub_101667B4C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "stepIndexOfHarmonicityAP", *(float *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 44);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((*(unsigned char *)(a1 + 44) & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "stepIndexOfHarmonicityML", *(float *)(a1 + 20));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  PB::TextFormatter::format(this, "stepIndexOfHarmonicityVT", *(float *)(a1 + 24));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "swingIndexOfHarmonicityAP", *(float *)(a1 + 28));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 0x20) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  PB::TextFormatter::format(this, "swingIndexOfHarmonicityML", *(float *)(a1 + 32));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 0x40) == 0)
  {
LABEL_7:
    if ((v5 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "swingIndexOfHarmonicityVT", *(float *)(a1 + 36));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 0x80) == 0)
  {
LABEL_8:
    if ((v5 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_19:
  PB::TextFormatter::format(this, "thetaAPDirRad", *(float *)(a1 + 40));
  if (*(unsigned char *)(a1 + 44)) {
LABEL_9:
  }
    PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 8));
LABEL_10:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101667C90(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 44) |= 1u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v27 = 0;
                unsigned int v28 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_65;
                  }
                  unint64_t v29 = v20++;
                  char v30 = *(unsigned char *)(v21 + v29);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v30 & 0x7F) << v27;
                  if ((v30 & 0x80) == 0) {
                    break;
                  }
                  v27 += 7;
                  BOOL v14 = v28++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
                    goto LABEL_64;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
LABEL_64:
                unint64_t v2 = v29 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_65;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                uint64_t v24 = 0;
              }
LABEL_65:
              *(void *)(a1 + 8) = v24;
              goto LABEL_66;
            case 2u:
              *(unsigned char *)(a1 + 44) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_51;
              }
              *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_60;
            case 3u:
              *(unsigned char *)(a1 + 44) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_51;
              }
              *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_60;
            case 4u:
              *(unsigned char *)(a1 + 44) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_51;
              }
              *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_60;
            case 5u:
              *(unsigned char *)(a1 + 44) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_51;
              }
              *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_60;
            case 6u:
              *(unsigned char *)(a1 + 44) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_51;
              }
              *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_60;
            case 7u:
              *(unsigned char *)(a1 + 44) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_51;
              }
              *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_60;
            case 8u:
              *(unsigned char *)(a1 + 44) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
LABEL_60:
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_51:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_66;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
LABEL_66:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_1016680AC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 44);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(result + 8), 1u);
    char v4 = *(unsigned char *)(v3 + 44);
    if ((v4 & 0x80) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(result + 44) & 0x80) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40), 2u);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 2) == 0)
  {
LABEL_4:
    if ((v4 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16), 3u);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20), 4u);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24), 5u);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_16:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32), 7u);
    if ((*(unsigned char *)(v3 + 44) & 0x40) == 0) {
      return result;
    }
    goto LABEL_17;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28), 6u);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 0x20) != 0) {
    goto LABEL_16;
  }
LABEL_8:
  if ((v4 & 0x40) == 0) {
    return result;
  }
LABEL_17:
  float v5 = *(float *)(v3 + 36);

  return PB::Writer::write(this, v5, 8u);
}

double sub_1016681C4(uint64_t a1)
{
  *(void *)a1 = &off_102333758;
  *(void *)(a1 + 168) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  return result;
}

void sub_101668204(PB::Base *this)
{
  *(void *)this = &off_102333758;
  unint64_t v2 = (void *)*((void *)this + 10);
  if (v2)
  {
    *((void *)this + 11) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 7);
  if (v3)
  {
    *((void *)this + 8) = v3;
    operator delete(v3);
  }
  char v4 = (void *)*((void *)this + 4);
  if (v4)
  {
    *((void *)this + 5) = v4;
    operator delete(v4);
  }
  float v5 = (void *)*((void *)this + 1);
  if (v5)
  {
    *((void *)this + 2) = v5;
    operator delete(v5);
  }

  PB::Base::~Base(this);
}

void sub_101668298(PB::Base *a1)
{
  sub_101668204(a1);

  operator delete();
}

uint64_t sub_1016682D0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102333758;
  *(_OWORD *)(a1 + 8) = 0u;
  char v4 = (char *)(a1 + 8);
  *(_OWORD *)(a1 + 56) = 0u;
  float v5 = (char *)(a1 + 56);
  *(void *)(a1 + 168) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  if ((*(_WORD *)(a2 + 172) & 0x10) != 0)
  {
    uint64_t v7 = *(void *)(a2 + 136);
    *(_WORD *)(a1 + 172) = 16;
    *(void *)(a1 + 136) = v7;
    __int16 v6 = 272;
    if ((*(_WORD *)(a2 + 172) & 0x100) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v6 = 256;
  if ((*(_WORD *)(a2 + 172) & 0x100) != 0)
  {
LABEL_5:
    int v8 = *(_DWORD *)(a2 + 168);
    *(_WORD *)(a1 + 172) = v6;
    *(_DWORD *)(a1 + 168) = v8;
  }
LABEL_6:
  if (a1 != a2)
  {
    sub_1002DD194((char *)(a1 + 80), *(char **)(a2 + 80), *(void *)(a2 + 88), (uint64_t)(*(void *)(a2 + 88) - *(void *)(a2 + 80)) >> 3);
    sub_1002DD194(v5, *(char **)(a2 + 56), *(void *)(a2 + 64), (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 3);
  }
  __int16 v9 = *(_WORD *)(a2 + 172);
  if ((v9 & 2) != 0)
  {
    uint64_t v10 = *(void *)(a2 + 112);
    *(_WORD *)(a1 + 172) |= 2u;
    *(void *)(a1 + 112) = v10;
    __int16 v9 = *(_WORD *)(a2 + 172);
  }
  if (v9)
  {
    uint64_t v11 = *(void *)(a2 + 104);
    *(_WORD *)(a1 + 172) |= 1u;
    *(void *)(a1 + 104) = v11;
  }
  if (a1 != a2)
  {
    sub_1002DD194((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 3);
    sub_1002DD194(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
  }
  __int16 v12 = *(_WORD *)(a2 + 172);
  if ((v12 & 0x80) != 0)
  {
    uint64_t v15 = *(void *)(a2 + 160);
    *(_WORD *)(a1 + 172) |= 0x80u;
    *(void *)(a1 + 160) = v15;
    __int16 v12 = *(_WORD *)(a2 + 172);
    if ((v12 & 0x20) == 0)
    {
LABEL_16:
      if ((v12 & 0x40) == 0) {
        goto LABEL_17;
      }
      goto LABEL_23;
    }
  }
  else if ((v12 & 0x20) == 0)
  {
    goto LABEL_16;
  }
  uint64_t v16 = *(void *)(a2 + 144);
  *(_WORD *)(a1 + 172) |= 0x20u;
  *(void *)(a1 + 144) = v16;
  __int16 v12 = *(_WORD *)(a2 + 172);
  if ((v12 & 0x40) == 0)
  {
LABEL_17:
    if ((v12 & 8) == 0) {
      goto LABEL_18;
    }
LABEL_24:
    uint64_t v18 = *(void *)(a2 + 128);
    *(_WORD *)(a1 + 172) |= 8u;
    *(void *)(a1 + 128) = v18;
    if ((*(_WORD *)(a2 + 172) & 4) == 0) {
      return a1;
    }
    goto LABEL_19;
  }
LABEL_23:
  uint64_t v17 = *(void *)(a2 + 152);
  *(_WORD *)(a1 + 172) |= 0x40u;
  *(void *)(a1 + 152) = v17;
  __int16 v12 = *(_WORD *)(a2 + 172);
  if ((v12 & 8) != 0) {
    goto LABEL_24;
  }
LABEL_18:
  if ((v12 & 4) != 0)
  {
LABEL_19:
    uint64_t v13 = *(void *)(a2 + 120);
    *(_WORD *)(a1 + 172) |= 4u;
    *(void *)(a1 + 120) = v13;
  }
  return a1;
}

uint64_t sub_1016684C0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 172);
  if (v5)
  {
    PB::TextFormatter::format(this, "covTraceAfterCorrection", *(double *)(a1 + 104));
    __int16 v5 = *(_WORD *)(a1 + 172);
  }
  if ((v5 & 2) != 0) {
    PB::TextFormatter::format(this, "covTraceBeforeCorrection", *(double *)(a1 + 112));
  }
  __int16 v6 = *(double **)(a1 + 8);
  uint64_t v7 = *(double **)(a1 + 16);
  while (v6 != v7)
  {
    double v8 = *v6++;
    PB::TextFormatter::format(this, "dX", v8);
  }
  __int16 v9 = *(_WORD *)(a1 + 172);
  if ((v9 & 4) != 0)
  {
    PB::TextFormatter::format(this, "lastStateTimestamp", *(double *)(a1 + 120));
    __int16 v9 = *(_WORD *)(a1 + 172);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x100) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
  }
  else if ((v9 & 8) == 0)
  {
    goto LABEL_9;
  }
  PB::TextFormatter::format(this, "lidAngleDeg", *(double *)(a1 + 128));
  if ((*(_WORD *)(a1 + 172) & 0x100) != 0) {
LABEL_10:
  }
    PB::TextFormatter::format(this, "measurementUpdateType", *(_DWORD *)(a1 + 168));
LABEL_11:
  uint64_t v10 = *(double **)(a1 + 32);
  uint64_t v11 = *(double **)(a1 + 40);
  while (v10 != v11)
  {
    double v12 = *v10++;
    PB::TextFormatter::format(this, "residual", v12);
  }
  uint64_t v13 = *(double **)(a1 + 56);
  BOOL v14 = *(double **)(a1 + 64);
  while (v13 != v14)
  {
    double v15 = *v13++;
    PB::TextFormatter::format(this, "stateQfbAfterCorrection", v15);
  }
  uint64_t v16 = *(double **)(a1 + 80);
  uint64_t v17 = *(double **)(a1 + 88);
  while (v16 != v17)
  {
    double v18 = *v16++;
    PB::TextFormatter::format(this, "stateQfbBeforeCorrection", v18);
  }
  __int16 v19 = *(_WORD *)(a1 + 172);
  if ((v19 & 0x10) != 0)
  {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 136));
    __int16 v19 = *(_WORD *)(a1 + 172);
    if ((v19 & 0x20) == 0)
    {
LABEL_19:
      if ((v19 & 0x40) == 0) {
        goto LABEL_20;
      }
      goto LABEL_30;
    }
  }
  else if ((v19 & 0x20) == 0)
  {
    goto LABEL_19;
  }
  PB::TextFormatter::format(this, "wAuxBudNormMeanDps", *(double *)(a1 + 144));
  __int16 v19 = *(_WORD *)(a1 + 172);
  if ((v19 & 0x40) == 0)
  {
LABEL_20:
    if ((v19 & 0x80) == 0) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
LABEL_30:
  PB::TextFormatter::format(this, "wAuxFaceNormMeanDps", *(double *)(a1 + 152));
  if ((*(_WORD *)(a1 + 172) & 0x80) != 0) {
LABEL_21:
  }
    PB::TextFormatter::format(this, "wSrcNormMeanDps", *(double *)(a1 + 160));
LABEL_22:

  return PB::TextFormatter::endObject(this);
}

BOOL sub_1016686DC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    double v8 = (void **)(a1 + 8);
    __int16 v9 = (void **)(a1 + 32);
    uint64_t v147 = a1 + 48;
    uint64_t v148 = a1 + 24;
    uint64_t v10 = (void **)(a1 + 56);
    uint64_t v11 = (void **)(a1 + 80);
    uint64_t v145 = a1 + 96;
    uint64_t v146 = a1 + 72;
    while (1)
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v13 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v17 = *(unsigned char *)(v12 + v2);
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          break;
        }
        v13 += 7;
        unint64_t v2 = v16;
        BOOL v18 = v14++ > 8;
        if (v18) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v24 = v15 & 7;
      if (v24 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v15 >> 3))
      {
        case 1u:
          *(_WORD *)(a1 + 172) |= 0x10u;
          unint64_t v25 = *((void *)this + 1);
          if (v25 > 0xFFFFFFFFFFFFFFF7 || v25 + 8 > *((void *)this + 2)) {
            goto LABEL_235;
          }
          *(void *)(a1 + 136) = *(void *)(*(void *)this + v25);
          goto LABEL_237;
        case 2u:
          *(_WORD *)(a1 + 172) |= 0x100u;
          unint64_t v26 = *((void *)this + 1);
          unint64_t v27 = *((void *)this + 2);
          uint64_t v28 = *(void *)this;
          if (v26 <= 0xFFFFFFFFFFFFFFF5 && v26 + 10 <= v27)
          {
            char v29 = 0;
            unsigned int v30 = 0;
            uint64_t v31 = 0;
            do
            {
              unint64_t v32 = v26 + 1;
              *((void *)this + 1) = v26 + 1;
              char v33 = *(unsigned char *)(v28 + v26);
              v31 |= (unint64_t)(v33 & 0x7F) << v29;
              if ((v33 & 0x80) == 0) {
                goto LABEL_204;
              }
              v29 += 7;
              unint64_t v26 = v32;
              BOOL v18 = v30++ > 8;
            }
            while (!v18);
LABEL_160:
            LODWORD(v31) = 0;
            goto LABEL_204;
          }
          char v97 = 0;
          unsigned int v98 = 0;
          uint64_t v31 = 0;
          if (v27 <= v26) {
            unint64_t v27 = *((void *)this + 1);
          }
          while (2)
          {
            if (v27 == v26)
            {
              LODWORD(v31) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v99 = v26 + 1;
              char v100 = *(unsigned char *)(v28 + v26);
              *((void *)this + 1) = v99;
              v31 |= (unint64_t)(v100 & 0x7F) << v97;
              if (v100 < 0)
              {
                v97 += 7;
                unint64_t v26 = v99;
                BOOL v18 = v98++ > 8;
                if (v18) {
                  goto LABEL_160;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v31) = 0;
              }
            }
            break;
          }
LABEL_204:
          *(_DWORD *)(a1 + 168) = v31;
          goto LABEL_238;
        case 3u:
          if (v24 != 2)
          {
            unint64_t v102 = *(char **)(a1 + 88);
            unint64_t v101 = *(void *)(a1 + 96);
            if ((unint64_t)v102 >= v101)
            {
              uint64_t v110 = (char *)*v11;
              uint64_t v111 = (v102 - (unsigned char *)*v11) >> 3;
              unint64_t v112 = v111 + 1;
              if ((unint64_t)(v111 + 1) >> 61) {
LABEL_248:
              }
                sub_1001D7FD4();
              uint64_t v113 = v101 - (void)v110;
              if (v113 >> 2 > v112) {
                unint64_t v112 = v113 >> 2;
              }
              if ((unint64_t)v113 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v114 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v114 = v112;
              }
              if (v114)
              {
                unint64_t v115 = (char *)sub_1000DA54C(v145, v114);
                uint64_t v110 = *(char **)(a1 + 80);
                unint64_t v102 = *(char **)(a1 + 88);
              }
              else
              {
                unint64_t v115 = 0;
              }
              v134 = &v115[8 * v111];
              *(void *)v134 = 0;
              unint64_t v103 = v134 + 8;
              while (v102 != v110)
              {
                uint64_t v135 = *((void *)v102 - 1);
                v102 -= 8;
                *((void *)v134 - 1) = v135;
                v134 -= 8;
              }
              *(void *)(a1 + 80) = v134;
              *(void *)(a1 + 88) = v103;
              *(void *)(a1 + 96) = &v115[8 * v114];
              if (v110) {
                operator delete(v110);
              }
            }
            else
            {
              *(void *)unint64_t v102 = 0;
              unint64_t v103 = v102 + 8;
            }
            *(void *)(a1 + 88) = v103;
            goto LABEL_233;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v34 = *((void *)this + 1);
          unint64_t v35 = *((void *)this + 2);
          while (v34 < v35 && !*((unsigned char *)this + 24))
          {
            unint64_t v37 = *(char **)(a1 + 88);
            unint64_t v36 = *(void *)(a1 + 96);
            if ((unint64_t)v37 >= v36)
            {
              unint64_t v39 = (char *)*v11;
              uint64_t v40 = (v37 - (unsigned char *)*v11) >> 3;
              unint64_t v41 = v40 + 1;
              if ((unint64_t)(v40 + 1) >> 61) {
                goto LABEL_248;
              }
              uint64_t v42 = v36 - (void)v39;
              if (v42 >> 2 > v41) {
                unint64_t v41 = v42 >> 2;
              }
              if ((unint64_t)v42 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v43 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v43 = v41;
              }
              if (v43)
              {
                unint64_t v44 = (char *)sub_1000DA54C(v145, v43);
                unint64_t v39 = *(char **)(a1 + 80);
                unint64_t v37 = *(char **)(a1 + 88);
              }
              else
              {
                unint64_t v44 = 0;
              }
              unint64_t v45 = &v44[8 * v40];
              *(void *)unint64_t v45 = 0;
              int v38 = v45 + 8;
              while (v37 != v39)
              {
                uint64_t v46 = *((void *)v37 - 1);
                v37 -= 8;
                *((void *)v45 - 1) = v46;
                v45 -= 8;
              }
              *(void *)(a1 + 80) = v45;
              *(void *)(a1 + 88) = v38;
              *(void *)(a1 + 96) = &v44[8 * v43];
              if (v39) {
                operator delete(v39);
              }
            }
            else
            {
              *(void *)unint64_t v37 = 0;
              int v38 = v37 + 8;
            }
            *(void *)(a1 + 88) = v38;
            unint64_t v47 = *((void *)this + 1);
            if (v47 > 0xFFFFFFFFFFFFFFF7 || v47 + 8 > *((void *)this + 2)) {
              goto LABEL_152;
            }
            *(v38 - 1) = *(void *)(*(void *)this + v47);
            unint64_t v35 = *((void *)this + 2);
            unint64_t v34 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v34;
          }
          goto LABEL_153;
        case 4u:
          if (v24 != 2)
          {
            unint64_t v105 = *(char **)(a1 + 64);
            unint64_t v104 = *(void *)(a1 + 72);
            if ((unint64_t)v105 >= v104)
            {
              uint64_t v116 = (char *)*v10;
              uint64_t v117 = (v105 - (unsigned char *)*v10) >> 3;
              unint64_t v118 = v117 + 1;
              if ((unint64_t)(v117 + 1) >> 61) {
LABEL_249:
              }
                sub_1001D7FD4();
              uint64_t v119 = v104 - (void)v116;
              if (v119 >> 2 > v118) {
                unint64_t v118 = v119 >> 2;
              }
              if ((unint64_t)v119 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v120 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v120 = v118;
              }
              if (v120)
              {
                unint64_t v121 = (char *)sub_1000DA54C(v146, v120);
                uint64_t v116 = *(char **)(a1 + 56);
                unint64_t v105 = *(char **)(a1 + 64);
              }
              else
              {
                unint64_t v121 = 0;
              }
              uint64_t v136 = &v121[8 * v117];
              *(void *)uint64_t v136 = 0;
              unint64_t v103 = v136 + 8;
              while (v105 != v116)
              {
                uint64_t v137 = *((void *)v105 - 1);
                v105 -= 8;
                *((void *)v136 - 1) = v137;
                v136 -= 8;
              }
              *(void *)(a1 + 56) = v136;
              *(void *)(a1 + 64) = v103;
              *(void *)(a1 + 72) = &v121[8 * v120];
              if (v116) {
                operator delete(v116);
              }
            }
            else
            {
              *(void *)unint64_t v105 = 0;
              unint64_t v103 = v105 + 8;
            }
            *(void *)(a1 + 64) = v103;
            goto LABEL_233;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v48 = *((void *)this + 1);
          unint64_t v49 = *((void *)this + 2);
          while (v48 < v49 && !*((unsigned char *)this + 24))
          {
            unint64_t v51 = *(char **)(a1 + 64);
            unint64_t v50 = *(void *)(a1 + 72);
            if ((unint64_t)v51 >= v50)
            {
              int v53 = (char *)*v10;
              uint64_t v54 = (v51 - (unsigned char *)*v10) >> 3;
              unint64_t v55 = v54 + 1;
              if ((unint64_t)(v54 + 1) >> 61) {
                goto LABEL_249;
              }
              uint64_t v56 = v50 - (void)v53;
              if (v56 >> 2 > v55) {
                unint64_t v55 = v56 >> 2;
              }
              if ((unint64_t)v56 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v57 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v57 = v55;
              }
              if (v57)
              {
                unint64_t v58 = (char *)sub_1000DA54C(v146, v57);
                int v53 = *(char **)(a1 + 56);
                unint64_t v51 = *(char **)(a1 + 64);
              }
              else
              {
                unint64_t v58 = 0;
              }
              unint64_t v59 = &v58[8 * v54];
              *(void *)unint64_t v59 = 0;
              unint64_t v52 = v59 + 8;
              while (v51 != v53)
              {
                uint64_t v60 = *((void *)v51 - 1);
                v51 -= 8;
                *((void *)v59 - 1) = v60;
                v59 -= 8;
              }
              *(void *)(a1 + 56) = v59;
              *(void *)(a1 + 64) = v52;
              *(void *)(a1 + 72) = &v58[8 * v57];
              if (v53) {
                operator delete(v53);
              }
            }
            else
            {
              *(void *)unint64_t v51 = 0;
              unint64_t v52 = v51 + 8;
            }
            *(void *)(a1 + 64) = v52;
            unint64_t v61 = *((void *)this + 1);
            if (v61 > 0xFFFFFFFFFFFFFFF7 || v61 + 8 > *((void *)this + 2)) {
              goto LABEL_152;
            }
            *(v52 - 1) = *(void *)(*(void *)this + v61);
            unint64_t v49 = *((void *)this + 2);
            unint64_t v48 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v48;
          }
          goto LABEL_153;
        case 5u:
          *(_WORD *)(a1 + 172) |= 2u;
          unint64_t v62 = *((void *)this + 1);
          if (v62 > 0xFFFFFFFFFFFFFFF7 || v62 + 8 > *((void *)this + 2)) {
            goto LABEL_235;
          }
          *(void *)(a1 + 112) = *(void *)(*(void *)this + v62);
          goto LABEL_237;
        case 6u:
          *(_WORD *)(a1 + 172) |= 1u;
          unint64_t v63 = *((void *)this + 1);
          if (v63 > 0xFFFFFFFFFFFFFFF7 || v63 + 8 > *((void *)this + 2)) {
            goto LABEL_235;
          }
          *(void *)(a1 + 104) = *(void *)(*(void *)this + v63);
          goto LABEL_237;
        case 7u:
          if (v24 != 2)
          {
            v107 = *(char **)(a1 + 40);
            unint64_t v106 = *(void *)(a1 + 48);
            if ((unint64_t)v107 >= v106)
            {
              uint64_t v122 = (char *)*v9;
              uint64_t v123 = (v107 - (unsigned char *)*v9) >> 3;
              unint64_t v124 = v123 + 1;
              if ((unint64_t)(v123 + 1) >> 61) {
LABEL_250:
              }
                sub_1001D7FD4();
              uint64_t v125 = v106 - (void)v122;
              if (v125 >> 2 > v124) {
                unint64_t v124 = v125 >> 2;
              }
              if ((unint64_t)v125 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v126 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v126 = v124;
              }
              if (v126)
              {
                v127 = (char *)sub_1000DA54C(v147, v126);
                uint64_t v122 = *(char **)(a1 + 32);
                v107 = *(char **)(a1 + 40);
              }
              else
              {
                v127 = 0;
              }
              v138 = &v127[8 * v123];
              *(void *)v138 = 0;
              unint64_t v103 = v138 + 8;
              while (v107 != v122)
              {
                uint64_t v139 = *((void *)v107 - 1);
                v107 -= 8;
                *((void *)v138 - 1) = v139;
                v138 -= 8;
              }
              *(void *)(a1 + 32) = v138;
              *(void *)(a1 + 40) = v103;
              *(void *)(a1 + 48) = &v127[8 * v126];
              if (v122) {
                operator delete(v122);
              }
            }
            else
            {
              *(void *)v107 = 0;
              unint64_t v103 = v107 + 8;
            }
            *(void *)(a1 + 40) = v103;
            goto LABEL_233;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v64 = *((void *)this + 1);
          unint64_t v65 = *((void *)this + 2);
          while (v64 < v65 && !*((unsigned char *)this + 24))
          {
            uint64_t v67 = *(char **)(a1 + 40);
            unint64_t v66 = *(void *)(a1 + 48);
            if ((unint64_t)v67 >= v66)
            {
              uint64_t v69 = (char *)*v9;
              uint64_t v70 = (v67 - (unsigned char *)*v9) >> 3;
              unint64_t v71 = v70 + 1;
              if ((unint64_t)(v70 + 1) >> 61) {
                goto LABEL_250;
              }
              uint64_t v72 = v66 - (void)v69;
              if (v72 >> 2 > v71) {
                unint64_t v71 = v72 >> 2;
              }
              if ((unint64_t)v72 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v73 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v73 = v71;
              }
              if (v73)
              {
                unint64_t v74 = (char *)sub_1000DA54C(v147, v73);
                uint64_t v69 = *(char **)(a1 + 32);
                uint64_t v67 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v74 = 0;
              }
              int v75 = &v74[8 * v70];
              *(void *)int v75 = 0;
              unint64_t v68 = v75 + 8;
              while (v67 != v69)
              {
                uint64_t v76 = *((void *)v67 - 1);
                v67 -= 8;
                *((void *)v75 - 1) = v76;
                v75 -= 8;
              }
              *(void *)(a1 + 32) = v75;
              *(void *)(a1 + 40) = v68;
              *(void *)(a1 + 48) = &v74[8 * v73];
              if (v69) {
                operator delete(v69);
              }
            }
            else
            {
              *(void *)uint64_t v67 = 0;
              unint64_t v68 = v67 + 8;
            }
            *(void *)(a1 + 40) = v68;
            unint64_t v77 = *((void *)this + 1);
            if (v77 > 0xFFFFFFFFFFFFFFF7 || v77 + 8 > *((void *)this + 2)) {
              goto LABEL_152;
            }
            *(v68 - 1) = *(void *)(*(void *)this + v77);
            unint64_t v65 = *((void *)this + 2);
            unint64_t v64 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v64;
          }
          goto LABEL_153;
        case 8u:
          if (v24 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v78 = *((void *)this + 1);
            unint64_t v79 = *((void *)this + 2);
            while (v78 < v79 && !*((unsigned char *)this + 24))
            {
              uint64_t v81 = *(char **)(a1 + 16);
              unint64_t v80 = *(void *)(a1 + 24);
              if ((unint64_t)v81 >= v80)
              {
                v83 = (char *)*v8;
                uint64_t v84 = (v81 - (unsigned char *)*v8) >> 3;
                unint64_t v85 = v84 + 1;
                if ((unint64_t)(v84 + 1) >> 61) {
                  goto LABEL_251;
                }
                uint64_t v86 = v80 - (void)v83;
                if (v86 >> 2 > v85) {
                  unint64_t v85 = v86 >> 2;
                }
                if ((unint64_t)v86 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v87 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v87 = v85;
                }
                if (v87)
                {
                  unint64_t v88 = (char *)sub_1000DA54C(v148, v87);
                  v83 = *(char **)(a1 + 8);
                  uint64_t v81 = *(char **)(a1 + 16);
                }
                else
                {
                  unint64_t v88 = 0;
                }
                v89 = &v88[8 * v84];
                *(void *)v89 = 0;
                unint64_t v82 = v89 + 8;
                while (v81 != v83)
                {
                  uint64_t v90 = *((void *)v81 - 1);
                  v81 -= 8;
                  *((void *)v89 - 1) = v90;
                  v89 -= 8;
                }
                *(void *)(a1 + 8) = v89;
                *(void *)(a1 + 16) = v82;
                *(void *)(a1 + 24) = &v88[8 * v87];
                if (v83) {
                  operator delete(v83);
                }
              }
              else
              {
                *(void *)uint64_t v81 = 0;
                unint64_t v82 = v81 + 8;
              }
              *(void *)(a1 + 16) = v82;
              unint64_t v91 = *((void *)this + 1);
              if (v91 > 0xFFFFFFFFFFFFFFF7 || v91 + 8 > *((void *)this + 2))
              {
LABEL_152:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v82 - 1) = *(void *)(*(void *)this + v91);
              unint64_t v79 = *((void *)this + 2);
              unint64_t v78 = *((void *)this + 1) + 8;
              *((void *)this + 1) = v78;
            }
LABEL_153:
            PB::Reader::recallMark();
          }
          else
          {
            unint64_t v109 = *(char **)(a1 + 16);
            unint64_t v108 = *(void *)(a1 + 24);
            if ((unint64_t)v109 >= v108)
            {
              int v128 = (char *)*v8;
              uint64_t v129 = (v109 - (unsigned char *)*v8) >> 3;
              unint64_t v130 = v129 + 1;
              if ((unint64_t)(v129 + 1) >> 61) {
LABEL_251:
              }
                sub_1001D7FD4();
              uint64_t v131 = v108 - (void)v128;
              if (v131 >> 2 > v130) {
                unint64_t v130 = v131 >> 2;
              }
              if ((unint64_t)v131 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v132 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v132 = v130;
              }
              if (v132)
              {
                unint64_t v133 = (char *)sub_1000DA54C(v148, v132);
                int v128 = *(char **)(a1 + 8);
                unint64_t v109 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v133 = 0;
              }
              v140 = &v133[8 * v129];
              *(void *)v140 = 0;
              unint64_t v103 = v140 + 8;
              while (v109 != v128)
              {
                uint64_t v141 = *((void *)v109 - 1);
                v109 -= 8;
                *((void *)v140 - 1) = v141;
                v140 -= 8;
              }
              *(void *)(a1 + 8) = v140;
              *(void *)(a1 + 16) = v103;
              *(void *)(a1 + 24) = &v133[8 * v132];
              if (v128) {
                operator delete(v128);
              }
            }
            else
            {
              *(void *)unint64_t v109 = 0;
              unint64_t v103 = v109 + 8;
            }
            *(void *)(a1 + 16) = v103;
LABEL_233:
            unint64_t v142 = *((void *)this + 1);
            if (v142 <= 0xFFFFFFFFFFFFFFF7 && v142 + 8 <= *((void *)this + 2))
            {
              *(v103 - 1) = *(void *)(*(void *)this + v142);
LABEL_237:
              *((void *)this + 1) += 8;
            }
            else
            {
LABEL_235:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_238:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        case 9u:
          *(_WORD *)(a1 + 172) |= 0x80u;
          unint64_t v92 = *((void *)this + 1);
          if (v92 > 0xFFFFFFFFFFFFFFF7 || v92 + 8 > *((void *)this + 2)) {
            goto LABEL_235;
          }
          *(void *)(a1 + 160) = *(void *)(*(void *)this + v92);
          goto LABEL_237;
        case 0xAu:
          *(_WORD *)(a1 + 172) |= 0x20u;
          unint64_t v93 = *((void *)this + 1);
          if (v93 > 0xFFFFFFFFFFFFFFF7 || v93 + 8 > *((void *)this + 2)) {
            goto LABEL_235;
          }
          *(void *)(a1 + 144) = *(void *)(*(void *)this + v93);
          goto LABEL_237;
        case 0xBu:
          *(_WORD *)(a1 + 172) |= 0x40u;
          unint64_t v94 = *((void *)this + 1);
          if (v94 > 0xFFFFFFFFFFFFFFF7 || v94 + 8 > *((void *)this + 2)) {
            goto LABEL_235;
          }
          *(void *)(a1 + 152) = *(void *)(*(void *)this + v94);
          goto LABEL_237;
        case 0xCu:
          *(_WORD *)(a1 + 172) |= 8u;
          unint64_t v95 = *((void *)this + 1);
          if (v95 > 0xFFFFFFFFFFFFFFF7 || v95 + 8 > *((void *)this + 2)) {
            goto LABEL_235;
          }
          *(void *)(a1 + 128) = *(void *)(*(void *)this + v95);
          goto LABEL_237;
        case 0xDu:
          *(_WORD *)(a1 + 172) |= 4u;
          unint64_t v96 = *((void *)this + 1);
          if (v96 > 0xFFFFFFFFFFFFFFF7 || v96 + 8 > *((void *)this + 2)) {
            goto LABEL_235;
          }
          *(void *)(a1 + 120) = *(void *)(*(void *)this + v96);
          goto LABEL_237;
        default:
          if ((PB::Reader::skip(this, v15 >> 3, v24, 0) & 1) == 0) {
            return 0;
          }
          goto LABEL_238;
      }
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v15 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v21 = v2 + 1;
      char v22 = *(unsigned char *)(v12 + v2);
      *((void *)this + 1) = v21;
      v15 |= (unint64_t)(v22 & 0x7F) << v19;
      if ((v22 & 0x80) == 0) {
        goto LABEL_21;
      }
      v19 += 7;
      unint64_t v2 = v21;
      if (v20++ >= 9)
      {
LABEL_20:
        unint64_t v15 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10166926C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 172);
  if ((v4 & 0x10) != 0)
  {
    double result = PB::Writer::write(this, *(double *)(result + 136), 1u);
    __int16 v4 = *(_WORD *)(v3 + 172);
  }
  if ((v4 & 0x100) != 0) {
    double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 168), 2u);
  }
  __int16 v5 = *(double **)(v3 + 80);
  __int16 v6 = *(double **)(v3 + 88);
  while (v5 != v6)
  {
    double v7 = *v5++;
    double result = PB::Writer::write(this, v7, 3u);
  }
  double v8 = *(double **)(v3 + 56);
  __int16 v9 = *(double **)(v3 + 64);
  while (v8 != v9)
  {
    double v10 = *v8++;
    double result = PB::Writer::write(this, v10, 4u);
  }
  __int16 v11 = *(_WORD *)(v3 + 172);
  if ((v11 & 2) != 0)
  {
    double result = PB::Writer::write(this, *(double *)(v3 + 112), 5u);
    __int16 v11 = *(_WORD *)(v3 + 172);
  }
  if (v11) {
    double result = PB::Writer::write(this, *(double *)(v3 + 104), 6u);
  }
  uint64_t v12 = *(double **)(v3 + 32);
  char v13 = *(double **)(v3 + 40);
  while (v12 != v13)
  {
    double v14 = *v12++;
    double result = PB::Writer::write(this, v14, 7u);
  }
  unint64_t v15 = *(double **)(v3 + 8);
  unint64_t v16 = *(double **)(v3 + 16);
  while (v15 != v16)
  {
    double v17 = *v15++;
    double result = PB::Writer::write(this, v17, 8u);
  }
  __int16 v18 = *(_WORD *)(v3 + 172);
  if ((v18 & 0x80) != 0)
  {
    double result = PB::Writer::write(this, *(double *)(v3 + 160), 9u);
    __int16 v18 = *(_WORD *)(v3 + 172);
    if ((v18 & 0x20) == 0)
    {
LABEL_23:
      if ((v18 & 0x40) == 0) {
        goto LABEL_24;
      }
      goto LABEL_29;
    }
  }
  else if ((v18 & 0x20) == 0)
  {
    goto LABEL_23;
  }
  double result = PB::Writer::write(this, *(double *)(v3 + 144), 0xAu);
  __int16 v18 = *(_WORD *)(v3 + 172);
  if ((v18 & 0x40) == 0)
  {
LABEL_24:
    if ((v18 & 8) == 0) {
      goto LABEL_25;
    }
LABEL_30:
    double result = PB::Writer::write(this, *(double *)(v3 + 128), 0xCu);
    if ((*(_WORD *)(v3 + 172) & 4) == 0) {
      return result;
    }
    goto LABEL_31;
  }
LABEL_29:
  double result = PB::Writer::write(this, *(double *)(v3 + 152), 0xBu);
  __int16 v18 = *(_WORD *)(v3 + 172);
  if ((v18 & 8) != 0) {
    goto LABEL_30;
  }
LABEL_25:
  if ((v18 & 4) == 0) {
    return result;
  }
LABEL_31:
  double v19 = *(double *)(v3 + 120);

  return PB::Writer::write(this, v19, 0xDu);
}

double sub_10166941C(uint64_t a1)
{
  *(void *)a1 = &off_102333790;
  *(_DWORD *)(a1 + 80) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return result;
}

void sub_101669450(PB::Base *this)
{
  *(void *)this = &off_102333790;
  unint64_t v2 = (void *)*((void *)this + 4);
  if (v2)
  {
    *((void *)this + 5) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 1);
  if (v3)
  {
    *((void *)this + 2) = v3;
    operator delete(v3);
  }

  PB::Base::~Base(this);
}

void sub_1016694C4(PB::Base *a1)
{
  sub_101669450(a1);

  operator delete();
}

uint64_t sub_1016694FC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102333790;
  *(_OWORD *)(a1 + 8) = 0u;
  __int16 v4 = (char *)(a1 + 8);
  *(_DWORD *)(a1 + 80) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  if ((*(unsigned char *)(a2 + 80) & 4) != 0)
  {
    uint64_t v5 = *(void *)(a2 + 72);
    *(unsigned char *)(a1 + 80) = 4;
    *(void *)(a1 + 72) = v5;
  }
  if (a1 != a2)
  {
    sub_1002DD194((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 3);
    sub_1002DD194(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
  }
  char v6 = *(unsigned char *)(a2 + 80);
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(void *)(a2 + 64);
    *(unsigned char *)(a1 + 80) |= 2u;
    *(void *)(a1 + 64) = v7;
    char v6 = *(unsigned char *)(a2 + 80);
  }
  if (v6)
  {
    uint64_t v8 = *(void *)(a2 + 56);
    *(unsigned char *)(a1 + 80) |= 1u;
    *(void *)(a1 + 56) = v8;
  }
  return a1;
}

uint64_t sub_1016695E8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 80)) {
    PB::TextFormatter::format(this, "lastUpdateTimestamp", *(double *)(a1 + 56));
  }
  uint64_t v5 = *(double **)(a1 + 8);
  char v6 = *(double **)(a1 + 16);
  while (v5 != v6)
  {
    double v7 = *v5++;
    PB::TextFormatter::format(this, "stateCov", v7);
  }
  if ((*(unsigned char *)(a1 + 80) & 2) != 0) {
    PB::TextFormatter::format(this, "stateCovTrace", *(double *)(a1 + 64));
  }
  uint64_t v8 = *(double **)(a1 + 32);
  __int16 v9 = *(double **)(a1 + 40);
  while (v8 != v9)
  {
    double v10 = *v8++;
    PB::TextFormatter::format(this, "stateQfb", v10);
  }
  if ((*(unsigned char *)(a1 + 80) & 4) != 0) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 72));
  }

  return PB::TextFormatter::endObject(this);
}

BOOL sub_1016696E8(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v8 = (void **)(a1 + 8);
    uint64_t v9 = a1 + 24;
    double v10 = (void **)(a1 + 32);
    uint64_t v11 = a1 + 48;
    while (1)
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v13 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v17 = *(unsigned char *)(v12 + v2);
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          break;
        }
        v13 += 7;
        unint64_t v2 = v16;
        if (v14++ > 8) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v24 = v15 & 7;
      if (v24 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v15 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 80) |= 4u;
          unint64_t v25 = *((void *)this + 1);
          if (v25 > 0xFFFFFFFFFFFFFFF7 || v25 + 8 > *((void *)this + 2)) {
            goto LABEL_120;
          }
          *(void *)(a1 + 72) = *(void *)(*(void *)this + v25);
          goto LABEL_122;
        case 2u:
          if (v24 != 2)
          {
            unint64_t v57 = *(char **)(a1 + 40);
            unint64_t v56 = *(void *)(a1 + 48);
            if ((unint64_t)v57 >= v56)
            {
              unint64_t v61 = (char *)*v10;
              uint64_t v62 = (v57 - (unsigned char *)*v10) >> 3;
              unint64_t v63 = v62 + 1;
              if ((unint64_t)(v62 + 1) >> 61) {
LABEL_131:
              }
                sub_1001D7FD4();
              uint64_t v64 = v56 - (void)v61;
              if (v64 >> 2 > v63) {
                unint64_t v63 = v64 >> 2;
              }
              if ((unint64_t)v64 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v65 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v65 = v63;
              }
              if (v65)
              {
                unint64_t v66 = (char *)sub_1000DA54C(v11, v65);
                unint64_t v61 = *(char **)(a1 + 32);
                unint64_t v57 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v66 = 0;
              }
              unint64_t v73 = &v66[8 * v62];
              *(void *)unint64_t v73 = 0;
              unint64_t v58 = v73 + 8;
              while (v57 != v61)
              {
                uint64_t v74 = *((void *)v57 - 1);
                v57 -= 8;
                *((void *)v73 - 1) = v74;
                v73 -= 8;
              }
              *(void *)(a1 + 32) = v73;
              *(void *)(a1 + 40) = v58;
              *(void *)(a1 + 48) = &v66[8 * v65];
              if (v61) {
                operator delete(v61);
              }
            }
            else
            {
              *(void *)unint64_t v57 = 0;
              unint64_t v58 = v57 + 8;
            }
            *(void *)(a1 + 40) = v58;
            goto LABEL_118;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v26 = *((void *)this + 1);
          unint64_t v27 = *((void *)this + 2);
          while (v26 < v27 && !*((unsigned char *)this + 24))
          {
            char v29 = *(char **)(a1 + 40);
            unint64_t v28 = *(void *)(a1 + 48);
            if ((unint64_t)v29 >= v28)
            {
              uint64_t v31 = (char *)*v10;
              uint64_t v32 = (v29 - (unsigned char *)*v10) >> 3;
              unint64_t v33 = v32 + 1;
              if ((unint64_t)(v32 + 1) >> 61) {
                goto LABEL_131;
              }
              uint64_t v34 = v28 - (void)v31;
              if (v34 >> 2 > v33) {
                unint64_t v33 = v34 >> 2;
              }
              if ((unint64_t)v34 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v35 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v35 = v33;
              }
              if (v35)
              {
                unint64_t v36 = (char *)sub_1000DA54C(v11, v35);
                uint64_t v31 = *(char **)(a1 + 32);
                char v29 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v36 = 0;
              }
              unint64_t v37 = &v36[8 * v32];
              *(void *)unint64_t v37 = 0;
              unsigned int v30 = v37 + 8;
              while (v29 != v31)
              {
                uint64_t v38 = *((void *)v29 - 1);
                v29 -= 8;
                *((void *)v37 - 1) = v38;
                v37 -= 8;
              }
              *(void *)(a1 + 32) = v37;
              *(void *)(a1 + 40) = v30;
              *(void *)(a1 + 48) = &v36[8 * v35];
              if (v31) {
                operator delete(v31);
              }
            }
            else
            {
              *(void *)char v29 = 0;
              unsigned int v30 = v29 + 8;
            }
            *(void *)(a1 + 40) = v30;
            unint64_t v39 = *((void *)this + 1);
            if (v39 > 0xFFFFFFFFFFFFFFF7 || v39 + 8 > *((void *)this + 2)) {
              goto LABEL_86;
            }
            *(v30 - 1) = *(void *)(*(void *)this + v39);
            unint64_t v27 = *((void *)this + 2);
            unint64_t v26 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v26;
          }
          goto LABEL_87;
        case 3u:
          if (v24 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v40 = *((void *)this + 1);
            unint64_t v41 = *((void *)this + 2);
            while (v40 < v41 && !*((unsigned char *)this + 24))
            {
              unint64_t v43 = *(char **)(a1 + 16);
              unint64_t v42 = *(void *)(a1 + 24);
              if ((unint64_t)v43 >= v42)
              {
                unint64_t v45 = (char *)*v8;
                uint64_t v46 = (v43 - (unsigned char *)*v8) >> 3;
                unint64_t v47 = v46 + 1;
                if ((unint64_t)(v46 + 1) >> 61) {
                  goto LABEL_132;
                }
                uint64_t v48 = v42 - (void)v45;
                if (v48 >> 2 > v47) {
                  unint64_t v47 = v48 >> 2;
                }
                if ((unint64_t)v48 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v49 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v49 = v47;
                }
                if (v49)
                {
                  unint64_t v50 = (char *)sub_1000DA54C(v9, v49);
                  unint64_t v45 = *(char **)(a1 + 8);
                  unint64_t v43 = *(char **)(a1 + 16);
                }
                else
                {
                  unint64_t v50 = 0;
                }
                unint64_t v51 = &v50[8 * v46];
                *(void *)unint64_t v51 = 0;
                unint64_t v44 = v51 + 8;
                while (v43 != v45)
                {
                  uint64_t v52 = *((void *)v43 - 1);
                  v43 -= 8;
                  *((void *)v51 - 1) = v52;
                  v51 -= 8;
                }
                *(void *)(a1 + 8) = v51;
                *(void *)(a1 + 16) = v44;
                *(void *)(a1 + 24) = &v50[8 * v49];
                if (v45) {
                  operator delete(v45);
                }
              }
              else
              {
                *(void *)unint64_t v43 = 0;
                unint64_t v44 = v43 + 8;
              }
              *(void *)(a1 + 16) = v44;
              unint64_t v53 = *((void *)this + 1);
              if (v53 > 0xFFFFFFFFFFFFFFF7 || v53 + 8 > *((void *)this + 2))
              {
LABEL_86:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v44 - 1) = *(void *)(*(void *)this + v53);
              unint64_t v41 = *((void *)this + 2);
              unint64_t v40 = *((void *)this + 1) + 8;
              *((void *)this + 1) = v40;
            }
LABEL_87:
            PB::Reader::recallMark();
          }
          else
          {
            uint64_t v60 = *(char **)(a1 + 16);
            unint64_t v59 = *(void *)(a1 + 24);
            if ((unint64_t)v60 >= v59)
            {
              uint64_t v67 = (char *)*v8;
              uint64_t v68 = (v60 - (unsigned char *)*v8) >> 3;
              unint64_t v69 = v68 + 1;
              if ((unint64_t)(v68 + 1) >> 61) {
LABEL_132:
              }
                sub_1001D7FD4();
              uint64_t v70 = v59 - (void)v67;
              if (v70 >> 2 > v69) {
                unint64_t v69 = v70 >> 2;
              }
              if ((unint64_t)v70 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v71 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v71 = v69;
              }
              if (v71)
              {
                uint64_t v72 = (char *)sub_1000DA54C(v9, v71);
                uint64_t v67 = *(char **)(a1 + 8);
                uint64_t v60 = *(char **)(a1 + 16);
              }
              else
              {
                uint64_t v72 = 0;
              }
              int v75 = &v72[8 * v68];
              *(void *)int v75 = 0;
              unint64_t v58 = v75 + 8;
              while (v60 != v67)
              {
                uint64_t v76 = *((void *)v60 - 1);
                v60 -= 8;
                *((void *)v75 - 1) = v76;
                v75 -= 8;
              }
              *(void *)(a1 + 8) = v75;
              *(void *)(a1 + 16) = v58;
              *(void *)(a1 + 24) = &v72[8 * v71];
              if (v67) {
                operator delete(v67);
              }
            }
            else
            {
              *(void *)uint64_t v60 = 0;
              unint64_t v58 = v60 + 8;
            }
            *(void *)(a1 + 16) = v58;
LABEL_118:
            unint64_t v77 = *((void *)this + 1);
            if (v77 <= 0xFFFFFFFFFFFFFFF7 && v77 + 8 <= *((void *)this + 2))
            {
              *(v58 - 1) = *(void *)(*(void *)this + v77);
LABEL_122:
              *((void *)this + 1) += 8;
            }
            else
            {
LABEL_120:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_123:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || *((unsigned char *)this + 24)) {
            return v4 == 0;
          }
          break;
        case 4u:
          *(unsigned char *)(a1 + 80) |= 2u;
          unint64_t v54 = *((void *)this + 1);
          if (v54 > 0xFFFFFFFFFFFFFFF7 || v54 + 8 > *((void *)this + 2)) {
            goto LABEL_120;
          }
          *(void *)(a1 + 64) = *(void *)(*(void *)this + v54);
          goto LABEL_122;
        case 5u:
          *(unsigned char *)(a1 + 80) |= 1u;
          unint64_t v55 = *((void *)this + 1);
          if (v55 > 0xFFFFFFFFFFFFFFF7 || v55 + 8 > *((void *)this + 2)) {
            goto LABEL_120;
          }
          *(void *)(a1 + 56) = *(void *)(*(void *)this + v55);
          goto LABEL_122;
        default:
          if ((PB::Reader::skip(this, v15 >> 3, v24, 0) & 1) == 0) {
            return 0;
          }
          goto LABEL_123;
      }
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v15 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v21 = v2 + 1;
      char v22 = *(unsigned char *)(v12 + v2);
      *((void *)this + 1) = v21;
      v15 |= (unint64_t)(v22 & 0x7F) << v19;
      if ((v22 & 0x80) == 0) {
        goto LABEL_21;
      }
      v19 += 7;
      unint64_t v2 = v21;
      if (v20++ >= 9)
      {
LABEL_20:
        unint64_t v15 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101669CF4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  if ((*(unsigned char *)(result + 80) & 4) != 0) {
    double result = PB::Writer::write(this, *(double *)(result + 72), 1u);
  }
  int v4 = *(double **)(v3 + 32);
  uint64_t v5 = *(double **)(v3 + 40);
  while (v4 != v5)
  {
    double v6 = *v4++;
    double result = PB::Writer::write(this, v6, 2u);
  }
  double v7 = *(double **)(v3 + 8);
  uint64_t v8 = *(double **)(v3 + 16);
  while (v7 != v8)
  {
    double v9 = *v7++;
    double result = PB::Writer::write(this, v9, 3u);
  }
  char v10 = *(unsigned char *)(v3 + 80);
  if ((v10 & 2) != 0)
  {
    double result = PB::Writer::write(this, *(double *)(v3 + 64), 4u);
    char v10 = *(unsigned char *)(v3 + 80);
  }
  if (v10)
  {
    double v11 = *(double *)(v3 + 56);
    return PB::Writer::write(this, v11, 5u);
  }
  return result;
}

void *sub_101669DC4(void *result)
{
  *double result = &off_1023337C8;
  result[1] = 0;
  return result;
}

void sub_101669DE8(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_101669E20(uint64_t result, uint64_t a2)
{
  *(void *)double result = &off_1023337C8;
  *(void *)(result + 8) = 0;
  if (*(unsigned char *)(a2 + 12))
  {
    int v2 = *(_DWORD *)(a2 + 8);
    *(unsigned char *)(result + 12) = 1;
    *(_DWORD *)(result + 8) = v2;
  }
  return result;
}

uint64_t sub_101669E58(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 12)) {
    PB::TextFormatter::format(this, "trackingBehavior", *(_DWORD *)(a1 + 8));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101669EB8(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 12) |= 1u;
        unint64_t v20 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
        uint64_t v21 = *(void *)this;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v3)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v24 = 0;
          if (v3 <= v20) {
            unint64_t v2 = *((void *)this + 1);
          }
          else {
            unint64_t v2 = *((void *)this + 2);
          }
          while (1)
          {
            if (v2 == v20)
            {
              LODWORD(v24) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_43;
            }
            unint64_t v29 = v20++;
            char v30 = *(unsigned char *)(v21 + v29);
            *((void *)this + 1) = v20;
            v24 |= (unint64_t)(v30 & 0x7F) << v27;
            if ((v30 & 0x80) == 0) {
              break;
            }
            v27 += 7;
            BOOL v14 = v28++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              goto LABEL_42;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v24) = 0;
          }
LABEL_42:
          unint64_t v2 = v29 + 1;
        }
        else
        {
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          while (1)
          {
            unint64_t v2 = v20 + 1;
            *((void *)this + 1) = v20 + 1;
            char v25 = *(unsigned char *)(v21 + v20);
            v24 |= (unint64_t)(v25 & 0x7F) << v22;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v22 += 7;
            unint64_t v20 = v2;
            BOOL v14 = v23++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              break;
            }
          }
        }
LABEL_43:
        *(_DWORD *)(a1 + 8) = v24;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
      }
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10166A0F0(uint64_t result, PB::Writer *this)
{
  if (*(unsigned char *)(result + 12)) {
    return PB::Writer::writeVarInt(this, *(_DWORD *)(result + 8), 1u);
  }
  return result;
}

void *sub_10166A110(void *result)
{
  *uint64_t result = &off_102333800;
  result[1] = 0;
  return result;
}

void sub_10166A134(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_10166A16C(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102333800;
  *(void *)(result + 8) = 0;
  if (*(unsigned char *)(a2 + 12))
  {
    int v2 = *(_DWORD *)(a2 + 8);
    *(unsigned char *)(result + 12) = 1;
    *(_DWORD *)(result + 8) = v2;
  }
  return result;
}

uint64_t sub_10166A1A4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 12)) {
    PB::TextFormatter::format(this, "clientMode", *(_DWORD *)(a1 + 8));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10166A204(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 12) |= 1u;
        unint64_t v20 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
        uint64_t v21 = *(void *)this;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v3)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v24 = 0;
          if (v3 <= v20) {
            unint64_t v2 = *((void *)this + 1);
          }
          else {
            unint64_t v2 = *((void *)this + 2);
          }
          while (1)
          {
            if (v2 == v20)
            {
              LODWORD(v24) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_43;
            }
            unint64_t v29 = v20++;
            char v30 = *(unsigned char *)(v21 + v29);
            *((void *)this + 1) = v20;
            v24 |= (unint64_t)(v30 & 0x7F) << v27;
            if ((v30 & 0x80) == 0) {
              break;
            }
            v27 += 7;
            BOOL v14 = v28++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              goto LABEL_42;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v24) = 0;
          }
LABEL_42:
          unint64_t v2 = v29 + 1;
        }
        else
        {
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          while (1)
          {
            unint64_t v2 = v20 + 1;
            *((void *)this + 1) = v20 + 1;
            char v25 = *(unsigned char *)(v21 + v20);
            v24 |= (unint64_t)(v25 & 0x7F) << v22;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v22 += 7;
            unint64_t v20 = v2;
            BOOL v14 = v23++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              break;
            }
          }
        }
LABEL_43:
        *(_DWORD *)(a1 + 8) = v24;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
      }
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10166A43C(uint64_t result, PB::Writer *this)
{
  if (*(unsigned char *)(result + 12)) {
    return PB::Writer::writeVarInt(this, *(_DWORD *)(result + 8), 1u);
  }
  return result;
}

uint64_t sub_10166A45C(uint64_t result)
{
  *(void *)uint64_t result = &off_102333838;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void sub_10166A484(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

double sub_10166A4BC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102333838;
  *(_DWORD *)(a1 + 32) = 0;
  char v2 = *(unsigned char *)(a2 + 32);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 32) = 1;
    *(void *)(a1 + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 32) & 4) != 0)
  {
LABEL_5:
    double result = *(double *)(a2 + 24);
    v3 |= 4u;
    *(unsigned char *)(a1 + 32) = v3;
    *(double *)(a1 + 24) = result;
    char v2 = *(unsigned char *)(a2 + 32);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    double result = *(double *)(a2 + 16);
    *(unsigned char *)(a1 + 32) = v3 | 2;
    *(double *)(a1 + 16) = result;
  }
  return result;
}

uint64_t sub_10166A53C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 32);
  if (v5)
  {
    PB::TextFormatter::format(this, "bpm", *(void *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 32);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((*(unsigned char *)(a1 + 32) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "globalMachtime", *(double *)(a1 + 16));
  if ((*(unsigned char *)(a1 + 32) & 4) != 0) {
LABEL_4:
  }
    PB::TextFormatter::format(this, "localMachtime", *(double *)(a1 + 24));
LABEL_5:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10166A5E0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  for (int i = *((unsigned __int8 *)this + 24); v2 < v3 && i == 0; int i = *((unsigned __int8 *)this + 24))
  {
    uint64_t v8 = *(void *)this;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      while (v3 != v2)
      {
        unint64_t v17 = v2 + 1;
        char v18 = *(unsigned char *)(v8 + v2);
        *((void *)this + 1) = v17;
        v11 |= (unint64_t)(v18 & 0x7F) << v15;
        if ((v18 & 0x80) == 0) {
          goto LABEL_20;
        }
        v15 += 7;
        unint64_t v2 = v17;
        if (v16++ >= 9)
        {
LABEL_19:
          unint64_t v11 = 0;
          goto LABEL_20;
        }
      }
      int i = 1;
      *((unsigned char *)this + 24) = 1;
      return i == 0;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)this + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
LABEL_20:
    if ((v11 & 7) == 4)
    {
      int i = 0;
      return i == 0;
    }
    unint64_t v20 = v11 >> 3;
    if ((v11 >> 3) == 3)
    {
      *(unsigned char *)(a1 + 32) |= 2u;
      unint64_t v2 = *((void *)this + 1);
      if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
      {
        *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
LABEL_47:
        unint64_t v2 = *((void *)this + 1) + 8;
        *((void *)this + 1) = v2;
        goto LABEL_53;
      }
    }
    else
    {
      if (v20 != 2)
      {
        if (v20 == 1)
        {
          *(unsigned char *)(a1 + 32) |= 1u;
          unint64_t v21 = *((void *)this + 1);
          unint64_t v2 = *((void *)this + 2);
          uint64_t v22 = *(void *)this;
          if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
          {
            char v28 = 0;
            unsigned int v29 = 0;
            uint64_t v25 = 0;
            if (v2 <= v21) {
              unint64_t v2 = *((void *)this + 1);
            }
            while (1)
            {
              if (v2 == v21)
              {
                uint64_t v25 = 0;
                *((unsigned char *)this + 24) = 1;
                goto LABEL_52;
              }
              unint64_t v30 = v21++;
              char v31 = *(unsigned char *)(v22 + v30);
              *((void *)this + 1) = v21;
              v25 |= (unint64_t)(v31 & 0x7F) << v28;
              if ((v31 & 0x80) == 0) {
                break;
              }
              v28 += 7;
              BOOL v14 = v29++ > 8;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_51;
              }
            }
            if (*((unsigned char *)this + 24)) {
              uint64_t v25 = 0;
            }
LABEL_51:
            unint64_t v2 = v30 + 1;
          }
          else
          {
            char v23 = 0;
            unsigned int v24 = 0;
            uint64_t v25 = 0;
            while (1)
            {
              unint64_t v2 = v21 + 1;
              *((void *)this + 1) = v21 + 1;
              char v26 = *(unsigned char *)(v22 + v21);
              v25 |= (unint64_t)(v26 & 0x7F) << v23;
              if ((v26 & 0x80) == 0) {
                break;
              }
              v23 += 7;
              unint64_t v21 = v2;
              BOOL v14 = v24++ > 8;
              if (v14)
              {
                uint64_t v25 = 0;
                break;
              }
            }
          }
LABEL_52:
          *(void *)(a1 + 8) = v25;
        }
        else
        {
          uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
        }
        goto LABEL_53;
      }
      *(unsigned char *)(a1 + 32) |= 4u;
      unint64_t v2 = *((void *)this + 1);
      if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
      {
        *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
        goto LABEL_47;
      }
    }
    *((unsigned char *)this + 24) = 1;
LABEL_53:
    unint64_t v3 = *((void *)this + 2);
  }
  return i == 0;
}

uint64_t sub_10166A8B0(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 32);
  if ((v4 & 1) == 0)
  {
    if ((*(unsigned char *)(result + 32) & 4) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24), 2u);
    if ((*(unsigned char *)(v3 + 32) & 2) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(result + 8), 1u);
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 4) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_7:
  double v5 = *(double *)(v3 + 16);

  return PB::Writer::write(this, v5, 3u);
}

void *sub_10166A93C(void *result)
{
  *uint64_t result = &off_102333870;
  result[1] = 0;
  return result;
}

void sub_10166A95C(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &off_102333870;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_10166A9DC(PB::Base *a1)
{
  sub_10166A95C(a1);

  operator delete();
}

void *sub_10166AA14(void *result, uint64_t a2)
{
  *uint64_t result = &off_102333870;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_10166AABC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10166AB38(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this, v10 >> 3, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10166AD34(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2, 1u);
  }
  return result;
}

uint64_t sub_10166AD50(uint64_t result)
{
  *(void *)uint64_t result = &off_1023338A8;
  *(_DWORD *)(result + 128) = 0;
  return result;
}

void sub_10166AD78(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

float sub_10166ADB0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_1023338A8;
  *(_DWORD *)(a1 + 128) = 0;
  int v2 = *(_DWORD *)(a2 + 128);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    int v3 = 1;
    *(_DWORD *)(a1 + 128) = 1;
    *(void *)(a1 + 8) = v4;
    int v2 = *(_DWORD *)(a2 + 128);
    if ((v2 & 0x100000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 0x100000) != 0)
  {
LABEL_5:
    LODWORD(v4) = *(_DWORD *)(a2 + 104);
    v3 |= 0x100000u;
    *(_DWORD *)(a1 + 128) = v3;
    *(_DWORD *)(a1 + 104) = v4;
    int v2 = *(_DWORD *)(a2 + 128);
  }
LABEL_6:
  if ((v2 & 0x200000) != 0)
  {
    LODWORD(v4) = *(_DWORD *)(a2 + 108);
    v3 |= 0x200000u;
    *(_DWORD *)(a1 + 128) = v3;
    *(_DWORD *)(a1 + 108) = v4;
    int v2 = *(_DWORD *)(a2 + 128);
    if ((v2 & 0x400000) == 0)
    {
LABEL_8:
      if ((v2 & 0x80000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_33;
    }
  }
  else if ((v2 & 0x400000) == 0)
  {
    goto LABEL_8;
  }
  LODWORD(v4) = *(_DWORD *)(a2 + 112);
  v3 |= 0x400000u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 112) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x80000) == 0)
  {
LABEL_9:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_34;
  }
LABEL_33:
  LODWORD(v4) = *(_DWORD *)(a2 + 100);
  v3 |= 0x80000u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 100) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x10000) == 0)
  {
LABEL_10:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_35;
  }
LABEL_34:
  LODWORD(v4) = *(_DWORD *)(a2 + 88);
  v3 |= 0x10000u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 88) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x20000) == 0)
  {
LABEL_11:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_36;
  }
LABEL_35:
  LODWORD(v4) = *(_DWORD *)(a2 + 92);
  v3 |= 0x20000u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 92) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x40000) == 0)
  {
LABEL_12:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_37;
  }
LABEL_36:
  LODWORD(v4) = *(_DWORD *)(a2 + 96);
  v3 |= 0x40000u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 96) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x8000) == 0)
  {
LABEL_13:
    if ((v2 & 0x800) == 0) {
      goto LABEL_14;
    }
    goto LABEL_38;
  }
LABEL_37:
  LODWORD(v4) = *(_DWORD *)(a2 + 84);
  v3 |= 0x8000u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 84) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x800) == 0)
  {
LABEL_14:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_39;
  }
LABEL_38:
  LODWORD(v4) = *(_DWORD *)(a2 + 68);
  v3 |= 0x800u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 68) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x1000) == 0)
  {
LABEL_15:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_40;
  }
LABEL_39:
  LODWORD(v4) = *(_DWORD *)(a2 + 72);
  v3 |= 0x1000u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 72) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x2000) == 0)
  {
LABEL_16:
    if ((v2 & 8) == 0) {
      goto LABEL_17;
    }
    goto LABEL_41;
  }
LABEL_40:
  LODWORD(v4) = *(_DWORD *)(a2 + 76);
  v3 |= 0x2000u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 76) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 8) == 0)
  {
LABEL_17:
    if ((v2 & 0x400) == 0) {
      goto LABEL_18;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t v4 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_DWORD *)(a1 + 128) = v3;
  *(void *)(a1 + 32) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x400) == 0)
  {
LABEL_18:
    if ((v2 & 2) == 0) {
      goto LABEL_19;
    }
    goto LABEL_43;
  }
LABEL_42:
  int v5 = *(_DWORD *)(a2 + 64);
  v3 |= 0x400u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 64) = v5;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 2) == 0)
  {
LABEL_19:
    if ((v2 & 0x80) == 0) {
      goto LABEL_20;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t v4 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_DWORD *)(a1 + 128) = v3;
  *(void *)(a1 + 16) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x80) == 0)
  {
LABEL_20:
    if ((v2 & 0x100) == 0) {
      goto LABEL_21;
    }
    goto LABEL_45;
  }
LABEL_44:
  LODWORD(v4) = *(_DWORD *)(a2 + 52);
  v3 |= 0x80u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 52) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x100) == 0)
  {
LABEL_21:
    if ((v2 & 0x200) == 0) {
      goto LABEL_22;
    }
    goto LABEL_46;
  }
LABEL_45:
  LODWORD(v4) = *(_DWORD *)(a2 + 56);
  v3 |= 0x100u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 56) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x200) == 0)
  {
LABEL_22:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_47;
  }
LABEL_46:
  LODWORD(v4) = *(_DWORD *)(a2 + 60);
  v3 |= 0x200u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 60) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x4000) == 0)
  {
LABEL_23:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_48;
  }
LABEL_47:
  LODWORD(v4) = *(_DWORD *)(a2 + 80);
  v3 |= 0x4000u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 80) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x800000) == 0)
  {
LABEL_24:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_49;
  }
LABEL_48:
  LODWORD(v4) = *(_DWORD *)(a2 + 116);
  v3 |= 0x800000u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 116) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_25:
    if ((v2 & 0x2000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_50;
  }
LABEL_49:
  LODWORD(v4) = *(_DWORD *)(a2 + 120);
  v3 |= 0x1000000u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 120) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x2000000) == 0)
  {
LABEL_26:
    if ((v2 & 4) == 0) {
      goto LABEL_27;
    }
    goto LABEL_51;
  }
LABEL_50:
  LODWORD(v4) = *(_DWORD *)(a2 + 124);
  v3 |= 0x2000000u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 124) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 4) == 0)
  {
LABEL_27:
    if ((v2 & 0x10) == 0) {
      goto LABEL_28;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t v4 = *(void *)(a2 + 24);
  v3 |= 4u;
  *(_DWORD *)(a1 + 128) = v3;
  *(void *)(a1 + 24) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x10) == 0)
  {
LABEL_28:
    if ((v2 & 0x20) == 0) {
      goto LABEL_29;
    }
    goto LABEL_53;
  }
LABEL_52:
  LODWORD(v4) = *(_DWORD *)(a2 + 40);
  v3 |= 0x10u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 40) = v4;
  int v2 = *(_DWORD *)(a2 + 128);
  if ((v2 & 0x20) == 0)
  {
LABEL_29:
    if ((v2 & 0x40) == 0) {
      return *(float *)&v4;
    }
    goto LABEL_54;
  }
LABEL_53:
  LODWORD(v4) = *(_DWORD *)(a2 + 44);
  v3 |= 0x20u;
  *(_DWORD *)(a1 + 128) = v3;
  *(_DWORD *)(a1 + 44) = v4;
  if ((*(_DWORD *)(a2 + 128) & 0x40) == 0) {
    return *(float *)&v4;
  }
LABEL_54:
  LODWORD(v4) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 128) = v3 | 0x40;
  *(_DWORD *)(a1 + 48) = v4;
  return *(float *)&v4;
}

uint64_t sub_10166B0B4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x10) != 0)
  {
    PB::TextFormatter::format(this, "accelUnfilteredX", *(float *)(a1 + 40));
    int v5 = *(_DWORD *)(a1 + 128);
    if ((v5 & 0x20) == 0)
    {
LABEL_3:
      if ((v5 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_33;
    }
  }
  else if ((v5 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "accelUnfilteredY", *(float *)(a1 + 44));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x40) == 0)
  {
LABEL_4:
    if ((v5 & 0x80) == 0) {
      goto LABEL_5;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(this, "accelUnfilteredZ", *(float *)(a1 + 48));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x80) == 0)
  {
LABEL_5:
    if ((v5 & 0x100) == 0) {
      goto LABEL_6;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(this, "accelX", *(float *)(a1 + 52));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x100) == 0)
  {
LABEL_6:
    if ((v5 & 0x200) == 0) {
      goto LABEL_7;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "accelY", *(float *)(a1 + 56));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x200) == 0)
  {
LABEL_7:
    if ((v5 & 0x400) == 0) {
      goto LABEL_8;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "accelZ", *(float *)(a1 + 60));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x400) == 0)
  {
LABEL_8:
    if ((v5 & 0x800) == 0) {
      goto LABEL_9;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "flags", *(_DWORD *)(a1 + 64));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x800) == 0)
  {
LABEL_9:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "gravityX", *(float *)(a1 + 68));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x1000) == 0)
  {
LABEL_10:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "gravityY", *(float *)(a1 + 72));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x2000) == 0)
  {
LABEL_11:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "gravityZ", *(float *)(a1 + 76));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x4000) == 0)
  {
LABEL_12:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(this, "gyroBiasErrorEstimate", *(float *)(a1 + 80));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x8000) == 0)
  {
LABEL_13:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(this, "quaternionPredictedW", *(float *)(a1 + 84));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x10000) == 0)
  {
LABEL_14:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(this, "quaternionPredictedX", *(float *)(a1 + 88));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x20000) == 0)
  {
LABEL_15:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(this, "quaternionPredictedY", *(float *)(a1 + 92));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x40000) == 0)
  {
LABEL_16:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_46;
  }
LABEL_45:
  PB::TextFormatter::format(this, "quaternionPredictedZ", *(float *)(a1 + 96));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x80000) == 0)
  {
LABEL_17:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_47;
  }
LABEL_46:
  PB::TextFormatter::format(this, "quaternionW", *(float *)(a1 + 100));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x100000) == 0)
  {
LABEL_18:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_48;
  }
LABEL_47:
  PB::TextFormatter::format(this, "quaternionX", *(float *)(a1 + 104));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x200000) == 0)
  {
LABEL_19:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(this, "quaternionY", *(float *)(a1 + 108));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x400000) == 0)
  {
LABEL_20:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_50;
  }
LABEL_49:
  PB::TextFormatter::format(this, "quaternionZ", *(float *)(a1 + 112));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x800000) == 0)
  {
LABEL_21:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_51;
  }
LABEL_50:
  PB::TextFormatter::format(this, "rotationRateX", *(float *)(a1 + 116));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_22:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_52;
  }
LABEL_51:
  PB::TextFormatter::format(this, "rotationRateY", *(float *)(a1 + 120));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_23:
    if ((v5 & 1) == 0) {
      goto LABEL_24;
    }
    goto LABEL_53;
  }
LABEL_52:
  PB::TextFormatter::format(this, "rotationRateZ", *(float *)(a1 + 124));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 1) == 0)
  {
LABEL_24:
    if ((v5 & 2) == 0) {
      goto LABEL_25;
    }
    goto LABEL_54;
  }
LABEL_53:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 2) == 0)
  {
LABEL_25:
    if ((v5 & 4) == 0) {
      goto LABEL_26;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(this, "timestampAccel", *(double *)(a1 + 16));
  int v5 = *(_DWORD *)(a1 + 128);
  if ((v5 & 4) == 0)
  {
LABEL_26:
    if ((v5 & 8) == 0) {
      goto LABEL_28;
    }
    goto LABEL_27;
  }
LABEL_55:
  PB::TextFormatter::format(this, "timestampAccelUnfiltered", *(double *)(a1 + 24));
  if ((*(_DWORD *)(a1 + 128) & 8) != 0) {
LABEL_27:
  }
    PB::TextFormatter::format(this, "timestampPrediction", *(double *)(a1 + 32));
LABEL_28:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10166B438(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_DWORD *)(a1 + 128) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_97;
            case 2u:
              *(_DWORD *)(a1 + 128) |= 0x100000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 104) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 3u:
              *(_DWORD *)(a1 + 128) |= 0x200000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 108) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 4u:
              *(_DWORD *)(a1 + 128) |= 0x400000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 112) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 5u:
              *(_DWORD *)(a1 + 128) |= 0x80000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 6u:
              *(_DWORD *)(a1 + 128) |= 0x10000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 7u:
              *(_DWORD *)(a1 + 128) |= 0x20000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 8u:
              *(_DWORD *)(a1 + 128) |= 0x40000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 9u:
              *(_DWORD *)(a1 + 128) |= 0x8000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 0xAu:
              *(_DWORD *)(a1 + 128) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 68) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 0xBu:
              *(_DWORD *)(a1 + 128) |= 0x1000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 0xCu:
              *(_DWORD *)(a1 + 128) |= 0x2000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 0xDu:
              *(_DWORD *)(a1 + 128) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
              goto LABEL_97;
            case 0xEu:
              *(_DWORD *)(a1 + 128) |= 0x400u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v27 = 0;
                unsigned int v28 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_126;
                  }
                  unint64_t v29 = v21++;
                  char v30 = *(unsigned char *)(v22 + v29);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v30 & 0x7F) << v27;
                  if ((v30 & 0x80) == 0) {
                    break;
                  }
                  v27 += 7;
                  BOOL v14 = v28++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_125:
                    unint64_t v2 = v29 + 1;
                    goto LABEL_126;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_125;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_126;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_126:
              *(_DWORD *)(a1 + 64) = v25;
LABEL_117:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 0xFu:
              *(_DWORD *)(a1 + 128) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_97;
            case 0x10u:
              *(_DWORD *)(a1 + 128) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 0x11u:
              *(_DWORD *)(a1 + 128) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 0x12u:
              *(_DWORD *)(a1 + 128) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 60) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 0x13u:
              *(_DWORD *)(a1 + 128) |= 0x4000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 0x14u:
              *(_DWORD *)(a1 + 128) |= 0x800000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 116) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 0x15u:
              *(_DWORD *)(a1 + 128) |= 0x1000000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 120) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 0x16u:
              *(_DWORD *)(a1 + 128) |= 0x2000000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 124) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 0x17u:
              *(_DWORD *)(a1 + 128) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
LABEL_97:
              unint64_t v2 = *((void *)this + 1) + 8;
              goto LABEL_116;
            case 0x18u:
              *(_DWORD *)(a1 + 128) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 0x19u:
              *(_DWORD *)(a1 + 128) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_106;
              }
              *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_115;
            case 0x1Au:
              *(_DWORD *)(a1 + 128) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
LABEL_115:
                unint64_t v2 = *((void *)this + 1) + 4;
LABEL_116:
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_106:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_117;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_117;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_10166BC90(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 128);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8), 1u);
    int v4 = *(_DWORD *)(v3 + 128);
    if ((v4 & 0x100000) == 0)
    {
LABEL_3:
      if ((v4 & 0x200000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_30;
    }
  }
  else if ((v4 & 0x100000) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 104), 2u);
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x200000) == 0)
  {
LABEL_4:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 108), 3u);
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x400000) == 0)
  {
LABEL_5:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 112), 4u);
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x80000) == 0)
  {
LABEL_6:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 100), 5u);
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x10000) == 0)
  {
LABEL_7:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 88), 6u);
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x20000) == 0)
  {
LABEL_8:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 92), 7u);
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x40000) == 0)
  {
LABEL_9:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 96), 8u);
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x8000) == 0)
  {
LABEL_10:
    if ((v4 & 0x800) == 0) {
      goto LABEL_11;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 84), 9u);
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x800) == 0)
  {
LABEL_11:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 68), 0xAu);
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x1000) == 0)
  {
LABEL_12:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72), 0xBu);
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x2000) == 0)
  {
LABEL_13:
    if ((v4 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76), 0xCu);
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 8) == 0)
  {
LABEL_14:
    if ((v4 & 0x400) == 0) {
      goto LABEL_15;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32), 0xDu);
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x400) == 0)
  {
LABEL_15:
    if ((v4 & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 64), 0xEu);
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 2) == 0)
  {
LABEL_16:
    if ((v4 & 0x80) == 0) {
      goto LABEL_17;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16), 0xFu);
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x80) == 0)
  {
LABEL_17:
    if ((v4 & 0x100) == 0) {
      goto LABEL_18;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52), 0x10u);
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x100) == 0)
  {
LABEL_18:
    if ((v4 & 0x200) == 0) {
      goto LABEL_19;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56), 0x11u);
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x200) == 0)
  {
LABEL_19:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 60), 0x12u);
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x4000) == 0)
  {
LABEL_20:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80), 0x13u);
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x800000) == 0)
  {
LABEL_21:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 116), 0x14u);
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_22:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 120), 0x15u);
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_23:
    if ((v4 & 4) == 0) {
      goto LABEL_24;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 124), 0x16u);
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 4) == 0)
  {
LABEL_24:
    if ((v4 & 0x10) == 0) {
      goto LABEL_25;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24), 0x17u);
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x10) == 0)
  {
LABEL_25:
    if ((v4 & 0x20) == 0) {
      goto LABEL_26;
    }
LABEL_52:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44), 0x19u);
    if ((*(_DWORD *)(v3 + 128) & 0x40) == 0) {
      return result;
    }
    goto LABEL_53;
  }
LABEL_51:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40), 0x18u);
  int v4 = *(_DWORD *)(v3 + 128);
  if ((v4 & 0x20) != 0) {
    goto LABEL_52;
  }
LABEL_26:
  if ((v4 & 0x40) == 0) {
    return result;
  }
LABEL_53:
  float v5 = *(float *)(v3 + 48);

  return PB::Writer::write(this, v5, 0x1Au);
}

uint64_t sub_10166BFA0(uint64_t result)
{
  *(void *)uint64_t result = off_1023338E0;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 36) = 0;
  return result;
}

void sub_10166BFC8(void **a1)
{
  *a1 = off_1023338E0;
  unint64_t v2 = a1 + 1;
  sub_1016B1E74(&v2);
  PB::Base::~Base((PB::Base *)a1);
}

void sub_10166C024(void **a1)
{
  *a1 = off_1023338E0;
  unint64_t v2 = a1 + 1;
  sub_1016B1E74(&v2);
  PB::Base::~Base((PB::Base *)a1);
  operator delete();
}

uint64_t sub_10166C094(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = off_1023338E0;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 36) = 0;
  if (*(void *)(a2 + 8) != *(void *)(a2 + 16)) {
    sub_10166C138();
  }
  if (*(unsigned char *)(a2 + 36))
  {
    int v2 = *(_DWORD *)(a2 + 32);
    *(unsigned char *)(result + 36) |= 1u;
    *(_DWORD *)(result + 32) = v2;
  }
  return result;
}

void sub_10166C138()
{
}

void sub_10166C23C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100C341AC((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10166C284(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 36)) {
    PB::TextFormatter::format(this, "lastSampleId", *(_DWORD *)(a1 + 32));
  }
  float v5 = *(uint64_t **)(a1 + 8);
  double v6 = *(uint64_t **)(a1 + 16);
  while (v5 != v6)
  {
    uint64_t v7 = *v5++;
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v7 + 32))(v7, this, "slowOptical");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10166C338(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 36) |= 1u;
        unint64_t v21 = *((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        uint64_t v23 = *(void *)this;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v22)
        {
          char v30 = 0;
          unsigned int v31 = 0;
          uint64_t v26 = 0;
          if (v22 <= v21) {
            unint64_t v22 = *((void *)this + 1);
          }
          while (1)
          {
            if (v22 == v21)
            {
              LODWORD(v26) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_43;
            }
            unint64_t v32 = v21 + 1;
            char v33 = *(unsigned char *)(v23 + v21);
            *((void *)this + 1) = v32;
            v26 |= (unint64_t)(v33 & 0x7F) << v30;
            if ((v33 & 0x80) == 0) {
              break;
            }
            v30 += 7;
            unint64_t v21 = v32;
            BOOL v14 = v31++ > 8;
            if (v14)
            {
LABEL_39:
              LODWORD(v26) = 0;
              goto LABEL_43;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v26) = 0;
          }
        }
        else
        {
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v26 = 0;
          while (1)
          {
            unint64_t v27 = v21 + 1;
            *((void *)this + 1) = v21 + 1;
            char v28 = *(unsigned char *)(v23 + v21);
            v26 |= (unint64_t)(v28 & 0x7F) << v24;
            if ((v28 & 0x80) == 0) {
              break;
            }
            v24 += 7;
            unint64_t v21 = v27;
            BOOL v14 = v25++ > 8;
            if (v14) {
              goto LABEL_39;
            }
          }
        }
LABEL_43:
        *(_DWORD *)(a1 + 32) = v26;
      }
      else
      {
        if (v20 == 1) {
          sub_10166C5EC();
        }
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!result) {
          return result;
        }
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

void sub_10166C5EC()
{
}

void sub_10166C6E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100C341AC((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10166C72C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(const PB::Base ***)(result + 8);
  float v5 = *(const PB::Base ***)(result + 16);
  while (v4 != v5)
  {
    double v6 = *v4++;
    uint64_t result = PB::Writer::writeSubmessage(this, v6, 1u);
  }
  if (*(unsigned char *)(v3 + 36))
  {
    unsigned int v7 = *(_DWORD *)(v3 + 32);
    return PB::Writer::writeVarInt(this, v7, 2u);
  }
  return result;
}

double sub_10166C7AC(uint64_t a1)
{
  *(void *)a1 = off_102333918;
  *(_DWORD *)(a1 + 52) = 0;
  *(_DWORD *)(a1 + 60) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = 0;
  return result;
}

void sub_10166C7E4(uint64_t a1)
{
  *(void *)a1 = off_102333918;
  int v4 = (void **)(a1 + 24);
  sub_1016B1E74(&v4);
  uint64_t v2 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  PB::Base::~Base((PB::Base *)a1);
}

void sub_10166C8A4(uint64_t a1)
{
  sub_10166C7E4(a1);

  operator delete();
}

uint64_t sub_10166C8DC(uint64_t result, uint64_t a2)
{
  *(void *)double result = off_102333918;
  *(_OWORD *)(result + 8) = 0u;
  *(_OWORD *)(result + 24) = 0u;
  *(_DWORD *)(result + 52) = 0;
  *(_DWORD *)(result + 60) = 0;
  *(void *)(result + 40) = 0;
  if (*(unsigned char *)(a2 + 60))
  {
    int v3 = *(_DWORD *)(a2 + 48);
    *(unsigned char *)(result + 60) = 1;
    *(_DWORD *)(result + 48) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 60) & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 60) & 2) != 0)
  {
LABEL_5:
    int v4 = *(_DWORD *)(a2 + 52);
    *(unsigned char *)(result + 60) = v2;
    *(_DWORD *)(result + 52) = v4;
  }
LABEL_6:
  if (*(void *)(a2 + 24) != *(void *)(a2 + 32)) {
    sub_10166C138();
  }
  if (*(void *)(a2 + 16)) {
    operator new();
  }
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  char v5 = *(unsigned char *)(a2 + 60);
  if ((v5 & 4) != 0)
  {
    char v6 = *(unsigned char *)(a2 + 56);
    *(unsigned char *)(result + 60) |= 4u;
    *(unsigned char *)(result + 56) = v6;
    char v5 = *(unsigned char *)(a2 + 60);
  }
  if ((v5 & 8) != 0)
  {
    char v7 = *(unsigned char *)(a2 + 57);
    *(unsigned char *)(result + 60) |= 8u;
    *(unsigned char *)(result + 57) = v7;
  }
  return result;
}

uint64_t sub_10166CAA8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 60);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "conchaMinAccepted", *(unsigned char *)(a1 + 56));
    char v5 = *(unsigned char *)(a1 + 60);
  }
  if (v5) {
    PB::TextFormatter::format(this, "location", *(_DWORD *)(a1 + 48));
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v6 + 32))(v6, this, "newOpenLid");
  }
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v7 + 32))(v7, this, "oldOpenLid");
  }
  uint64_t v8 = *(uint64_t **)(a1 + 24);
  char v9 = *(uint64_t **)(a1 + 32);
  while (v8 != v9)
  {
    uint64_t v10 = *v8++;
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v10 + 32))(v10, this, "optical");
  }
  char v11 = *(unsigned char *)(a1 + 60);
  if ((v11 & 2) != 0)
  {
    PB::TextFormatter::format(this, "state", *(_DWORD *)(a1 + 52));
    char v11 = *(unsigned char *)(a1 + 60);
  }
  if ((v11 & 8) != 0) {
    PB::TextFormatter::format(this, "tragusMinAccepted", *(unsigned char *)(a1 + 57));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10166CC28(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 60) |= 1u;
          unint64_t v20 = *((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
          uint64_t v22 = *(void *)this;
          if (v20 <= 0xFFFFFFFFFFFFFFF5 && v20 + 10 <= v21)
          {
            char v23 = 0;
            unsigned int v24 = 0;
            uint64_t v25 = 0;
            do
            {
              unint64_t v26 = v20 + 1;
              *((void *)this + 1) = v20 + 1;
              char v27 = *(unsigned char *)(v22 + v20);
              v25 |= (unint64_t)(v27 & 0x7F) << v23;
              if ((v27 & 0x80) == 0) {
                goto LABEL_66;
              }
              v23 += 7;
              unint64_t v20 = v26;
              BOOL v14 = v24++ > 8;
            }
            while (!v14);
LABEL_51:
            LODWORD(v25) = 0;
            goto LABEL_66;
          }
          char v45 = 0;
          unsigned int v46 = 0;
          uint64_t v25 = 0;
          if (v21 <= v20) {
            unint64_t v21 = *((void *)this + 1);
          }
          while (2)
          {
            if (v21 == v20)
            {
              LODWORD(v25) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v47 = v20 + 1;
              char v48 = *(unsigned char *)(v22 + v20);
              *((void *)this + 1) = v47;
              v25 |= (unint64_t)(v48 & 0x7F) << v45;
              if (v48 < 0)
              {
                v45 += 7;
                unint64_t v20 = v47;
                BOOL v14 = v46++ > 8;
                if (v14) {
                  goto LABEL_51;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v25) = 0;
              }
            }
            break;
          }
LABEL_66:
          *(_DWORD *)(a1 + 48) = v25;
          goto LABEL_71;
        case 2u:
          *(unsigned char *)(a1 + 60) |= 2u;
          unint64_t v29 = *((void *)this + 1);
          unint64_t v30 = *((void *)this + 2);
          uint64_t v31 = *(void *)this;
          if (v29 <= 0xFFFFFFFFFFFFFFF5 && v29 + 10 <= v30)
          {
            char v32 = 0;
            unsigned int v33 = 0;
            uint64_t v34 = 0;
            do
            {
              unint64_t v35 = v29 + 1;
              *((void *)this + 1) = v29 + 1;
              char v36 = *(unsigned char *)(v31 + v29);
              v34 |= (unint64_t)(v36 & 0x7F) << v32;
              if ((v36 & 0x80) == 0) {
                goto LABEL_70;
              }
              v32 += 7;
              unint64_t v29 = v35;
              BOOL v14 = v33++ > 8;
            }
            while (!v14);
LABEL_58:
            LODWORD(v34) = 0;
            goto LABEL_70;
          }
          char v49 = 0;
          unsigned int v50 = 0;
          uint64_t v34 = 0;
          if (v30 <= v29) {
            unint64_t v30 = *((void *)this + 1);
          }
          break;
        case 3u:
          sub_10166C5EC();
        case 4u:
          operator new();
        case 5u:
          operator new();
        case 6u:
          *(unsigned char *)(a1 + 60) |= 4u;
          unint64_t v37 = *((void *)this + 1);
          if (v37 >= *((void *)this + 2))
          {
            BOOL v40 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v38 = v37 + 1;
            int v39 = *(unsigned __int8 *)(*(void *)this + v37);
            *((void *)this + 1) = v38;
            BOOL v40 = v39 != 0;
          }
          *(unsigned char *)(a1 + 56) = v40;
          goto LABEL_71;
        case 7u:
          *(unsigned char *)(a1 + 60) |= 8u;
          unint64_t v41 = *((void *)this + 1);
          if (v41 >= *((void *)this + 2))
          {
            BOOL v44 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v42 = v41 + 1;
            int v43 = *(unsigned __int8 *)(*(void *)this + v41);
            *((void *)this + 1) = v42;
            BOOL v44 = v43 != 0;
          }
          *(unsigned char *)(a1 + 57) = v44;
          goto LABEL_71;
        default:
          uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
          if (!result) {
            return result;
          }
          goto LABEL_71;
      }
      while (1)
      {
        if (v30 == v29)
        {
          LODWORD(v34) = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_70;
        }
        unint64_t v51 = v29 + 1;
        char v52 = *(unsigned char *)(v31 + v29);
        *((void *)this + 1) = v51;
        v34 |= (unint64_t)(v52 & 0x7F) << v49;
        if ((v52 & 0x80) == 0) {
          break;
        }
        v49 += 7;
        unint64_t v29 = v51;
        BOOL v14 = v50++ > 8;
        if (v14) {
          goto LABEL_58;
        }
      }
      if (*((unsigned char *)this + 24)) {
        LODWORD(v34) = 0;
      }
LABEL_70:
      *(_DWORD *)(a1 + 52) = v34;
LABEL_71:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10166D130(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 60);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(result + 48), 1u);
    char v4 = *(unsigned char *)(v3 + 60);
  }
  if ((v4 & 2) != 0) {
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 52), 2u);
  }
  char v5 = *(const PB::Base ***)(v3 + 24);
  uint64_t v6 = *(const PB::Base ***)(v3 + 32);
  while (v5 != v6)
  {
    uint64_t v7 = *v5++;
    uint64_t result = PB::Writer::writeSubmessage(this, v7, 3u);
  }
  uint64_t v8 = *(const PB::Base **)(v3 + 16);
  if (v8) {
    uint64_t result = PB::Writer::writeSubmessage(this, v8, 4u);
  }
  char v9 = *(const PB::Base **)(v3 + 8);
  if (v9) {
    uint64_t result = PB::Writer::writeSubmessage(this, v9, 5u);
  }
  char v10 = *(unsigned char *)(v3 + 60);
  if ((v10 & 4) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 56), 6u);
    char v10 = *(unsigned char *)(v3 + 60);
  }
  if ((v10 & 8) != 0)
  {
    char v11 = *(unsigned char *)(v3 + 57);
    return PB::Writer::write(this, v11, 7u);
  }
  return result;
}

uint64_t sub_10166D220(uint64_t result)
{
  *(_DWORD *)(result + 56) = 0;
  *(void *)uint64_t result = &off_102333950;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  return result;
}

void sub_10166D248(PB::Base *this)
{
  *(void *)this = &off_102333950;
  uint64_t v2 = *((void *)this + 3);
  *((void *)this + 3) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *((void *)this + 2);
  *((void *)this + 2) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  uint64_t v4 = *((void *)this + 1);
  *((void *)this + 1) = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }

  PB::Base::~Base(this);
}

void sub_10166D32C(PB::Base *a1)
{
  sub_10166D248(a1);

  operator delete();
}

uint64_t sub_10166D364(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102333950;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 56) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  if (*(unsigned char *)(a2 + 56))
  {
    uint64_t v3 = *(void *)(a2 + 32);
    *(unsigned char *)(result + 56) = 1;
    *(void *)(result + 32) = v3;
    char v2 = 9;
    if ((*(unsigned char *)(a2 + 56) & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v2 = 8;
  if ((*(unsigned char *)(a2 + 56) & 8) != 0)
  {
LABEL_5:
    int v4 = *(_DWORD *)(a2 + 48);
    *(unsigned char *)(result + 56) = v2;
    *(_DWORD *)(result + 48) = v4;
  }
LABEL_6:
  if (*(void *)(a2 + 24)) {
    operator new();
  }
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  if (*(void *)(a2 + 16)) {
    operator new();
  }
  char v5 = *(unsigned char *)(a2 + 56);
  if ((v5 & 2) != 0)
  {
    int v7 = *(_DWORD *)(a2 + 40);
    *(unsigned char *)(result + 56) |= 2u;
    *(_DWORD *)(result + 40) = v7;
    char v5 = *(unsigned char *)(a2 + 56);
    if ((v5 & 0x10) == 0)
    {
LABEL_14:
      if ((v5 & 4) == 0) {
        return result;
      }
      goto LABEL_15;
    }
  }
  else if ((*(unsigned char *)(a2 + 56) & 0x10) == 0)
  {
    goto LABEL_14;
  }
  int v8 = *(_DWORD *)(a2 + 52);
  *(unsigned char *)(result + 56) |= 0x10u;
  *(_DWORD *)(result + 52) = v8;
  if ((*(unsigned char *)(a2 + 56) & 4) == 0) {
    return result;
  }
LABEL_15:
  int v6 = *(_DWORD *)(a2 + 44);
  *(unsigned char *)(result + 56) |= 4u;
  *(_DWORD *)(result + 44) = v6;
  return result;
}

uint64_t sub_10166D578(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "baseline");
  }
  char v6 = *(unsigned char *)(a1 + 56);
  if ((v6 & 2) != 0)
  {
    PB::TextFormatter::format(this, "conchaOpenResponse", *(float *)(a1 + 40));
    char v6 = *(unsigned char *)(a1 + 56);
  }
  if ((v6 & 4) != 0) {
    PB::TextFormatter::format(this, "filter", *(float *)(a1 + 44));
  }
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v7 + 32))(v7, this, "lastBaseline");
  }
  if ((*(unsigned char *)(a1 + 56) & 8) != 0) {
    PB::TextFormatter::format(this, "location", *(_DWORD *)(a1 + 48));
  }
  uint64_t v8 = *(void *)(a1 + 24);
  if (v8) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v8 + 32))(v8, this, "minimum");
  }
  char v9 = *(unsigned char *)(a1 + 56);
  if ((v9 & 0x10) != 0)
  {
    PB::TextFormatter::format(this, "rho", *(float *)(a1 + 52));
    char v9 = *(unsigned char *)(a1 + 56);
  }
  if (v9) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 32));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10166D6F0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 56) |= 1u;
          unint64_t v20 = *((void *)this + 1);
          if (v20 > 0xFFFFFFFFFFFFFFF7 || v20 + 8 > *((void *)this + 2)) {
            goto LABEL_45;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v20);
          uint64_t v21 = *((void *)this + 1) + 8;
          goto LABEL_55;
        case 2u:
          *(unsigned char *)(a1 + 56) |= 8u;
          unint64_t v23 = *((void *)this + 1);
          unint64_t v24 = *((void *)this + 2);
          uint64_t v25 = *(void *)this;
          if (v23 <= 0xFFFFFFFFFFFFFFF5 && v23 + 10 <= v24)
          {
            char v26 = 0;
            unsigned int v27 = 0;
            uint64_t v28 = 0;
            do
            {
              unint64_t v29 = v23 + 1;
              *((void *)this + 1) = v23 + 1;
              char v30 = *(unsigned char *)(v25 + v23);
              v28 |= (unint64_t)(v30 & 0x7F) << v26;
              if ((v30 & 0x80) == 0) {
                goto LABEL_59;
              }
              v26 += 7;
              unint64_t v23 = v29;
              BOOL v14 = v27++ > 8;
            }
            while (!v14);
LABEL_52:
            LODWORD(v28) = 0;
            goto LABEL_59;
          }
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v28 = 0;
          if (v24 <= v23) {
            unint64_t v24 = *((void *)this + 1);
          }
          break;
        case 3u:
          operator new();
        case 4u:
          operator new();
        case 5u:
          operator new();
        case 6u:
          *(unsigned char *)(a1 + 56) |= 2u;
          unint64_t v31 = *((void *)this + 1);
          if (v31 > 0xFFFFFFFFFFFFFFFBLL || v31 + 4 > *((void *)this + 2)) {
            goto LABEL_45;
          }
          *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v31);
          goto LABEL_54;
        case 7u:
          *(unsigned char *)(a1 + 56) |= 0x10u;
          unint64_t v32 = *((void *)this + 1);
          if (v32 > 0xFFFFFFFFFFFFFFFBLL || v32 + 4 > *((void *)this + 2)) {
            goto LABEL_45;
          }
          *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v32);
          goto LABEL_54;
        case 8u:
          *(unsigned char *)(a1 + 56) |= 4u;
          unint64_t v33 = *((void *)this + 1);
          if (v33 <= 0xFFFFFFFFFFFFFFFBLL && v33 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v33);
LABEL_54:
            uint64_t v21 = *((void *)this + 1) + 4;
LABEL_55:
            *((void *)this + 1) = v21;
          }
          else
          {
LABEL_45:
            *((unsigned char *)this + 24) = 1;
          }
          goto LABEL_60;
        default:
          uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
          if (!result) {
            return result;
          }
          goto LABEL_60;
      }
      while (1)
      {
        if (v24 == v23)
        {
          LODWORD(v28) = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_59;
        }
        unint64_t v36 = v23 + 1;
        char v37 = *(unsigned char *)(v25 + v23);
        *((void *)this + 1) = v36;
        v28 |= (unint64_t)(v37 & 0x7F) << v34;
        if ((v37 & 0x80) == 0) {
          break;
        }
        v34 += 7;
        unint64_t v23 = v36;
        BOOL v14 = v35++ > 8;
        if (v14) {
          goto LABEL_52;
        }
      }
      if (*((unsigned char *)this + 24)) {
        LODWORD(v28) = 0;
      }
LABEL_59:
      *(_DWORD *)(a1 + 48) = v28;
LABEL_60:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10166DBC4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 56);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 32), 1u);
    char v4 = *(unsigned char *)(v3 + 56);
  }
  if ((v4 & 8) != 0) {
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 48), 2u);
  }
  uint64_t v5 = *(const PB::Base **)(v3 + 24);
  if (v5) {
    uint64_t result = PB::Writer::writeSubmessage(this, v5, 3u);
  }
  char v6 = *(const PB::Base **)(v3 + 8);
  if (v6) {
    uint64_t result = PB::Writer::writeSubmessage(this, v6, 4u);
  }
  uint64_t v7 = *(const PB::Base **)(v3 + 16);
  if (v7) {
    uint64_t result = PB::Writer::writeSubmessage(this, v7, 5u);
  }
  char v8 = *(unsigned char *)(v3 + 56);
  if ((v8 & 2) == 0)
  {
    if ((*(unsigned char *)(v3 + 56) & 0x10) == 0) {
      goto LABEL_13;
    }
LABEL_16:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52), 7u);
    if ((*(unsigned char *)(v3 + 56) & 4) == 0) {
      return result;
    }
    goto LABEL_17;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40), 6u);
  char v8 = *(unsigned char *)(v3 + 56);
  if ((v8 & 0x10) != 0) {
    goto LABEL_16;
  }
LABEL_13:
  if ((v8 & 4) == 0) {
    return result;
  }
LABEL_17:
  float v9 = *(float *)(v3 + 44);

  return PB::Writer::write(this, v9, 8u);
}

uint64_t sub_10166DCBC(uint64_t result)
{
  *(_DWORD *)(result + 48) = 0;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)uint64_t result = &off_102333988;
  return result;
}

void sub_10166DCE4(PB::Base *this)
{
  *(void *)this = &off_102333988;
  uint64_t v2 = *((void *)this + 2);
  *((void *)this + 2) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *((void *)this + 1);
  *((void *)this + 1) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }

  PB::Base::~Base(this);
}

void sub_10166DD98(PB::Base *a1)
{
  sub_10166DCE4(a1);

  operator delete();
}

uint64_t sub_10166DDD0(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102333988;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 48) = 0;
  *(void *)(result + 16) = 0;
  __int16 v2 = *(_WORD *)(a2 + 48);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 24);
    *(_WORD *)(result + 48) = 1;
    *(void *)(result + 24) = v4;
    __int16 v3 = 3;
    if ((*(_WORD *)(a2 + 48) & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 2;
  if ((v2 & 2) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 32);
    *(_WORD *)(result + 48) = v3;
    *(_DWORD *)(result + 32) = v5;
  }
LABEL_6:
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  if (*(void *)(a2 + 16)) {
    operator new();
  }
  __int16 v6 = *(_WORD *)(a2 + 48);
  if ((v6 & 0x80) != 0)
  {
    char v8 = *(unsigned char *)(a2 + 41);
    *(_WORD *)(result + 48) |= 0x80u;
    *(unsigned char *)(result + 41) = v8;
    __int16 v6 = *(_WORD *)(a2 + 48);
    if ((v6 & 0x20) == 0)
    {
LABEL_12:
      if ((v6 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_23;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_12;
  }
  char v9 = *(unsigned char *)(a2 + 39);
  *(_WORD *)(result + 48) |= 0x20u;
  *(unsigned char *)(result + 39) = v9;
  __int16 v6 = *(_WORD *)(a2 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_13:
    if ((v6 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_24;
  }
LABEL_23:
  char v10 = *(unsigned char *)(a2 + 36);
  *(_WORD *)(result + 48) |= 4u;
  *(unsigned char *)(result + 36) = v10;
  __int16 v6 = *(_WORD *)(a2 + 48);
  if ((v6 & 8) == 0)
  {
LABEL_14:
    if ((v6 & 0x40) == 0) {
      goto LABEL_15;
    }
    goto LABEL_25;
  }
LABEL_24:
  char v11 = *(unsigned char *)(a2 + 37);
  *(_WORD *)(result + 48) |= 8u;
  *(unsigned char *)(result + 37) = v11;
  __int16 v6 = *(_WORD *)(a2 + 48);
  if ((v6 & 0x40) == 0)
  {
LABEL_15:
    if ((v6 & 0x200) == 0) {
      goto LABEL_16;
    }
    goto LABEL_26;
  }
LABEL_25:
  char v12 = *(unsigned char *)(a2 + 40);
  *(_WORD *)(result + 48) |= 0x40u;
  *(unsigned char *)(result + 40) = v12;
  __int16 v6 = *(_WORD *)(a2 + 48);
  if ((v6 & 0x200) == 0)
  {
LABEL_16:
    if ((v6 & 0x100) == 0) {
      goto LABEL_17;
    }
    goto LABEL_27;
  }
LABEL_26:
  char v13 = *(unsigned char *)(a2 + 43);
  *(_WORD *)(result + 48) |= 0x200u;
  *(unsigned char *)(result + 43) = v13;
  __int16 v6 = *(_WORD *)(a2 + 48);
  if ((v6 & 0x100) == 0)
  {
LABEL_17:
    if ((v6 & 0x10) == 0) {
      goto LABEL_18;
    }
    goto LABEL_28;
  }
LABEL_27:
  char v14 = *(unsigned char *)(a2 + 42);
  *(_WORD *)(result + 48) |= 0x100u;
  *(unsigned char *)(result + 42) = v14;
  __int16 v6 = *(_WORD *)(a2 + 48);
  if ((v6 & 0x10) == 0)
  {
LABEL_18:
    if ((v6 & 0x400) == 0) {
      return result;
    }
    goto LABEL_19;
  }
LABEL_28:
  char v15 = *(unsigned char *)(a2 + 38);
  *(_WORD *)(result + 48) |= 0x10u;
  *(unsigned char *)(result + 38) = v15;
  if ((*(_WORD *)(a2 + 48) & 0x400) == 0) {
    return result;
  }
LABEL_19:
  char v7 = *(unsigned char *)(a2 + 44);
  *(_WORD *)(result + 48) |= 0x400u;
  *(unsigned char *)(result + 44) = v7;
  return result;
}

uint64_t sub_10166E048(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 48);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "above", *(unsigned char *)(a1 + 36));
    __int16 v5 = *(_WORD *)(a1 + 48);
  }
  if ((v5 & 8) != 0) {
    PB::TextFormatter::format(this, "below", *(unsigned char *)(a1 + 37));
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v6 + 32))(v6, this, "current");
  }
  __int16 v7 = *(_WORD *)(a1 + 48);
  if ((v7 & 2) != 0)
  {
    PB::TextFormatter::format(this, "location", *(_DWORD *)(a1 + 32));
    __int16 v7 = *(_WORD *)(a1 + 48);
    if ((v7 & 0x10) == 0)
    {
LABEL_9:
      if ((v7 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_25;
    }
  }
  else if ((v7 & 0x10) == 0)
  {
    goto LABEL_9;
  }
  PB::TextFormatter::format(this, "moving", *(unsigned char *)(a1 + 38));
  __int16 v7 = *(_WORD *)(a1 + 48);
  if ((v7 & 0x20) == 0)
  {
LABEL_10:
    if ((v7 & 0x40) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_25:
  PB::TextFormatter::format(this, "partialin", *(unsigned char *)(a1 + 39));
  if ((*(_WORD *)(a1 + 48) & 0x40) != 0) {
LABEL_11:
  }
    PB::TextFormatter::format(this, "stable", *(unsigned char *)(a1 + 40));
LABEL_12:
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v8 + 32))(v8, this, "threshold");
  }
  __int16 v9 = *(_WORD *)(a1 + 48);
  if (v9)
  {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 24));
    __int16 v9 = *(_WORD *)(a1 + 48);
    if ((v9 & 0x80) == 0)
    {
LABEL_16:
      if ((v9 & 0x100) == 0) {
        goto LABEL_17;
      }
      goto LABEL_29;
    }
  }
  else if ((v9 & 0x80) == 0)
  {
    goto LABEL_16;
  }
  PB::TextFormatter::format(this, "upright", *(unsigned char *)(a1 + 41));
  __int16 v9 = *(_WORD *)(a1 + 48);
  if ((v9 & 0x100) == 0)
  {
LABEL_17:
    if ((v9 & 0x200) == 0) {
      goto LABEL_18;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(this, "upsidedown", *(unsigned char *)(a1 + 42));
  __int16 v9 = *(_WORD *)(a1 + 48);
  if ((v9 & 0x200) == 0)
  {
LABEL_18:
    if ((v9 & 0x400) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_30:
  PB::TextFormatter::format(this, "vertical", *(unsigned char *)(a1 + 43));
  if ((*(_WORD *)(a1 + 48) & 0x400) != 0) {
LABEL_19:
  }
    PB::TextFormatter::format(this, "walking", *(unsigned char *)(a1 + 44));
LABEL_20:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10166E254(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(_WORD *)(a1 + 48) |= 1u;
          unint64_t v20 = *((void *)this + 1);
          if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *((void *)this + 2))
          {
            *(void *)(a1 + 24) = *(void *)(*(void *)this + v20);
            *((void *)this + 1) += 8;
          }
          else
          {
            *((unsigned char *)this + 24) = 1;
          }
          goto LABEL_84;
        case 2u:
          *(_WORD *)(a1 + 48) |= 2u;
          unint64_t v22 = *((void *)this + 1);
          unint64_t v23 = *((void *)this + 2);
          uint64_t v24 = *(void *)this;
          if (v22 <= 0xFFFFFFFFFFFFFFF5 && v22 + 10 <= v23)
          {
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v27 = 0;
            do
            {
              unint64_t v28 = v22 + 1;
              *((void *)this + 1) = v22 + 1;
              char v29 = *(unsigned char *)(v24 + v22);
              v27 |= (unint64_t)(v29 & 0x7F) << v25;
              if ((v29 & 0x80) == 0) {
                goto LABEL_83;
              }
              v25 += 7;
              unint64_t v22 = v28;
              BOOL v14 = v26++ > 8;
            }
            while (!v14);
LABEL_60:
            LODWORD(v27) = 0;
            goto LABEL_83;
          }
          char v66 = 0;
          unsigned int v67 = 0;
          uint64_t v27 = 0;
          if (v23 <= v22) {
            unint64_t v23 = *((void *)this + 1);
          }
          break;
        case 3u:
          operator new();
        case 4u:
          operator new();
        case 5u:
          *(_WORD *)(a1 + 48) |= 0x80u;
          unint64_t v30 = *((void *)this + 1);
          if (v30 >= *((void *)this + 2))
          {
            BOOL v33 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v31 = v30 + 1;
            int v32 = *(unsigned __int8 *)(*(void *)this + v30);
            *((void *)this + 1) = v31;
            BOOL v33 = v32 != 0;
          }
          *(unsigned char *)(a1 + 41) = v33;
          goto LABEL_84;
        case 6u:
          *(_WORD *)(a1 + 48) |= 0x20u;
          unint64_t v34 = *((void *)this + 1);
          if (v34 >= *((void *)this + 2))
          {
            BOOL v37 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v35 = v34 + 1;
            int v36 = *(unsigned __int8 *)(*(void *)this + v34);
            *((void *)this + 1) = v35;
            BOOL v37 = v36 != 0;
          }
          *(unsigned char *)(a1 + 39) = v37;
          goto LABEL_84;
        case 7u:
          *(_WORD *)(a1 + 48) |= 4u;
          unint64_t v38 = *((void *)this + 1);
          if (v38 >= *((void *)this + 2))
          {
            BOOL v41 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v39 = v38 + 1;
            int v40 = *(unsigned __int8 *)(*(void *)this + v38);
            *((void *)this + 1) = v39;
            BOOL v41 = v40 != 0;
          }
          *(unsigned char *)(a1 + 36) = v41;
          goto LABEL_84;
        case 8u:
          *(_WORD *)(a1 + 48) |= 8u;
          unint64_t v42 = *((void *)this + 1);
          if (v42 >= *((void *)this + 2))
          {
            BOOL v45 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v43 = v42 + 1;
            int v44 = *(unsigned __int8 *)(*(void *)this + v42);
            *((void *)this + 1) = v43;
            BOOL v45 = v44 != 0;
          }
          *(unsigned char *)(a1 + 37) = v45;
          goto LABEL_84;
        case 9u:
          *(_WORD *)(a1 + 48) |= 0x40u;
          unint64_t v46 = *((void *)this + 1);
          if (v46 >= *((void *)this + 2))
          {
            BOOL v49 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v47 = v46 + 1;
            int v48 = *(unsigned __int8 *)(*(void *)this + v46);
            *((void *)this + 1) = v47;
            BOOL v49 = v48 != 0;
          }
          *(unsigned char *)(a1 + 40) = v49;
          goto LABEL_84;
        case 0xAu:
          *(_WORD *)(a1 + 48) |= 0x200u;
          unint64_t v50 = *((void *)this + 1);
          if (v50 >= *((void *)this + 2))
          {
            BOOL v53 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v51 = v50 + 1;
            int v52 = *(unsigned __int8 *)(*(void *)this + v50);
            *((void *)this + 1) = v51;
            BOOL v53 = v52 != 0;
          }
          *(unsigned char *)(a1 + 43) = v53;
          goto LABEL_84;
        case 0xBu:
          *(_WORD *)(a1 + 48) |= 0x100u;
          unint64_t v54 = *((void *)this + 1);
          if (v54 >= *((void *)this + 2))
          {
            BOOL v57 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v55 = v54 + 1;
            int v56 = *(unsigned __int8 *)(*(void *)this + v54);
            *((void *)this + 1) = v55;
            BOOL v57 = v56 != 0;
          }
          *(unsigned char *)(a1 + 42) = v57;
          goto LABEL_84;
        case 0xCu:
          *(_WORD *)(a1 + 48) |= 0x10u;
          unint64_t v58 = *((void *)this + 1);
          if (v58 >= *((void *)this + 2))
          {
            BOOL v61 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v59 = v58 + 1;
            int v60 = *(unsigned __int8 *)(*(void *)this + v58);
            *((void *)this + 1) = v59;
            BOOL v61 = v60 != 0;
          }
          *(unsigned char *)(a1 + 38) = v61;
          goto LABEL_84;
        case 0xDu:
          *(_WORD *)(a1 + 48) |= 0x400u;
          unint64_t v62 = *((void *)this + 1);
          if (v62 >= *((void *)this + 2))
          {
            BOOL v65 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v63 = v62 + 1;
            int v64 = *(unsigned __int8 *)(*(void *)this + v62);
            *((void *)this + 1) = v63;
            BOOL v65 = v64 != 0;
          }
          *(unsigned char *)(a1 + 44) = v65;
          goto LABEL_84;
        default:
          uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
          if (!result) {
            return result;
          }
          goto LABEL_84;
      }
      while (1)
      {
        if (v23 == v22)
        {
          LODWORD(v27) = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_83;
        }
        unint64_t v68 = v22 + 1;
        char v69 = *(unsigned char *)(v24 + v22);
        *((void *)this + 1) = v68;
        v27 |= (unint64_t)(v69 & 0x7F) << v66;
        if ((v69 & 0x80) == 0) {
          break;
        }
        v66 += 7;
        unint64_t v22 = v68;
        BOOL v14 = v67++ > 8;
        if (v14) {
          goto LABEL_60;
        }
      }
      if (*((unsigned char *)this + 24)) {
        LODWORD(v27) = 0;
      }
LABEL_83:
      *(_DWORD *)(a1 + 32) = v27;
LABEL_84:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10166E898(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 48);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 24), 1u);
    __int16 v4 = *(_WORD *)(v3 + 48);
  }
  if ((v4 & 2) != 0) {
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 32), 2u);
  }
  __int16 v5 = *(const PB::Base **)(v3 + 8);
  if (v5) {
    uint64_t result = PB::Writer::writeSubmessage(this, v5, 3u);
  }
  uint64_t v6 = *(const PB::Base **)(v3 + 16);
  if (v6) {
    uint64_t result = PB::Writer::writeSubmessage(this, v6, 4u);
  }
  __int16 v7 = *(_WORD *)(v3 + 48);
  if ((v7 & 0x80) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 41), 5u);
    __int16 v7 = *(_WORD *)(v3 + 48);
    if ((v7 & 0x20) == 0)
    {
LABEL_11:
      if ((v7 & 4) == 0) {
        goto LABEL_12;
      }
      goto LABEL_21;
    }
  }
  else if ((v7 & 0x20) == 0)
  {
    goto LABEL_11;
  }
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 39), 6u);
  __int16 v7 = *(_WORD *)(v3 + 48);
  if ((v7 & 4) == 0)
  {
LABEL_12:
    if ((v7 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 36), 7u);
  __int16 v7 = *(_WORD *)(v3 + 48);
  if ((v7 & 8) == 0)
  {
LABEL_13:
    if ((v7 & 0x40) == 0) {
      goto LABEL_14;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 37), 8u);
  __int16 v7 = *(_WORD *)(v3 + 48);
  if ((v7 & 0x40) == 0)
  {
LABEL_14:
    if ((v7 & 0x200) == 0) {
      goto LABEL_15;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 40), 9u);
  __int16 v7 = *(_WORD *)(v3 + 48);
  if ((v7 & 0x200) == 0)
  {
LABEL_15:
    if ((v7 & 0x100) == 0) {
      goto LABEL_16;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 43), 0xAu);
  __int16 v7 = *(_WORD *)(v3 + 48);
  if ((v7 & 0x100) == 0)
  {
LABEL_16:
    if ((v7 & 0x10) == 0) {
      goto LABEL_17;
    }
LABEL_26:
    uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 38), 0xCu);
    if ((*(_WORD *)(v3 + 48) & 0x400) == 0) {
      return result;
    }
    goto LABEL_27;
  }
LABEL_25:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 42), 0xBu);
  __int16 v7 = *(_WORD *)(v3 + 48);
  if ((v7 & 0x10) != 0) {
    goto LABEL_26;
  }
LABEL_17:
  if ((v7 & 0x400) == 0) {
    return result;
  }
LABEL_27:
  char v8 = *(unsigned char *)(v3 + 44);

  return PB::Writer::write(this, v8, 0xDu);
}

uint64_t sub_10166EA24(uint64_t result)
{
  *(_DWORD *)(result + 44) = 0;
  *(void *)uint64_t result = &off_1023339C0;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  return result;
}

void sub_10166EA4C(PB::Base *this)
{
  *(void *)this = &off_1023339C0;
  uint64_t v2 = *((void *)this + 3);
  *((void *)this + 3) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *((void *)this + 2);
  *((void *)this + 2) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  uint64_t v4 = *((void *)this + 1);
  *((void *)this + 1) = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }

  PB::Base::~Base(this);
}

void sub_10166EB30(PB::Base *a1)
{
  sub_10166EA4C(a1);

  operator delete();
}

uint64_t sub_10166EB68(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_1023339C0;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 44) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  if (*(unsigned char *)(a2 + 44))
  {
    uint64_t v3 = *(void *)(a2 + 32);
    *(unsigned char *)(result + 44) = 1;
    *(void *)(result + 32) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 44) & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 44) & 2) != 0)
  {
LABEL_5:
    int v4 = *(_DWORD *)(a2 + 40);
    *(unsigned char *)(result + 44) = v2;
    *(_DWORD *)(result + 40) = v4;
  }
LABEL_6:
  if (*(void *)(a2 + 24)) {
    operator new();
  }
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  if (*(void *)(a2 + 16)) {
    operator new();
  }
  return result;
}

uint64_t sub_10166ED1C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "current");
  }
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v6 + 32))(v6, this, "last");
  }
  if ((*(unsigned char *)(a1 + 44) & 2) != 0) {
    PB::TextFormatter::format(this, "location", *(_DWORD *)(a1 + 40));
  }
  uint64_t v7 = *(void *)(a1 + 24);
  if (v7) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v7 + 32))(v7, this, "minimum");
  }
  if (*(unsigned char *)(a1 + 44)) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 32));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10166EE40(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 44) |= 1u;
          unint64_t v20 = *((void *)this + 1);
          if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *((void *)this + 2))
          {
            *(void *)(a1 + 32) = *(void *)(*(void *)this + v20);
            *((void *)this + 1) += 8;
          }
          else
          {
            *((unsigned char *)this + 24) = 1;
          }
          goto LABEL_49;
        case 2u:
          *(unsigned char *)(a1 + 44) |= 2u;
          unint64_t v22 = *((void *)this + 1);
          unint64_t v23 = *((void *)this + 2);
          uint64_t v24 = *(void *)this;
          if (v22 <= 0xFFFFFFFFFFFFFFF5 && v22 + 10 <= v23)
          {
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v27 = 0;
            do
            {
              unint64_t v28 = v22 + 1;
              *((void *)this + 1) = v22 + 1;
              char v29 = *(unsigned char *)(v24 + v22);
              v27 |= (unint64_t)(v29 & 0x7F) << v25;
              if ((v29 & 0x80) == 0) {
                goto LABEL_48;
              }
              v25 += 7;
              unint64_t v22 = v28;
              BOOL v14 = v26++ > 8;
            }
            while (!v14);
LABEL_43:
            LODWORD(v27) = 0;
            goto LABEL_48;
          }
          char v30 = 0;
          unsigned int v31 = 0;
          uint64_t v27 = 0;
          if (v23 <= v22) {
            unint64_t v23 = *((void *)this + 1);
          }
          break;
        case 3u:
          operator new();
        case 4u:
          operator new();
        case 5u:
          operator new();
        default:
          uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
          if (!result) {
            return result;
          }
          goto LABEL_49;
      }
      while (1)
      {
        if (v23 == v22)
        {
          LODWORD(v27) = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_48;
        }
        unint64_t v32 = v22 + 1;
        char v33 = *(unsigned char *)(v24 + v22);
        *((void *)this + 1) = v32;
        v27 |= (unint64_t)(v33 & 0x7F) << v30;
        if ((v33 & 0x80) == 0) {
          break;
        }
        v30 += 7;
        unint64_t v22 = v32;
        BOOL v14 = v31++ > 8;
        if (v14) {
          goto LABEL_43;
        }
      }
      if (*((unsigned char *)this + 24)) {
        LODWORD(v27) = 0;
      }
LABEL_48:
      *(_DWORD *)(a1 + 40) = v27;
LABEL_49:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10166F258(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 44);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 32), 1u);
    char v4 = *(unsigned char *)(v3 + 44);
  }
  if ((v4 & 2) != 0) {
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 40), 2u);
  }
  uint64_t v5 = *(const PB::Base **)(v3 + 24);
  if (v5) {
    uint64_t result = PB::Writer::writeSubmessage(this, v5, 3u);
  }
  uint64_t v6 = *(const PB::Base **)(v3 + 8);
  if (v6) {
    uint64_t result = PB::Writer::writeSubmessage(this, v6, 4u);
  }
  uint64_t v7 = *(const PB::Base **)(v3 + 16);
  if (v7)
  {
    return PB::Writer::writeSubmessage(this, v7, 5u);
  }
  return result;
}

double sub_10166F300(uint64_t a1)
{
  *(void *)a1 = &off_1023339F8;
  *(_DWORD *)(a1 + 92) = 0;
  *(_DWORD *)(a1 + 108) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  return result;
}

void sub_10166F33C(PB::Base *this)
{
  *(void *)this = &off_1023339F8;
  uint64_t v2 = *((void *)this + 8);
  *((void *)this + 8) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *((void *)this + 7);
  *((void *)this + 7) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  char v4 = (void *)*((void *)this + 4);
  if (v4)
  {
    *((void *)this + 5) = v4;
    operator delete(v4);
  }
  uint64_t v5 = (void *)*((void *)this + 1);
  if (v5)
  {
    *((void *)this + 2) = v5;
    operator delete(v5);
  }

  PB::Base::~Base(this);
}

void sub_10166F410(PB::Base *a1)
{
  sub_10166F33C(a1);

  operator delete();
}

uint64_t sub_10166F448(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_1023339F8;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_DWORD *)(a1 + 92) = 0;
  *(_DWORD *)(a1 + 108) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  if (*(unsigned char *)(a2 + 108))
  {
    uint64_t v5 = *(void *)(a2 + 72);
    *(unsigned char *)(a1 + 108) = 1;
    *(void *)(a1 + 72) = v5;
    char v4 = 9;
    if ((*(unsigned char *)(a2 + 108) & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v4 = 8;
  if ((*(unsigned char *)(a2 + 108) & 8) != 0)
  {
LABEL_5:
    int v6 = *(_DWORD *)(a2 + 88);
    *(unsigned char *)(a1 + 108) = v4;
    *(_DWORD *)(a1 + 88) = v6;
  }
LABEL_6:
  if (*(void *)(a2 + 56)) {
    operator new();
  }
  if (*(void *)(a2 + 64)) {
    operator new();
  }
  if (a1 != a2) {
    sub_1000FB43C((char *)(a1 + 8), *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  char v7 = *(unsigned char *)(a2 + 108);
  if ((v7 & 0x40) != 0)
  {
    int v13 = *(_DWORD *)(a2 + 100);
    *(unsigned char *)(a1 + 108) |= 0x40u;
    *(_DWORD *)(a1 + 100) = v13;
    char v7 = *(unsigned char *)(a2 + 108);
    if ((v7 & 0x20) == 0)
    {
LABEL_14:
      if ((v7 & 0x80) == 0) {
        goto LABEL_15;
      }
      goto LABEL_26;
    }
  }
  else if ((*(unsigned char *)(a2 + 108) & 0x20) == 0)
  {
    goto LABEL_14;
  }
  int v14 = *(_DWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 108) |= 0x20u;
  *(_DWORD *)(a1 + 96) = v14;
  char v7 = *(unsigned char *)(a2 + 108);
  if ((v7 & 0x80) == 0)
  {
LABEL_15:
    if ((v7 & 0x10) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_26:
  char v15 = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 108) |= 0x80u;
  *(unsigned char *)(a1 + 104) = v15;
  if ((*(unsigned char *)(a2 + 108) & 0x10) != 0)
  {
LABEL_16:
    int v8 = *(_DWORD *)(a2 + 92);
    *(unsigned char *)(a1 + 108) |= 0x10u;
    *(_DWORD *)(a1 + 92) = v8;
  }
LABEL_17:
  if (a1 != a2) {
    sub_1000FB43C((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
  }
  char v9 = *(unsigned char *)(a2 + 108);
  if ((v9 & 2) != 0)
  {
    int v10 = *(_DWORD *)(a2 + 80);
    *(unsigned char *)(a1 + 108) |= 2u;
    *(_DWORD *)(a1 + 80) = v10;
    char v9 = *(unsigned char *)(a2 + 108);
  }
  if ((v9 & 4) != 0)
  {
    int v11 = *(_DWORD *)(a2 + 84);
    *(unsigned char *)(a1 + 108) |= 4u;
    *(_DWORD *)(a1 + 84) = v11;
  }
  return a1;
}

uint64_t sub_10166F6A0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(float **)(a1 + 8);
  int v6 = *(float **)(a1 + 16);
  while (v5 != v6)
  {
    float v7 = *v5++;
    PB::TextFormatter::format(this, "acceleration", v7);
  }
  if ((*(unsigned char *)(a1 + 108) & 2) != 0) {
    PB::TextFormatter::format(this, "correlation", *(float *)(a1 + 80));
  }
  uint64_t v8 = *(void *)(a1 + 56);
  if (v8) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v8 + 32))(v8, this, "current");
  }
  if ((*(unsigned char *)(a1 + 108) & 4) != 0) {
    PB::TextFormatter::format(this, "deltatip", *(float *)(a1 + 84));
  }
  uint64_t v9 = *(void *)(a1 + 64);
  if (v9) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v9 + 32))(v9, this, "instability");
  }
  char v10 = *(unsigned char *)(a1 + 108);
  if ((v10 & 8) != 0)
  {
    PB::TextFormatter::format(this, "location", *(_DWORD *)(a1 + 88));
    char v10 = *(unsigned char *)(a1 + 108);
    if ((v10 & 0x10) == 0)
    {
LABEL_13:
      if ((v10 & 0x20) == 0) {
        goto LABEL_14;
      }
      goto LABEL_24;
    }
  }
  else if ((*(unsigned char *)(a1 + 108) & 0x10) == 0)
  {
    goto LABEL_13;
  }
  PB::TextFormatter::format(this, "state", *(_DWORD *)(a1 + 92));
  char v10 = *(unsigned char *)(a1 + 108);
  if ((v10 & 0x20) == 0)
  {
LABEL_14:
    if ((v10 & 1) == 0) {
      goto LABEL_15;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "tilt", *(float *)(a1 + 96));
  char v10 = *(unsigned char *)(a1 + 108);
  if ((v10 & 1) == 0)
  {
LABEL_15:
    if ((v10 & 0x40) == 0) {
      goto LABEL_16;
    }
LABEL_26:
    PB::TextFormatter::format(this, "tip", *(float *)(a1 + 100));
    if ((*(unsigned char *)(a1 + 108) & 0x80) == 0) {
      goto LABEL_17;
    }
    goto LABEL_27;
  }
LABEL_25:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 72));
  char v10 = *(unsigned char *)(a1 + 108);
  if ((v10 & 0x40) != 0) {
    goto LABEL_26;
  }
LABEL_16:
  if ((v10 & 0x80) == 0) {
    goto LABEL_17;
  }
LABEL_27:
  PB::TextFormatter::format(this, "upright", *(unsigned char *)(a1 + 104));
LABEL_17:
  int v11 = *(float **)(a1 + 32);
  unint64_t v12 = *(float **)(a1 + 40);
  while (v11 != v12)
  {
    float v13 = *v11++;
    PB::TextFormatter::format(this, "variance", v13);
  }

  return PB::TextFormatter::endObject(this);
}

BOOL sub_10166F8B4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v8 = (void **)(a1 + 32);
    uint64_t v9 = a1 + 48;
    char v10 = (void **)(a1 + 8);
    uint64_t v11 = a1 + 24;
    while (1)
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v13 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v17 = *(unsigned char *)(v12 + v2);
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          break;
        }
        v13 += 7;
        unint64_t v2 = v16;
        BOOL v18 = v14++ > 8;
        if (v18) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v24 = v15 & 7;
      if (v24 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v15 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 108) |= 1u;
          unint64_t v25 = *((void *)this + 1);
          if (v25 > 0xFFFFFFFFFFFFFFF7 || v25 + 8 > *((void *)this + 2)) {
            goto LABEL_168;
          }
          *(void *)(a1 + 72) = *(void *)(*(void *)this + v25);
          uint64_t v26 = *((void *)this + 1) + 8;
          goto LABEL_171;
        case 2u:
          *(unsigned char *)(a1 + 108) |= 8u;
          unint64_t v27 = *((void *)this + 1);
          unint64_t v28 = *((void *)this + 2);
          uint64_t v29 = *(void *)this;
          if (v27 <= 0xFFFFFFFFFFFFFFF5 && v27 + 10 <= v28)
          {
            char v30 = 0;
            unsigned int v31 = 0;
            uint64_t v32 = 0;
            do
            {
              unint64_t v33 = v27 + 1;
              *((void *)this + 1) = v27 + 1;
              char v34 = *(unsigned char *)(v29 + v27);
              v32 |= (unint64_t)(v34 & 0x7F) << v30;
              if ((v34 & 0x80) == 0) {
                goto LABEL_148;
              }
              v30 += 7;
              unint64_t v27 = v33;
              BOOL v18 = v31++ > 8;
            }
            while (!v18);
LABEL_113:
            LODWORD(v32) = 0;
            goto LABEL_148;
          }
          char v79 = 0;
          unsigned int v80 = 0;
          uint64_t v32 = 0;
          if (v28 <= v27) {
            unint64_t v28 = *((void *)this + 1);
          }
          while (2)
          {
            if (v28 == v27)
            {
              LODWORD(v32) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v81 = v27 + 1;
              char v82 = *(unsigned char *)(v29 + v27);
              *((void *)this + 1) = v81;
              v32 |= (unint64_t)(v82 & 0x7F) << v79;
              if (v82 < 0)
              {
                v79 += 7;
                unint64_t v27 = v81;
                BOOL v18 = v80++ > 8;
                if (v18) {
                  goto LABEL_113;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v32) = 0;
              }
            }
            break;
          }
LABEL_148:
          *(_DWORD *)(a1 + 88) = v32;
          goto LABEL_172;
        case 3u:
          operator new();
        case 4u:
          operator new();
        case 5u:
          if (v24 != 2)
          {
            uint64_t v84 = *(char **)(a1 + 16);
            unint64_t v83 = *(void *)(a1 + 24);
            if ((unint64_t)v84 >= v83)
            {
              unint64_t v92 = (char *)*v10;
              uint64_t v93 = (v84 - (unsigned char *)*v10) >> 2;
              unint64_t v94 = v93 + 1;
              if ((unint64_t)(v93 + 1) >> 62) {
LABEL_183:
              }
                sub_1001D7FD4();
              uint64_t v95 = v83 - (void)v92;
              if (v95 >> 1 > v94) {
                unint64_t v94 = v95 >> 1;
              }
              if ((unint64_t)v95 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v96 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v96 = v94;
              }
              if (v96)
              {
                char v97 = (char *)sub_10017EA34(v11, v96);
                unint64_t v92 = *(char **)(a1 + 8);
                uint64_t v84 = *(char **)(a1 + 16);
              }
              else
              {
                char v97 = 0;
              }
              unint64_t v104 = &v97[4 * v93];
              *(_DWORD *)unint64_t v104 = 0;
              unint64_t v85 = v104 + 4;
              while (v84 != v92)
              {
                int v105 = *((_DWORD *)v84 - 1);
                v84 -= 4;
                *((_DWORD *)v104 - 1) = v105;
                v104 -= 4;
              }
              *(void *)(a1 + 8) = v104;
              *(void *)(a1 + 16) = v85;
              *(void *)(a1 + 24) = &v97[4 * v96];
              if (v92) {
                operator delete(v92);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v84 = 0;
              unint64_t v85 = v84 + 4;
            }
            *(void *)(a1 + 16) = v85;
            goto LABEL_166;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v35 = *((void *)this + 1);
          unint64_t v36 = *((void *)this + 2);
          while (v35 < v36 && !*((unsigned char *)this + 24))
          {
            unint64_t v38 = *(char **)(a1 + 16);
            unint64_t v37 = *(void *)(a1 + 24);
            if ((unint64_t)v38 >= v37)
            {
              int v40 = (char *)*v10;
              uint64_t v41 = (v38 - (unsigned char *)*v10) >> 2;
              unint64_t v42 = v41 + 1;
              if ((unint64_t)(v41 + 1) >> 62) {
                goto LABEL_183;
              }
              uint64_t v43 = v37 - (void)v40;
              if (v43 >> 1 > v42) {
                unint64_t v42 = v43 >> 1;
              }
              if ((unint64_t)v43 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v44 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v44 = v42;
              }
              if (v44)
              {
                BOOL v45 = (char *)sub_10017EA34(v11, v44);
                int v40 = *(char **)(a1 + 8);
                unint64_t v38 = *(char **)(a1 + 16);
              }
              else
              {
                BOOL v45 = 0;
              }
              unint64_t v46 = &v45[4 * v41];
              *(_DWORD *)unint64_t v46 = 0;
              unint64_t v39 = v46 + 4;
              while (v38 != v40)
              {
                int v47 = *((_DWORD *)v38 - 1);
                v38 -= 4;
                *((_DWORD *)v46 - 1) = v47;
                v46 -= 4;
              }
              *(void *)(a1 + 8) = v46;
              *(void *)(a1 + 16) = v39;
              *(void *)(a1 + 24) = &v45[4 * v44];
              if (v40) {
                operator delete(v40);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v38 = 0;
              unint64_t v39 = v38 + 4;
            }
            *(void *)(a1 + 16) = v39;
            unint64_t v48 = *((void *)this + 1);
            if (v48 > 0xFFFFFFFFFFFFFFFBLL || v48 + 4 > *((void *)this + 2)) {
              goto LABEL_127;
            }
            *(v39 - 1) = *(_DWORD *)(*(void *)this + v48);
            unint64_t v36 = *((void *)this + 2);
            unint64_t v35 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v35;
          }
          goto LABEL_37;
        case 6u:
          *(unsigned char *)(a1 + 108) |= 0x40u;
          unint64_t v49 = *((void *)this + 1);
          if (v49 > 0xFFFFFFFFFFFFFFFBLL || v49 + 4 > *((void *)this + 2)) {
            goto LABEL_168;
          }
          *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v49);
          goto LABEL_170;
        case 7u:
          *(unsigned char *)(a1 + 108) |= 0x20u;
          unint64_t v50 = *((void *)this + 1);
          if (v50 > 0xFFFFFFFFFFFFFFFBLL || v50 + 4 > *((void *)this + 2)) {
            goto LABEL_168;
          }
          *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v50);
          goto LABEL_170;
        case 8u:
          *(unsigned char *)(a1 + 108) |= 0x80u;
          unint64_t v51 = *((void *)this + 1);
          if (v51 >= *((void *)this + 2))
          {
            BOOL v54 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v52 = v51 + 1;
            int v53 = *(unsigned __int8 *)(*(void *)this + v51);
            *((void *)this + 1) = v52;
            BOOL v54 = v53 != 0;
          }
          *(unsigned char *)(a1 + 104) = v54;
          goto LABEL_172;
        case 9u:
          *(unsigned char *)(a1 + 108) |= 0x10u;
          unint64_t v55 = *((void *)this + 1);
          unint64_t v56 = *((void *)this + 2);
          uint64_t v57 = *(void *)this;
          if (v55 <= 0xFFFFFFFFFFFFFFF5 && v55 + 10 <= v56)
          {
            char v58 = 0;
            unsigned int v59 = 0;
            uint64_t v60 = 0;
            do
            {
              unint64_t v61 = v55 + 1;
              *((void *)this + 1) = v55 + 1;
              char v62 = *(unsigned char *)(v57 + v55);
              v60 |= (unint64_t)(v62 & 0x7F) << v58;
              if ((v62 & 0x80) == 0) {
                goto LABEL_151;
              }
              v58 += 7;
              unint64_t v55 = v61;
              BOOL v18 = v59++ > 8;
            }
            while (!v18);
LABEL_124:
            LODWORD(v60) = 0;
            goto LABEL_151;
          }
          char v86 = 0;
          unsigned int v87 = 0;
          uint64_t v60 = 0;
          if (v56 <= v55) {
            unint64_t v56 = *((void *)this + 1);
          }
          while (2)
          {
            if (v56 == v55)
            {
              LODWORD(v60) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v88 = v55 + 1;
              char v89 = *(unsigned char *)(v57 + v55);
              *((void *)this + 1) = v88;
              v60 |= (unint64_t)(v89 & 0x7F) << v86;
              if (v89 < 0)
              {
                v86 += 7;
                unint64_t v55 = v88;
                BOOL v18 = v87++ > 8;
                if (v18) {
                  goto LABEL_124;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v60) = 0;
              }
            }
            break;
          }
LABEL_151:
          *(_DWORD *)(a1 + 92) = v60;
          goto LABEL_172;
        case 0xAu:
          if (v24 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v63 = *((void *)this + 1);
            unint64_t v64 = *((void *)this + 2);
            while (v63 < v64 && !*((unsigned char *)this + 24))
            {
              char v66 = *(char **)(a1 + 40);
              unint64_t v65 = *(void *)(a1 + 48);
              if ((unint64_t)v66 >= v65)
              {
                unint64_t v68 = (char *)*v8;
                uint64_t v69 = (v66 - (unsigned char *)*v8) >> 2;
                unint64_t v70 = v69 + 1;
                if ((unint64_t)(v69 + 1) >> 62) {
                  goto LABEL_182;
                }
                uint64_t v71 = v65 - (void)v68;
                if (v71 >> 1 > v70) {
                  unint64_t v70 = v71 >> 1;
                }
                if ((unint64_t)v71 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v72 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v72 = v70;
                }
                if (v72)
                {
                  unint64_t v73 = (char *)sub_10017EA34(v9, v72);
                  unint64_t v68 = *(char **)(a1 + 32);
                  char v66 = *(char **)(a1 + 40);
                }
                else
                {
                  unint64_t v73 = 0;
                }
                uint64_t v74 = &v73[4 * v69];
                *(_DWORD *)uint64_t v74 = 0;
                unsigned int v67 = v74 + 4;
                while (v66 != v68)
                {
                  int v75 = *((_DWORD *)v66 - 1);
                  v66 -= 4;
                  *((_DWORD *)v74 - 1) = v75;
                  v74 -= 4;
                }
                *(void *)(a1 + 32) = v74;
                *(void *)(a1 + 40) = v67;
                *(void *)(a1 + 48) = &v73[4 * v72];
                if (v68) {
                  operator delete(v68);
                }
              }
              else
              {
                *(_DWORD *)char v66 = 0;
                unsigned int v67 = v66 + 4;
              }
              *(void *)(a1 + 40) = v67;
              unint64_t v76 = *((void *)this + 1);
              if (v76 > 0xFFFFFFFFFFFFFFFBLL || v76 + 4 > *((void *)this + 2))
              {
LABEL_127:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v67 - 1) = *(_DWORD *)(*(void *)this + v76);
              unint64_t v64 = *((void *)this + 2);
              unint64_t v63 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v63;
            }
LABEL_37:
            PB::Reader::recallMark();
          }
          else
          {
            unint64_t v91 = *(char **)(a1 + 40);
            unint64_t v90 = *(void *)(a1 + 48);
            if ((unint64_t)v91 >= v90)
            {
              unsigned int v98 = (char *)*v8;
              uint64_t v99 = (v91 - (unsigned char *)*v8) >> 2;
              unint64_t v100 = v99 + 1;
              if ((unint64_t)(v99 + 1) >> 62) {
LABEL_182:
              }
                sub_1001D7FD4();
              uint64_t v101 = v90 - (void)v98;
              if (v101 >> 1 > v100) {
                unint64_t v100 = v101 >> 1;
              }
              if ((unint64_t)v101 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v102 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v102 = v100;
              }
              if (v102)
              {
                unint64_t v103 = (char *)sub_10017EA34(v9, v102);
                unsigned int v98 = *(char **)(a1 + 32);
                unint64_t v91 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v103 = 0;
              }
              unint64_t v106 = &v103[4 * v99];
              *(_DWORD *)unint64_t v106 = 0;
              unint64_t v85 = v106 + 4;
              while (v91 != v98)
              {
                int v107 = *((_DWORD *)v91 - 1);
                v91 -= 4;
                *((_DWORD *)v106 - 1) = v107;
                v106 -= 4;
              }
              *(void *)(a1 + 32) = v106;
              *(void *)(a1 + 40) = v85;
              *(void *)(a1 + 48) = &v103[4 * v102];
              if (v98) {
                operator delete(v98);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v91 = 0;
              unint64_t v85 = v91 + 4;
            }
            *(void *)(a1 + 40) = v85;
LABEL_166:
            unint64_t v108 = *((void *)this + 1);
            if (v108 <= 0xFFFFFFFFFFFFFFFBLL && v108 + 4 <= *((void *)this + 2))
            {
              *(v85 - 1) = *(_DWORD *)(*(void *)this + v108);
LABEL_170:
              uint64_t v26 = *((void *)this + 1) + 4;
LABEL_171:
              *((void *)this + 1) = v26;
            }
            else
            {
LABEL_168:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_172:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        case 0xBu:
          *(unsigned char *)(a1 + 108) |= 2u;
          unint64_t v77 = *((void *)this + 1);
          if (v77 > 0xFFFFFFFFFFFFFFFBLL || v77 + 4 > *((void *)this + 2)) {
            goto LABEL_168;
          }
          *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v77);
          goto LABEL_170;
        case 0xCu:
          *(unsigned char *)(a1 + 108) |= 4u;
          unint64_t v78 = *((void *)this + 1);
          if (v78 > 0xFFFFFFFFFFFFFFFBLL || v78 + 4 > *((void *)this + 2)) {
            goto LABEL_168;
          }
          *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v78);
          goto LABEL_170;
        default:
          if ((PB::Reader::skip(this, v15 >> 3, v24, 0) & 1) == 0) {
            return 0;
          }
          goto LABEL_172;
      }
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v15 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v21 = v2 + 1;
      char v22 = *(unsigned char *)(v12 + v2);
      *((void *)this + 1) = v21;
      v15 |= (unint64_t)(v22 & 0x7F) << v19;
      if ((v22 & 0x80) == 0) {
        goto LABEL_21;
      }
      v19 += 7;
      unint64_t v2 = v21;
      if (v20++ >= 9)
      {
LABEL_20:
        unint64_t v15 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101670250(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 108);
  if (v4)
  {
    double result = PB::Writer::write(this, *(double *)(result + 72), 1u);
    char v4 = *(unsigned char *)(v3 + 108);
  }
  if ((v4 & 8) != 0) {
    double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 88), 2u);
  }
  uint64_t v5 = *(const PB::Base **)(v3 + 56);
  if (v5) {
    double result = PB::Writer::writeSubmessage(this, v5, 3u);
  }
  int v6 = *(const PB::Base **)(v3 + 64);
  if (v6) {
    double result = PB::Writer::writeSubmessage(this, v6, 4u);
  }
  float v7 = *(float **)(v3 + 8);
  uint64_t v8 = *(float **)(v3 + 16);
  while (v7 != v8)
  {
    float v9 = *v7++;
    double result = PB::Writer::write(this, v9, 5u);
  }
  char v10 = *(unsigned char *)(v3 + 108);
  if ((v10 & 0x40) != 0)
  {
    double result = PB::Writer::write(this, *(float *)(v3 + 100), 6u);
    char v10 = *(unsigned char *)(v3 + 108);
    if ((v10 & 0x20) == 0)
    {
LABEL_14:
      if ((v10 & 0x80) == 0) {
        goto LABEL_15;
      }
LABEL_26:
      double result = PB::Writer::write(this, *(unsigned char *)(v3 + 104), 8u);
      if ((*(unsigned char *)(v3 + 108) & 0x10) == 0) {
        goto LABEL_17;
      }
      goto LABEL_16;
    }
  }
  else if ((*(unsigned char *)(v3 + 108) & 0x20) == 0)
  {
    goto LABEL_14;
  }
  double result = PB::Writer::write(this, *(float *)(v3 + 96), 7u);
  char v10 = *(unsigned char *)(v3 + 108);
  if (v10 < 0) {
    goto LABEL_26;
  }
LABEL_15:
  if ((v10 & 0x10) != 0) {
LABEL_16:
  }
    double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 92), 9u);
LABEL_17:
  uint64_t v11 = *(float **)(v3 + 32);
  uint64_t v12 = *(float **)(v3 + 40);
  while (v11 != v12)
  {
    float v13 = *v11++;
    double result = PB::Writer::write(this, v13, 0xAu);
  }
  char v14 = *(unsigned char *)(v3 + 108);
  if ((v14 & 2) != 0)
  {
    double result = PB::Writer::write(this, *(float *)(v3 + 80), 0xBu);
    char v14 = *(unsigned char *)(v3 + 108);
  }
  if ((v14 & 4) != 0)
  {
    float v15 = *(float *)(v3 + 84);
    return PB::Writer::write(this, v15, 0xCu);
  }
  return result;
}

uint64_t sub_1016703D0(uint64_t result)
{
  *(_DWORD *)(result + 28) = 0;
  *(_DWORD *)(result + 32) = 0;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)double result = &off_102333A30;
  return result;
}

void sub_1016703F8(PB::Base *this)
{
  *(void *)this = &off_102333A30;
  uint64_t v2 = *((void *)this + 2);
  *((void *)this + 2) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *((void *)this + 1);
  *((void *)this + 1) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }

  PB::Base::~Base(this);
}

void sub_1016704AC(PB::Base *a1)
{
  sub_1016703F8(a1);

  operator delete();
}

uint64_t sub_1016704E4(uint64_t result, uint64_t a2)
{
  *(void *)double result = &off_102333A30;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 28) = 0;
  *(_DWORD *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  if (*(unsigned char *)(a2 + 32))
  {
    int v3 = *(_DWORD *)(a2 + 24);
    *(unsigned char *)(result + 32) = 1;
    *(_DWORD *)(result + 24) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 32) & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 32) & 2) != 0)
  {
LABEL_5:
    int v4 = *(_DWORD *)(a2 + 28);
    *(unsigned char *)(result + 32) = v2;
    *(_DWORD *)(result + 28) = v4;
  }
LABEL_6:
  if (*(void *)(a2 + 16)) {
    operator new();
  }
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_10167063C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 32)) {
    PB::TextFormatter::format(this, "location", *(_DWORD *)(a1 + 24));
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "maximum");
  }
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v6 + 32))(v6, this, "minimum");
  }
  if ((*(unsigned char *)(a1 + 32) & 2) != 0) {
    PB::TextFormatter::format(this, "state", *(_DWORD *)(a1 + 28));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101670728(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 32) |= 1u;
          unint64_t v20 = *((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
          uint64_t v22 = *(void *)this;
          if (v20 <= 0xFFFFFFFFFFFFFFF5 && v20 + 10 <= v21)
          {
            char v23 = 0;
            unsigned int v24 = 0;
            uint64_t v25 = 0;
            do
            {
              unint64_t v26 = v20 + 1;
              *((void *)this + 1) = v20 + 1;
              char v27 = *(unsigned char *)(v22 + v20);
              v25 |= (unint64_t)(v27 & 0x7F) << v23;
              if ((v27 & 0x80) == 0) {
                goto LABEL_57;
              }
              v23 += 7;
              unint64_t v20 = v26;
              BOOL v14 = v24++ > 8;
            }
            while (!v14);
LABEL_46:
            LODWORD(v25) = 0;
            goto LABEL_57;
          }
          char v37 = 0;
          unsigned int v38 = 0;
          uint64_t v25 = 0;
          if (v21 <= v20) {
            unint64_t v21 = *((void *)this + 1);
          }
          while (2)
          {
            if (v21 == v20)
            {
              LODWORD(v25) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v39 = v20 + 1;
              char v40 = *(unsigned char *)(v22 + v20);
              *((void *)this + 1) = v39;
              v25 |= (unint64_t)(v40 & 0x7F) << v37;
              if (v40 < 0)
              {
                v37 += 7;
                unint64_t v20 = v39;
                BOOL v14 = v38++ > 8;
                if (v14) {
                  goto LABEL_46;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v25) = 0;
              }
            }
            break;
          }
LABEL_57:
          *(_DWORD *)(a1 + 24) = v25;
          goto LABEL_62;
        case 2u:
          *(unsigned char *)(a1 + 32) |= 2u;
          unint64_t v29 = *((void *)this + 1);
          unint64_t v30 = *((void *)this + 2);
          uint64_t v31 = *(void *)this;
          if (v29 <= 0xFFFFFFFFFFFFFFF5 && v29 + 10 <= v30)
          {
            char v32 = 0;
            unsigned int v33 = 0;
            uint64_t v34 = 0;
            do
            {
              unint64_t v35 = v29 + 1;
              *((void *)this + 1) = v29 + 1;
              char v36 = *(unsigned char *)(v31 + v29);
              v34 |= (unint64_t)(v36 & 0x7F) << v32;
              if ((v36 & 0x80) == 0) {
                goto LABEL_61;
              }
              v32 += 7;
              unint64_t v29 = v35;
              BOOL v14 = v33++ > 8;
            }
            while (!v14);
LABEL_53:
            LODWORD(v34) = 0;
            goto LABEL_61;
          }
          char v41 = 0;
          unsigned int v42 = 0;
          uint64_t v34 = 0;
          if (v30 <= v29) {
            unint64_t v30 = *((void *)this + 1);
          }
          break;
        case 3u:
          operator new();
        case 4u:
          operator new();
        default:
          uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
          if (!result) {
            return result;
          }
          goto LABEL_62;
      }
      while (1)
      {
        if (v30 == v29)
        {
          LODWORD(v34) = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_61;
        }
        unint64_t v43 = v29 + 1;
        char v44 = *(unsigned char *)(v31 + v29);
        *((void *)this + 1) = v43;
        v34 |= (unint64_t)(v44 & 0x7F) << v41;
        if ((v44 & 0x80) == 0) {
          break;
        }
        v41 += 7;
        unint64_t v29 = v43;
        BOOL v14 = v42++ > 8;
        if (v14) {
          goto LABEL_53;
        }
      }
      if (*((unsigned char *)this + 24)) {
        LODWORD(v34) = 0;
      }
LABEL_61:
      *(_DWORD *)(a1 + 28) = v34;
LABEL_62:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101670B7C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 32);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(result + 24), 1u);
    char v4 = *(unsigned char *)(v3 + 32);
  }
  if ((v4 & 2) != 0) {
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 28), 2u);
  }
  uint64_t v5 = *(const PB::Base **)(v3 + 16);
  if (v5) {
    uint64_t result = PB::Writer::writeSubmessage(this, v5, 3u);
  }
  uint64_t v6 = *(const PB::Base **)(v3 + 8);
  if (v6)
  {
    return PB::Writer::writeSubmessage(this, v6, 4u);
  }
  return result;
}

double sub_101670C10(void *a1)
{
  *a1 = &off_102333A68;
  double result = 0.0;
  a1[2] = 0;
  *(void *)((char *)a1 + 28) = 0;
  return result;
}

void sub_101670C40(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_101670C78(uint64_t result, uint64_t a2)
{
  *(void *)double result = &off_102333A68;
  *(void *)(result + 16) = 0;
  *(void *)(result + 28) = 0;
  char v2 = *(unsigned char *)(a2 + 32);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(result + 32) = 1;
    *(void *)(result + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 32) & 8) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 24);
    v3 |= 8u;
    *(unsigned char *)(result + 32) = v3;
    *(_DWORD *)(result + 24) = v5;
    char v2 = *(unsigned char *)(a2 + 32);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 20);
    v3 |= 4u;
    *(unsigned char *)(result + 32) = v3;
    *(_DWORD *)(result + 20) = v6;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 2) == 0)
    {
LABEL_8:
      if ((v2 & 0x10) == 0) {
        return result;
      }
LABEL_12:
      int v8 = *(_DWORD *)(a2 + 28);
      *(unsigned char *)(result + 32) = v3 | 0x10;
      *(_DWORD *)(result + 28) = v8;
      return result;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 16);
  v3 |= 2u;
  *(unsigned char *)(result + 32) = v3;
  *(_DWORD *)(result + 16) = v7;
  if ((*(unsigned char *)(a2 + 32) & 0x10) != 0) {
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_101670D38(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "eventTag", *(_DWORD *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 32);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a1 + 32) & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "from", *(_DWORD *)(a1 + 20));
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(this, "location", *(_DWORD *)(a1 + 24));
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 1) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  if ((*(unsigned char *)(a1 + 32) & 0x10) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "to", *(_DWORD *)(a1 + 28));
LABEL_7:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101670E1C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 32) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_104;
            case 2u:
              *(unsigned char *)(a1 + 32) |= 8u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v45 = 0;
                unsigned int v46 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_88;
                  }
                  unint64_t v47 = v21++;
                  char v48 = *(unsigned char *)(v22 + v47);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v48 & 0x7F) << v45;
                  if ((v48 & 0x80) == 0) {
                    break;
                  }
                  v45 += 7;
                  BOOL v14 = v46++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_87:
                    unint64_t v2 = v47 + 1;
                    goto LABEL_88;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_87;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_88;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_88:
              *(_DWORD *)(a1 + 24) = v25;
              goto LABEL_104;
            case 3u:
              *(unsigned char *)(a1 + 32) |= 4u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v49 = 0;
                unsigned int v50 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_93;
                  }
                  unint64_t v51 = v27++;
                  char v52 = *(unsigned char *)(v28 + v51);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v52 & 0x7F) << v49;
                  if ((v52 & 0x80) == 0) {
                    break;
                  }
                  v49 += 7;
                  BOOL v14 = v50++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_92:
                    unint64_t v2 = v51 + 1;
                    goto LABEL_93;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_92;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_93;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_93:
              *(_DWORD *)(a1 + 20) = v31;
              goto LABEL_104;
            case 4u:
              *(unsigned char *)(a1 + 32) |= 2u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v53 = 0;
                unsigned int v54 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_98;
                  }
                  unint64_t v55 = v33++;
                  char v56 = *(unsigned char *)(v34 + v55);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v56 & 0x7F) << v53;
                  if ((v56 & 0x80) == 0) {
                    break;
                  }
                  v53 += 7;
                  BOOL v14 = v54++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_97:
                    unint64_t v2 = v55 + 1;
                    goto LABEL_98;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_97;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_98;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              LODWORD(v37) = 0;
LABEL_98:
              *(_DWORD *)(a1 + 16) = v37;
              goto LABEL_104;
            case 5u:
              *(unsigned char *)(a1 + 32) |= 0x10u;
              unint64_t v39 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v40 = *(void *)this;
              if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
              {
                char v57 = 0;
                unsigned int v58 = 0;
                uint64_t v43 = 0;
                if (v2 <= v39) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v39)
                  {
                    LODWORD(v43) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_103;
                  }
                  unint64_t v59 = v39++;
                  char v60 = *(unsigned char *)(v40 + v59);
                  *((void *)this + 1) = v39;
                  v43 |= (unint64_t)(v60 & 0x7F) << v57;
                  if ((v60 & 0x80) == 0) {
                    break;
                  }
                  v57 += 7;
                  BOOL v14 = v58++ > 8;
                  if (v14)
                  {
                    LODWORD(v43) = 0;
LABEL_102:
                    unint64_t v2 = v59 + 1;
                    goto LABEL_103;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v43) = 0;
                }
                goto LABEL_102;
              }
              char v41 = 0;
              unsigned int v42 = 0;
              uint64_t v43 = 0;
              do
              {
                unint64_t v2 = v39 + 1;
                *((void *)this + 1) = v39 + 1;
                char v44 = *(unsigned char *)(v40 + v39);
                v43 |= (unint64_t)(v44 & 0x7F) << v41;
                if ((v44 & 0x80) == 0) {
                  goto LABEL_103;
                }
                v41 += 7;
                unint64_t v39 = v2;
                BOOL v14 = v42++ > 8;
              }
              while (!v14);
              LODWORD(v43) = 0;
LABEL_103:
              *(_DWORD *)(a1 + 28) = v43;
LABEL_104:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_104;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_1016713A0(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 32);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8), 1u);
    char v4 = *(unsigned char *)(v3 + 32);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 32) & 8) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 24), 2u);
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 2) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 16), 4u);
    if ((*(unsigned char *)(v3 + 32) & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 20), 3u);
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 0x10) == 0) {
    return result;
  }
LABEL_11:
  int v5 = *(_DWORD *)(v3 + 28);

  return PB::Writer::writeVarInt(this, v5, 5u);
}

double sub_101671464(uint64_t a1)
{
  *(void *)a1 = off_102333AA0;
  *(_DWORD *)(a1 + 124) = 0;
  *(_DWORD *)(a1 + 132) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  return result;
}

void sub_1016714AC(uint64_t a1)
{
  *(void *)a1 = off_102333AA0;
  int v6 = (void **)(a1 + 96);
  sub_1016B1E74(&v6);
  int v6 = (void **)(a1 + 72);
  sub_1016B1E74(&v6);
  uint64_t v2 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(void *)(a1 + 56);
  *(void *)(a1 + 56) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  char v4 = *(void **)(a1 + 32);
  if (v4)
  {
    *(void *)(a1 + 40) = v4;
    operator delete(v4);
  }
  int v5 = *(void **)(a1 + 8);
  if (v5)
  {
    *(void *)(a1 + 16) = v5;
    operator delete(v5);
  }
  PB::Base::~Base((PB::Base *)a1);
}

void sub_10167159C(uint64_t a1)
{
  sub_1016714AC(a1);

  operator delete();
}

uint64_t sub_1016715D4(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 8) = 0u;
  char v4 = (char *)(a1 + 8);
  *(void *)a1 = off_102333AA0;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_DWORD *)(a1 + 124) = 0;
  *(_DWORD *)(a1 + 132) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  if (*(unsigned char *)(a2 + 132))
  {
    int v6 = *(_DWORD *)(a2 + 120);
    *(unsigned char *)(a1 + 132) = 1;
    *(_DWORD *)(a1 + 120) = v6;
    char v5 = 3;
    if ((*(unsigned char *)(a2 + 132) & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v5 = 2;
  if ((*(unsigned char *)(a2 + 132) & 2) != 0)
  {
LABEL_5:
    int v7 = *(_DWORD *)(a2 + 124);
    *(unsigned char *)(a1 + 132) = v5;
    *(_DWORD *)(a1 + 124) = v7;
  }
LABEL_6:
  if (*(void *)(a2 + 72) != *(void *)(a2 + 80)) {
    sub_10166C138();
  }
  if (a1 != a2)
  {
    sub_1000FB43C((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
    sub_1000FB43C(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  if (*(void *)(a2 + 64)) {
    operator new();
  }
  if (*(void *)(a2 + 56)) {
    operator new();
  }
  char v8 = *(unsigned char *)(a2 + 132);
  if ((v8 & 8) != 0)
  {
    char v9 = *(unsigned char *)(a2 + 129);
    *(unsigned char *)(a1 + 132) |= 8u;
    *(unsigned char *)(a1 + 129) = v9;
    char v8 = *(unsigned char *)(a2 + 132);
  }
  if ((v8 & 4) != 0)
  {
    char v10 = *(unsigned char *)(a2 + 128);
    *(unsigned char *)(a1 + 132) |= 4u;
    *(unsigned char *)(a1 + 128) = v10;
  }
  if (*(void *)(a2 + 96) != *(void *)(a2 + 104)) {
    sub_101671808();
  }
  return a1;
}

void sub_101671808()
{
}

void sub_10167190C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100C341AC((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_101671954(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "baseline");
  }
  if (*(unsigned char *)(a1 + 132)) {
    PB::TextFormatter::format(this, "location", *(_DWORD *)(a1 + 120));
  }
  uint64_t v6 = *(void *)(a1 + 64);
  if (v6) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v6 + 32))(v6, this, "minimum");
  }
  int v7 = *(uint64_t **)(a1 + 72);
  char v8 = *(uint64_t **)(a1 + 80);
  while (v7 != v8)
  {
    uint64_t v9 = *v7++;
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v9 + 32))(v9, this, "optical");
  }
  char v10 = *(unsigned char *)(a1 + 132);
  if ((v10 & 4) != 0)
  {
    PB::TextFormatter::format(this, "ringBufferUpdated", *(unsigned char *)(a1 + 128));
    char v10 = *(unsigned char *)(a1 + 132);
    if ((v10 & 8) == 0)
    {
LABEL_11:
      if ((v10 & 2) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a1 + 132) & 8) == 0)
  {
    goto LABEL_11;
  }
  PB::TextFormatter::format(this, "runningMinAccepted", *(unsigned char *)(a1 + 129));
  if ((*(unsigned char *)(a1 + 132) & 2) != 0) {
LABEL_12:
  }
    PB::TextFormatter::format(this, "state", *(_DWORD *)(a1 + 124));
LABEL_13:
  unint64_t v11 = *(uint64_t **)(a1 + 96);
  unint64_t v12 = *(uint64_t **)(a1 + 104);
  while (v11 != v12)
  {
    uint64_t v13 = *v11++;
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v13 + 32))(v13, this, "temp");
  }
  BOOL v14 = *(float **)(a1 + 8);
  char v15 = *(float **)(a1 + 16);
  while (v14 != v15)
  {
    float v16 = *v14++;
    PB::TextFormatter::format(this, "tilt", v16);
  }
  unint64_t v17 = *(float **)(a1 + 32);
  char v18 = *(float **)(a1 + 40);
  while (v17 != v18)
  {
    float v19 = *v17++;
    PB::TextFormatter::format(this, "tip", v19);
  }

  return PB::TextFormatter::endObject(this);
}

BOOL sub_101671B84(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    char v8 = (void **)(a1 + 8);
    uint64_t v9 = a1 + 24;
    char v10 = (void **)(a1 + 32);
    uint64_t v11 = a1 + 48;
    while (1)
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v13 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v17 = *(unsigned char *)(v12 + v2);
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          break;
        }
        v13 += 7;
        unint64_t v2 = v16;
        BOOL v18 = v14++ > 8;
        if (v18) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v24 = v15 & 7;
      if (v24 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v15 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 132) |= 1u;
          unint64_t v25 = *((void *)this + 1);
          unint64_t v26 = *((void *)this + 2);
          uint64_t v27 = *(void *)this;
          if (v25 <= 0xFFFFFFFFFFFFFFF5 && v25 + 10 <= v26)
          {
            char v28 = 0;
            unsigned int v29 = 0;
            uint64_t v30 = 0;
            do
            {
              unint64_t v31 = v25 + 1;
              *((void *)this + 1) = v25 + 1;
              char v32 = *(unsigned char *)(v27 + v25);
              v30 |= (unint64_t)(v32 & 0x7F) << v28;
              if ((v32 & 0x80) == 0) {
                goto LABEL_144;
              }
              v28 += 7;
              unint64_t v25 = v31;
              BOOL v18 = v29++ > 8;
            }
            while (!v18);
LABEL_107:
            LODWORD(v30) = 0;
            goto LABEL_144;
          }
          char v78 = 0;
          unsigned int v79 = 0;
          uint64_t v30 = 0;
          if (v26 <= v25) {
            unint64_t v26 = *((void *)this + 1);
          }
          while (2)
          {
            if (v26 == v25)
            {
              LODWORD(v30) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v80 = v25 + 1;
              char v81 = *(unsigned char *)(v27 + v25);
              *((void *)this + 1) = v80;
              v30 |= (unint64_t)(v81 & 0x7F) << v78;
              if (v81 < 0)
              {
                v78 += 7;
                unint64_t v25 = v80;
                BOOL v18 = v79++ > 8;
                if (v18) {
                  goto LABEL_107;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v30) = 0;
              }
            }
            break;
          }
LABEL_144:
          *(_DWORD *)(a1 + 120) = v30;
          goto LABEL_96;
        case 2u:
          *(unsigned char *)(a1 + 132) |= 2u;
          unint64_t v33 = *((void *)this + 1);
          unint64_t v34 = *((void *)this + 2);
          uint64_t v35 = *(void *)this;
          if (v33 <= 0xFFFFFFFFFFFFFFF5 && v33 + 10 <= v34)
          {
            char v36 = 0;
            unsigned int v37 = 0;
            uint64_t v38 = 0;
            do
            {
              unint64_t v39 = v33 + 1;
              *((void *)this + 1) = v33 + 1;
              char v40 = *(unsigned char *)(v35 + v33);
              v38 |= (unint64_t)(v40 & 0x7F) << v36;
              if ((v40 & 0x80) == 0) {
                goto LABEL_147;
              }
              v36 += 7;
              unint64_t v33 = v39;
              BOOL v18 = v37++ > 8;
            }
            while (!v18);
LABEL_114:
            LODWORD(v38) = 0;
            goto LABEL_147;
          }
          char v82 = 0;
          unsigned int v83 = 0;
          uint64_t v38 = 0;
          if (v34 <= v33) {
            unint64_t v34 = *((void *)this + 1);
          }
          while (2)
          {
            if (v34 == v33)
            {
              LODWORD(v38) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v84 = v33 + 1;
              char v85 = *(unsigned char *)(v35 + v33);
              *((void *)this + 1) = v84;
              v38 |= (unint64_t)(v85 & 0x7F) << v82;
              if (v85 < 0)
              {
                v82 += 7;
                unint64_t v33 = v84;
                BOOL v18 = v83++ > 8;
                if (v18) {
                  goto LABEL_114;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v38) = 0;
              }
            }
            break;
          }
LABEL_147:
          *(_DWORD *)(a1 + 124) = v38;
          goto LABEL_96;
        case 3u:
          sub_10166C5EC();
        case 4u:
          if (v24 != 2)
          {
            unsigned int v87 = *(char **)(a1 + 40);
            unint64_t v86 = *(void *)(a1 + 48);
            if ((unint64_t)v87 >= v86)
            {
              unint64_t v91 = (char *)*v10;
              uint64_t v92 = (v87 - (unsigned char *)*v10) >> 2;
              unint64_t v93 = v92 + 1;
              if ((unint64_t)(v92 + 1) >> 62) {
LABEL_171:
              }
                sub_1001D7FD4();
              uint64_t v94 = v86 - (void)v91;
              if (v94 >> 1 > v93) {
                unint64_t v93 = v94 >> 1;
              }
              if ((unint64_t)v94 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v95 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v95 = v93;
              }
              if (v95)
              {
                unint64_t v96 = (char *)sub_10017EA34(v11, v95);
                unint64_t v91 = *(char **)(a1 + 32);
                unsigned int v87 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v96 = 0;
              }
              unint64_t v103 = &v96[4 * v92];
              *(_DWORD *)unint64_t v103 = 0;
              unint64_t v88 = v103 + 4;
              while (v87 != v91)
              {
                int v104 = *((_DWORD *)v87 - 1);
                v87 -= 4;
                *((_DWORD *)v103 - 1) = v104;
                v103 -= 4;
              }
              *(void *)(a1 + 32) = v103;
              *(void *)(a1 + 40) = v88;
              *(void *)(a1 + 48) = &v96[4 * v95];
              if (v91) {
                operator delete(v91);
              }
            }
            else
            {
              *(_DWORD *)unsigned int v87 = 0;
              unint64_t v88 = v87 + 4;
            }
            *(void *)(a1 + 40) = v88;
            goto LABEL_162;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v41 = *((void *)this + 1);
          unint64_t v42 = *((void *)this + 2);
          while (v41 < v42 && !*((unsigned char *)this + 24))
          {
            char v44 = *(char **)(a1 + 40);
            unint64_t v43 = *(void *)(a1 + 48);
            if ((unint64_t)v44 >= v43)
            {
              unsigned int v46 = (char *)*v10;
              uint64_t v47 = (v44 - (unsigned char *)*v10) >> 2;
              unint64_t v48 = v47 + 1;
              if ((unint64_t)(v47 + 1) >> 62) {
                goto LABEL_171;
              }
              uint64_t v49 = v43 - (void)v46;
              if (v49 >> 1 > v48) {
                unint64_t v48 = v49 >> 1;
              }
              if ((unint64_t)v49 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v50 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v50 = v48;
              }
              if (v50)
              {
                unint64_t v51 = (char *)sub_10017EA34(v11, v50);
                unsigned int v46 = *(char **)(a1 + 32);
                char v44 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v51 = 0;
              }
              char v52 = &v51[4 * v47];
              *(_DWORD *)char v52 = 0;
              char v45 = v52 + 4;
              while (v44 != v46)
              {
                int v53 = *((_DWORD *)v44 - 1);
                v44 -= 4;
                *((_DWORD *)v52 - 1) = v53;
                v52 -= 4;
              }
              *(void *)(a1 + 32) = v52;
              *(void *)(a1 + 40) = v45;
              *(void *)(a1 + 48) = &v51[4 * v50];
              if (v46) {
                operator delete(v46);
              }
            }
            else
            {
              *(_DWORD *)char v44 = 0;
              char v45 = v44 + 4;
            }
            *(void *)(a1 + 40) = v45;
            unint64_t v54 = *((void *)this + 1);
            if (v54 > 0xFFFFFFFFFFFFFFFBLL || v54 + 4 > *((void *)this + 2)) {
              goto LABEL_123;
            }
            *(v45 - 1) = *(_DWORD *)(*(void *)this + v54);
            unint64_t v42 = *((void *)this + 2);
            unint64_t v41 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v41;
          }
          goto LABEL_95;
        case 5u:
          if (v24 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v55 = *((void *)this + 1);
            unint64_t v56 = *((void *)this + 2);
            while (v55 < v56 && !*((unsigned char *)this + 24))
            {
              unsigned int v58 = *(char **)(a1 + 16);
              unint64_t v57 = *(void *)(a1 + 24);
              if ((unint64_t)v58 >= v57)
              {
                char v60 = (char *)*v8;
                uint64_t v61 = (v58 - (unsigned char *)*v8) >> 2;
                unint64_t v62 = v61 + 1;
                if ((unint64_t)(v61 + 1) >> 62) {
                  goto LABEL_172;
                }
                uint64_t v63 = v57 - (void)v60;
                if (v63 >> 1 > v62) {
                  unint64_t v62 = v63 >> 1;
                }
                if ((unint64_t)v63 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v64 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v64 = v62;
                }
                if (v64)
                {
                  unint64_t v65 = (char *)sub_10017EA34(v9, v64);
                  char v60 = *(char **)(a1 + 8);
                  unsigned int v58 = *(char **)(a1 + 16);
                }
                else
                {
                  unint64_t v65 = 0;
                }
                char v66 = &v65[4 * v61];
                *(_DWORD *)char v66 = 0;
                unint64_t v59 = v66 + 4;
                while (v58 != v60)
                {
                  int v67 = *((_DWORD *)v58 - 1);
                  v58 -= 4;
                  *((_DWORD *)v66 - 1) = v67;
                  v66 -= 4;
                }
                *(void *)(a1 + 8) = v66;
                *(void *)(a1 + 16) = v59;
                *(void *)(a1 + 24) = &v65[4 * v64];
                if (v60) {
                  operator delete(v60);
                }
              }
              else
              {
                *(_DWORD *)unsigned int v58 = 0;
                unint64_t v59 = v58 + 4;
              }
              *(void *)(a1 + 16) = v59;
              unint64_t v68 = *((void *)this + 1);
              if (v68 > 0xFFFFFFFFFFFFFFFBLL || v68 + 4 > *((void *)this + 2))
              {
LABEL_123:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v59 - 1) = *(_DWORD *)(*(void *)this + v68);
              unint64_t v56 = *((void *)this + 2);
              unint64_t v55 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v55;
            }
LABEL_95:
            PB::Reader::recallMark();
          }
          else
          {
            unint64_t v90 = *(char **)(a1 + 16);
            unint64_t v89 = *(void *)(a1 + 24);
            if ((unint64_t)v90 >= v89)
            {
              char v97 = (char *)*v8;
              uint64_t v98 = (v90 - (unsigned char *)*v8) >> 2;
              unint64_t v99 = v98 + 1;
              if ((unint64_t)(v98 + 1) >> 62) {
LABEL_172:
              }
                sub_1001D7FD4();
              uint64_t v100 = v89 - (void)v97;
              if (v100 >> 1 > v99) {
                unint64_t v99 = v100 >> 1;
              }
              if ((unint64_t)v100 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v101 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v101 = v99;
              }
              if (v101)
              {
                unint64_t v102 = (char *)sub_10017EA34(v9, v101);
                char v97 = *(char **)(a1 + 8);
                unint64_t v90 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v102 = 0;
              }
              int v105 = &v102[4 * v98];
              *(_DWORD *)int v105 = 0;
              unint64_t v88 = v105 + 4;
              while (v90 != v97)
              {
                int v106 = *((_DWORD *)v90 - 1);
                v90 -= 4;
                *((_DWORD *)v105 - 1) = v106;
                v105 -= 4;
              }
              *(void *)(a1 + 8) = v105;
              *(void *)(a1 + 16) = v88;
              *(void *)(a1 + 24) = &v102[4 * v101];
              if (v97) {
                operator delete(v97);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v90 = 0;
              unint64_t v88 = v90 + 4;
            }
            *(void *)(a1 + 16) = v88;
LABEL_162:
            unint64_t v107 = *((void *)this + 1);
            if (v107 <= 0xFFFFFFFFFFFFFFFBLL && v107 + 4 <= *((void *)this + 2))
            {
              *(v88 - 1) = *(_DWORD *)(*(void *)this + v107);
              *((void *)this + 1) += 4;
            }
            else
            {
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_96:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        case 6u:
          operator new();
        case 7u:
          operator new();
        case 8u:
          *(unsigned char *)(a1 + 132) |= 8u;
          unint64_t v69 = *((void *)this + 1);
          if (v69 >= *((void *)this + 2))
          {
            BOOL v72 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v70 = v69 + 1;
            int v71 = *(unsigned __int8 *)(*(void *)this + v69);
            *((void *)this + 1) = v70;
            BOOL v72 = v71 != 0;
          }
          *(unsigned char *)(a1 + 129) = v72;
          goto LABEL_96;
        case 9u:
          *(unsigned char *)(a1 + 132) |= 4u;
          unint64_t v73 = *((void *)this + 1);
          if (v73 >= *((void *)this + 2))
          {
            BOOL v76 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v74 = v73 + 1;
            int v75 = *(unsigned __int8 *)(*(void *)this + v73);
            *((void *)this + 1) = v74;
            BOOL v76 = v75 != 0;
          }
          *(unsigned char *)(a1 + 128) = v76;
          goto LABEL_96;
        case 0xAu:
          sub_101672488();
        default:
          if ((PB::Reader::skip(this, v15 >> 3, v24, 0) & 1) == 0) {
            return 0;
          }
          goto LABEL_96;
      }
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v15 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v21 = v2 + 1;
      char v22 = *(unsigned char *)(v12 + v2);
      *((void *)this + 1) = v21;
      v15 |= (unint64_t)(v22 & 0x7F) << v19;
      if ((v22 & 0x80) == 0) {
        goto LABEL_21;
      }
      v19 += 7;
      unint64_t v2 = v21;
      if (v20++ >= 9)
      {
LABEL_20:
        unint64_t v15 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

void sub_101672488()
{
}

void sub_101672584(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100C341AC((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1016725C8(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 132);
  if (v4)
  {
    double result = PB::Writer::writeVarInt(this, *(_DWORD *)(result + 120), 1u);
    char v4 = *(unsigned char *)(v3 + 132);
  }
  if ((v4 & 2) != 0) {
    double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 124), 2u);
  }
  uint64_t v5 = *(const PB::Base ***)(v3 + 72);
  uint64_t v6 = *(const PB::Base ***)(v3 + 80);
  while (v5 != v6)
  {
    int v7 = *v5++;
    double result = PB::Writer::writeSubmessage(this, v7, 3u);
  }
  char v8 = *(float **)(v3 + 32);
  uint64_t v9 = *(float **)(v3 + 40);
  while (v8 != v9)
  {
    float v10 = *v8++;
    double result = PB::Writer::write(this, v10, 4u);
  }
  uint64_t v11 = *(float **)(v3 + 8);
  uint64_t v12 = *(float **)(v3 + 16);
  while (v11 != v12)
  {
    float v13 = *v11++;
    double result = PB::Writer::write(this, v13, 5u);
  }
  unsigned int v14 = *(const PB::Base **)(v3 + 64);
  if (v14) {
    double result = PB::Writer::writeSubmessage(this, v14, 6u);
  }
  unint64_t v15 = *(const PB::Base **)(v3 + 56);
  if (v15) {
    double result = PB::Writer::writeSubmessage(this, v15, 7u);
  }
  char v16 = *(unsigned char *)(v3 + 132);
  if ((v16 & 8) != 0)
  {
    double result = PB::Writer::write(this, *(unsigned char *)(v3 + 129), 8u);
    char v16 = *(unsigned char *)(v3 + 132);
  }
  if ((v16 & 4) != 0) {
    double result = PB::Writer::write(this, *(unsigned char *)(v3 + 128), 9u);
  }
  BOOL v18 = *(const PB::Base ***)(v3 + 96);
  char v17 = *(const PB::Base ***)(v3 + 104);
  while (v18 != v17)
  {
    char v19 = *v18++;
    double result = PB::Writer::writeSubmessage(this, v19, 0xAu);
  }
  return result;
}

uint64_t sub_1016726FC(uint64_t result)
{
  *(void *)double result = &off_102333AD8;
  *(_DWORD *)(result + 68) = 0;
  return result;
}

void sub_101672724(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_10167275C(uint64_t result, uint64_t a2)
{
  *(void *)double result = &off_102333AD8;
  *(_DWORD *)(result + 68) = 0;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    __int16 v3 = 1;
    *(_WORD *)(result + 68) = 1;
    *(void *)(result + 8) = v4;
    __int16 v2 = *(_WORD *)(a2 + 68);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 16);
    v3 |= 2u;
    *(_WORD *)(result + 68) = v3;
    *(_DWORD *)(result + 16) = v5;
    __int16 v2 = *(_WORD *)(a2 + 68);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 20);
    v3 |= 4u;
    *(_WORD *)(result + 68) = v3;
    *(_DWORD *)(result + 20) = v6;
    __int16 v2 = *(_WORD *)(a2 + 68);
    if ((v2 & 8) == 0)
    {
LABEL_8:
      if ((v2 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_21;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 24);
  v3 |= 8u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 24) = v7;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x10) == 0)
  {
LABEL_9:
    if ((v2 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  int v8 = *(_DWORD *)(a2 + 28);
  v3 |= 0x10u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 28) = v8;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x20) == 0)
  {
LABEL_10:
    if ((v2 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v9 = *(_DWORD *)(a2 + 32);
  v3 |= 0x20u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 32) = v9;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x40) == 0)
  {
LABEL_11:
    if ((v2 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_24;
  }
LABEL_23:
  int v10 = *(_DWORD *)(a2 + 36);
  v3 |= 0x40u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 36) = v10;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x100) == 0)
  {
LABEL_12:
    if ((v2 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_25;
  }
LABEL_24:
  int v11 = *(_DWORD *)(a2 + 44);
  v3 |= 0x100u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 44) = v11;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x200) == 0)
  {
LABEL_13:
    if ((v2 & 0x400) == 0) {
      goto LABEL_14;
    }
    goto LABEL_26;
  }
LABEL_25:
  int v12 = *(_DWORD *)(a2 + 48);
  v3 |= 0x200u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 48) = v12;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x400) == 0)
  {
LABEL_14:
    if ((v2 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_27;
  }
LABEL_26:
  int v13 = *(_DWORD *)(a2 + 52);
  v3 |= 0x400u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 52) = v13;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x80) == 0)
  {
LABEL_15:
    if ((v2 & 0x800) == 0) {
      goto LABEL_16;
    }
    goto LABEL_28;
  }
LABEL_27:
  int v14 = *(_DWORD *)(a2 + 40);
  v3 |= 0x80u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 40) = v14;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x800) == 0)
  {
LABEL_16:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_29;
  }
LABEL_28:
  int v15 = *(_DWORD *)(a2 + 56);
  v3 |= 0x800u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 56) = v15;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x1000) == 0)
  {
LABEL_17:
    if ((v2 & 0x2000) == 0) {
      return result;
    }
LABEL_30:
    char v17 = *(unsigned char *)(a2 + 64);
    *(_WORD *)(result + 68) = v3 | 0x2000;
    *(unsigned char *)(result + 64) = v17;
    return result;
  }
LABEL_29:
  int v16 = *(_DWORD *)(a2 + 60);
  v3 |= 0x1000u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 60) = v16;
  if ((*(_WORD *)(a2 + 68) & 0x2000) != 0) {
    goto LABEL_30;
  }
  return result;
}

uint64_t sub_101672910(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "deltaPositionX", *(float *)(a1 + 16));
    __int16 v5 = *(_WORD *)(a1 + 68);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_21;
    }
  }
  else if ((v5 & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "deltaPositionY", *(float *)(a1 + 20));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "deltaPositionZ", *(float *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "deltaVelocityX", *(float *)(a1 + 28));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x20) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "deltaVelocityY", *(float *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x40) == 0)
  {
LABEL_7:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "deltaVelocityZ", *(float *)(a1 + 36));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x2000) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "isBIO", *(unsigned char *)(a1 + 64));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "quaternionW", *(float *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x100) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(this, "quaternionX", *(float *)(a1 + 44));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "quaternionY", *(float *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x400) == 0)
  {
LABEL_12:
    if ((v5 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(this, "quaternionZ", *(float *)(a1 + 52));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x800) == 0)
  {
LABEL_13:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "referenceFrame", *(_DWORD *)(a1 + 56));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x1000) == 0)
  {
LABEL_14:
    if ((v5 & 1) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_31:
  PB::TextFormatter::format(this, "staticFlag", *(_DWORD *)(a1 + 60));
  if (*(_WORD *)(a1 + 68)) {
LABEL_15:
  }
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
LABEL_16:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101672B14(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 68) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              unint64_t v2 = *((void *)this + 1) + 8;
              goto LABEL_91;
            case 2u:
              *(_WORD *)(a1 + 68) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_90;
            case 3u:
              *(_WORD *)(a1 + 68) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_90;
            case 4u:
              *(_WORD *)(a1 + 68) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_90;
            case 5u:
              *(_WORD *)(a1 + 68) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_90;
            case 6u:
              *(_WORD *)(a1 + 68) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_90;
            case 7u:
              *(_WORD *)(a1 + 68) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_90;
            case 8u:
              *(_WORD *)(a1 + 68) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_90;
            case 9u:
              *(_WORD *)(a1 + 68) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_90;
            case 0xAu:
              *(_WORD *)(a1 + 68) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_56;
              }
              *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_90;
            case 0xBu:
              *(_WORD *)(a1 + 68) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
LABEL_90:
                unint64_t v2 = *((void *)this + 1) + 4;
LABEL_91:
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_56:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_102;
            case 0xCu:
              *(_WORD *)(a1 + 68) |= 0x800u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v35 = 0;
                unsigned int v36 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_96;
                  }
                  unint64_t v37 = v21++;
                  char v38 = *(unsigned char *)(v22 + v37);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v38 & 0x7F) << v35;
                  if ((v38 & 0x80) == 0) {
                    break;
                  }
                  v35 += 7;
                  BOOL v14 = v36++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_95:
                    unint64_t v2 = v37 + 1;
                    goto LABEL_96;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_95;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_96;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_96:
              *(_DWORD *)(a1 + 56) = v25;
              goto LABEL_102;
            case 0xDu:
              *(_WORD *)(a1 + 68) |= 0x1000u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v39 = 0;
                unsigned int v40 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_101;
                  }
                  unint64_t v41 = v27++;
                  char v42 = *(unsigned char *)(v28 + v41);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v42 & 0x7F) << v39;
                  if ((v42 & 0x80) == 0) {
                    break;
                  }
                  v39 += 7;
                  BOOL v14 = v40++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_100:
                    unint64_t v2 = v41 + 1;
                    goto LABEL_101;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_100;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_101;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_101:
              *(_DWORD *)(a1 + 60) = v31;
LABEL_102:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 0xEu:
              *(_WORD *)(a1 + 68) |= 0x2000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v34 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v33 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v34 = v33 != 0;
              }
              *(unsigned char *)(a1 + 64) = v34;
              goto LABEL_102;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_102;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_101673160(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 68);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8), 1u);
    __int16 v4 = *(_WORD *)(v3 + 68);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16), 2u);
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20), 3u);
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24), 4u);
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x10) == 0)
  {
LABEL_6:
    if ((v4 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28), 5u);
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x20) == 0)
  {
LABEL_7:
    if ((v4 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32), 6u);
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x40) == 0)
  {
LABEL_8:
    if ((v4 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36), 7u);
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x100) == 0)
  {
LABEL_9:
    if ((v4 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44), 8u);
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x200) == 0)
  {
LABEL_10:
    if ((v4 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48), 9u);
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x400) == 0)
  {
LABEL_11:
    if ((v4 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52), 0xAu);
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x80) == 0)
  {
LABEL_12:
    if ((v4 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40), 0xBu);
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x800) == 0)
  {
LABEL_13:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_14;
    }
LABEL_28:
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 60), 0xDu);
    if ((*(_WORD *)(v3 + 68) & 0x2000) == 0) {
      return result;
    }
    goto LABEL_29;
  }
LABEL_27:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 56), 0xCu);
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x1000) != 0) {
    goto LABEL_28;
  }
LABEL_14:
  if ((v4 & 0x2000) == 0) {
    return result;
  }
LABEL_29:
  char v5 = *(unsigned char *)(v3 + 64);

  return PB::Writer::write(this, v5, 0xEu);
}

double sub_101673320(uint64_t a1)
{
  *(void *)a1 = &off_102333B10;
  *(_DWORD *)(a1 + 88) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)(a1 + 72) = 0;
  return result;
}

void sub_10167335C(PB::Base *this)
{
  *(void *)this = &off_102333B10;
  unint64_t v2 = (void *)*((void *)this + 7);
  if (v2)
  {
    *((void *)this + 8) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 4);
  if (v3)
  {
    *((void *)this + 5) = v3;
    operator delete(v3);
  }
  __int16 v4 = (void *)*((void *)this + 1);
  if (v4)
  {
    *((void *)this + 2) = v4;
    operator delete(v4);
  }

  PB::Base::~Base(this);
}

void sub_1016733E0(PB::Base *a1)
{
  sub_10167335C(a1);

  operator delete();
}

uint64_t sub_101673418(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 8) = 0u;
  __int16 v4 = (char *)(a1 + 8);
  *(_OWORD *)(a1 + 56) = 0u;
  char v5 = (char *)(a1 + 56);
  *(void *)a1 = &off_102333B10;
  *(_DWORD *)(a1 + 88) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 72) = 0;
  if (a1 != a2)
  {
    sub_1002DD194((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 3);
    sub_1002DD194(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
    sub_1002DD194(v5, *(char **)(a2 + 56), *(void *)(a2 + 64), (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 3);
  }
  if (*(unsigned char *)(a2 + 88))
  {
    uint64_t v6 = *(void *)(a2 + 80);
    *(unsigned char *)(a1 + 88) |= 1u;
    *(void *)(a1 + 80) = v6;
  }
  return a1;
}

uint64_t sub_1016734F0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(double **)(a1 + 8);
  uint64_t v6 = *(double **)(a1 + 16);
  while (v5 != v6)
  {
    double v7 = *v5++;
    PB::TextFormatter::format(this, "historicalMeanSeaLevelPressure", v7);
  }
  uint64_t v8 = *(double **)(a1 + 32);
  char v9 = *(double **)(a1 + 40);
  while (v8 != v9)
  {
    double v10 = *v8++;
    PB::TextFormatter::format(this, "historicalTimestamp", v10);
  }
  unint64_t v11 = *(double **)(a1 + 56);
  unint64_t v12 = *(double **)(a1 + 64);
  while (v11 != v12)
  {
    double v13 = *v11++;
    PB::TextFormatter::format(this, "historicalUncertainty", v13);
  }
  if (*(unsigned char *)(a1 + 88)) {
    PB::TextFormatter::format(this, "refreshTime", *(double *)(a1 + 80));
  }

  return PB::TextFormatter::endObject(this);
}

BOOL sub_1016735E4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v8 = (void **)(a1 + 56);
    uint64_t v102 = a1 + 72;
    char v9 = (void **)(a1 + 8);
    uint64_t v10 = a1 + 24;
    unint64_t v11 = (void **)(a1 + 32);
    uint64_t v12 = a1 + 48;
    while (1)
    {
      uint64_t v13 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v14 = 0;
      unsigned int v15 = 0;
      unint64_t v16 = 0;
      while (1)
      {
        unint64_t v17 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v18 = *(unsigned char *)(v13 + v2);
        v16 |= (unint64_t)(v18 & 0x7F) << v14;
        if ((v18 & 0x80) == 0) {
          break;
        }
        v14 += 7;
        unint64_t v2 = v17;
        if (v15++ > 8) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v25 = v16 & 7;
      if (v25 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v16 >> 3))
      {
        case 1u:
          if (v25 != 2)
          {
            unint64_t v70 = *(char **)(a1 + 40);
            unint64_t v69 = *(void *)(a1 + 48);
            if ((unint64_t)v70 >= v69)
            {
              BOOL v76 = (char *)*v11;
              uint64_t v77 = (v70 - (unsigned char *)*v11) >> 3;
              unint64_t v78 = v77 + 1;
              if ((unint64_t)(v77 + 1) >> 61) {
LABEL_166:
              }
                sub_1001D7FD4();
              uint64_t v79 = v69 - (void)v76;
              if (v79 >> 2 > v78) {
                unint64_t v78 = v79 >> 2;
              }
              if ((unint64_t)v79 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v80 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v80 = v78;
              }
              if (v80)
              {
                char v81 = (char *)sub_1000DA54C(v12, v80);
                BOOL v76 = *(char **)(a1 + 32);
                unint64_t v70 = *(char **)(a1 + 40);
              }
              else
              {
                char v81 = 0;
              }
              uint64_t v94 = &v81[8 * v77];
              *(void *)uint64_t v94 = 0;
              int v71 = v94 + 8;
              while (v70 != v76)
              {
                uint64_t v95 = *((void *)v70 - 1);
                v70 -= 8;
                *((void *)v94 - 1) = v95;
                v94 -= 8;
              }
              *(void *)(a1 + 32) = v94;
              *(void *)(a1 + 40) = v71;
              *(void *)(a1 + 48) = &v81[8 * v80];
              if (v76) {
                operator delete(v76);
              }
            }
            else
            {
              *(void *)unint64_t v70 = 0;
              int v71 = v70 + 8;
            }
            *(void *)(a1 + 40) = v71;
            goto LABEL_153;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v26 = *((void *)this + 1);
          unint64_t v27 = *((void *)this + 2);
          while (v26 < v27 && !*((unsigned char *)this + 24))
          {
            char v29 = *(char **)(a1 + 40);
            unint64_t v28 = *(void *)(a1 + 48);
            if ((unint64_t)v29 >= v28)
            {
              uint64_t v31 = (char *)*v11;
              uint64_t v32 = (v29 - (unsigned char *)*v11) >> 3;
              unint64_t v33 = v32 + 1;
              if ((unint64_t)(v32 + 1) >> 61) {
                goto LABEL_166;
              }
              uint64_t v34 = v28 - (void)v31;
              if (v34 >> 2 > v33) {
                unint64_t v33 = v34 >> 2;
              }
              if ((unint64_t)v34 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v35 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v35 = v33;
              }
              if (v35)
              {
                unsigned int v36 = (char *)sub_1000DA54C(v12, v35);
                uint64_t v31 = *(char **)(a1 + 32);
                char v29 = *(char **)(a1 + 40);
              }
              else
              {
                unsigned int v36 = 0;
              }
              unint64_t v37 = &v36[8 * v32];
              *(void *)unint64_t v37 = 0;
              unsigned int v30 = v37 + 8;
              while (v29 != v31)
              {
                uint64_t v38 = *((void *)v29 - 1);
                v29 -= 8;
                *((void *)v37 - 1) = v38;
                v37 -= 8;
              }
              *(void *)(a1 + 32) = v37;
              *(void *)(a1 + 40) = v30;
              *(void *)(a1 + 48) = &v36[8 * v35];
              if (v31) {
                operator delete(v31);
              }
            }
            else
            {
              *(void *)char v29 = 0;
              unsigned int v30 = v29 + 8;
            }
            *(void *)(a1 + 40) = v30;
            unint64_t v39 = *((void *)this + 1);
            if (v39 > 0xFFFFFFFFFFFFFFF7 || v39 + 8 > *((void *)this + 2)) {
              goto LABEL_106;
            }
            *(v30 - 1) = *(void *)(*(void *)this + v39);
            unint64_t v27 = *((void *)this + 2);
            unint64_t v26 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v26;
          }
          goto LABEL_107;
        case 2u:
          if (v25 != 2)
          {
            unint64_t v73 = *(char **)(a1 + 16);
            unint64_t v72 = *(void *)(a1 + 24);
            if ((unint64_t)v73 >= v72)
            {
              char v82 = (char *)*v9;
              uint64_t v83 = (v73 - (unsigned char *)*v9) >> 3;
              unint64_t v84 = v83 + 1;
              if ((unint64_t)(v83 + 1) >> 61) {
LABEL_167:
              }
                sub_1001D7FD4();
              uint64_t v85 = v72 - (void)v82;
              if (v85 >> 2 > v84) {
                unint64_t v84 = v85 >> 2;
              }
              if ((unint64_t)v85 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v86 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v86 = v84;
              }
              if (v86)
              {
                unsigned int v87 = (char *)sub_1000DA54C(v10, v86);
                char v82 = *(char **)(a1 + 8);
                unint64_t v73 = *(char **)(a1 + 16);
              }
              else
              {
                unsigned int v87 = 0;
              }
              unint64_t v96 = &v87[8 * v83];
              *(void *)unint64_t v96 = 0;
              int v71 = v96 + 8;
              while (v73 != v82)
              {
                uint64_t v97 = *((void *)v73 - 1);
                v73 -= 8;
                *((void *)v96 - 1) = v97;
                v96 -= 8;
              }
              *(void *)(a1 + 8) = v96;
              *(void *)(a1 + 16) = v71;
              *(void *)(a1 + 24) = &v87[8 * v86];
              if (v82) {
                operator delete(v82);
              }
            }
            else
            {
              *(void *)unint64_t v73 = 0;
              int v71 = v73 + 8;
            }
            *(void *)(a1 + 16) = v71;
            goto LABEL_153;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v40 = *((void *)this + 1);
          unint64_t v41 = *((void *)this + 2);
          while (v40 < v41 && !*((unsigned char *)this + 24))
          {
            unint64_t v43 = *(char **)(a1 + 16);
            unint64_t v42 = *(void *)(a1 + 24);
            if ((unint64_t)v43 >= v42)
            {
              char v45 = (char *)*v9;
              uint64_t v46 = (v43 - (unsigned char *)*v9) >> 3;
              unint64_t v47 = v46 + 1;
              if ((unint64_t)(v46 + 1) >> 61) {
                goto LABEL_167;
              }
              uint64_t v48 = v42 - (void)v45;
              if (v48 >> 2 > v47) {
                unint64_t v47 = v48 >> 2;
              }
              if ((unint64_t)v48 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v49 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v49 = v47;
              }
              if (v49)
              {
                unint64_t v50 = (char *)sub_1000DA54C(v10, v49);
                char v45 = *(char **)(a1 + 8);
                unint64_t v43 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v50 = 0;
              }
              unint64_t v51 = &v50[8 * v46];
              *(void *)unint64_t v51 = 0;
              char v44 = v51 + 8;
              while (v43 != v45)
              {
                uint64_t v52 = *((void *)v43 - 1);
                v43 -= 8;
                *((void *)v51 - 1) = v52;
                v51 -= 8;
              }
              *(void *)(a1 + 8) = v51;
              *(void *)(a1 + 16) = v44;
              *(void *)(a1 + 24) = &v50[8 * v49];
              if (v45) {
                operator delete(v45);
              }
            }
            else
            {
              *(void *)unint64_t v43 = 0;
              char v44 = v43 + 8;
            }
            *(void *)(a1 + 16) = v44;
            unint64_t v53 = *((void *)this + 1);
            if (v53 > 0xFFFFFFFFFFFFFFF7 || v53 + 8 > *((void *)this + 2)) {
              goto LABEL_106;
            }
            *(v44 - 1) = *(void *)(*(void *)this + v53);
            unint64_t v41 = *((void *)this + 2);
            unint64_t v40 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v40;
          }
          goto LABEL_107;
        case 3u:
          if (v25 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v54 = *((void *)this + 1);
            unint64_t v55 = *((void *)this + 2);
            while (v54 < v55 && !*((unsigned char *)this + 24))
            {
              unint64_t v57 = *(char **)(a1 + 64);
              unint64_t v56 = *(void *)(a1 + 72);
              if ((unint64_t)v57 >= v56)
              {
                unint64_t v59 = (char *)*v8;
                uint64_t v60 = (v57 - (unsigned char *)*v8) >> 3;
                unint64_t v61 = v60 + 1;
                if ((unint64_t)(v60 + 1) >> 61) {
                  goto LABEL_168;
                }
                uint64_t v62 = v56 - (void)v59;
                if (v62 >> 2 > v61) {
                  unint64_t v61 = v62 >> 2;
                }
                if ((unint64_t)v62 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v63 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v63 = v61;
                }
                if (v63)
                {
                  unint64_t v64 = (char *)sub_1000DA54C(v102, v63);
                  unint64_t v59 = *(char **)(a1 + 56);
                  unint64_t v57 = *(char **)(a1 + 64);
                }
                else
                {
                  unint64_t v64 = 0;
                }
                unint64_t v65 = &v64[8 * v60];
                *(void *)unint64_t v65 = 0;
                unsigned int v58 = v65 + 8;
                while (v57 != v59)
                {
                  uint64_t v66 = *((void *)v57 - 1);
                  v57 -= 8;
                  *((void *)v65 - 1) = v66;
                  v65 -= 8;
                }
                *(void *)(a1 + 56) = v65;
                *(void *)(a1 + 64) = v58;
                *(void *)(a1 + 72) = &v64[8 * v63];
                if (v59) {
                  operator delete(v59);
                }
              }
              else
              {
                *(void *)unint64_t v57 = 0;
                unsigned int v58 = v57 + 8;
              }
              *(void *)(a1 + 64) = v58;
              unint64_t v67 = *((void *)this + 1);
              if (v67 > 0xFFFFFFFFFFFFFFF7 || v67 + 8 > *((void *)this + 2))
              {
LABEL_106:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v58 - 1) = *(void *)(*(void *)this + v67);
              unint64_t v55 = *((void *)this + 2);
              unint64_t v54 = *((void *)this + 1) + 8;
              *((void *)this + 1) = v54;
            }
LABEL_107:
            PB::Reader::recallMark();
          }
          else
          {
            int v75 = *(char **)(a1 + 64);
            unint64_t v74 = *(void *)(a1 + 72);
            if ((unint64_t)v75 >= v74)
            {
              unint64_t v88 = (char *)*v8;
              uint64_t v89 = (v75 - (unsigned char *)*v8) >> 3;
              unint64_t v90 = v89 + 1;
              if ((unint64_t)(v89 + 1) >> 61) {
LABEL_168:
              }
                sub_1001D7FD4();
              uint64_t v91 = v74 - (void)v88;
              if (v91 >> 2 > v90) {
                unint64_t v90 = v91 >> 2;
              }
              if ((unint64_t)v91 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v92 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v92 = v90;
              }
              if (v92)
              {
                unint64_t v93 = (char *)sub_1000DA54C(v102, v92);
                unint64_t v88 = *(char **)(a1 + 56);
                int v75 = *(char **)(a1 + 64);
              }
              else
              {
                unint64_t v93 = 0;
              }
              uint64_t v98 = &v93[8 * v89];
              *(void *)uint64_t v98 = 0;
              int v71 = v98 + 8;
              while (v75 != v88)
              {
                uint64_t v99 = *((void *)v75 - 1);
                v75 -= 8;
                *((void *)v98 - 1) = v99;
                v98 -= 8;
              }
              *(void *)(a1 + 56) = v98;
              *(void *)(a1 + 64) = v71;
              *(void *)(a1 + 72) = &v93[8 * v92];
              if (v88) {
                operator delete(v88);
              }
            }
            else
            {
              *(void *)int v75 = 0;
              int v71 = v75 + 8;
            }
            *(void *)(a1 + 64) = v71;
LABEL_153:
            unint64_t v100 = *((void *)this + 1);
            if (v100 <= 0xFFFFFFFFFFFFFFF7 && v100 + 8 <= *((void *)this + 2))
            {
              *(v71 - 1) = *(void *)(*(void *)this + v100);
LABEL_157:
              *((void *)this + 1) += 8;
            }
            else
            {
LABEL_155:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_158:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || *((unsigned char *)this + 24)) {
            return v4 == 0;
          }
          break;
        case 4u:
          *(unsigned char *)(a1 + 88) |= 1u;
          unint64_t v68 = *((void *)this + 1);
          if (v68 > 0xFFFFFFFFFFFFFFF7 || v68 + 8 > *((void *)this + 2)) {
            goto LABEL_155;
          }
          *(void *)(a1 + 80) = *(void *)(*(void *)this + v68);
          goto LABEL_157;
        default:
          if ((PB::Reader::skip(this, v16 >> 3, v25, 0) & 1) == 0) {
            return 0;
          }
          goto LABEL_158;
      }
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v16 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v22 = v2 + 1;
      char v23 = *(unsigned char *)(v13 + v2);
      *((void *)this + 1) = v22;
      v16 |= (unint64_t)(v23 & 0x7F) << v20;
      if ((v23 & 0x80) == 0) {
        goto LABEL_21;
      }
      v20 += 7;
      unint64_t v2 = v22;
      if (v21++ >= 9)
      {
LABEL_20:
        unint64_t v16 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101673D34(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(double **)(result + 32);
  char v5 = *(double **)(result + 40);
  while (v4 != v5)
  {
    double v6 = *v4++;
    double result = PB::Writer::write(this, v6, 1u);
  }
  double v7 = *(double **)(v3 + 8);
  uint64_t v8 = *(double **)(v3 + 16);
  while (v7 != v8)
  {
    double v9 = *v7++;
    double result = PB::Writer::write(this, v9, 2u);
  }
  uint64_t v10 = *(double **)(v3 + 56);
  unint64_t v11 = *(double **)(v3 + 64);
  while (v10 != v11)
  {
    double v12 = *v10++;
    double result = PB::Writer::write(this, v12, 3u);
  }
  if (*(unsigned char *)(v3 + 88))
  {
    double v13 = *(double *)(v3 + 80);
    return PB::Writer::write(this, v13, 4u);
  }
  return result;
}

void *sub_101673DF4(void *result)
{
  *double result = &off_102333B48;
  result[1] = 0;
  return result;
}

void sub_101673E14(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &off_102333B48;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_101673E94(PB::Base *a1)
{
  sub_101673E14(a1);

  operator delete();
}

void *sub_101673ECC(void *result, uint64_t a2)
{
  *double result = &off_102333B48;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_101673F74(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101673FF0(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this, v10 >> 3, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_1016741EC(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2, 1u);
  }
  return result;
}

void *sub_101674208(void *result)
{
  *uint64_t result = off_102333B80;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void sub_10167422C(uint64_t a1)
{
  *(void *)a1 = off_102333B80;
  uint64_t v4 = *(void *)(a1 + 24);
  unint64_t v2 = (void *)(a1 + 24);
  uint64_t v3 = v4;
  *unint64_t v2 = 0;
  if (v4) {
    sub_10068D784((uint64_t)v2, v3);
  }
  uint64_t v5 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = 0;
  if (v5) {
    sub_10068D784(a1 + 16, v5);
  }
  sub_1016B1F34((void ***)(a1 + 8), 0);

  PB::Base::~Base((PB::Base *)a1);
}

void sub_1016742B0(uint64_t a1)
{
  sub_10167422C(a1);

  operator delete();
}

void *sub_1016742E8(void *result, void *a2)
{
  *uint64_t result = off_102333B80;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  if (a2[2]) {
    operator new();
  }
  if (a2[3]) {
    operator new();
  }
  if (a2[1]) {
    operator new();
  }
  return result;
}

uint64_t sub_101674474(void *a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = (const Data *)a1[1];
  if (v5) {
    PB::TextFormatter::format(this, "codedInvocation", v5);
  }
  if (a1[2]) {
    PB::TextFormatter::format();
  }
  if (a1[3]) {
    PB::TextFormatter::format();
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101674500(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v19 = v10 >> 3;
      if ((v10 >> 3) == 4) {
        operator new();
      }
      if (v19 == 3) {
        operator new();
      }
      if (v19 == 2) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this, v19, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101674760(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  if (*(void *)(result + 16)) {
    uint64_t result = PB::Writer::write();
  }
  if (*(void *)(v3 + 24)) {
    uint64_t result = PB::Writer::write();
  }
  int v4 = *(const PB::Data **)(v3 + 8);
  if (v4)
  {
    return PB::Writer::write(this, v4, 4u);
  }
  return result;
}

uint64_t sub_1016747D8(uint64_t result)
{
  *(void *)uint64_t result = &off_102333BB8;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_101674800(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_101674838(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102333BB8;
  *(_DWORD *)(result + 20) = 0;
  char v2 = *(unsigned char *)(a2 + 20);
  if ((v2 & 4) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 16);
    char v3 = 4;
    *(unsigned char *)(result + 20) = 4;
    *(_DWORD *)(result + 16) = v4;
    char v2 = *(unsigned char *)(a2 + 20);
    if ((v2 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if (*(unsigned char *)(a2 + 20))
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 8);
    v3 |= 1u;
    *(unsigned char *)(result + 20) = v3;
    *(_DWORD *)(result + 8) = v5;
    char v2 = *(unsigned char *)(a2 + 20);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 12);
    *(unsigned char *)(result + 20) = v3 | 2;
    *(_DWORD *)(result + 12) = v6;
  }
  return result;
}

uint64_t sub_1016748B8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if (v5)
  {
    PB::TextFormatter::format(this, "level", *(_DWORD *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 20);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((*(unsigned char *)(a1 + 20) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "threshold", *(_DWORD *)(a1 + 12));
  if ((*(unsigned char *)(a1 + 20) & 4) != 0) {
LABEL_4:
  }
    PB::TextFormatter::format(this, "timestamp", *(float *)(a1 + 16));
LABEL_5:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10167495C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 3)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v21 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v22 = *(void *)this;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
        {
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v25 = 0;
          if (v2 <= v21) {
            unint64_t v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v21)
            {
              LODWORD(v25) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_62;
            }
            unint64_t v36 = v21++;
            char v37 = *(unsigned char *)(v22 + v36);
            *((void *)this + 1) = v21;
            v25 |= (unint64_t)(v37 & 0x7F) << v34;
            if ((v37 & 0x80) == 0) {
              break;
            }
            v34 += 7;
            BOOL v14 = v35++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              goto LABEL_61;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v25) = 0;
          }
LABEL_61:
          unint64_t v2 = v36 + 1;
        }
        else
        {
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          while (1)
          {
            unint64_t v2 = v21 + 1;
            *((void *)this + 1) = v21 + 1;
            char v26 = *(unsigned char *)(v22 + v21);
            v25 |= (unint64_t)(v26 & 0x7F) << v23;
            if ((v26 & 0x80) == 0) {
              break;
            }
            v23 += 7;
            unint64_t v21 = v2;
            BOOL v14 = v24++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              break;
            }
          }
        }
LABEL_62:
        *(_DWORD *)(a1 + 12) = v25;
      }
      else if (v20 == 2)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v27 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v28 = *(void *)this;
        if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
        {
          char v38 = 0;
          unsigned int v39 = 0;
          uint64_t v31 = 0;
          if (v2 <= v27) {
            unint64_t v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v27)
            {
              LODWORD(v31) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_67;
            }
            unint64_t v40 = v27++;
            char v41 = *(unsigned char *)(v28 + v40);
            *((void *)this + 1) = v27;
            v31 |= (unint64_t)(v41 & 0x7F) << v38;
            if ((v41 & 0x80) == 0) {
              break;
            }
            v38 += 7;
            BOOL v14 = v39++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
              goto LABEL_66;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v31) = 0;
          }
LABEL_66:
          unint64_t v2 = v40 + 1;
        }
        else
        {
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v31 = 0;
          while (1)
          {
            unint64_t v2 = v27 + 1;
            *((void *)this + 1) = v27 + 1;
            char v32 = *(unsigned char *)(v28 + v27);
            v31 |= (unint64_t)(v32 & 0x7F) << v29;
            if ((v32 & 0x80) == 0) {
              break;
            }
            v29 += 7;
            unint64_t v27 = v2;
            BOOL v14 = v30++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
              break;
            }
          }
        }
LABEL_67:
        *(_DWORD *)(a1 + 8) = v31;
      }
      else if (v20 == 1)
      {
        *(unsigned char *)(a1 + 20) |= 4u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
        {
          *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 4;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101674CE0(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if ((v4 & 4) == 0)
  {
    if ((*(unsigned char *)(result + 20) & 1) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 8), 2u);
    if ((*(unsigned char *)(v3 + 20) & 2) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(result + 16), 1u);
  char v4 = *(unsigned char *)(v3 + 20);
  if (v4) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_7:
  unsigned int v5 = *(_DWORD *)(v3 + 12);

  return PB::Writer::writeVarInt(this, v5, 3u);
}

void *sub_101674D6C(void *result)
{
  *uint64_t result = &off_102333BF0;
  result[1] = 0;
  return result;
}

void sub_101674D8C(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &off_102333BF0;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_101674E0C(PB::Base *a1)
{
  sub_101674D8C(a1);

  operator delete();
}

void *sub_101674E44(void *result, uint64_t a2)
{
  *uint64_t result = &off_102333BF0;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_101674EEC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101674F68(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this, v10 >> 3, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101675164(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2, 1u);
  }
  return result;
}

void *sub_101675180(void *result)
{
  *uint64_t result = &off_102333C28;
  result[1] = 0;
  return result;
}

void sub_1016751A0(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &off_102333C28;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_101675220(PB::Base *a1)
{
  sub_1016751A0(a1);

  operator delete();
}

void *sub_101675258(void *result, uint64_t a2)
{
  *uint64_t result = &off_102333C28;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_101675300(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10167537C(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this, v10 >> 3, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101675578(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2, 1u);
  }
  return result;
}

uint64_t sub_101675594(uint64_t result)
{
  *(void *)uint64_t result = &off_102333C60;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_1016755BC(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_1016755F4(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102333C60;
  *(_DWORD *)(result + 20) = 0;
  if (*(unsigned char *)(a2 + 20))
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 20) = 1;
    *(void *)(result + 8) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 20) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 20) & 2) != 0)
  {
LABEL_5:
    int v4 = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(result + 20) = v2;
    *(_DWORD *)(result + 16) = v4;
  }
  return result;
}

uint64_t sub_101675658(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "state", *(_DWORD *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 20);
  }
  if (v5) {
    PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 8));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_1016756D4(uint64_t a1, PB::Reader *this)
{
  unint64_t v3 = *((void *)this + 1);
  unint64_t v2 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v3 < v2 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v3 > 0xFFFFFFFFFFFFFFF5 || v3 + 10 > v2) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v3 + 1;
        *((void *)this + 1) = v3 + 1;
        char v13 = *(unsigned char *)(v8 + v3);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v3 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v27 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v28 = *(void *)this;
        if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
        {
          char v38 = 0;
          unsigned int v39 = 0;
          uint64_t v31 = 0;
          if (v2 <= v27) {
            unint64_t v3 = *((void *)this + 1);
          }
          else {
            unint64_t v3 = *((void *)this + 2);
          }
          while (1)
          {
            if (v3 == v27)
            {
              LODWORD(v31) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_64;
            }
            unint64_t v40 = v27++;
            char v41 = *(unsigned char *)(v28 + v40);
            *((void *)this + 1) = v27;
            v31 |= (unint64_t)(v41 & 0x7F) << v38;
            if ((v41 & 0x80) == 0) {
              break;
            }
            v38 += 7;
            BOOL v14 = v39++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
              goto LABEL_63;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v31) = 0;
          }
LABEL_63:
          unint64_t v3 = v40 + 1;
        }
        else
        {
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v31 = 0;
          while (1)
          {
            unint64_t v3 = v27 + 1;
            *((void *)this + 1) = v27 + 1;
            char v32 = *(unsigned char *)(v28 + v27);
            v31 |= (unint64_t)(v32 & 0x7F) << v29;
            if ((v32 & 0x80) == 0) {
              break;
            }
            v29 += 7;
            unint64_t v27 = v3;
            BOOL v14 = v30++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
              break;
            }
          }
        }
LABEL_64:
        *(_DWORD *)(a1 + 16) = v31;
      }
      else if (v20 == 1)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v21 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v22 = *(void *)this;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
        {
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v25 = 0;
          if (v2 <= v21) {
            unint64_t v3 = *((void *)this + 1);
          }
          else {
            unint64_t v3 = *((void *)this + 2);
          }
          while (1)
          {
            if (v3 == v21)
            {
              uint64_t v25 = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_60;
            }
            unint64_t v36 = v21++;
            char v37 = *(unsigned char *)(v22 + v36);
            *((void *)this + 1) = v21;
            v25 |= (unint64_t)(v37 & 0x7F) << v34;
            if ((v37 & 0x80) == 0) {
              break;
            }
            v34 += 7;
            BOOL v14 = v35++ > 8;
            if (v14)
            {
              uint64_t v25 = 0;
              goto LABEL_59;
            }
          }
          if (*((unsigned char *)this + 24)) {
            uint64_t v25 = 0;
          }
LABEL_59:
          unint64_t v3 = v36 + 1;
        }
        else
        {
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          while (1)
          {
            unint64_t v3 = v21 + 1;
            *((void *)this + 1) = v21 + 1;
            char v26 = *(unsigned char *)(v22 + v21);
            v25 |= (unint64_t)(v26 & 0x7F) << v23;
            if ((v26 & 0x80) == 0) {
              break;
            }
            v23 += 7;
            unint64_t v21 = v3;
            BOOL v14 = v24++ > 8;
            if (v14)
            {
              uint64_t v25 = 0;
              break;
            }
          }
        }
LABEL_60:
        *(void *)(a1 + 8) = v25;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!result) {
          return result;
        }
        unint64_t v3 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
      }
      int v4 = *((unsigned __int8 *)this + 24);
      if (v3 >= v2 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v3 > v2) {
      unint64_t v2 = v3;
    }
    while (v2 != v3)
    {
      unint64_t v17 = v3 + 1;
      char v18 = *(unsigned char *)(v8 + v3);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v3 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101675A00(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(result + 8), 1u);
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if ((v4 & 2) != 0)
  {
    unsigned int v5 = *(_DWORD *)(v3 + 16);
    return PB::Writer::writeVarInt(this, v5, 2u);
  }
  return result;
}

uint64_t sub_101675A6C(uint64_t result)
{
  *(void *)uint64_t result = &off_102333C98;
  *(_DWORD *)(result + 100) = 0;
  return result;
}

void sub_101675A94(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_101675ACC(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102333C98;
  *(_DWORD *)(result + 100) = 0;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 4) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 24);
    int v3 = 4;
    *(_DWORD *)(result + 100) = 4;
    *(void *)(result + 24) = v4;
    int v2 = *(_DWORD *)(a2 + 100);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 8) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 32);
    v3 |= 8u;
    *(_DWORD *)(result + 100) = v3;
    *(_DWORD *)(result + 32) = v5;
    int v2 = *(_DWORD *)(a2 + 100);
  }
LABEL_6:
  if ((v2 & 0x400) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 60);
    v3 |= 0x400u;
    *(_DWORD *)(result + 100) = v3;
    *(_DWORD *)(result + 60) = v6;
    int v2 = *(_DWORD *)(a2 + 100);
    if ((v2 & 2) == 0)
    {
LABEL_8:
      if ((v2 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_27;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_DWORD *)(result + 100) = v3;
  *(void *)(result + 16) = v7;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x20) == 0)
  {
LABEL_9:
    if ((v2 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_28;
  }
LABEL_27:
  int v8 = *(_DWORD *)(a2 + 40);
  v3 |= 0x20u;
  *(_DWORD *)(result + 100) = v3;
  *(_DWORD *)(result + 40) = v8;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 1) == 0)
  {
LABEL_10:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t v9 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_DWORD *)(result + 100) = v3;
  *(void *)(result + 8) = v9;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x1000) == 0)
  {
LABEL_11:
    if ((v2 & 0x800) == 0) {
      goto LABEL_12;
    }
    goto LABEL_30;
  }
LABEL_29:
  int v10 = *(_DWORD *)(a2 + 68);
  v3 |= 0x1000u;
  *(_DWORD *)(result + 100) = v3;
  *(_DWORD *)(result + 68) = v10;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x800) == 0)
  {
LABEL_12:
    if ((v2 & 0x80) == 0) {
      goto LABEL_13;
    }
    goto LABEL_31;
  }
LABEL_30:
  int v11 = *(_DWORD *)(a2 + 64);
  v3 |= 0x800u;
  *(_DWORD *)(result + 100) = v3;
  *(_DWORD *)(result + 64) = v11;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x80) == 0)
  {
LABEL_13:
    if ((v2 & 0x40) == 0) {
      goto LABEL_14;
    }
    goto LABEL_32;
  }
LABEL_31:
  int v12 = *(_DWORD *)(a2 + 48);
  v3 |= 0x80u;
  *(_DWORD *)(result + 100) = v3;
  *(_DWORD *)(result + 48) = v12;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x40) == 0)
  {
LABEL_14:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_33;
  }
LABEL_32:
  int v13 = *(_DWORD *)(a2 + 44);
  v3 |= 0x40u;
  *(_DWORD *)(result + 100) = v3;
  *(_DWORD *)(result + 44) = v13;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x2000) == 0)
  {
LABEL_15:
    if ((v2 & 0x100) == 0) {
      goto LABEL_16;
    }
    goto LABEL_34;
  }
LABEL_33:
  int v14 = *(_DWORD *)(a2 + 72);
  v3 |= 0x2000u;
  *(_DWORD *)(result + 100) = v3;
  *(_DWORD *)(result + 72) = v14;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x100) == 0)
  {
LABEL_16:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_35;
  }
LABEL_34:
  int v15 = *(_DWORD *)(a2 + 52);
  v3 |= 0x100u;
  *(_DWORD *)(result + 100) = v3;
  *(_DWORD *)(result + 52) = v15;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x40000) == 0)
  {
LABEL_17:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_36;
  }
LABEL_35:
  int v16 = *(_DWORD *)(a2 + 92);
  v3 |= 0x40000u;
  *(_DWORD *)(result + 100) = v3;
  *(_DWORD *)(result + 92) = v16;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x20000) == 0)
  {
LABEL_18:
    if ((v2 & 0x200) == 0) {
      goto LABEL_19;
    }
    goto LABEL_37;
  }
LABEL_36:
  int v17 = *(_DWORD *)(a2 + 88);
  v3 |= 0x20000u;
  *(_DWORD *)(result + 100) = v3;
  *(_DWORD *)(result + 88) = v17;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x200) == 0)
  {
LABEL_19:
    if ((v2 & 0x10) == 0) {
      goto LABEL_20;
    }
    goto LABEL_38;
  }
LABEL_37:
  int v18 = *(_DWORD *)(a2 + 56);
  v3 |= 0x200u;
  *(_DWORD *)(result + 100) = v3;
  *(_DWORD *)(result + 56) = v18;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x10) == 0)
  {
LABEL_20:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_39;
  }
LABEL_38:
  int v19 = *(_DWORD *)(a2 + 36);
  v3 |= 0x10u;
  *(_DWORD *)(result + 100) = v3;
  *(_DWORD *)(result + 36) = v19;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x10000) == 0)
  {
LABEL_21:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_40;
  }
LABEL_39:
  int v20 = *(_DWORD *)(a2 + 84);
  v3 |= 0x10000u;
  *(_DWORD *)(result + 100) = v3;
  *(_DWORD *)(result + 84) = v20;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x8000) == 0)
  {
LABEL_22:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_41;
  }
LABEL_40:
  int v21 = *(_DWORD *)(a2 + 80);
  v3 |= 0x8000u;
  *(_DWORD *)(result + 100) = v3;
  *(_DWORD *)(result + 80) = v21;
  int v2 = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x4000) == 0)
  {
LABEL_23:
    if ((v2 & 0x80000) == 0) {
      return result;
    }
LABEL_42:
    char v23 = *(unsigned char *)(a2 + 96);
    *(_DWORD *)(result + 100) = v3 | 0x80000;
    *(unsigned char *)(result + 96) = v23;
    return result;
  }
LABEL_41:
  int v22 = *(_DWORD *)(a2 + 76);
  v3 |= 0x4000u;
  *(_DWORD *)(result + 100) = v3;
  *(_DWORD *)(result + 76) = v22;
  if ((*(_DWORD *)(a2 + 100) & 0x80000) != 0) {
    goto LABEL_42;
  }
  return result;
}

uint64_t sub_101675D28(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 8) != 0)
  {
    PB::TextFormatter::format(this, "dataBufferSize", *(_DWORD *)(a1 + 32));
    int v5 = *(_DWORD *)(a1 + 100);
    if ((v5 & 0x10) == 0)
    {
LABEL_3:
      if ((v5 & 0x80000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_27;
    }
  }
  else if ((v5 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "gestureLengthSeconds", *(float *)(a1 + 36));
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x80000) == 0)
  {
LABEL_4:
    if ((v5 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(this, "isWristLooselyLevel", *(unsigned char *)(a1 + 96));
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x20) == 0)
  {
LABEL_5:
    if ((v5 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "negPeakHeight", *(float *)(a1 + 40));
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x40) == 0)
  {
LABEL_6:
    if ((v5 & 0x80) == 0) {
      goto LABEL_7;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(this, "negPeakLeftHalfWidth", *(_DWORD *)(a1 + 44));
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x80) == 0)
  {
LABEL_7:
    if ((v5 & 1) == 0) {
      goto LABEL_8;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "negPeakRightHalfWidth", *(_DWORD *)(a1 + 48));
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 1) == 0)
  {
LABEL_8:
    if ((v5 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(this, "negPeakTimestampUs", *(void *)(a1 + 8));
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x100) == 0)
  {
LABEL_9:
    if ((v5 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(this, "negPeakTotalAngleDegrees", *(float *)(a1 + 52));
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x200) == 0)
  {
LABEL_10:
    if ((v5 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(this, "pauseBtwPeaksSeconds", *(float *)(a1 + 56));
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x400) == 0)
  {
LABEL_11:
    if ((v5 & 0x800) == 0) {
      goto LABEL_12;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(this, "posPeakHeight", *(float *)(a1 + 60));
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x800) == 0)
  {
LABEL_12:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "posPeakLeftHalfWidth", *(_DWORD *)(a1 + 64));
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x1000) == 0)
  {
LABEL_13:
    if ((v5 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "posPeakRightHalfWidth", *(_DWORD *)(a1 + 68));
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 2) == 0)
  {
LABEL_14:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "posPeakTimestampUs", *(void *)(a1 + 16));
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x2000) == 0)
  {
LABEL_15:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "posPeakTotalAngleDegrees", *(float *)(a1 + 72));
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x4000) == 0)
  {
LABEL_16:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "rotZRangeDuringGestureRad", *(float *)(a1 + 76));
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x8000) == 0)
  {
LABEL_17:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "screenTiltAtEndDegrees", *(float *)(a1 + 80));
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x10000) == 0)
  {
LABEL_18:
    if ((v5 & 4) == 0) {
      goto LABEL_19;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(this, "screenTiltAtStartDegrees", *(float *)(a1 + 84));
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 4) == 0)
  {
LABEL_19:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(this, "timestampUs", *(void *)(a1 + 24));
  int v5 = *(_DWORD *)(a1 + 100);
  if ((v5 & 0x20000) == 0)
  {
LABEL_20:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
LABEL_43:
  PB::TextFormatter::format(this, "wristAngleDiffBtwPeaksDegrees", *(float *)(a1 + 88));
  if ((*(_DWORD *)(a1 + 100) & 0x40000) != 0) {
LABEL_21:
  }
    PB::TextFormatter::format(this, "wristAngleToHorizontalDegrees", *(float *)(a1 + 92));
LABEL_22:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101675FEC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_DWORD *)(a1 + 100) |= 4u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v71 = 0;
                unsigned int v72 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_179;
                  }
                  unint64_t v73 = v20++;
                  char v74 = *(unsigned char *)(v21 + v73);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v74 & 0x7F) << v71;
                  if ((v74 & 0x80) == 0) {
                    break;
                  }
                  v71 += 7;
                  BOOL v14 = v72++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
                    goto LABEL_178;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
LABEL_178:
                unint64_t v2 = v73 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_179;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                uint64_t v24 = 0;
              }
LABEL_179:
              *(void *)(a1 + 24) = v24;
              goto LABEL_215;
            case 2u:
              *(_DWORD *)(a1 + 100) |= 8u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v75 = 0;
                unsigned int v76 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_184;
                  }
                  unint64_t v77 = v27++;
                  char v78 = *(unsigned char *)(v28 + v77);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v78 & 0x7F) << v75;
                  if ((v78 & 0x80) == 0) {
                    break;
                  }
                  v75 += 7;
                  BOOL v14 = v76++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_183:
                    unint64_t v2 = v77 + 1;
                    goto LABEL_184;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_183;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_184;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_184:
              *(_DWORD *)(a1 + 32) = v31;
              goto LABEL_215;
            case 3u:
              *(_DWORD *)(a1 + 100) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_112;
              }
              *(_DWORD *)(a1 + 60) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_174;
            case 4u:
              *(_DWORD *)(a1 + 100) |= 2u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v79 = 0;
                unsigned int v80 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    uint64_t v37 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_189;
                  }
                  unint64_t v81 = v33++;
                  char v82 = *(unsigned char *)(v34 + v81);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v82 & 0x7F) << v79;
                  if ((v82 & 0x80) == 0) {
                    break;
                  }
                  v79 += 7;
                  BOOL v14 = v80++ > 8;
                  if (v14)
                  {
                    uint64_t v37 = 0;
LABEL_188:
                    unint64_t v2 = v81 + 1;
                    goto LABEL_189;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v37 = 0;
                }
                goto LABEL_188;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_189;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              uint64_t v37 = 0;
LABEL_189:
              *(void *)(a1 + 16) = v37;
              goto LABEL_215;
            case 5u:
              *(_DWORD *)(a1 + 100) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_112;
              }
              *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_174;
            case 6u:
              *(_DWORD *)(a1 + 100) |= 1u;
              unint64_t v39 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v40 = *(void *)this;
              if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
              {
                char v83 = 0;
                unsigned int v84 = 0;
                uint64_t v43 = 0;
                if (v2 <= v39) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v39)
                  {
                    uint64_t v43 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_194;
                  }
                  unint64_t v85 = v39++;
                  char v86 = *(unsigned char *)(v40 + v85);
                  *((void *)this + 1) = v39;
                  v43 |= (unint64_t)(v86 & 0x7F) << v83;
                  if ((v86 & 0x80) == 0) {
                    break;
                  }
                  v83 += 7;
                  BOOL v14 = v84++ > 8;
                  if (v14)
                  {
                    uint64_t v43 = 0;
LABEL_193:
                    unint64_t v2 = v85 + 1;
                    goto LABEL_194;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v43 = 0;
                }
                goto LABEL_193;
              }
              char v41 = 0;
              unsigned int v42 = 0;
              uint64_t v43 = 0;
              do
              {
                unint64_t v2 = v39 + 1;
                *((void *)this + 1) = v39 + 1;
                char v44 = *(unsigned char *)(v40 + v39);
                v43 |= (unint64_t)(v44 & 0x7F) << v41;
                if ((v44 & 0x80) == 0) {
                  goto LABEL_194;
                }
                v41 += 7;
                unint64_t v39 = v2;
                BOOL v14 = v42++ > 8;
              }
              while (!v14);
              uint64_t v43 = 0;
LABEL_194:
              *(void *)(a1 + 8) = v43;
              goto LABEL_215;
            case 7u:
              *(_DWORD *)(a1 + 100) |= 0x1000u;
              unint64_t v45 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v46 = *(void *)this;
              if (v45 > 0xFFFFFFFFFFFFFFF5 || v45 + 10 > v2)
              {
                char v87 = 0;
                unsigned int v88 = 0;
                uint64_t v49 = 0;
                if (v2 <= v45) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v45)
                  {
                    LODWORD(v49) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_199;
                  }
                  unint64_t v89 = v45++;
                  char v90 = *(unsigned char *)(v46 + v89);
                  *((void *)this + 1) = v45;
                  v49 |= (unint64_t)(v90 & 0x7F) << v87;
                  if ((v90 & 0x80) == 0) {
                    break;
                  }
                  v87 += 7;
                  BOOL v14 = v88++ > 8;
                  if (v14)
                  {
                    LODWORD(v49) = 0;
LABEL_198:
                    unint64_t v2 = v89 + 1;
                    goto LABEL_199;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v49) = 0;
                }
                goto LABEL_198;
              }
              char v47 = 0;
              unsigned int v48 = 0;
              uint64_t v49 = 0;
              do
              {
                unint64_t v2 = v45 + 1;
                *((void *)this + 1) = v45 + 1;
                char v50 = *(unsigned char *)(v46 + v45);
                v49 |= (unint64_t)(v50 & 0x7F) << v47;
                if ((v50 & 0x80) == 0) {
                  goto LABEL_199;
                }
                v47 += 7;
                unint64_t v45 = v2;
                BOOL v14 = v48++ > 8;
              }
              while (!v14);
              LODWORD(v49) = 0;
LABEL_199:
              *(_DWORD *)(a1 + 68) = v49;
              goto LABEL_215;
            case 8u:
              *(_DWORD *)(a1 + 100) |= 0x800u;
              unint64_t v51 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v52 = *(void *)this;
              if (v51 > 0xFFFFFFFFFFFFFFF5 || v51 + 10 > v2)
              {
                char v91 = 0;
                unsigned int v92 = 0;
                uint64_t v55 = 0;
                if (v2 <= v51) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v51)
                  {
                    LODWORD(v55) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_204;
                  }
                  unint64_t v93 = v51++;
                  char v94 = *(unsigned char *)(v52 + v93);
                  *((void *)this + 1) = v51;
                  v55 |= (unint64_t)(v94 & 0x7F) << v91;
                  if ((v94 & 0x80) == 0) {
                    break;
                  }
                  v91 += 7;
                  BOOL v14 = v92++ > 8;
                  if (v14)
                  {
                    LODWORD(v55) = 0;
LABEL_203:
                    unint64_t v2 = v93 + 1;
                    goto LABEL_204;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v55) = 0;
                }
                goto LABEL_203;
              }
              char v53 = 0;
              unsigned int v54 = 0;
              uint64_t v55 = 0;
              do
              {
                unint64_t v2 = v51 + 1;
                *((void *)this + 1) = v51 + 1;
                char v56 = *(unsigned char *)(v52 + v51);
                v55 |= (unint64_t)(v56 & 0x7F) << v53;
                if ((v56 & 0x80) == 0) {
                  goto LABEL_204;
                }
                v53 += 7;
                unint64_t v51 = v2;
                BOOL v14 = v54++ > 8;
              }
              while (!v14);
              LODWORD(v55) = 0;
LABEL_204:
              *(_DWORD *)(a1 + 64) = v55;
              goto LABEL_215;
            case 9u:
              *(_DWORD *)(a1 + 100) |= 0x80u;
              unint64_t v57 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v58 = *(void *)this;
              if (v57 > 0xFFFFFFFFFFFFFFF5 || v57 + 10 > v2)
              {
                char v95 = 0;
                unsigned int v96 = 0;
                uint64_t v61 = 0;
                if (v2 <= v57) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v57)
                  {
                    LODWORD(v61) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_209;
                  }
                  unint64_t v97 = v57++;
                  char v98 = *(unsigned char *)(v58 + v97);
                  *((void *)this + 1) = v57;
                  v61 |= (unint64_t)(v98 & 0x7F) << v95;
                  if ((v98 & 0x80) == 0) {
                    break;
                  }
                  v95 += 7;
                  BOOL v14 = v96++ > 8;
                  if (v14)
                  {
                    LODWORD(v61) = 0;
LABEL_208:
                    unint64_t v2 = v97 + 1;
                    goto LABEL_209;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v61) = 0;
                }
                goto LABEL_208;
              }
              char v59 = 0;
              unsigned int v60 = 0;
              uint64_t v61 = 0;
              do
              {
                unint64_t v2 = v57 + 1;
                *((void *)this + 1) = v57 + 1;
                char v62 = *(unsigned char *)(v58 + v57);
                v61 |= (unint64_t)(v62 & 0x7F) << v59;
                if ((v62 & 0x80) == 0) {
                  goto LABEL_209;
                }
                v59 += 7;
                unint64_t v57 = v2;
                BOOL v14 = v60++ > 8;
              }
              while (!v14);
              LODWORD(v61) = 0;
LABEL_209:
              *(_DWORD *)(a1 + 48) = v61;
              goto LABEL_215;
            case 0xAu:
              *(_DWORD *)(a1 + 100) |= 0x40u;
              unint64_t v63 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v64 = *(void *)this;
              if (v63 > 0xFFFFFFFFFFFFFFF5 || v63 + 10 > v2)
              {
                char v99 = 0;
                unsigned int v100 = 0;
                uint64_t v67 = 0;
                if (v2 <= v63) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v63)
                  {
                    LODWORD(v67) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_214;
                  }
                  unint64_t v101 = v63++;
                  char v102 = *(unsigned char *)(v64 + v101);
                  *((void *)this + 1) = v63;
                  v67 |= (unint64_t)(v102 & 0x7F) << v99;
                  if ((v102 & 0x80) == 0) {
                    break;
                  }
                  v99 += 7;
                  BOOL v14 = v100++ > 8;
                  if (v14)
                  {
                    LODWORD(v67) = 0;
LABEL_213:
                    unint64_t v2 = v101 + 1;
                    goto LABEL_214;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v67) = 0;
                }
                goto LABEL_213;
              }
              char v65 = 0;
              unsigned int v66 = 0;
              uint64_t v67 = 0;
              do
              {
                unint64_t v2 = v63 + 1;
                *((void *)this + 1) = v63 + 1;
                char v68 = *(unsigned char *)(v64 + v63);
                v67 |= (unint64_t)(v68 & 0x7F) << v65;
                if ((v68 & 0x80) == 0) {
                  goto LABEL_214;
                }
                v65 += 7;
                unint64_t v63 = v2;
                BOOL v14 = v66++ > 8;
              }
              while (!v14);
              LODWORD(v67) = 0;
LABEL_214:
              *(_DWORD *)(a1 + 44) = v67;
LABEL_215:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 0xBu:
              *(_DWORD *)(a1 + 100) |= 0x2000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_112;
              }
              *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_174;
            case 0xCu:
              *(_DWORD *)(a1 + 100) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_112;
              }
              *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_174;
            case 0xDu:
              *(_DWORD *)(a1 + 100) |= 0x40000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_112;
              }
              *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_174;
            case 0xEu:
              *(_DWORD *)(a1 + 100) |= 0x20000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_112;
              }
              *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_174;
            case 0xFu:
              *(_DWORD *)(a1 + 100) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_112;
              }
              *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_174;
            case 0x10u:
              *(_DWORD *)(a1 + 100) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_112;
              }
              *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_174;
            case 0x11u:
              *(_DWORD *)(a1 + 100) |= 0x10000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_112;
              }
              *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_174;
            case 0x12u:
              *(_DWORD *)(a1 + 100) |= 0x8000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_112;
              }
              *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_174;
            case 0x13u:
              *(_DWORD *)(a1 + 100) |= 0x4000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v2);
LABEL_174:
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_112:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_215;
            case 0x14u:
              *(_DWORD *)(a1 + 100) |= 0x80000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v70 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v69 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v70 = v69 != 0;
              }
              *(unsigned char *)(a1 + 96) = v70;
              goto LABEL_215;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_215;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_101676BD0(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 100);
  if ((v4 & 4) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(result + 24), 1u);
    int v4 = *(_DWORD *)(v3 + 100);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 0x400) == 0) {
        goto LABEL_4;
      }
      goto LABEL_24;
    }
  }
  else if ((v4 & 8) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 32), 2u);
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x400) == 0)
  {
LABEL_4:
    if ((v4 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 60), 3u);
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 2) == 0)
  {
LABEL_5:
    if ((v4 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 16), 4u);
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x20) == 0)
  {
LABEL_6:
    if ((v4 & 1) == 0) {
      goto LABEL_7;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40), 5u);
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 1) == 0)
  {
LABEL_7:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 8), 6u);
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x1000) == 0)
  {
LABEL_8:
    if ((v4 & 0x800) == 0) {
      goto LABEL_9;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 68), 7u);
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x800) == 0)
  {
LABEL_9:
    if ((v4 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 64), 8u);
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x80) == 0)
  {
LABEL_10:
    if ((v4 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 48), 9u);
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x40) == 0)
  {
LABEL_11:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 44), 0xAu);
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x2000) == 0)
  {
LABEL_12:
    if ((v4 & 0x100) == 0) {
      goto LABEL_13;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72), 0xBu);
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x100) == 0)
  {
LABEL_13:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52), 0xCu);
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x40000) == 0)
  {
LABEL_14:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 92), 0xDu);
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x20000) == 0)
  {
LABEL_15:
    if ((v4 & 0x200) == 0) {
      goto LABEL_16;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 88), 0xEu);
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x200) == 0)
  {
LABEL_16:
    if ((v4 & 0x10) == 0) {
      goto LABEL_17;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56), 0xFu);
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x10) == 0)
  {
LABEL_17:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36), 0x10u);
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x10000) == 0)
  {
LABEL_18:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 84), 0x11u);
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x8000) == 0)
  {
LABEL_19:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_20;
    }
LABEL_40:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76), 0x13u);
    if ((*(_DWORD *)(v3 + 100) & 0x80000) == 0) {
      return result;
    }
    goto LABEL_41;
  }
LABEL_39:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80), 0x12u);
  int v4 = *(_DWORD *)(v3 + 100);
  if ((v4 & 0x4000) != 0) {
    goto LABEL_40;
  }
LABEL_20:
  if ((v4 & 0x80000) == 0) {
    return result;
  }
LABEL_41:
  char v5 = *(unsigned char *)(v3 + 96);

  return PB::Writer::write(this, v5, 0x14u);
}

uint64_t sub_101676E38(uint64_t result)
{
  *(void *)uint64_t result = &off_102333CD0;
  *(_DWORD *)(result + 28) = 0;
  return result;
}

void sub_101676E60(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

float sub_101676E98(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102333CD0;
  *(_DWORD *)(a1 + 28) = 0;
  char v2 = *(unsigned char *)(a2 + 28);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 28) = 1;
    *(void *)(a1 + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 28) & 8) != 0)
  {
LABEL_5:
    float result = *(float *)(a2 + 24);
    v3 |= 8u;
    *(unsigned char *)(a1 + 28) = v3;
    *(float *)(a1 + 24) = result;
    char v2 = *(unsigned char *)(a2 + 28);
  }
LABEL_6:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 2) == 0) {
      return result;
    }
LABEL_10:
    float result = *(float *)(a2 + 16);
    *(unsigned char *)(a1 + 28) = v3 | 2;
    *(float *)(a1 + 16) = result;
    return result;
  }
  float result = *(float *)(a2 + 20);
  v3 |= 4u;
  *(unsigned char *)(a1 + 28) = v3;
  *(float *)(a1 + 20) = result;
  if ((*(unsigned char *)(a2 + 28) & 2) != 0) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_101676F34(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "maxSymmetryAllowanceFactor", *(float *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 28);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a1 + 28) & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "minPeakRotationRateThresholdRps", *(float *)(a1 + 20));
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(this, "minTwistAngleThresholdDeg", *(float *)(a1 + 24));
  if (*(unsigned char *)(a1 + 28)) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "timestampUs", *(void *)(a1 + 8));
LABEL_6:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101676FF8(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 28) |= 1u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v27 = 0;
                unsigned int v28 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_53;
                  }
                  unint64_t v29 = v20++;
                  char v30 = *(unsigned char *)(v21 + v29);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v30 & 0x7F) << v27;
                  if ((v30 & 0x80) == 0) {
                    break;
                  }
                  v27 += 7;
                  BOOL v14 = v28++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
                    goto LABEL_52;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
LABEL_52:
                unint64_t v2 = v29 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_53;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                uint64_t v24 = 0;
              }
LABEL_53:
              *(void *)(a1 + 8) = v24;
              goto LABEL_54;
            case 2u:
              *(unsigned char *)(a1 + 28) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_39;
              }
              *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_48;
            case 3u:
              *(unsigned char *)(a1 + 28) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_39;
              }
              *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_48;
            case 4u:
              *(unsigned char *)(a1 + 28) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
LABEL_48:
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_39:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_54;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
LABEL_54:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_101677324(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 28);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(result + 8), 1u);
    char v4 = *(unsigned char *)(v3 + 28);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20), 3u);
      if ((*(unsigned char *)(v3 + 28) & 2) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 28) & 8) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24), 2u);
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_9:
  float v5 = *(float *)(v3 + 16);

  return PB::Writer::write(this, v5, 4u);
}

uint64_t sub_1016773CC(uint64_t result)
{
  *(void *)uint64_t result = &off_102333D08;
  *(_DWORD *)(result + 52) = 0;
  return result;
}

void sub_1016773F4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

double sub_10167742C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102333D08;
  *(_DWORD *)(a1 + 52) = 0;
  __int16 v2 = *(_WORD *)(a2 + 52);
  if (v2)
  {
    double result = *(double *)(a2 + 8);
    __int16 v3 = 1;
    *(_WORD *)(a1 + 52) = 1;
    *(double *)(a1 + 8) = result;
    __int16 v2 = *(_WORD *)(a2 + 52);
    if ((v2 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 0x20) != 0)
  {
LABEL_5:
    LODWORD(result) = *(_DWORD *)(a2 + 36);
    v3 |= 0x20u;
    *(_WORD *)(a1 + 52) = v3;
    *(_DWORD *)(a1 + 36) = LODWORD(result);
    __int16 v2 = *(_WORD *)(a2 + 52);
  }
LABEL_6:
  if ((v2 & 0x40) != 0)
  {
    LODWORD(result) = *(_DWORD *)(a2 + 40);
    v3 |= 0x40u;
    *(_WORD *)(a1 + 52) = v3;
    *(_DWORD *)(a1 + 40) = LODWORD(result);
    __int16 v2 = *(_WORD *)(a2 + 52);
    if ((v2 & 0x80) == 0)
    {
LABEL_8:
      if ((v2 & 4) == 0) {
        goto LABEL_9;
      }
      goto LABEL_18;
    }
  }
  else if ((v2 & 0x80) == 0)
  {
    goto LABEL_8;
  }
  LODWORD(result) = *(_DWORD *)(a2 + 44);
  v3 |= 0x80u;
  *(_WORD *)(a1 + 52) = v3;
  *(_DWORD *)(a1 + 44) = LODWORD(result);
  __int16 v2 = *(_WORD *)(a2 + 52);
  if ((v2 & 4) == 0)
  {
LABEL_9:
    if ((v2 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_19;
  }
LABEL_18:
  LODWORD(result) = *(_DWORD *)(a2 + 24);
  v3 |= 4u;
  *(_WORD *)(a1 + 52) = v3;
  *(_DWORD *)(a1 + 24) = LODWORD(result);
  __int16 v2 = *(_WORD *)(a2 + 52);
  if ((v2 & 8) == 0)
  {
LABEL_10:
    if ((v2 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_20;
  }
LABEL_19:
  LODWORD(result) = *(_DWORD *)(a2 + 28);
  v3 |= 8u;
  *(_WORD *)(a1 + 52) = v3;
  *(_DWORD *)(a1 + 28) = LODWORD(result);
  __int16 v2 = *(_WORD *)(a2 + 52);
  if ((v2 & 0x10) == 0)
  {
LABEL_11:
    if ((v2 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_21;
  }
LABEL_20:
  LODWORD(result) = *(_DWORD *)(a2 + 32);
  v3 |= 0x10u;
  *(_WORD *)(a1 + 52) = v3;
  *(_DWORD *)(a1 + 32) = LODWORD(result);
  __int16 v2 = *(_WORD *)(a2 + 52);
  if ((v2 & 0x100) == 0)
  {
LABEL_12:
    if ((v2 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_22;
  }
LABEL_21:
  char v5 = *(unsigned char *)(a2 + 48);
  v3 |= 0x100u;
  *(_WORD *)(a1 + 52) = v3;
  *(unsigned char *)(a1 + 48) = v5;
  __int16 v2 = *(_WORD *)(a2 + 52);
  if ((v2 & 0x200) == 0)
  {
LABEL_13:
    if ((v2 & 0x400) == 0) {
      goto LABEL_14;
    }
    goto LABEL_23;
  }
LABEL_22:
  char v6 = *(unsigned char *)(a2 + 49);
  v3 |= 0x200u;
  *(_WORD *)(a1 + 52) = v3;
  *(unsigned char *)(a1 + 49) = v6;
  __int16 v2 = *(_WORD *)(a2 + 52);
  if ((v2 & 0x400) == 0)
  {
LABEL_14:
    if ((v2 & 2) == 0) {
      return result;
    }
LABEL_24:
    double result = *(double *)(a2 + 16);
    *(_WORD *)(a1 + 52) = v3 | 2;
    *(double *)(a1 + 16) = result;
    return result;
  }
LABEL_23:
  char v7 = *(unsigned char *)(a2 + 50);
  v3 |= 0x400u;
  *(_WORD *)(a1 + 52) = v3;
  *(unsigned char *)(a1 + 50) = v7;
  if ((*(_WORD *)(a2 + 52) & 2) != 0) {
    goto LABEL_24;
  }
  return result;
}

uint64_t sub_10167758C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 52);
  if (v5)
  {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
    __int16 v5 = *(_WORD *)(a1 + 52);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 0x100) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "timestampPast", *(double *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 52);
  if ((v5 & 0x100) == 0)
  {
LABEL_4:
    if ((v5 & 0x200) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "validX", *(unsigned char *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 52);
  if ((v5 & 0x200) == 0)
  {
LABEL_5:
    if ((v5 & 0x400) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "validY", *(unsigned char *)(a1 + 49));
  __int16 v5 = *(_WORD *)(a1 + 52);
  if ((v5 & 0x400) == 0)
  {
LABEL_6:
    if ((v5 & 4) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "validZ", *(unsigned char *)(a1 + 50));
  __int16 v5 = *(_WORD *)(a1 + 52);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "velocityUncX", *(float *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 52);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "velocityUncY", *(float *)(a1 + 28));
  __int16 v5 = *(_WORD *)(a1 + 52);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "velocityUncZ", *(float *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 52);
  if ((v5 & 0x20) == 0)
  {
LABEL_10:
    if ((v5 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "velocityX", *(float *)(a1 + 36));
  __int16 v5 = *(_WORD *)(a1 + 52);
  if ((v5 & 0x40) == 0)
  {
LABEL_11:
    if ((v5 & 0x80) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_25:
  PB::TextFormatter::format(this, "velocityY", *(float *)(a1 + 40));
  if ((*(_WORD *)(a1 + 52) & 0x80) != 0) {
LABEL_12:
  }
    PB::TextFormatter::format(this, "velocityZ", *(float *)(a1 + 44));
LABEL_13:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101677730(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(_WORD *)(a1 + 52) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_50;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          goto LABEL_62;
        case 2u:
          *(_WORD *)(a1 + 52) |= 0x20u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_50;
          }
          *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_43;
        case 3u:
          *(_WORD *)(a1 + 52) |= 0x40u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_50;
          }
          *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_43;
        case 4u:
          *(_WORD *)(a1 + 52) |= 0x80u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_50;
          }
          *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_43;
        case 5u:
          *(_WORD *)(a1 + 52) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_50;
          }
          *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_43;
        case 6u:
          *(_WORD *)(a1 + 52) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_50;
          }
          *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_43;
        case 7u:
          *(_WORD *)(a1 + 52) |= 0x10u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_50;
          }
          *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
LABEL_43:
          unint64_t v2 = *((void *)this + 1) + 4;
          goto LABEL_63;
        case 8u:
          *(_WORD *)(a1 + 52) |= 0x100u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 >= *((void *)this + 2))
          {
            BOOL v21 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            int v20 = *(unsigned __int8 *)(*(void *)this + v2++);
            *((void *)this + 1) = v2;
            BOOL v21 = v20 != 0;
          }
          *(unsigned char *)(a1 + 48) = v21;
          break;
        case 9u:
          *(_WORD *)(a1 + 52) |= 0x200u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 >= *((void *)this + 2))
          {
            BOOL v26 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            int v25 = *(unsigned __int8 *)(*(void *)this + v2++);
            *((void *)this + 1) = v2;
            BOOL v26 = v25 != 0;
          }
          *(unsigned char *)(a1 + 49) = v26;
          break;
        case 0xAu:
          *(_WORD *)(a1 + 52) |= 0x400u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 >= *((void *)this + 2))
          {
            BOOL v23 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            int v22 = *(unsigned __int8 *)(*(void *)this + v2++);
            *((void *)this + 1) = v2;
            BOOL v23 = v22 != 0;
          }
          *(unsigned char *)(a1 + 50) = v23;
          break;
        case 0xBu:
          *(_WORD *)(a1 + 52) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
          {
            *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
LABEL_62:
            unint64_t v2 = *((void *)this + 1) + 8;
LABEL_63:
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_50:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101677B78(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 52);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8), 1u);
    __int16 v4 = *(_WORD *)(v3 + 52);
    if ((v4 & 0x20) == 0)
    {
LABEL_3:
      if ((v4 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v4 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36), 2u);
  __int16 v4 = *(_WORD *)(v3 + 52);
  if ((v4 & 0x40) == 0)
  {
LABEL_4:
    if ((v4 & 0x80) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40), 3u);
  __int16 v4 = *(_WORD *)(v3 + 52);
  if ((v4 & 0x80) == 0)
  {
LABEL_5:
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44), 4u);
  __int16 v4 = *(_WORD *)(v3 + 52);
  if ((v4 & 4) == 0)
  {
LABEL_6:
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24), 5u);
  __int16 v4 = *(_WORD *)(v3 + 52);
  if ((v4 & 8) == 0)
  {
LABEL_7:
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28), 6u);
  __int16 v4 = *(_WORD *)(v3 + 52);
  if ((v4 & 0x10) == 0)
  {
LABEL_8:
    if ((v4 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32), 7u);
  __int16 v4 = *(_WORD *)(v3 + 52);
  if ((v4 & 0x100) == 0)
  {
LABEL_9:
    if ((v4 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 48), 8u);
  __int16 v4 = *(_WORD *)(v3 + 52);
  if ((v4 & 0x200) == 0)
  {
LABEL_10:
    if ((v4 & 0x400) == 0) {
      goto LABEL_11;
    }
LABEL_22:
    uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 50), 0xAu);
    if ((*(_WORD *)(v3 + 52) & 2) == 0) {
      return result;
    }
    goto LABEL_23;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 49), 9u);
  __int16 v4 = *(_WORD *)(v3 + 52);
  if ((v4 & 0x400) != 0) {
    goto LABEL_22;
  }
LABEL_11:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_23:
  double v5 = *(double *)(v3 + 16);

  return PB::Writer::write(this, v5, 0xBu);
}

double sub_101677CE4(uint64_t a1)
{
  *(void *)a1 = &off_102333D40;
  *(_DWORD *)(a1 + 140) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  return result;
}

void sub_101677D24(PB::Base *this)
{
  *(void *)this = &off_102333D40;
  unint64_t v2 = (void *)*((void *)this + 10);
  if (v2)
  {
    *((void *)this + 11) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 7);
  if (v3)
  {
    *((void *)this + 8) = v3;
    operator delete(v3);
  }
  __int16 v4 = (void *)*((void *)this + 4);
  if (v4)
  {
    *((void *)this + 5) = v4;
    operator delete(v4);
  }
  double v5 = (void *)*((void *)this + 1);
  if (v5)
  {
    *((void *)this + 2) = v5;
    operator delete(v5);
  }

  PB::Base::~Base(this);
}

void sub_101677DB8(PB::Base *a1)
{
  sub_101677D24(a1);

  operator delete();
}

uint64_t sub_101677DF0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102333D40;
  *(_OWORD *)(a1 + 8) = 0u;
  __int16 v4 = (char *)(a1 + 8);
  *(_OWORD *)(a1 + 56) = 0u;
  *(_DWORD *)(a1 + 140) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  if (*(unsigned char *)(a2 + 140))
  {
    uint64_t v5 = *(void *)(a2 + 104);
    *(unsigned char *)(a1 + 140) = 1;
    *(void *)(a1 + 104) = v5;
  }
  if (a1 != a2) {
    sub_1000FB43C(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  if ((*(unsigned char *)(a2 + 140) & 4) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 120);
    *(unsigned char *)(a1 + 140) |= 4u;
    *(_DWORD *)(a1 + 120) = v6;
  }
  if (a1 != a2) {
    sub_1000FB43C((char *)(a1 + 80), *(char **)(a2 + 80), *(void *)(a2 + 88), (uint64_t)(*(void *)(a2 + 88) - *(void *)(a2 + 80)) >> 2);
  }
  if ((*(unsigned char *)(a2 + 140) & 2) != 0)
  {
    uint64_t v7 = *(void *)(a2 + 112);
    *(unsigned char *)(a1 + 140) |= 2u;
    *(void *)(a1 + 112) = v7;
  }
  if (a1 != a2)
  {
    sub_1000FB43C((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
    sub_1000FB43C((char *)(a1 + 56), *(char **)(a2 + 56), *(void *)(a2 + 64), (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 2);
  }
  char v8 = *(unsigned char *)(a2 + 140);
  if ((v8 & 0x20) != 0)
  {
    int v11 = *(_DWORD *)(a2 + 132);
    *(unsigned char *)(a1 + 140) |= 0x20u;
    *(_DWORD *)(a1 + 132) = v11;
    char v8 = *(unsigned char *)(a2 + 140);
    if ((v8 & 8) == 0)
    {
LABEL_15:
      if ((v8 & 0x10) == 0) {
        goto LABEL_16;
      }
LABEL_21:
      int v13 = *(_DWORD *)(a2 + 128);
      *(unsigned char *)(a1 + 140) |= 0x10u;
      *(_DWORD *)(a1 + 128) = v13;
      if ((*(unsigned char *)(a2 + 140) & 0x40) == 0) {
        return a1;
      }
      goto LABEL_17;
    }
  }
  else if ((*(unsigned char *)(a2 + 140) & 8) == 0)
  {
    goto LABEL_15;
  }
  int v12 = *(_DWORD *)(a2 + 124);
  *(unsigned char *)(a1 + 140) |= 8u;
  *(_DWORD *)(a1 + 124) = v12;
  char v8 = *(unsigned char *)(a2 + 140);
  if ((v8 & 0x10) != 0) {
    goto LABEL_21;
  }
LABEL_16:
  if ((v8 & 0x40) != 0)
  {
LABEL_17:
    int v9 = *(_DWORD *)(a2 + 136);
    *(unsigned char *)(a1 + 140) |= 0x40u;
    *(_DWORD *)(a1 + 136) = v9;
  }
  return a1;
}

uint64_t sub_101677F9C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if ((*(unsigned char *)(a1 + 140) & 4) != 0) {
    PB::TextFormatter::format(this, "armTimeActivityHints", *(_DWORD *)(a1 + 120));
  }
  uint64_t v5 = *(float **)(a1 + 8);
  int v6 = *(float **)(a1 + 16);
  while (v5 != v6)
  {
    float v7 = *v5++;
    PB::TextFormatter::format(this, "armTimeImuConfidences", v7);
  }
  char v8 = *(unsigned char *)(a1 + 140);
  if ((v8 & 8) != 0)
  {
    PB::TextFormatter::format(this, "sessionBtHintPercentage", *(float *)(a1 + 124));
    char v8 = *(unsigned char *)(a1 + 140);
    if ((v8 & 0x10) == 0)
    {
LABEL_7:
      if ((v8 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
  }
  else if ((*(unsigned char *)(a1 + 140) & 0x10) == 0)
  {
    goto LABEL_7;
  }
  PB::TextFormatter::format(this, "sessionGpsHintPercentage", *(float *)(a1 + 128));
  if ((*(unsigned char *)(a1 + 140) & 0x20) != 0) {
LABEL_8:
  }
    PB::TextFormatter::format(this, "sessionImuHintPercentage", *(float *)(a1 + 132));
LABEL_9:
  int v9 = *(unsigned int **)(a1 + 32);
  unsigned int v10 = *(unsigned int **)(a1 + 40);
  while (v9 != v10)
  {
    unsigned int v11 = *v9++;
    PB::TextFormatter::format(this, "sessionSwivelAngleDegHistogram", v11);
  }
  int v12 = *(unsigned int **)(a1 + 56);
  int v13 = *(unsigned int **)(a1 + 64);
  while (v12 != v13)
  {
    unsigned int v14 = *v12++;
    PB::TextFormatter::format(this, "sessionTiltAngleDegHistogram", v14);
  }
  char v15 = *(unsigned char *)(a1 + 140);
  if ((v15 & 0x40) != 0)
  {
    PB::TextFormatter::format(this, "sessionWifiHintPercentage", *(float *)(a1 + 136));
    char v15 = *(unsigned char *)(a1 + 140);
    if ((v15 & 1) == 0)
    {
LABEL_15:
      if ((v15 & 2) == 0) {
        goto LABEL_17;
      }
      goto LABEL_16;
    }
  }
  else if ((*(unsigned char *)(a1 + 140) & 1) == 0)
  {
    goto LABEL_15;
  }
  PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 104));
  if ((*(unsigned char *)(a1 + 140) & 2) != 0) {
LABEL_16:
  }
    PB::TextFormatter::format(this, "triggerTimeLastHighImuDrivingConfidenceTimestamp", *(void *)(a1 + 112));
LABEL_17:
  unsigned int v16 = *(float **)(a1 + 80);
  unint64_t v17 = *(float **)(a1 + 88);
  while (v16 != v17)
  {
    float v18 = *v16++;
    PB::TextFormatter::format(this, "windowAfterArmImuConfidences", v18);
  }

  return PB::TextFormatter::endObject(this);
}

BOOL sub_10167817C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    char v8 = (void *)(a1 + 72);
    v207 = (void **)(a1 + 32);
    v208 = (void **)(a1 + 56);
    int v9 = (void *)(a1 + 48);
    unsigned int v10 = (void **)(a1 + 80);
    uint64_t v11 = a1 + 96;
    int v12 = (void **)(a1 + 8);
    uint64_t v13 = a1 + 24;
    while (1)
    {
      uint64_t v14 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v17 = 0;
      while (1)
      {
        unint64_t v18 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v19 = *(unsigned char *)(v14 + v2);
        v17 |= (unint64_t)(v19 & 0x7F) << v15;
        if ((v19 & 0x80) == 0) {
          break;
        }
        v15 += 7;
        unint64_t v2 = v18;
        BOOL v91 = v16++ > 8;
        if (v91) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v25 = v17 & 7;
      if (v25 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v17 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 140) |= 1u;
          unint64_t v26 = *((void *)this + 1);
          unint64_t v27 = *((void *)this + 2);
          uint64_t v28 = *(void *)this;
          if (v26 <= 0xFFFFFFFFFFFFFFF5 && v26 + 10 <= v27)
          {
            char v29 = 0;
            unsigned int v30 = 0;
            uint64_t v31 = 0;
            do
            {
              unint64_t v32 = v26 + 1;
              *((void *)this + 1) = v26 + 1;
              char v33 = *(unsigned char *)(v28 + v26);
              v31 |= (unint64_t)(v33 & 0x7F) << v29;
              if ((v33 & 0x80) == 0) {
                goto LABEL_265;
              }
              v29 += 7;
              unint64_t v26 = v32;
              BOOL v91 = v30++ > 8;
            }
            while (!v91);
LABEL_202:
            uint64_t v31 = 0;
            goto LABEL_265;
          }
          char v129 = 0;
          unsigned int v130 = 0;
          uint64_t v31 = 0;
          if (v27 <= v26) {
            unint64_t v27 = *((void *)this + 1);
          }
          while (2)
          {
            if (v27 == v26)
            {
              uint64_t v31 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v131 = v26 + 1;
              char v132 = *(unsigned char *)(v28 + v26);
              *((void *)this + 1) = v131;
              v31 |= (unint64_t)(v132 & 0x7F) << v129;
              if (v132 < 0)
              {
                v129 += 7;
                unint64_t v26 = v131;
                BOOL v91 = v130++ > 8;
                if (v91) {
                  goto LABEL_202;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v31 = 0;
              }
            }
            break;
          }
LABEL_265:
          *(void *)(a1 + 104) = v31;
          goto LABEL_339;
        case 2u:
          if (v25 != 2)
          {
            v134 = *(char **)(a1 + 16);
            unint64_t v133 = *(void *)(a1 + 24);
            if ((unint64_t)v134 >= v133)
            {
              v151 = (char *)*v12;
              uint64_t v152 = (v134 - (unsigned char *)*v12) >> 2;
              unint64_t v153 = v152 + 1;
              if ((unint64_t)(v152 + 1) >> 62) {
LABEL_349:
              }
                sub_1001D7FD4();
              uint64_t v154 = v133 - (void)v151;
              if (v154 >> 1 > v153) {
                unint64_t v153 = v154 >> 1;
              }
              if ((unint64_t)v154 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v155 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v155 = v153;
              }
              if (v155)
              {
                v156 = (char *)sub_10017EA34(v13, v155);
                v151 = *(char **)(a1 + 8);
                v134 = *(char **)(a1 + 16);
              }
              else
              {
                v156 = 0;
              }
              v175 = &v156[4 * v152];
              *(_DWORD *)v175 = 0;
              uint64_t v135 = v175 + 4;
              while (v134 != v151)
              {
                int v176 = *((_DWORD *)v134 - 1);
                v134 -= 4;
                *((_DWORD *)v175 - 1) = v176;
                v175 -= 4;
              }
              *(void *)(a1 + 8) = v175;
              *(void *)(a1 + 16) = v135;
              *(void *)(a1 + 24) = &v156[4 * v155];
              if (v151) {
                operator delete(v151);
              }
            }
            else
            {
              *(_DWORD *)v134 = 0;
              uint64_t v135 = v134 + 4;
            }
            *(void *)(a1 + 16) = v135;
            goto LABEL_286;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v34 = *((void *)this + 1);
          unint64_t v35 = *((void *)this + 2);
          while (v34 < v35 && !*((unsigned char *)this + 24))
          {
            uint64_t v37 = *(char **)(a1 + 16);
            unint64_t v36 = *(void *)(a1 + 24);
            if ((unint64_t)v37 >= v36)
            {
              unint64_t v39 = (char *)*v12;
              uint64_t v40 = (v37 - (unsigned char *)*v12) >> 2;
              unint64_t v41 = v40 + 1;
              if ((unint64_t)(v40 + 1) >> 62) {
                goto LABEL_349;
              }
              uint64_t v42 = v36 - (void)v39;
              if (v42 >> 1 > v41) {
                unint64_t v41 = v42 >> 1;
              }
              if ((unint64_t)v42 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v43 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v43 = v41;
              }
              if (v43)
              {
                char v44 = (char *)sub_10017EA34(v13, v43);
                unint64_t v39 = *(char **)(a1 + 8);
                uint64_t v37 = *(char **)(a1 + 16);
              }
              else
              {
                char v44 = 0;
              }
              unint64_t v45 = &v44[4 * v40];
              *(_DWORD *)unint64_t v45 = 0;
              char v38 = v45 + 4;
              while (v37 != v39)
              {
                int v46 = *((_DWORD *)v37 - 1);
                v37 -= 4;
                *((_DWORD *)v45 - 1) = v46;
                v45 -= 4;
              }
              *(void *)(a1 + 8) = v45;
              *(void *)(a1 + 16) = v38;
              *(void *)(a1 + 24) = &v44[4 * v43];
              if (v39) {
                operator delete(v39);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v37 = 0;
              char v38 = v37 + 4;
            }
            *(void *)(a1 + 16) = v38;
            unint64_t v47 = *((void *)this + 1);
            if (v47 > 0xFFFFFFFFFFFFFFFBLL || v47 + 4 > *((void *)this + 2)) {
              goto LABEL_226;
            }
            *(v38 - 1) = *(_DWORD *)(*(void *)this + v47);
            unint64_t v35 = *((void *)this + 2);
            unint64_t v34 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v34;
          }
          goto LABEL_227;
        case 3u:
          *(unsigned char *)(a1 + 140) |= 4u;
          unint64_t v48 = *((void *)this + 1);
          unint64_t v49 = *((void *)this + 2);
          uint64_t v50 = *(void *)this;
          if (v48 <= 0xFFFFFFFFFFFFFFF5 && v48 + 10 <= v49)
          {
            char v51 = 0;
            unsigned int v52 = 0;
            uint64_t v53 = 0;
            do
            {
              unint64_t v54 = v48 + 1;
              *((void *)this + 1) = v48 + 1;
              char v55 = *(unsigned char *)(v50 + v48);
              v53 |= (unint64_t)(v55 & 0x7F) << v51;
              if ((v55 & 0x80) == 0) {
                goto LABEL_268;
              }
              v51 += 7;
              unint64_t v48 = v54;
              BOOL v91 = v52++ > 8;
            }
            while (!v91);
LABEL_211:
            LODWORD(v53) = 0;
            goto LABEL_268;
          }
          char v136 = 0;
          unsigned int v137 = 0;
          uint64_t v53 = 0;
          if (v49 <= v48) {
            unint64_t v49 = *((void *)this + 1);
          }
          while (2)
          {
            if (v49 == v48)
            {
              LODWORD(v53) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v138 = v48 + 1;
              char v139 = *(unsigned char *)(v50 + v48);
              *((void *)this + 1) = v138;
              v53 |= (unint64_t)(v139 & 0x7F) << v136;
              if (v139 < 0)
              {
                v136 += 7;
                unint64_t v48 = v138;
                BOOL v91 = v137++ > 8;
                if (v91) {
                  goto LABEL_211;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v53) = 0;
              }
            }
            break;
          }
LABEL_268:
          *(_DWORD *)(a1 + 120) = v53;
          goto LABEL_339;
        case 4u:
          if (v25 != 2)
          {
            uint64_t v141 = *(char **)(a1 + 88);
            unint64_t v140 = *(void *)(a1 + 96);
            if ((unint64_t)v141 >= v140)
            {
              v157 = (char *)*v10;
              uint64_t v158 = (v141 - (unsigned char *)*v10) >> 2;
              unint64_t v159 = v158 + 1;
              if ((unint64_t)(v158 + 1) >> 62) {
LABEL_350:
              }
                sub_1001D7FD4();
              uint64_t v160 = v140 - (void)v157;
              if (v160 >> 1 > v159) {
                unint64_t v159 = v160 >> 1;
              }
              if ((unint64_t)v160 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v161 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v161 = v159;
              }
              if (v161)
              {
                v162 = (char *)sub_10017EA34(v11, v161);
                v157 = *(char **)(a1 + 80);
                uint64_t v141 = *(char **)(a1 + 88);
              }
              else
              {
                v162 = 0;
              }
              v177 = &v162[4 * v158];
              *(_DWORD *)v177 = 0;
              uint64_t v135 = v177 + 4;
              while (v141 != v157)
              {
                int v178 = *((_DWORD *)v141 - 1);
                v141 -= 4;
                *((_DWORD *)v177 - 1) = v178;
                v177 -= 4;
              }
              *(void *)(a1 + 80) = v177;
              *(void *)(a1 + 88) = v135;
              *(void *)(a1 + 96) = &v162[4 * v161];
              if (v157) {
                operator delete(v157);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v141 = 0;
              uint64_t v135 = v141 + 4;
            }
            *(void *)(a1 + 88) = v135;
LABEL_286:
            unint64_t v179 = *((void *)this + 1);
            if (v179 <= 0xFFFFFFFFFFFFFFFBLL && v179 + 4 <= *((void *)this + 2))
            {
              *(v135 - 1) = *(_DWORD *)(*(void *)this + v179);
LABEL_290:
              *((void *)this + 1) += 4;
            }
            else
            {
LABEL_288:
              *((unsigned char *)this + 24) = 1;
            }
            goto LABEL_339;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v56 = *((void *)this + 1);
          unint64_t v57 = *((void *)this + 2);
          while (v56 < v57 && !*((unsigned char *)this + 24))
          {
            char v59 = *(char **)(a1 + 88);
            unint64_t v58 = *(void *)(a1 + 96);
            if ((unint64_t)v59 >= v58)
            {
              uint64_t v61 = (char *)*v10;
              uint64_t v62 = (v59 - (unsigned char *)*v10) >> 2;
              unint64_t v63 = v62 + 1;
              if ((unint64_t)(v62 + 1) >> 62) {
                goto LABEL_350;
              }
              uint64_t v64 = v58 - (void)v61;
              if (v64 >> 1 > v63) {
                unint64_t v63 = v64 >> 1;
              }
              if ((unint64_t)v64 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v65 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v65 = v63;
              }
              if (v65)
              {
                unsigned int v66 = (char *)sub_10017EA34(v11, v65);
                uint64_t v61 = *(char **)(a1 + 80);
                char v59 = *(char **)(a1 + 88);
              }
              else
              {
                unsigned int v66 = 0;
              }
              uint64_t v67 = &v66[4 * v62];
              *(_DWORD *)uint64_t v67 = 0;
              unsigned int v60 = v67 + 4;
              while (v59 != v61)
              {
                int v68 = *((_DWORD *)v59 - 1);
                v59 -= 4;
                *((_DWORD *)v67 - 1) = v68;
                v67 -= 4;
              }
              *(void *)(a1 + 80) = v67;
              *(void *)(a1 + 88) = v60;
              *(void *)(a1 + 96) = &v66[4 * v65];
              if (v61) {
                operator delete(v61);
              }
            }
            else
            {
              *(_DWORD *)char v59 = 0;
              unsigned int v60 = v59 + 4;
            }
            *(void *)(a1 + 88) = v60;
            unint64_t v69 = *((void *)this + 1);
            if (v69 > 0xFFFFFFFFFFFFFFFBLL || v69 + 4 > *((void *)this + 2))
            {
LABEL_226:
              *((unsigned char *)this + 24) = 1;
              goto LABEL_227;
            }
            *(v60 - 1) = *(_DWORD *)(*(void *)this + v69);
            unint64_t v57 = *((void *)this + 2);
            unint64_t v56 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v56;
          }
          goto LABEL_227;
        case 5u:
          *(unsigned char *)(a1 + 140) |= 2u;
          unint64_t v70 = *((void *)this + 1);
          unint64_t v71 = *((void *)this + 2);
          uint64_t v72 = *(void *)this;
          if (v70 <= 0xFFFFFFFFFFFFFFF5 && v70 + 10 <= v71)
          {
            char v73 = 0;
            unsigned int v74 = 0;
            uint64_t v75 = 0;
            do
            {
              unint64_t v76 = v70 + 1;
              *((void *)this + 1) = v70 + 1;
              char v77 = *(unsigned char *)(v72 + v70);
              v75 |= (unint64_t)(v77 & 0x7F) << v73;
              if ((v77 & 0x80) == 0) {
                goto LABEL_271;
              }
              v73 += 7;
              unint64_t v70 = v76;
              BOOL v91 = v74++ > 8;
            }
            while (!v91);
LABEL_220:
            uint64_t v75 = 0;
            goto LABEL_271;
          }
          char v142 = 0;
          unsigned int v143 = 0;
          uint64_t v75 = 0;
          if (v71 <= v70) {
            unint64_t v71 = *((void *)this + 1);
          }
          while (2)
          {
            if (v71 == v70)
            {
              uint64_t v75 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v144 = v70 + 1;
              char v145 = *(unsigned char *)(v72 + v70);
              *((void *)this + 1) = v144;
              v75 |= (unint64_t)(v145 & 0x7F) << v142;
              if (v145 < 0)
              {
                v142 += 7;
                unint64_t v70 = v144;
                BOOL v91 = v143++ > 8;
                if (v91) {
                  goto LABEL_220;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v75 = 0;
              }
            }
            break;
          }
LABEL_271:
          *(void *)(a1 + 112) = v75;
          goto LABEL_339;
        case 6u:
          if (v25 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            if (*((void *)this + 1) < *((void *)this + 2) && !*((unsigned char *)this + 24))
            {
              char v78 = *(char **)(a1 + 40);
              do
              {
                if ((unint64_t)v78 >= *v9)
                {
                  char v79 = (char *)*v207;
                  uint64_t v80 = (v78 - (unsigned char *)*v207) >> 2;
                  unint64_t v81 = v80 + 1;
                  if ((unint64_t)(v80 + 1) >> 62) {
                    goto LABEL_351;
                  }
                  uint64_t v82 = *v9 - (void)v79;
                  if (v82 >> 1 > v81) {
                    unint64_t v81 = v82 >> 1;
                  }
                  if ((unint64_t)v82 >= 0x7FFFFFFFFFFFFFFCLL) {
                    unint64_t v83 = 0x3FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v83 = v81;
                  }
                  if (v83)
                  {
                    unsigned int v84 = (char *)sub_10017EA34((uint64_t)v9, v83);
                    char v79 = *(char **)(a1 + 32);
                    char v78 = *(char **)(a1 + 40);
                  }
                  else
                  {
                    unsigned int v84 = 0;
                  }
                  unint64_t v85 = &v84[4 * v80];
                  *(_DWORD *)unint64_t v85 = 0;
                  char v86 = v85 + 4;
                  while (v78 != v79)
                  {
                    int v87 = *((_DWORD *)v78 - 1);
                    v78 -= 4;
                    *((_DWORD *)v85 - 1) = v87;
                    v85 -= 4;
                  }
                  *(void *)(a1 + 32) = v85;
                  *(void *)(a1 + 40) = v86;
                  *(void *)(a1 + 48) = &v84[4 * v83];
                  if (v79) {
                    operator delete(v79);
                  }
                  char v78 = v86;
                }
                else
                {
                  *(_DWORD *)char v78 = 0;
                  v78 += 4;
                }
                *(void *)(a1 + 40) = v78;
                unint64_t v89 = *((void *)this + 1);
                unint64_t v88 = *((void *)this + 2);
                uint64_t v90 = *(void *)this;
                BOOL v91 = v89 > 0xFFFFFFFFFFFFFFF5 || v89 + 10 > v88;
                if (v91)
                {
                  char v92 = 0;
                  unsigned int v93 = 0;
                  uint64_t v99 = 0;
                  if (v88 <= v89) {
                    uint64_t v94 = *((void *)this + 1);
                  }
                  else {
                    uint64_t v94 = *((void *)this + 2);
                  }
                  while (1)
                  {
                    if (v94 == v89) {
                      goto LABEL_225;
                    }
                    unint64_t v95 = v89++;
                    char v96 = *(unsigned char *)(v90 + v95);
                    *((void *)this + 1) = v89;
                    v99 |= (unint64_t)(v96 & 0x7F) << v92;
                    if ((v96 & 0x80) == 0) {
                      break;
                    }
                    v92 += 7;
                    BOOL v91 = v93++ > 8;
                    if (v91)
                    {
                      LODWORD(v99) = 0;
                      goto LABEL_135;
                    }
                  }
                  if (*((unsigned char *)this + 24)) {
                    LODWORD(v99) = 0;
                  }
LABEL_135:
                  unint64_t v100 = v95 + 1;
                }
                else
                {
                  char v97 = 0;
                  unsigned int v98 = 0;
                  uint64_t v99 = 0;
                  while (1)
                  {
                    unint64_t v100 = v89 + 1;
                    *((void *)this + 1) = v89 + 1;
                    char v101 = *(unsigned char *)(v90 + v89);
                    v99 |= (unint64_t)(v101 & 0x7F) << v97;
                    if ((v101 & 0x80) == 0) {
                      break;
                    }
                    v97 += 7;
                    unint64_t v89 = v100;
                    BOOL v91 = v98++ > 8;
                    if (v91)
                    {
                      LODWORD(v99) = 0;
                      break;
                    }
                  }
                }
                *((_DWORD *)v78 - 1) = v99;
              }
              while (v100 < v88 && !*((unsigned char *)this + 24));
            }
            goto LABEL_227;
          }
          uint64_t v147 = *(char **)(a1 + 40);
          unint64_t v146 = *(void *)(a1 + 48);
          if ((unint64_t)v147 >= v146)
          {
            v163 = (char *)*v207;
            uint64_t v164 = (v147 - (unsigned char *)*v207) >> 2;
            unint64_t v165 = v164 + 1;
            if ((unint64_t)(v164 + 1) >> 62) {
LABEL_351:
            }
              sub_1001D7FD4();
            uint64_t v166 = v146 - (void)v163;
            if (v166 >> 1 > v165) {
              unint64_t v165 = v166 >> 1;
            }
            if ((unint64_t)v166 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v167 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v167 = v165;
            }
            if (v167)
            {
              v168 = (char *)sub_10017EA34((uint64_t)v9, v167);
              v163 = *(char **)(a1 + 32);
              uint64_t v147 = *(char **)(a1 + 40);
            }
            else
            {
              v168 = 0;
            }
            v180 = &v168[4 * v164];
            *(_DWORD *)v180 = 0;
            uint64_t v148 = v180 + 4;
            while (v147 != v163)
            {
              int v181 = *((_DWORD *)v147 - 1);
              v147 -= 4;
              *((_DWORD *)v180 - 1) = v181;
              v180 -= 4;
            }
            *(void *)(a1 + 32) = v180;
            *(void *)(a1 + 40) = v148;
            *(void *)(a1 + 48) = &v168[4 * v167];
            if (v163) {
              operator delete(v163);
            }
          }
          else
          {
            *(_DWORD *)uint64_t v147 = 0;
            uint64_t v148 = v147 + 4;
          }
          *(void *)(a1 + 40) = v148;
          unint64_t v182 = *((void *)this + 1);
          unint64_t v183 = *((void *)this + 2);
          uint64_t v184 = *(void *)this;
          char v185 = 0;
          unsigned int v186 = 0;
          if (v182 <= 0xFFFFFFFFFFFFFFF5 && v182 + 10 <= v183)
          {
            uint64_t v190 = 0;
            while (1)
            {
              unint64_t v191 = v182 + 1;
              *((void *)this + 1) = v182 + 1;
              char v192 = *(unsigned char *)(v184 + v182);
              v190 |= (unint64_t)(v192 & 0x7F) << v185;
              if ((v192 & 0x80) == 0) {
                goto LABEL_338;
              }
              v185 += 7;
              unint64_t v182 = v191;
              BOOL v91 = v186++ > 8;
              if (v91) {
                goto LABEL_334;
              }
            }
          }
          uint64_t v190 = 0;
          if (v183 <= v182) {
            unint64_t v183 = *((void *)this + 1);
          }
          while (v183 != v182)
          {
            unint64_t v188 = v182 + 1;
            char v189 = *(unsigned char *)(v184 + v182);
            *((void *)this + 1) = v188;
            v190 |= (unint64_t)(v189 & 0x7F) << v185;
            if ((v189 & 0x80) == 0) {
              goto LABEL_336;
            }
            v185 += 7;
            unint64_t v182 = v188;
            BOOL v91 = v186++ > 8;
            if (v91) {
              goto LABEL_334;
            }
          }
          goto LABEL_335;
        case 7u:
          if (v25 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            if (*((void *)this + 1) < *((void *)this + 2) && !*((unsigned char *)this + 24))
            {
              char v78 = *(char **)(a1 + 64);
              do
              {
                if ((unint64_t)v78 >= *v8)
                {
                  char v102 = (char *)*v208;
                  uint64_t v103 = (v78 - (unsigned char *)*v208) >> 2;
                  unint64_t v104 = v103 + 1;
                  if ((unint64_t)(v103 + 1) >> 62) {
                    goto LABEL_352;
                  }
                  uint64_t v105 = *v8 - (void)v102;
                  if (v105 >> 1 > v104) {
                    unint64_t v104 = v105 >> 1;
                  }
                  if ((unint64_t)v105 >= 0x7FFFFFFFFFFFFFFCLL) {
                    unint64_t v106 = 0x3FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v106 = v104;
                  }
                  if (v106)
                  {
                    unint64_t v107 = (char *)sub_10017EA34((uint64_t)v8, v106);
                    char v102 = *(char **)(a1 + 56);
                    char v78 = *(char **)(a1 + 64);
                  }
                  else
                  {
                    unint64_t v107 = 0;
                  }
                  unint64_t v108 = &v107[4 * v103];
                  *(_DWORD *)unint64_t v108 = 0;
                  unint64_t v109 = v108 + 4;
                  while (v78 != v102)
                  {
                    int v110 = *((_DWORD *)v78 - 1);
                    v78 -= 4;
                    *((_DWORD *)v108 - 1) = v110;
                    v108 -= 4;
                  }
                  *(void *)(a1 + 56) = v108;
                  *(void *)(a1 + 64) = v109;
                  *(void *)(a1 + 72) = &v107[4 * v106];
                  if (v102) {
                    operator delete(v102);
                  }
                  char v78 = v109;
                }
                else
                {
                  *(_DWORD *)char v78 = 0;
                  v78 += 4;
                }
                *(void *)(a1 + 64) = v78;
                unint64_t v112 = *((void *)this + 1);
                unint64_t v111 = *((void *)this + 2);
                uint64_t v113 = *(void *)this;
                if (v112 <= 0xFFFFFFFFFFFFFFF5 && v112 + 10 <= v111)
                {
                  char v120 = 0;
                  unsigned int v121 = 0;
                  uint64_t v122 = 0;
                  while (1)
                  {
                    unint64_t v123 = v112 + 1;
                    *((void *)this + 1) = v112 + 1;
                    char v124 = *(unsigned char *)(v113 + v112);
                    v122 |= (unint64_t)(v124 & 0x7F) << v120;
                    if ((v124 & 0x80) == 0) {
                      goto LABEL_181;
                    }
                    v120 += 7;
                    unint64_t v112 = v123;
                    BOOL v91 = v121++ > 8;
                    if (v91)
                    {
                      LODWORD(v122) = 0;
                      goto LABEL_181;
                    }
                  }
                }
                char v115 = 0;
                unsigned int v116 = 0;
                uint64_t v122 = 0;
                if (v111 <= v112) {
                  uint64_t v117 = *((void *)this + 1);
                }
                else {
                  uint64_t v117 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v117 == v112)
                  {
LABEL_225:
                    *((unsigned char *)this + 24) = 1;
                    *((_DWORD *)v78 - 1) = 0;
                    goto LABEL_227;
                  }
                  unint64_t v118 = v112++;
                  char v119 = *(unsigned char *)(v113 + v118);
                  *((void *)this + 1) = v112;
                  v122 |= (unint64_t)(v119 & 0x7F) << v115;
                  if ((v119 & 0x80) == 0) {
                    break;
                  }
                  v115 += 7;
                  BOOL v91 = v116++ > 8;
                  if (v91)
                  {
                    LODWORD(v122) = 0;
                    goto LABEL_180;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v122) = 0;
                }
LABEL_180:
                unint64_t v123 = v118 + 1;
LABEL_181:
                *((_DWORD *)v78 - 1) = v122;
              }
              while (v123 < v111 && !*((unsigned char *)this + 24));
            }
LABEL_227:
            PB::Reader::recallMark();
          }
          else
          {
            v150 = *(char **)(a1 + 64);
            unint64_t v149 = *(void *)(a1 + 72);
            if ((unint64_t)v150 >= v149)
            {
              v169 = (char *)*v208;
              uint64_t v170 = (v150 - (unsigned char *)*v208) >> 2;
              unint64_t v171 = v170 + 1;
              if ((unint64_t)(v170 + 1) >> 62) {
LABEL_352:
              }
                sub_1001D7FD4();
              uint64_t v172 = v149 - (void)v169;
              if (v172 >> 1 > v171) {
                unint64_t v171 = v172 >> 1;
              }
              if ((unint64_t)v172 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v173 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v173 = v171;
              }
              if (v173)
              {
                v174 = (char *)sub_10017EA34((uint64_t)v8, v173);
                v169 = *(char **)(a1 + 56);
                v150 = *(char **)(a1 + 64);
              }
              else
              {
                v174 = 0;
              }
              v193 = &v174[4 * v170];
              *(_DWORD *)v193 = 0;
              uint64_t v148 = v193 + 4;
              while (v150 != v169)
              {
                int v194 = *((_DWORD *)v150 - 1);
                v150 -= 4;
                *((_DWORD *)v193 - 1) = v194;
                v193 -= 4;
              }
              *(void *)(a1 + 56) = v193;
              *(void *)(a1 + 64) = v148;
              *(void *)(a1 + 72) = &v174[4 * v173];
              if (v169) {
                operator delete(v169);
              }
            }
            else
            {
              *(_DWORD *)v150 = 0;
              uint64_t v148 = v150 + 4;
            }
            *(void *)(a1 + 64) = v148;
            unint64_t v195 = *((void *)this + 1);
            unint64_t v196 = *((void *)this + 2);
            uint64_t v197 = *(void *)this;
            char v198 = 0;
            unsigned int v199 = 0;
            if (v195 > 0xFFFFFFFFFFFFFFF5 || v195 + 10 > v196)
            {
              uint64_t v190 = 0;
              if (v196 <= v195) {
                unint64_t v196 = *((void *)this + 1);
              }
              while (v196 != v195)
              {
                unint64_t v201 = v195 + 1;
                char v202 = *(unsigned char *)(v197 + v195);
                *((void *)this + 1) = v201;
                v190 |= (unint64_t)(v202 & 0x7F) << v198;
                if ((v202 & 0x80) == 0)
                {
LABEL_336:
                  if (*((unsigned char *)this + 24)) {
                    LODWORD(v190) = 0;
                  }
                  goto LABEL_338;
                }
                v198 += 7;
                unint64_t v195 = v201;
                BOOL v91 = v199++ > 8;
                if (v91)
                {
LABEL_334:
                  LODWORD(v190) = 0;
                  goto LABEL_338;
                }
              }
LABEL_335:
              LODWORD(v190) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              uint64_t v190 = 0;
              while (1)
              {
                unint64_t v203 = v195 + 1;
                *((void *)this + 1) = v195 + 1;
                char v204 = *(unsigned char *)(v197 + v195);
                v190 |= (unint64_t)(v204 & 0x7F) << v198;
                if ((v204 & 0x80) == 0) {
                  break;
                }
                v198 += 7;
                unint64_t v195 = v203;
                BOOL v91 = v199++ > 8;
                if (v91) {
                  goto LABEL_334;
                }
              }
            }
LABEL_338:
            *(v148 - 1) = v190;
          }
LABEL_339:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        case 8u:
          *(unsigned char *)(a1 + 140) |= 0x20u;
          unint64_t v125 = *((void *)this + 1);
          if (v125 > 0xFFFFFFFFFFFFFFFBLL || v125 + 4 > *((void *)this + 2)) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 132) = *(_DWORD *)(*(void *)this + v125);
          goto LABEL_290;
        case 9u:
          *(unsigned char *)(a1 + 140) |= 8u;
          unint64_t v126 = *((void *)this + 1);
          if (v126 > 0xFFFFFFFFFFFFFFFBLL || v126 + 4 > *((void *)this + 2)) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 124) = *(_DWORD *)(*(void *)this + v126);
          goto LABEL_290;
        case 0xAu:
          *(unsigned char *)(a1 + 140) |= 0x10u;
          unint64_t v127 = *((void *)this + 1);
          if (v127 > 0xFFFFFFFFFFFFFFFBLL || v127 + 4 > *((void *)this + 2)) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 128) = *(_DWORD *)(*(void *)this + v127);
          goto LABEL_290;
        case 0xBu:
          *(unsigned char *)(a1 + 140) |= 0x40u;
          unint64_t v128 = *((void *)this + 1);
          if (v128 > 0xFFFFFFFFFFFFFFFBLL || v128 + 4 > *((void *)this + 2)) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 136) = *(_DWORD *)(*(void *)this + v128);
          goto LABEL_290;
        default:
          if ((PB::Reader::skip(this, v17 >> 3, v25, 0) & 1) == 0) {
            return 0;
          }
          goto LABEL_339;
      }
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v17 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v22 = v2 + 1;
      char v23 = *(unsigned char *)(v14 + v2);
      *((void *)this + 1) = v22;
      v17 |= (unint64_t)(v23 & 0x7F) << v20;
      if ((v23 & 0x80) == 0) {
        goto LABEL_21;
      }
      v20 += 7;
      unint64_t v2 = v22;
      if (v21++ >= 9)
      {
LABEL_20:
        unint64_t v17 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101679100(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  if (*(unsigned char *)(result + 140)) {
    double result = PB::Writer::writeVarInt(this, *(void *)(result + 104), 1u);
  }
  int v4 = *(float **)(v3 + 8);
  uint64_t v5 = *(float **)(v3 + 16);
  while (v4 != v5)
  {
    float v6 = *v4++;
    double result = PB::Writer::write(this, v6, 2u);
  }
  if ((*(unsigned char *)(v3 + 140) & 4) != 0) {
    double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 120), 3u);
  }
  float v7 = *(float **)(v3 + 80);
  char v8 = *(float **)(v3 + 88);
  while (v7 != v8)
  {
    float v9 = *v7++;
    double result = PB::Writer::write(this, v9, 4u);
  }
  if ((*(unsigned char *)(v3 + 140) & 2) != 0) {
    double result = PB::Writer::writeVarInt(this, *(void *)(v3 + 112), 5u);
  }
  unsigned int v10 = *(unsigned int **)(v3 + 32);
  uint64_t v11 = *(unsigned int **)(v3 + 40);
  while (v10 != v11)
  {
    unsigned int v12 = *v10++;
    double result = PB::Writer::writeVarInt(this, v12, 6u);
  }
  uint64_t v13 = *(unsigned int **)(v3 + 56);
  uint64_t v14 = *(unsigned int **)(v3 + 64);
  while (v13 != v14)
  {
    unsigned int v15 = *v13++;
    double result = PB::Writer::writeVarInt(this, v15, 7u);
  }
  char v16 = *(unsigned char *)(v3 + 140);
  if ((v16 & 0x20) != 0)
  {
    double result = PB::Writer::write(this, *(float *)(v3 + 132), 8u);
    char v16 = *(unsigned char *)(v3 + 140);
    if ((v16 & 8) == 0)
    {
LABEL_21:
      if ((v16 & 0x10) == 0) {
        goto LABEL_22;
      }
LABEL_26:
      double result = PB::Writer::write(this, *(float *)(v3 + 128), 0xAu);
      if ((*(unsigned char *)(v3 + 140) & 0x40) == 0) {
        return result;
      }
      goto LABEL_27;
    }
  }
  else if ((*(unsigned char *)(v3 + 140) & 8) == 0)
  {
    goto LABEL_21;
  }
  double result = PB::Writer::write(this, *(float *)(v3 + 124), 9u);
  char v16 = *(unsigned char *)(v3 + 140);
  if ((v16 & 0x10) != 0) {
    goto LABEL_26;
  }
LABEL_22:
  if ((v16 & 0x40) == 0) {
    return result;
  }
LABEL_27:
  float v17 = *(float *)(v3 + 136);

  return PB::Writer::write(this, v17, 0xBu);
}

double sub_10167927C(uint64_t a1)
{
  *(void *)a1 = &off_102333D78;
  *(_DWORD *)(a1 + 104) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return result;
}

void sub_1016792B0(PB::Base *this)
{
  *(void *)this = &off_102333D78;
  unint64_t v2 = (void *)*((void *)this + 4);
  if (v2)
  {
    *((void *)this + 5) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 1);
  if (v3)
  {
    *((void *)this + 2) = v3;
    operator delete(v3);
  }

  PB::Base::~Base(this);
}

void sub_101679324(PB::Base *a1)
{
  sub_1016792B0(a1);

  operator delete();
}

uint64_t sub_10167935C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102333D78;
  *(_OWORD *)(a1 + 8) = 0u;
  int v4 = (char *)(a1 + 8);
  *(_DWORD *)(a1 + 104) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  if (*(_WORD *)(a2 + 104))
  {
    uint64_t v5 = *(void *)(a2 + 56);
    *(_WORD *)(a1 + 104) = 1;
    *(void *)(a1 + 56) = v5;
  }
  if (a1 != a2) {
    sub_1000FB43C((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
  }
  __int16 v6 = *(_WORD *)(a2 + 104);
  if ((v6 & 0x100) != 0)
  {
    int v12 = *(_DWORD *)(a2 + 100);
    *(_WORD *)(a1 + 104) |= 0x100u;
    *(_DWORD *)(a1 + 100) = v12;
    __int16 v6 = *(_WORD *)(a2 + 104);
    if ((v6 & 0x40) == 0)
    {
LABEL_7:
      if ((v6 & 0x80) == 0) {
        goto LABEL_8;
      }
      goto LABEL_21;
    }
  }
  else if ((v6 & 0x40) == 0)
  {
    goto LABEL_7;
  }
  int v13 = *(_DWORD *)(a2 + 92);
  *(_WORD *)(a1 + 104) |= 0x40u;
  *(_DWORD *)(a1 + 92) = v13;
  __int16 v6 = *(_WORD *)(a2 + 104);
  if ((v6 & 0x80) == 0)
  {
LABEL_8:
    if ((v6 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  int v14 = *(_DWORD *)(a2 + 96);
  *(_WORD *)(a1 + 104) |= 0x80u;
  *(_DWORD *)(a1 + 96) = v14;
  __int16 v6 = *(_WORD *)(a2 + 104);
  if ((v6 & 0x20) == 0)
  {
LABEL_9:
    if ((v6 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v15 = *(_DWORD *)(a2 + 88);
  *(_WORD *)(a1 + 104) |= 0x20u;
  *(_DWORD *)(a1 + 88) = v15;
  __int16 v6 = *(_WORD *)(a2 + 104);
  if ((v6 & 2) == 0)
  {
LABEL_10:
    if ((v6 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_23:
  uint64_t v16 = *(void *)(a2 + 64);
  *(_WORD *)(a1 + 104) |= 2u;
  *(void *)(a1 + 64) = v16;
  if ((*(_WORD *)(a2 + 104) & 4) != 0)
  {
LABEL_11:
    uint64_t v7 = *(void *)(a2 + 72);
    *(_WORD *)(a1 + 104) |= 4u;
    *(void *)(a1 + 72) = v7;
  }
LABEL_12:
  if (a1 != a2) {
    sub_1000FB43C(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  __int16 v8 = *(_WORD *)(a2 + 104);
  if ((v8 & 0x10) != 0)
  {
    int v9 = *(_DWORD *)(a2 + 84);
    *(_WORD *)(a1 + 104) |= 0x10u;
    *(_DWORD *)(a1 + 84) = v9;
    __int16 v8 = *(_WORD *)(a2 + 104);
  }
  if ((v8 & 8) != 0)
  {
    int v10 = *(_DWORD *)(a2 + 80);
    *(_WORD *)(a1 + 104) |= 8u;
    *(_DWORD *)(a1 + 80) = v10;
  }
  return a1;
}

uint64_t sub_101679510(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 104);
  if ((v5 & 8) != 0)
  {
    PB::TextFormatter::format(this, "sessionGreenFieldPercentage", *(float *)(a1 + 80));
    __int16 v5 = *(_WORD *)(a1 + 104);
  }
  if ((v5 & 0x10) != 0) {
    PB::TextFormatter::format(this, "sessionHighRotationPercentage", *(float *)(a1 + 84));
  }
  __int16 v6 = *(unsigned int **)(a1 + 8);
  uint64_t v7 = *(unsigned int **)(a1 + 16);
  while (v6 != v7)
  {
    unsigned int v8 = *v6++;
    PB::TextFormatter::format(this, "sessionMeanPoseAngleXHistogram", v8);
  }
  __int16 v9 = *(_WORD *)(a1 + 104);
  if (v9)
  {
    PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 56));
    __int16 v9 = *(_WORD *)(a1 + 104);
    if ((v9 & 0x20) == 0)
    {
LABEL_9:
      if ((v9 & 2) == 0) {
        goto LABEL_10;
      }
      goto LABEL_22;
    }
  }
  else if ((v9 & 0x20) == 0)
  {
    goto LABEL_9;
  }
  PB::TextFormatter::format(this, "triggerTimeInternalDrivingState", *(_DWORD *)(a1 + 88));
  __int16 v9 = *(_WORD *)(a1 + 104);
  if ((v9 & 2) == 0)
  {
LABEL_10:
    if ((v9 & 4) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "triggerTimeLastHighElevationGainTimestamp", *(void *)(a1 + 64));
  __int16 v9 = *(_WORD *)(a1 + 104);
  if ((v9 & 4) == 0)
  {
LABEL_11:
    if ((v9 & 0x40) == 0) {
      goto LABEL_12;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "triggerTimeLastHighImuDrivingConfidenceTimestamp", *(void *)(a1 + 72));
  __int16 v9 = *(_WORD *)(a1 + 104);
  if ((v9 & 0x40) == 0)
  {
LABEL_12:
    if ((v9 & 0x80) == 0) {
      goto LABEL_13;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "windowAfterArmGreenFieldPercentage", *(float *)(a1 + 92));
  __int16 v9 = *(_WORD *)(a1 + 104);
  if ((v9 & 0x80) == 0)
  {
LABEL_13:
    if ((v9 & 0x100) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_25:
  PB::TextFormatter::format(this, "windowAfterArmHighImuDrivingConfidencePercentage", *(float *)(a1 + 96));
  if ((*(_WORD *)(a1 + 104) & 0x100) != 0) {
LABEL_14:
  }
    PB::TextFormatter::format(this, "windowAfterArmHighRotationPercentage", *(float *)(a1 + 100));
LABEL_15:
  int v10 = *(unsigned int **)(a1 + 32);
  uint64_t v11 = *(unsigned int **)(a1 + 40);
  while (v10 != v11)
  {
    unsigned int v12 = *v10++;
    PB::TextFormatter::format(this, "windowAfterArmMeanPoseAngleXHistogram", v12);
  }

  return PB::TextFormatter::endObject(this);
}

BOOL sub_1016796D4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    unsigned int v8 = (void **)(a1 + 8);
    __int16 v9 = (void *)(a1 + 24);
    int v10 = (void **)(a1 + 32);
    uint64_t v11 = (void *)(a1 + 48);
    while (1)
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v13 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v17 = *(unsigned char *)(v12 + v2);
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          break;
        }
        v13 += 7;
        unint64_t v2 = v16;
        BOOL v45 = v14++ > 8;
        if (v45) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v23 = v15 & 7;
      if (v23 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v15 >> 3))
      {
        case 1u:
          *(_WORD *)(a1 + 104) |= 1u;
          unint64_t v24 = *((void *)this + 1);
          unint64_t v25 = *((void *)this + 2);
          uint64_t v26 = *(void *)this;
          if (v24 <= 0xFFFFFFFFFFFFFFF5 && v24 + 10 <= v25)
          {
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v29 = 0;
            do
            {
              unint64_t v30 = v24 + 1;
              *((void *)this + 1) = v24 + 1;
              char v31 = *(unsigned char *)(v26 + v24);
              v29 |= (unint64_t)(v31 & 0x7F) << v27;
              if ((v31 & 0x80) == 0) {
                goto LABEL_216;
              }
              v27 += 7;
              unint64_t v24 = v30;
              BOOL v45 = v28++ > 8;
            }
            while (!v45);
LABEL_164:
            uint64_t v29 = 0;
            goto LABEL_216;
          }
          char v108 = 0;
          unsigned int v109 = 0;
          uint64_t v29 = 0;
          if (v25 <= v24) {
            unint64_t v25 = *((void *)this + 1);
          }
          while (2)
          {
            if (v25 == v24)
            {
              uint64_t v29 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v110 = v24 + 1;
              char v111 = *(unsigned char *)(v26 + v24);
              *((void *)this + 1) = v110;
              v29 |= (unint64_t)(v111 & 0x7F) << v108;
              if (v111 < 0)
              {
                v108 += 7;
                unint64_t v24 = v110;
                BOOL v45 = v109++ > 8;
                if (v45) {
                  goto LABEL_164;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v29 = 0;
              }
            }
            break;
          }
LABEL_216:
          *(void *)(a1 + 56) = v29;
          goto LABEL_274;
        case 2u:
          if (v23 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            if (*((void *)this + 1) < *((void *)this + 2) && !*((unsigned char *)this + 24))
            {
              unint64_t v32 = *(char **)(a1 + 40);
              do
              {
                if ((unint64_t)v32 >= *v11)
                {
                  char v33 = (char *)*v10;
                  uint64_t v34 = (v32 - (unsigned char *)*v10) >> 2;
                  unint64_t v35 = v34 + 1;
                  if ((unint64_t)(v34 + 1) >> 62) {
                    goto LABEL_284;
                  }
                  uint64_t v36 = *v11 - (void)v33;
                  if (v36 >> 1 > v35) {
                    unint64_t v35 = v36 >> 1;
                  }
                  if ((unint64_t)v36 >= 0x7FFFFFFFFFFFFFFCLL) {
                    unint64_t v37 = 0x3FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v37 = v35;
                  }
                  if (v37)
                  {
                    char v38 = (char *)sub_10017EA34((uint64_t)v11, v37);
                    char v33 = *(char **)(a1 + 32);
                    unint64_t v32 = *(char **)(a1 + 40);
                  }
                  else
                  {
                    char v38 = 0;
                  }
                  unint64_t v39 = &v38[4 * v34];
                  *(_DWORD *)unint64_t v39 = 0;
                  uint64_t v40 = v39 + 4;
                  while (v32 != v33)
                  {
                    int v41 = *((_DWORD *)v32 - 1);
                    v32 -= 4;
                    *((_DWORD *)v39 - 1) = v41;
                    v39 -= 4;
                  }
                  *(void *)(a1 + 32) = v39;
                  *(void *)(a1 + 40) = v40;
                  *(void *)(a1 + 48) = &v38[4 * v37];
                  if (v33) {
                    operator delete(v33);
                  }
                  unint64_t v32 = v40;
                }
                else
                {
                  *(_DWORD *)unint64_t v32 = 0;
                  v32 += 4;
                }
                *(void *)(a1 + 40) = v32;
                unint64_t v43 = *((void *)this + 1);
                unint64_t v42 = *((void *)this + 2);
                uint64_t v44 = *(void *)this;
                BOOL v45 = v43 > 0xFFFFFFFFFFFFFFF5 || v43 + 10 > v42;
                if (v45)
                {
                  char v46 = 0;
                  unsigned int v47 = 0;
                  uint64_t v53 = 0;
                  if (v42 <= v43) {
                    uint64_t v48 = *((void *)this + 1);
                  }
                  else {
                    uint64_t v48 = *((void *)this + 2);
                  }
                  while (1)
                  {
                    if (v48 == v43) {
                      goto LABEL_190;
                    }
                    unint64_t v49 = v43++;
                    char v50 = *(unsigned char *)(v44 + v49);
                    *((void *)this + 1) = v43;
                    v53 |= (unint64_t)(v50 & 0x7F) << v46;
                    if ((v50 & 0x80) == 0) {
                      break;
                    }
                    v46 += 7;
                    BOOL v45 = v47++ > 8;
                    if (v45)
                    {
                      LODWORD(v53) = 0;
                      goto LABEL_71;
                    }
                  }
                  if (*((unsigned char *)this + 24)) {
                    LODWORD(v53) = 0;
                  }
LABEL_71:
                  unint64_t v54 = v49 + 1;
                }
                else
                {
                  char v51 = 0;
                  unsigned int v52 = 0;
                  uint64_t v53 = 0;
                  while (1)
                  {
                    unint64_t v54 = v43 + 1;
                    *((void *)this + 1) = v43 + 1;
                    char v55 = *(unsigned char *)(v44 + v43);
                    v53 |= (unint64_t)(v55 & 0x7F) << v51;
                    if ((v55 & 0x80) == 0) {
                      break;
                    }
                    v51 += 7;
                    unint64_t v43 = v54;
                    BOOL v45 = v52++ > 8;
                    if (v45)
                    {
                      LODWORD(v53) = 0;
                      break;
                    }
                  }
                }
                *((_DWORD *)v32 - 1) = v53;
              }
              while (v54 < v42 && !*((unsigned char *)this + 24));
            }
            goto LABEL_191;
          }
          uint64_t v113 = *(char **)(a1 + 40);
          unint64_t v112 = *(void *)(a1 + 48);
          if ((unint64_t)v113 >= v112)
          {
            char v129 = (char *)*v10;
            uint64_t v130 = (v113 - (unsigned char *)*v10) >> 2;
            unint64_t v131 = v130 + 1;
            if ((unint64_t)(v130 + 1) >> 62) {
LABEL_284:
            }
              sub_1001D7FD4();
            uint64_t v132 = v112 - (void)v129;
            if (v132 >> 1 > v131) {
              unint64_t v131 = v132 >> 1;
            }
            if ((unint64_t)v132 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v133 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v133 = v131;
            }
            if (v133)
            {
              v134 = (char *)sub_10017EA34((uint64_t)v11, v133);
              char v129 = *(char **)(a1 + 32);
              uint64_t v113 = *(char **)(a1 + 40);
            }
            else
            {
              v134 = 0;
            }
            uint64_t v141 = &v134[4 * v130];
            *(_DWORD *)uint64_t v141 = 0;
            unint64_t v114 = v141 + 4;
            while (v113 != v129)
            {
              int v142 = *((_DWORD *)v113 - 1);
              v113 -= 4;
              *((_DWORD *)v141 - 1) = v142;
              v141 -= 4;
            }
            *(void *)(a1 + 32) = v141;
            *(void *)(a1 + 40) = v114;
            *(void *)(a1 + 48) = &v134[4 * v133];
            if (v129) {
              operator delete(v129);
            }
          }
          else
          {
            *(_DWORD *)uint64_t v113 = 0;
            unint64_t v114 = v113 + 4;
          }
          *(void *)(a1 + 40) = v114;
          unint64_t v143 = *((void *)this + 1);
          unint64_t v144 = *((void *)this + 2);
          uint64_t v145 = *(void *)this;
          char v146 = 0;
          unsigned int v147 = 0;
          if (v143 <= 0xFFFFFFFFFFFFFFF5 && v143 + 10 <= v144)
          {
            uint64_t v151 = 0;
            while (1)
            {
              unint64_t v152 = v143 + 1;
              *((void *)this + 1) = v143 + 1;
              char v153 = *(unsigned char *)(v145 + v143);
              v151 |= (unint64_t)(v153 & 0x7F) << v146;
              if ((v153 & 0x80) == 0) {
                goto LABEL_273;
              }
              v146 += 7;
              unint64_t v143 = v152;
              BOOL v45 = v147++ > 8;
              if (v45) {
                goto LABEL_269;
              }
            }
          }
          uint64_t v151 = 0;
          if (v144 <= v143) {
            unint64_t v144 = *((void *)this + 1);
          }
          while (v144 != v143)
          {
            unint64_t v149 = v143 + 1;
            char v150 = *(unsigned char *)(v145 + v143);
            *((void *)this + 1) = v149;
            v151 |= (unint64_t)(v150 & 0x7F) << v146;
            if ((v150 & 0x80) == 0) {
              goto LABEL_271;
            }
            v146 += 7;
            unint64_t v143 = v149;
            BOOL v45 = v147++ > 8;
            if (v45) {
              goto LABEL_269;
            }
          }
          goto LABEL_270;
        case 3u:
          *(_WORD *)(a1 + 104) |= 0x100u;
          unint64_t v56 = *((void *)this + 1);
          if (v56 > 0xFFFFFFFFFFFFFFFBLL || v56 + 4 > *((void *)this + 2)) {
            goto LABEL_157;
          }
          *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v56);
          goto LABEL_193;
        case 4u:
          *(_WORD *)(a1 + 104) |= 0x40u;
          unint64_t v57 = *((void *)this + 1);
          if (v57 > 0xFFFFFFFFFFFFFFFBLL || v57 + 4 > *((void *)this + 2)) {
            goto LABEL_157;
          }
          *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(void *)this + v57);
          goto LABEL_193;
        case 5u:
          *(_WORD *)(a1 + 104) |= 0x80u;
          unint64_t v58 = *((void *)this + 1);
          if (v58 > 0xFFFFFFFFFFFFFFFBLL || v58 + 4 > *((void *)this + 2)) {
            goto LABEL_157;
          }
          *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v58);
          goto LABEL_193;
        case 6u:
          *(_WORD *)(a1 + 104) |= 0x20u;
          unint64_t v59 = *((void *)this + 1);
          unint64_t v60 = *((void *)this + 2);
          uint64_t v61 = *(void *)this;
          if (v59 <= 0xFFFFFFFFFFFFFFF5 && v59 + 10 <= v60)
          {
            char v62 = 0;
            unsigned int v63 = 0;
            uint64_t v64 = 0;
            do
            {
              unint64_t v65 = v59 + 1;
              *((void *)this + 1) = v59 + 1;
              char v66 = *(unsigned char *)(v61 + v59);
              v64 |= (unint64_t)(v66 & 0x7F) << v62;
              if ((v66 & 0x80) == 0) {
                goto LABEL_219;
              }
              v62 += 7;
              unint64_t v59 = v65;
              BOOL v45 = v63++ > 8;
            }
            while (!v45);
LABEL_173:
            LODWORD(v64) = 0;
            goto LABEL_219;
          }
          char v115 = 0;
          unsigned int v116 = 0;
          uint64_t v64 = 0;
          if (v60 <= v59) {
            unint64_t v60 = *((void *)this + 1);
          }
          while (2)
          {
            if (v60 == v59)
            {
              LODWORD(v64) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v117 = v59 + 1;
              char v118 = *(unsigned char *)(v61 + v59);
              *((void *)this + 1) = v117;
              v64 |= (unint64_t)(v118 & 0x7F) << v115;
              if (v118 < 0)
              {
                v115 += 7;
                unint64_t v59 = v117;
                BOOL v45 = v116++ > 8;
                if (v45) {
                  goto LABEL_173;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v64) = 0;
              }
            }
            break;
          }
LABEL_219:
          *(_DWORD *)(a1 + 88) = v64;
          goto LABEL_274;
        case 7u:
          *(_WORD *)(a1 + 104) |= 2u;
          unint64_t v67 = *((void *)this + 1);
          unint64_t v68 = *((void *)this + 2);
          uint64_t v69 = *(void *)this;
          if (v67 <= 0xFFFFFFFFFFFFFFF5 && v67 + 10 <= v68)
          {
            char v70 = 0;
            unsigned int v71 = 0;
            uint64_t v72 = 0;
            do
            {
              unint64_t v73 = v67 + 1;
              *((void *)this + 1) = v67 + 1;
              char v74 = *(unsigned char *)(v69 + v67);
              v72 |= (unint64_t)(v74 & 0x7F) << v70;
              if ((v74 & 0x80) == 0) {
                goto LABEL_222;
              }
              v70 += 7;
              unint64_t v67 = v73;
              BOOL v45 = v71++ > 8;
            }
            while (!v45);
LABEL_180:
            uint64_t v72 = 0;
            goto LABEL_222;
          }
          char v119 = 0;
          unsigned int v120 = 0;
          uint64_t v72 = 0;
          if (v68 <= v67) {
            unint64_t v68 = *((void *)this + 1);
          }
          while (2)
          {
            if (v68 == v67)
            {
              uint64_t v72 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v121 = v67 + 1;
              char v122 = *(unsigned char *)(v69 + v67);
              *((void *)this + 1) = v121;
              v72 |= (unint64_t)(v122 & 0x7F) << v119;
              if (v122 < 0)
              {
                v119 += 7;
                unint64_t v67 = v121;
                BOOL v45 = v120++ > 8;
                if (v45) {
                  goto LABEL_180;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v72 = 0;
              }
            }
            break;
          }
LABEL_222:
          *(void *)(a1 + 64) = v72;
          goto LABEL_274;
        case 8u:
          *(_WORD *)(a1 + 104) |= 4u;
          unint64_t v75 = *((void *)this + 1);
          unint64_t v76 = *((void *)this + 2);
          uint64_t v77 = *(void *)this;
          if (v75 <= 0xFFFFFFFFFFFFFFF5 && v75 + 10 <= v76)
          {
            char v78 = 0;
            unsigned int v79 = 0;
            uint64_t v80 = 0;
            do
            {
              unint64_t v81 = v75 + 1;
              *((void *)this + 1) = v75 + 1;
              char v82 = *(unsigned char *)(v77 + v75);
              v80 |= (unint64_t)(v82 & 0x7F) << v78;
              if ((v82 & 0x80) == 0) {
                goto LABEL_225;
              }
              v78 += 7;
              unint64_t v75 = v81;
              BOOL v45 = v79++ > 8;
            }
            while (!v45);
LABEL_187:
            uint64_t v80 = 0;
            goto LABEL_225;
          }
          char v123 = 0;
          unsigned int v124 = 0;
          uint64_t v80 = 0;
          if (v76 <= v75) {
            unint64_t v76 = *((void *)this + 1);
          }
          while (2)
          {
            if (v76 == v75)
            {
              uint64_t v80 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v125 = v75 + 1;
              char v126 = *(unsigned char *)(v77 + v75);
              *((void *)this + 1) = v125;
              v80 |= (unint64_t)(v126 & 0x7F) << v123;
              if (v126 < 0)
              {
                v123 += 7;
                unint64_t v75 = v125;
                BOOL v45 = v124++ > 8;
                if (v45) {
                  goto LABEL_187;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v80 = 0;
              }
            }
            break;
          }
LABEL_225:
          *(void *)(a1 + 72) = v80;
          goto LABEL_274;
        case 9u:
          if (v23 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            if (*((void *)this + 1) < *((void *)this + 2) && !*((unsigned char *)this + 24))
            {
              unint64_t v32 = *(char **)(a1 + 16);
              do
              {
                if ((unint64_t)v32 >= *v9)
                {
                  unsigned int v84 = (char *)*v8;
                  uint64_t v85 = (v32 - (unsigned char *)*v8) >> 2;
                  unint64_t v86 = v85 + 1;
                  if ((unint64_t)(v85 + 1) >> 62) {
                    goto LABEL_285;
                  }
                  uint64_t v87 = *v9 - (void)v84;
                  if (v87 >> 1 > v86) {
                    unint64_t v86 = v87 >> 1;
                  }
                  if ((unint64_t)v87 >= 0x7FFFFFFFFFFFFFFCLL) {
                    unint64_t v88 = 0x3FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v88 = v86;
                  }
                  if (v88)
                  {
                    unint64_t v89 = (char *)sub_10017EA34((uint64_t)v9, v88);
                    unsigned int v84 = *(char **)(a1 + 8);
                    unint64_t v32 = *(char **)(a1 + 16);
                  }
                  else
                  {
                    unint64_t v89 = 0;
                  }
                  uint64_t v90 = &v89[4 * v85];
                  *(_DWORD *)uint64_t v90 = 0;
                  BOOL v91 = v90 + 4;
                  while (v32 != v84)
                  {
                    int v92 = *((_DWORD *)v32 - 1);
                    v32 -= 4;
                    *((_DWORD *)v90 - 1) = v92;
                    v90 -= 4;
                  }
                  *(void *)(a1 + 8) = v90;
                  *(void *)(a1 + 16) = v91;
                  *(void *)(a1 + 24) = &v89[4 * v88];
                  if (v84) {
                    operator delete(v84);
                  }
                  unint64_t v32 = v91;
                }
                else
                {
                  *(_DWORD *)unint64_t v32 = 0;
                  v32 += 4;
                }
                *(void *)(a1 + 16) = v32;
                unint64_t v94 = *((void *)this + 1);
                unint64_t v93 = *((void *)this + 2);
                uint64_t v95 = *(void *)this;
                if (v94 <= 0xFFFFFFFFFFFFFFF5 && v94 + 10 <= v93)
                {
                  char v102 = 0;
                  unsigned int v103 = 0;
                  uint64_t v104 = 0;
                  while (1)
                  {
                    unint64_t v105 = v94 + 1;
                    *((void *)this + 1) = v94 + 1;
                    char v106 = *(unsigned char *)(v95 + v94);
                    v104 |= (unint64_t)(v106 & 0x7F) << v102;
                    if ((v106 & 0x80) == 0) {
                      goto LABEL_152;
                    }
                    v102 += 7;
                    unint64_t v94 = v105;
                    BOOL v45 = v103++ > 8;
                    if (v45)
                    {
                      LODWORD(v104) = 0;
                      goto LABEL_152;
                    }
                  }
                }
                char v97 = 0;
                unsigned int v98 = 0;
                uint64_t v104 = 0;
                if (v93 <= v94) {
                  uint64_t v99 = *((void *)this + 1);
                }
                else {
                  uint64_t v99 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v99 == v94)
                  {
LABEL_190:
                    *((unsigned char *)this + 24) = 1;
                    *((_DWORD *)v32 - 1) = 0;
                    goto LABEL_191;
                  }
                  unint64_t v100 = v94++;
                  char v101 = *(unsigned char *)(v95 + v100);
                  *((void *)this + 1) = v94;
                  v104 |= (unint64_t)(v101 & 0x7F) << v97;
                  if ((v101 & 0x80) == 0) {
                    break;
                  }
                  v97 += 7;
                  BOOL v45 = v98++ > 8;
                  if (v45)
                  {
                    LODWORD(v104) = 0;
                    goto LABEL_151;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v104) = 0;
                }
LABEL_151:
                unint64_t v105 = v100 + 1;
LABEL_152:
                *((_DWORD *)v32 - 1) = v104;
              }
              while (v105 < v93 && !*((unsigned char *)this + 24));
            }
LABEL_191:
            PB::Reader::recallMark();
          }
          else
          {
            unint64_t v128 = *(char **)(a1 + 16);
            unint64_t v127 = *(void *)(a1 + 24);
            if ((unint64_t)v128 >= v127)
            {
              uint64_t v135 = (char *)*v8;
              uint64_t v136 = (v128 - (unsigned char *)*v8) >> 2;
              unint64_t v137 = v136 + 1;
              if ((unint64_t)(v136 + 1) >> 62) {
LABEL_285:
              }
                sub_1001D7FD4();
              uint64_t v138 = v127 - (void)v135;
              if (v138 >> 1 > v137) {
                unint64_t v137 = v138 >> 1;
              }
              if ((unint64_t)v138 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v139 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v139 = v137;
              }
              if (v139)
              {
                unint64_t v140 = (char *)sub_10017EA34((uint64_t)v9, v139);
                uint64_t v135 = *(char **)(a1 + 8);
                unint64_t v128 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v140 = 0;
              }
              uint64_t v154 = &v140[4 * v136];
              *(_DWORD *)uint64_t v154 = 0;
              unint64_t v114 = v154 + 4;
              while (v128 != v135)
              {
                int v155 = *((_DWORD *)v128 - 1);
                v128 -= 4;
                *((_DWORD *)v154 - 1) = v155;
                v154 -= 4;
              }
              *(void *)(a1 + 8) = v154;
              *(void *)(a1 + 16) = v114;
              *(void *)(a1 + 24) = &v140[4 * v139];
              if (v135) {
                operator delete(v135);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v128 = 0;
              unint64_t v114 = v128 + 4;
            }
            *(void *)(a1 + 16) = v114;
            unint64_t v156 = *((void *)this + 1);
            unint64_t v157 = *((void *)this + 2);
            uint64_t v158 = *(void *)this;
            char v159 = 0;
            unsigned int v160 = 0;
            if (v156 > 0xFFFFFFFFFFFFFFF5 || v156 + 10 > v157)
            {
              uint64_t v151 = 0;
              if (v157 <= v156) {
                unint64_t v157 = *((void *)this + 1);
              }
              while (v157 != v156)
              {
                unint64_t v162 = v156 + 1;
                char v163 = *(unsigned char *)(v158 + v156);
                *((void *)this + 1) = v162;
                v151 |= (unint64_t)(v163 & 0x7F) << v159;
                if ((v163 & 0x80) == 0)
                {
LABEL_271:
                  if (*((unsigned char *)this + 24)) {
                    LODWORD(v151) = 0;
                  }
                  goto LABEL_273;
                }
                v159 += 7;
                unint64_t v156 = v162;
                BOOL v45 = v160++ > 8;
                if (v45)
                {
LABEL_269:
                  LODWORD(v151) = 0;
                  goto LABEL_273;
                }
              }
LABEL_270:
              LODWORD(v151) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              uint64_t v151 = 0;
              while (1)
              {
                unint64_t v164 = v156 + 1;
                *((void *)this + 1) = v156 + 1;
                char v165 = *(unsigned char *)(v158 + v156);
                v151 |= (unint64_t)(v165 & 0x7F) << v159;
                if ((v165 & 0x80) == 0) {
                  break;
                }
                v159 += 7;
                unint64_t v156 = v164;
                BOOL v45 = v160++ > 8;
                if (v45) {
                  goto LABEL_269;
                }
              }
            }
LABEL_273:
            *(v114 - 1) = v151;
          }
LABEL_274:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        case 0xAu:
          *(_WORD *)(a1 + 104) |= 0x10u;
          unint64_t v83 = *((void *)this + 1);
          if (v83 > 0xFFFFFFFFFFFFFFFBLL || v83 + 4 > *((void *)this + 2)) {
            goto LABEL_157;
          }
          *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v83);
          goto LABEL_193;
        case 0xBu:
          *(_WORD *)(a1 + 104) |= 8u;
          unint64_t v107 = *((void *)this + 1);
          if (v107 <= 0xFFFFFFFFFFFFFFFBLL && v107 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v107);
LABEL_193:
            *((void *)this + 1) += 4;
          }
          else
          {
LABEL_157:
            *((unsigned char *)this + 24) = 1;
          }
          goto LABEL_274;
        default:
          if ((PB::Reader::skip(this, v15 >> 3, v23, 0) & 1) == 0) {
            return 0;
          }
          goto LABEL_274;
      }
    }
    char v18 = 0;
    unsigned int v19 = 0;
    unint64_t v15 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v20 = v2 + 1;
      char v21 = *(unsigned char *)(v12 + v2);
      *((void *)this + 1) = v20;
      v15 |= (unint64_t)(v21 & 0x7F) << v18;
      if ((v21 & 0x80) == 0) {
        goto LABEL_21;
      }
      v18 += 7;
      unint64_t v2 = v20;
      if (v19++ >= 9)
      {
LABEL_20:
        unint64_t v15 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10167A398(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  if (*(_WORD *)(result + 104)) {
    double result = PB::Writer::writeVarInt(this, *(void *)(result + 56), 1u);
  }
  int v4 = *(unsigned int **)(v3 + 32);
  __int16 v5 = *(unsigned int **)(v3 + 40);
  while (v4 != v5)
  {
    unsigned int v6 = *v4++;
    double result = PB::Writer::writeVarInt(this, v6, 2u);
  }
  __int16 v7 = *(_WORD *)(v3 + 104);
  if ((v7 & 0x100) != 0)
  {
    double result = PB::Writer::write(this, *(float *)(v3 + 100), 3u);
    __int16 v7 = *(_WORD *)(v3 + 104);
    if ((v7 & 0x40) == 0)
    {
LABEL_8:
      if ((v7 & 0x80) == 0) {
        goto LABEL_9;
      }
      goto LABEL_22;
    }
  }
  else if ((v7 & 0x40) == 0)
  {
    goto LABEL_8;
  }
  double result = PB::Writer::write(this, *(float *)(v3 + 92), 4u);
  __int16 v7 = *(_WORD *)(v3 + 104);
  if ((v7 & 0x80) == 0)
  {
LABEL_9:
    if ((v7 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  double result = PB::Writer::write(this, *(float *)(v3 + 96), 5u);
  __int16 v7 = *(_WORD *)(v3 + 104);
  if ((v7 & 0x20) == 0)
  {
LABEL_10:
    if ((v7 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_24:
    double result = PB::Writer::writeVarInt(this, *(void *)(v3 + 64), 7u);
    if ((*(_WORD *)(v3 + 104) & 4) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_23:
  double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 88), 6u);
  __int16 v7 = *(_WORD *)(v3 + 104);
  if ((v7 & 2) != 0) {
    goto LABEL_24;
  }
LABEL_11:
  if ((v7 & 4) != 0) {
LABEL_12:
  }
    double result = PB::Writer::writeVarInt(this, *(void *)(v3 + 72), 8u);
LABEL_13:
  unsigned int v8 = *(unsigned int **)(v3 + 8);
  __int16 v9 = *(unsigned int **)(v3 + 16);
  while (v8 != v9)
  {
    unsigned int v10 = *v8++;
    double result = PB::Writer::writeVarInt(this, v10, 9u);
  }
  __int16 v11 = *(_WORD *)(v3 + 104);
  if ((v11 & 0x10) != 0)
  {
    double result = PB::Writer::write(this, *(float *)(v3 + 84), 0xAu);
    __int16 v11 = *(_WORD *)(v3 + 104);
  }
  if ((v11 & 8) != 0)
  {
    float v12 = *(float *)(v3 + 80);
    return PB::Writer::write(this, v12, 0xBu);
  }
  return result;
}

uint64_t sub_10167A510(uint64_t result)
{
  *(void *)double result = &off_102333DB0;
  *(_DWORD *)(result + 68) = 0;
  return result;
}

void sub_10167A538(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_10167A570(uint64_t result, uint64_t a2)
{
  *(void *)double result = &off_102333DB0;
  *(_DWORD *)(result + 68) = 0;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x400) != 0)
  {
    char v4 = *(unsigned char *)(a2 + 64);
    __int16 v3 = 1024;
    *(_WORD *)(result + 68) = 1024;
    *(unsigned char *)(result + 64) = v4;
    __int16 v2 = *(_WORD *)(a2 + 68);
    if ((v2 & 0x80) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 0x80) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 52);
    v3 |= 0x80u;
    *(_WORD *)(result + 68) = v3;
    *(_DWORD *)(result + 52) = v5;
    __int16 v2 = *(_WORD *)(a2 + 68);
  }
LABEL_6:
  if ((v2 & 0x40) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 48);
    v3 |= 0x40u;
    *(_WORD *)(result + 68) = v3;
    *(_DWORD *)(result + 48) = v6;
    __int16 v2 = *(_WORD *)(a2 + 68);
    if ((v2 & 0x200) == 0)
    {
LABEL_8:
      if ((v2 & 0x100) == 0) {
        goto LABEL_9;
      }
      goto LABEL_18;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 60);
  v3 |= 0x200u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 60) = v7;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x100) == 0)
  {
LABEL_9:
    if ((v2 & 4) == 0) {
      goto LABEL_10;
    }
    goto LABEL_19;
  }
LABEL_18:
  int v8 = *(_DWORD *)(a2 + 56);
  v3 |= 0x100u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 56) = v8;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 4) == 0)
  {
LABEL_10:
    if ((v2 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t v9 = *(void *)(a2 + 24);
  v3 |= 4u;
  *(_WORD *)(result + 68) = v3;
  *(void *)(result + 24) = v9;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x10) == 0)
  {
LABEL_11:
    if ((v2 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_21;
  }
LABEL_20:
  int v10 = *(_DWORD *)(a2 + 40);
  v3 |= 0x10u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 40) = v10;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 1) == 0)
  {
LABEL_12:
    if ((v2 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t v11 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(result + 68) = v3;
  *(void *)(result + 8) = v11;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 2) == 0)
  {
LABEL_13:
    if ((v2 & 0x20) == 0) {
      goto LABEL_14;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t v12 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_WORD *)(result + 68) = v3;
  *(void *)(result + 16) = v12;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x20) == 0)
  {
LABEL_14:
    if ((v2 & 8) == 0) {
      return result;
    }
LABEL_24:
    uint64_t v14 = *(void *)(a2 + 32);
    *(_WORD *)(result + 68) = v3 | 8;
    *(void *)(result + 32) = v14;
    return result;
  }
LABEL_23:
  int v13 = *(_DWORD *)(a2 + 44);
  v3 |= 0x20u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 44) = v13;
  if ((*(_WORD *)(a2 + 68) & 8) != 0) {
    goto LABEL_24;
  }
  return result;
}

uint64_t sub_10167A6D0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x10) != 0)
  {
    PB::TextFormatter::format(this, "diffPeakTimestampTrigger", *(_DWORD *)(a1 + 40));
    __int16 v5 = *(_WORD *)(a1 + 68);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v5 & 1) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "epochFirstTimestamp", *(void *)(a1 + 8));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 2) == 0)
  {
LABEL_4:
    if ((v5 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "epochLastTimestamp", *(void *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x20) == 0)
  {
LABEL_5:
    if ((v5 & 0x400) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "maxAccelNormInWindow", *(float *)(a1 + 44));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x400) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "pass", *(unsigned char *)(a1 + 64));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x40) == 0)
  {
LABEL_7:
    if ((v5 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "peakPressure", *(float *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 4) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "peakTimestamp", *(void *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "pressureODR", *(_DWORD *)(a1 + 52));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x100) == 0)
  {
LABEL_10:
    if ((v5 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "riseTime", *(float *)(a1 + 56));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 8) == 0)
  {
LABEL_11:
    if ((v5 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_25:
  PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 32));
  if ((*(_WORD *)(a1 + 68) & 0x200) != 0) {
LABEL_12:
  }
    PB::TextFormatter::format(this, "width", *(float *)(a1 + 60));
LABEL_13:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10167A874(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 68) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v21 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v20 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v21 = v20 != 0;
              }
              *(unsigned char *)(a1 + 64) = v21;
              goto LABEL_156;
            case 2u:
              *(_WORD *)(a1 + 68) |= 0x80u;
              unint64_t v23 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v24 = *(void *)this;
              if (v23 > 0xFFFFFFFFFFFFFFF5 || v23 + 10 > v2)
              {
                char v59 = 0;
                unsigned int v60 = 0;
                uint64_t v27 = 0;
                if (v2 <= v23) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v23)
                  {
                    LODWORD(v27) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_130;
                  }
                  unint64_t v61 = v23++;
                  char v62 = *(unsigned char *)(v24 + v61);
                  *((void *)this + 1) = v23;
                  v27 |= (unint64_t)(v62 & 0x7F) << v59;
                  if ((v62 & 0x80) == 0) {
                    break;
                  }
                  v59 += 7;
                  BOOL v14 = v60++ > 8;
                  if (v14)
                  {
                    LODWORD(v27) = 0;
LABEL_129:
                    unint64_t v2 = v61 + 1;
                    goto LABEL_130;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v27) = 0;
                }
                goto LABEL_129;
              }
              char v25 = 0;
              unsigned int v26 = 0;
              uint64_t v27 = 0;
              do
              {
                unint64_t v2 = v23 + 1;
                *((void *)this + 1) = v23 + 1;
                char v28 = *(unsigned char *)(v24 + v23);
                v27 |= (unint64_t)(v28 & 0x7F) << v25;
                if ((v28 & 0x80) == 0) {
                  goto LABEL_130;
                }
                v25 += 7;
                unint64_t v23 = v2;
                BOOL v14 = v26++ > 8;
              }
              while (!v14);
              LODWORD(v27) = 0;
LABEL_130:
              *(_DWORD *)(a1 + 52) = v27;
              goto LABEL_156;
            case 3u:
              *(_WORD *)(a1 + 68) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_72;
              }
              *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_125;
            case 4u:
              *(_WORD *)(a1 + 68) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_72;
              }
              *(_DWORD *)(a1 + 60) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_125;
            case 5u:
              *(_WORD *)(a1 + 68) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_72;
              }
              *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_125;
            case 6u:
              *(_WORD *)(a1 + 68) |= 4u;
              unint64_t v29 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v30 = *(void *)this;
              if (v29 > 0xFFFFFFFFFFFFFFF5 || v29 + 10 > v2)
              {
                char v63 = 0;
                unsigned int v64 = 0;
                uint64_t v33 = 0;
                if (v2 <= v29) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v29)
                  {
                    uint64_t v33 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_135;
                  }
                  unint64_t v65 = v29++;
                  char v66 = *(unsigned char *)(v30 + v65);
                  *((void *)this + 1) = v29;
                  v33 |= (unint64_t)(v66 & 0x7F) << v63;
                  if ((v66 & 0x80) == 0) {
                    break;
                  }
                  v63 += 7;
                  BOOL v14 = v64++ > 8;
                  if (v14)
                  {
                    uint64_t v33 = 0;
LABEL_134:
                    unint64_t v2 = v65 + 1;
                    goto LABEL_135;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v33 = 0;
                }
                goto LABEL_134;
              }
              char v31 = 0;
              unsigned int v32 = 0;
              uint64_t v33 = 0;
              do
              {
                unint64_t v2 = v29 + 1;
                *((void *)this + 1) = v29 + 1;
                char v34 = *(unsigned char *)(v30 + v29);
                v33 |= (unint64_t)(v34 & 0x7F) << v31;
                if ((v34 & 0x80) == 0) {
                  goto LABEL_135;
                }
                v31 += 7;
                unint64_t v29 = v2;
                BOOL v14 = v32++ > 8;
              }
              while (!v14);
              uint64_t v33 = 0;
LABEL_135:
              *(void *)(a1 + 24) = v33;
              goto LABEL_156;
            case 7u:
              *(_WORD *)(a1 + 68) |= 0x10u;
              unint64_t v35 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v36 = *(void *)this;
              if (v35 > 0xFFFFFFFFFFFFFFF5 || v35 + 10 > v2)
              {
                char v67 = 0;
                unsigned int v68 = 0;
                uint64_t v39 = 0;
                if (v2 <= v35) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v35)
                  {
                    LODWORD(v39) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_140;
                  }
                  unint64_t v69 = v35++;
                  char v70 = *(unsigned char *)(v36 + v69);
                  *((void *)this + 1) = v35;
                  v39 |= (unint64_t)(v70 & 0x7F) << v67;
                  if ((v70 & 0x80) == 0) {
                    break;
                  }
                  v67 += 7;
                  BOOL v14 = v68++ > 8;
                  if (v14)
                  {
                    LODWORD(v39) = 0;
LABEL_139:
                    unint64_t v2 = v69 + 1;
                    goto LABEL_140;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v39) = 0;
                }
                goto LABEL_139;
              }
              char v37 = 0;
              unsigned int v38 = 0;
              uint64_t v39 = 0;
              do
              {
                unint64_t v2 = v35 + 1;
                *((void *)this + 1) = v35 + 1;
                char v40 = *(unsigned char *)(v36 + v35);
                v39 |= (unint64_t)(v40 & 0x7F) << v37;
                if ((v40 & 0x80) == 0) {
                  goto LABEL_140;
                }
                v37 += 7;
                unint64_t v35 = v2;
                BOOL v14 = v38++ > 8;
              }
              while (!v14);
              LODWORD(v39) = 0;
LABEL_140:
              *(_DWORD *)(a1 + 40) = v39;
              goto LABEL_156;
            case 8u:
              *(_WORD *)(a1 + 68) |= 1u;
              unint64_t v41 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v42 = *(void *)this;
              if (v41 > 0xFFFFFFFFFFFFFFF5 || v41 + 10 > v2)
              {
                char v71 = 0;
                unsigned int v72 = 0;
                uint64_t v45 = 0;
                if (v2 <= v41) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v41)
                  {
                    uint64_t v45 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_145;
                  }
                  unint64_t v73 = v41++;
                  char v74 = *(unsigned char *)(v42 + v73);
                  *((void *)this + 1) = v41;
                  v45 |= (unint64_t)(v74 & 0x7F) << v71;
                  if ((v74 & 0x80) == 0) {
                    break;
                  }
                  v71 += 7;
                  BOOL v14 = v72++ > 8;
                  if (v14)
                  {
                    uint64_t v45 = 0;
LABEL_144:
                    unint64_t v2 = v73 + 1;
                    goto LABEL_145;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v45 = 0;
                }
                goto LABEL_144;
              }
              char v43 = 0;
              unsigned int v44 = 0;
              uint64_t v45 = 0;
              do
              {
                unint64_t v2 = v41 + 1;
                *((void *)this + 1) = v41 + 1;
                char v46 = *(unsigned char *)(v42 + v41);
                v45 |= (unint64_t)(v46 & 0x7F) << v43;
                if ((v46 & 0x80) == 0) {
                  goto LABEL_145;
                }
                v43 += 7;
                unint64_t v41 = v2;
                BOOL v14 = v44++ > 8;
              }
              while (!v14);
              uint64_t v45 = 0;
LABEL_145:
              *(void *)(a1 + 8) = v45;
              goto LABEL_156;
            case 9u:
              *(_WORD *)(a1 + 68) |= 2u;
              unint64_t v47 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v48 = *(void *)this;
              if (v47 > 0xFFFFFFFFFFFFFFF5 || v47 + 10 > v2)
              {
                char v75 = 0;
                unsigned int v76 = 0;
                uint64_t v51 = 0;
                if (v2 <= v47) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v47)
                  {
                    uint64_t v51 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_150;
                  }
                  unint64_t v77 = v47++;
                  char v78 = *(unsigned char *)(v48 + v77);
                  *((void *)this + 1) = v47;
                  v51 |= (unint64_t)(v78 & 0x7F) << v75;
                  if ((v78 & 0x80) == 0) {
                    break;
                  }
                  v75 += 7;
                  BOOL v14 = v76++ > 8;
                  if (v14)
                  {
                    uint64_t v51 = 0;
LABEL_149:
                    unint64_t v2 = v77 + 1;
                    goto LABEL_150;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v51 = 0;
                }
                goto LABEL_149;
              }
              char v49 = 0;
              unsigned int v50 = 0;
              uint64_t v51 = 0;
              do
              {
                unint64_t v2 = v47 + 1;
                *((void *)this + 1) = v47 + 1;
                char v52 = *(unsigned char *)(v48 + v47);
                v51 |= (unint64_t)(v52 & 0x7F) << v49;
                if ((v52 & 0x80) == 0) {
                  goto LABEL_150;
                }
                v49 += 7;
                unint64_t v47 = v2;
                BOOL v14 = v50++ > 8;
              }
              while (!v14);
              uint64_t v51 = 0;
LABEL_150:
              *(void *)(a1 + 16) = v51;
              goto LABEL_156;
            case 0xAu:
              *(_WORD *)(a1 + 68) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
LABEL_125:
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_72:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_156;
            case 0xBu:
              *(_WORD *)(a1 + 68) |= 8u;
              unint64_t v53 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v54 = *(void *)this;
              if (v53 > 0xFFFFFFFFFFFFFFF5 || v53 + 10 > v2)
              {
                char v79 = 0;
                unsigned int v80 = 0;
                uint64_t v57 = 0;
                if (v2 <= v53) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v53)
                  {
                    uint64_t v57 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_155;
                  }
                  unint64_t v81 = v53++;
                  char v82 = *(unsigned char *)(v54 + v81);
                  *((void *)this + 1) = v53;
                  v57 |= (unint64_t)(v82 & 0x7F) << v79;
                  if ((v82 & 0x80) == 0) {
                    break;
                  }
                  v79 += 7;
                  BOOL v14 = v80++ > 8;
                  if (v14)
                  {
                    uint64_t v57 = 0;
LABEL_154:
                    unint64_t v2 = v81 + 1;
                    goto LABEL_155;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v57 = 0;
                }
                goto LABEL_154;
              }
              char v55 = 0;
              unsigned int v56 = 0;
              uint64_t v57 = 0;
              do
              {
                unint64_t v2 = v53 + 1;
                *((void *)this + 1) = v53 + 1;
                char v58 = *(unsigned char *)(v54 + v53);
                v57 |= (unint64_t)(v58 & 0x7F) << v55;
                if ((v58 & 0x80) == 0) {
                  goto LABEL_155;
                }
                v55 += 7;
                unint64_t v53 = v2;
                BOOL v14 = v56++ > 8;
              }
              while (!v14);
              uint64_t v57 = 0;
LABEL_155:
              *(void *)(a1 + 32) = v57;
LABEL_156:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_156;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_10167B0D4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 68);
  if ((v4 & 0x400) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(unsigned char *)(result + 64), 1u);
    __int16 v4 = *(_WORD *)(v3 + 68);
    if ((v4 & 0x80) == 0)
    {
LABEL_3:
      if ((v4 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v4 & 0x80) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 52), 2u);
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x40) == 0)
  {
LABEL_4:
    if ((v4 & 0x200) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48), 3u);
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x200) == 0)
  {
LABEL_5:
    if ((v4 & 0x100) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 60), 4u);
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x100) == 0)
  {
LABEL_6:
    if ((v4 & 4) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56), 5u);
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 24), 6u);
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x10) == 0)
  {
LABEL_8:
    if ((v4 & 1) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 40), 7u);
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 1) == 0)
  {
LABEL_9:
    if ((v4 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 8), 8u);
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 2) == 0)
  {
LABEL_10:
    if ((v4 & 0x20) == 0) {
      goto LABEL_11;
    }
LABEL_22:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44), 0xAu);
    if ((*(_WORD *)(v3 + 68) & 8) == 0) {
      return result;
    }
    goto LABEL_23;
  }
LABEL_21:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 16), 9u);
  __int16 v4 = *(_WORD *)(v3 + 68);
  if ((v4 & 0x20) != 0) {
    goto LABEL_22;
  }
LABEL_11:
  if ((v4 & 8) == 0) {
    return result;
  }
LABEL_23:
  unint64_t v5 = *(void *)(v3 + 32);

  return PB::Writer::writeVarInt(this, v5, 0xBu);
}

uint64_t sub_10167B240(uint64_t result)
{
  *(void *)uint64_t result = &off_102333DE8;
  *(_DWORD *)(result + 108) = 0;
  return result;
}

void sub_10167B268(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

float sub_10167B2A0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102333DE8;
  *(_DWORD *)(a1 + 108) = 0;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x800000) != 0)
  {
    char v4 = *(unsigned char *)(a2 + 100);
    int v3 = 0x800000;
    *(_DWORD *)(a1 + 108) = 0x800000;
    *(unsigned char *)(a1 + 100) = v4;
    int v2 = *(_DWORD *)(a2 + 108);
    if ((v2 & 0x80000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 0x80000) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 84);
    v3 |= 0x80000u;
    *(_DWORD *)(a1 + 108) = v3;
    *(_DWORD *)(a1 + 84) = v5;
    int v2 = *(_DWORD *)(a2 + 108);
  }
LABEL_6:
  if ((v2 & 0x20000) != 0)
  {
    float result = *(float *)(a2 + 76);
    v3 |= 0x20000u;
    *(_DWORD *)(a1 + 108) = v3;
    *(float *)(a1 + 76) = result;
    int v2 = *(_DWORD *)(a2 + 108);
    if ((v2 & 0x10000) == 0)
    {
LABEL_8:
      if ((v2 & 0x8000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_35;
    }
  }
  else if ((v2 & 0x10000) == 0)
  {
    goto LABEL_8;
  }
  float result = *(float *)(a2 + 72);
  v3 |= 0x10000u;
  *(_DWORD *)(a1 + 108) = v3;
  *(float *)(a1 + 72) = result;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x8000) == 0)
  {
LABEL_9:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_36;
  }
LABEL_35:
  float result = *(float *)(a2 + 68);
  v3 |= 0x8000u;
  *(_DWORD *)(a1 + 108) = v3;
  *(float *)(a1 + 68) = result;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x200000) == 0)
  {
LABEL_10:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_37;
  }
LABEL_36:
  float result = *(float *)(a2 + 92);
  v3 |= 0x200000u;
  *(_DWORD *)(a1 + 108) = v3;
  *(float *)(a1 + 92) = result;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x40000) == 0)
  {
LABEL_11:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_38;
  }
LABEL_37:
  float result = *(float *)(a2 + 80);
  v3 |= 0x40000u;
  *(_DWORD *)(a1 + 108) = v3;
  *(float *)(a1 + 80) = result;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x400000) == 0)
  {
LABEL_12:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_39;
  }
LABEL_38:
  float result = *(float *)(a2 + 96);
  v3 |= 0x400000u;
  *(_DWORD *)(a1 + 108) = v3;
  *(float *)(a1 + 96) = result;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x1000) == 0)
  {
LABEL_13:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_40;
  }
LABEL_39:
  float result = *(float *)(a2 + 56);
  v3 |= 0x1000u;
  *(_DWORD *)(a1 + 108) = v3;
  *(float *)(a1 + 56) = result;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x100000) == 0)
  {
LABEL_14:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_41;
  }
LABEL_40:
  float result = *(float *)(a2 + 88);
  v3 |= 0x100000u;
  *(_DWORD *)(a1 + 108) = v3;
  *(float *)(a1 + 88) = result;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x4000) == 0)
  {
LABEL_15:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_42;
  }
LABEL_41:
  float result = *(float *)(a2 + 64);
  v3 |= 0x4000u;
  *(_DWORD *)(a1 + 108) = v3;
  *(float *)(a1 + 64) = result;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x2000) == 0)
  {
LABEL_16:
    if ((v2 & 0x4000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_43;
  }
LABEL_42:
  float result = *(float *)(a2 + 60);
  v3 |= 0x2000u;
  *(_DWORD *)(a1 + 108) = v3;
  *(float *)(a1 + 60) = result;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_17:
    if ((v2 & 0x2000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_44;
  }
LABEL_43:
  char v7 = *(unsigned char *)(a2 + 103);
  v3 |= 0x4000000u;
  *(_DWORD *)(a1 + 108) = v3;
  *(unsigned char *)(a1 + 103) = v7;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x2000000) == 0)
  {
LABEL_18:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_45;
  }
LABEL_44:
  char v8 = *(unsigned char *)(a2 + 102);
  v3 |= 0x2000000u;
  *(_DWORD *)(a1 + 108) = v3;
  *(unsigned char *)(a1 + 102) = v8;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_19:
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_46;
  }
LABEL_45:
  char v9 = *(unsigned char *)(a2 + 101);
  v3 |= 0x1000000u;
  *(_DWORD *)(a1 + 108) = v3;
  *(unsigned char *)(a1 + 101) = v9;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x8000000) == 0)
  {
LABEL_20:
    if ((v2 & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_47;
  }
LABEL_46:
  char v10 = *(unsigned char *)(a2 + 104);
  v3 |= 0x8000000u;
  *(_DWORD *)(a1 + 108) = v3;
  *(unsigned char *)(a1 + 104) = v10;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 2) == 0)
  {
LABEL_21:
    if ((v2 & 0x800) == 0) {
      goto LABEL_22;
    }
    goto LABEL_48;
  }
LABEL_47:
  int v11 = *(_DWORD *)(a2 + 12);
  v3 |= 2u;
  *(_DWORD *)(a1 + 108) = v3;
  *(_DWORD *)(a1 + 12) = v11;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x800) == 0)
  {
LABEL_22:
    if ((v2 & 0x100) == 0) {
      goto LABEL_23;
    }
    goto LABEL_49;
  }
LABEL_48:
  float result = *(float *)(a2 + 52);
  v3 |= 0x800u;
  *(_DWORD *)(a1 + 108) = v3;
  *(float *)(a1 + 52) = result;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x100) == 0)
  {
LABEL_23:
    if ((v2 & 0x80) == 0) {
      goto LABEL_24;
    }
    goto LABEL_50;
  }
LABEL_49:
  int v12 = *(_DWORD *)(a2 + 40);
  v3 |= 0x100u;
  *(_DWORD *)(a1 + 108) = v3;
  *(_DWORD *)(a1 + 40) = v12;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x80) == 0)
  {
LABEL_24:
    if ((v2 & 0x40) == 0) {
      goto LABEL_25;
    }
    goto LABEL_51;
  }
LABEL_50:
  int v13 = *(_DWORD *)(a2 + 36);
  v3 |= 0x80u;
  *(_DWORD *)(a1 + 108) = v3;
  *(_DWORD *)(a1 + 36) = v13;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x40) == 0)
  {
LABEL_25:
    if ((v2 & 0x20) == 0) {
      goto LABEL_26;
    }
    goto LABEL_52;
  }
LABEL_51:
  float result = *(float *)(a2 + 32);
  v3 |= 0x40u;
  *(_DWORD *)(a1 + 108) = v3;
  *(float *)(a1 + 32) = result;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x20) == 0)
  {
LABEL_26:
    if ((v2 & 8) == 0) {
      goto LABEL_27;
    }
    goto LABEL_53;
  }
LABEL_52:
  float result = *(float *)(a2 + 28);
  v3 |= 0x20u;
  *(_DWORD *)(a1 + 108) = v3;
  *(float *)(a1 + 28) = result;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 8) == 0)
  {
LABEL_27:
    if ((v2 & 4) == 0) {
      goto LABEL_28;
    }
    goto LABEL_54;
  }
LABEL_53:
  float result = *(float *)(a2 + 20);
  v3 |= 8u;
  *(_DWORD *)(a1 + 108) = v3;
  *(float *)(a1 + 20) = result;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 4) == 0)
  {
LABEL_28:
    if ((v2 & 1) == 0) {
      goto LABEL_29;
    }
    goto LABEL_55;
  }
LABEL_54:
  float result = *(float *)(a2 + 16);
  v3 |= 4u;
  *(_DWORD *)(a1 + 108) = v3;
  *(float *)(a1 + 16) = result;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 1) == 0)
  {
LABEL_29:
    if ((v2 & 0x10) == 0) {
      goto LABEL_30;
    }
    goto LABEL_56;
  }
LABEL_55:
  float result = *(float *)(a2 + 8);
  v3 |= 1u;
  *(_DWORD *)(a1 + 108) = v3;
  *(float *)(a1 + 8) = result;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x10) == 0)
  {
LABEL_30:
    if ((v2 & 0x400) == 0) {
      goto LABEL_31;
    }
    goto LABEL_57;
  }
LABEL_56:
  float result = *(float *)(a2 + 24);
  v3 |= 0x10u;
  *(_DWORD *)(a1 + 108) = v3;
  *(float *)(a1 + 24) = result;
  int v2 = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x400) == 0)
  {
LABEL_31:
    if ((v2 & 0x200) == 0) {
      return result;
    }
LABEL_58:
    float result = *(float *)(a2 + 44);
    *(_DWORD *)(a1 + 108) = v3 | 0x200;
    *(float *)(a1 + 44) = result;
    return result;
  }
LABEL_57:
  float result = *(float *)(a2 + 48);
  v3 |= 0x400u;
  *(_DWORD *)(a1 + 108) = v3;
  *(float *)(a1 + 48) = result;
  if ((*(_DWORD *)(a2 + 108) & 0x200) != 0) {
    goto LABEL_58;
  }
  return result;
}

uint64_t sub_10167B5DC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 108);
  if (v5)
  {
    PB::TextFormatter::format(this, "configDelaySpreadFpThreshold", *(float *)(a1 + 8));
    int v5 = *(_DWORD *)(a1 + 108);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_35;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "configFeatureSamples", *(_DWORD *)(a1 + 12));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "configNonPlanarDelaySpreadThreshold", *(float *)(a1 + 16));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "configNonPlanarPaprThreshold", *(float *)(a1 + 20));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "configPeakEnergyFpThreshold", *(float *)(a1 + 24));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "configPlanarDelaySpreadThreshold", *(float *)(a1 + 28));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "configPlanarPaprThreshold", *(float *)(a1 + 32));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "configPostTriggerLimitTime", *(_DWORD *)(a1 + 36));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x100) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(this, "configPreTriggerLimitTime", *(_DWORD *)(a1 + 40));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(this, "configRawRmsMaxFpThreshold", *(float *)(a1 + 44));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x400) == 0)
  {
LABEL_12:
    if ((v5 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(this, "configRawRmsMeanFpThreshold", *(float *)(a1 + 48));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x800) == 0)
  {
LABEL_13:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(this, "configRmsClipMinAmp", *(float *)(a1 + 52));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x1000) == 0)
  {
LABEL_14:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_46;
  }
LABEL_45:
  PB::TextFormatter::format(this, "delaySpread", *(float *)(a1 + 56));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x800000) == 0)
  {
LABEL_15:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_47;
  }
LABEL_46:
  PB::TextFormatter::format(this, "isAudioTPQ", *(unsigned char *)(a1 + 100));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_16:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_48;
  }
LABEL_47:
  PB::TextFormatter::format(this, "isFpThresholdsMet", *(unsigned char *)(a1 + 101));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_17:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(this, "isNonPlanarTp", *(unsigned char *)(a1 + 102));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_18:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_50;
  }
LABEL_49:
  PB::TextFormatter::format(this, "isPlanarTp", *(unsigned char *)(a1 + 103));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_19:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_51;
  }
LABEL_50:
  PB::TextFormatter::format(this, "isTauBarWithinRange", *(unsigned char *)(a1 + 104));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x2000) == 0)
  {
LABEL_20:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_52;
  }
LABEL_51:
  PB::TextFormatter::format(this, "papr", *(float *)(a1 + 60));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x4000) == 0)
  {
LABEL_21:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_53;
  }
LABEL_52:
  PB::TextFormatter::format(this, "peakEnergy", *(float *)(a1 + 64));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x8000) == 0)
  {
LABEL_22:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_54;
  }
LABEL_53:
  PB::TextFormatter::format(this, "rawRmsMax", *(float *)(a1 + 68));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x10000) == 0)
  {
LABEL_23:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(this, "rawRmsMean", *(float *)(a1 + 72));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x20000) == 0)
  {
LABEL_24:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_56;
  }
LABEL_55:
  PB::TextFormatter::format(this, "rawRmsSum", *(float *)(a1 + 76));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x40000) == 0)
  {
LABEL_25:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_57;
  }
LABEL_56:
  PB::TextFormatter::format(this, "rmsClipSum", *(float *)(a1 + 80));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x80000) == 0)
  {
LABEL_26:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_58;
  }
LABEL_57:
  PB::TextFormatter::format(this, "sampleCount", *(_DWORD *)(a1 + 84));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x100000) == 0)
  {
LABEL_27:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_59;
  }
LABEL_58:
  PB::TextFormatter::format(this, "t2TimesRmsClipSum", *(float *)(a1 + 88));
  int v5 = *(_DWORD *)(a1 + 108);
  if ((v5 & 0x200000) == 0)
  {
LABEL_28:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_29;
  }
LABEL_59:
  PB::TextFormatter::format(this, "tTimesRmsClipSum", *(float *)(a1 + 92));
  if ((*(_DWORD *)(a1 + 108) & 0x400000) != 0) {
LABEL_29:
  }
    PB::TextFormatter::format(this, "tauBar", *(float *)(a1 + 96));
LABEL_30:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10167B9A0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_DWORD *)(a1 + 108) |= 0x800000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v21 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v20 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v21 = v20 != 0;
              }
              *(unsigned char *)(a1 + 100) = v21;
              goto LABEL_159;
            case 2u:
              *(_DWORD *)(a1 + 108) |= 0x80000u;
              unint64_t v23 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v24 = *(void *)this;
              if (v23 > 0xFFFFFFFFFFFFFFF5 || v23 + 10 > v2)
              {
                char v55 = 0;
                unsigned int v56 = 0;
                uint64_t v27 = 0;
                if (v2 <= v23) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v23)
                  {
                    LODWORD(v27) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_168;
                  }
                  unint64_t v57 = v23++;
                  char v58 = *(unsigned char *)(v24 + v57);
                  *((void *)this + 1) = v23;
                  v27 |= (unint64_t)(v58 & 0x7F) << v55;
                  if ((v58 & 0x80) == 0) {
                    break;
                  }
                  v55 += 7;
                  BOOL v14 = v56++ > 8;
                  if (v14)
                  {
                    LODWORD(v27) = 0;
LABEL_167:
                    unint64_t v2 = v57 + 1;
                    goto LABEL_168;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v27) = 0;
                }
                goto LABEL_167;
              }
              char v25 = 0;
              unsigned int v26 = 0;
              uint64_t v27 = 0;
              do
              {
                unint64_t v2 = v23 + 1;
                *((void *)this + 1) = v23 + 1;
                char v28 = *(unsigned char *)(v24 + v23);
                v27 |= (unint64_t)(v28 & 0x7F) << v25;
                if ((v28 & 0x80) == 0) {
                  goto LABEL_168;
                }
                v25 += 7;
                unint64_t v23 = v2;
                BOOL v14 = v26++ > 8;
              }
              while (!v14);
              LODWORD(v27) = 0;
LABEL_168:
              *(_DWORD *)(a1 + 84) = v27;
              goto LABEL_159;
            case 3u:
              *(_DWORD *)(a1 + 108) |= 0x20000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_118;
              }
              *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_158;
            case 4u:
              *(_DWORD *)(a1 + 108) |= 0x10000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_118;
              }
              *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_158;
            case 5u:
              *(_DWORD *)(a1 + 108) |= 0x8000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_118;
              }
              *(_DWORD *)(a1 + 68) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_158;
            case 6u:
              *(_DWORD *)(a1 + 108) |= 0x200000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_118;
              }
              *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_158;
            case 7u:
              *(_DWORD *)(a1 + 108) |= 0x40000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_118;
              }
              *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_158;
            case 8u:
              *(_DWORD *)(a1 + 108) |= 0x400000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_118;
              }
              *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_158;
            case 9u:
              *(_DWORD *)(a1 + 108) |= 0x1000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_118;
              }
              *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_158;
            case 0xAu:
              *(_DWORD *)(a1 + 108) |= 0x100000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_118;
              }
              *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_158;
            case 0xBu:
              *(_DWORD *)(a1 + 108) |= 0x4000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_118;
              }
              *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_158;
            case 0xCu:
              *(_DWORD *)(a1 + 108) |= 0x2000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_118;
              }
              *(_DWORD *)(a1 + 60) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_158;
            case 0xDu:
              *(_DWORD *)(a1 + 108) |= 0x4000000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v30 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v29 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v30 = v29 != 0;
              }
              *(unsigned char *)(a1 + 103) = v30;
              goto LABEL_159;
            case 0xEu:
              *(_DWORD *)(a1 + 108) |= 0x2000000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v32 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v31 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v32 = v31 != 0;
              }
              *(unsigned char *)(a1 + 102) = v32;
              goto LABEL_159;
            case 0xFu:
              *(_DWORD *)(a1 + 108) |= 0x1000000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v34 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v33 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v34 = v33 != 0;
              }
              *(unsigned char *)(a1 + 101) = v34;
              goto LABEL_159;
            case 0x10u:
              *(_DWORD *)(a1 + 108) |= 0x8000000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v36 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v35 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v36 = v35 != 0;
              }
              *(unsigned char *)(a1 + 104) = v36;
              goto LABEL_159;
            case 0x11u:
              *(_DWORD *)(a1 + 108) |= 2u;
              unint64_t v37 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v38 = *(void *)this;
              if (v37 > 0xFFFFFFFFFFFFFFF5 || v37 + 10 > v2)
              {
                char v59 = 0;
                unsigned int v60 = 0;
                uint64_t v41 = 0;
                if (v2 <= v37) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v37)
                  {
                    LODWORD(v41) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_173;
                  }
                  unint64_t v61 = v37++;
                  char v62 = *(unsigned char *)(v38 + v61);
                  *((void *)this + 1) = v37;
                  v41 |= (unint64_t)(v62 & 0x7F) << v59;
                  if ((v62 & 0x80) == 0) {
                    break;
                  }
                  v59 += 7;
                  BOOL v14 = v60++ > 8;
                  if (v14)
                  {
                    LODWORD(v41) = 0;
LABEL_172:
                    unint64_t v2 = v61 + 1;
                    goto LABEL_173;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v41) = 0;
                }
                goto LABEL_172;
              }
              char v39 = 0;
              unsigned int v40 = 0;
              uint64_t v41 = 0;
              do
              {
                unint64_t v2 = v37 + 1;
                *((void *)this + 1) = v37 + 1;
                char v42 = *(unsigned char *)(v38 + v37);
                v41 |= (unint64_t)(v42 & 0x7F) << v39;
                if ((v42 & 0x80) == 0) {
                  goto LABEL_173;
                }
                v39 += 7;
                unint64_t v37 = v2;
                BOOL v14 = v40++ > 8;
              }
              while (!v14);
              LODWORD(v41) = 0;
LABEL_173:
              *(_DWORD *)(a1 + 12) = v41;
              goto LABEL_159;
            case 0x12u:
              *(_DWORD *)(a1 + 108) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_118;
              }
              *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_158;
            case 0x13u:
              *(_DWORD *)(a1 + 108) |= 0x100u;
              unint64_t v43 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v44 = *(void *)this;
              if (v43 > 0xFFFFFFFFFFFFFFF5 || v43 + 10 > v2)
              {
                char v63 = 0;
                unsigned int v64 = 0;
                uint64_t v47 = 0;
                if (v2 <= v43) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v43)
                  {
                    LODWORD(v47) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_178;
                  }
                  unint64_t v65 = v43++;
                  char v66 = *(unsigned char *)(v44 + v65);
                  *((void *)this + 1) = v43;
                  v47 |= (unint64_t)(v66 & 0x7F) << v63;
                  if ((v66 & 0x80) == 0) {
                    break;
                  }
                  v63 += 7;
                  BOOL v14 = v64++ > 8;
                  if (v14)
                  {
                    LODWORD(v47) = 0;
LABEL_177:
                    unint64_t v2 = v65 + 1;
                    goto LABEL_178;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v47) = 0;
                }
                goto LABEL_177;
              }
              char v45 = 0;
              unsigned int v46 = 0;
              uint64_t v47 = 0;
              do
              {
                unint64_t v2 = v43 + 1;
                *((void *)this + 1) = v43 + 1;
                char v48 = *(unsigned char *)(v44 + v43);
                v47 |= (unint64_t)(v48 & 0x7F) << v45;
                if ((v48 & 0x80) == 0) {
                  goto LABEL_178;
                }
                v45 += 7;
                unint64_t v43 = v2;
                BOOL v14 = v46++ > 8;
              }
              while (!v14);
              LODWORD(v47) = 0;
LABEL_178:
              *(_DWORD *)(a1 + 40) = v47;
              goto LABEL_159;
            case 0x14u:
              *(_DWORD *)(a1 + 108) |= 0x80u;
              unint64_t v49 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v50 = *(void *)this;
              if (v49 > 0xFFFFFFFFFFFFFFF5 || v49 + 10 > v2)
              {
                char v67 = 0;
                unsigned int v68 = 0;
                uint64_t v53 = 0;
                if (v2 <= v49) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v49)
                  {
                    LODWORD(v53) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_183;
                  }
                  unint64_t v69 = v49++;
                  char v70 = *(unsigned char *)(v50 + v69);
                  *((void *)this + 1) = v49;
                  v53 |= (unint64_t)(v70 & 0x7F) << v67;
                  if ((v70 & 0x80) == 0) {
                    break;
                  }
                  v67 += 7;
                  BOOL v14 = v68++ > 8;
                  if (v14)
                  {
                    LODWORD(v53) = 0;
LABEL_182:
                    unint64_t v2 = v69 + 1;
                    goto LABEL_183;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v53) = 0;
                }
                goto LABEL_182;
              }
              char v51 = 0;
              unsigned int v52 = 0;
              uint64_t v53 = 0;
              do
              {
                unint64_t v2 = v49 + 1;
                *((void *)this + 1) = v49 + 1;
                char v54 = *(unsigned char *)(v50 + v49);
                v53 |= (unint64_t)(v54 & 0x7F) << v51;
                if ((v54 & 0x80) == 0) {
                  goto LABEL_183;
                }
                v51 += 7;
                unint64_t v49 = v2;
                BOOL v14 = v52++ > 8;
              }
              while (!v14);
              LODWORD(v53) = 0;
LABEL_183:
              *(_DWORD *)(a1 + 36) = v53;
LABEL_159:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 0x15u:
              *(_DWORD *)(a1 + 108) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_118;
              }
              *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_158;
            case 0x16u:
              *(_DWORD *)(a1 + 108) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_118;
              }
              *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_158;
            case 0x17u:
              *(_DWORD *)(a1 + 108) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_118;
              }
              *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_158;
            case 0x18u:
              *(_DWORD *)(a1 + 108) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_118;
              }
              *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_158;
            case 0x19u:
              *(_DWORD *)(a1 + 108) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_118;
              }
              *(_DWORD *)(a1 + 8) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_158;
            case 0x1Au:
              *(_DWORD *)(a1 + 108) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_118;
              }
              *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_158;
            case 0x1Bu:
              *(_DWORD *)(a1 + 108) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_118;
              }
              *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_158;
            case 0x1Cu:
              *(_DWORD *)(a1 + 108) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
LABEL_158:
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_118:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_159;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_159;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_10167C4E0(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 108);
  if ((v4 & 0x800000) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(unsigned char *)(result + 100), 1u);
    int v4 = *(_DWORD *)(v3 + 108);
    if ((v4 & 0x80000) == 0)
    {
LABEL_3:
      if ((v4 & 0x20000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_32;
    }
  }
  else if ((v4 & 0x80000) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 84), 2u);
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x20000) == 0)
  {
LABEL_4:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76), 3u);
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x10000) == 0)
  {
LABEL_5:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72), 4u);
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x8000) == 0)
  {
LABEL_6:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 68), 5u);
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x200000) == 0)
  {
LABEL_7:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 92), 6u);
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x40000) == 0)
  {
LABEL_8:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80), 7u);
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x400000) == 0)
  {
LABEL_9:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 96), 8u);
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x1000) == 0)
  {
LABEL_10:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56), 9u);
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x100000) == 0)
  {
LABEL_11:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 88), 0xAu);
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x4000) == 0)
  {
LABEL_12:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64), 0xBu);
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x2000) == 0)
  {
LABEL_13:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 60), 0xCu);
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_14:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 103), 0xDu);
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_15:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 102), 0xEu);
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_16:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 101), 0xFu);
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_17:
    if ((v4 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 104), 0x10u);
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 2) == 0)
  {
LABEL_18:
    if ((v4 & 0x800) == 0) {
      goto LABEL_19;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 12), 0x11u);
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x800) == 0)
  {
LABEL_19:
    if ((v4 & 0x100) == 0) {
      goto LABEL_20;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52), 0x12u);
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x100) == 0)
  {
LABEL_20:
    if ((v4 & 0x80) == 0) {
      goto LABEL_21;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 40), 0x13u);
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x80) == 0)
  {
LABEL_21:
    if ((v4 & 0x40) == 0) {
      goto LABEL_22;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 36), 0x14u);
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x40) == 0)
  {
LABEL_22:
    if ((v4 & 0x20) == 0) {
      goto LABEL_23;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32), 0x15u);
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x20) == 0)
  {
LABEL_23:
    if ((v4 & 8) == 0) {
      goto LABEL_24;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28), 0x16u);
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 8) == 0)
  {
LABEL_24:
    if ((v4 & 4) == 0) {
      goto LABEL_25;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20), 0x17u);
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 4) == 0)
  {
LABEL_25:
    if ((v4 & 1) == 0) {
      goto LABEL_26;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16), 0x18u);
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 1) == 0)
  {
LABEL_26:
    if ((v4 & 0x10) == 0) {
      goto LABEL_27;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 8), 0x19u);
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x10) == 0)
  {
LABEL_27:
    if ((v4 & 0x400) == 0) {
      goto LABEL_28;
    }
LABEL_56:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48), 0x1Bu);
    if ((*(_DWORD *)(v3 + 108) & 0x200) == 0) {
      return result;
    }
    goto LABEL_57;
  }
LABEL_55:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24), 0x1Au);
  int v4 = *(_DWORD *)(v3 + 108);
  if ((v4 & 0x400) != 0) {
    goto LABEL_56;
  }
LABEL_28:
  if ((v4 & 0x200) == 0) {
    return result;
  }
LABEL_57:
  float v5 = *(float *)(v3 + 44);

  return PB::Writer::write(this, v5, 0x1Cu);
}

uint64_t sub_10167C828(uint64_t result)
{
  *(void *)uint64_t result = &off_102333E20;
  *(_DWORD *)(result + 152) = 0;
  return result;
}

void sub_10167C850(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

float sub_10167C888(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102333E20;
  *(_DWORD *)(a1 + 152) = 0;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x20000000) != 0)
  {
    char v4 = *(unsigned char *)(a2 + 148);
    int v3 = 0x20000000;
    *(_DWORD *)(a1 + 152) = 0x20000000;
    *(unsigned char *)(a1 + 148) = v4;
    int v2 = *(_DWORD *)(a2 + 152);
    if ((v2 & 0x200000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 0x200000) != 0)
  {
LABEL_5:
    float result = *(float *)(a2 + 116);
    v3 |= 0x200000u;
    *(_DWORD *)(a1 + 152) = v3;
    *(float *)(a1 + 116) = result;
    int v2 = *(_DWORD *)(a2 + 152);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    uint64_t v6 = *(void *)(a2 + 24);
    v3 |= 4u;
    *(_DWORD *)(a1 + 152) = v3;
    *(void *)(a1 + 24) = v6;
    int v2 = *(_DWORD *)(a2 + 152);
    if ((v2 & 0x10000000) == 0)
    {
LABEL_8:
      if ((v2 & 0x4000000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_37;
    }
  }
  else if ((v2 & 0x10000000) == 0)
  {
    goto LABEL_8;
  }
  float result = *(float *)(a2 + 144);
  v3 |= 0x10000000u;
  *(_DWORD *)(a1 + 152) = v3;
  *(float *)(a1 + 144) = result;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_9:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_38;
  }
LABEL_37:
  float result = *(float *)(a2 + 136);
  v3 |= 0x4000000u;
  *(_DWORD *)(a1 + 152) = v3;
  *(float *)(a1 + 136) = result;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x100000) == 0)
  {
LABEL_10:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_39;
  }
LABEL_38:
  int v7 = *(_DWORD *)(a2 + 112);
  v3 |= 0x100000u;
  *(_DWORD *)(a1 + 152) = v3;
  *(_DWORD *)(a1 + 112) = v7;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x40000) == 0)
  {
LABEL_11:
    if ((v2 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_40;
  }
LABEL_39:
  int v8 = *(_DWORD *)(a2 + 104);
  v3 |= 0x40000u;
  *(_DWORD *)(a1 + 152) = v3;
  *(_DWORD *)(a1 + 104) = v8;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x10) == 0)
  {
LABEL_12:
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t v9 = *(void *)(a2 + 40);
  v3 |= 0x10u;
  *(_DWORD *)(a1 + 152) = v3;
  *(void *)(a1 + 40) = v9;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x8000000) == 0)
  {
LABEL_13:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_42;
  }
LABEL_41:
  float result = *(float *)(a2 + 140);
  v3 |= 0x8000000u;
  *(_DWORD *)(a1 + 152) = v3;
  *(float *)(a1 + 140) = result;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x8000) == 0)
  {
LABEL_14:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_43;
  }
LABEL_42:
  int v10 = *(_DWORD *)(a2 + 92);
  v3 |= 0x8000u;
  *(_DWORD *)(a1 + 152) = v3;
  *(_DWORD *)(a1 + 92) = v10;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x4000) == 0)
  {
LABEL_15:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_44;
  }
LABEL_43:
  int v11 = *(_DWORD *)(a2 + 88);
  v3 |= 0x4000u;
  *(_DWORD *)(a1 + 152) = v3;
  *(_DWORD *)(a1 + 88) = v11;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x800000) == 0)
  {
LABEL_16:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_45;
  }
LABEL_44:
  float result = *(float *)(a2 + 124);
  v3 |= 0x800000u;
  *(_DWORD *)(a1 + 152) = v3;
  *(float *)(a1 + 124) = result;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x400000) == 0)
  {
LABEL_17:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_46;
  }
LABEL_45:
  float result = *(float *)(a2 + 120);
  v3 |= 0x400000u;
  *(_DWORD *)(a1 + 152) = v3;
  *(float *)(a1 + 120) = result;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_18:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_47;
  }
LABEL_46:
  float result = *(float *)(a2 + 128);
  v3 |= 0x1000000u;
  *(_DWORD *)(a1 + 152) = v3;
  *(float *)(a1 + 128) = result;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x2000) == 0)
  {
LABEL_19:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_48;
  }
LABEL_47:
  float result = *(float *)(a2 + 84);
  v3 |= 0x2000u;
  *(_DWORD *)(a1 + 152) = v3;
  *(float *)(a1 + 84) = result;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x1000) == 0)
  {
LABEL_20:
    if ((v2 & 0x800) == 0) {
      goto LABEL_21;
    }
    goto LABEL_49;
  }
LABEL_48:
  float result = *(float *)(a2 + 80);
  v3 |= 0x1000u;
  *(_DWORD *)(a1 + 152) = v3;
  *(float *)(a1 + 80) = result;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x800) == 0)
  {
LABEL_21:
    if ((v2 & 0x400) == 0) {
      goto LABEL_22;
    }
    goto LABEL_50;
  }
LABEL_49:
  float result = *(float *)(a2 + 76);
  v3 |= 0x800u;
  *(_DWORD *)(a1 + 152) = v3;
  *(float *)(a1 + 76) = result;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x400) == 0)
  {
LABEL_22:
    if ((v2 & 0x200) == 0) {
      goto LABEL_23;
    }
    goto LABEL_51;
  }
LABEL_50:
  float result = *(float *)(a2 + 72);
  v3 |= 0x400u;
  *(_DWORD *)(a1 + 152) = v3;
  *(float *)(a1 + 72) = result;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x200) == 0)
  {
LABEL_23:
    if ((v2 & 1) == 0) {
      goto LABEL_24;
    }
    goto LABEL_52;
  }
LABEL_51:
  float result = *(float *)(a2 + 68);
  v3 |= 0x200u;
  *(_DWORD *)(a1 + 152) = v3;
  *(float *)(a1 + 68) = result;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 1) == 0)
  {
LABEL_24:
    if ((v2 & 2) == 0) {
      goto LABEL_25;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t v12 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_DWORD *)(a1 + 152) = v3;
  *(void *)(a1 + 8) = v12;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 2) == 0)
  {
LABEL_25:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t v13 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_DWORD *)(a1 + 152) = v3;
  *(void *)(a1 + 16) = v13;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x10000) == 0)
  {
LABEL_26:
    if ((v2 & 0x20) == 0) {
      goto LABEL_27;
    }
    goto LABEL_55;
  }
LABEL_54:
  float result = *(float *)(a2 + 96);
  v3 |= 0x10000u;
  *(_DWORD *)(a1 + 152) = v3;
  *(float *)(a1 + 96) = result;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x20) == 0)
  {
LABEL_27:
    if ((v2 & 0x2000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t v14 = *(void *)(a2 + 48);
  v3 |= 0x20u;
  *(_DWORD *)(a1 + 152) = v3;
  *(void *)(a1 + 48) = v14;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x2000000) == 0)
  {
LABEL_28:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_57;
  }
LABEL_56:
  float result = *(float *)(a2 + 132);
  v3 |= 0x2000000u;
  *(_DWORD *)(a1 + 152) = v3;
  *(float *)(a1 + 132) = result;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x20000) == 0)
  {
LABEL_29:
    if ((v2 & 0x100) == 0) {
      goto LABEL_30;
    }
    goto LABEL_58;
  }
LABEL_57:
  float result = *(float *)(a2 + 100);
  v3 |= 0x20000u;
  *(_DWORD *)(a1 + 152) = v3;
  *(float *)(a1 + 100) = result;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x100) == 0)
  {
LABEL_30:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_59;
  }
LABEL_58:
  float result = *(float *)(a2 + 64);
  v3 |= 0x100u;
  *(_DWORD *)(a1 + 152) = v3;
  *(float *)(a1 + 64) = result;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x80000) == 0)
  {
LABEL_31:
    if ((v2 & 0x40) == 0) {
      goto LABEL_32;
    }
    goto LABEL_60;
  }
LABEL_59:
  int v15 = *(_DWORD *)(a2 + 108);
  v3 |= 0x80000u;
  *(_DWORD *)(a1 + 152) = v3;
  *(_DWORD *)(a1 + 108) = v15;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x40) == 0)
  {
LABEL_32:
    if ((v2 & 8) == 0) {
      goto LABEL_33;
    }
    goto LABEL_61;
  }
LABEL_60:
  float result = *(float *)(a2 + 56);
  v3 |= 0x40u;
  *(_DWORD *)(a1 + 152) = v3;
  *(float *)(a1 + 56) = result;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 8) == 0)
  {
LABEL_33:
    if ((v2 & 0x80) == 0) {
      return result;
    }
LABEL_62:
    float result = *(float *)(a2 + 60);
    *(_DWORD *)(a1 + 152) = v3 | 0x80;
    *(float *)(a1 + 60) = result;
    return result;
  }
LABEL_61:
  uint64_t v16 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_DWORD *)(a1 + 152) = v3;
  *(void *)(a1 + 32) = v16;
  if ((*(_DWORD *)(a2 + 152) & 0x80) != 0) {
    goto LABEL_62;
  }
  return result;
}

uint64_t sub_10167CBFC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x20000000) != 0)
  {
    PB::TextFormatter::format(this, "airbagDetected", *(unsigned char *)(a1 + 148));
    int v5 = *(_DWORD *)(a1 + 152);
    if ((v5 & 0x40) == 0)
    {
LABEL_3:
      if ((v5 & 0x80) == 0) {
        goto LABEL_4;
      }
      goto LABEL_37;
    }
  }
  else if ((v5 & 0x40) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "configMaximumAccelBaroTimeDifferenceThreshold", *(float *)(a1 + 56));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x80) == 0)
  {
LABEL_4:
    if ((v5 & 0x100) == 0) {
      goto LABEL_5;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "configMinimumAccelNormInWindowThreshold", *(float *)(a1 + 60));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x100) == 0)
  {
LABEL_5:
    if ((v5 & 0x200) == 0) {
      goto LABEL_6;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "configMinimumAccelNormOverEpochThreshold", *(float *)(a1 + 64));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x200) == 0)
  {
LABEL_6:
    if ((v5 & 0x400) == 0) {
      goto LABEL_7;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "configMinimumAccelNormThreshold", *(float *)(a1 + 68));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x400) == 0)
  {
LABEL_7:
    if ((v5 & 0x800) == 0) {
      goto LABEL_8;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "configMinimumWidthThreshold", *(float *)(a1 + 72));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x800) == 0)
  {
LABEL_8:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(this, "configPeakPressureThreshold", *(float *)(a1 + 76));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x1000) == 0)
  {
LABEL_9:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(this, "configRiseTimeThreshold", *(float *)(a1 + 80));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x2000) == 0)
  {
LABEL_10:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(this, "configWidthThreshold", *(float *)(a1 + 84));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x4000) == 0)
  {
LABEL_11:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(this, "diffPeakTimeTrigger", *(_DWORD *)(a1 + 88));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x8000) == 0)
  {
LABEL_12:
    if ((v5 & 1) == 0) {
      goto LABEL_13;
    }
    goto LABEL_46;
  }
LABEL_45:
  PB::TextFormatter::format(this, "diffTimeTrigger", *(_DWORD *)(a1 + 92));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 1) == 0)
  {
LABEL_13:
    if ((v5 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_47;
  }
LABEL_46:
  PB::TextFormatter::format(this, "epochFirstTimestamp", *(void *)(a1 + 8));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 2) == 0)
  {
LABEL_14:
    if ((v5 & 4) == 0) {
      goto LABEL_15;
    }
    goto LABEL_48;
  }
LABEL_47:
  PB::TextFormatter::format(this, "epochLastTimestamp", *(void *)(a1 + 16));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 4) == 0)
  {
LABEL_15:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(this, "eventStartTime", *(void *)(a1 + 24));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x10000) == 0)
  {
LABEL_16:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_50;
  }
LABEL_49:
  PB::TextFormatter::format(this, "maxAccelNormInWindow", *(float *)(a1 + 96));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x20000) == 0)
  {
LABEL_17:
    if ((v5 & 8) == 0) {
      goto LABEL_18;
    }
    goto LABEL_51;
  }
LABEL_50:
  PB::TextFormatter::format(this, "maxAccelNormOverEpoch", *(float *)(a1 + 100));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 8) == 0)
  {
LABEL_18:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_52;
  }
LABEL_51:
  PB::TextFormatter::format(this, "maxAccelNormOverEpochTimestamp", *(void *)(a1 + 32));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x40000) == 0)
  {
LABEL_19:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_53;
  }
LABEL_52:
  PB::TextFormatter::format(this, "numAirbags", *(_DWORD *)(a1 + 104));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x80000) == 0)
  {
LABEL_20:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_54;
  }
LABEL_53:
  PB::TextFormatter::format(this, "numBarosInEpoch", *(_DWORD *)(a1 + 108));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x100000) == 0)
  {
LABEL_21:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(this, "odr", *(_DWORD *)(a1 + 112));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x200000) == 0)
  {
LABEL_22:
    if ((v5 & 0x10) == 0) {
      goto LABEL_23;
    }
    goto LABEL_56;
  }
LABEL_55:
  PB::TextFormatter::format(this, "peakPressure", *(float *)(a1 + 116));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x10) == 0)
  {
LABEL_23:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_57;
  }
LABEL_56:
  PB::TextFormatter::format(this, "peakTimestamp", *(void *)(a1 + 40));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x400000) == 0)
  {
LABEL_24:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_58;
  }
LABEL_57:
  PB::TextFormatter::format(this, "postEventPressureMedian", *(float *)(a1 + 120));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x800000) == 0)
  {
LABEL_25:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_59;
  }
LABEL_58:
  PB::TextFormatter::format(this, "preEventPressureMedian", *(float *)(a1 + 124));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_60;
  }
LABEL_59:
  PB::TextFormatter::format(this, "prePostEventPressureMedian", *(float *)(a1 + 128));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_61;
  }
LABEL_60:
  PB::TextFormatter::format(this, "pressureMedian", *(float *)(a1 + 132));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_62;
  }
LABEL_61:
  PB::TextFormatter::format(this, "riseTime", *(float *)(a1 + 136));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v5 & 0x20) == 0) {
      goto LABEL_30;
    }
    goto LABEL_63;
  }
LABEL_62:
  PB::TextFormatter::format(this, "riseTimeTo80", *(float *)(a1 + 140));
  int v5 = *(_DWORD *)(a1 + 152);
  if ((v5 & 0x20) == 0)
  {
LABEL_30:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_31;
  }
LABEL_63:
  PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 48));
  if ((*(_DWORD *)(a1 + 152) & 0x10000000) != 0) {
LABEL_31:
  }
    PB::TextFormatter::format(this, "width", *(float *)(a1 + 144));
LABEL_32:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10167D000(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(_DWORD *)(a1 + 152) |= 0x20000000u;
          unint64_t v20 = *((void *)this + 1);
          if (v20 >= *((void *)this + 2))
          {
            BOOL v23 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v21 = v20 + 1;
            int v22 = *(unsigned __int8 *)(*(void *)this + v20);
            *((void *)this + 1) = v21;
            BOOL v23 = v22 != 0;
          }
          *(unsigned char *)(a1 + 148) = v23;
          goto LABEL_238;
        case 2u:
          *(_DWORD *)(a1 + 152) |= 0x200000u;
          unint64_t v25 = *((void *)this + 1);
          if (v25 > 0xFFFFFFFFFFFFFFFBLL || v25 + 4 > *((void *)this + 2)) {
            goto LABEL_156;
          }
          *(_DWORD *)(a1 + 116) = *(_DWORD *)(*(void *)this + v25);
          goto LABEL_237;
        case 3u:
          *(_DWORD *)(a1 + 152) |= 4u;
          unint64_t v26 = *((void *)this + 1);
          unint64_t v27 = *((void *)this + 2);
          uint64_t v28 = *(void *)this;
          if (v26 <= 0xFFFFFFFFFFFFFFF5 && v26 + 10 <= v27)
          {
            char v29 = 0;
            unsigned int v30 = 0;
            uint64_t v31 = 0;
            do
            {
              unint64_t v32 = v26 + 1;
              *((void *)this + 1) = v26 + 1;
              char v33 = *(unsigned char *)(v28 + v26);
              v31 |= (unint64_t)(v33 & 0x7F) << v29;
              if ((v33 & 0x80) == 0) {
                goto LABEL_246;
              }
              v29 += 7;
              unint64_t v26 = v32;
              BOOL v14 = v30++ > 8;
            }
            while (!v14);
LABEL_165:
            uint64_t v31 = 0;
            goto LABEL_246;
          }
          char v131 = 0;
          unsigned int v132 = 0;
          uint64_t v31 = 0;
          if (v27 <= v26) {
            unint64_t v27 = *((void *)this + 1);
          }
          while (2)
          {
            if (v27 == v26)
            {
              uint64_t v31 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v133 = v26 + 1;
              char v134 = *(unsigned char *)(v28 + v26);
              *((void *)this + 1) = v133;
              v31 |= (unint64_t)(v134 & 0x7F) << v131;
              if (v134 < 0)
              {
                v131 += 7;
                unint64_t v26 = v133;
                BOOL v14 = v132++ > 8;
                if (v14) {
                  goto LABEL_165;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v31 = 0;
              }
            }
            break;
          }
LABEL_246:
          *(void *)(a1 + 24) = v31;
          goto LABEL_238;
        case 4u:
          *(_DWORD *)(a1 + 152) |= 0x10000000u;
          unint64_t v34 = *((void *)this + 1);
          if (v34 > 0xFFFFFFFFFFFFFFFBLL || v34 + 4 > *((void *)this + 2)) {
            goto LABEL_156;
          }
          *(_DWORD *)(a1 + 144) = *(_DWORD *)(*(void *)this + v34);
          goto LABEL_237;
        case 5u:
          *(_DWORD *)(a1 + 152) |= 0x4000000u;
          unint64_t v35 = *((void *)this + 1);
          if (v35 > 0xFFFFFFFFFFFFFFFBLL || v35 + 4 > *((void *)this + 2)) {
            goto LABEL_156;
          }
          *(_DWORD *)(a1 + 136) = *(_DWORD *)(*(void *)this + v35);
          goto LABEL_237;
        case 6u:
          *(_DWORD *)(a1 + 152) |= 0x100000u;
          unint64_t v36 = *((void *)this + 1);
          unint64_t v37 = *((void *)this + 2);
          uint64_t v38 = *(void *)this;
          if (v36 <= 0xFFFFFFFFFFFFFFF5 && v36 + 10 <= v37)
          {
            char v39 = 0;
            unsigned int v40 = 0;
            uint64_t v41 = 0;
            do
            {
              unint64_t v42 = v36 + 1;
              *((void *)this + 1) = v36 + 1;
              char v43 = *(unsigned char *)(v38 + v36);
              v41 |= (unint64_t)(v43 & 0x7F) << v39;
              if ((v43 & 0x80) == 0) {
                goto LABEL_250;
              }
              v39 += 7;
              unint64_t v36 = v42;
              BOOL v14 = v40++ > 8;
            }
            while (!v14);
LABEL_172:
            LODWORD(v41) = 0;
            goto LABEL_250;
          }
          char v135 = 0;
          unsigned int v136 = 0;
          uint64_t v41 = 0;
          if (v37 <= v36) {
            unint64_t v37 = *((void *)this + 1);
          }
          while (2)
          {
            if (v37 == v36)
            {
              LODWORD(v41) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v137 = v36 + 1;
              char v138 = *(unsigned char *)(v38 + v36);
              *((void *)this + 1) = v137;
              v41 |= (unint64_t)(v138 & 0x7F) << v135;
              if (v138 < 0)
              {
                v135 += 7;
                unint64_t v36 = v137;
                BOOL v14 = v136++ > 8;
                if (v14) {
                  goto LABEL_172;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v41) = 0;
              }
            }
            break;
          }
LABEL_250:
          *(_DWORD *)(a1 + 112) = v41;
          goto LABEL_238;
        case 7u:
          *(_DWORD *)(a1 + 152) |= 0x40000u;
          unint64_t v44 = *((void *)this + 1);
          unint64_t v45 = *((void *)this + 2);
          uint64_t v46 = *(void *)this;
          if (v44 <= 0xFFFFFFFFFFFFFFF5 && v44 + 10 <= v45)
          {
            char v47 = 0;
            unsigned int v48 = 0;
            uint64_t v49 = 0;
            do
            {
              unint64_t v50 = v44 + 1;
              *((void *)this + 1) = v44 + 1;
              char v51 = *(unsigned char *)(v46 + v44);
              v49 |= (unint64_t)(v51 & 0x7F) << v47;
              if ((v51 & 0x80) == 0) {
                goto LABEL_254;
              }
              v47 += 7;
              unint64_t v44 = v50;
              BOOL v14 = v48++ > 8;
            }
            while (!v14);
LABEL_179:
            LODWORD(v49) = 0;
            goto LABEL_254;
          }
          char v139 = 0;
          unsigned int v140 = 0;
          uint64_t v49 = 0;
          if (v45 <= v44) {
            unint64_t v45 = *((void *)this + 1);
          }
          while (2)
          {
            if (v45 == v44)
            {
              LODWORD(v49) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v141 = v44 + 1;
              char v142 = *(unsigned char *)(v46 + v44);
              *((void *)this + 1) = v141;
              v49 |= (unint64_t)(v142 & 0x7F) << v139;
              if (v142 < 0)
              {
                v139 += 7;
                unint64_t v44 = v141;
                BOOL v14 = v140++ > 8;
                if (v14) {
                  goto LABEL_179;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v49) = 0;
              }
            }
            break;
          }
LABEL_254:
          *(_DWORD *)(a1 + 104) = v49;
          goto LABEL_238;
        case 8u:
          *(_DWORD *)(a1 + 152) |= 0x10u;
          unint64_t v52 = *((void *)this + 1);
          unint64_t v53 = *((void *)this + 2);
          uint64_t v54 = *(void *)this;
          if (v52 <= 0xFFFFFFFFFFFFFFF5 && v52 + 10 <= v53)
          {
            char v55 = 0;
            unsigned int v56 = 0;
            uint64_t v57 = 0;
            do
            {
              unint64_t v58 = v52 + 1;
              *((void *)this + 1) = v52 + 1;
              char v59 = *(unsigned char *)(v54 + v52);
              v57 |= (unint64_t)(v59 & 0x7F) << v55;
              if ((v59 & 0x80) == 0) {
                goto LABEL_258;
              }
              v55 += 7;
              unint64_t v52 = v58;
              BOOL v14 = v56++ > 8;
            }
            while (!v14);
LABEL_186:
            uint64_t v57 = 0;
            goto LABEL_258;
          }
          char v143 = 0;
          unsigned int v144 = 0;
          uint64_t v57 = 0;
          if (v53 <= v52) {
            unint64_t v53 = *((void *)this + 1);
          }
          while (2)
          {
            if (v53 == v52)
            {
              uint64_t v57 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v145 = v52 + 1;
              char v146 = *(unsigned char *)(v54 + v52);
              *((void *)this + 1) = v145;
              v57 |= (unint64_t)(v146 & 0x7F) << v143;
              if (v146 < 0)
              {
                v143 += 7;
                unint64_t v52 = v145;
                BOOL v14 = v144++ > 8;
                if (v14) {
                  goto LABEL_186;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v57 = 0;
              }
            }
            break;
          }
LABEL_258:
          *(void *)(a1 + 40) = v57;
          goto LABEL_238;
        case 9u:
          *(_DWORD *)(a1 + 152) |= 0x8000000u;
          unint64_t v60 = *((void *)this + 1);
          if (v60 > 0xFFFFFFFFFFFFFFFBLL || v60 + 4 > *((void *)this + 2)) {
            goto LABEL_156;
          }
          *(_DWORD *)(a1 + 140) = *(_DWORD *)(*(void *)this + v60);
          goto LABEL_237;
        case 0xAu:
          *(_DWORD *)(a1 + 152) |= 0x8000u;
          unint64_t v61 = *((void *)this + 1);
          unint64_t v62 = *((void *)this + 2);
          uint64_t v63 = *(void *)this;
          if (v61 <= 0xFFFFFFFFFFFFFFF5 && v61 + 10 <= v62)
          {
            char v64 = 0;
            unsigned int v65 = 0;
            uint64_t v66 = 0;
            do
            {
              unint64_t v67 = v61 + 1;
              *((void *)this + 1) = v61 + 1;
              char v68 = *(unsigned char *)(v63 + v61);
              v66 |= (unint64_t)(v68 & 0x7F) << v64;
              if ((v68 & 0x80) == 0) {
                goto LABEL_262;
              }
              v64 += 7;
              unint64_t v61 = v67;
              BOOL v14 = v65++ > 8;
            }
            while (!v14);
LABEL_193:
            LODWORD(v66) = 0;
            goto LABEL_262;
          }
          char v147 = 0;
          unsigned int v148 = 0;
          uint64_t v66 = 0;
          if (v62 <= v61) {
            unint64_t v62 = *((void *)this + 1);
          }
          while (2)
          {
            if (v62 == v61)
            {
              LODWORD(v66) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v149 = v61 + 1;
              char v150 = *(unsigned char *)(v63 + v61);
              *((void *)this + 1) = v149;
              v66 |= (unint64_t)(v150 & 0x7F) << v147;
              if (v150 < 0)
              {
                v147 += 7;
                unint64_t v61 = v149;
                BOOL v14 = v148++ > 8;
                if (v14) {
                  goto LABEL_193;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v66) = 0;
              }
            }
            break;
          }
LABEL_262:
          *(_DWORD *)(a1 + 92) = v66;
          goto LABEL_238;
        case 0xBu:
          *(_DWORD *)(a1 + 152) |= 0x4000u;
          unint64_t v69 = *((void *)this + 1);
          unint64_t v70 = *((void *)this + 2);
          uint64_t v71 = *(void *)this;
          if (v69 <= 0xFFFFFFFFFFFFFFF5 && v69 + 10 <= v70)
          {
            char v72 = 0;
            unsigned int v73 = 0;
            uint64_t v74 = 0;
            do
            {
              unint64_t v75 = v69 + 1;
              *((void *)this + 1) = v69 + 1;
              char v76 = *(unsigned char *)(v71 + v69);
              v74 |= (unint64_t)(v76 & 0x7F) << v72;
              if ((v76 & 0x80) == 0) {
                goto LABEL_266;
              }
              v72 += 7;
              unint64_t v69 = v75;
              BOOL v14 = v73++ > 8;
            }
            while (!v14);
LABEL_200:
            LODWORD(v74) = 0;
            goto LABEL_266;
          }
          char v151 = 0;
          unsigned int v152 = 0;
          uint64_t v74 = 0;
          if (v70 <= v69) {
            unint64_t v70 = *((void *)this + 1);
          }
          while (2)
          {
            if (v70 == v69)
            {
              LODWORD(v74) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v153 = v69 + 1;
              char v154 = *(unsigned char *)(v71 + v69);
              *((void *)this + 1) = v153;
              v74 |= (unint64_t)(v154 & 0x7F) << v151;
              if (v154 < 0)
              {
                v151 += 7;
                unint64_t v69 = v153;
                BOOL v14 = v152++ > 8;
                if (v14) {
                  goto LABEL_200;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v74) = 0;
              }
            }
            break;
          }
LABEL_266:
          *(_DWORD *)(a1 + 88) = v74;
          goto LABEL_238;
        case 0xCu:
          *(_DWORD *)(a1 + 152) |= 0x800000u;
          unint64_t v77 = *((void *)this + 1);
          if (v77 > 0xFFFFFFFFFFFFFFFBLL || v77 + 4 > *((void *)this + 2)) {
            goto LABEL_156;
          }
          *(_DWORD *)(a1 + 124) = *(_DWORD *)(*(void *)this + v77);
          goto LABEL_237;
        case 0xDu:
          *(_DWORD *)(a1 + 152) |= 0x400000u;
          unint64_t v78 = *((void *)this + 1);
          if (v78 > 0xFFFFFFFFFFFFFFFBLL || v78 + 4 > *((void *)this + 2)) {
            goto LABEL_156;
          }
          *(_DWORD *)(a1 + 120) = *(_DWORD *)(*(void *)this + v78);
          goto LABEL_237;
        case 0xEu:
          *(_DWORD *)(a1 + 152) |= 0x1000000u;
          unint64_t v79 = *((void *)this + 1);
          if (v79 > 0xFFFFFFFFFFFFFFFBLL || v79 + 4 > *((void *)this + 2)) {
            goto LABEL_156;
          }
          *(_DWORD *)(a1 + 128) = *(_DWORD *)(*(void *)this + v79);
          goto LABEL_237;
        case 0xFu:
          *(_DWORD *)(a1 + 152) |= 0x2000u;
          unint64_t v80 = *((void *)this + 1);
          if (v80 > 0xFFFFFFFFFFFFFFFBLL || v80 + 4 > *((void *)this + 2)) {
            goto LABEL_156;
          }
          *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v80);
          goto LABEL_237;
        case 0x10u:
          *(_DWORD *)(a1 + 152) |= 0x1000u;
          unint64_t v81 = *((void *)this + 1);
          if (v81 > 0xFFFFFFFFFFFFFFFBLL || v81 + 4 > *((void *)this + 2)) {
            goto LABEL_156;
          }
          *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v81);
          goto LABEL_237;
        case 0x11u:
          *(_DWORD *)(a1 + 152) |= 0x800u;
          unint64_t v82 = *((void *)this + 1);
          if (v82 > 0xFFFFFFFFFFFFFFFBLL || v82 + 4 > *((void *)this + 2)) {
            goto LABEL_156;
          }
          *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v82);
          goto LABEL_237;
        case 0x12u:
          *(_DWORD *)(a1 + 152) |= 0x400u;
          unint64_t v83 = *((void *)this + 1);
          if (v83 > 0xFFFFFFFFFFFFFFFBLL || v83 + 4 > *((void *)this + 2)) {
            goto LABEL_156;
          }
          *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v83);
          goto LABEL_237;
        case 0x13u:
          *(_DWORD *)(a1 + 152) |= 0x200u;
          unint64_t v84 = *((void *)this + 1);
          if (v84 > 0xFFFFFFFFFFFFFFFBLL || v84 + 4 > *((void *)this + 2)) {
            goto LABEL_156;
          }
          *(_DWORD *)(a1 + 68) = *(_DWORD *)(*(void *)this + v84);
          goto LABEL_237;
        case 0x14u:
          *(_DWORD *)(a1 + 152) |= 1u;
          unint64_t v85 = *((void *)this + 1);
          unint64_t v86 = *((void *)this + 2);
          uint64_t v87 = *(void *)this;
          if (v85 <= 0xFFFFFFFFFFFFFFF5 && v85 + 10 <= v86)
          {
            char v88 = 0;
            unsigned int v89 = 0;
            uint64_t v90 = 0;
            do
            {
              unint64_t v91 = v85 + 1;
              *((void *)this + 1) = v85 + 1;
              char v92 = *(unsigned char *)(v87 + v85);
              v90 |= (unint64_t)(v92 & 0x7F) << v88;
              if ((v92 & 0x80) == 0) {
                goto LABEL_270;
              }
              v88 += 7;
              unint64_t v85 = v91;
              BOOL v14 = v89++ > 8;
            }
            while (!v14);
LABEL_207:
            uint64_t v90 = 0;
            goto LABEL_270;
          }
          char v155 = 0;
          unsigned int v156 = 0;
          uint64_t v90 = 0;
          if (v86 <= v85) {
            unint64_t v86 = *((void *)this + 1);
          }
          while (2)
          {
            if (v86 == v85)
            {
              uint64_t v90 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v157 = v85 + 1;
              char v158 = *(unsigned char *)(v87 + v85);
              *((void *)this + 1) = v157;
              v90 |= (unint64_t)(v158 & 0x7F) << v155;
              if (v158 < 0)
              {
                v155 += 7;
                unint64_t v85 = v157;
                BOOL v14 = v156++ > 8;
                if (v14) {
                  goto LABEL_207;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v90 = 0;
              }
            }
            break;
          }
LABEL_270:
          *(void *)(a1 + 8) = v90;
          goto LABEL_238;
        case 0x15u:
          *(_DWORD *)(a1 + 152) |= 2u;
          unint64_t v93 = *((void *)this + 1);
          unint64_t v94 = *((void *)this + 2);
          uint64_t v95 = *(void *)this;
          if (v93 <= 0xFFFFFFFFFFFFFFF5 && v93 + 10 <= v94)
          {
            char v96 = 0;
            unsigned int v97 = 0;
            uint64_t v98 = 0;
            do
            {
              unint64_t v99 = v93 + 1;
              *((void *)this + 1) = v93 + 1;
              char v100 = *(unsigned char *)(v95 + v93);
              v98 |= (unint64_t)(v100 & 0x7F) << v96;
              if ((v100 & 0x80) == 0) {
                goto LABEL_274;
              }
              v96 += 7;
              unint64_t v93 = v99;
              BOOL v14 = v97++ > 8;
            }
            while (!v14);
LABEL_214:
            uint64_t v98 = 0;
            goto LABEL_274;
          }
          char v159 = 0;
          unsigned int v160 = 0;
          uint64_t v98 = 0;
          if (v94 <= v93) {
            unint64_t v94 = *((void *)this + 1);
          }
          while (2)
          {
            if (v94 == v93)
            {
              uint64_t v98 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v161 = v93 + 1;
              char v162 = *(unsigned char *)(v95 + v93);
              *((void *)this + 1) = v161;
              v98 |= (unint64_t)(v162 & 0x7F) << v159;
              if (v162 < 0)
              {
                v159 += 7;
                unint64_t v93 = v161;
                BOOL v14 = v160++ > 8;
                if (v14) {
                  goto LABEL_214;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v98 = 0;
              }
            }
            break;
          }
LABEL_274:
          *(void *)(a1 + 16) = v98;
          goto LABEL_238;
        case 0x16u:
          *(_DWORD *)(a1 + 152) |= 0x10000u;
          unint64_t v101 = *((void *)this + 1);
          if (v101 > 0xFFFFFFFFFFFFFFFBLL || v101 + 4 > *((void *)this + 2)) {
            goto LABEL_156;
          }
          *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v101);
          goto LABEL_237;
        case 0x17u:
          *(_DWORD *)(a1 + 152) |= 0x20u;
          unint64_t v102 = *((void *)this + 1);
          unint64_t v103 = *((void *)this + 2);
          uint64_t v104 = *(void *)this;
          if (v102 <= 0xFFFFFFFFFFFFFFF5 && v102 + 10 <= v103)
          {
            char v105 = 0;
            unsigned int v106 = 0;
            uint64_t v107 = 0;
            do
            {
              unint64_t v108 = v102 + 1;
              *((void *)this + 1) = v102 + 1;
              char v109 = *(unsigned char *)(v104 + v102);
              v107 |= (unint64_t)(v109 & 0x7F) << v105;
              if ((v109 & 0x80) == 0) {
                goto LABEL_278;
              }
              v105 += 7;
              unint64_t v102 = v108;
              BOOL v14 = v106++ > 8;
            }
            while (!v14);
LABEL_221:
            uint64_t v107 = 0;
            goto LABEL_278;
          }
          char v163 = 0;
          unsigned int v164 = 0;
          uint64_t v107 = 0;
          if (v103 <= v102) {
            unint64_t v103 = *((void *)this + 1);
          }
          while (2)
          {
            if (v103 == v102)
            {
              uint64_t v107 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v165 = v102 + 1;
              char v166 = *(unsigned char *)(v104 + v102);
              *((void *)this + 1) = v165;
              v107 |= (unint64_t)(v166 & 0x7F) << v163;
              if (v166 < 0)
              {
                v163 += 7;
                unint64_t v102 = v165;
                BOOL v14 = v164++ > 8;
                if (v14) {
                  goto LABEL_221;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v107 = 0;
              }
            }
            break;
          }
LABEL_278:
          *(void *)(a1 + 48) = v107;
          goto LABEL_238;
        case 0x18u:
          *(_DWORD *)(a1 + 152) |= 0x2000000u;
          unint64_t v110 = *((void *)this + 1);
          if (v110 > 0xFFFFFFFFFFFFFFFBLL || v110 + 4 > *((void *)this + 2)) {
            goto LABEL_156;
          }
          *(_DWORD *)(a1 + 132) = *(_DWORD *)(*(void *)this + v110);
          goto LABEL_237;
        case 0x19u:
          *(_DWORD *)(a1 + 152) |= 0x20000u;
          unint64_t v111 = *((void *)this + 1);
          if (v111 > 0xFFFFFFFFFFFFFFFBLL || v111 + 4 > *((void *)this + 2)) {
            goto LABEL_156;
          }
          *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v111);
          goto LABEL_237;
        case 0x1Au:
          *(_DWORD *)(a1 + 152) |= 0x100u;
          unint64_t v112 = *((void *)this + 1);
          if (v112 > 0xFFFFFFFFFFFFFFFBLL || v112 + 4 > *((void *)this + 2)) {
            goto LABEL_156;
          }
          *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v112);
          goto LABEL_237;
        case 0x1Bu:
          *(_DWORD *)(a1 + 152) |= 0x80000u;
          unint64_t v113 = *((void *)this + 1);
          unint64_t v114 = *((void *)this + 2);
          uint64_t v115 = *(void *)this;
          if (v113 <= 0xFFFFFFFFFFFFFFF5 && v113 + 10 <= v114)
          {
            char v116 = 0;
            unsigned int v117 = 0;
            uint64_t v118 = 0;
            do
            {
              unint64_t v119 = v113 + 1;
              *((void *)this + 1) = v113 + 1;
              char v120 = *(unsigned char *)(v115 + v113);
              v118 |= (unint64_t)(v120 & 0x7F) << v116;
              if ((v120 & 0x80) == 0) {
                goto LABEL_282;
              }
              v116 += 7;
              unint64_t v113 = v119;
              BOOL v14 = v117++ > 8;
            }
            while (!v14);
LABEL_228:
            LODWORD(v118) = 0;
            goto LABEL_282;
          }
          char v167 = 0;
          unsigned int v168 = 0;
          uint64_t v118 = 0;
          if (v114 <= v113) {
            unint64_t v114 = *((void *)this + 1);
          }
          while (2)
          {
            if (v114 == v113)
            {
              LODWORD(v118) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v169 = v113 + 1;
              char v170 = *(unsigned char *)(v115 + v113);
              *((void *)this + 1) = v169;
              v118 |= (unint64_t)(v170 & 0x7F) << v167;
              if (v170 < 0)
              {
                v167 += 7;
                unint64_t v113 = v169;
                BOOL v14 = v168++ > 8;
                if (v14) {
                  goto LABEL_228;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v118) = 0;
              }
            }
            break;
          }
LABEL_282:
          *(_DWORD *)(a1 + 108) = v118;
          goto LABEL_238;
        case 0x1Cu:
          *(_DWORD *)(a1 + 152) |= 0x40u;
          unint64_t v121 = *((void *)this + 1);
          if (v121 > 0xFFFFFFFFFFFFFFFBLL || v121 + 4 > *((void *)this + 2)) {
            goto LABEL_156;
          }
          *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v121);
          goto LABEL_237;
        case 0x1Du:
          *(_DWORD *)(a1 + 152) |= 8u;
          unint64_t v122 = *((void *)this + 1);
          unint64_t v123 = *((void *)this + 2);
          uint64_t v124 = *(void *)this;
          if (v122 <= 0xFFFFFFFFFFFFFFF5 && v122 + 10 <= v123)
          {
            char v125 = 0;
            unsigned int v126 = 0;
            uint64_t v127 = 0;
            do
            {
              unint64_t v128 = v122 + 1;
              *((void *)this + 1) = v122 + 1;
              char v129 = *(unsigned char *)(v124 + v122);
              v127 |= (unint64_t)(v129 & 0x7F) << v125;
              if ((v129 & 0x80) == 0) {
                goto LABEL_286;
              }
              v125 += 7;
              unint64_t v122 = v128;
              BOOL v14 = v126++ > 8;
            }
            while (!v14);
LABEL_235:
            uint64_t v127 = 0;
            goto LABEL_286;
          }
          char v171 = 0;
          unsigned int v172 = 0;
          uint64_t v127 = 0;
          if (v123 <= v122) {
            unint64_t v123 = *((void *)this + 1);
          }
          break;
        case 0x1Eu:
          *(_DWORD *)(a1 + 152) |= 0x80u;
          unint64_t v130 = *((void *)this + 1);
          if (v130 <= 0xFFFFFFFFFFFFFFFBLL && v130 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 60) = *(_DWORD *)(*(void *)this + v130);
LABEL_237:
            *((void *)this + 1) += 4;
          }
          else
          {
LABEL_156:
            *((unsigned char *)this + 24) = 1;
          }
          goto LABEL_238;
        default:
          uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
          if (!result) {
            return result;
          }
          goto LABEL_238;
      }
      while (1)
      {
        if (v123 == v122)
        {
          uint64_t v127 = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_286;
        }
        unint64_t v173 = v122 + 1;
        char v174 = *(unsigned char *)(v124 + v122);
        *((void *)this + 1) = v173;
        v127 |= (unint64_t)(v174 & 0x7F) << v171;
        if ((v174 & 0x80) == 0) {
          break;
        }
        v171 += 7;
        unint64_t v122 = v173;
        BOOL v14 = v172++ > 8;
        if (v14) {
          goto LABEL_235;
        }
      }
      if (*((unsigned char *)this + 24)) {
        uint64_t v127 = 0;
      }
LABEL_286:
      *(void *)(a1 + 32) = v127;
LABEL_238:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10167E024(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 152);
  if ((v4 & 0x20000000) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(unsigned char *)(result + 148), 1u);
    int v4 = *(_DWORD *)(v3 + 152);
    if ((v4 & 0x200000) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_34;
    }
  }
  else if ((v4 & 0x200000) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 116), 2u);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 24), 3u);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_5:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 144), 4u);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_6:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 136), 5u);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x100000) == 0)
  {
LABEL_7:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 112), 6u);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x40000) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 104), 7u);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 40), 8u);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_10:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 140), 9u);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x8000) == 0)
  {
LABEL_11:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 92), 0xAu);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x4000) == 0)
  {
LABEL_12:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 88), 0xBu);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x800000) == 0)
  {
LABEL_13:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 124), 0xCu);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x400000) == 0)
  {
LABEL_14:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 120), 0xDu);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_15:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 128), 0xEu);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x2000) == 0)
  {
LABEL_16:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 84), 0xFu);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x1000) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80), 0x10u);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x400) == 0) {
      goto LABEL_19;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76), 0x11u);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x400) == 0)
  {
LABEL_19:
    if ((v4 & 0x200) == 0) {
      goto LABEL_20;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72), 0x12u);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x200) == 0)
  {
LABEL_20:
    if ((v4 & 1) == 0) {
      goto LABEL_21;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 68), 0x13u);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 1) == 0)
  {
LABEL_21:
    if ((v4 & 2) == 0) {
      goto LABEL_22;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 8), 0x14u);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 2) == 0)
  {
LABEL_22:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 16), 0x15u);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x10000) == 0)
  {
LABEL_23:
    if ((v4 & 0x20) == 0) {
      goto LABEL_24;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 96), 0x16u);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x20) == 0)
  {
LABEL_24:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 48), 0x17u);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_25:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 132), 0x18u);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x20000) == 0)
  {
LABEL_26:
    if ((v4 & 0x100) == 0) {
      goto LABEL_27;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 100), 0x19u);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x100) == 0)
  {
LABEL_27:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_58;
  }
LABEL_57:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64), 0x1Au);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x80000) == 0)
  {
LABEL_28:
    if ((v4 & 0x40) == 0) {
      goto LABEL_29;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 108), 0x1Bu);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x40) == 0)
  {
LABEL_29:
    if ((v4 & 8) == 0) {
      goto LABEL_30;
    }
LABEL_60:
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 32), 0x1Du);
    if ((*(_DWORD *)(v3 + 152) & 0x80) == 0) {
      return result;
    }
    goto LABEL_61;
  }
LABEL_59:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56), 0x1Cu);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 8) != 0) {
    goto LABEL_60;
  }
LABEL_30:
  if ((v4 & 0x80) == 0) {
    return result;
  }
LABEL_61:
  float v5 = *(float *)(v3 + 60);

  return PB::Writer::write(this, v5, 0x1Eu);
}

uint64_t sub_10167E3A4(uint64_t result)
{
  *(void *)uint64_t result = &off_102333E58;
  *(void *)(result + 280) = 0;
  *(_DWORD *)(result + 288) = 0;
  return result;
}

void sub_10167E3D0(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

float sub_10167E408(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102333E58;
  unint64_t v2 = (uint64_t *)(a1 + 280);
  *(void *)(a1 + 280) = 0;
  *(_DWORD *)(a1 + 288) = 0;
  uint64_t v3 = (uint64_t *)(a2 + 280);
  uint64_t v4 = *(void *)(a2 + 280);
  if (v4)
  {
    __int16 v6 = 0;
    uint64_t v8 = *(void *)(a2 + 8);
    *(_WORD *)(a1 + 288) = 0;
    uint64_t v5 = 1;
    *unint64_t v2 = 1;
    *(void *)(a1 + 8) = v8;
    uint64_t v4 = *v3;
    __int16 v7 = *(_WORD *)(a2 + 288);
    if ((*v3 & 0x2000000000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v5 = 0;
  __int16 v6 = 0;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((v4 & 0x2000000000000) != 0)
  {
LABEL_5:
    float result = *(float *)(a2 + 208);
    v5 |= 0x2000000000000uLL;
    *unint64_t v2 = v5;
    *(_WORD *)(a1 + 288) = 0;
    *(float *)(a1 + 208) = result;
    uint64_t v4 = *v3;
    __int16 v7 = *(_WORD *)(a2 + 288);
  }
LABEL_6:
  if ((v7 & 0x100) != 0)
  {
    char v10 = *(unsigned char *)(a2 + 276);
    __int16 v6 = 256;
    *unint64_t v2 = v5;
    *(_WORD *)(a1 + 288) = 256;
    *(unsigned char *)(a1 + 276) = v10;
    uint64_t v4 = *v3;
    __int16 v7 = *(_WORD *)(a2 + 288);
    if ((v7 & 0x80) == 0)
    {
LABEL_8:
      if ((v7 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_83;
    }
  }
  else if ((v7 & 0x80) == 0)
  {
    goto LABEL_8;
  }
  char v11 = *(unsigned char *)(a2 + 275);
  v6 |= 0x80u;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(unsigned char *)(a1 + 275) = v11;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((v7 & 0x20) == 0)
  {
LABEL_9:
    if ((v7 & 4) == 0) {
      goto LABEL_10;
    }
    goto LABEL_84;
  }
LABEL_83:
  char v12 = *(unsigned char *)(a2 + 273);
  v6 |= 0x20u;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(unsigned char *)(a1 + 273) = v12;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((v7 & 4) == 0)
  {
LABEL_10:
    if ((v7 & 2) == 0) {
      goto LABEL_11;
    }
    goto LABEL_85;
  }
LABEL_84:
  char v13 = *(unsigned char *)(a2 + 270);
  v6 |= 4u;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(unsigned char *)(a1 + 270) = v13;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((v7 & 2) == 0)
  {
LABEL_11:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_86;
  }
LABEL_85:
  char v14 = *(unsigned char *)(a2 + 269);
  v6 |= 2u;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(unsigned char *)(a1 + 269) = v14;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x40000) == 0)
  {
LABEL_12:
    if ((v7 & 1) == 0) {
      goto LABEL_13;
    }
    goto LABEL_87;
  }
LABEL_86:
  int v15 = *(_DWORD *)(a2 + 84);
  v5 |= 0x40000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(_DWORD *)(a1 + 84) = v15;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((v7 & 1) == 0)
  {
LABEL_13:
    if ((v7 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_88;
  }
LABEL_87:
  char v16 = *(unsigned char *)(a2 + 268);
  v6 |= 1u;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(unsigned char *)(a1 + 268) = v16;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((v7 & 0x10) == 0)
  {
LABEL_14:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_89;
  }
LABEL_88:
  char v17 = *(unsigned char *)(a2 + 272);
  v6 |= 0x10u;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(unsigned char *)(a1 + 272) = v17;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x20000) == 0)
  {
LABEL_15:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_90;
  }
LABEL_89:
  float result = *(float *)(a2 + 80);
  v5 |= 0x20000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 80) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x10000) == 0)
  {
LABEL_16:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_91;
  }
LABEL_90:
  float result = *(float *)(a2 + 76);
  v5 |= 0x10000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 76) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x400000) == 0)
  {
LABEL_17:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_92;
  }
LABEL_91:
  float result = *(float *)(a2 + 100);
  v5 |= 0x400000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 100) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x8000000) == 0)
  {
LABEL_18:
    if ((v4 & 0x100000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_93;
  }
LABEL_92:
  float result = *(float *)(a2 + 120);
  v5 |= 0x8000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 120) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x100000000) == 0)
  {
LABEL_19:
    if ((v4 & 0x4000000000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_94;
  }
LABEL_93:
  float result = *(float *)(a2 + 140);
  v5 |= (unint64_t)&_mh_execute_header;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 140) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x4000000000000) == 0)
  {
LABEL_20:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_95;
  }
LABEL_94:
  float result = *(float *)(a2 + 212);
  v5 |= 0x4000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 212) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x800000) == 0)
  {
LABEL_21:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_96;
  }
LABEL_95:
  float result = *(float *)(a2 + 104);
  v5 |= 0x800000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 104) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x10000000) == 0)
  {
LABEL_22:
    if ((v4 & 0x200000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_97;
  }
LABEL_96:
  float result = *(float *)(a2 + 124);
  v5 |= 0x10000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 124) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x200000000) == 0)
  {
LABEL_23:
    if ((v4 & 0x8000000000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_98;
  }
LABEL_97:
  float result = *(float *)(a2 + 144);
  v5 |= 0x200000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 144) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x8000000000000) == 0)
  {
LABEL_24:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_99;
  }
LABEL_98:
  float result = *(float *)(a2 + 216);
  v5 |= 0x8000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 216) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x1000000) == 0)
  {
LABEL_25:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_100;
  }
LABEL_99:
  float result = *(float *)(a2 + 108);
  v5 |= 0x1000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 108) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x20000000) == 0)
  {
LABEL_26:
    if ((v4 & 0x400000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_101;
  }
LABEL_100:
  float result = *(float *)(a2 + 128);
  v5 |= 0x20000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 128) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x400000000) == 0)
  {
LABEL_27:
    if ((v4 & 0x10000000000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_102;
  }
LABEL_101:
  float result = *(float *)(a2 + 148);
  v5 |= 0x400000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 148) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x10000000000000) == 0)
  {
LABEL_28:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_103;
  }
LABEL_102:
  float result = *(float *)(a2 + 220);
  v5 |= 0x10000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 220) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x80000) == 0)
  {
LABEL_29:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_104;
  }
LABEL_103:
  float result = *(float *)(a2 + 88);
  v5 |= 0x80000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 88) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x100000) == 0)
  {
LABEL_30:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_105;
  }
LABEL_104:
  float result = *(float *)(a2 + 92);
  v5 |= 0x100000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 92) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x200000) == 0)
  {
LABEL_31:
    if ((v4 & 0x100000000000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_106;
  }
LABEL_105:
  float result = *(float *)(a2 + 96);
  v5 |= 0x200000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 96) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x100000000000000) == 0)
  {
LABEL_32:
    if ((v4 & 0x80000000000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_107;
  }
LABEL_106:
  float result = *(float *)(a2 + 236);
  v5 |= 0x100000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 236) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x80000000000000) == 0)
  {
LABEL_33:
    if ((v4 & 0x200000000000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_108;
  }
LABEL_107:
  float result = *(float *)(a2 + 232);
  v5 |= 0x80000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 232) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x200000000000000) == 0)
  {
LABEL_34:
    if ((v4 & 0x40) == 0) {
      goto LABEL_35;
    }
    goto LABEL_109;
  }
LABEL_108:
  float result = *(float *)(a2 + 240);
  v5 |= 0x200000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 240) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x40) == 0)
  {
LABEL_35:
    if ((v4 & 2) == 0) {
      goto LABEL_36;
    }
    goto LABEL_110;
  }
LABEL_109:
  float result = *(float *)(a2 + 36);
  v5 |= 0x40uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 36) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 2) == 0)
  {
LABEL_36:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_111;
  }
LABEL_110:
  float result = *(float *)(a2 + 16);
  v5 |= 2uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 16) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x8000) == 0)
  {
LABEL_37:
    if ((v7 & 0x800) == 0) {
      goto LABEL_38;
    }
    goto LABEL_112;
  }
LABEL_111:
  float result = *(float *)(a2 + 72);
  v5 |= 0x8000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 72) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((v7 & 0x800) == 0)
  {
LABEL_38:
    if ((v7 & 8) == 0) {
      goto LABEL_39;
    }
    goto LABEL_113;
  }
LABEL_112:
  char v18 = *(unsigned char *)(a2 + 279);
  v6 |= 0x800u;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(unsigned char *)(a1 + 279) = v18;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((v7 & 8) == 0)
  {
LABEL_39:
    if ((v4 & 0x80) == 0) {
      goto LABEL_40;
    }
    goto LABEL_114;
  }
LABEL_113:
  char v19 = *(unsigned char *)(a2 + 271);
  v6 |= 8u;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(unsigned char *)(a1 + 271) = v19;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x80) == 0)
  {
LABEL_40:
    if ((v4 & 0x400) == 0) {
      goto LABEL_41;
    }
    goto LABEL_115;
  }
LABEL_114:
  float result = *(float *)(a2 + 40);
  v5 |= 0x80uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 40) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x400) == 0)
  {
LABEL_41:
    if ((v4 & 0x200) == 0) {
      goto LABEL_42;
    }
    goto LABEL_116;
  }
LABEL_115:
  float result = *(float *)(a2 + 52);
  v5 |= 0x400uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 52) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x200) == 0)
  {
LABEL_42:
    if ((v4 & 0x100) == 0) {
      goto LABEL_43;
    }
    goto LABEL_117;
  }
LABEL_116:
  float result = *(float *)(a2 + 48);
  v5 |= 0x200uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 48) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x100) == 0)
  {
LABEL_43:
    if ((v4 & 4) == 0) {
      goto LABEL_44;
    }
    goto LABEL_118;
  }
LABEL_117:
  float result = *(float *)(a2 + 44);
  v5 |= 0x100uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 44) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 4) == 0)
  {
LABEL_44:
    if ((v4 & 0x20) == 0) {
      goto LABEL_45;
    }
    goto LABEL_119;
  }
LABEL_118:
  float result = *(float *)(a2 + 20);
  v5 |= 4uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 20) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x20) == 0)
  {
LABEL_45:
    if ((v4 & 0x10) == 0) {
      goto LABEL_46;
    }
    goto LABEL_120;
  }
LABEL_119:
  float result = *(float *)(a2 + 32);
  v5 |= 0x20uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 32) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x10) == 0)
  {
LABEL_46:
    if ((v4 & 8) == 0) {
      goto LABEL_47;
    }
    goto LABEL_121;
  }
LABEL_120:
  float result = *(float *)(a2 + 28);
  v5 |= 0x10uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 28) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 8) == 0)
  {
LABEL_47:
    if ((v4 & 0x800) == 0) {
      goto LABEL_48;
    }
    goto LABEL_122;
  }
LABEL_121:
  float result = *(float *)(a2 + 24);
  v5 |= 8uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 24) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x800) == 0)
  {
LABEL_48:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_123;
  }
LABEL_122:
  float result = *(float *)(a2 + 56);
  v5 |= 0x800uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 56) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x4000) == 0)
  {
LABEL_49:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_124;
  }
LABEL_123:
  float result = *(float *)(a2 + 68);
  v5 |= 0x4000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 68) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x2000) == 0)
  {
LABEL_50:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_125;
  }
LABEL_124:
  float result = *(float *)(a2 + 64);
  v5 |= 0x2000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 64) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x1000) == 0)
  {
LABEL_51:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_126;
  }
LABEL_125:
  float result = *(float *)(a2 + 60);
  v5 |= 0x1000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 60) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x2000000) == 0)
  {
LABEL_52:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_127;
  }
LABEL_126:
  float result = *(float *)(a2 + 112);
  v5 |= 0x2000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 112) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x40000000) == 0)
  {
LABEL_53:
    if ((v4 & 0x800000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_128;
  }
LABEL_127:
  float result = *(float *)(a2 + 132);
  v5 |= 0x40000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 132) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x800000000) == 0)
  {
LABEL_54:
    if ((v4 & 0x20000000000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_129;
  }
LABEL_128:
  float result = *(float *)(a2 + 152);
  v5 |= 0x800000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 152) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x20000000000000) == 0)
  {
LABEL_55:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_130;
  }
LABEL_129:
  float result = *(float *)(a2 + 224);
  v5 |= 0x20000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 224) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x4000000) == 0)
  {
LABEL_56:
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_131;
  }
LABEL_130:
  float result = *(float *)(a2 + 116);
  v5 |= 0x4000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 116) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x80000000) == 0)
  {
LABEL_57:
    if ((v4 & 0x1000000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_132;
  }
LABEL_131:
  float result = *(float *)(a2 + 136);
  v5 |= 0x80000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 136) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x1000000000) == 0)
  {
LABEL_58:
    if ((v4 & 0x40000000000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_133;
  }
LABEL_132:
  float result = *(float *)(a2 + 156);
  v5 |= 0x1000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 156) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x40000000000000) == 0)
  {
LABEL_59:
    if ((v7 & 0x40) == 0) {
      goto LABEL_60;
    }
    goto LABEL_134;
  }
LABEL_133:
  float result = *(float *)(a2 + 228);
  v5 |= 0x40000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 228) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((v7 & 0x40) == 0)
  {
LABEL_60:
    if ((v4 & 0x1000000000000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_135;
  }
LABEL_134:
  char v20 = *(unsigned char *)(a2 + 274);
  v6 |= 0x40u;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(unsigned char *)(a1 + 274) = v20;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x1000000000000000) == 0)
  {
LABEL_61:
    if ((v4 & 0x400000000000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_136;
  }
LABEL_135:
  float result = *(float *)(a2 + 252);
  v5 |= 0x1000000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 252) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x400000000000000) == 0)
  {
LABEL_62:
    if ((v7 & 0x200) == 0) {
      goto LABEL_63;
    }
    goto LABEL_137;
  }
LABEL_136:
  float result = *(float *)(a2 + 244);
  v5 |= 0x400000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 244) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((v7 & 0x200) == 0)
  {
LABEL_63:
    if ((v4 & 0x2000000000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_138;
  }
LABEL_137:
  char v21 = *(unsigned char *)(a2 + 277);
  v6 |= 0x200u;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(unsigned char *)(a1 + 277) = v21;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x2000000000) == 0)
  {
LABEL_64:
    if ((v4 & 0x4000000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_139;
  }
LABEL_138:
  float result = *(float *)(a2 + 160);
  v5 |= 0x2000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 160) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x4000000000) == 0)
  {
LABEL_65:
    if ((v4 & 0x8000000000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_140;
  }
LABEL_139:
  float result = *(float *)(a2 + 164);
  v5 |= 0x4000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 164) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x8000000000) == 0)
  {
LABEL_66:
    if ((v4 & 0x20000000000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_141;
  }
LABEL_140:
  float result = *(float *)(a2 + 168);
  v5 |= 0x8000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 168) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x20000000000) == 0)
  {
LABEL_67:
    if ((v4 & 0x10000000000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_142;
  }
LABEL_141:
  float result = *(float *)(a2 + 176);
  v5 |= 0x20000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 176) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x10000000000) == 0)
  {
LABEL_68:
    if ((v4 & 0x40000000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_143;
  }
LABEL_142:
  float result = *(float *)(a2 + 172);
  v5 |= 0x10000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 172) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x40000000000) == 0)
  {
LABEL_69:
    if ((v4 & 0x80000000000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_144;
  }
LABEL_143:
  float result = *(float *)(a2 + 180);
  v5 |= 0x40000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 180) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x80000000000) == 0)
  {
LABEL_70:
    if ((v4 & 0x100000000000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_145;
  }
LABEL_144:
  float result = *(float *)(a2 + 184);
  v5 |= 0x80000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 184) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x100000000000) == 0)
  {
LABEL_71:
    if ((v4 & 0x200000000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_146;
  }
LABEL_145:
  float result = *(float *)(a2 + 188);
  v5 |= 0x100000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 188) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x200000000000) == 0)
  {
LABEL_72:
    if ((v4 & 0x800000000000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_147;
  }
LABEL_146:
  float result = *(float *)(a2 + 192);
  v5 |= 0x200000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 192) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x800000000000) == 0)
  {
LABEL_73:
    if ((v4 & 0x400000000000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_148;
  }
LABEL_147:
  float result = *(float *)(a2 + 200);
  v5 |= 0x800000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 200) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x400000000000) == 0)
  {
LABEL_74:
    if ((v4 & 0x1000000000000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_149;
  }
LABEL_148:
  float result = *(float *)(a2 + 196);
  v5 |= 0x400000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 196) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x1000000000000) == 0)
  {
LABEL_75:
    if ((v4 & 0x800000000000000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_150;
  }
LABEL_149:
  float result = *(float *)(a2 + 204);
  v5 |= 0x1000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 204) = result;
  uint64_t v4 = *v3;
  __int16 v7 = *(_WORD *)(a2 + 288);
  if ((*v3 & 0x800000000000000) == 0)
  {
LABEL_76:
    if ((v7 & 0x400) == 0) {
      goto LABEL_77;
    }
    goto LABEL_151;
  }
LABEL_150:
  int v22 = *(_DWORD *)(a2 + 248);
  v5 |= 0x800000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(_DWORD *)(a1 + 248) = v22;
  uint64_t v4 = *v3;
  if ((*(_WORD *)(a2 + 288) & 0x400) == 0)
  {
LABEL_77:
    if ((v4 & 0x4000000000000000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_152;
  }
LABEL_151:
  char v23 = *(unsigned char *)(a2 + 278);
  v6 |= 0x400u;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(unsigned char *)(a1 + 278) = v23;
  uint64_t v4 = *v3;
  if ((*v3 & 0x4000000000000000) == 0)
  {
LABEL_78:
    if ((v4 & 0x8000000000000000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_153;
  }
LABEL_152:
  float result = *(float *)(a2 + 260);
  v5 |= 0x4000000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 260) = result;
  uint64_t v4 = *v3;
  if ((*v3 & 0x8000000000000000) == 0)
  {
LABEL_79:
    if ((v4 & 0x2000000000000000) == 0) {
      return result;
    }
LABEL_154:
    float result = *(float *)(a2 + 256);
    *unint64_t v2 = v5 | 0x2000000000000000;
    *(_WORD *)(a1 + 288) = v6;
    *(float *)(a1 + 256) = result;
    return result;
  }
LABEL_153:
  float result = *(float *)(a2 + 264);
  v5 |= 0x8000000000000000;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 288) = v6;
  *(float *)(a1 + 264) = result;
  if ((*v3 & 0x2000000000000000) != 0) {
    goto LABEL_154;
  }
  return result;
}

uint64_t sub_10167EEEC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = (uint64_t *)(a1 + 280);
  uint64_t v6 = *(void *)(a1 + 280);
  if ((v6 & 2) != 0)
  {
    PB::TextFormatter::format(this, "audioDvChaosThreshold", *(float *)(a1 + 16));
    uint64_t v6 = *v5;
    __int16 v7 = *(_WORD *)(a1 + 288);
    if ((*v5 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((v6 & 4) != 0)
  {
LABEL_5:
    PB::TextFormatter::format(this, "audioDvChaosThresholdCenter", *(float *)(a1 + 20));
    uint64_t v6 = *v5;
    __int16 v7 = *(_WORD *)(a1 + 288);
  }
LABEL_6:
  if ((v6 & 8) != 0)
  {
    PB::TextFormatter::format(this, "audioDvChaosThresholdMax", *(float *)(a1 + 24));
    uint64_t v6 = *v5;
    __int16 v7 = *(_WORD *)(a1 + 288);
    if ((*v5 & 0x10) == 0)
    {
LABEL_8:
      if ((v6 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_86;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_8;
  }
  PB::TextFormatter::format(this, "audioDvChaosThresholdMin", *(float *)(a1 + 28));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x20) == 0)
  {
LABEL_9:
    if ((v6 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_87;
  }
LABEL_86:
  PB::TextFormatter::format(this, "audioDvChaosThresholdStretch", *(float *)(a1 + 32));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x40) == 0)
  {
LABEL_10:
    if ((v6 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_88;
  }
LABEL_87:
  PB::TextFormatter::format(this, "audioDvEnergyThreshold", *(float *)(a1 + 36));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x80) == 0)
  {
LABEL_11:
    if ((v6 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_89;
  }
LABEL_88:
  PB::TextFormatter::format(this, "audioDvEnergyThresholdCenter", *(float *)(a1 + 40));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x100) == 0)
  {
LABEL_12:
    if ((v6 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_90;
  }
LABEL_89:
  PB::TextFormatter::format(this, "audioDvEnergyThresholdMax", *(float *)(a1 + 44));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x200) == 0)
  {
LABEL_13:
    if ((v6 & 0x400) == 0) {
      goto LABEL_14;
    }
    goto LABEL_91;
  }
LABEL_90:
  PB::TextFormatter::format(this, "audioDvEnergyThresholdMin", *(float *)(a1 + 48));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x400) == 0)
  {
LABEL_14:
    if ((v6 & 0x800) == 0) {
      goto LABEL_15;
    }
    goto LABEL_92;
  }
LABEL_91:
  PB::TextFormatter::format(this, "audioDvEnergyThresholdStretch", *(float *)(a1 + 52));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x800) == 0)
  {
LABEL_15:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_93;
  }
LABEL_92:
  PB::TextFormatter::format(this, "audioDvMaxRmsThresholdCenter", *(float *)(a1 + 56));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x1000) == 0)
  {
LABEL_16:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_94;
  }
LABEL_93:
  PB::TextFormatter::format(this, "audioDvMaxRmsThresholdMax", *(float *)(a1 + 60));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x2000) == 0)
  {
LABEL_17:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_95;
  }
LABEL_94:
  PB::TextFormatter::format(this, "audioDvMaxRmsThresholdMin", *(float *)(a1 + 64));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x4000) == 0)
  {
LABEL_18:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_96;
  }
LABEL_95:
  PB::TextFormatter::format(this, "audioDvMaxRmsThresholdStretch", *(float *)(a1 + 68));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x8000) == 0)
  {
LABEL_19:
    if ((v7 & 1) == 0) {
      goto LABEL_20;
    }
    goto LABEL_97;
  }
LABEL_96:
  PB::TextFormatter::format(this, "audioDvRmsThreshold", *(float *)(a1 + 72));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((v7 & 1) == 0)
  {
LABEL_20:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_98;
  }
LABEL_97:
  PB::TextFormatter::format(this, "crashDetectorDecision", *(unsigned char *)(a1 + 268));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x10000) == 0)
  {
LABEL_21:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_99;
  }
LABEL_98:
  PB::TextFormatter::format(this, "deltaVXYBiggestImpact", *(float *)(a1 + 76));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x20000) == 0)
  {
LABEL_22:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_100;
  }
LABEL_99:
  PB::TextFormatter::format(this, "deltaVXYOverEpoch", *(float *)(a1 + 80));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x40000) == 0)
  {
LABEL_23:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_101;
  }
LABEL_100:
  PB::TextFormatter::format(this, "detectorRegime", *(_DWORD *)(a1 + 84));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x80000) == 0)
  {
LABEL_24:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_102;
  }
LABEL_101:
  PB::TextFormatter::format(this, "detectorRegimeAccelnormThreshold1", *(float *)(a1 + 88));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x100000) == 0)
  {
LABEL_25:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_103;
  }
LABEL_102:
  PB::TextFormatter::format(this, "detectorRegimeAccelnormThreshold2", *(float *)(a1 + 92));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x200000) == 0)
  {
LABEL_26:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_104;
  }
LABEL_103:
  PB::TextFormatter::format(this, "detectorRegimeAccelnormThreshold3", *(float *)(a1 + 96));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x400000) == 0)
  {
LABEL_27:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_105;
  }
LABEL_104:
  PB::TextFormatter::format(this, "detectorRegimeDeltaVThreshold1", *(float *)(a1 + 100));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x800000) == 0)
  {
LABEL_28:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_106;
  }
LABEL_105:
  PB::TextFormatter::format(this, "detectorRegimeDeltaVThreshold1WithAudio", *(float *)(a1 + 104));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x1000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_107;
  }
LABEL_106:
  PB::TextFormatter::format(this, "detectorRegimeDeltaVThreshold1WithoutAudio", *(float *)(a1 + 108));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x2000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_108;
  }
LABEL_107:
  PB::TextFormatter::format(this, "detectorRegimeDeltaVThreshold1WithoutAudioStandaloneBaroNeeded", *(float *)(a1 + 112));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x4000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_109;
  }
LABEL_108:
  PB::TextFormatter::format(this, "detectorRegimeDeltaVThreshold1WithoutAudioStandaloneFull", *(float *)(a1 + 116));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x8000000) == 0)
  {
LABEL_32:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_110;
  }
LABEL_109:
  PB::TextFormatter::format(this, "detectorRegimeDeltaVThreshold2", *(float *)(a1 + 120));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x10000000) == 0)
  {
LABEL_33:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_111;
  }
LABEL_110:
  PB::TextFormatter::format(this, "detectorRegimeDeltaVThreshold2WithAudio", *(float *)(a1 + 124));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x20000000) == 0)
  {
LABEL_34:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_112;
  }
LABEL_111:
  PB::TextFormatter::format(this, "detectorRegimeDeltaVThreshold2WithoutAudio", *(float *)(a1 + 128));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x40000000) == 0)
  {
LABEL_35:
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_113;
  }
LABEL_112:
  PB::TextFormatter::format(this, "detectorRegimeDeltaVThreshold2WithoutAudioStandaloneBaroNeeded", *(float *)(a1 + 132));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x80000000) == 0)
  {
LABEL_36:
    if ((v6 & 0x100000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_114;
  }
LABEL_113:
  PB::TextFormatter::format(this, "detectorRegimeDeltaVThreshold2WithoutAudioStandaloneFull", *(float *)(a1 + 136));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x100000000) == 0)
  {
LABEL_37:
    if ((v6 & 0x200000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_115;
  }
LABEL_114:
  PB::TextFormatter::format(this, "detectorRegimeDeltaVThreshold3", *(float *)(a1 + 140));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x200000000) == 0)
  {
LABEL_38:
    if ((v6 & 0x400000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_116;
  }
LABEL_115:
  PB::TextFormatter::format(this, "detectorRegimeDeltaVThreshold3WithAudio", *(float *)(a1 + 144));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x400000000) == 0)
  {
LABEL_39:
    if ((v6 & 0x800000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_117;
  }
LABEL_116:
  PB::TextFormatter::format(this, "detectorRegimeDeltaVThreshold3WithoutAudio", *(float *)(a1 + 148));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x800000000) == 0)
  {
LABEL_40:
    if ((v6 & 0x1000000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_118;
  }
LABEL_117:
  PB::TextFormatter::format(this, "detectorRegimeDeltaVThreshold3WithoutAudioStandaloneBaroNeeded", *(float *)(a1 + 152));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x1000000000) == 0)
  {
LABEL_41:
    if ((v7 & 2) == 0) {
      goto LABEL_42;
    }
    goto LABEL_119;
  }
LABEL_118:
  PB::TextFormatter::format(this, "detectorRegimeDeltaVThreshold3WithoutAudioStandaloneFull", *(float *)(a1 + 156));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((v7 & 2) == 0)
  {
LABEL_42:
    if ((v7 & 4) == 0) {
      goto LABEL_43;
    }
    goto LABEL_120;
  }
LABEL_119:
  PB::TextFormatter::format(this, "hasAudioInEpoch", *(unsigned char *)(a1 + 269));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((v7 & 4) == 0)
  {
LABEL_43:
    if ((v7 & 8) == 0) {
      goto LABEL_44;
    }
    goto LABEL_121;
  }
LABEL_120:
  PB::TextFormatter::format(this, "isAudio", *(unsigned char *)(a1 + 270));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((v7 & 8) == 0)
  {
LABEL_44:
    if ((v7 & 0x10) == 0) {
      goto LABEL_45;
    }
    goto LABEL_122;
  }
LABEL_121:
  PB::TextFormatter::format(this, "isAudioDv", *(unsigned char *)(a1 + 271));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((v7 & 0x10) == 0)
  {
LABEL_45:
    if ((v7 & 0x20) == 0) {
      goto LABEL_46;
    }
    goto LABEL_123;
  }
LABEL_122:
  PB::TextFormatter::format(this, "isAudioSupported", *(unsigned char *)(a1 + 272));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((v7 & 0x20) == 0)
  {
LABEL_46:
    if ((v7 & 0x40) == 0) {
      goto LABEL_47;
    }
    goto LABEL_124;
  }
LABEL_123:
  PB::TextFormatter::format(this, "isBaro", *(unsigned char *)(a1 + 273));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((v7 & 0x40) == 0)
  {
LABEL_47:
    if ((v7 & 0x80) == 0) {
      goto LABEL_48;
    }
    goto LABEL_125;
  }
LABEL_124:
  PB::TextFormatter::format(this, "isCompanionConnected", *(unsigned char *)(a1 + 274));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((v7 & 0x80) == 0)
  {
LABEL_48:
    if ((v7 & 0x100) == 0) {
      goto LABEL_49;
    }
    goto LABEL_126;
  }
LABEL_125:
  PB::TextFormatter::format(this, "isFreeFall", *(unsigned char *)(a1 + 275));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((v7 & 0x100) == 0)
  {
LABEL_49:
    if ((v7 & 0x200) == 0) {
      goto LABEL_50;
    }
    goto LABEL_127;
  }
LABEL_126:
  PB::TextFormatter::format(this, "isPulse", *(unsigned char *)(a1 + 276));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((v7 & 0x200) == 0)
  {
LABEL_50:
    if ((v6 & 0x2000000000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_128;
  }
LABEL_127:
  PB::TextFormatter::format(this, "lowSenseCrashDetectorDecision", *(unsigned char *)(a1 + 277));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x2000000000) == 0)
  {
LABEL_51:
    if ((v6 & 0x4000000000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_129;
  }
LABEL_128:
  PB::TextFormatter::format(this, "lowSenseWithAudioDeltaVThreshold1", *(float *)(a1 + 160));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x4000000000) == 0)
  {
LABEL_52:
    if ((v6 & 0x8000000000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_130;
  }
LABEL_129:
  PB::TextFormatter::format(this, "lowSenseWithAudioDeltaVThreshold2", *(float *)(a1 + 164));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x8000000000) == 0)
  {
LABEL_53:
    if ((v6 & 0x10000000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_131;
  }
LABEL_130:
  PB::TextFormatter::format(this, "lowSenseWithAudioDeltaVThreshold3", *(float *)(a1 + 168));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x10000000000) == 0)
  {
LABEL_54:
    if ((v6 & 0x20000000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_132;
  }
LABEL_131:
  PB::TextFormatter::format(this, "lowSenseWithAudioMaxPulseThreshold", *(float *)(a1 + 172));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x20000000000) == 0)
  {
LABEL_55:
    if ((v6 & 0x40000000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_133;
  }
LABEL_132:
  PB::TextFormatter::format(this, "lowSenseWithAudioMaxaccelnormThreshold", *(float *)(a1 + 176));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x40000000000) == 0)
  {
LABEL_56:
    if ((v6 & 0x80000000000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_134;
  }
LABEL_133:
  PB::TextFormatter::format(this, "lowSenseWithAudioPeakPressureThreshold", *(float *)(a1 + 180));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x80000000000) == 0)
  {
LABEL_57:
    if ((v6 & 0x100000000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_135;
  }
LABEL_134:
  PB::TextFormatter::format(this, "lowSenseWithoutAudioDeltaVThreshold1", *(float *)(a1 + 184));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x100000000000) == 0)
  {
LABEL_58:
    if ((v6 & 0x200000000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_136;
  }
LABEL_135:
  PB::TextFormatter::format(this, "lowSenseWithoutAudioDeltaVThreshold2", *(float *)(a1 + 188));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x200000000000) == 0)
  {
LABEL_59:
    if ((v6 & 0x400000000000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_137;
  }
LABEL_136:
  PB::TextFormatter::format(this, "lowSenseWithoutAudioDeltaVThreshold3", *(float *)(a1 + 192));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x400000000000) == 0)
  {
LABEL_60:
    if ((v6 & 0x800000000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_138;
  }
LABEL_137:
  PB::TextFormatter::format(this, "lowSenseWithoutAudioMaxPulseThreshold", *(float *)(a1 + 196));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x800000000000) == 0)
  {
LABEL_61:
    if ((v6 & 0x1000000000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_139;
  }
LABEL_138:
  PB::TextFormatter::format(this, "lowSenseWithoutAudioMaxaccelnormThreshold", *(float *)(a1 + 200));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x1000000000000) == 0)
  {
LABEL_62:
    if ((v6 & 0x2000000000000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_140;
  }
LABEL_139:
  PB::TextFormatter::format(this, "lowSenseWithoutAudioPeakPressureThreshold", *(float *)(a1 + 204));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x2000000000000) == 0)
  {
LABEL_63:
    if ((v6 & 0x4000000000000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_141;
  }
LABEL_140:
  PB::TextFormatter::format(this, "maxAccelNorm", *(float *)(a1 + 208));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x4000000000000) == 0)
  {
LABEL_64:
    if ((v6 & 0x8000000000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_142;
  }
LABEL_141:
  PB::TextFormatter::format(this, "maxAccelNormThreshold", *(float *)(a1 + 212));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x8000000000000) == 0)
  {
LABEL_65:
    if ((v6 & 0x10000000000000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_143;
  }
LABEL_142:
  PB::TextFormatter::format(this, "maxAccelNormThresholdWithAudio", *(float *)(a1 + 216));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x10000000000000) == 0)
  {
LABEL_66:
    if ((v6 & 0x20000000000000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_144;
  }
LABEL_143:
  PB::TextFormatter::format(this, "maxAccelNormThresholdWithoutAudio", *(float *)(a1 + 220));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x20000000000000) == 0)
  {
LABEL_67:
    if ((v6 & 0x40000000000000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_145;
  }
LABEL_144:
  PB::TextFormatter::format(this, "maxAccelNormThresholdWithoutAudioStandaloneBaroNeeded", *(float *)(a1 + 224));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x40000000000000) == 0)
  {
LABEL_68:
    if ((v6 & 0x80000000000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_146;
  }
LABEL_145:
  PB::TextFormatter::format(this, "maxAccelNormThresholdWithoutAudioStandaloneFull", *(float *)(a1 + 228));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x80000000000000) == 0)
  {
LABEL_69:
    if ((v6 & 0x100000000000000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_147;
  }
LABEL_146:
  PB::TextFormatter::format(this, "maxAudioChaos", *(float *)(a1 + 232));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x100000000000000) == 0)
  {
LABEL_70:
    if ((v6 & 0x200000000000000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_148;
  }
LABEL_147:
  PB::TextFormatter::format(this, "maxAudioEnergy", *(float *)(a1 + 236));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x200000000000000) == 0)
  {
LABEL_71:
    if ((v6 & 0x400000000000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_149;
  }
LABEL_148:
  PB::TextFormatter::format(this, "maxAudioRms", *(float *)(a1 + 240));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x400000000000000) == 0)
  {
LABEL_72:
    if ((v6 & 0x800000000000000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_150;
  }
LABEL_149:
  PB::TextFormatter::format(this, "maxPulse", *(float *)(a1 + 244));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x800000000000000) == 0)
  {
LABEL_73:
    if ((v6 & 0x1000000000000000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_151;
  }
LABEL_150:
  PB::TextFormatter::format(this, "numShortAudio", *(_DWORD *)(a1 + 248));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x1000000000000000) == 0)
  {
LABEL_74:
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_152;
  }
LABEL_151:
  PB::TextFormatter::format(this, "peakPressure", *(float *)(a1 + 252));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x2000000000000000) == 0)
  {
LABEL_75:
    if ((v7 & 0x400) == 0) {
      goto LABEL_76;
    }
    goto LABEL_153;
  }
LABEL_152:
  PB::TextFormatter::format(this, "shortAudioMaxPulseThreshold", *(float *)(a1 + 256));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((v7 & 0x400) == 0)
  {
LABEL_76:
    if ((v6 & 0x4000000000000000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_154;
  }
LABEL_153:
  PB::TextFormatter::format(this, "shortAudioMet", *(unsigned char *)(a1 + 278));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x4000000000000000) == 0)
  {
LABEL_77:
    if ((v6 & 0x8000000000000000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_155;
  }
LABEL_154:
  PB::TextFormatter::format(this, "shortAudioNumThreshold", *(float *)(a1 + 260));
  uint64_t v6 = *v5;
  __int16 v7 = *(_WORD *)(a1 + 288);
  if ((*v5 & 0x8000000000000000) == 0)
  {
LABEL_78:
    if ((v7 & 0x800) == 0) {
      goto LABEL_79;
    }
    goto LABEL_156;
  }
LABEL_155:
  PB::TextFormatter::format(this, "shortAudioPeakPressureThreshold", *(float *)(a1 + 264));
  uint64_t v6 = *v5;
  if ((*(_WORD *)(a1 + 288) & 0x800) == 0)
  {
LABEL_79:
    if ((v6 & 1) == 0) {
      goto LABEL_81;
    }
    goto LABEL_80;
  }
LABEL_156:
  PB::TextFormatter::format(this, "strongerAudio", *(unsigned char *)(a1 + 279));
  if (*v5) {
LABEL_80:
  }
    PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 8));
LABEL_81:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10167F9E8(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v8 = a1 + 280;
    do
    {
      uint64_t v9 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v16 = 0;
        unsigned int v17 = 0;
        unint64_t v12 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v18 = v2 + 1;
          char v19 = *(unsigned char *)(v9 + v2);
          *((void *)this + 1) = v18;
          v12 |= (unint64_t)(v19 & 0x7F) << v16;
          if ((v19 & 0x80) == 0) {
            goto LABEL_21;
          }
          v16 += 7;
          unint64_t v2 = v18;
          if (v17++ >= 9)
          {
LABEL_20:
            unint64_t v12 = 0;
            goto LABEL_21;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
        return v4 == 0;
      }
      char v10 = 0;
      unsigned int v11 = 0;
      unint64_t v12 = 0;
      while (1)
      {
        unint64_t v13 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v14 = *(unsigned char *)(v9 + v2);
        v12 |= (unint64_t)(v14 & 0x7F) << v10;
        if ((v14 & 0x80) == 0) {
          break;
        }
        v10 += 7;
        unint64_t v2 = v13;
        BOOL v15 = v11++ > 8;
        if (v15) {
          goto LABEL_20;
        }
      }
LABEL_21:
      if ((v12 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v21 = v12 >> 3;
      if ((int)(v12 >> 3) <= 100000)
      {
        switch((int)v21)
        {
          case 1:
            *(void *)v8 |= 1uLL;
            unint64_t v22 = *((void *)this + 1);
            unint64_t v23 = *((void *)this + 2);
            uint64_t v24 = *(void *)this;
            if (v22 <= 0xFFFFFFFFFFFFFFF5 && v22 + 10 <= v23)
            {
              char v25 = 0;
              unsigned int v26 = 0;
              uint64_t v27 = 0;
              do
              {
                unint64_t v28 = v22 + 1;
                *((void *)this + 1) = v22 + 1;
                char v29 = *(unsigned char *)(v24 + v22);
                v27 |= (unint64_t)(v29 & 0x7F) << v25;
                if ((v29 & 0x80) == 0) {
                  goto LABEL_313;
                }
                v25 += 7;
                unint64_t v22 = v28;
                BOOL v15 = v26++ > 8;
              }
              while (!v15);
LABEL_263:
              uint64_t v27 = 0;
              goto LABEL_313;
            }
            char v156 = 0;
            unsigned int v157 = 0;
            uint64_t v27 = 0;
            if (v23 <= v22) {
              unint64_t v23 = *((void *)this + 1);
            }
            while (2)
            {
              if (v23 == v22)
              {
                uint64_t v27 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v158 = v22 + 1;
                char v159 = *(unsigned char *)(v24 + v22);
                *((void *)this + 1) = v158;
                v27 |= (unint64_t)(v159 & 0x7F) << v156;
                if (v159 < 0)
                {
                  v156 += 7;
                  unint64_t v22 = v158;
                  BOOL v15 = v157++ > 8;
                  if (v15) {
                    goto LABEL_263;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v27 = 0;
                }
              }
              break;
            }
LABEL_313:
            *(void *)(a1 + 8) = v27;
            goto LABEL_305;
          case 2:
            *(void *)v8 |= 0x2000000000000uLL;
            unint64_t v31 = *((void *)this + 1);
            if (v31 > 0xFFFFFFFFFFFFFFFBLL || v31 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 208) = *(_DWORD *)(*(void *)this + v31);
            goto LABEL_304;
          case 3:
            *(_WORD *)(v8 + 8) |= 0x100u;
            unint64_t v32 = *((void *)this + 1);
            if (v32 >= *((void *)this + 2))
            {
              BOOL v35 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v33 = v32 + 1;
              int v34 = *(unsigned __int8 *)(*(void *)this + v32);
              *((void *)this + 1) = v33;
              BOOL v35 = v34 != 0;
            }
            *(unsigned char *)(a1 + 276) = v35;
            goto LABEL_305;
          case 4:
            *(_WORD *)(v8 + 8) |= 0x80u;
            unint64_t v36 = *((void *)this + 1);
            if (v36 >= *((void *)this + 2))
            {
              BOOL v39 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v37 = v36 + 1;
              int v38 = *(unsigned __int8 *)(*(void *)this + v36);
              *((void *)this + 1) = v37;
              BOOL v39 = v38 != 0;
            }
            *(unsigned char *)(a1 + 275) = v39;
            goto LABEL_305;
          case 5:
            *(_WORD *)(v8 + 8) |= 0x20u;
            unint64_t v40 = *((void *)this + 1);
            if (v40 >= *((void *)this + 2))
            {
              BOOL v43 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v41 = v40 + 1;
              int v42 = *(unsigned __int8 *)(*(void *)this + v40);
              *((void *)this + 1) = v41;
              BOOL v43 = v42 != 0;
            }
            *(unsigned char *)(a1 + 273) = v43;
            goto LABEL_305;
          case 6:
            *(_WORD *)(v8 + 8) |= 4u;
            unint64_t v44 = *((void *)this + 1);
            if (v44 >= *((void *)this + 2))
            {
              BOOL v47 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v45 = v44 + 1;
              int v46 = *(unsigned __int8 *)(*(void *)this + v44);
              *((void *)this + 1) = v45;
              BOOL v47 = v46 != 0;
            }
            *(unsigned char *)(a1 + 270) = v47;
            goto LABEL_305;
          case 7:
            *(_WORD *)(v8 + 8) |= 2u;
            unint64_t v48 = *((void *)this + 1);
            if (v48 >= *((void *)this + 2))
            {
              BOOL v51 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v49 = v48 + 1;
              int v50 = *(unsigned __int8 *)(*(void *)this + v48);
              *((void *)this + 1) = v49;
              BOOL v51 = v50 != 0;
            }
            *(unsigned char *)(a1 + 269) = v51;
            goto LABEL_305;
          case 8:
            *(void *)v8 |= 0x40000uLL;
            unint64_t v52 = *((void *)this + 1);
            unint64_t v53 = *((void *)this + 2);
            uint64_t v54 = *(void *)this;
            if (v52 <= 0xFFFFFFFFFFFFFFF5 && v52 + 10 <= v53)
            {
              char v55 = 0;
              unsigned int v56 = 0;
              uint64_t v57 = 0;
              do
              {
                unint64_t v58 = v52 + 1;
                *((void *)this + 1) = v52 + 1;
                char v59 = *(unsigned char *)(v54 + v52);
                v57 |= (unint64_t)(v59 & 0x7F) << v55;
                if ((v59 & 0x80) == 0) {
                  goto LABEL_317;
                }
                v55 += 7;
                unint64_t v52 = v58;
                BOOL v15 = v56++ > 8;
              }
              while (!v15);
LABEL_280:
              LODWORD(v57) = 0;
              goto LABEL_317;
            }
            char v160 = 0;
            unsigned int v161 = 0;
            uint64_t v57 = 0;
            if (v53 <= v52) {
              unint64_t v53 = *((void *)this + 1);
            }
            while (2)
            {
              if (v53 == v52)
              {
                LODWORD(v57) = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v162 = v52 + 1;
                char v163 = *(unsigned char *)(v54 + v52);
                *((void *)this + 1) = v162;
                v57 |= (unint64_t)(v163 & 0x7F) << v160;
                if (v163 < 0)
                {
                  v160 += 7;
                  unint64_t v52 = v162;
                  BOOL v15 = v161++ > 8;
                  if (v15) {
                    goto LABEL_280;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v57) = 0;
                }
              }
              break;
            }
LABEL_317:
            *(_DWORD *)(a1 + 84) = v57;
            goto LABEL_305;
          case 9:
            *(_WORD *)(v8 + 8) |= 1u;
            unint64_t v60 = *((void *)this + 1);
            if (v60 >= *((void *)this + 2))
            {
              BOOL v63 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v61 = v60 + 1;
              int v62 = *(unsigned __int8 *)(*(void *)this + v60);
              *((void *)this + 1) = v61;
              BOOL v63 = v62 != 0;
            }
            *(unsigned char *)(a1 + 268) = v63;
            goto LABEL_305;
          case 10:
            *(_WORD *)(v8 + 8) |= 0x10u;
            unint64_t v64 = *((void *)this + 1);
            if (v64 >= *((void *)this + 2))
            {
              BOOL v67 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v65 = v64 + 1;
              int v66 = *(unsigned __int8 *)(*(void *)this + v64);
              *((void *)this + 1) = v65;
              BOOL v67 = v66 != 0;
            }
            *(unsigned char *)(a1 + 272) = v67;
            goto LABEL_305;
          case 11:
            *(void *)v8 |= 0x20000uLL;
            unint64_t v68 = *((void *)this + 1);
            if (v68 > 0xFFFFFFFFFFFFFFFBLL || v68 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v68);
            goto LABEL_304;
          case 12:
            *(void *)v8 |= 0x10000uLL;
            unint64_t v69 = *((void *)this + 1);
            if (v69 > 0xFFFFFFFFFFFFFFFBLL || v69 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v69);
            goto LABEL_304;
          case 13:
            *(void *)v8 |= 0x400000uLL;
            unint64_t v70 = *((void *)this + 1);
            if (v70 > 0xFFFFFFFFFFFFFFFBLL || v70 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v70);
            goto LABEL_304;
          case 14:
            *(void *)v8 |= 0x8000000uLL;
            unint64_t v71 = *((void *)this + 1);
            if (v71 > 0xFFFFFFFFFFFFFFFBLL || v71 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 120) = *(_DWORD *)(*(void *)this + v71);
            goto LABEL_304;
          case 15:
            *(void *)v8 |= (unint64_t)&_mh_execute_header;
            unint64_t v72 = *((void *)this + 1);
            if (v72 > 0xFFFFFFFFFFFFFFFBLL || v72 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 140) = *(_DWORD *)(*(void *)this + v72);
            goto LABEL_304;
          case 16:
            *(void *)v8 |= 0x4000000000000uLL;
            unint64_t v73 = *((void *)this + 1);
            if (v73 > 0xFFFFFFFFFFFFFFFBLL || v73 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 212) = *(_DWORD *)(*(void *)this + v73);
            goto LABEL_304;
          case 17:
            *(void *)v8 |= 0x800000uLL;
            unint64_t v74 = *((void *)this + 1);
            if (v74 > 0xFFFFFFFFFFFFFFFBLL || v74 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 104) = *(_DWORD *)(*(void *)this + v74);
            goto LABEL_304;
          case 18:
            *(void *)v8 |= 0x10000000uLL;
            unint64_t v75 = *((void *)this + 1);
            if (v75 > 0xFFFFFFFFFFFFFFFBLL || v75 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 124) = *(_DWORD *)(*(void *)this + v75);
            goto LABEL_304;
          case 19:
            *(void *)v8 |= 0x200000000uLL;
            unint64_t v76 = *((void *)this + 1);
            if (v76 > 0xFFFFFFFFFFFFFFFBLL || v76 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 144) = *(_DWORD *)(*(void *)this + v76);
            goto LABEL_304;
          case 20:
            *(void *)v8 |= 0x8000000000000uLL;
            unint64_t v77 = *((void *)this + 1);
            if (v77 > 0xFFFFFFFFFFFFFFFBLL || v77 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 216) = *(_DWORD *)(*(void *)this + v77);
            goto LABEL_304;
          case 21:
            *(void *)v8 |= 0x1000000uLL;
            unint64_t v78 = *((void *)this + 1);
            if (v78 > 0xFFFFFFFFFFFFFFFBLL || v78 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 108) = *(_DWORD *)(*(void *)this + v78);
            goto LABEL_304;
          case 22:
            *(void *)v8 |= 0x20000000uLL;
            unint64_t v79 = *((void *)this + 1);
            if (v79 > 0xFFFFFFFFFFFFFFFBLL || v79 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 128) = *(_DWORD *)(*(void *)this + v79);
            goto LABEL_304;
          case 23:
            *(void *)v8 |= 0x400000000uLL;
            unint64_t v80 = *((void *)this + 1);
            if (v80 > 0xFFFFFFFFFFFFFFFBLL || v80 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 148) = *(_DWORD *)(*(void *)this + v80);
            goto LABEL_304;
          case 24:
            *(void *)v8 |= 0x10000000000000uLL;
            unint64_t v81 = *((void *)this + 1);
            if (v81 > 0xFFFFFFFFFFFFFFFBLL || v81 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 220) = *(_DWORD *)(*(void *)this + v81);
            goto LABEL_304;
          case 25:
            *(void *)v8 |= 0x100000000000000uLL;
            unint64_t v82 = *((void *)this + 1);
            if (v82 > 0xFFFFFFFFFFFFFFFBLL || v82 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 236) = *(_DWORD *)(*(void *)this + v82);
            goto LABEL_304;
          case 26:
            *(void *)v8 |= 0x80000000000000uLL;
            unint64_t v83 = *((void *)this + 1);
            if (v83 > 0xFFFFFFFFFFFFFFFBLL || v83 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 232) = *(_DWORD *)(*(void *)this + v83);
            goto LABEL_304;
          case 27:
            *(void *)v8 |= 0x200000000000000uLL;
            unint64_t v84 = *((void *)this + 1);
            if (v84 > 0xFFFFFFFFFFFFFFFBLL || v84 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 240) = *(_DWORD *)(*(void *)this + v84);
            goto LABEL_304;
          case 28:
            *(void *)v8 |= 0x40uLL;
            unint64_t v85 = *((void *)this + 1);
            if (v85 > 0xFFFFFFFFFFFFFFFBLL || v85 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v85);
            goto LABEL_304;
          case 29:
            *(void *)v8 |= 2uLL;
            unint64_t v86 = *((void *)this + 1);
            if (v86 > 0xFFFFFFFFFFFFFFFBLL || v86 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v86);
            goto LABEL_304;
          case 30:
            *(void *)v8 |= 0x8000uLL;
            unint64_t v87 = *((void *)this + 1);
            if (v87 > 0xFFFFFFFFFFFFFFFBLL || v87 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v87);
            goto LABEL_304;
          case 31:
            *(_WORD *)(v8 + 8) |= 0x800u;
            unint64_t v88 = *((void *)this + 1);
            if (v88 >= *((void *)this + 2))
            {
              BOOL v91 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v89 = v88 + 1;
              int v90 = *(unsigned __int8 *)(*(void *)this + v88);
              *((void *)this + 1) = v89;
              BOOL v91 = v90 != 0;
            }
            *(unsigned char *)(a1 + 279) = v91;
            goto LABEL_305;
          case 32:
            *(_WORD *)(v8 + 8) |= 8u;
            unint64_t v92 = *((void *)this + 1);
            if (v92 >= *((void *)this + 2))
            {
              BOOL v95 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v93 = v92 + 1;
              int v94 = *(unsigned __int8 *)(*(void *)this + v92);
              *((void *)this + 1) = v93;
              BOOL v95 = v94 != 0;
            }
            *(unsigned char *)(a1 + 271) = v95;
            goto LABEL_305;
          case 33:
            *(void *)v8 |= 0x80uLL;
            unint64_t v96 = *((void *)this + 1);
            if (v96 > 0xFFFFFFFFFFFFFFFBLL || v96 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v96);
            goto LABEL_304;
          case 34:
            *(void *)v8 |= 0x400uLL;
            unint64_t v97 = *((void *)this + 1);
            if (v97 > 0xFFFFFFFFFFFFFFFBLL || v97 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v97);
            goto LABEL_304;
          case 35:
            *(void *)v8 |= 0x200uLL;
            unint64_t v98 = *((void *)this + 1);
            if (v98 > 0xFFFFFFFFFFFFFFFBLL || v98 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v98);
            goto LABEL_304;
          case 36:
            *(void *)v8 |= 0x100uLL;
            unint64_t v99 = *((void *)this + 1);
            if (v99 > 0xFFFFFFFFFFFFFFFBLL || v99 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v99);
            goto LABEL_304;
          case 37:
            *(void *)v8 |= 4uLL;
            unint64_t v100 = *((void *)this + 1);
            if (v100 > 0xFFFFFFFFFFFFFFFBLL || v100 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v100);
            goto LABEL_304;
          case 38:
            *(void *)v8 |= 0x20uLL;
            unint64_t v101 = *((void *)this + 1);
            if (v101 > 0xFFFFFFFFFFFFFFFBLL || v101 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v101);
            goto LABEL_304;
          case 39:
            *(void *)v8 |= 0x10uLL;
            unint64_t v102 = *((void *)this + 1);
            if (v102 > 0xFFFFFFFFFFFFFFFBLL || v102 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v102);
            goto LABEL_304;
          case 40:
            *(void *)v8 |= 8uLL;
            unint64_t v103 = *((void *)this + 1);
            if (v103 > 0xFFFFFFFFFFFFFFFBLL || v103 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v103);
            goto LABEL_304;
          case 41:
            *(void *)v8 |= 0x800uLL;
            unint64_t v104 = *((void *)this + 1);
            if (v104 > 0xFFFFFFFFFFFFFFFBLL || v104 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v104);
            goto LABEL_304;
          case 42:
            *(void *)v8 |= 0x4000uLL;
            unint64_t v105 = *((void *)this + 1);
            if (v105 > 0xFFFFFFFFFFFFFFFBLL || v105 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 68) = *(_DWORD *)(*(void *)this + v105);
            goto LABEL_304;
          case 43:
            *(void *)v8 |= 0x2000uLL;
            unint64_t v106 = *((void *)this + 1);
            if (v106 > 0xFFFFFFFFFFFFFFFBLL || v106 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v106);
            goto LABEL_304;
          case 44:
            *(void *)v8 |= 0x1000uLL;
            unint64_t v107 = *((void *)this + 1);
            if (v107 > 0xFFFFFFFFFFFFFFFBLL || v107 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 60) = *(_DWORD *)(*(void *)this + v107);
            goto LABEL_304;
          case 45:
            *(void *)v8 |= 0x2000000uLL;
            unint64_t v108 = *((void *)this + 1);
            if (v108 > 0xFFFFFFFFFFFFFFFBLL || v108 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 112) = *(_DWORD *)(*(void *)this + v108);
            goto LABEL_304;
          case 46:
            *(void *)v8 |= 0x40000000uLL;
            unint64_t v109 = *((void *)this + 1);
            if (v109 > 0xFFFFFFFFFFFFFFFBLL || v109 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 132) = *(_DWORD *)(*(void *)this + v109);
            goto LABEL_304;
          case 47:
            *(void *)v8 |= 0x800000000uLL;
            unint64_t v110 = *((void *)this + 1);
            if (v110 > 0xFFFFFFFFFFFFFFFBLL || v110 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 152) = *(_DWORD *)(*(void *)this + v110);
            goto LABEL_304;
          case 48:
            *(void *)v8 |= 0x20000000000000uLL;
            unint64_t v111 = *((void *)this + 1);
            if (v111 > 0xFFFFFFFFFFFFFFFBLL || v111 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 224) = *(_DWORD *)(*(void *)this + v111);
            goto LABEL_304;
          case 49:
            *(void *)v8 |= 0x4000000uLL;
            unint64_t v112 = *((void *)this + 1);
            if (v112 > 0xFFFFFFFFFFFFFFFBLL || v112 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 116) = *(_DWORD *)(*(void *)this + v112);
            goto LABEL_304;
          case 50:
            *(void *)v8 |= 0x80000000uLL;
            unint64_t v113 = *((void *)this + 1);
            if (v113 > 0xFFFFFFFFFFFFFFFBLL || v113 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 136) = *(_DWORD *)(*(void *)this + v113);
            goto LABEL_304;
          case 51:
            *(void *)v8 |= 0x1000000000uLL;
            unint64_t v114 = *((void *)this + 1);
            if (v114 > 0xFFFFFFFFFFFFFFFBLL || v114 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 156) = *(_DWORD *)(*(void *)this + v114);
            goto LABEL_304;
          case 52:
            *(void *)v8 |= 0x40000000000000uLL;
            unint64_t v115 = *((void *)this + 1);
            if (v115 > 0xFFFFFFFFFFFFFFFBLL || v115 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 228) = *(_DWORD *)(*(void *)this + v115);
            goto LABEL_304;
          case 53:
            *(_WORD *)(v8 + 8) |= 0x40u;
            unint64_t v116 = *((void *)this + 1);
            if (v116 >= *((void *)this + 2))
            {
              BOOL v119 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v117 = v116 + 1;
              int v118 = *(unsigned __int8 *)(*(void *)this + v116);
              *((void *)this + 1) = v117;
              BOOL v119 = v118 != 0;
            }
            *(unsigned char *)(a1 + 274) = v119;
            goto LABEL_305;
          case 54:
            *(void *)v8 |= 0x1000000000000000uLL;
            unint64_t v120 = *((void *)this + 1);
            if (v120 > 0xFFFFFFFFFFFFFFFBLL || v120 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 252) = *(_DWORD *)(*(void *)this + v120);
            goto LABEL_304;
          case 55:
            *(void *)v8 |= 0x400000000000000uLL;
            unint64_t v121 = *((void *)this + 1);
            if (v121 > 0xFFFFFFFFFFFFFFFBLL || v121 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 244) = *(_DWORD *)(*(void *)this + v121);
            goto LABEL_304;
          case 56:
            *(_WORD *)(v8 + 8) |= 0x200u;
            unint64_t v122 = *((void *)this + 1);
            if (v122 >= *((void *)this + 2))
            {
              BOOL v125 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v123 = v122 + 1;
              int v124 = *(unsigned __int8 *)(*(void *)this + v122);
              *((void *)this + 1) = v123;
              BOOL v125 = v124 != 0;
            }
            *(unsigned char *)(a1 + 277) = v125;
            goto LABEL_305;
          case 57:
            *(void *)v8 |= 0x2000000000uLL;
            unint64_t v126 = *((void *)this + 1);
            if (v126 > 0xFFFFFFFFFFFFFFFBLL || v126 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 160) = *(_DWORD *)(*(void *)this + v126);
            goto LABEL_304;
          case 58:
            *(void *)v8 |= 0x4000000000uLL;
            unint64_t v127 = *((void *)this + 1);
            if (v127 > 0xFFFFFFFFFFFFFFFBLL || v127 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 164) = *(_DWORD *)(*(void *)this + v127);
            goto LABEL_304;
          case 59:
            *(void *)v8 |= 0x8000000000uLL;
            unint64_t v128 = *((void *)this + 1);
            if (v128 > 0xFFFFFFFFFFFFFFFBLL || v128 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 168) = *(_DWORD *)(*(void *)this + v128);
            goto LABEL_304;
          case 60:
            *(void *)v8 |= 0x20000000000uLL;
            unint64_t v129 = *((void *)this + 1);
            if (v129 > 0xFFFFFFFFFFFFFFFBLL || v129 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 176) = *(_DWORD *)(*(void *)this + v129);
            goto LABEL_304;
          case 61:
            *(void *)v8 |= 0x10000000000uLL;
            unint64_t v130 = *((void *)this + 1);
            if (v130 > 0xFFFFFFFFFFFFFFFBLL || v130 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 172) = *(_DWORD *)(*(void *)this + v130);
            goto LABEL_304;
          case 62:
            *(void *)v8 |= 0x40000000000uLL;
            unint64_t v131 = *((void *)this + 1);
            if (v131 > 0xFFFFFFFFFFFFFFFBLL || v131 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 180) = *(_DWORD *)(*(void *)this + v131);
            goto LABEL_304;
          case 63:
            *(void *)v8 |= 0x80000000000uLL;
            unint64_t v132 = *((void *)this + 1);
            if (v132 > 0xFFFFFFFFFFFFFFFBLL || v132 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 184) = *(_DWORD *)(*(void *)this + v132);
            goto LABEL_304;
          case 64:
            *(void *)v8 |= 0x100000000000uLL;
            unint64_t v133 = *((void *)this + 1);
            if (v133 > 0xFFFFFFFFFFFFFFFBLL || v133 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 188) = *(_DWORD *)(*(void *)this + v133);
            goto LABEL_304;
          case 65:
            *(void *)v8 |= 0x200000000000uLL;
            unint64_t v134 = *((void *)this + 1);
            if (v134 > 0xFFFFFFFFFFFFFFFBLL || v134 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 192) = *(_DWORD *)(*(void *)this + v134);
            goto LABEL_304;
          case 66:
            *(void *)v8 |= 0x800000000000uLL;
            unint64_t v135 = *((void *)this + 1);
            if (v135 > 0xFFFFFFFFFFFFFFFBLL || v135 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 200) = *(_DWORD *)(*(void *)this + v135);
            goto LABEL_304;
          case 67:
            *(void *)v8 |= 0x400000000000uLL;
            unint64_t v136 = *((void *)this + 1);
            if (v136 > 0xFFFFFFFFFFFFFFFBLL || v136 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 196) = *(_DWORD *)(*(void *)this + v136);
            goto LABEL_304;
          case 68:
            *(void *)v8 |= 0x1000000000000uLL;
            unint64_t v137 = *((void *)this + 1);
            if (v137 > 0xFFFFFFFFFFFFFFFBLL || v137 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 204) = *(_DWORD *)(*(void *)this + v137);
            goto LABEL_304;
          case 69:
            *(void *)v8 |= 0x800000000000000uLL;
            unint64_t v138 = *((void *)this + 1);
            unint64_t v139 = *((void *)this + 2);
            uint64_t v140 = *(void *)this;
            if (v138 <= 0xFFFFFFFFFFFFFFF5 && v138 + 10 <= v139)
            {
              char v141 = 0;
              unsigned int v142 = 0;
              uint64_t v143 = 0;
              do
              {
                unint64_t v144 = v138 + 1;
                *((void *)this + 1) = v138 + 1;
                char v145 = *(unsigned char *)(v140 + v138);
                v143 |= (unint64_t)(v145 & 0x7F) << v141;
                if ((v145 & 0x80) == 0) {
                  goto LABEL_321;
                }
                v141 += 7;
                unint64_t v138 = v144;
                BOOL v15 = v142++ > 8;
              }
              while (!v15);
LABEL_299:
              LODWORD(v143) = 0;
              goto LABEL_321;
            }
            char v164 = 0;
            unsigned int v165 = 0;
            uint64_t v143 = 0;
            if (v139 <= v138) {
              unint64_t v139 = *((void *)this + 1);
            }
            break;
          case 70:
            *(_WORD *)(v8 + 8) |= 0x400u;
            unint64_t v146 = *((void *)this + 1);
            if (v146 >= *((void *)this + 2))
            {
              BOOL v149 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v147 = v146 + 1;
              int v148 = *(unsigned __int8 *)(*(void *)this + v146);
              *((void *)this + 1) = v147;
              BOOL v149 = v148 != 0;
            }
            *(unsigned char *)(a1 + 278) = v149;
            goto LABEL_305;
          case 71:
            *(void *)v8 |= 0x4000000000000000uLL;
            unint64_t v150 = *((void *)this + 1);
            if (v150 > 0xFFFFFFFFFFFFFFFBLL || v150 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 260) = *(_DWORD *)(*(void *)this + v150);
            goto LABEL_304;
          case 72:
            *(void *)v8 |= 0x8000000000000000;
            unint64_t v151 = *((void *)this + 1);
            if (v151 > 0xFFFFFFFFFFFFFFFBLL || v151 + 4 > *((void *)this + 2)) {
              goto LABEL_248;
            }
            *(_DWORD *)(a1 + 264) = *(_DWORD *)(*(void *)this + v151);
            goto LABEL_304;
          case 73:
            *(void *)v8 |= 0x2000000000000000uLL;
            unint64_t v152 = *((void *)this + 1);
            if (v152 > 0xFFFFFFFFFFFFFFFBLL || v152 + 4 > *((void *)this + 2))
            {
LABEL_248:
              *((unsigned char *)this + 24) = 1;
              goto LABEL_305;
            }
            *(_DWORD *)(a1 + 256) = *(_DWORD *)(*(void *)this + v152);
            goto LABEL_304;
          default:
            goto LABEL_255;
        }
        while (1)
        {
          if (v139 == v138)
          {
            LODWORD(v143) = 0;
            *((unsigned char *)this + 24) = 1;
            goto LABEL_321;
          }
          unint64_t v166 = v138 + 1;
          char v167 = *(unsigned char *)(v140 + v138);
          *((void *)this + 1) = v166;
          v143 |= (unint64_t)(v167 & 0x7F) << v164;
          if ((v167 & 0x80) == 0) {
            break;
          }
          v164 += 7;
          unint64_t v138 = v166;
          BOOL v15 = v165++ > 8;
          if (v15) {
            goto LABEL_299;
          }
        }
        if (*((unsigned char *)this + 24)) {
          LODWORD(v143) = 0;
        }
LABEL_321:
        *(_DWORD *)(a1 + 248) = v143;
        goto LABEL_305;
      }
      switch(v21)
      {
        case 0x186A1:
          *(void *)v8 |= 0x80000uLL;
          unint64_t v153 = *((void *)this + 1);
          if (v153 <= 0xFFFFFFFFFFFFFFFBLL && v153 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v153);
            goto LABEL_304;
          }
          break;
        case 0x186A2:
          *(void *)v8 |= 0x100000uLL;
          unint64_t v154 = *((void *)this + 1);
          if (v154 <= 0xFFFFFFFFFFFFFFFBLL && v154 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(void *)this + v154);
            goto LABEL_304;
          }
          break;
        case 0x186A3:
          *(void *)v8 |= 0x200000uLL;
          unint64_t v30 = *((void *)this + 1);
          if (v30 <= 0xFFFFFFFFFFFFFFFBLL && v30 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v30);
LABEL_304:
            *((void *)this + 1) += 4;
            goto LABEL_305;
          }
          break;
        default:
LABEL_255:
          uint64_t result = PB::Reader::skip(this, v21, v12 & 7, 0);
          if (!result) {
            return result;
          }
          goto LABEL_305;
      }
      *((unsigned char *)this + 24) = 1;
LABEL_305:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
    }
    while (v2 < v3 && v4 == 0);
  }
  return v4 == 0;
}

uint64_t sub_101681060(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = (uint64_t *)(result + 280);
  uint64_t v5 = *(void *)(result + 280);
  if (v5)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(result + 8), 1u);
    uint64_t v5 = *v4;
    __int16 v6 = *((_WORD *)v4 + 4);
    if ((*v4 & 0x2000000000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v6 = *(_WORD *)(result + 288);
  if ((v5 & 0x2000000000000) != 0)
  {
LABEL_5:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 208), 2u);
    uint64_t v5 = *v4;
    __int16 v6 = *((_WORD *)v4 + 4);
  }
LABEL_6:
  if ((v6 & 0x100) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 276), 3u);
    uint64_t v5 = *v4;
    __int16 v6 = *((_WORD *)v4 + 4);
    if ((v6 & 0x80) == 0)
    {
LABEL_8:
      if ((v6 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_84;
    }
  }
  else if ((v6 & 0x80) == 0)
  {
    goto LABEL_8;
  }
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 275), 4u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((v6 & 0x20) == 0)
  {
LABEL_9:
    if ((v6 & 4) == 0) {
      goto LABEL_10;
    }
    goto LABEL_85;
  }
LABEL_84:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 273), 5u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((v6 & 4) == 0)
  {
LABEL_10:
    if ((v6 & 2) == 0) {
      goto LABEL_11;
    }
    goto LABEL_86;
  }
LABEL_85:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 270), 6u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((v6 & 2) == 0)
  {
LABEL_11:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_87;
  }
LABEL_86:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 269), 7u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x40000) == 0)
  {
LABEL_12:
    if ((v6 & 1) == 0) {
      goto LABEL_13;
    }
    goto LABEL_88;
  }
LABEL_87:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 84), 8u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((v6 & 1) == 0)
  {
LABEL_13:
    if ((v6 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_89;
  }
LABEL_88:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 268), 9u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((v6 & 0x10) == 0)
  {
LABEL_14:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_90;
  }
LABEL_89:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 272), 0xAu);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x20000) == 0)
  {
LABEL_15:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_91;
  }
LABEL_90:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80), 0xBu);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x10000) == 0)
  {
LABEL_16:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_92;
  }
LABEL_91:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76), 0xCu);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x400000) == 0)
  {
LABEL_17:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_93;
  }
LABEL_92:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 100), 0xDu);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x8000000) == 0)
  {
LABEL_18:
    if ((v5 & 0x100000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_94;
  }
LABEL_93:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 120), 0xEu);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x100000000) == 0)
  {
LABEL_19:
    if ((v5 & 0x4000000000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_95;
  }
LABEL_94:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 140), 0xFu);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x4000000000000) == 0)
  {
LABEL_20:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_96;
  }
LABEL_95:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 212), 0x10u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x800000) == 0)
  {
LABEL_21:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_97;
  }
LABEL_96:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 104), 0x11u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x10000000) == 0)
  {
LABEL_22:
    if ((v5 & 0x200000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_98;
  }
LABEL_97:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 124), 0x12u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x200000000) == 0)
  {
LABEL_23:
    if ((v5 & 0x8000000000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_99;
  }
LABEL_98:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 144), 0x13u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x8000000000000) == 0)
  {
LABEL_24:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_100;
  }
LABEL_99:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 216), 0x14u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x1000000) == 0)
  {
LABEL_25:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_101;
  }
LABEL_100:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 108), 0x15u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x20000000) == 0)
  {
LABEL_26:
    if ((v5 & 0x400000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_102;
  }
LABEL_101:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 128), 0x16u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x400000000) == 0)
  {
LABEL_27:
    if ((v5 & 0x10000000000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_103;
  }
LABEL_102:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 148), 0x17u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x10000000000000) == 0)
  {
LABEL_28:
    if ((v5 & 0x100000000000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_104;
  }
LABEL_103:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 220), 0x18u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x100000000000000) == 0)
  {
LABEL_29:
    if ((v5 & 0x80000000000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_105;
  }
LABEL_104:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 236), 0x19u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x80000000000000) == 0)
  {
LABEL_30:
    if ((v5 & 0x200000000000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_106;
  }
LABEL_105:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 232), 0x1Au);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x200000000000000) == 0)
  {
LABEL_31:
    if ((v5 & 0x40) == 0) {
      goto LABEL_32;
    }
    goto LABEL_107;
  }
LABEL_106:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 240), 0x1Bu);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x40) == 0)
  {
LABEL_32:
    if ((v5 & 2) == 0) {
      goto LABEL_33;
    }
    goto LABEL_108;
  }
LABEL_107:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36), 0x1Cu);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 2) == 0)
  {
LABEL_33:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_109;
  }
LABEL_108:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16), 0x1Du);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x8000) == 0)
  {
LABEL_34:
    if ((v6 & 0x800) == 0) {
      goto LABEL_35;
    }
    goto LABEL_110;
  }
LABEL_109:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72), 0x1Eu);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((v6 & 0x800) == 0)
  {
LABEL_35:
    if ((v6 & 8) == 0) {
      goto LABEL_36;
    }
    goto LABEL_111;
  }
LABEL_110:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 279), 0x1Fu);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((v6 & 8) == 0)
  {
LABEL_36:
    if ((v5 & 0x80) == 0) {
      goto LABEL_37;
    }
    goto LABEL_112;
  }
LABEL_111:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 271), 0x20u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x80) == 0)
  {
LABEL_37:
    if ((v5 & 0x400) == 0) {
      goto LABEL_38;
    }
    goto LABEL_113;
  }
LABEL_112:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40), 0x21u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x400) == 0)
  {
LABEL_38:
    if ((v5 & 0x200) == 0) {
      goto LABEL_39;
    }
    goto LABEL_114;
  }
LABEL_113:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52), 0x22u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x200) == 0)
  {
LABEL_39:
    if ((v5 & 0x100) == 0) {
      goto LABEL_40;
    }
    goto LABEL_115;
  }
LABEL_114:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48), 0x23u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x100) == 0)
  {
LABEL_40:
    if ((v5 & 4) == 0) {
      goto LABEL_41;
    }
    goto LABEL_116;
  }
LABEL_115:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44), 0x24u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 4) == 0)
  {
LABEL_41:
    if ((v5 & 0x20) == 0) {
      goto LABEL_42;
    }
    goto LABEL_117;
  }
LABEL_116:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20), 0x25u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x20) == 0)
  {
LABEL_42:
    if ((v5 & 0x10) == 0) {
      goto LABEL_43;
    }
    goto LABEL_118;
  }
LABEL_117:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32), 0x26u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x10) == 0)
  {
LABEL_43:
    if ((v5 & 8) == 0) {
      goto LABEL_44;
    }
    goto LABEL_119;
  }
LABEL_118:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28), 0x27u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 8) == 0)
  {
LABEL_44:
    if ((v5 & 0x800) == 0) {
      goto LABEL_45;
    }
    goto LABEL_120;
  }
LABEL_119:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24), 0x28u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x800) == 0)
  {
LABEL_45:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_121;
  }
LABEL_120:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56), 0x29u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x4000) == 0)
  {
LABEL_46:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_122;
  }
LABEL_121:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 68), 0x2Au);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x2000) == 0)
  {
LABEL_47:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_123;
  }
LABEL_122:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64), 0x2Bu);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x1000) == 0)
  {
LABEL_48:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_124;
  }
LABEL_123:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 60), 0x2Cu);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x2000000) == 0)
  {
LABEL_49:
    if ((v5 & 0x40000000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_125;
  }
LABEL_124:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 112), 0x2Du);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x40000000) == 0)
  {
LABEL_50:
    if ((v5 & 0x800000000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_126;
  }
LABEL_125:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 132), 0x2Eu);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x800000000) == 0)
  {
LABEL_51:
    if ((v5 & 0x20000000000000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_127;
  }
LABEL_126:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 152), 0x2Fu);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x20000000000000) == 0)
  {
LABEL_52:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_128;
  }
LABEL_127:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 224), 0x30u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x4000000) == 0)
  {
LABEL_53:
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_129;
  }
LABEL_128:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 116), 0x31u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x80000000) == 0)
  {
LABEL_54:
    if ((v5 & 0x1000000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_130;
  }
LABEL_129:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 136), 0x32u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x1000000000) == 0)
  {
LABEL_55:
    if ((v5 & 0x40000000000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_131;
  }
LABEL_130:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 156), 0x33u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x40000000000000) == 0)
  {
LABEL_56:
    if ((v6 & 0x40) == 0) {
      goto LABEL_57;
    }
    goto LABEL_132;
  }
LABEL_131:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 228), 0x34u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((v6 & 0x40) == 0)
  {
LABEL_57:
    if ((v5 & 0x1000000000000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_133;
  }
LABEL_132:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 274), 0x35u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x1000000000000000) == 0)
  {
LABEL_58:
    if ((v5 & 0x400000000000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_134;
  }
LABEL_133:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 252), 0x36u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x400000000000000) == 0)
  {
LABEL_59:
    if ((v6 & 0x200) == 0) {
      goto LABEL_60;
    }
    goto LABEL_135;
  }
LABEL_134:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 244), 0x37u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((v6 & 0x200) == 0)
  {
LABEL_60:
    if ((v5 & 0x2000000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_136;
  }
LABEL_135:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 277), 0x38u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x2000000000) == 0)
  {
LABEL_61:
    if ((v5 & 0x4000000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_137;
  }
LABEL_136:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 160), 0x39u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x4000000000) == 0)
  {
LABEL_62:
    if ((v5 & 0x8000000000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_138;
  }
LABEL_137:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 164), 0x3Au);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x8000000000) == 0)
  {
LABEL_63:
    if ((v5 & 0x20000000000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_139;
  }
LABEL_138:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 168), 0x3Bu);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x20000000000) == 0)
  {
LABEL_64:
    if ((v5 & 0x10000000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_140;
  }
LABEL_139:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 176), 0x3Cu);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x10000000000) == 0)
  {
LABEL_65:
    if ((v5 & 0x40000000000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_141;
  }
LABEL_140:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 172), 0x3Du);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x40000000000) == 0)
  {
LABEL_66:
    if ((v5 & 0x80000000000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_142;
  }
LABEL_141:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 180), 0x3Eu);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x80000000000) == 0)
  {
LABEL_67:
    if ((v5 & 0x100000000000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_143;
  }
LABEL_142:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 184), 0x3Fu);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x100000000000) == 0)
  {
LABEL_68:
    if ((v5 & 0x200000000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_144;
  }
LABEL_143:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 188), 0x40u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x200000000000) == 0)
  {
LABEL_69:
    if ((v5 & 0x800000000000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_145;
  }
LABEL_144:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 192), 0x41u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x800000000000) == 0)
  {
LABEL_70:
    if ((v5 & 0x400000000000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_146;
  }
LABEL_145:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 200), 0x42u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x400000000000) == 0)
  {
LABEL_71:
    if ((v5 & 0x1000000000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_147;
  }
LABEL_146:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 196), 0x43u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x1000000000000) == 0)
  {
LABEL_72:
    if ((v5 & 0x800000000000000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_148;
  }
LABEL_147:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 204), 0x44u);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x800000000000000) == 0)
  {
LABEL_73:
    if ((v6 & 0x400) == 0) {
      goto LABEL_74;
    }
    goto LABEL_149;
  }
LABEL_148:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 248), 0x45u);
  uint64_t v5 = *v4;
  if ((v4[1] & 0x400) == 0)
  {
LABEL_74:
    if ((v5 & 0x4000000000000000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_150;
  }
LABEL_149:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 278), 0x46u);
  uint64_t v5 = *v4;
  if ((*v4 & 0x4000000000000000) == 0)
  {
LABEL_75:
    if ((v5 & 0x8000000000000000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_151;
  }
LABEL_150:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 260), 0x47u);
  uint64_t v5 = *v4;
  if ((*v4 & 0x8000000000000000) == 0)
  {
LABEL_76:
    if ((v5 & 0x2000000000000000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_77;
  }
LABEL_151:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 264), 0x48u);
  uint64_t v5 = *v4;
  if ((*v4 & 0x2000000000000000) != 0)
  {
LABEL_77:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 256), 0x49u);
    uint64_t v5 = *v4;
  }
LABEL_78:
  if ((v5 & 0x80000) == 0)
  {
    if ((v5 & 0x100000) == 0) {
      goto LABEL_80;
    }
LABEL_154:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 92), 0x186A2u);
    if ((*v4 & 0x200000) == 0) {
      return result;
    }
    goto LABEL_155;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 88), 0x186A1u);
  uint64_t v5 = *v4;
  if ((*v4 & 0x100000) != 0) {
    goto LABEL_154;
  }
LABEL_80:
  if ((v5 & 0x200000) == 0) {
    return result;
  }
LABEL_155:
  float v7 = *(float *)(v3 + 96);

  return PB::Writer::write(this, v7, 0x186A3u);
}

double sub_101681A1C(uint64_t a1)
{
  *(void *)a1 = &off_102333E90;
  *(_DWORD *)(a1 + 144) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return result;
}

void sub_101681A50(PB::Base *this)
{
  *(void *)this = &off_102333E90;
  unint64_t v2 = (void *)*((void *)this + 4);
  if (v2)
  {
    *((void *)this + 5) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 1);
  if (v3)
  {
    *((void *)this + 2) = v3;
    operator delete(v3);
  }

  PB::Base::~Base(this);
}

void sub_101681AC4(PB::Base *a1)
{
  sub_101681A50(a1);

  operator delete();
}

uint64_t sub_101681AFC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102333E90;
  *(_OWORD *)(a1 + 8) = 0u;
  int v4 = (char *)(a1 + 8);
  *(_DWORD *)(a1 + 144) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  int v5 = *(_DWORD *)(a2 + 144);
  if ((v5 & 8) != 0)
  {
    uint64_t v7 = *(void *)(a2 + 80);
    int v6 = 8;
    *(_DWORD *)(a1 + 144) = 8;
    *(void *)(a1 + 80) = v7;
    int v5 = *(_DWORD *)(a2 + 144);
    if ((v5 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v6 = 0;
  if ((v5 & 0x20) != 0)
  {
LABEL_5:
    int v8 = *(_DWORD *)(a2 + 92);
    v6 |= 0x20u;
    *(_DWORD *)(a1 + 144) = v6;
    *(_DWORD *)(a1 + 92) = v8;
    int v5 = *(_DWORD *)(a2 + 144);
  }
LABEL_6:
  if ((v5 & 0x40) != 0)
  {
    int v11 = *(_DWORD *)(a2 + 96);
    v6 |= 0x40u;
    *(_DWORD *)(a1 + 144) = v6;
    *(_DWORD *)(a1 + 96) = v11;
    int v5 = *(_DWORD *)(a2 + 144);
    if ((v5 & 0x80) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_28;
    }
  }
  else if ((v5 & 0x80) == 0)
  {
    goto LABEL_8;
  }
  int v12 = *(_DWORD *)(a2 + 100);
  v6 |= 0x80u;
  *(_DWORD *)(a1 + 144) = v6;
  *(_DWORD *)(a1 + 100) = v12;
  int v5 = *(_DWORD *)(a2 + 144);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x400) == 0) {
      goto LABEL_10;
    }
    goto LABEL_29;
  }
LABEL_28:
  int v13 = *(_DWORD *)(a2 + 88);
  v6 |= 0x10u;
  *(_DWORD *)(a1 + 144) = v6;
  *(_DWORD *)(a1 + 88) = v13;
  int v5 = *(_DWORD *)(a2 + 144);
  if ((v5 & 0x400) == 0)
  {
LABEL_10:
    if ((v5 & 0x800) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_29:
  int v14 = *(_DWORD *)(a2 + 112);
  v6 |= 0x400u;
  *(_DWORD *)(a1 + 144) = v6;
  *(_DWORD *)(a1 + 112) = v14;
  int v5 = *(_DWORD *)(a2 + 144);
  if ((v5 & 0x800) == 0)
  {
LABEL_11:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }
LABEL_30:
  int v15 = *(_DWORD *)(a2 + 116);
  v6 |= 0x800u;
  *(_DWORD *)(a1 + 144) = v6;
  *(_DWORD *)(a1 + 116) = v15;
  int v5 = *(_DWORD *)(a2 + 144);
  if ((v5 & 0x1000) == 0)
  {
LABEL_12:
    if ((v5 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_32;
  }
LABEL_31:
  int v16 = *(_DWORD *)(a2 + 120);
  v6 |= 0x1000u;
  *(_DWORD *)(a1 + 144) = v6;
  *(_DWORD *)(a1 + 120) = v16;
  int v5 = *(_DWORD *)(a2 + 144);
  if ((v5 & 0x200) == 0)
  {
LABEL_13:
    if ((v5 & 0x100) == 0) {
      goto LABEL_14;
    }
    goto LABEL_33;
  }
LABEL_32:
  int v17 = *(_DWORD *)(a2 + 108);
  v6 |= 0x200u;
  *(_DWORD *)(a1 + 144) = v6;
  *(_DWORD *)(a1 + 108) = v17;
  int v5 = *(_DWORD *)(a2 + 144);
  if ((v5 & 0x100) == 0)
  {
LABEL_14:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_34;
  }
LABEL_33:
  int v18 = *(_DWORD *)(a2 + 104);
  v6 |= 0x100u;
  *(_DWORD *)(a1 + 144) = v6;
  *(_DWORD *)(a1 + 104) = v18;
  int v5 = *(_DWORD *)(a2 + 144);
  if ((v5 & 0x4000) == 0)
  {
LABEL_15:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_35;
  }
LABEL_34:
  int v19 = *(_DWORD *)(a2 + 128);
  v6 |= 0x4000u;
  *(_DWORD *)(a1 + 144) = v6;
  *(_DWORD *)(a1 + 128) = v19;
  int v5 = *(_DWORD *)(a2 + 144);
  if ((v5 & 0x8000) == 0)
  {
LABEL_16:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_36;
  }
LABEL_35:
  int v20 = *(_DWORD *)(a2 + 132);
  v6 |= 0x8000u;
  *(_DWORD *)(a1 + 144) = v6;
  *(_DWORD *)(a1 + 132) = v20;
  int v5 = *(_DWORD *)(a2 + 144);
  if ((v5 & 0x10000) == 0)
  {
LABEL_17:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_37;
  }
LABEL_36:
  int v21 = *(_DWORD *)(a2 + 136);
  v6 |= 0x10000u;
  *(_DWORD *)(a1 + 144) = v6;
  *(_DWORD *)(a1 + 136) = v21;
  int v5 = *(_DWORD *)(a2 + 144);
  if ((v5 & 0x2000) == 0)
  {
LABEL_18:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_38;
  }
LABEL_37:
  int v22 = *(_DWORD *)(a2 + 124);
  v6 |= 0x2000u;
  *(_DWORD *)(a1 + 144) = v6;
  *(_DWORD *)(a1 + 124) = v22;
  int v5 = *(_DWORD *)(a2 + 144);
  if ((v5 & 0x20000) == 0)
  {
LABEL_19:
    if ((v5 & 4) == 0) {
      goto LABEL_20;
    }
    goto LABEL_39;
  }
LABEL_38:
  v6 |= 0x20000u;
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  *(_DWORD *)(a1 + 144) = v6;
  int v5 = *(_DWORD *)(a2 + 144);
  if ((v5 & 4) == 0)
  {
LABEL_20:
    if ((v5 & 1) == 0) {
      goto LABEL_21;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t v23 = *(void *)(a2 + 72);
  v6 |= 4u;
  *(_DWORD *)(a1 + 144) = v6;
  *(void *)(a1 + 72) = v23;
  int v5 = *(_DWORD *)(a2 + 144);
  if ((v5 & 1) == 0)
  {
LABEL_21:
    if ((v5 & 2) == 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
LABEL_40:
  uint64_t v24 = *(void *)(a2 + 56);
  v6 |= 1u;
  *(_DWORD *)(a1 + 144) = v6;
  *(void *)(a1 + 56) = v24;
  if ((*(_DWORD *)(a2 + 144) & 2) != 0)
  {
LABEL_22:
    uint64_t v9 = *(void *)(a2 + 64);
    *(_DWORD *)(a1 + 144) = v6 | 2;
    *(void *)(a1 + 64) = v9;
  }
LABEL_23:
  if (a1 != a2)
  {
    sub_1000FB43C((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
    sub_1000FB43C(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  return a1;
}

uint64_t sub_101681D90(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 144);
  if ((v5 & 0x10) != 0)
  {
    PB::TextFormatter::format(this, "combinedUnc", *(float *)(a1 + 88));
    int v5 = *(_DWORD *)(a1 + 144);
    if ((v5 & 0x20) == 0)
    {
LABEL_3:
      if ((v5 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_31;
    }
  }
  else if ((v5 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "combinedX", *(float *)(a1 + 92));
  int v5 = *(_DWORD *)(a1 + 144);
  if ((v5 & 0x40) == 0)
  {
LABEL_4:
    if ((v5 & 0x80) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_31:
  PB::TextFormatter::format(this, "combinedY", *(float *)(a1 + 96));
  if ((*(_DWORD *)(a1 + 144) & 0x80) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "combinedZ", *(float *)(a1 + 100));
LABEL_6:
  int v6 = *(float **)(a1 + 8);
  uint64_t v7 = *(float **)(a1 + 16);
  while (v6 != v7)
  {
    float v8 = *v6++;
    PB::TextFormatter::format(this, "inerAccelApproachMx", v8);
  }
  int v9 = *(_DWORD *)(a1 + 144);
  if ((v9 & 0x100) != 0)
  {
    PB::TextFormatter::format(this, "inerAccelCount", *(_DWORD *)(a1 + 104));
    int v9 = *(_DWORD *)(a1 + 144);
    if ((v9 & 0x200) == 0)
    {
LABEL_10:
      if ((v9 & 0x400) == 0) {
        goto LABEL_11;
      }
      goto LABEL_35;
    }
  }
  else if ((v9 & 0x200) == 0)
  {
    goto LABEL_10;
  }
  PB::TextFormatter::format(this, "inertialApproachUnc", *(float *)(a1 + 108));
  int v9 = *(_DWORD *)(a1 + 144);
  if ((v9 & 0x400) == 0)
  {
LABEL_11:
    if ((v9 & 0x800) == 0) {
      goto LABEL_12;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "inertialApproachX", *(float *)(a1 + 112));
  int v9 = *(_DWORD *)(a1 + 144);
  if ((v9 & 0x800) == 0)
  {
LABEL_12:
    if ((v9 & 0x1000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "inertialApproachY", *(float *)(a1 + 116));
  int v9 = *(_DWORD *)(a1 + 144);
  if ((v9 & 0x1000) == 0)
  {
LABEL_13:
    if ((v9 & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "inertialApproachZ", *(float *)(a1 + 120));
  int v9 = *(_DWORD *)(a1 + 144);
  if ((v9 & 1) == 0)
  {
LABEL_14:
    if ((v9 & 2) == 0) {
      goto LABEL_15;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "previousTimeAccel", *(void *)(a1 + 56));
  int v9 = *(_DWORD *)(a1 + 144);
  if ((v9 & 2) == 0)
  {
LABEL_15:
    if ((v9 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_39:
  PB::TextFormatter::format(this, "previousTimeSag", *(void *)(a1 + 64));
  if ((*(_DWORD *)(a1 + 144) & 4) != 0) {
LABEL_16:
  }
    PB::TextFormatter::format(this, "previousTimestamp", *(void *)(a1 + 72));
LABEL_17:
  char v10 = *(float **)(a1 + 32);
  int v11 = *(float **)(a1 + 40);
  while (v10 != v11)
  {
    float v12 = *v10++;
    PB::TextFormatter::format(this, "sagittalApproachMx", v12);
  }
  int v13 = *(_DWORD *)(a1 + 144);
  if ((v13 & 0x2000) != 0)
  {
    PB::TextFormatter::format(this, "sagittalApproachUnc", *(float *)(a1 + 124));
    int v13 = *(_DWORD *)(a1 + 144);
    if ((v13 & 0x4000) == 0)
    {
LABEL_21:
      if ((v13 & 0x8000) == 0) {
        goto LABEL_22;
      }
      goto LABEL_43;
    }
  }
  else if ((v13 & 0x4000) == 0)
  {
    goto LABEL_21;
  }
  PB::TextFormatter::format(this, "sagittalApproachX", *(float *)(a1 + 128));
  int v13 = *(_DWORD *)(a1 + 144);
  if ((v13 & 0x8000) == 0)
  {
LABEL_22:
    if ((v13 & 0x10000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(this, "sagittalApproachY", *(float *)(a1 + 132));
  int v13 = *(_DWORD *)(a1 + 144);
  if ((v13 & 0x10000) == 0)
  {
LABEL_23:
    if ((v13 & 0x20000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(this, "sagittalApproachZ", *(float *)(a1 + 136));
  int v13 = *(_DWORD *)(a1 + 144);
  if ((v13 & 0x20000) == 0)
  {
LABEL_24:
    if ((v13 & 8) == 0) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }
LABEL_45:
  PB::TextFormatter::format(this, "sagittalCount", *(_DWORD *)(a1 + 140));
  if ((*(_DWORD *)(a1 + 144) & 8) != 0) {
LABEL_25:
  }
    PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 80));
LABEL_26:

  return PB::TextFormatter::endObject(this);
}

BOOL sub_10168207C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    float v8 = (void **)(a1 + 8);
    uint64_t v9 = a1 + 24;
    char v10 = (void **)(a1 + 32);
    uint64_t v11 = a1 + 48;
    while (1)
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v13 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v17 = *(unsigned char *)(v12 + v2);
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          break;
        }
        v13 += 7;
        unint64_t v2 = v16;
        BOOL v18 = v14++ > 8;
        if (v18) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v24 = v15 & 7;
      if (v24 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v15 >> 3))
      {
        case 1u:
          *(_DWORD *)(a1 + 144) |= 8u;
          unint64_t v25 = *((void *)this + 1);
          unint64_t v26 = *((void *)this + 2);
          uint64_t v27 = *(void *)this;
          if (v25 <= 0xFFFFFFFFFFFFFFF5 && v25 + 10 <= v26)
          {
            char v28 = 0;
            unsigned int v29 = 0;
            uint64_t v30 = 0;
            do
            {
              unint64_t v31 = v25 + 1;
              *((void *)this + 1) = v25 + 1;
              char v32 = *(unsigned char *)(v27 + v25);
              v30 |= (unint64_t)(v32 & 0x7F) << v28;
              if ((v32 & 0x80) == 0) {
                goto LABEL_223;
              }
              v28 += 7;
              unint64_t v25 = v31;
              BOOL v18 = v29++ > 8;
            }
            while (!v18);
LABEL_157:
            uint64_t v30 = 0;
            goto LABEL_223;
          }
          char v113 = 0;
          unsigned int v114 = 0;
          uint64_t v30 = 0;
          if (v26 <= v25) {
            unint64_t v26 = *((void *)this + 1);
          }
          while (2)
          {
            if (v26 == v25)
            {
              uint64_t v30 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v115 = v25 + 1;
              char v116 = *(unsigned char *)(v27 + v25);
              *((void *)this + 1) = v115;
              v30 |= (unint64_t)(v116 & 0x7F) << v113;
              if (v116 < 0)
              {
                v113 += 7;
                unint64_t v25 = v115;
                BOOL v18 = v114++ > 8;
                if (v18) {
                  goto LABEL_157;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v30 = 0;
              }
            }
            break;
          }
LABEL_223:
          *(void *)(a1 + 80) = v30;
          goto LABEL_258;
        case 2u:
          *(_DWORD *)(a1 + 144) |= 0x20u;
          unint64_t v33 = *((void *)this + 1);
          if (v33 > 0xFFFFFFFFFFFFFFFBLL || v33 + 4 > *((void *)this + 2)) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(void *)this + v33);
          goto LABEL_257;
        case 3u:
          *(_DWORD *)(a1 + 144) |= 0x40u;
          unint64_t v34 = *((void *)this + 1);
          if (v34 > 0xFFFFFFFFFFFFFFFBLL || v34 + 4 > *((void *)this + 2)) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v34);
          goto LABEL_257;
        case 4u:
          *(_DWORD *)(a1 + 144) |= 0x80u;
          unint64_t v35 = *((void *)this + 1);
          if (v35 > 0xFFFFFFFFFFFFFFFBLL || v35 + 4 > *((void *)this + 2)) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v35);
          goto LABEL_257;
        case 5u:
          *(_DWORD *)(a1 + 144) |= 0x10u;
          unint64_t v36 = *((void *)this + 1);
          if (v36 > 0xFFFFFFFFFFFFFFFBLL || v36 + 4 > *((void *)this + 2)) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v36);
          goto LABEL_257;
        case 6u:
          *(_DWORD *)(a1 + 144) |= 0x400u;
          unint64_t v37 = *((void *)this + 1);
          if (v37 > 0xFFFFFFFFFFFFFFFBLL || v37 + 4 > *((void *)this + 2)) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 112) = *(_DWORD *)(*(void *)this + v37);
          goto LABEL_257;
        case 7u:
          *(_DWORD *)(a1 + 144) |= 0x800u;
          unint64_t v38 = *((void *)this + 1);
          if (v38 > 0xFFFFFFFFFFFFFFFBLL || v38 + 4 > *((void *)this + 2)) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 116) = *(_DWORD *)(*(void *)this + v38);
          goto LABEL_257;
        case 8u:
          *(_DWORD *)(a1 + 144) |= 0x1000u;
          unint64_t v39 = *((void *)this + 1);
          if (v39 > 0xFFFFFFFFFFFFFFFBLL || v39 + 4 > *((void *)this + 2)) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 120) = *(_DWORD *)(*(void *)this + v39);
          goto LABEL_257;
        case 9u:
          *(_DWORD *)(a1 + 144) |= 0x200u;
          unint64_t v40 = *((void *)this + 1);
          if (v40 > 0xFFFFFFFFFFFFFFFBLL || v40 + 4 > *((void *)this + 2)) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 108) = *(_DWORD *)(*(void *)this + v40);
          goto LABEL_257;
        case 0xAu:
          *(_DWORD *)(a1 + 144) |= 0x100u;
          unint64_t v41 = *((void *)this + 1);
          unint64_t v42 = *((void *)this + 2);
          uint64_t v43 = *(void *)this;
          if (v41 <= 0xFFFFFFFFFFFFFFF5 && v41 + 10 <= v42)
          {
            char v44 = 0;
            unsigned int v45 = 0;
            uint64_t v46 = 0;
            do
            {
              unint64_t v47 = v41 + 1;
              *((void *)this + 1) = v41 + 1;
              char v48 = *(unsigned char *)(v43 + v41);
              v46 |= (unint64_t)(v48 & 0x7F) << v44;
              if ((v48 & 0x80) == 0) {
                goto LABEL_226;
              }
              v44 += 7;
              unint64_t v41 = v47;
              BOOL v18 = v45++ > 8;
            }
            while (!v18);
LABEL_164:
            LODWORD(v46) = 0;
            goto LABEL_226;
          }
          char v117 = 0;
          unsigned int v118 = 0;
          uint64_t v46 = 0;
          if (v42 <= v41) {
            unint64_t v42 = *((void *)this + 1);
          }
          while (2)
          {
            if (v42 == v41)
            {
              LODWORD(v46) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v119 = v41 + 1;
              char v120 = *(unsigned char *)(v43 + v41);
              *((void *)this + 1) = v119;
              v46 |= (unint64_t)(v120 & 0x7F) << v117;
              if (v120 < 0)
              {
                v117 += 7;
                unint64_t v41 = v119;
                BOOL v18 = v118++ > 8;
                if (v18) {
                  goto LABEL_164;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v46) = 0;
              }
            }
            break;
          }
LABEL_226:
          *(_DWORD *)(a1 + 104) = v46;
          goto LABEL_258;
        case 0xBu:
          *(_DWORD *)(a1 + 144) |= 0x4000u;
          unint64_t v49 = *((void *)this + 1);
          if (v49 > 0xFFFFFFFFFFFFFFFBLL || v49 + 4 > *((void *)this + 2)) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 128) = *(_DWORD *)(*(void *)this + v49);
          goto LABEL_257;
        case 0xCu:
          *(_DWORD *)(a1 + 144) |= 0x8000u;
          unint64_t v50 = *((void *)this + 1);
          if (v50 > 0xFFFFFFFFFFFFFFFBLL || v50 + 4 > *((void *)this + 2)) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 132) = *(_DWORD *)(*(void *)this + v50);
          goto LABEL_257;
        case 0xDu:
          *(_DWORD *)(a1 + 144) |= 0x10000u;
          unint64_t v51 = *((void *)this + 1);
          if (v51 > 0xFFFFFFFFFFFFFFFBLL || v51 + 4 > *((void *)this + 2)) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 136) = *(_DWORD *)(*(void *)this + v51);
          goto LABEL_257;
        case 0xEu:
          *(_DWORD *)(a1 + 144) |= 0x2000u;
          unint64_t v52 = *((void *)this + 1);
          if (v52 > 0xFFFFFFFFFFFFFFFBLL || v52 + 4 > *((void *)this + 2)) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 124) = *(_DWORD *)(*(void *)this + v52);
          goto LABEL_257;
        case 0xFu:
          *(_DWORD *)(a1 + 144) |= 0x20000u;
          unint64_t v53 = *((void *)this + 1);
          unint64_t v54 = *((void *)this + 2);
          uint64_t v55 = *(void *)this;
          if (v53 <= 0xFFFFFFFFFFFFFFF5 && v53 + 10 <= v54)
          {
            char v56 = 0;
            unsigned int v57 = 0;
            uint64_t v58 = 0;
            do
            {
              unint64_t v59 = v53 + 1;
              *((void *)this + 1) = v53 + 1;
              char v60 = *(unsigned char *)(v55 + v53);
              v58 |= (unint64_t)(v60 & 0x7F) << v56;
              if ((v60 & 0x80) == 0) {
                goto LABEL_229;
              }
              v56 += 7;
              unint64_t v53 = v59;
              BOOL v18 = v57++ > 8;
            }
            while (!v18);
LABEL_171:
            LODWORD(v58) = 0;
            goto LABEL_229;
          }
          char v121 = 0;
          unsigned int v122 = 0;
          uint64_t v58 = 0;
          if (v54 <= v53) {
            unint64_t v54 = *((void *)this + 1);
          }
          while (2)
          {
            if (v54 == v53)
            {
              LODWORD(v58) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v123 = v53 + 1;
              char v124 = *(unsigned char *)(v55 + v53);
              *((void *)this + 1) = v123;
              v58 |= (unint64_t)(v124 & 0x7F) << v121;
              if (v124 < 0)
              {
                v121 += 7;
                unint64_t v53 = v123;
                BOOL v18 = v122++ > 8;
                if (v18) {
                  goto LABEL_171;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v58) = 0;
              }
            }
            break;
          }
LABEL_229:
          *(_DWORD *)(a1 + 140) = v58;
          goto LABEL_258;
        case 0x10u:
          *(_DWORD *)(a1 + 144) |= 4u;
          unint64_t v61 = *((void *)this + 1);
          unint64_t v62 = *((void *)this + 2);
          uint64_t v63 = *(void *)this;
          if (v61 <= 0xFFFFFFFFFFFFFFF5 && v61 + 10 <= v62)
          {
            char v64 = 0;
            unsigned int v65 = 0;
            uint64_t v66 = 0;
            do
            {
              unint64_t v67 = v61 + 1;
              *((void *)this + 1) = v61 + 1;
              char v68 = *(unsigned char *)(v63 + v61);
              v66 |= (unint64_t)(v68 & 0x7F) << v64;
              if ((v68 & 0x80) == 0) {
                goto LABEL_232;
              }
              v64 += 7;
              unint64_t v61 = v67;
              BOOL v18 = v65++ > 8;
            }
            while (!v18);
LABEL_178:
            uint64_t v66 = 0;
            goto LABEL_232;
          }
          char v125 = 0;
          unsigned int v126 = 0;
          uint64_t v66 = 0;
          if (v62 <= v61) {
            unint64_t v62 = *((void *)this + 1);
          }
          while (2)
          {
            if (v62 == v61)
            {
              uint64_t v66 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v127 = v61 + 1;
              char v128 = *(unsigned char *)(v63 + v61);
              *((void *)this + 1) = v127;
              v66 |= (unint64_t)(v128 & 0x7F) << v125;
              if (v128 < 0)
              {
                v125 += 7;
                unint64_t v61 = v127;
                BOOL v18 = v126++ > 8;
                if (v18) {
                  goto LABEL_178;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v66 = 0;
              }
            }
            break;
          }
LABEL_232:
          *(void *)(a1 + 72) = v66;
          goto LABEL_258;
        case 0x11u:
          *(_DWORD *)(a1 + 144) |= 1u;
          unint64_t v69 = *((void *)this + 1);
          unint64_t v70 = *((void *)this + 2);
          uint64_t v71 = *(void *)this;
          if (v69 <= 0xFFFFFFFFFFFFFFF5 && v69 + 10 <= v70)
          {
            char v72 = 0;
            unsigned int v73 = 0;
            uint64_t v74 = 0;
            do
            {
              unint64_t v75 = v69 + 1;
              *((void *)this + 1) = v69 + 1;
              char v76 = *(unsigned char *)(v71 + v69);
              v74 |= (unint64_t)(v76 & 0x7F) << v72;
              if ((v76 & 0x80) == 0) {
                goto LABEL_235;
              }
              v72 += 7;
              unint64_t v69 = v75;
              BOOL v18 = v73++ > 8;
            }
            while (!v18);
LABEL_185:
            uint64_t v74 = 0;
            goto LABEL_235;
          }
          char v129 = 0;
          unsigned int v130 = 0;
          uint64_t v74 = 0;
          if (v70 <= v69) {
            unint64_t v70 = *((void *)this + 1);
          }
          while (2)
          {
            if (v70 == v69)
            {
              uint64_t v74 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v131 = v69 + 1;
              char v132 = *(unsigned char *)(v71 + v69);
              *((void *)this + 1) = v131;
              v74 |= (unint64_t)(v132 & 0x7F) << v129;
              if (v132 < 0)
              {
                v129 += 7;
                unint64_t v69 = v131;
                BOOL v18 = v130++ > 8;
                if (v18) {
                  goto LABEL_185;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v74 = 0;
              }
            }
            break;
          }
LABEL_235:
          *(void *)(a1 + 56) = v74;
          goto LABEL_258;
        case 0x12u:
          *(_DWORD *)(a1 + 144) |= 2u;
          unint64_t v77 = *((void *)this + 1);
          unint64_t v78 = *((void *)this + 2);
          uint64_t v79 = *(void *)this;
          if (v77 <= 0xFFFFFFFFFFFFFFF5 && v77 + 10 <= v78)
          {
            char v80 = 0;
            unsigned int v81 = 0;
            uint64_t v82 = 0;
            do
            {
              unint64_t v83 = v77 + 1;
              *((void *)this + 1) = v77 + 1;
              char v84 = *(unsigned char *)(v79 + v77);
              v82 |= (unint64_t)(v84 & 0x7F) << v80;
              if ((v84 & 0x80) == 0) {
                goto LABEL_238;
              }
              v80 += 7;
              unint64_t v77 = v83;
              BOOL v18 = v81++ > 8;
            }
            while (!v18);
LABEL_192:
            uint64_t v82 = 0;
            goto LABEL_238;
          }
          char v133 = 0;
          unsigned int v134 = 0;
          uint64_t v82 = 0;
          if (v78 <= v77) {
            unint64_t v78 = *((void *)this + 1);
          }
          while (2)
          {
            if (v78 == v77)
            {
              uint64_t v82 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v135 = v77 + 1;
              char v136 = *(unsigned char *)(v79 + v77);
              *((void *)this + 1) = v135;
              v82 |= (unint64_t)(v136 & 0x7F) << v133;
              if (v136 < 0)
              {
                v133 += 7;
                unint64_t v77 = v135;
                BOOL v18 = v134++ > 8;
                if (v18) {
                  goto LABEL_192;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v82 = 0;
              }
            }
            break;
          }
LABEL_238:
          *(void *)(a1 + 64) = v82;
          goto LABEL_258;
        case 0x13u:
          if (v24 != 2)
          {
            unint64_t v138 = *(char **)(a1 + 40);
            unint64_t v137 = *(void *)(a1 + 48);
            if ((unint64_t)v138 >= v137)
            {
              unsigned int v142 = (char *)*v10;
              uint64_t v143 = (v138 - (unsigned char *)*v10) >> 2;
              unint64_t v144 = v143 + 1;
              if ((unint64_t)(v143 + 1) >> 62) {
LABEL_268:
              }
                sub_1001D7FD4();
              uint64_t v145 = v137 - (void)v142;
              if (v145 >> 1 > v144) {
                unint64_t v144 = v145 >> 1;
              }
              if ((unint64_t)v145 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v146 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v146 = v144;
              }
              if (v146)
              {
                unint64_t v147 = (char *)sub_10017EA34(v11, v146);
                unsigned int v142 = *(char **)(a1 + 32);
                unint64_t v138 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v147 = 0;
              }
              unint64_t v154 = &v147[4 * v143];
              *(_DWORD *)unint64_t v154 = 0;
              unint64_t v139 = v154 + 4;
              while (v138 != v142)
              {
                int v155 = *((_DWORD *)v138 - 1);
                v138 -= 4;
                *((_DWORD *)v154 - 1) = v155;
                v154 -= 4;
              }
              *(void *)(a1 + 32) = v154;
              *(void *)(a1 + 40) = v139;
              *(void *)(a1 + 48) = &v147[4 * v146];
              if (v142) {
                operator delete(v142);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v138 = 0;
              unint64_t v139 = v138 + 4;
            }
            *(void *)(a1 + 40) = v139;
            goto LABEL_253;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v85 = *((void *)this + 1);
          unint64_t v86 = *((void *)this + 2);
          while (v85 < v86 && !*((unsigned char *)this + 24))
          {
            unint64_t v88 = *(char **)(a1 + 40);
            unint64_t v87 = *(void *)(a1 + 48);
            if ((unint64_t)v88 >= v87)
            {
              int v90 = (char *)*v10;
              uint64_t v91 = (v88 - (unsigned char *)*v10) >> 2;
              unint64_t v92 = v91 + 1;
              if ((unint64_t)(v91 + 1) >> 62) {
                goto LABEL_268;
              }
              uint64_t v93 = v87 - (void)v90;
              if (v93 >> 1 > v92) {
                unint64_t v92 = v93 >> 1;
              }
              if ((unint64_t)v93 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v94 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v94 = v92;
              }
              if (v94)
              {
                BOOL v95 = (char *)sub_10017EA34(v11, v94);
                int v90 = *(char **)(a1 + 32);
                unint64_t v88 = *(char **)(a1 + 40);
              }
              else
              {
                BOOL v95 = 0;
              }
              unint64_t v96 = &v95[4 * v91];
              *(_DWORD *)unint64_t v96 = 0;
              unint64_t v89 = v96 + 4;
              while (v88 != v90)
              {
                int v97 = *((_DWORD *)v88 - 1);
                v88 -= 4;
                *((_DWORD *)v96 - 1) = v97;
                v96 -= 4;
              }
              *(void *)(a1 + 32) = v96;
              *(void *)(a1 + 40) = v89;
              *(void *)(a1 + 48) = &v95[4 * v94];
              if (v90) {
                operator delete(v90);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v88 = 0;
              unint64_t v89 = v88 + 4;
            }
            *(void *)(a1 + 40) = v89;
            unint64_t v98 = *((void *)this + 1);
            if (v98 > 0xFFFFFFFFFFFFFFFBLL || v98 + 4 > *((void *)this + 2)) {
              goto LABEL_197;
            }
            *(v89 - 1) = *(_DWORD *)(*(void *)this + v98);
            unint64_t v86 = *((void *)this + 2);
            unint64_t v85 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v85;
          }
          goto LABEL_198;
        case 0x14u:
          if (v24 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v99 = *((void *)this + 1);
            unint64_t v100 = *((void *)this + 2);
            while (v99 < v100 && !*((unsigned char *)this + 24))
            {
              unint64_t v102 = *(char **)(a1 + 16);
              unint64_t v101 = *(void *)(a1 + 24);
              if ((unint64_t)v102 >= v101)
              {
                unint64_t v104 = (char *)*v8;
                uint64_t v105 = (v102 - (unsigned char *)*v8) >> 2;
                unint64_t v106 = v105 + 1;
                if ((unint64_t)(v105 + 1) >> 62) {
                  goto LABEL_269;
                }
                uint64_t v107 = v101 - (void)v104;
                if (v107 >> 1 > v106) {
                  unint64_t v106 = v107 >> 1;
                }
                if ((unint64_t)v107 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v108 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v108 = v106;
                }
                if (v108)
                {
                  unint64_t v109 = (char *)sub_10017EA34(v9, v108);
                  unint64_t v104 = *(char **)(a1 + 8);
                  unint64_t v102 = *(char **)(a1 + 16);
                }
                else
                {
                  unint64_t v109 = 0;
                }
                unint64_t v110 = &v109[4 * v105];
                *(_DWORD *)unint64_t v110 = 0;
                unint64_t v103 = v110 + 4;
                while (v102 != v104)
                {
                  int v111 = *((_DWORD *)v102 - 1);
                  v102 -= 4;
                  *((_DWORD *)v110 - 1) = v111;
                  v110 -= 4;
                }
                *(void *)(a1 + 8) = v110;
                *(void *)(a1 + 16) = v103;
                *(void *)(a1 + 24) = &v109[4 * v108];
                if (v104) {
                  operator delete(v104);
                }
              }
              else
              {
                *(_DWORD *)unint64_t v102 = 0;
                unint64_t v103 = v102 + 4;
              }
              *(void *)(a1 + 16) = v103;
              unint64_t v112 = *((void *)this + 1);
              if (v112 > 0xFFFFFFFFFFFFFFFBLL || v112 + 4 > *((void *)this + 2))
              {
LABEL_197:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v103 - 1) = *(_DWORD *)(*(void *)this + v112);
              unint64_t v100 = *((void *)this + 2);
              unint64_t v99 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v99;
            }
LABEL_198:
            PB::Reader::recallMark();
          }
          else
          {
            char v141 = *(char **)(a1 + 16);
            unint64_t v140 = *(void *)(a1 + 24);
            if ((unint64_t)v141 >= v140)
            {
              int v148 = (char *)*v8;
              uint64_t v149 = (v141 - (unsigned char *)*v8) >> 2;
              unint64_t v150 = v149 + 1;
              if ((unint64_t)(v149 + 1) >> 62) {
LABEL_269:
              }
                sub_1001D7FD4();
              uint64_t v151 = v140 - (void)v148;
              if (v151 >> 1 > v150) {
                unint64_t v150 = v151 >> 1;
              }
              if ((unint64_t)v151 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v152 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v152 = v150;
              }
              if (v152)
              {
                unint64_t v153 = (char *)sub_10017EA34(v9, v152);
                int v148 = *(char **)(a1 + 8);
                char v141 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v153 = 0;
              }
              char v156 = &v153[4 * v149];
              *(_DWORD *)char v156 = 0;
              unint64_t v139 = v156 + 4;
              while (v141 != v148)
              {
                int v157 = *((_DWORD *)v141 - 1);
                v141 -= 4;
                *((_DWORD *)v156 - 1) = v157;
                v156 -= 4;
              }
              *(void *)(a1 + 8) = v156;
              *(void *)(a1 + 16) = v139;
              *(void *)(a1 + 24) = &v153[4 * v152];
              if (v148) {
                operator delete(v148);
              }
            }
            else
            {
              *(_DWORD *)char v141 = 0;
              unint64_t v139 = v141 + 4;
            }
            *(void *)(a1 + 16) = v139;
LABEL_253:
            unint64_t v158 = *((void *)this + 1);
            if (v158 <= 0xFFFFFFFFFFFFFFFBLL && v158 + 4 <= *((void *)this + 2))
            {
              *(v139 - 1) = *(_DWORD *)(*(void *)this + v158);
LABEL_257:
              *((void *)this + 1) += 4;
            }
            else
            {
LABEL_255:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_258:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        default:
          if ((PB::Reader::skip(this, v15 >> 3, v24, 0) & 1) == 0) {
            return 0;
          }
          goto LABEL_258;
      }
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v15 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v21 = v2 + 1;
      char v22 = *(unsigned char *)(v12 + v2);
      *((void *)this + 1) = v21;
      v15 |= (unint64_t)(v22 & 0x7F) << v19;
      if ((v22 & 0x80) == 0) {
        goto LABEL_21;
      }
      v19 += 7;
      unint64_t v2 = v21;
      if (v20++ >= 9)
      {
LABEL_20:
        unint64_t v15 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101682E14(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 144);
  if ((v4 & 8) != 0)
  {
    double result = PB::Writer::writeVarInt(this, *(void *)(result + 80), 1u);
    int v4 = *(_DWORD *)(v3 + 144);
    if ((v4 & 0x20) == 0)
    {
LABEL_3:
      if ((v4 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_29;
    }
  }
  else if ((v4 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  double result = PB::Writer::write(this, *(float *)(v3 + 92), 2u);
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x40) == 0)
  {
LABEL_4:
    if ((v4 & 0x80) == 0) {
      goto LABEL_5;
    }
    goto LABEL_30;
  }
LABEL_29:
  double result = PB::Writer::write(this, *(float *)(v3 + 96), 3u);
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x80) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_31;
  }
LABEL_30:
  double result = PB::Writer::write(this, *(float *)(v3 + 100), 4u);
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x10) == 0)
  {
LABEL_6:
    if ((v4 & 0x400) == 0) {
      goto LABEL_7;
    }
    goto LABEL_32;
  }
LABEL_31:
  double result = PB::Writer::write(this, *(float *)(v3 + 88), 5u);
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x400) == 0)
  {
LABEL_7:
    if ((v4 & 0x800) == 0) {
      goto LABEL_8;
    }
    goto LABEL_33;
  }
LABEL_32:
  double result = PB::Writer::write(this, *(float *)(v3 + 112), 6u);
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x800) == 0)
  {
LABEL_8:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_34;
  }
LABEL_33:
  double result = PB::Writer::write(this, *(float *)(v3 + 116), 7u);
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x1000) == 0)
  {
LABEL_9:
    if ((v4 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_35;
  }
LABEL_34:
  double result = PB::Writer::write(this, *(float *)(v3 + 120), 8u);
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x200) == 0)
  {
LABEL_10:
    if ((v4 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_36;
  }
LABEL_35:
  double result = PB::Writer::write(this, *(float *)(v3 + 108), 9u);
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x100) == 0)
  {
LABEL_11:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_37;
  }
LABEL_36:
  double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 104), 0xAu);
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x4000) == 0)
  {
LABEL_12:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_38;
  }
LABEL_37:
  double result = PB::Writer::write(this, *(float *)(v3 + 128), 0xBu);
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x8000) == 0)
  {
LABEL_13:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_39;
  }
LABEL_38:
  double result = PB::Writer::write(this, *(float *)(v3 + 132), 0xCu);
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x10000) == 0)
  {
LABEL_14:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_40;
  }
LABEL_39:
  double result = PB::Writer::write(this, *(float *)(v3 + 136), 0xDu);
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x2000) == 0)
  {
LABEL_15:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_41;
  }
LABEL_40:
  double result = PB::Writer::write(this, *(float *)(v3 + 124), 0xEu);
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x20000) == 0)
  {
LABEL_16:
    if ((v4 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_42;
  }
LABEL_41:
  double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 140), 0xFu);
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 4) == 0)
  {
LABEL_17:
    if ((v4 & 1) == 0) {
      goto LABEL_18;
    }
LABEL_43:
    double result = PB::Writer::writeVarInt(this, *(void *)(v3 + 56), 0x11u);
    if ((*(_DWORD *)(v3 + 144) & 2) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_42:
  double result = PB::Writer::writeVarInt(this, *(void *)(v3 + 72), 0x10u);
  int v4 = *(_DWORD *)(v3 + 144);
  if (v4) {
    goto LABEL_43;
  }
LABEL_18:
  if ((v4 & 2) != 0) {
LABEL_19:
  }
    double result = PB::Writer::writeVarInt(this, *(void *)(v3 + 64), 0x12u);
LABEL_20:
  int v5 = *(float **)(v3 + 32);
  int v6 = *(float **)(v3 + 40);
  while (v5 != v6)
  {
    float v7 = *v5++;
    double result = PB::Writer::write(this, v7, 0x13u);
  }
  uint64_t v9 = *(float **)(v3 + 8);
  float v8 = *(float **)(v3 + 16);
  while (v9 != v8)
  {
    float v10 = *v9++;
    double result = PB::Writer::write(this, v10, 0x14u);
  }
  return result;
}

uint64_t sub_101683078(uint64_t result)
{
  *(void *)double result = &off_102333EC8;
  *(_DWORD *)(result + 132) = 0;
  return result;
}

void sub_1016830A0(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_1016830D8(uint64_t result, uint64_t a2)
{
  *(void *)double result = &off_102333EC8;
  *(_DWORD *)(result + 132) = 0;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x4000000) != 0)
  {
    char v4 = *(unsigned char *)(a2 + 126);
    int v3 = 0x4000000;
    *(_DWORD *)(result + 132) = 0x4000000;
    *(unsigned char *)(result + 126) = v4;
    int v2 = *(_DWORD *)(a2 + 132);
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 0x8000000) != 0)
  {
LABEL_5:
    char v5 = *(unsigned char *)(a2 + 127);
    v3 |= 0x8000000u;
    *(_DWORD *)(result + 132) = v3;
    *(unsigned char *)(result + 127) = v5;
    int v2 = *(_DWORD *)(a2 + 132);
  }
LABEL_6:
  if ((v2 & 0x80000) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 104);
    v3 |= 0x80000u;
    *(_DWORD *)(result + 132) = v3;
    *(_DWORD *)(result + 104) = v6;
    int v2 = *(_DWORD *)(a2 + 132);
    if ((v2 & 0x800000) == 0)
    {
LABEL_8:
      if ((v2 & 0x100000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_36;
    }
  }
  else if ((v2 & 0x800000) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 120);
  v3 |= 0x800000u;
  *(_DWORD *)(result + 132) = v3;
  *(_DWORD *)(result + 120) = v7;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x100000) == 0)
  {
LABEL_9:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_37;
  }
LABEL_36:
  int v8 = *(_DWORD *)(a2 + 108);
  v3 |= 0x100000u;
  *(_DWORD *)(result + 132) = v3;
  *(_DWORD *)(result + 108) = v8;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x20000) == 0)
  {
LABEL_10:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_38;
  }
LABEL_37:
  int v9 = *(_DWORD *)(a2 + 96);
  v3 |= 0x20000u;
  *(_DWORD *)(result + 132) = v3;
  *(_DWORD *)(result + 96) = v9;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x10000) == 0)
  {
LABEL_11:
    if ((v2 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_39;
  }
LABEL_38:
  int v10 = *(_DWORD *)(a2 + 92);
  v3 |= 0x10000u;
  *(_DWORD *)(result + 132) = v3;
  *(_DWORD *)(result + 92) = v10;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x100) == 0)
  {
LABEL_12:
    if ((v2 & 0x80) == 0) {
      goto LABEL_13;
    }
    goto LABEL_40;
  }
LABEL_39:
  int v11 = *(_DWORD *)(a2 + 60);
  v3 |= 0x100u;
  *(_DWORD *)(result + 132) = v3;
  *(_DWORD *)(result + 60) = v11;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x80) == 0)
  {
LABEL_13:
    if ((v2 & 0x40) == 0) {
      goto LABEL_14;
    }
    goto LABEL_41;
  }
LABEL_40:
  int v12 = *(_DWORD *)(a2 + 56);
  v3 |= 0x80u;
  *(_DWORD *)(result + 132) = v3;
  *(_DWORD *)(result + 56) = v12;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x40) == 0)
  {
LABEL_14:
    if ((v2 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_42;
  }
LABEL_41:
  int v13 = *(_DWORD *)(a2 + 52);
  v3 |= 0x40u;
  *(_DWORD *)(result + 132) = v3;
  *(_DWORD *)(result + 52) = v13;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x20) == 0)
  {
LABEL_15:
    if ((v2 & 0x800) == 0) {
      goto LABEL_16;
    }
    goto LABEL_43;
  }
LABEL_42:
  int v14 = *(_DWORD *)(a2 + 48);
  v3 |= 0x20u;
  *(_DWORD *)(result + 132) = v3;
  *(_DWORD *)(result + 48) = v14;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x800) == 0)
  {
LABEL_16:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_44;
  }
LABEL_43:
  int v15 = *(_DWORD *)(a2 + 72);
  v3 |= 0x800u;
  *(_DWORD *)(result + 132) = v3;
  *(_DWORD *)(result + 72) = v15;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x4000) == 0)
  {
LABEL_17:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_45;
  }
LABEL_44:
  int v16 = *(_DWORD *)(a2 + 84);
  v3 |= 0x4000u;
  *(_DWORD *)(result + 132) = v3;
  *(_DWORD *)(result + 84) = v16;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x200000) == 0)
  {
LABEL_18:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_46;
  }
LABEL_45:
  int v17 = *(_DWORD *)(a2 + 112);
  v3 |= 0x200000u;
  *(_DWORD *)(result + 132) = v3;
  *(_DWORD *)(result + 112) = v17;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x40000) == 0)
  {
LABEL_19:
    if ((v2 & 8) == 0) {
      goto LABEL_20;
    }
    goto LABEL_47;
  }
LABEL_46:
  int v18 = *(_DWORD *)(a2 + 100);
  v3 |= 0x40000u;
  *(_DWORD *)(result + 132) = v3;
  *(_DWORD *)(result + 100) = v18;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 8) == 0)
  {
LABEL_20:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t v19 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_DWORD *)(result + 132) = v3;
  *(void *)(result + 32) = v19;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_21:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_49;
  }
LABEL_48:
  char v20 = *(unsigned char *)(a2 + 124);
  v3 |= 0x1000000u;
  *(_DWORD *)(result + 132) = v3;
  *(unsigned char *)(result + 124) = v20;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x8000) == 0)
  {
LABEL_22:
    if ((v2 & 0x10) == 0) {
      goto LABEL_23;
    }
    goto LABEL_50;
  }
LABEL_49:
  int v21 = *(_DWORD *)(a2 + 88);
  v3 |= 0x8000u;
  *(_DWORD *)(result + 132) = v3;
  *(_DWORD *)(result + 88) = v21;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x10) == 0)
  {
LABEL_23:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t v22 = *(void *)(a2 + 40);
  v3 |= 0x10u;
  *(_DWORD *)(result + 132) = v3;
  *(void *)(result + 40) = v22;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x400000) == 0)
  {
LABEL_24:
    if ((v2 & 4) == 0) {
      goto LABEL_25;
    }
    goto LABEL_52;
  }
LABEL_51:
  int v23 = *(_DWORD *)(a2 + 116);
  v3 |= 0x400000u;
  *(_DWORD *)(result + 132) = v3;
  *(_DWORD *)(result + 116) = v23;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 4) == 0)
  {
LABEL_25:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t v24 = *(void *)(a2 + 24);
  v3 |= 4u;
  *(_DWORD *)(result + 132) = v3;
  *(void *)(result + 24) = v24;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x2000) == 0)
  {
LABEL_26:
    if ((v2 & 2) == 0) {
      goto LABEL_27;
    }
    goto LABEL_54;
  }
LABEL_53:
  int v25 = *(_DWORD *)(a2 + 80);
  v3 |= 0x2000u;
  *(_DWORD *)(result + 132) = v3;
  *(_DWORD *)(result + 80) = v25;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 2) == 0)
  {
LABEL_27:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t v26 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_DWORD *)(result + 132) = v3;
  *(void *)(result + 16) = v26;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x1000) == 0)
  {
LABEL_28:
    if ((v2 & 1) == 0) {
      goto LABEL_29;
    }
    goto LABEL_56;
  }
LABEL_55:
  int v27 = *(_DWORD *)(a2 + 76);
  v3 |= 0x1000u;
  *(_DWORD *)(result + 132) = v3;
  *(_DWORD *)(result + 76) = v27;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 1) == 0)
  {
LABEL_29:
    if ((v2 & 0x200) == 0) {
      goto LABEL_30;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t v28 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_DWORD *)(result + 132) = v3;
  *(void *)(result + 8) = v28;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x200) == 0)
  {
LABEL_30:
    if ((v2 & 0x400) == 0) {
      goto LABEL_31;
    }
    goto LABEL_58;
  }
LABEL_57:
  int v29 = *(_DWORD *)(a2 + 64);
  v3 |= 0x200u;
  *(_DWORD *)(result + 132) = v3;
  *(_DWORD *)(result + 64) = v29;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x400) == 0)
  {
LABEL_31:
    if ((v2 & 0x10000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_59;
  }
LABEL_58:
  int v30 = *(_DWORD *)(a2 + 68);
  v3 |= 0x400u;
  *(_DWORD *)(result + 132) = v3;
  *(_DWORD *)(result + 68) = v30;
  int v2 = *(_DWORD *)(a2 + 132);
  if ((v2 & 0x10000000) == 0)
  {
LABEL_32:
    if ((v2 & 0x2000000) == 0) {
      return result;
    }
LABEL_60:
    char v32 = *(unsigned char *)(a2 + 125);
    *(_DWORD *)(result + 132) = v3 | 0x2000000;
    *(unsigned char *)(result + 125) = v32;
    return result;
  }
LABEL_59:
  char v31 = *(unsigned char *)(a2 + 128);
  v3 |= 0x10000000u;
  *(_DWORD *)(result + 132) = v3;
  *(unsigned char *)(result + 128) = v31;
  if ((*(_DWORD *)(a2 + 132) & 0x2000000) != 0) {
    goto LABEL_60;
  }
  return result;
}

uint64_t sub_101683430(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x20) != 0)
  {
    PB::TextFormatter::format(this, "configSuddenTransitionDurationThreshold", *(float *)(a1 + 48));
    int v5 = *(_DWORD *)(a1 + 132);
    if ((v5 & 0x40) == 0)
    {
LABEL_3:
      if ((v5 & 0x80) == 0) {
        goto LABEL_4;
      }
      goto LABEL_36;
    }
  }
  else if ((v5 & 0x40) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "configTransitionEndSpeedThreshold", *(float *)(a1 + 52));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x80) == 0)
  {
LABEL_4:
    if ((v5 & 0x100) == 0) {
      goto LABEL_5;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "configTransitionStartSpeedThreshold", *(float *)(a1 + 56));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x100) == 0)
  {
LABEL_5:
    if ((v5 & 0x200) == 0) {
      goto LABEL_6;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "deltaTriggerTime", *(_DWORD *)(a1 + 60));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x200) == 0)
  {
LABEL_6:
    if ((v5 & 0x400) == 0) {
      goto LABEL_7;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "gpsSpeedMetersPerSecond", *(float *)(a1 + 64));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x400) == 0)
  {
LABEL_7:
    if ((v5 & 1) == 0) {
      goto LABEL_8;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "gpsSpeedMilesPerHour", *(float *)(a1 + 68));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 1) == 0)
  {
LABEL_8:
    if ((v5 & 0x800) == 0) {
      goto LABEL_9;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "gpsTimestamp", *(void *)(a1 + 8));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x800) == 0)
  {
LABEL_9:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(this, "highSpeedMetersPerSecondThreshold", *(float *)(a1 + 72));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_10:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(this, "isGPSDetected", *(unsigned char *)(a1 + 124));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_11:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(this, "isGPSDetectedDebug", *(unsigned char *)(a1 + 125));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_12:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(this, "isSuddenTransitionDetected", *(unsigned char *)(a1 + 126));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_13:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_46;
  }
LABEL_45:
  PB::TextFormatter::format(this, "isTransitionDetected", *(unsigned char *)(a1 + 127));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x1000) == 0)
  {
LABEL_14:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_47;
  }
LABEL_46:
  PB::TextFormatter::format(this, "lastDetectedTransitionSpeedEnd", *(float *)(a1 + 76));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x2000) == 0)
  {
LABEL_15:
    if ((v5 & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_48;
  }
LABEL_47:
  PB::TextFormatter::format(this, "lastDetectedTransitionSpeedStart", *(float *)(a1 + 80));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 2) == 0)
  {
LABEL_16:
    if ((v5 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(this, "lastDetectedTransitionTimeEnd", *(void *)(a1 + 16));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 4) == 0)
  {
LABEL_17:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_50;
  }
LABEL_49:
  PB::TextFormatter::format(this, "lastDetectedTransitionTimeStart", *(void *)(a1 + 24));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_18:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_51;
  }
LABEL_50:
  PB::TextFormatter::format(this, "loggedAtEpoch", *(unsigned char *)(a1 + 128));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x4000) == 0)
  {
LABEL_19:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_52;
  }
LABEL_51:
  PB::TextFormatter::format(this, "lowSpeedMetersPerSecondThresold", *(float *)(a1 + 84));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x8000) == 0)
  {
LABEL_20:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_53;
  }
LABEL_52:
  PB::TextFormatter::format(this, "state", *(_DWORD *)(a1 + 88));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x10000) == 0)
  {
LABEL_21:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_54;
  }
LABEL_53:
  PB::TextFormatter::format(this, "streamEndSpeed", *(float *)(a1 + 92));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x20000) == 0)
  {
LABEL_22:
    if ((v5 & 8) == 0) {
      goto LABEL_23;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(this, "streamStartSpeed", *(float *)(a1 + 96));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 8) == 0)
  {
LABEL_23:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_56;
  }
LABEL_55:
  PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 32));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x40000) == 0)
  {
LABEL_24:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_57;
  }
LABEL_56:
  PB::TextFormatter::format(this, "transitionBaseDuration", *(float *)(a1 + 100));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x80000) == 0)
  {
LABEL_25:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_58;
  }
LABEL_57:
  PB::TextFormatter::format(this, "transitionDuration", *(float *)(a1 + 104));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x100000) == 0)
  {
LABEL_26:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_59;
  }
LABEL_58:
  PB::TextFormatter::format(this, "transitionEndSpeed", *(float *)(a1 + 108));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x200000) == 0)
  {
LABEL_27:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_60;
  }
LABEL_59:
  PB::TextFormatter::format(this, "transitionEpsilonDuration", *(float *)(a1 + 112));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x400000) == 0)
  {
LABEL_28:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_61;
  }
LABEL_60:
  PB::TextFormatter::format(this, "transitionSpeedStart", *(float *)(a1 + 116));
  int v5 = *(_DWORD *)(a1 + 132);
  if ((v5 & 0x800000) == 0)
  {
LABEL_29:
    if ((v5 & 0x10) == 0) {
      goto LABEL_31;
    }
    goto LABEL_30;
  }
LABEL_61:
  PB::TextFormatter::format(this, "transitionStartSpeed", *(float *)(a1 + 120));
  if ((*(_DWORD *)(a1 + 132) & 0x10) != 0) {
LABEL_30:
  }
    PB::TextFormatter::format(this, "transitionTimeStart", *(void *)(a1 + 40));
LABEL_31:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101683814(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((int)(v11 >> 3) > 200)
      {
        switch((int)v20)
        {
          case 201:
            *(_DWORD *)(a1 + 132) |= 8u;
            unint64_t v23 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v24 = *(void *)this;
            if (v23 > 0xFFFFFFFFFFFFFFF5 || v23 + 10 > v2)
            {
              char v74 = 0;
              unsigned int v75 = 0;
              uint64_t v27 = 0;
              if (v2 <= v23) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v23)
                {
                  uint64_t v27 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_208;
                }
                unint64_t v76 = v23++;
                char v77 = *(unsigned char *)(v24 + v76);
                *((void *)this + 1) = v23;
                v27 |= (unint64_t)(v77 & 0x7F) << v74;
                if ((v77 & 0x80) == 0) {
                  break;
                }
                v74 += 7;
                BOOL v14 = v75++ > 8;
                if (v14)
                {
                  uint64_t v27 = 0;
LABEL_207:
                  unint64_t v2 = v76 + 1;
                  goto LABEL_208;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v27 = 0;
              }
              goto LABEL_207;
            }
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v27 = 0;
            do
            {
              unint64_t v2 = v23 + 1;
              *((void *)this + 1) = v23 + 1;
              char v28 = *(unsigned char *)(v24 + v23);
              v27 |= (unint64_t)(v28 & 0x7F) << v25;
              if ((v28 & 0x80) == 0) {
                goto LABEL_208;
              }
              v25 += 7;
              unint64_t v23 = v2;
              BOOL v14 = v26++ > 8;
            }
            while (!v14);
            uint64_t v27 = 0;
LABEL_208:
            *(void *)(a1 + 32) = v27;
            break;
          case 202:
            *(_DWORD *)(a1 + 132) |= 0x1000000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 >= *((void *)this + 2))
            {
              BOOL v44 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              int v43 = *(unsigned __int8 *)(*(void *)this + v2++);
              *((void *)this + 1) = v2;
              BOOL v44 = v43 != 0;
            }
            *(unsigned char *)(a1 + 124) = v44;
            break;
          case 203:
            *(_DWORD *)(a1 + 132) |= 0x8000u;
            unint64_t v45 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v46 = *(void *)this;
            if (v45 > 0xFFFFFFFFFFFFFFF5 || v45 + 10 > v2)
            {
              char v86 = 0;
              unsigned int v87 = 0;
              uint64_t v49 = 0;
              if (v2 <= v45) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v45)
                {
                  LODWORD(v49) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_223;
                }
                unint64_t v88 = v45++;
                char v89 = *(unsigned char *)(v46 + v88);
                *((void *)this + 1) = v45;
                v49 |= (unint64_t)(v89 & 0x7F) << v86;
                if ((v89 & 0x80) == 0) {
                  break;
                }
                v86 += 7;
                BOOL v14 = v87++ > 8;
                if (v14)
                {
                  LODWORD(v49) = 0;
LABEL_222:
                  unint64_t v2 = v88 + 1;
                  goto LABEL_223;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v49) = 0;
              }
              goto LABEL_222;
            }
            char v47 = 0;
            unsigned int v48 = 0;
            uint64_t v49 = 0;
            do
            {
              unint64_t v2 = v45 + 1;
              *((void *)this + 1) = v45 + 1;
              char v50 = *(unsigned char *)(v46 + v45);
              v49 |= (unint64_t)(v50 & 0x7F) << v47;
              if ((v50 & 0x80) == 0) {
                goto LABEL_223;
              }
              v47 += 7;
              unint64_t v45 = v2;
              BOOL v14 = v48++ > 8;
            }
            while (!v14);
            LODWORD(v49) = 0;
LABEL_223:
            *(_DWORD *)(a1 + 88) = v49;
            break;
          case 204:
            *(_DWORD *)(a1 + 132) |= 0x10u;
            unint64_t v51 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v52 = *(void *)this;
            if (v51 > 0xFFFFFFFFFFFFFFF5 || v51 + 10 > v2)
            {
              char v90 = 0;
              unsigned int v91 = 0;
              uint64_t v55 = 0;
              if (v2 <= v51) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v51)
                {
                  uint64_t v55 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_228;
                }
                unint64_t v92 = v51++;
                char v93 = *(unsigned char *)(v52 + v92);
                *((void *)this + 1) = v51;
                v55 |= (unint64_t)(v93 & 0x7F) << v90;
                if ((v93 & 0x80) == 0) {
                  break;
                }
                v90 += 7;
                BOOL v14 = v91++ > 8;
                if (v14)
                {
                  uint64_t v55 = 0;
LABEL_227:
                  unint64_t v2 = v92 + 1;
                  goto LABEL_228;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v55 = 0;
              }
              goto LABEL_227;
            }
            char v53 = 0;
            unsigned int v54 = 0;
            uint64_t v55 = 0;
            do
            {
              unint64_t v2 = v51 + 1;
              *((void *)this + 1) = v51 + 1;
              char v56 = *(unsigned char *)(v52 + v51);
              v55 |= (unint64_t)(v56 & 0x7F) << v53;
              if ((v56 & 0x80) == 0) {
                goto LABEL_228;
              }
              v53 += 7;
              unint64_t v51 = v2;
              BOOL v14 = v54++ > 8;
            }
            while (!v14);
            uint64_t v55 = 0;
LABEL_228:
            *(void *)(a1 + 40) = v55;
            break;
          case 205:
            *(_DWORD *)(a1 + 132) |= 0x400000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
              goto LABEL_137;
            }
            *(_DWORD *)(a1 + 116) = *(_DWORD *)(*(void *)this + v2);
            goto LABEL_198;
          case 206:
            *(_DWORD *)(a1 + 132) |= 4u;
            unint64_t v57 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v58 = *(void *)this;
            if (v57 > 0xFFFFFFFFFFFFFFF5 || v57 + 10 > v2)
            {
              char v94 = 0;
              unsigned int v95 = 0;
              uint64_t v61 = 0;
              if (v2 <= v57) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v57)
                {
                  uint64_t v61 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_233;
                }
                unint64_t v96 = v57++;
                char v97 = *(unsigned char *)(v58 + v96);
                *((void *)this + 1) = v57;
                v61 |= (unint64_t)(v97 & 0x7F) << v94;
                if ((v97 & 0x80) == 0) {
                  break;
                }
                v94 += 7;
                BOOL v14 = v95++ > 8;
                if (v14)
                {
                  uint64_t v61 = 0;
LABEL_232:
                  unint64_t v2 = v96 + 1;
                  goto LABEL_233;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v61 = 0;
              }
              goto LABEL_232;
            }
            char v59 = 0;
            unsigned int v60 = 0;
            uint64_t v61 = 0;
            do
            {
              unint64_t v2 = v57 + 1;
              *((void *)this + 1) = v57 + 1;
              char v62 = *(unsigned char *)(v58 + v57);
              v61 |= (unint64_t)(v62 & 0x7F) << v59;
              if ((v62 & 0x80) == 0) {
                goto LABEL_233;
              }
              v59 += 7;
              unint64_t v57 = v2;
              BOOL v14 = v60++ > 8;
            }
            while (!v14);
            uint64_t v61 = 0;
LABEL_233:
            *(void *)(a1 + 24) = v61;
            break;
          case 207:
            *(_DWORD *)(a1 + 132) |= 0x2000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
              goto LABEL_137;
            }
            *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v2);
            goto LABEL_198;
          case 208:
            *(_DWORD *)(a1 + 132) |= 2u;
            unint64_t v63 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v64 = *(void *)this;
            if (v63 > 0xFFFFFFFFFFFFFFF5 || v63 + 10 > v2)
            {
              char v98 = 0;
              unsigned int v99 = 0;
              uint64_t v67 = 0;
              if (v2 <= v63) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v63)
                {
                  uint64_t v67 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_238;
                }
                unint64_t v100 = v63++;
                char v101 = *(unsigned char *)(v64 + v100);
                *((void *)this + 1) = v63;
                v67 |= (unint64_t)(v101 & 0x7F) << v98;
                if ((v101 & 0x80) == 0) {
                  break;
                }
                v98 += 7;
                BOOL v14 = v99++ > 8;
                if (v14)
                {
                  uint64_t v67 = 0;
LABEL_237:
                  unint64_t v2 = v100 + 1;
                  goto LABEL_238;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v67 = 0;
              }
              goto LABEL_237;
            }
            char v65 = 0;
            unsigned int v66 = 0;
            uint64_t v67 = 0;
            do
            {
              unint64_t v2 = v63 + 1;
              *((void *)this + 1) = v63 + 1;
              char v68 = *(unsigned char *)(v64 + v63);
              v67 |= (unint64_t)(v68 & 0x7F) << v65;
              if ((v68 & 0x80) == 0) {
                goto LABEL_238;
              }
              v65 += 7;
              unint64_t v63 = v2;
              BOOL v14 = v66++ > 8;
            }
            while (!v14);
            uint64_t v67 = 0;
LABEL_238:
            *(void *)(a1 + 16) = v67;
            break;
          case 209:
            *(_DWORD *)(a1 + 132) |= 0x1000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2))
            {
LABEL_137:
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v2);
LABEL_198:
              unint64_t v2 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v2;
            }
            break;
          default:
            switch((int)v20)
            {
              case 301:
                *(_DWORD *)(a1 + 132) |= 1u;
                unint64_t v29 = *((void *)this + 1);
                unint64_t v2 = *((void *)this + 2);
                uint64_t v30 = *(void *)this;
                if (v29 > 0xFFFFFFFFFFFFFFF5 || v29 + 10 > v2)
                {
                  char v78 = 0;
                  unsigned int v79 = 0;
                  uint64_t v33 = 0;
                  if (v2 <= v29) {
                    unint64_t v2 = *((void *)this + 1);
                  }
                  while (1)
                  {
                    if (v2 == v29)
                    {
                      uint64_t v33 = 0;
                      *((unsigned char *)this + 24) = 1;
                      goto LABEL_213;
                    }
                    unint64_t v80 = v29++;
                    char v81 = *(unsigned char *)(v30 + v80);
                    *((void *)this + 1) = v29;
                    v33 |= (unint64_t)(v81 & 0x7F) << v78;
                    if ((v81 & 0x80) == 0) {
                      break;
                    }
                    v78 += 7;
                    BOOL v14 = v79++ > 8;
                    if (v14)
                    {
                      uint64_t v33 = 0;
LABEL_212:
                      unint64_t v2 = v80 + 1;
                      goto LABEL_213;
                    }
                  }
                  if (*((unsigned char *)this + 24)) {
                    uint64_t v33 = 0;
                  }
                  goto LABEL_212;
                }
                char v31 = 0;
                unsigned int v32 = 0;
                uint64_t v33 = 0;
                do
                {
                  unint64_t v2 = v29 + 1;
                  *((void *)this + 1) = v29 + 1;
                  char v34 = *(unsigned char *)(v30 + v29);
                  v33 |= (unint64_t)(v34 & 0x7F) << v31;
                  if ((v34 & 0x80) == 0) {
                    goto LABEL_213;
                  }
                  v31 += 7;
                  unint64_t v29 = v2;
                  BOOL v14 = v32++ > 8;
                }
                while (!v14);
                uint64_t v33 = 0;
LABEL_213:
                *(void *)(a1 + 8) = v33;
                break;
              case 302:
                *(_DWORD *)(a1 + 132) |= 0x200u;
                unint64_t v2 = *((void *)this + 1);
                if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                  goto LABEL_137;
                }
                *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v2);
                goto LABEL_198;
              case 303:
                *(_DWORD *)(a1 + 132) |= 0x400u;
                unint64_t v2 = *((void *)this + 1);
                if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                  goto LABEL_137;
                }
                *(_DWORD *)(a1 + 68) = *(_DWORD *)(*(void *)this + v2);
                goto LABEL_198;
              case 304:
                *(_DWORD *)(a1 + 132) |= 0x10000000u;
                unint64_t v2 = *((void *)this + 1);
                if (v2 >= *((void *)this + 2))
                {
                  BOOL v70 = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  int v69 = *(unsigned __int8 *)(*(void *)this + v2++);
                  *((void *)this + 1) = v2;
                  BOOL v70 = v69 != 0;
                }
                *(unsigned char *)(a1 + 128) = v70;
                goto LABEL_199;
              case 305:
                *(_DWORD *)(a1 + 132) |= 0x2000000u;
                unint64_t v2 = *((void *)this + 1);
                if (v2 >= *((void *)this + 2))
                {
                  BOOL v72 = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  int v71 = *(unsigned __int8 *)(*(void *)this + v2++);
                  *((void *)this + 1) = v2;
                  BOOL v72 = v71 != 0;
                }
                *(unsigned char *)(a1 + 125) = v72;
                goto LABEL_199;
              default:
LABEL_127:
                uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
                if (!result) {
                  return result;
                }
                unint64_t v2 = *((void *)this + 1);
                goto LABEL_199;
            }
            break;
        }
      }
      else
      {
        switch((int)v20)
        {
          case 1:
            *(_DWORD *)(a1 + 132) |= 0x4000000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 >= *((void *)this + 2))
            {
              BOOL v22 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              int v21 = *(unsigned __int8 *)(*(void *)this + v2++);
              *((void *)this + 1) = v2;
              BOOL v22 = v21 != 0;
            }
            *(unsigned char *)(a1 + 126) = v22;
            break;
          case 2:
            *(_DWORD *)(a1 + 132) |= 0x8000000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 >= *((void *)this + 2))
            {
              BOOL v36 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              int v35 = *(unsigned __int8 *)(*(void *)this + v2++);
              *((void *)this + 1) = v2;
              BOOL v36 = v35 != 0;
            }
            *(unsigned char *)(a1 + 127) = v36;
            break;
          case 3:
            *(_DWORD *)(a1 + 132) |= 0x80000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
              goto LABEL_137;
            }
            *(_DWORD *)(a1 + 104) = *(_DWORD *)(*(void *)this + v2);
            goto LABEL_198;
          case 4:
            *(_DWORD *)(a1 + 132) |= 0x800000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
              goto LABEL_137;
            }
            *(_DWORD *)(a1 + 120) = *(_DWORD *)(*(void *)this + v2);
            goto LABEL_198;
          case 5:
            *(_DWORD *)(a1 + 132) |= 0x100000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
              goto LABEL_137;
            }
            *(_DWORD *)(a1 + 108) = *(_DWORD *)(*(void *)this + v2);
            goto LABEL_198;
          case 6:
            *(_DWORD *)(a1 + 132) |= 0x20000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
              goto LABEL_137;
            }
            *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v2);
            goto LABEL_198;
          case 7:
            *(_DWORD *)(a1 + 132) |= 0x10000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
              goto LABEL_137;
            }
            *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(void *)this + v2);
            goto LABEL_198;
          case 8:
            *(_DWORD *)(a1 + 132) |= 0x100u;
            unint64_t v37 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v38 = *(void *)this;
            if (v37 > 0xFFFFFFFFFFFFFFF5 || v37 + 10 > v2)
            {
              char v82 = 0;
              unsigned int v83 = 0;
              uint64_t v41 = 0;
              if (v2 <= v37) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v37)
                {
                  LODWORD(v41) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_218;
                }
                unint64_t v84 = v37++;
                char v85 = *(unsigned char *)(v38 + v84);
                *((void *)this + 1) = v37;
                v41 |= (unint64_t)(v85 & 0x7F) << v82;
                if ((v85 & 0x80) == 0) {
                  break;
                }
                v82 += 7;
                BOOL v14 = v83++ > 8;
                if (v14)
                {
                  LODWORD(v41) = 0;
LABEL_217:
                  unint64_t v2 = v84 + 1;
                  goto LABEL_218;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v41) = 0;
              }
              goto LABEL_217;
            }
            char v39 = 0;
            unsigned int v40 = 0;
            uint64_t v41 = 0;
            do
            {
              unint64_t v2 = v37 + 1;
              *((void *)this + 1) = v37 + 1;
              char v42 = *(unsigned char *)(v38 + v37);
              v41 |= (unint64_t)(v42 & 0x7F) << v39;
              if ((v42 & 0x80) == 0) {
                goto LABEL_218;
              }
              v39 += 7;
              unint64_t v37 = v2;
              BOOL v14 = v40++ > 8;
            }
            while (!v14);
            LODWORD(v41) = 0;
LABEL_218:
            *(_DWORD *)(a1 + 60) = v41;
            break;
          case 9:
            *(_DWORD *)(a1 + 132) |= 0x80u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
              goto LABEL_137;
            }
            *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v2);
            goto LABEL_198;
          case 10:
            *(_DWORD *)(a1 + 132) |= 0x40u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
              goto LABEL_137;
            }
            *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
            goto LABEL_198;
          case 11:
            *(_DWORD *)(a1 + 132) |= 0x20u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
              goto LABEL_137;
            }
            *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
            goto LABEL_198;
          default:
            switch((int)v20)
            {
              case 'e':
                *(_DWORD *)(a1 + 132) |= 0x800u;
                unint64_t v2 = *((void *)this + 1);
                if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                  goto LABEL_137;
                }
                *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v2);
                break;
              case 'f':
                *(_DWORD *)(a1 + 132) |= 0x4000u;
                unint64_t v2 = *((void *)this + 1);
                if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                  goto LABEL_137;
                }
                *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v2);
                break;
              case 'g':
                *(_DWORD *)(a1 + 132) |= 0x200000u;
                unint64_t v2 = *((void *)this + 1);
                if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                  goto LABEL_137;
                }
                *(_DWORD *)(a1 + 112) = *(_DWORD *)(*(void *)this + v2);
                break;
              case 'h':
                *(_DWORD *)(a1 + 132) |= 0x40000u;
                unint64_t v2 = *((void *)this + 1);
                if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                  goto LABEL_137;
                }
                *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v2);
                break;
              default:
                goto LABEL_127;
            }
            goto LABEL_198;
        }
      }
LABEL_199:
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10168461C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 132);
  if ((v4 & 0x4000000) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(unsigned char *)(result + 126), 1u);
    int v4 = *(_DWORD *)(v3 + 132);
    if ((v4 & 0x8000000) == 0)
    {
LABEL_3:
      if ((v4 & 0x80000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_33;
    }
  }
  else if ((v4 & 0x8000000) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 127), 2u);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x80000) == 0)
  {
LABEL_4:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 104), 3u);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x800000) == 0)
  {
LABEL_5:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 120), 4u);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x100000) == 0)
  {
LABEL_6:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 108), 5u);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x20000) == 0)
  {
LABEL_7:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 96), 6u);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x10000) == 0)
  {
LABEL_8:
    if ((v4 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 92), 7u);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x100) == 0)
  {
LABEL_9:
    if ((v4 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 60), 8u);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x80) == 0)
  {
LABEL_10:
    if ((v4 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56), 9u);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x40) == 0)
  {
LABEL_11:
    if ((v4 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52), 0xAu);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x20) == 0)
  {
LABEL_12:
    if ((v4 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48), 0xBu);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x800) == 0)
  {
LABEL_13:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72), 0x65u);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x4000) == 0)
  {
LABEL_14:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 84), 0x66u);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x200000) == 0)
  {
LABEL_15:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 112), 0x67u);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x40000) == 0)
  {
LABEL_16:
    if ((v4 & 8) == 0) {
      goto LABEL_17;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 100), 0x68u);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 8) == 0)
  {
LABEL_17:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 32), 0xC9u);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_18:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 124), 0xCAu);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x8000) == 0)
  {
LABEL_19:
    if ((v4 & 0x10) == 0) {
      goto LABEL_20;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 88), 0xCBu);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x10) == 0)
  {
LABEL_20:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 40), 0xCCu);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x400000) == 0)
  {
LABEL_21:
    if ((v4 & 4) == 0) {
      goto LABEL_22;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 116), 0xCDu);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 4) == 0)
  {
LABEL_22:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 24), 0xCEu);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x2000) == 0)
  {
LABEL_23:
    if ((v4 & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80), 0xCFu);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 2) == 0)
  {
LABEL_24:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 16), 0xD0u);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x1000) == 0)
  {
LABEL_25:
    if ((v4 & 1) == 0) {
      goto LABEL_26;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76), 0xD1u);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 1) == 0)
  {
LABEL_26:
    if ((v4 & 0x200) == 0) {
      goto LABEL_27;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 8), 0x12Du);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x200) == 0)
  {
LABEL_27:
    if ((v4 & 0x400) == 0) {
      goto LABEL_28;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64), 0x12Eu);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x400) == 0)
  {
LABEL_28:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_29;
    }
LABEL_58:
    uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 128), 0x130u);
    if ((*(_DWORD *)(v3 + 132) & 0x2000000) == 0) {
      return result;
    }
    goto LABEL_59;
  }
LABEL_57:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 68), 0x12Fu);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x10000000) != 0) {
    goto LABEL_58;
  }
LABEL_29:
  if ((v4 & 0x2000000) == 0) {
    return result;
  }
LABEL_59:
  char v5 = *(unsigned char *)(v3 + 125);

  return PB::Writer::write(this, v5, 0x131u);
}

uint64_t sub_101684980(uint64_t result)
{
  *(void *)uint64_t result = &off_102333F00;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

void sub_1016849A8(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_1016849E0(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102333F00;
  *(_DWORD *)(result + 64) = 0;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x40) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 44);
    __int16 v3 = 64;
    *(_WORD *)(result + 64) = 64;
    *(_DWORD *)(result + 44) = v4;
    __int16 v2 = *(_WORD *)(a2 + 64);
    if ((v2 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 0x10) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 36);
    v3 |= 0x10u;
    *(_WORD *)(result + 64) = v3;
    *(_DWORD *)(result + 36) = v5;
    __int16 v2 = *(_WORD *)(a2 + 64);
  }
LABEL_6:
  if ((v2 & 0x20) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 40);
    v3 |= 0x20u;
    *(_WORD *)(result + 64) = v3;
    *(_DWORD *)(result + 40) = v6;
    __int16 v2 = *(_WORD *)(a2 + 64);
    if ((v2 & 8) == 0)
    {
LABEL_8:
      if ((v2 & 4) == 0) {
        goto LABEL_9;
      }
      goto LABEL_19;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 32);
  v3 |= 8u;
  *(_WORD *)(result + 64) = v3;
  *(_DWORD *)(result + 32) = v7;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 4) == 0)
  {
LABEL_9:
    if ((v2 & 0x800) == 0) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t v8 = *(void *)(a2 + 24);
  v3 |= 4u;
  *(_WORD *)(result + 64) = v3;
  *(void *)(result + 24) = v8;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x800) == 0)
  {
LABEL_10:
    if ((v2 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_21;
  }
LABEL_20:
  char v9 = *(unsigned char *)(a2 + 61);
  v3 |= 0x800u;
  *(_WORD *)(result + 64) = v3;
  *(unsigned char *)(result + 61) = v9;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x400) == 0)
  {
LABEL_11:
    if ((v2 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_21:
  char v10 = *(unsigned char *)(a2 + 60);
  v3 |= 0x400u;
  *(_WORD *)(result + 64) = v3;
  *(unsigned char *)(result + 60) = v10;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 1) == 0)
  {
LABEL_12:
    if ((v2 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t v11 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(result + 64) = v3;
  *(void *)(result + 8) = v11;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 2) == 0)
  {
LABEL_13:
    if ((v2 & 0x200) == 0) {
      goto LABEL_14;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t v12 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_WORD *)(result + 64) = v3;
  *(void *)(result + 16) = v12;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x200) == 0)
  {
LABEL_14:
    if ((v2 & 0x100) == 0) {
      goto LABEL_15;
    }
    goto LABEL_25;
  }
LABEL_24:
  int v13 = *(_DWORD *)(a2 + 56);
  v3 |= 0x200u;
  *(_WORD *)(result + 64) = v3;
  *(_DWORD *)(result + 56) = v13;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x100) == 0)
  {
LABEL_15:
    if ((v2 & 0x80) == 0) {
      return result;
    }
LABEL_26:
    int v15 = *(_DWORD *)(a2 + 48);
    *(_WORD *)(result + 64) = v3 | 0x80;
    *(_DWORD *)(result + 48) = v15;
    return result;
  }
LABEL_25:
  int v14 = *(_DWORD *)(a2 + 52);
  v3 |= 0x100u;
  *(_WORD *)(result + 64) = v3;
  *(_DWORD *)(result + 52) = v14;
  if ((*(_WORD *)(a2 + 64) & 0x80) != 0) {
    goto LABEL_26;
  }
  return result;
}

uint64_t sub_101684B5C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 8) != 0)
  {
    PB::TextFormatter::format(this, "autocorrelationRangeValCriticalThreshold", *(float *)(a1 + 32));
    __int16 v5 = *(_WORD *)(a1 + 64);
    if ((v5 & 0x10) == 0)
    {
LABEL_3:
      if ((v5 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v5 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "autocorrelationRangeValThreshold", *(float *)(a1 + 36));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x20) == 0)
  {
LABEL_4:
    if ((v5 & 0x40) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "autocorrelationTimeVariationCriticalThreshold", *(_DWORD *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x40) == 0)
  {
LABEL_5:
    if ((v5 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "autocorrelationTimeVariationThreshold", *(_DWORD *)(a1 + 44));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 1) == 0)
  {
LABEL_6:
    if ((v5 & 2) == 0) {
      goto LABEL_7;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "epochFirstTimestamp", *(void *)(a1 + 8));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 2) == 0)
  {
LABEL_7:
    if ((v5 & 0x400) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "epochLastTimestamp", *(void *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x400) == 0)
  {
LABEL_8:
    if ((v5 & 0x800) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "isCriticalFP", *(unsigned char *)(a1 + 60));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x800) == 0)
  {
LABEL_9:
    if ((v5 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "isPeriodic", *(unsigned char *)(a1 + 61));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x80) == 0)
  {
LABEL_10:
    if ((v5 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "numDmSamplesEpoch", *(_DWORD *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x100) == 0)
  {
LABEL_11:
    if ((v5 & 0x200) == 0) {
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "rangeVal", *(float *)(a1 + 52));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x200) == 0)
  {
LABEL_12:
    if ((v5 & 4) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_27:
  PB::TextFormatter::format(this, "timeVariation", *(_DWORD *)(a1 + 56));
  if ((*(_WORD *)(a1 + 64) & 4) != 0) {
LABEL_13:
  }
    PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 24));
LABEL_14:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101684D20(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((int)(v11 >> 3) > 202)
      {
        switch((int)v20)
        {
          case 301:
            *(_WORD *)(a1 + 64) |= 1u;
            unint64_t v27 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v28 = *(void *)this;
            if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
            {
              char v72 = 0;
              unsigned int v73 = 0;
              uint64_t v31 = 0;
              if (v2 <= v27) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v27)
                {
                  uint64_t v31 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_155;
                }
                unint64_t v74 = v27++;
                char v75 = *(unsigned char *)(v28 + v74);
                *((void *)this + 1) = v27;
                v31 |= (unint64_t)(v75 & 0x7F) << v72;
                if ((v75 & 0x80) == 0) {
                  break;
                }
                v72 += 7;
                BOOL v14 = v73++ > 8;
                if (v14)
                {
                  uint64_t v31 = 0;
LABEL_154:
                  unint64_t v2 = v74 + 1;
                  goto LABEL_155;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v31 = 0;
              }
              goto LABEL_154;
            }
            char v29 = 0;
            unsigned int v30 = 0;
            uint64_t v31 = 0;
            do
            {
              unint64_t v2 = v27 + 1;
              *((void *)this + 1) = v27 + 1;
              char v32 = *(unsigned char *)(v28 + v27);
              v31 |= (unint64_t)(v32 & 0x7F) << v29;
              if ((v32 & 0x80) == 0) {
                goto LABEL_155;
              }
              v29 += 7;
              unint64_t v27 = v2;
              BOOL v14 = v30++ > 8;
            }
            while (!v14);
            uint64_t v31 = 0;
LABEL_155:
            *(void *)(a1 + 8) = v31;
            break;
          case 302:
            *(_WORD *)(a1 + 64) |= 2u;
            unint64_t v43 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v44 = *(void *)this;
            if (v43 > 0xFFFFFFFFFFFFFFF5 || v43 + 10 > v2)
            {
              char v80 = 0;
              unsigned int v81 = 0;
              uint64_t v47 = 0;
              if (v2 <= v43) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v43)
                {
                  uint64_t v47 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_165;
                }
                unint64_t v82 = v43++;
                char v83 = *(unsigned char *)(v44 + v82);
                *((void *)this + 1) = v43;
                v47 |= (unint64_t)(v83 & 0x7F) << v80;
                if ((v83 & 0x80) == 0) {
                  break;
                }
                v80 += 7;
                BOOL v14 = v81++ > 8;
                if (v14)
                {
                  uint64_t v47 = 0;
LABEL_164:
                  unint64_t v2 = v82 + 1;
                  goto LABEL_165;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v47 = 0;
              }
              goto LABEL_164;
            }
            char v45 = 0;
            unsigned int v46 = 0;
            uint64_t v47 = 0;
            do
            {
              unint64_t v2 = v43 + 1;
              *((void *)this + 1) = v43 + 1;
              char v48 = *(unsigned char *)(v44 + v43);
              v47 |= (unint64_t)(v48 & 0x7F) << v45;
              if ((v48 & 0x80) == 0) {
                goto LABEL_165;
              }
              v45 += 7;
              unint64_t v43 = v2;
              BOOL v14 = v46++ > 8;
            }
            while (!v14);
            uint64_t v47 = 0;
LABEL_165:
            *(void *)(a1 + 16) = v47;
            break;
          case 303:
            *(_WORD *)(a1 + 64) |= 0x200u;
            unint64_t v49 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v50 = *(void *)this;
            if (v49 > 0xFFFFFFFFFFFFFFF5 || v49 + 10 > v2)
            {
              char v84 = 0;
              unsigned int v85 = 0;
              uint64_t v53 = 0;
              if (v2 <= v49) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v49)
                {
                  LODWORD(v53) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_170;
                }
                unint64_t v86 = v49++;
                char v87 = *(unsigned char *)(v50 + v86);
                *((void *)this + 1) = v49;
                v53 |= (unint64_t)(v87 & 0x7F) << v84;
                if ((v87 & 0x80) == 0) {
                  break;
                }
                v84 += 7;
                BOOL v14 = v85++ > 8;
                if (v14)
                {
                  LODWORD(v53) = 0;
LABEL_169:
                  unint64_t v2 = v86 + 1;
                  goto LABEL_170;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v53) = 0;
              }
              goto LABEL_169;
            }
            char v51 = 0;
            unsigned int v52 = 0;
            uint64_t v53 = 0;
            do
            {
              unint64_t v2 = v49 + 1;
              *((void *)this + 1) = v49 + 1;
              char v54 = *(unsigned char *)(v50 + v49);
              v53 |= (unint64_t)(v54 & 0x7F) << v51;
              if ((v54 & 0x80) == 0) {
                goto LABEL_170;
              }
              v51 += 7;
              unint64_t v49 = v2;
              BOOL v14 = v52++ > 8;
            }
            while (!v14);
            LODWORD(v53) = 0;
LABEL_170:
            *(_DWORD *)(a1 + 56) = v53;
            break;
          case 304:
            *(_WORD *)(a1 + 64) |= 0x100u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
            {
              *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
LABEL_145:
              unint64_t v2 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v2;
            }
            else
            {
LABEL_74:
              *((unsigned char *)this + 24) = 1;
            }
            break;
          case 305:
            *(_WORD *)(a1 + 64) |= 0x80u;
            unint64_t v55 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v56 = *(void *)this;
            if (v55 > 0xFFFFFFFFFFFFFFF5 || v55 + 10 > v2)
            {
              char v88 = 0;
              unsigned int v89 = 0;
              uint64_t v59 = 0;
              if (v2 <= v55) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v55)
                {
                  LODWORD(v59) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_175;
                }
                unint64_t v90 = v55++;
                char v91 = *(unsigned char *)(v56 + v90);
                *((void *)this + 1) = v55;
                v59 |= (unint64_t)(v91 & 0x7F) << v88;
                if ((v91 & 0x80) == 0) {
                  break;
                }
                v88 += 7;
                BOOL v14 = v89++ > 8;
                if (v14)
                {
                  LODWORD(v59) = 0;
LABEL_174:
                  unint64_t v2 = v90 + 1;
                  goto LABEL_175;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v59) = 0;
              }
              goto LABEL_174;
            }
            char v57 = 0;
            unsigned int v58 = 0;
            uint64_t v59 = 0;
            do
            {
              unint64_t v2 = v55 + 1;
              *((void *)this + 1) = v55 + 1;
              char v60 = *(unsigned char *)(v56 + v55);
              v59 |= (unint64_t)(v60 & 0x7F) << v57;
              if ((v60 & 0x80) == 0) {
                goto LABEL_175;
              }
              v57 += 7;
              unint64_t v55 = v2;
              BOOL v14 = v58++ > 8;
            }
            while (!v14);
            LODWORD(v59) = 0;
LABEL_175:
            *(_DWORD *)(a1 + 48) = v59;
            break;
          default:
            if (v20 != 203) {
              goto LABEL_89;
            }
            *(_WORD *)(a1 + 64) |= 0x400u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 >= *((void *)this + 2))
            {
              BOOL v36 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              int v35 = *(unsigned __int8 *)(*(void *)this + v2++);
              *((void *)this + 1) = v2;
              BOOL v36 = v35 != 0;
            }
            *(unsigned char *)(a1 + 60) = v36;
            break;
        }
      }
      else
      {
        switch((int)v20)
        {
          case 'e':
            *(_WORD *)(a1 + 64) |= 0x40u;
            unint64_t v21 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v22 = *(void *)this;
            if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
            {
              char v68 = 0;
              unsigned int v69 = 0;
              uint64_t v25 = 0;
              if (v2 <= v21) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v21)
                {
                  LODWORD(v25) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_150;
                }
                unint64_t v70 = v21++;
                char v71 = *(unsigned char *)(v22 + v70);
                *((void *)this + 1) = v21;
                v25 |= (unint64_t)(v71 & 0x7F) << v68;
                if ((v71 & 0x80) == 0) {
                  break;
                }
                v68 += 7;
                BOOL v14 = v69++ > 8;
                if (v14)
                {
                  LODWORD(v25) = 0;
LABEL_149:
                  unint64_t v2 = v70 + 1;
                  goto LABEL_150;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v25) = 0;
              }
              goto LABEL_149;
            }
            char v23 = 0;
            unsigned int v24 = 0;
            uint64_t v25 = 0;
            do
            {
              unint64_t v2 = v21 + 1;
              *((void *)this + 1) = v21 + 1;
              char v26 = *(unsigned char *)(v22 + v21);
              v25 |= (unint64_t)(v26 & 0x7F) << v23;
              if ((v26 & 0x80) == 0) {
                goto LABEL_150;
              }
              v23 += 7;
              unint64_t v21 = v2;
              BOOL v14 = v24++ > 8;
            }
            while (!v14);
            LODWORD(v25) = 0;
LABEL_150:
            *(_DWORD *)(a1 + 44) = v25;
            break;
          case 'f':
            *(_WORD *)(a1 + 64) |= 0x10u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
              goto LABEL_74;
            }
            *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
            goto LABEL_145;
          case 'g':
            *(_WORD *)(a1 + 64) |= 0x20u;
            unint64_t v37 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v38 = *(void *)this;
            if (v37 > 0xFFFFFFFFFFFFFFF5 || v37 + 10 > v2)
            {
              char v76 = 0;
              unsigned int v77 = 0;
              uint64_t v41 = 0;
              if (v2 <= v37) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v37)
                {
                  LODWORD(v41) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_160;
                }
                unint64_t v78 = v37++;
                char v79 = *(unsigned char *)(v38 + v78);
                *((void *)this + 1) = v37;
                v41 |= (unint64_t)(v79 & 0x7F) << v76;
                if ((v79 & 0x80) == 0) {
                  break;
                }
                v76 += 7;
                BOOL v14 = v77++ > 8;
                if (v14)
                {
                  LODWORD(v41) = 0;
LABEL_159:
                  unint64_t v2 = v78 + 1;
                  goto LABEL_160;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v41) = 0;
              }
              goto LABEL_159;
            }
            char v39 = 0;
            unsigned int v40 = 0;
            uint64_t v41 = 0;
            do
            {
              unint64_t v2 = v37 + 1;
              *((void *)this + 1) = v37 + 1;
              char v42 = *(unsigned char *)(v38 + v37);
              v41 |= (unint64_t)(v42 & 0x7F) << v39;
              if ((v42 & 0x80) == 0) {
                goto LABEL_160;
              }
              v39 += 7;
              unint64_t v37 = v2;
              BOOL v14 = v40++ > 8;
            }
            while (!v14);
            LODWORD(v41) = 0;
LABEL_160:
            *(_DWORD *)(a1 + 40) = v41;
            break;
          case 'h':
            *(_WORD *)(a1 + 64) |= 8u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
              goto LABEL_74;
            }
            *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
            goto LABEL_145;
          default:
            if (v20 == 201)
            {
              *(_WORD *)(a1 + 64) |= 4u;
              unint64_t v61 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v62 = *(void *)this;
              if (v61 > 0xFFFFFFFFFFFFFFF5 || v61 + 10 > v2)
              {
                char v92 = 0;
                unsigned int v93 = 0;
                uint64_t v65 = 0;
                if (v2 <= v61) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v61)
                  {
                    uint64_t v65 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_180;
                  }
                  unint64_t v94 = v61++;
                  char v95 = *(unsigned char *)(v62 + v94);
                  *((void *)this + 1) = v61;
                  v65 |= (unint64_t)(v95 & 0x7F) << v92;
                  if ((v95 & 0x80) == 0) {
                    break;
                  }
                  v92 += 7;
                  BOOL v14 = v93++ > 8;
                  if (v14)
                  {
                    uint64_t v65 = 0;
                    goto LABEL_179;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v65 = 0;
                }
LABEL_179:
                unint64_t v2 = v94 + 1;
              }
              else
              {
                char v63 = 0;
                unsigned int v64 = 0;
                uint64_t v65 = 0;
                while (1)
                {
                  unint64_t v2 = v61 + 1;
                  *((void *)this + 1) = v61 + 1;
                  char v66 = *(unsigned char *)(v62 + v61);
                  v65 |= (unint64_t)(v66 & 0x7F) << v63;
                  if ((v66 & 0x80) == 0) {
                    break;
                  }
                  v63 += 7;
                  unint64_t v61 = v2;
                  BOOL v14 = v64++ > 8;
                  if (v14)
                  {
                    uint64_t v65 = 0;
                    break;
                  }
                }
              }
LABEL_180:
              *(void *)(a1 + 24) = v65;
            }
            else if (v20 == 202)
            {
              *(_WORD *)(a1 + 64) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v34 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v33 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v34 = v33 != 0;
              }
              *(unsigned char *)(a1 + 61) = v34;
            }
            else
            {
LABEL_89:
              uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
            }
            break;
        }
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_1016856BC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 64);
  if ((v4 & 0x40) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(result + 44), 0x65u);
    __int16 v4 = *(_WORD *)(v3 + 64);
    if ((v4 & 0x10) == 0)
    {
LABEL_3:
      if ((v4 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v4 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36), 0x66u);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x20) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 40), 0x67u);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32), 0x68u);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 4) == 0)
  {
LABEL_6:
    if ((v4 & 0x800) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 24), 0xC9u);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x800) == 0)
  {
LABEL_7:
    if ((v4 & 0x400) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 61), 0xCAu);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x400) == 0)
  {
LABEL_8:
    if ((v4 & 1) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 60), 0xCBu);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 1) == 0)
  {
LABEL_9:
    if ((v4 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 8), 0x12Du);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 2) == 0)
  {
LABEL_10:
    if ((v4 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 16), 0x12Eu);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x200) == 0)
  {
LABEL_11:
    if ((v4 & 0x100) == 0) {
      goto LABEL_12;
    }
LABEL_24:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52), 0x130u);
    if ((*(_WORD *)(v3 + 64) & 0x80) == 0) {
      return result;
    }
    goto LABEL_25;
  }
LABEL_23:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 56), 0x12Fu);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x100) != 0) {
    goto LABEL_24;
  }
LABEL_12:
  if ((v4 & 0x80) == 0) {
    return result;
  }
LABEL_25:
  int v5 = *(_DWORD *)(v3 + 48);

  return PB::Writer::writeVarInt(this, v5, 0x131u);
}

uint64_t sub_101685844(uint64_t result)
{
  *(void *)uint64_t result = &off_102333F38;
  *(_DWORD *)(result + 68) = 0;
  return result;
}

void sub_10168586C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_1016858A4(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102333F38;
  *(_DWORD *)(result + 68) = 0;
  int v2 = *(_DWORD *)(a2 + 68);
  if ((v2 & 4) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 20);
    int v3 = 4;
    *(_DWORD *)(result + 68) = 4;
    *(_DWORD *)(result + 20) = v4;
    int v2 = *(_DWORD *)(a2 + 68);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 16);
    v3 |= 2u;
    *(_DWORD *)(result + 68) = v3;
    *(_DWORD *)(result + 16) = v5;
    int v2 = *(_DWORD *)(a2 + 68);
  }
LABEL_6:
  if ((v2 & 8) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 24);
    v3 |= 8u;
    *(_DWORD *)(result + 68) = v3;
    *(_DWORD *)(result + 24) = v6;
    int v2 = *(_DWORD *)(a2 + 68);
    if ((v2 & 1) == 0)
    {
LABEL_8:
      if ((v2 & 0x800) == 0) {
        goto LABEL_9;
      }
      goto LABEL_28;
    }
  }
  else if ((v2 & 1) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_DWORD *)(result + 68) = v3;
  *(void *)(result + 8) = v7;
  int v2 = *(_DWORD *)(a2 + 68);
  if ((v2 & 0x800) == 0)
  {
LABEL_9:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_29;
  }
LABEL_28:
  char v8 = *(unsigned char *)(a2 + 56);
  v3 |= 0x800u;
  *(_DWORD *)(result + 68) = v3;
  *(unsigned char *)(result + 56) = v8;
  int v2 = *(_DWORD *)(a2 + 68);
  if ((v2 & 0x1000) == 0)
  {
LABEL_10:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_29:
  char v9 = *(unsigned char *)(a2 + 57);
  v3 |= 0x1000u;
  *(_DWORD *)(result + 68) = v3;
  *(unsigned char *)(result + 57) = v9;
  int v2 = *(_DWORD *)(a2 + 68);
  if ((v2 & 0x2000) == 0)
  {
LABEL_11:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }
LABEL_30:
  char v10 = *(unsigned char *)(a2 + 58);
  v3 |= 0x2000u;
  *(_DWORD *)(result + 68) = v3;
  *(unsigned char *)(result + 58) = v10;
  int v2 = *(_DWORD *)(a2 + 68);
  if ((v2 & 0x100000) == 0)
  {
LABEL_12:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_32;
  }
LABEL_31:
  char v11 = *(unsigned char *)(a2 + 65);
  v3 |= 0x100000u;
  *(_DWORD *)(result + 68) = v3;
  *(unsigned char *)(result + 65) = v11;
  int v2 = *(_DWORD *)(a2 + 68);
  if ((v2 & 0x40000) == 0)
  {
LABEL_13:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_33;
  }
LABEL_32:
  char v12 = *(unsigned char *)(a2 + 63);
  v3 |= 0x40000u;
  *(_DWORD *)(result + 68) = v3;
  *(unsigned char *)(result + 63) = v12;
  int v2 = *(_DWORD *)(a2 + 68);
  if ((v2 & 0x8000) == 0)
  {
LABEL_14:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_34;
  }
LABEL_33:
  char v13 = *(unsigned char *)(a2 + 60);
  v3 |= 0x8000u;
  *(_DWORD *)(result + 68) = v3;
  *(unsigned char *)(result + 60) = v13;
  int v2 = *(_DWORD *)(a2 + 68);
  if ((v2 & 0x4000) == 0)
  {
LABEL_15:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_35;
  }
LABEL_34:
  char v14 = *(unsigned char *)(a2 + 59);
  v3 |= 0x4000u;
  *(_DWORD *)(result + 68) = v3;
  *(unsigned char *)(result + 59) = v14;
  int v2 = *(_DWORD *)(a2 + 68);
  if ((v2 & 0x80000) == 0)
  {
LABEL_16:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_36;
  }
LABEL_35:
  char v15 = *(unsigned char *)(a2 + 64);
  v3 |= 0x80000u;
  *(_DWORD *)(result + 68) = v3;
  *(unsigned char *)(result + 64) = v15;
  int v2 = *(_DWORD *)(a2 + 68);
  if ((v2 & 0x10000) == 0)
  {
LABEL_17:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_37;
  }
LABEL_36:
  char v16 = *(unsigned char *)(a2 + 61);
  v3 |= 0x10000u;
  *(_DWORD *)(result + 68) = v3;
  *(unsigned char *)(result + 61) = v16;
  int v2 = *(_DWORD *)(a2 + 68);
  if ((v2 & 0x20000) == 0)
  {
LABEL_18:
    if ((v2 & 0x400) == 0) {
      goto LABEL_19;
    }
    goto LABEL_38;
  }
LABEL_37:
  char v17 = *(unsigned char *)(a2 + 62);
  v3 |= 0x20000u;
  *(_DWORD *)(result + 68) = v3;
  *(unsigned char *)(result + 62) = v17;
  int v2 = *(_DWORD *)(a2 + 68);
  if ((v2 & 0x400) == 0)
  {
LABEL_19:
    if ((v2 & 0x100) == 0) {
      goto LABEL_20;
    }
    goto LABEL_39;
  }
LABEL_38:
  int v18 = *(_DWORD *)(a2 + 52);
  v3 |= 0x400u;
  *(_DWORD *)(result + 68) = v3;
  *(_DWORD *)(result + 52) = v18;
  int v2 = *(_DWORD *)(a2 + 68);
  if ((v2 & 0x100) == 0)
  {
LABEL_20:
    if ((v2 & 0x20) == 0) {
      goto LABEL_21;
    }
    goto LABEL_40;
  }
LABEL_39:
  int v19 = *(_DWORD *)(a2 + 44);
  v3 |= 0x100u;
  *(_DWORD *)(result + 68) = v3;
  *(_DWORD *)(result + 44) = v19;
  int v2 = *(_DWORD *)(a2 + 68);
  if ((v2 & 0x20) == 0)
  {
LABEL_21:
    if ((v2 & 0x10) == 0) {
      goto LABEL_22;
    }
    goto LABEL_41;
  }
LABEL_40:
  int v20 = *(_DWORD *)(a2 + 32);
  v3 |= 0x20u;
  *(_DWORD *)(result + 68) = v3;
  *(_DWORD *)(result + 32) = v20;
  int v2 = *(_DWORD *)(a2 + 68);
  if ((v2 & 0x10) == 0)
  {
LABEL_22:
    if ((v2 & 0x200) == 0) {
      goto LABEL_23;
    }
    goto LABEL_42;
  }
LABEL_41:
  int v21 = *(_DWORD *)(a2 + 28);
  v3 |= 0x10u;
  *(_DWORD *)(result + 68) = v3;
  *(_DWORD *)(result + 28) = v21;
  int v2 = *(_DWORD *)(a2 + 68);
  if ((v2 & 0x200) == 0)
  {
LABEL_23:
    if ((v2 & 0x40) == 0) {
      goto LABEL_24;
    }
    goto LABEL_43;
  }
LABEL_42:
  int v22 = *(_DWORD *)(a2 + 48);
  v3 |= 0x200u;
  *(_DWORD *)(result + 68) = v3;
  *(_DWORD *)(result + 48) = v22;
  int v2 = *(_DWORD *)(a2 + 68);
  if ((v2 & 0x40) == 0)
  {
LABEL_24:
    if ((v2 & 0x80) == 0) {
      return result;
    }
LABEL_44:
    int v24 = *(_DWORD *)(a2 + 40);
    *(_DWORD *)(result + 68) = v3 | 0x80;
    *(_DWORD *)(result + 40) = v24;
    return result;
  }
LABEL_43:
  int v23 = *(_DWORD *)(a2 + 36);
  v3 |= 0x40u;
  *(_DWORD *)(result + 68) = v3;
  *(_DWORD *)(result + 36) = v23;
  if ((*(_DWORD *)(a2 + 68) & 0x80) != 0) {
    goto LABEL_44;
  }
  return result;
}

uint64_t sub_101685B1C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 0x800) != 0)
  {
    PB::TextFormatter::format(this, "crashDetectorDecision", *(unsigned char *)(a1 + 56));
    int v5 = *(_DWORD *)(a1 + 68);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_28;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "detectorPostTriggerTimeOffsetWindow", *(float *)(a1 + 16));
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "detectorPreTriggerTimeOffsetWindow", *(float *)(a1 + 20));
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 0x1000) == 0)
  {
LABEL_5:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(this, "earlyCrashDetectorDecision", *(unsigned char *)(a1 + 57));
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 8) == 0)
  {
LABEL_6:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "epochLatchingCount", *(float *)(a1 + 24));
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 0x2000) == 0)
  {
LABEL_7:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(this, "hasAudioInEpoch", *(unsigned char *)(a1 + 58));
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 0x4000) == 0)
  {
LABEL_8:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(this, "isAudio", *(unsigned char *)(a1 + 59));
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 0x8000) == 0)
  {
LABEL_9:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(this, "isBaro", *(unsigned char *)(a1 + 60));
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 0x10000) == 0)
  {
LABEL_10:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(this, "isDescalationDecided", *(unsigned char *)(a1 + 61));
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 0x20000) == 0)
  {
LABEL_11:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "isDescalationRequired", *(unsigned char *)(a1 + 62));
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 0x40000) == 0)
  {
LABEL_12:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "isFreeFall", *(unsigned char *)(a1 + 63));
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 0x80000) == 0)
  {
LABEL_13:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "isGPS", *(unsigned char *)(a1 + 64));
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 0x100000) == 0)
  {
LABEL_14:
    if ((v5 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "isPulse", *(unsigned char *)(a1 + 65));
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 0x10) == 0)
  {
LABEL_15:
    if ((v5 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "latchedIsAudio", *(_DWORD *)(a1 + 28));
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 0x20) == 0)
  {
LABEL_16:
    if ((v5 & 0x40) == 0) {
      goto LABEL_17;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "latchedIsBaro", *(_DWORD *)(a1 + 32));
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 0x40) == 0)
  {
LABEL_17:
    if ((v5 & 0x80) == 0) {
      goto LABEL_18;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(this, "latchedIsDescalationDecided", *(_DWORD *)(a1 + 36));
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 0x80) == 0)
  {
LABEL_18:
    if ((v5 & 0x100) == 0) {
      goto LABEL_19;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(this, "latchedIsDescalationRequired", *(_DWORD *)(a1 + 40));
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 0x100) == 0)
  {
LABEL_19:
    if ((v5 & 0x200) == 0) {
      goto LABEL_20;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(this, "latchedIsFreeFall", *(_DWORD *)(a1 + 44));
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 0x200) == 0)
  {
LABEL_20:
    if ((v5 & 0x400) == 0) {
      goto LABEL_21;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(this, "latchedIsGPS", *(_DWORD *)(a1 + 48));
  int v5 = *(_DWORD *)(a1 + 68);
  if ((v5 & 0x400) == 0)
  {
LABEL_21:
    if ((v5 & 1) == 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
LABEL_45:
  PB::TextFormatter::format(this, "latchedIsPulse", *(_DWORD *)(a1 + 52));
  if (*(_DWORD *)(a1 + 68)) {
LABEL_22:
  }
    PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 8));
LABEL_23:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101685E00(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  for (int i = *((unsigned __int8 *)this + 24); v2 < v3 && i == 0; int i = *((unsigned __int8 *)this + 24))
  {
    uint64_t v8 = *(void *)this;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      while (v3 != v2)
      {
        unint64_t v17 = v2 + 1;
        char v18 = *(unsigned char *)(v8 + v2);
        *((void *)this + 1) = v17;
        v11 |= (unint64_t)(v18 & 0x7F) << v15;
        if ((v18 & 0x80) == 0) {
          goto LABEL_20;
        }
        v15 += 7;
        unint64_t v2 = v17;
        if (v16++ >= 9)
        {
LABEL_19:
          unint64_t v11 = 0;
          goto LABEL_20;
        }
      }
      int i = 1;
      *((unsigned char *)this + 24) = 1;
      return i == 0;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)this + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
LABEL_20:
    if ((v11 & 7) == 4)
    {
      int i = 0;
      return i == 0;
    }
    unint64_t v20 = v11 >> 3;
    if ((int)(v11 >> 3) > 200)
    {
      if ((v11 >> 3) <= 0xC8)
      {
        switch((int)v20)
        {
          case 301:
            *(_DWORD *)(a1 + 68) |= 0x100000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 >= *((void *)this + 2))
            {
              BOOL v28 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              int v27 = *(unsigned __int8 *)(*(void *)this + v2++);
              *((void *)this + 1) = v2;
              BOOL v28 = v27 != 0;
            }
            *(unsigned char *)(a1 + 65) = v28;
            break;
          case 302:
            *(_DWORD *)(a1 + 68) |= 0x40000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 >= *((void *)this + 2))
            {
              BOOL v79 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              int v78 = *(unsigned __int8 *)(*(void *)this + v2++);
              *((void *)this + 1) = v2;
              BOOL v79 = v78 != 0;
            }
            *(unsigned char *)(a1 + 63) = v79;
            break;
          case 303:
            *(_DWORD *)(a1 + 68) |= 0x8000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 >= *((void *)this + 2))
            {
              BOOL v81 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              int v80 = *(unsigned __int8 *)(*(void *)this + v2++);
              *((void *)this + 1) = v2;
              BOOL v81 = v80 != 0;
            }
            *(unsigned char *)(a1 + 60) = v81;
            break;
          case 304:
            *(_DWORD *)(a1 + 68) |= 0x4000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 >= *((void *)this + 2))
            {
              BOOL v83 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              int v82 = *(unsigned __int8 *)(*(void *)this + v2++);
              *((void *)this + 1) = v2;
              BOOL v83 = v82 != 0;
            }
            *(unsigned char *)(a1 + 59) = v83;
            break;
          case 305:
            *(_DWORD *)(a1 + 68) |= 0x80000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 >= *((void *)this + 2))
            {
              BOOL v85 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              int v84 = *(unsigned __int8 *)(*(void *)this + v2++);
              *((void *)this + 1) = v2;
              BOOL v85 = v84 != 0;
            }
            *(unsigned char *)(a1 + 64) = v85;
            break;
          case 306:
            *(_DWORD *)(a1 + 68) |= 0x10000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 >= *((void *)this + 2))
            {
              BOOL v87 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              int v86 = *(unsigned __int8 *)(*(void *)this + v2++);
              *((void *)this + 1) = v2;
              BOOL v87 = v86 != 0;
            }
            *(unsigned char *)(a1 + 61) = v87;
            break;
          case 307:
            *(_DWORD *)(a1 + 68) |= 0x20000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 >= *((void *)this + 2))
            {
              BOOL v89 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              int v88 = *(unsigned __int8 *)(*(void *)this + v2++);
              *((void *)this + 1) = v2;
              BOOL v89 = v88 != 0;
            }
            *(unsigned char *)(a1 + 62) = v89;
            break;
          default:
            JUMPOUT(0);
        }
      }
      else
      {
        switch((int)v20)
        {
          case 401:
            *(_DWORD *)(a1 + 68) |= 0x400u;
            unint64_t v21 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v22 = *(void *)this;
            if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
            {
              char v94 = 0;
              unsigned int v95 = 0;
              uint64_t v25 = 0;
              if (v2 <= v21) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v21)
                {
                  LODWORD(v25) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_207;
                }
                unint64_t v96 = v21++;
                char v97 = *(unsigned char *)(v22 + v96);
                *((void *)this + 1) = v21;
                v25 |= (unint64_t)(v97 & 0x7F) << v94;
                if ((v97 & 0x80) == 0) {
                  break;
                }
                v94 += 7;
                BOOL v14 = v95++ > 8;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  goto LABEL_206;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v25) = 0;
              }
LABEL_206:
              unint64_t v2 = v96 + 1;
            }
            else
            {
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              while (1)
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  break;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
                if (v14)
                {
                  LODWORD(v25) = 0;
                  break;
                }
              }
            }
LABEL_207:
            *(_DWORD *)(a1 + 52) = v25;
            break;
          case 402:
            *(_DWORD *)(a1 + 68) |= 0x100u;
            unint64_t v42 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v43 = *(void *)this;
            if (v42 > 0xFFFFFFFFFFFFFFF5 || v42 + 10 > v2)
            {
              char v98 = 0;
              unsigned int v99 = 0;
              uint64_t v46 = 0;
              if (v2 <= v42) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v42)
                {
                  LODWORD(v46) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_212;
                }
                unint64_t v100 = v42++;
                char v101 = *(unsigned char *)(v43 + v100);
                *((void *)this + 1) = v42;
                v46 |= (unint64_t)(v101 & 0x7F) << v98;
                if ((v101 & 0x80) == 0) {
                  break;
                }
                v98 += 7;
                BOOL v14 = v99++ > 8;
                if (v14)
                {
                  LODWORD(v46) = 0;
                  goto LABEL_211;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v46) = 0;
              }
LABEL_211:
              unint64_t v2 = v100 + 1;
            }
            else
            {
              char v44 = 0;
              unsigned int v45 = 0;
              uint64_t v46 = 0;
              while (1)
              {
                unint64_t v2 = v42 + 1;
                *((void *)this + 1) = v42 + 1;
                char v47 = *(unsigned char *)(v43 + v42);
                v46 |= (unint64_t)(v47 & 0x7F) << v44;
                if ((v47 & 0x80) == 0) {
                  break;
                }
                v44 += 7;
                unint64_t v42 = v2;
                BOOL v14 = v45++ > 8;
                if (v14)
                {
                  LODWORD(v46) = 0;
                  break;
                }
              }
            }
LABEL_212:
            *(_DWORD *)(a1 + 44) = v46;
            break;
          case 403:
            *(_DWORD *)(a1 + 68) |= 0x20u;
            unint64_t v48 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v49 = *(void *)this;
            if (v48 > 0xFFFFFFFFFFFFFFF5 || v48 + 10 > v2)
            {
              char v102 = 0;
              unsigned int v103 = 0;
              uint64_t v52 = 0;
              if (v2 <= v48) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v48)
                {
                  LODWORD(v52) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_217;
                }
                unint64_t v104 = v48++;
                char v105 = *(unsigned char *)(v49 + v104);
                *((void *)this + 1) = v48;
                v52 |= (unint64_t)(v105 & 0x7F) << v102;
                if ((v105 & 0x80) == 0) {
                  break;
                }
                v102 += 7;
                BOOL v14 = v103++ > 8;
                if (v14)
                {
                  LODWORD(v52) = 0;
                  goto LABEL_216;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v52) = 0;
              }
LABEL_216:
              unint64_t v2 = v104 + 1;
            }
            else
            {
              char v50 = 0;
              unsigned int v51 = 0;
              uint64_t v52 = 0;
              while (1)
              {
                unint64_t v2 = v48 + 1;
                *((void *)this + 1) = v48 + 1;
                char v53 = *(unsigned char *)(v49 + v48);
                v52 |= (unint64_t)(v53 & 0x7F) << v50;
                if ((v53 & 0x80) == 0) {
                  break;
                }
                v50 += 7;
                unint64_t v48 = v2;
                BOOL v14 = v51++ > 8;
                if (v14)
                {
                  LODWORD(v52) = 0;
                  break;
                }
              }
            }
LABEL_217:
            *(_DWORD *)(a1 + 32) = v52;
            break;
          case 404:
            *(_DWORD *)(a1 + 68) |= 0x10u;
            unint64_t v54 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v55 = *(void *)this;
            if (v54 > 0xFFFFFFFFFFFFFFF5 || v54 + 10 > v2)
            {
              char v106 = 0;
              unsigned int v107 = 0;
              uint64_t v58 = 0;
              if (v2 <= v54) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v54)
                {
                  LODWORD(v58) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_222;
                }
                unint64_t v108 = v54++;
                char v109 = *(unsigned char *)(v55 + v108);
                *((void *)this + 1) = v54;
                v58 |= (unint64_t)(v109 & 0x7F) << v106;
                if ((v109 & 0x80) == 0) {
                  break;
                }
                v106 += 7;
                BOOL v14 = v107++ > 8;
                if (v14)
                {
                  LODWORD(v58) = 0;
                  goto LABEL_221;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v58) = 0;
              }
LABEL_221:
              unint64_t v2 = v108 + 1;
            }
            else
            {
              char v56 = 0;
              unsigned int v57 = 0;
              uint64_t v58 = 0;
              while (1)
              {
                unint64_t v2 = v54 + 1;
                *((void *)this + 1) = v54 + 1;
                char v59 = *(unsigned char *)(v55 + v54);
                v58 |= (unint64_t)(v59 & 0x7F) << v56;
                if ((v59 & 0x80) == 0) {
                  break;
                }
                v56 += 7;
                unint64_t v54 = v2;
                BOOL v14 = v57++ > 8;
                if (v14)
                {
                  LODWORD(v58) = 0;
                  break;
                }
              }
            }
LABEL_222:
            *(_DWORD *)(a1 + 28) = v58;
            break;
          case 405:
            *(_DWORD *)(a1 + 68) |= 0x200u;
            unint64_t v60 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v61 = *(void *)this;
            if (v60 > 0xFFFFFFFFFFFFFFF5 || v60 + 10 > v2)
            {
              char v110 = 0;
              unsigned int v111 = 0;
              uint64_t v64 = 0;
              if (v2 <= v60) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v60)
                {
                  LODWORD(v64) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_227;
                }
                unint64_t v112 = v60++;
                char v113 = *(unsigned char *)(v61 + v112);
                *((void *)this + 1) = v60;
                v64 |= (unint64_t)(v113 & 0x7F) << v110;
                if ((v113 & 0x80) == 0) {
                  break;
                }
                v110 += 7;
                BOOL v14 = v111++ > 8;
                if (v14)
                {
                  LODWORD(v64) = 0;
                  goto LABEL_226;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v64) = 0;
              }
LABEL_226:
              unint64_t v2 = v112 + 1;
            }
            else
            {
              char v62 = 0;
              unsigned int v63 = 0;
              uint64_t v64 = 0;
              while (1)
              {
                unint64_t v2 = v60 + 1;
                *((void *)this + 1) = v60 + 1;
                char v65 = *(unsigned char *)(v61 + v60);
                v64 |= (unint64_t)(v65 & 0x7F) << v62;
                if ((v65 & 0x80) == 0) {
                  break;
                }
                v62 += 7;
                unint64_t v60 = v2;
                BOOL v14 = v63++ > 8;
                if (v14)
                {
                  LODWORD(v64) = 0;
                  break;
                }
              }
            }
LABEL_227:
            *(_DWORD *)(a1 + 48) = v64;
            break;
          case 406:
            *(_DWORD *)(a1 + 68) |= 0x40u;
            unint64_t v66 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v67 = *(void *)this;
            if (v66 > 0xFFFFFFFFFFFFFFF5 || v66 + 10 > v2)
            {
              char v114 = 0;
              unsigned int v115 = 0;
              uint64_t v70 = 0;
              if (v2 <= v66) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v66)
                {
                  LODWORD(v70) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_232;
                }
                unint64_t v116 = v66++;
                char v117 = *(unsigned char *)(v67 + v116);
                *((void *)this + 1) = v66;
                v70 |= (unint64_t)(v117 & 0x7F) << v114;
                if ((v117 & 0x80) == 0) {
                  break;
                }
                v114 += 7;
                BOOL v14 = v115++ > 8;
                if (v14)
                {
                  LODWORD(v70) = 0;
                  goto LABEL_231;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v70) = 0;
              }
LABEL_231:
              unint64_t v2 = v116 + 1;
            }
            else
            {
              char v68 = 0;
              unsigned int v69 = 0;
              uint64_t v70 = 0;
              while (1)
              {
                unint64_t v2 = v66 + 1;
                *((void *)this + 1) = v66 + 1;
                char v71 = *(unsigned char *)(v67 + v66);
                v70 |= (unint64_t)(v71 & 0x7F) << v68;
                if ((v71 & 0x80) == 0) {
                  break;
                }
                v68 += 7;
                unint64_t v66 = v2;
                BOOL v14 = v69++ > 8;
                if (v14)
                {
                  LODWORD(v70) = 0;
                  break;
                }
              }
            }
LABEL_232:
            *(_DWORD *)(a1 + 36) = v70;
            break;
          case 407:
            *(_DWORD *)(a1 + 68) |= 0x80u;
            unint64_t v72 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v73 = *(void *)this;
            if (v72 > 0xFFFFFFFFFFFFFFF5 || v72 + 10 > v2)
            {
              char v118 = 0;
              unsigned int v119 = 0;
              uint64_t v76 = 0;
              if (v2 <= v72) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v72)
                {
                  LODWORD(v76) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_237;
                }
                unint64_t v120 = v72++;
                char v121 = *(unsigned char *)(v73 + v120);
                *((void *)this + 1) = v72;
                v76 |= (unint64_t)(v121 & 0x7F) << v118;
                if ((v121 & 0x80) == 0) {
                  break;
                }
                v118 += 7;
                BOOL v14 = v119++ > 8;
                if (v14)
                {
                  LODWORD(v76) = 0;
                  goto LABEL_236;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v76) = 0;
              }
LABEL_236:
              unint64_t v2 = v120 + 1;
            }
            else
            {
              char v74 = 0;
              unsigned int v75 = 0;
              uint64_t v76 = 0;
              while (1)
              {
                unint64_t v2 = v72 + 1;
                *((void *)this + 1) = v72 + 1;
                char v77 = *(unsigned char *)(v73 + v72);
                v76 |= (unint64_t)(v77 & 0x7F) << v74;
                if ((v77 & 0x80) == 0) {
                  break;
                }
                v74 += 7;
                unint64_t v72 = v2;
                BOOL v14 = v75++ > 8;
                if (v14)
                {
                  LODWORD(v76) = 0;
                  break;
                }
              }
            }
LABEL_237:
            *(_DWORD *)(a1 + 40) = v76;
            break;
          default:
            if (v20 != 201) {
              goto LABEL_64;
            }
            *(_DWORD *)(a1 + 68) |= 0x2000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 >= *((void *)this + 2))
            {
              BOOL v32 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              int v31 = *(unsigned __int8 *)(*(void *)this + v2++);
              *((void *)this + 1) = v2;
              BOOL v32 = v31 != 0;
            }
            *(unsigned char *)(a1 + 58) = v32;
            break;
        }
      }
      goto LABEL_238;
    }
    if ((int)v20 > 100)
    {
      switch(v20)
      {
        case 'e':
          *(_DWORD *)(a1 + 68) |= 1u;
          unint64_t v33 = *((void *)this + 1);
          unint64_t v2 = *((void *)this + 2);
          uint64_t v34 = *(void *)this;
          if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
          {
            char v90 = 0;
            unsigned int v91 = 0;
            uint64_t v37 = 0;
            if (v2 <= v33) {
              unint64_t v2 = *((void *)this + 1);
            }
            while (1)
            {
              if (v2 == v33)
              {
                uint64_t v37 = 0;
                *((unsigned char *)this + 24) = 1;
                goto LABEL_202;
              }
              unint64_t v92 = v33++;
              char v93 = *(unsigned char *)(v34 + v92);
              *((void *)this + 1) = v33;
              v37 |= (unint64_t)(v93 & 0x7F) << v90;
              if ((v93 & 0x80) == 0) {
                break;
              }
              v90 += 7;
              BOOL v14 = v91++ > 8;
              if (v14)
              {
                uint64_t v37 = 0;
                goto LABEL_201;
              }
            }
            if (*((unsigned char *)this + 24)) {
              uint64_t v37 = 0;
            }
LABEL_201:
            unint64_t v2 = v92 + 1;
          }
          else
          {
            char v35 = 0;
            unsigned int v36 = 0;
            uint64_t v37 = 0;
            while (1)
            {
              unint64_t v2 = v33 + 1;
              *((void *)this + 1) = v33 + 1;
              char v38 = *(unsigned char *)(v34 + v33);
              v37 |= (unint64_t)(v38 & 0x7F) << v35;
              if ((v38 & 0x80) == 0) {
                break;
              }
              v35 += 7;
              unint64_t v33 = v2;
              BOOL v14 = v36++ > 8;
              if (v14)
              {
                uint64_t v37 = 0;
                break;
              }
            }
          }
LABEL_202:
          *(void *)(a1 + 8) = v37;
          break;
        case 'f':
          *(_DWORD *)(a1 + 68) |= 0x800u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 >= *((void *)this + 2))
          {
            BOOL v40 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            int v39 = *(unsigned __int8 *)(*(void *)this + v2++);
            *((void *)this + 1) = v2;
            BOOL v40 = v39 != 0;
          }
          *(unsigned char *)(a1 + 56) = v40;
          break;
        case 'g':
          *(_DWORD *)(a1 + 68) |= 0x1000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 >= *((void *)this + 2))
          {
            BOOL v30 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            int v29 = *(unsigned __int8 *)(*(void *)this + v2++);
            *((void *)this + 1) = v2;
            BOOL v30 = v29 != 0;
          }
          *(unsigned char *)(a1 + 57) = v30;
          break;
        default:
LABEL_64:
          uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
    }
    else
    {
      switch(v20)
      {
        case 1:
          *(_DWORD *)(a1 + 68) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
            goto LABEL_197;
          }
          break;
        case 2:
          *(_DWORD *)(a1 + 68) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
            goto LABEL_197;
          }
          break;
        case 3:
          *(_DWORD *)(a1 + 68) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
LABEL_197:
            unint64_t v2 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v2;
            goto LABEL_238;
          }
          break;
        default:
          goto LABEL_64;
      }
      *((unsigned char *)this + 24) = 1;
    }
LABEL_238:
    unint64_t v3 = *((void *)this + 2);
  }
  return i == 0;
}

uint64_t sub_101686AE4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 68);
  if ((v4 & 4) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(result + 20), 1u);
    int v4 = *(_DWORD *)(v3 + 68);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_25;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16), 2u);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 8) == 0)
  {
LABEL_4:
    if ((v4 & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24), 3u);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 1) == 0)
  {
LABEL_5:
    if ((v4 & 0x800) == 0) {
      goto LABEL_6;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 8), 0x65u);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x800) == 0)
  {
LABEL_6:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 56), 0x66u);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x1000) == 0)
  {
LABEL_7:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 57), 0x67u);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x2000) == 0)
  {
LABEL_8:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 58), 0xC9u);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x100000) == 0)
  {
LABEL_9:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 65), 0x12Du);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x40000) == 0)
  {
LABEL_10:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 63), 0x12Eu);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x8000) == 0)
  {
LABEL_11:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 60), 0x12Fu);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x4000) == 0)
  {
LABEL_12:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 59), 0x130u);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x80000) == 0)
  {
LABEL_13:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 64), 0x131u);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x10000) == 0)
  {
LABEL_14:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 61), 0x132u);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x20000) == 0)
  {
LABEL_15:
    if ((v4 & 0x400) == 0) {
      goto LABEL_16;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 62), 0x133u);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x400) == 0)
  {
LABEL_16:
    if ((v4 & 0x100) == 0) {
      goto LABEL_17;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 52), 0x191u);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x100) == 0)
  {
LABEL_17:
    if ((v4 & 0x20) == 0) {
      goto LABEL_18;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 44), 0x192u);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x20) == 0)
  {
LABEL_18:
    if ((v4 & 0x10) == 0) {
      goto LABEL_19;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 32), 0x193u);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x10) == 0)
  {
LABEL_19:
    if ((v4 & 0x200) == 0) {
      goto LABEL_20;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 28), 0x194u);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x200) == 0)
  {
LABEL_20:
    if ((v4 & 0x40) == 0) {
      goto LABEL_21;
    }
LABEL_42:
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 36), 0x196u);
    if ((*(_DWORD *)(v3 + 68) & 0x80) == 0) {
      return result;
    }
    goto LABEL_43;
  }
LABEL_41:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 48), 0x195u);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x40) != 0) {
    goto LABEL_42;
  }
LABEL_21:
  if ((v4 & 0x80) == 0) {
    return result;
  }
LABEL_43:
  unsigned int v5 = *(_DWORD *)(v3 + 40);

  return PB::Writer::writeVarInt(this, v5, 0x197u);
}

uint64_t sub_101686D68(uint64_t result)
{
  *(void *)uint64_t result = &off_102333F70;
  *(_DWORD *)(result + 92) = 0;
  return result;
}

void sub_101686D90(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_101686DC8(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102333F70;
  *(_DWORD *)(result + 92) = 0;
  int v2 = *(_DWORD *)(a2 + 92);
  if ((v2 & 0x200) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 60);
    int v3 = 512;
    *(_DWORD *)(result + 92) = 512;
    *(_DWORD *)(result + 60) = v4;
    int v2 = *(_DWORD *)(a2 + 92);
    if ((v2 & 0x4000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 0x4000) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 80);
    v3 |= 0x4000u;
    *(_DWORD *)(result + 92) = v3;
    *(_DWORD *)(result + 80) = v5;
    int v2 = *(_DWORD *)(a2 + 92);
  }
LABEL_6:
  if ((v2 & 0x400) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 64);
    v3 |= 0x400u;
    *(_DWORD *)(result + 92) = v3;
    *(_DWORD *)(result + 64) = v6;
    int v2 = *(_DWORD *)(a2 + 92);
    if ((v2 & 0x8000) == 0)
    {
LABEL_8:
      if ((v2 & 4) == 0) {
        goto LABEL_9;
      }
      goto LABEL_26;
    }
  }
  else if ((v2 & 0x8000) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 84);
  v3 |= 0x8000u;
  *(_DWORD *)(result + 92) = v3;
  *(_DWORD *)(result + 84) = v7;
  int v2 = *(_DWORD *)(a2 + 92);
  if ((v2 & 4) == 0)
  {
LABEL_9:
    if ((v2 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v8 = *(void *)(a2 + 24);
  v3 |= 4u;
  *(_DWORD *)(result + 92) = v3;
  *(void *)(result + 24) = v8;
  int v2 = *(_DWORD *)(a2 + 92);
  if ((v2 & 8) == 0)
  {
LABEL_10:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t v9 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_DWORD *)(result + 92) = v3;
  *(void *)(result + 32) = v9;
  int v2 = *(_DWORD *)(a2 + 92);
  if ((v2 & 0x2000) == 0)
  {
LABEL_11:
    if ((v2 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_28:
  int v10 = *(_DWORD *)(a2 + 76);
  v3 |= 0x2000u;
  *(_DWORD *)(result + 92) = v3;
  *(_DWORD *)(result + 76) = v10;
  int v2 = *(_DWORD *)(a2 + 92);
  if ((v2 & 0x100) == 0)
  {
LABEL_12:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_30;
  }
LABEL_29:
  int v11 = *(_DWORD *)(a2 + 56);
  v3 |= 0x100u;
  *(_DWORD *)(result + 92) = v3;
  *(_DWORD *)(result + 56) = v11;
  int v2 = *(_DWORD *)(a2 + 92);
  if ((v2 & 0x40000) == 0)
  {
LABEL_13:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_31;
  }
LABEL_30:
  char v12 = *(unsigned char *)(a2 + 90);
  v3 |= 0x40000u;
  *(_DWORD *)(result + 92) = v3;
  *(unsigned char *)(result + 90) = v12;
  int v2 = *(_DWORD *)(a2 + 92);
  if ((v2 & 0x20000) == 0)
  {
LABEL_14:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_32;
  }
LABEL_31:
  char v13 = *(unsigned char *)(a2 + 89);
  v3 |= 0x20000u;
  *(_DWORD *)(result + 92) = v3;
  *(unsigned char *)(result + 89) = v13;
  int v2 = *(_DWORD *)(a2 + 92);
  if ((v2 & 0x1000) == 0)
  {
LABEL_15:
    if ((v2 & 0x800) == 0) {
      goto LABEL_16;
    }
    goto LABEL_33;
  }
LABEL_32:
  int v14 = *(_DWORD *)(a2 + 72);
  v3 |= 0x1000u;
  *(_DWORD *)(result + 92) = v3;
  *(_DWORD *)(result + 72) = v14;
  int v2 = *(_DWORD *)(a2 + 92);
  if ((v2 & 0x800) == 0)
  {
LABEL_16:
    if ((v2 & 2) == 0) {
      goto LABEL_17;
    }
    goto LABEL_34;
  }
LABEL_33:
  int v15 = *(_DWORD *)(a2 + 68);
  v3 |= 0x800u;
  *(_DWORD *)(result + 92) = v3;
  *(_DWORD *)(result + 68) = v15;
  int v2 = *(_DWORD *)(a2 + 92);
  if ((v2 & 2) == 0)
  {
LABEL_17:
    if ((v2 & 1) == 0) {
      goto LABEL_18;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t v16 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_DWORD *)(result + 92) = v3;
  *(void *)(result + 16) = v16;
  int v2 = *(_DWORD *)(a2 + 92);
  if ((v2 & 1) == 0)
  {
LABEL_18:
    if ((v2 & 0x10) == 0) {
      goto LABEL_19;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t v17 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_DWORD *)(result + 92) = v3;
  *(void *)(result + 8) = v17;
  int v2 = *(_DWORD *)(a2 + 92);
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x40) == 0) {
      goto LABEL_20;
    }
    goto LABEL_37;
  }
LABEL_36:
  int v18 = *(_DWORD *)(a2 + 40);
  v3 |= 0x10u;
  *(_DWORD *)(result + 92) = v3;
  *(_DWORD *)(result + 40) = v18;
  int v2 = *(_DWORD *)(a2 + 92);
  if ((v2 & 0x40) == 0)
  {
LABEL_20:
    if ((v2 & 0x80) == 0) {
      goto LABEL_21;
    }
    goto LABEL_38;
  }
LABEL_37:
  int v19 = *(_DWORD *)(a2 + 48);
  v3 |= 0x40u;
  *(_DWORD *)(result + 92) = v3;
  *(_DWORD *)(result + 48) = v19;
  int v2 = *(_DWORD *)(a2 + 92);
  if ((v2 & 0x80) == 0)
  {
LABEL_21:
    if ((v2 & 0x20) == 0) {
      goto LABEL_22;
    }
    goto LABEL_39;
  }
LABEL_38:
  int v20 = *(_DWORD *)(a2 + 52);
  v3 |= 0x80u;
  *(_DWORD *)(result + 92) = v3;
  *(_DWORD *)(result + 52) = v20;
  int v2 = *(_DWORD *)(a2 + 92);
  if ((v2 & 0x20) == 0)
  {
LABEL_22:
    if ((v2 & 0x10000) == 0) {
      return result;
    }
LABEL_40:
    char v22 = *(unsigned char *)(a2 + 88);
    *(_DWORD *)(result + 92) = v3 | 0x10000;
    *(unsigned char *)(result + 88) = v22;
    return result;
  }
LABEL_39:
  int v21 = *(_DWORD *)(a2 + 44);
  v3 |= 0x20u;
  *(_DWORD *)(result + 92) = v3;
  *(_DWORD *)(result + 44) = v21;
  if ((*(_DWORD *)(a2 + 92) & 0x10000) != 0) {
    goto LABEL_40;
  }
  return result;
}

uint64_t sub_101687008(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 92);
  if (v5)
  {
    PB::TextFormatter::format(this, "gpsDeltaTimestamp", *(void *)(a1 + 8));
    int v5 = *(_DWORD *)(a1 + 92);
    if ((v5 & 0x10) == 0)
    {
LABEL_3:
      if ((v5 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_26;
    }
  }
  else if ((v5 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "gpsDeltaTimestampSeconds", *(float *)(a1 + 40));
  int v5 = *(_DWORD *)(a1 + 92);
  if ((v5 & 0x20) == 0)
  {
LABEL_4:
    if ((v5 & 0x40) == 0) {
      goto LABEL_5;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "gpsIsRealSample", *(float *)(a1 + 44));
  int v5 = *(_DWORD *)(a1 + 92);
  if ((v5 & 0x40) == 0)
  {
LABEL_5:
    if ((v5 & 0x80) == 0) {
      goto LABEL_6;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(this, "gpsSpeedMetersPerSecond", *(float *)(a1 + 48));
  int v5 = *(_DWORD *)(a1 + 92);
  if ((v5 & 0x80) == 0)
  {
LABEL_6:
    if ((v5 & 2) == 0) {
      goto LABEL_7;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "gpsSpeedMilesPerHour", *(float *)(a1 + 52));
  int v5 = *(_DWORD *)(a1 + 92);
  if ((v5 & 2) == 0)
  {
LABEL_7:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(this, "gpsTimestamp", *(void *)(a1 + 16));
  int v5 = *(_DWORD *)(a1 + 92);
  if ((v5 & 0x10000) == 0)
  {
LABEL_8:
    if ((v5 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "loggedAtEpoch", *(unsigned char *)(a1 + 88));
  int v5 = *(_DWORD *)(a1 + 92);
  if ((v5 & 0x100) == 0)
  {
LABEL_9:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(this, "movingGpsCount", *(_DWORD *)(a1 + 56));
  int v5 = *(_DWORD *)(a1 + 92);
  if ((v5 & 0x20000) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(this, "movingGpsCountResetRequired", *(unsigned char *)(a1 + 89));
  int v5 = *(_DWORD *)(a1 + 92);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(this, "movingSpeedMetersPerSecondThreshold", *(float *)(a1 + 60));
  int v5 = *(_DWORD *)(a1 + 92);
  if ((v5 & 0x400) == 0)
  {
LABEL_12:
    if ((v5 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(this, "movingSpeedMetersPerSecondThresholdFromSydneyB", *(float *)(a1 + 64));
  int v5 = *(_DWORD *)(a1 + 92);
  if ((v5 & 0x800) == 0)
  {
LABEL_13:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "numLowOrFakeSamplesInHistory", *(_DWORD *)(a1 + 68));
  int v5 = *(_DWORD *)(a1 + 92);
  if ((v5 & 0x1000) == 0)
  {
LABEL_14:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "numSamplesInHistory", *(_DWORD *)(a1 + 72));
  int v5 = *(_DWORD *)(a1 + 92);
  if ((v5 & 0x2000) == 0)
  {
LABEL_15:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "staticGpsCount", *(_DWORD *)(a1 + 76));
  int v5 = *(_DWORD *)(a1 + 92);
  if ((v5 & 0x40000) == 0)
  {
LABEL_16:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "staticGpsCountResetRequired", *(unsigned char *)(a1 + 90));
  int v5 = *(_DWORD *)(a1 + 92);
  if ((v5 & 0x4000) == 0)
  {
LABEL_17:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "staticSpeedMetersPerSecondThreshold", *(float *)(a1 + 80));
  int v5 = *(_DWORD *)(a1 + 92);
  if ((v5 & 0x8000) == 0)
  {
LABEL_18:
    if ((v5 & 4) == 0) {
      goto LABEL_19;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "staticSpeedMetersPerSecondThresholdFromSydneyB", *(float *)(a1 + 84));
  int v5 = *(_DWORD *)(a1 + 92);
  if ((v5 & 4) == 0)
  {
LABEL_19:
    if ((v5 & 8) == 0) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }
LABEL_41:
  PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 24));
  if ((*(_DWORD *)(a1 + 92) & 8) != 0) {
LABEL_20:
  }
    PB::TextFormatter::format(this, "triggerTimestamp", *(void *)(a1 + 32));
LABEL_21:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_1016872AC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      unsigned int v20 = v11 & 7;
      if (v20 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v21 = v11 >> 3;
      if (v20 <= 4)
      {
        switch((v11 >> 3))
        {
          case 'e':
            *(_DWORD *)(a1 + 92) |= 4u;
            unint64_t v28 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v29 = *(void *)this;
            if (v28 > 0xFFFFFFFFFFFFFFF5 || v28 + 10 > v2)
            {
              char v81 = 0;
              unsigned int v82 = 0;
              uint64_t v32 = 0;
              if (v2 <= v28) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v28)
                {
                  uint64_t v32 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_186;
                }
                unint64_t v83 = v28++;
                char v84 = *(unsigned char *)(v29 + v83);
                *((void *)this + 1) = v28;
                v32 |= (unint64_t)(v84 & 0x7F) << v81;
                if ((v84 & 0x80) == 0) {
                  break;
                }
                v81 += 7;
                BOOL v14 = v82++ > 8;
                if (v14)
                {
                  uint64_t v32 = 0;
LABEL_185:
                  unint64_t v2 = v83 + 1;
                  goto LABEL_186;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v32 = 0;
              }
              goto LABEL_185;
            }
            char v30 = 0;
            unsigned int v31 = 0;
            uint64_t v32 = 0;
            do
            {
              unint64_t v2 = v28 + 1;
              *((void *)this + 1) = v28 + 1;
              char v33 = *(unsigned char *)(v29 + v28);
              v32 |= (unint64_t)(v33 & 0x7F) << v30;
              if ((v33 & 0x80) == 0) {
                goto LABEL_186;
              }
              v30 += 7;
              unint64_t v28 = v2;
              BOOL v14 = v31++ > 8;
            }
            while (!v14);
            uint64_t v32 = 0;
LABEL_186:
            *(void *)(a1 + 24) = v32;
            break;
          case 'f':
            *(_DWORD *)(a1 + 92) |= 8u;
            unint64_t v42 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v43 = *(void *)this;
            if (v42 > 0xFFFFFFFFFFFFFFF5 || v42 + 10 > v2)
            {
              char v89 = 0;
              unsigned int v90 = 0;
              uint64_t v46 = 0;
              if (v2 <= v42) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v42)
                {
                  uint64_t v46 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_196;
                }
                unint64_t v91 = v42++;
                char v92 = *(unsigned char *)(v43 + v91);
                *((void *)this + 1) = v42;
                v46 |= (unint64_t)(v92 & 0x7F) << v89;
                if ((v92 & 0x80) == 0) {
                  break;
                }
                v89 += 7;
                BOOL v14 = v90++ > 8;
                if (v14)
                {
                  uint64_t v46 = 0;
LABEL_195:
                  unint64_t v2 = v91 + 1;
                  goto LABEL_196;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v46 = 0;
              }
              goto LABEL_195;
            }
            char v44 = 0;
            unsigned int v45 = 0;
            uint64_t v46 = 0;
            do
            {
              unint64_t v2 = v42 + 1;
              *((void *)this + 1) = v42 + 1;
              char v47 = *(unsigned char *)(v43 + v42);
              v46 |= (unint64_t)(v47 & 0x7F) << v44;
              if ((v47 & 0x80) == 0) {
                goto LABEL_196;
              }
              v44 += 7;
              unint64_t v42 = v2;
              BOOL v14 = v45++ > 8;
            }
            while (!v14);
            uint64_t v46 = 0;
LABEL_196:
            *(void *)(a1 + 32) = v46;
            break;
          case 'g':
            *(_DWORD *)(a1 + 92) |= 0x2000u;
            unint64_t v48 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v49 = *(void *)this;
            if (v48 > 0xFFFFFFFFFFFFFFF5 || v48 + 10 > v2)
            {
              char v93 = 0;
              unsigned int v94 = 0;
              uint64_t v52 = 0;
              if (v2 <= v48) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v48)
                {
                  LODWORD(v52) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_201;
                }
                unint64_t v95 = v48++;
                char v96 = *(unsigned char *)(v49 + v95);
                *((void *)this + 1) = v48;
                v52 |= (unint64_t)(v96 & 0x7F) << v93;
                if ((v96 & 0x80) == 0) {
                  break;
                }
                v93 += 7;
                BOOL v14 = v94++ > 8;
                if (v14)
                {
                  LODWORD(v52) = 0;
LABEL_200:
                  unint64_t v2 = v95 + 1;
                  goto LABEL_201;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v52) = 0;
              }
              goto LABEL_200;
            }
            char v50 = 0;
            unsigned int v51 = 0;
            uint64_t v52 = 0;
            do
            {
              unint64_t v2 = v48 + 1;
              *((void *)this + 1) = v48 + 1;
              char v53 = *(unsigned char *)(v49 + v48);
              v52 |= (unint64_t)(v53 & 0x7F) << v50;
              if ((v53 & 0x80) == 0) {
                goto LABEL_201;
              }
              v50 += 7;
              unint64_t v48 = v2;
              BOOL v14 = v51++ > 8;
            }
            while (!v14);
            LODWORD(v52) = 0;
LABEL_201:
            *(_DWORD *)(a1 + 76) = v52;
            break;
          case 'h':
            *(_DWORD *)(a1 + 92) |= 0x100u;
            unint64_t v54 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v55 = *(void *)this;
            if (v54 > 0xFFFFFFFFFFFFFFF5 || v54 + 10 > v2)
            {
              char v97 = 0;
              unsigned int v98 = 0;
              uint64_t v58 = 0;
              if (v2 <= v54) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v54)
                {
                  LODWORD(v58) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_206;
                }
                unint64_t v99 = v54++;
                char v100 = *(unsigned char *)(v55 + v99);
                *((void *)this + 1) = v54;
                v58 |= (unint64_t)(v100 & 0x7F) << v97;
                if ((v100 & 0x80) == 0) {
                  break;
                }
                v97 += 7;
                BOOL v14 = v98++ > 8;
                if (v14)
                {
                  LODWORD(v58) = 0;
LABEL_205:
                  unint64_t v2 = v99 + 1;
                  goto LABEL_206;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v58) = 0;
              }
              goto LABEL_205;
            }
            char v56 = 0;
            unsigned int v57 = 0;
            uint64_t v58 = 0;
            do
            {
              unint64_t v2 = v54 + 1;
              *((void *)this + 1) = v54 + 1;
              char v59 = *(unsigned char *)(v55 + v54);
              v58 |= (unint64_t)(v59 & 0x7F) << v56;
              if ((v59 & 0x80) == 0) {
                goto LABEL_206;
              }
              v56 += 7;
              unint64_t v54 = v2;
              BOOL v14 = v57++ > 8;
            }
            while (!v14);
            LODWORD(v58) = 0;
LABEL_206:
            *(_DWORD *)(a1 + 56) = v58;
            break;
          case 'i':
            *(_DWORD *)(a1 + 92) |= 0x40000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 >= *((void *)this + 2))
            {
              BOOL v61 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              int v60 = *(unsigned __int8 *)(*(void *)this + v2++);
              *((void *)this + 1) = v2;
              BOOL v61 = v60 != 0;
            }
            *(unsigned char *)(a1 + 90) = v61;
            break;
          case 'j':
            *(_DWORD *)(a1 + 92) |= 0x20000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 >= *((void *)this + 2))
            {
              BOOL v63 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              int v62 = *(unsigned __int8 *)(*(void *)this + v2++);
              *((void *)this + 1) = v2;
              BOOL v63 = v62 != 0;
            }
            *(unsigned char *)(a1 + 89) = v63;
            break;
          case 'k':
            *(_DWORD *)(a1 + 92) |= 0x1000u;
            unint64_t v64 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v65 = *(void *)this;
            if (v64 > 0xFFFFFFFFFFFFFFF5 || v64 + 10 > v2)
            {
              char v101 = 0;
              unsigned int v102 = 0;
              uint64_t v68 = 0;
              if (v2 <= v64) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v64)
                {
                  LODWORD(v68) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_211;
                }
                unint64_t v103 = v64++;
                char v104 = *(unsigned char *)(v65 + v103);
                *((void *)this + 1) = v64;
                v68 |= (unint64_t)(v104 & 0x7F) << v101;
                if ((v104 & 0x80) == 0) {
                  break;
                }
                v101 += 7;
                BOOL v14 = v102++ > 8;
                if (v14)
                {
                  LODWORD(v68) = 0;
LABEL_210:
                  unint64_t v2 = v103 + 1;
                  goto LABEL_211;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v68) = 0;
              }
              goto LABEL_210;
            }
            char v66 = 0;
            unsigned int v67 = 0;
            uint64_t v68 = 0;
            do
            {
              unint64_t v2 = v64 + 1;
              *((void *)this + 1) = v64 + 1;
              char v69 = *(unsigned char *)(v65 + v64);
              v68 |= (unint64_t)(v69 & 0x7F) << v66;
              if ((v69 & 0x80) == 0) {
                goto LABEL_211;
              }
              v66 += 7;
              unint64_t v64 = v2;
              BOOL v14 = v67++ > 8;
            }
            while (!v14);
            LODWORD(v68) = 0;
LABEL_211:
            *(_DWORD *)(a1 + 72) = v68;
            break;
          case 'l':
            *(_DWORD *)(a1 + 92) |= 0x800u;
            unint64_t v70 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v71 = *(void *)this;
            if (v70 > 0xFFFFFFFFFFFFFFF5 || v70 + 10 > v2)
            {
              char v105 = 0;
              unsigned int v106 = 0;
              uint64_t v74 = 0;
              if (v2 <= v70) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v70)
                {
                  LODWORD(v74) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_216;
                }
                unint64_t v107 = v70++;
                char v108 = *(unsigned char *)(v71 + v107);
                *((void *)this + 1) = v70;
                v74 |= (unint64_t)(v108 & 0x7F) << v105;
                if ((v108 & 0x80) == 0) {
                  break;
                }
                v105 += 7;
                BOOL v14 = v106++ > 8;
                if (v14)
                {
                  LODWORD(v74) = 0;
LABEL_215:
                  unint64_t v2 = v107 + 1;
                  goto LABEL_216;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v74) = 0;
              }
              goto LABEL_215;
            }
            char v72 = 0;
            unsigned int v73 = 0;
            uint64_t v74 = 0;
            do
            {
              unint64_t v2 = v70 + 1;
              *((void *)this + 1) = v70 + 1;
              char v75 = *(unsigned char *)(v71 + v70);
              v74 |= (unint64_t)(v75 & 0x7F) << v72;
              if ((v75 & 0x80) == 0) {
                goto LABEL_216;
              }
              v72 += 7;
              unint64_t v70 = v2;
              BOOL v14 = v73++ > 8;
            }
            while (!v14);
            LODWORD(v74) = 0;
LABEL_216:
            *(_DWORD *)(a1 + 68) = v74;
            break;
          default:
            JUMPOUT(0);
        }
      }
      else
      {
        switch((int)v21)
        {
          case 201:
            *(_DWORD *)(a1 + 92) |= 2u;
            unint64_t v22 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v23 = *(void *)this;
            if (v22 > 0xFFFFFFFFFFFFFFF5 || v22 + 10 > v2)
            {
              char v77 = 0;
              unsigned int v78 = 0;
              uint64_t v26 = 0;
              if (v2 <= v22) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v22)
                {
                  uint64_t v26 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_181;
                }
                unint64_t v79 = v22++;
                char v80 = *(unsigned char *)(v23 + v79);
                *((void *)this + 1) = v22;
                v26 |= (unint64_t)(v80 & 0x7F) << v77;
                if ((v80 & 0x80) == 0) {
                  break;
                }
                v77 += 7;
                BOOL v14 = v78++ > 8;
                if (v14)
                {
                  uint64_t v26 = 0;
LABEL_180:
                  unint64_t v2 = v79 + 1;
                  goto LABEL_181;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v26 = 0;
              }
              goto LABEL_180;
            }
            char v24 = 0;
            unsigned int v25 = 0;
            uint64_t v26 = 0;
            do
            {
              unint64_t v2 = v22 + 1;
              *((void *)this + 1) = v22 + 1;
              char v27 = *(unsigned char *)(v23 + v22);
              v26 |= (unint64_t)(v27 & 0x7F) << v24;
              if ((v27 & 0x80) == 0) {
                goto LABEL_181;
              }
              v24 += 7;
              unint64_t v22 = v2;
              BOOL v14 = v25++ > 8;
            }
            while (!v14);
            uint64_t v26 = 0;
LABEL_181:
            *(void *)(a1 + 16) = v26;
            break;
          case 202:
            *(_DWORD *)(a1 + 92) |= 1u;
            unint64_t v34 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v35 = *(void *)this;
            if (v34 > 0xFFFFFFFFFFFFFFF5 || v34 + 10 > v2)
            {
              char v85 = 0;
              unsigned int v86 = 0;
              uint64_t v38 = 0;
              if (v2 <= v34) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v34)
                {
                  uint64_t v38 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_191;
                }
                unint64_t v87 = v34++;
                char v88 = *(unsigned char *)(v35 + v87);
                *((void *)this + 1) = v34;
                v38 |= (unint64_t)(v88 & 0x7F) << v85;
                if ((v88 & 0x80) == 0) {
                  break;
                }
                v85 += 7;
                BOOL v14 = v86++ > 8;
                if (v14)
                {
                  uint64_t v38 = 0;
LABEL_190:
                  unint64_t v2 = v87 + 1;
                  goto LABEL_191;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v38 = 0;
              }
              goto LABEL_190;
            }
            char v36 = 0;
            unsigned int v37 = 0;
            uint64_t v38 = 0;
            do
            {
              unint64_t v2 = v34 + 1;
              *((void *)this + 1) = v34 + 1;
              char v39 = *(unsigned char *)(v35 + v34);
              v38 |= (unint64_t)(v39 & 0x7F) << v36;
              if ((v39 & 0x80) == 0) {
                goto LABEL_191;
              }
              v36 += 7;
              unint64_t v34 = v2;
              BOOL v14 = v37++ > 8;
            }
            while (!v14);
            uint64_t v38 = 0;
LABEL_191:
            *(void *)(a1 + 8) = v38;
            break;
          case 203:
            *(_DWORD *)(a1 + 92) |= 0x10u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
              goto LABEL_112;
            }
            *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
            goto LABEL_176;
          case 204:
            *(_DWORD *)(a1 + 92) |= 0x40u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
              goto LABEL_112;
            }
            *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
            goto LABEL_176;
          case 205:
            *(_DWORD *)(a1 + 92) |= 0x80u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
              goto LABEL_112;
            }
            *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
            goto LABEL_176;
          case 206:
            *(_DWORD *)(a1 + 92) |= 0x20u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2))
            {
LABEL_112:
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
LABEL_176:
              unint64_t v2 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v2;
            }
            break;
          case 207:
            *(_DWORD *)(a1 + 92) |= 0x10000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 >= *((void *)this + 2))
            {
              BOOL v41 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              int v40 = *(unsigned __int8 *)(*(void *)this + v2++);
              *((void *)this + 1) = v2;
              BOOL v41 = v40 != 0;
            }
            *(unsigned char *)(a1 + 88) = v41;
            break;
          default:
            switch((int)v21)
            {
              case 1:
                *(_DWORD *)(a1 + 92) |= 0x200u;
                unint64_t v2 = *((void *)this + 1);
                if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                  goto LABEL_112;
                }
                *(_DWORD *)(a1 + 60) = *(_DWORD *)(*(void *)this + v2);
                goto LABEL_176;
              case 2:
                *(_DWORD *)(a1 + 92) |= 0x4000u;
                unint64_t v2 = *((void *)this + 1);
                if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                  goto LABEL_112;
                }
                *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v2);
                goto LABEL_176;
              case 3:
                *(_DWORD *)(a1 + 92) |= 0x400u;
                unint64_t v2 = *((void *)this + 1);
                if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                  goto LABEL_112;
                }
                *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v2);
                goto LABEL_176;
              case 4:
                *(_DWORD *)(a1 + 92) |= 0x8000u;
                unint64_t v2 = *((void *)this + 1);
                if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                  goto LABEL_112;
                }
                *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v2);
                goto LABEL_176;
              default:
                uint64_t result = PB::Reader::skip(this, v21, v20, 0);
                if (!result) {
                  return result;
                }
                unint64_t v2 = *((void *)this + 1);
                break;
            }
            break;
        }
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101687EC4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 92);
  if ((v4 & 0x200) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(result + 60), 1u);
    int v4 = *(_DWORD *)(v3 + 92);
    if ((v4 & 0x4000) == 0)
    {
LABEL_3:
      if ((v4 & 0x400) == 0) {
        goto LABEL_4;
      }
      goto LABEL_23;
    }
  }
  else if ((v4 & 0x4000) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80), 2u);
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 0x400) == 0)
  {
LABEL_4:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64), 3u);
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 0x8000) == 0)
  {
LABEL_5:
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 84), 4u);
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 4) == 0)
  {
LABEL_6:
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 24), 0x65u);
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 8) == 0)
  {
LABEL_7:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 32), 0x66u);
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 0x2000) == 0)
  {
LABEL_8:
    if ((v4 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 76), 0x67u);
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 0x100) == 0)
  {
LABEL_9:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 56), 0x68u);
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 0x40000) == 0)
  {
LABEL_10:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 90), 0x69u);
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 0x20000) == 0)
  {
LABEL_11:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 89), 0x6Au);
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 0x1000) == 0)
  {
LABEL_12:
    if ((v4 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 72), 0x6Bu);
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 0x800) == 0)
  {
LABEL_13:
    if ((v4 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 68), 0x6Cu);
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 2) == 0)
  {
LABEL_14:
    if ((v4 & 1) == 0) {
      goto LABEL_15;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 16), 0xC9u);
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 1) == 0)
  {
LABEL_15:
    if ((v4 & 0x10) == 0) {
      goto LABEL_16;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 8), 0xCAu);
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 0x10) == 0)
  {
LABEL_16:
    if ((v4 & 0x40) == 0) {
      goto LABEL_17;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40), 0xCBu);
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 0x40) == 0)
  {
LABEL_17:
    if ((v4 & 0x80) == 0) {
      goto LABEL_18;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48), 0xCCu);
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 0x80) == 0)
  {
LABEL_18:
    if ((v4 & 0x20) == 0) {
      goto LABEL_19;
    }
LABEL_38:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44), 0xCEu);
    if ((*(_DWORD *)(v3 + 92) & 0x10000) == 0) {
      return result;
    }
    goto LABEL_39;
  }
LABEL_37:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52), 0xCDu);
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 0x20) != 0) {
    goto LABEL_38;
  }
LABEL_19:
  if ((v4 & 0x10000) == 0) {
    return result;
  }
LABEL_39:
  char v5 = *(unsigned char *)(v3 + 88);

  return PB::Writer::write(this, v5, 0xCFu);
}

void *sub_101688110(void *result)
{
  *uint64_t result = &off_102333FA8;
  *(void *)((char *)result + 172) = 0;
  return result;
}

void sub_101688138(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

float sub_101688170(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102333FA8;
  *(void *)(a1 + 172) = 0;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x20000000) != 0)
  {
    float result = *(float *)(a2 + 140);
    uint64_t v3 = 0x20000000;
    *(void *)(a1 + 172) = 0x20000000;
    *(float *)(a1 + 140) = result;
    uint64_t v2 = *(void *)(a2 + 172);
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v3 = 0;
  if ((v2 & 0x8000000) != 0)
  {
LABEL_5:
    float result = *(float *)(a2 + 132);
    v3 |= 0x8000000uLL;
    *(void *)(a1 + 172) = v3;
    *(float *)(a1 + 132) = result;
    uint64_t v2 = *(void *)(a2 + 172);
  }
LABEL_6:
  if ((v2 & 0x2000000) != 0)
  {
    float result = *(float *)(a2 + 124);
    v3 |= 0x2000000uLL;
    *(void *)(a1 + 172) = v3;
    *(float *)(a1 + 124) = result;
    uint64_t v2 = *(void *)(a2 + 172);
    if ((v2 & 0x80000000) == 0)
    {
LABEL_8:
      if ((v2 & 0x100000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_53;
    }
  }
  else if ((v2 & 0x80000000) == 0)
  {
    goto LABEL_8;
  }
  float result = *(float *)(a2 + 148);
  v3 |= 0x80000000uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 148) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x100000) == 0)
  {
LABEL_9:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_54;
  }
LABEL_53:
  int v5 = *(_DWORD *)(a2 + 104);
  v3 |= 0x100000uLL;
  *(void *)(a1 + 172) = v3;
  *(_DWORD *)(a1 + 104) = v5;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x80000) == 0)
  {
LABEL_10:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_55;
  }
LABEL_54:
  int v6 = *(_DWORD *)(a2 + 100);
  v3 |= 0x80000uLL;
  *(void *)(a1 + 172) = v3;
  *(_DWORD *)(a1 + 100) = v6;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x800000) == 0)
  {
LABEL_11:
    if ((v2 & 0x40000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_56;
  }
LABEL_55:
  float result = *(float *)(a2 + 116);
  v3 |= 0x800000uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 116) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x40000000) == 0)
  {
LABEL_12:
    if ((v2 & 0x10000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_57;
  }
LABEL_56:
  float result = *(float *)(a2 + 144);
  v3 |= 0x40000000uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 144) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x10000000) == 0)
  {
LABEL_13:
    if ((v2 & 0x4000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_58;
  }
LABEL_57:
  float result = *(float *)(a2 + 136);
  v3 |= 0x10000000uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 136) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_14:
    if ((v2 & 0x100000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_59;
  }
LABEL_58:
  float result = *(float *)(a2 + 128);
  v3 |= 0x4000000uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 128) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x100000000) == 0)
  {
LABEL_15:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_60;
  }
LABEL_59:
  float result = *(float *)(a2 + 152);
  v3 |= (unint64_t)&_mh_execute_header;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 152) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x200000) == 0)
  {
LABEL_16:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_61;
  }
LABEL_60:
  int v7 = *(_DWORD *)(a2 + 108);
  v3 |= 0x200000uLL;
  *(void *)(a1 + 172) = v3;
  *(_DWORD *)(a1 + 108) = v7;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x400000) == 0)
  {
LABEL_17:
    if ((v2 & 0x40000000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_62;
  }
LABEL_61:
  int v8 = *(_DWORD *)(a2 + 112);
  v3 |= 0x400000uLL;
  *(void *)(a1 + 172) = v3;
  *(_DWORD *)(a1 + 112) = v8;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x40000000000) == 0)
  {
LABEL_18:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_63;
  }
LABEL_62:
  char v9 = *(unsigned char *)(a2 + 165);
  v3 |= 0x40000000000uLL;
  *(void *)(a1 + 172) = v3;
  *(unsigned char *)(a1 + 165) = v9;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x10000) == 0)
  {
LABEL_19:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_64;
  }
LABEL_63:
  float result = *(float *)(a2 + 88);
  v3 |= 0x10000uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 88) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x4000) == 0)
  {
LABEL_20:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_65;
  }
LABEL_64:
  float result = *(float *)(a2 + 80);
  v3 |= 0x4000uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 80) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x1000) == 0)
  {
LABEL_21:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_66;
  }
LABEL_65:
  float result = *(float *)(a2 + 72);
  v3 |= 0x1000uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 72) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x20000) == 0)
  {
LABEL_22:
    if ((v2 & 0x10000000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_67;
  }
LABEL_66:
  float result = *(float *)(a2 + 92);
  v3 |= 0x20000uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 92) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x10000000000) == 0)
  {
LABEL_23:
    if ((v2 & 0x200000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_68;
  }
LABEL_67:
  char v10 = *(unsigned char *)(a2 + 163);
  v3 |= 0x10000000000uLL;
  *(void *)(a1 + 172) = v3;
  *(unsigned char *)(a1 + 163) = v10;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x200000000) == 0)
  {
LABEL_24:
    if ((v2 & 0x100000000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_69;
  }
LABEL_68:
  char v11 = *(unsigned char *)(a2 + 156);
  v3 |= 0x200000000uLL;
  *(void *)(a1 + 172) = v3;
  *(unsigned char *)(a1 + 156) = v11;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x100000000000) == 0)
  {
LABEL_25:
    if ((v2 & 0x800000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_70;
  }
LABEL_69:
  char v12 = *(unsigned char *)(a2 + 167);
  v3 |= 0x100000000000uLL;
  *(void *)(a1 + 172) = v3;
  *(unsigned char *)(a1 + 167) = v12;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x800000000) == 0)
  {
LABEL_26:
    if ((v2 & 0x4000000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_71;
  }
LABEL_70:
  char v13 = *(unsigned char *)(a2 + 158);
  v3 |= 0x800000000uLL;
  *(void *)(a1 + 172) = v3;
  *(unsigned char *)(a1 + 158) = v13;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x4000000000) == 0)
  {
LABEL_27:
    if ((v2 & 0x80000000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_72;
  }
LABEL_71:
  char v14 = *(unsigned char *)(a2 + 161);
  v3 |= 0x4000000000uLL;
  *(void *)(a1 + 172) = v3;
  *(unsigned char *)(a1 + 161) = v14;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x80000000000) == 0)
  {
LABEL_28:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_73;
  }
LABEL_72:
  char v15 = *(unsigned char *)(a2 + 166);
  v3 |= 0x80000000000uLL;
  *(void *)(a1 + 172) = v3;
  *(unsigned char *)(a1 + 166) = v15;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x8000) == 0)
  {
LABEL_29:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_74;
  }
LABEL_73:
  float result = *(float *)(a2 + 84);
  v3 |= 0x8000uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 84) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x2000) == 0)
  {
LABEL_30:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_75;
  }
LABEL_74:
  float result = *(float *)(a2 + 76);
  v3 |= 0x2000uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 76) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x40000) == 0)
  {
LABEL_31:
    if ((v2 & 0x20000000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_76;
  }
LABEL_75:
  float result = *(float *)(a2 + 96);
  v3 |= 0x40000uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 96) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x20000000000) == 0)
  {
LABEL_32:
    if ((v2 & 0x400000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_77;
  }
LABEL_76:
  char v16 = *(unsigned char *)(a2 + 164);
  v3 |= 0x20000000000uLL;
  *(void *)(a1 + 172) = v3;
  *(unsigned char *)(a1 + 164) = v16;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x400000000) == 0)
  {
LABEL_33:
    if ((v2 & 0x200000000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_78;
  }
LABEL_77:
  char v17 = *(unsigned char *)(a2 + 157);
  v3 |= 0x400000000uLL;
  *(void *)(a1 + 172) = v3;
  *(unsigned char *)(a1 + 157) = v17;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x200000000000) == 0)
  {
LABEL_34:
    if ((v2 & 0x1000000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_79;
  }
LABEL_78:
  char v18 = *(unsigned char *)(a2 + 168);
  v3 |= 0x200000000000uLL;
  *(void *)(a1 + 172) = v3;
  *(unsigned char *)(a1 + 168) = v18;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x1000000000) == 0)
  {
LABEL_35:
    if ((v2 & 0x8000000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_80;
  }
LABEL_79:
  char v19 = *(unsigned char *)(a2 + 159);
  v3 |= 0x1000000000uLL;
  *(void *)(a1 + 172) = v3;
  *(unsigned char *)(a1 + 159) = v19;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x8000000000) == 0)
  {
LABEL_36:
    if ((v2 & 0x2000000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_81;
  }
LABEL_80:
  char v20 = *(unsigned char *)(a2 + 162);
  v3 |= 0x8000000000uLL;
  *(void *)(a1 + 172) = v3;
  *(unsigned char *)(a1 + 162) = v20;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x2000000000) == 0)
  {
LABEL_37:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_82;
  }
LABEL_81:
  char v21 = *(unsigned char *)(a2 + 160);
  v3 |= 0x2000000000uLL;
  *(void *)(a1 + 172) = v3;
  *(unsigned char *)(a1 + 160) = v21;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_38:
    if ((v2 & 4) == 0) {
      goto LABEL_39;
    }
    goto LABEL_83;
  }
LABEL_82:
  int v22 = *(_DWORD *)(a2 + 120);
  v3 |= 0x1000000uLL;
  *(void *)(a1 + 172) = v3;
  *(_DWORD *)(a1 + 120) = v22;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 4) == 0)
  {
LABEL_39:
    if ((v2 & 8) == 0) {
      goto LABEL_40;
    }
    goto LABEL_84;
  }
LABEL_83:
  uint64_t v23 = *(void *)(a2 + 24);
  v3 |= 4uLL;
  *(void *)(a1 + 172) = v3;
  *(void *)(a1 + 24) = v23;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 8) == 0)
  {
LABEL_40:
    if ((v2 & 0x10) == 0) {
      goto LABEL_41;
    }
    goto LABEL_85;
  }
LABEL_84:
  uint64_t v24 = *(void *)(a2 + 32);
  v3 |= 8uLL;
  *(void *)(a1 + 172) = v3;
  *(void *)(a1 + 32) = v24;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x10) == 0)
  {
LABEL_41:
    if ((v2 & 0x80) == 0) {
      goto LABEL_42;
    }
    goto LABEL_86;
  }
LABEL_85:
  float result = *(float *)(a2 + 40);
  v3 |= 0x10uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 40) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x80) == 0)
  {
LABEL_42:
    if ((v2 & 0x100) == 0) {
      goto LABEL_43;
    }
    goto LABEL_87;
  }
LABEL_86:
  float result = *(float *)(a2 + 52);
  v3 |= 0x80uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 52) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x100) == 0)
  {
LABEL_43:
    if ((v2 & 0x800) == 0) {
      goto LABEL_44;
    }
    goto LABEL_88;
  }
LABEL_87:
  float result = *(float *)(a2 + 56);
  v3 |= 0x100uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 56) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x800) == 0)
  {
LABEL_44:
    if ((v2 & 1) == 0) {
      goto LABEL_45;
    }
    goto LABEL_89;
  }
LABEL_88:
  float result = *(float *)(a2 + 68);
  v3 |= 0x800uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 68) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 1) == 0)
  {
LABEL_45:
    if ((v2 & 2) == 0) {
      goto LABEL_46;
    }
    goto LABEL_90;
  }
LABEL_89:
  uint64_t v25 = *(void *)(a2 + 8);
  v3 |= 1uLL;
  *(void *)(a1 + 172) = v3;
  *(void *)(a1 + 8) = v25;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 2) == 0)
  {
LABEL_46:
    if ((v2 & 0x20) == 0) {
      goto LABEL_47;
    }
    goto LABEL_91;
  }
LABEL_90:
  uint64_t v26 = *(void *)(a2 + 16);
  v3 |= 2uLL;
  *(void *)(a1 + 172) = v3;
  *(void *)(a1 + 16) = v26;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x20) == 0)
  {
LABEL_47:
    if ((v2 & 0x40) == 0) {
      goto LABEL_48;
    }
    goto LABEL_92;
  }
LABEL_91:
  float result = *(float *)(a2 + 44);
  v3 |= 0x20uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 44) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x40) == 0)
  {
LABEL_48:
    if ((v2 & 0x200) == 0) {
      goto LABEL_49;
    }
    goto LABEL_93;
  }
LABEL_92:
  float result = *(float *)(a2 + 48);
  v3 |= 0x40uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 48) = result;
  uint64_t v2 = *(void *)(a2 + 172);
  if ((v2 & 0x200) == 0)
  {
LABEL_49:
    if ((v2 & 0x400) == 0) {
      return result;
    }
LABEL_94:
    float result = *(float *)(a2 + 64);
    *(void *)(a1 + 172) = v3 | 0x400;
    *(float *)(a1 + 64) = result;
    return result;
  }
LABEL_93:
  float result = *(float *)(a2 + 60);
  v3 |= 0x200uLL;
  *(void *)(a1 + 172) = v3;
  *(float *)(a1 + 60) = result;
  if ((*(void *)(a2 + 172) & 0x400) != 0) {
    goto LABEL_94;
  }
  return result;
}

uint64_t sub_1016886A4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x10) != 0)
  {
    PB::TextFormatter::format(this, "chaosAtMaxEnergy", *(float *)(a1 + 40));
    uint64_t v5 = *(void *)(a1 + 172);
    if ((v5 & 0x20) == 0)
    {
LABEL_3:
      if ((v5 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_53;
    }
  }
  else if ((v5 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "chaosAtMaxEnergyRollover", *(float *)(a1 + 44));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x40) == 0)
  {
LABEL_4:
    if ((v5 & 0x80) == 0) {
      goto LABEL_5;
    }
    goto LABEL_54;
  }
LABEL_53:
  PB::TextFormatter::format(this, "chaosAtMaxEnergyRolloverTimestamp", *(float *)(a1 + 48));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x80) == 0)
  {
LABEL_5:
    if ((v5 & 0x200000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(this, "chaosAtMaxEnergyTimestamp", *(float *)(a1 + 52));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x200000000) == 0)
  {
LABEL_6:
    if ((v5 & 0x400000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_56;
  }
LABEL_55:
  PB::TextFormatter::format(this, "chaosMet", *(unsigned char *)(a1 + 156));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x400000000) == 0)
  {
LABEL_7:
    if ((v5 & 0x800000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_57;
  }
LABEL_56:
  PB::TextFormatter::format(this, "chaosMetRollover", *(unsigned char *)(a1 + 157));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x800000000) == 0)
  {
LABEL_8:
    if ((v5 & 0x1000000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_58;
  }
LABEL_57:
  PB::TextFormatter::format(this, "chaosOrSaturationMet", *(unsigned char *)(a1 + 158));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x1000000000) == 0)
  {
LABEL_9:
    if ((v5 & 0x2000000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_59;
  }
LABEL_58:
  PB::TextFormatter::format(this, "chaosOrSaturationMetRollover", *(unsigned char *)(a1 + 159));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x2000000000) == 0)
  {
LABEL_10:
    if ((v5 & 0x4000000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_60;
  }
LABEL_59:
  PB::TextFormatter::format(this, "didProcess", *(unsigned char *)(a1 + 160));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x4000000000) == 0)
  {
LABEL_11:
    if ((v5 & 0x8000000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_61;
  }
LABEL_60:
  PB::TextFormatter::format(this, "energyAndChaosOrSaturationMet", *(unsigned char *)(a1 + 161));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x8000000000) == 0)
  {
LABEL_12:
    if ((v5 & 0x100) == 0) {
      goto LABEL_13;
    }
    goto LABEL_62;
  }
LABEL_61:
  PB::TextFormatter::format(this, "energyAndChaosOrSaturationMetRollover", *(unsigned char *)(a1 + 162));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x100) == 0)
  {
LABEL_13:
    if ((v5 & 0x200) == 0) {
      goto LABEL_14;
    }
    goto LABEL_63;
  }
LABEL_62:
  PB::TextFormatter::format(this, "energyAtMaxChaos", *(float *)(a1 + 56));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x200) == 0)
  {
LABEL_14:
    if ((v5 & 0x400) == 0) {
      goto LABEL_15;
    }
    goto LABEL_64;
  }
LABEL_63:
  PB::TextFormatter::format(this, "energyAtMaxChaosRollover", *(float *)(a1 + 60));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x400) == 0)
  {
LABEL_15:
    if ((v5 & 0x800) == 0) {
      goto LABEL_16;
    }
    goto LABEL_65;
  }
LABEL_64:
  PB::TextFormatter::format(this, "energyAtMaxChaosRolloverTimestamp", *(float *)(a1 + 64));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x800) == 0)
  {
LABEL_16:
    if ((v5 & 0x10000000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_66;
  }
LABEL_65:
  PB::TextFormatter::format(this, "energyAtMaxChaosTimestamp", *(float *)(a1 + 68));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x10000000000) == 0)
  {
LABEL_17:
    if ((v5 & 0x20000000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_67;
  }
LABEL_66:
  PB::TextFormatter::format(this, "energyMet", *(unsigned char *)(a1 + 163));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x20000000000) == 0)
  {
LABEL_18:
    if ((v5 & 1) == 0) {
      goto LABEL_19;
    }
    goto LABEL_68;
  }
LABEL_67:
  PB::TextFormatter::format(this, "energyMetRollover", *(unsigned char *)(a1 + 164));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 1) == 0)
  {
LABEL_19:
    if ((v5 & 2) == 0) {
      goto LABEL_20;
    }
    goto LABEL_69;
  }
LABEL_68:
  PB::TextFormatter::format(this, "epochFirstTimestamp", *(void *)(a1 + 8));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 2) == 0)
  {
LABEL_20:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_70;
  }
LABEL_69:
  PB::TextFormatter::format(this, "epochLastTimestamp", *(void *)(a1 + 16));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x1000) == 0)
  {
LABEL_21:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_71;
  }
LABEL_70:
  PB::TextFormatter::format(this, "maxChaos", *(float *)(a1 + 72));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x2000) == 0)
  {
LABEL_22:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_72;
  }
LABEL_71:
  PB::TextFormatter::format(this, "maxChaosRollover", *(float *)(a1 + 76));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x4000) == 0)
  {
LABEL_23:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_73;
  }
LABEL_72:
  PB::TextFormatter::format(this, "maxEnergy", *(float *)(a1 + 80));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x8000) == 0)
  {
LABEL_24:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_74;
  }
LABEL_73:
  PB::TextFormatter::format(this, "maxEnergyRollover", *(float *)(a1 + 84));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x10000) == 0)
  {
LABEL_25:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_75;
  }
LABEL_74:
  PB::TextFormatter::format(this, "maxRMS", *(float *)(a1 + 88));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x20000) == 0)
  {
LABEL_26:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_76;
  }
LABEL_75:
  PB::TextFormatter::format(this, "maxSaturation", *(float *)(a1 + 92));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x40000) == 0)
  {
LABEL_27:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_77;
  }
LABEL_76:
  PB::TextFormatter::format(this, "maxSaturationRollover", *(float *)(a1 + 96));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x80000) == 0)
  {
LABEL_28:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_78;
  }
LABEL_77:
  PB::TextFormatter::format(this, "parameterRollingEnergyWindowSize", *(_DWORD *)(a1 + 100));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x100000) == 0)
  {
LABEL_29:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_79;
  }
LABEL_78:
  PB::TextFormatter::format(this, "parameterRollingPercentileWindowSize", *(_DWORD *)(a1 + 104));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x200000) == 0)
  {
LABEL_30:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_80;
  }
LABEL_79:
  PB::TextFormatter::format(this, "parameterRolloverRollingEnergyWindowSize", *(_DWORD *)(a1 + 108));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x400000) == 0)
  {
LABEL_31:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_81;
  }
LABEL_80:
  PB::TextFormatter::format(this, "parameterRolloverRollingPercentileWindowSize", *(_DWORD *)(a1 + 112));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x800000) == 0)
  {
LABEL_32:
    if ((v5 & 0x40000000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_82;
  }
LABEL_81:
  PB::TextFormatter::format(this, "parameterSaturationY", *(float *)(a1 + 116));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x40000000000) == 0)
  {
LABEL_33:
    if ((v5 & 0x80000000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_83;
  }
LABEL_82:
  PB::TextFormatter::format(this, "passThru", *(unsigned char *)(a1 + 165));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x80000000000) == 0)
  {
LABEL_34:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_84;
  }
LABEL_83:
  PB::TextFormatter::format(this, "passThruRollover", *(unsigned char *)(a1 + 166));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_35:
    if ((v5 & 0x100000000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_85;
  }
LABEL_84:
  PB::TextFormatter::format(this, "rmsSampleCount", *(_DWORD *)(a1 + 120));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x100000000000) == 0)
  {
LABEL_36:
    if ((v5 & 0x200000000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_86;
  }
LABEL_85:
  PB::TextFormatter::format(this, "saturationMet", *(unsigned char *)(a1 + 167));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x200000000000) == 0)
  {
LABEL_37:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_87;
  }
LABEL_86:
  PB::TextFormatter::format(this, "saturationMetRollover", *(unsigned char *)(a1 + 168));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_38:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_88;
  }
LABEL_87:
  PB::TextFormatter::format(this, "thresholdChaos", *(float *)(a1 + 124));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_39:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_89;
  }
LABEL_88:
  PB::TextFormatter::format(this, "thresholdChaosRollover", *(float *)(a1 + 128));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_40:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_90;
  }
LABEL_89:
  PB::TextFormatter::format(this, "thresholdEnergy", *(float *)(a1 + 132));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_41:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_91;
  }
LABEL_90:
  PB::TextFormatter::format(this, "thresholdEnergyRollover", *(float *)(a1 + 136));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x20000000) == 0)
  {
LABEL_42:
    if ((v5 & 0x40000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_92;
  }
LABEL_91:
  PB::TextFormatter::format(this, "thresholdMaxRMS", *(float *)(a1 + 140));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x40000000) == 0)
  {
LABEL_43:
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_93;
  }
LABEL_92:
  PB::TextFormatter::format(this, "thresholdMaxRMSRollover", *(float *)(a1 + 144));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x80000000) == 0)
  {
LABEL_44:
    if ((v5 & 0x100000000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_94;
  }
LABEL_93:
  PB::TextFormatter::format(this, "thresholdSaturationTime", *(float *)(a1 + 148));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 0x100000000) == 0)
  {
LABEL_45:
    if ((v5 & 4) == 0) {
      goto LABEL_46;
    }
    goto LABEL_95;
  }
LABEL_94:
  PB::TextFormatter::format(this, "thresholdSaturationTimeRollover", *(float *)(a1 + 152));
  uint64_t v5 = *(void *)(a1 + 172);
  if ((v5 & 4) == 0)
  {
LABEL_46:
    if ((v5 & 8) == 0) {
      goto LABEL_48;
    }
    goto LABEL_47;
  }
LABEL_95:
  PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 24));
  if ((*(void *)(a1 + 172) & 8) != 0) {
LABEL_47:
  }
    PB::TextFormatter::format(this, "triggerTimestamp", *(void *)(a1 + 32));
LABEL_48:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101688CA8(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      unsigned int v20 = v11 & 7;
      if (v20 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v21 = v11 >> 3;
      if (v20 <= 4)
      {
        switch((v11 >> 3))
        {
          case 'e':
            *(void *)(a1 + 172) |= 0x40000000000uLL;
            unint64_t v23 = *((void *)this + 1);
            if (v23 >= *((void *)this + 2))
            {
              BOOL v26 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v24 = v23 + 1;
              int v25 = *(unsigned __int8 *)(*(void *)this + v23);
              *((void *)this + 1) = v24;
              BOOL v26 = v25 != 0;
            }
            *(unsigned char *)(a1 + 165) = v26;
            break;
          case 'f':
            *(void *)(a1 + 172) |= 0x10000uLL;
            unint64_t v68 = *((void *)this + 1);
            if (v68 > 0xFFFFFFFFFFFFFFFBLL || v68 + 4 > *((void *)this + 2)) {
              goto LABEL_126;
            }
            *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v68);
            goto LABEL_179;
          case 'g':
            *(void *)(a1 + 172) |= 0x4000uLL;
            unint64_t v69 = *((void *)this + 1);
            if (v69 > 0xFFFFFFFFFFFFFFFBLL || v69 + 4 > *((void *)this + 2)) {
              goto LABEL_126;
            }
            *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v69);
            goto LABEL_179;
          case 'h':
            *(void *)(a1 + 172) |= 0x1000uLL;
            unint64_t v70 = *((void *)this + 1);
            if (v70 > 0xFFFFFFFFFFFFFFFBLL || v70 + 4 > *((void *)this + 2)) {
              goto LABEL_126;
            }
            *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v70);
            goto LABEL_179;
          case 'i':
            *(void *)(a1 + 172) |= 0x20000uLL;
            unint64_t v71 = *((void *)this + 1);
            if (v71 > 0xFFFFFFFFFFFFFFFBLL || v71 + 4 > *((void *)this + 2)) {
              goto LABEL_126;
            }
            *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(void *)this + v71);
            goto LABEL_179;
          case 'j':
            *(void *)(a1 + 172) |= 0x10000000000uLL;
            unint64_t v72 = *((void *)this + 1);
            if (v72 >= *((void *)this + 2))
            {
              BOOL v75 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v73 = v72 + 1;
              int v74 = *(unsigned __int8 *)(*(void *)this + v72);
              *((void *)this + 1) = v73;
              BOOL v75 = v74 != 0;
            }
            *(unsigned char *)(a1 + 163) = v75;
            break;
          case 'k':
            *(void *)(a1 + 172) |= 0x200000000uLL;
            unint64_t v76 = *((void *)this + 1);
            if (v76 >= *((void *)this + 2))
            {
              BOOL v79 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v77 = v76 + 1;
              int v78 = *(unsigned __int8 *)(*(void *)this + v76);
              *((void *)this + 1) = v77;
              BOOL v79 = v78 != 0;
            }
            *(unsigned char *)(a1 + 156) = v79;
            break;
          case 'l':
            *(void *)(a1 + 172) |= 0x100000000000uLL;
            unint64_t v80 = *((void *)this + 1);
            if (v80 >= *((void *)this + 2))
            {
              BOOL v83 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v81 = v80 + 1;
              int v82 = *(unsigned __int8 *)(*(void *)this + v80);
              *((void *)this + 1) = v81;
              BOOL v83 = v82 != 0;
            }
            *(unsigned char *)(a1 + 167) = v83;
            break;
          case 'm':
            *(void *)(a1 + 172) |= 0x800000000uLL;
            unint64_t v84 = *((void *)this + 1);
            if (v84 >= *((void *)this + 2))
            {
              BOOL v87 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v85 = v84 + 1;
              int v86 = *(unsigned __int8 *)(*(void *)this + v84);
              *((void *)this + 1) = v85;
              BOOL v87 = v86 != 0;
            }
            *(unsigned char *)(a1 + 158) = v87;
            break;
          case 'n':
            *(void *)(a1 + 172) |= 0x4000000000uLL;
            unint64_t v88 = *((void *)this + 1);
            if (v88 >= *((void *)this + 2))
            {
              BOOL v91 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v89 = v88 + 1;
              int v90 = *(unsigned __int8 *)(*(void *)this + v88);
              *((void *)this + 1) = v89;
              BOOL v91 = v90 != 0;
            }
            *(unsigned char *)(a1 + 161) = v91;
            break;
          case 'o':
            *(void *)(a1 + 172) |= 0x80000000000uLL;
            unint64_t v92 = *((void *)this + 1);
            if (v92 >= *((void *)this + 2))
            {
              BOOL v95 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v93 = v92 + 1;
              int v94 = *(unsigned __int8 *)(*(void *)this + v92);
              *((void *)this + 1) = v93;
              BOOL v95 = v94 != 0;
            }
            *(unsigned char *)(a1 + 166) = v95;
            break;
          case 'p':
            *(void *)(a1 + 172) |= 0x8000uLL;
            unint64_t v96 = *((void *)this + 1);
            if (v96 > 0xFFFFFFFFFFFFFFFBLL || v96 + 4 > *((void *)this + 2)) {
              goto LABEL_126;
            }
            *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v96);
            goto LABEL_179;
          case 'q':
            *(void *)(a1 + 172) |= 0x2000uLL;
            unint64_t v97 = *((void *)this + 1);
            if (v97 > 0xFFFFFFFFFFFFFFFBLL || v97 + 4 > *((void *)this + 2)) {
              goto LABEL_126;
            }
            *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v97);
            goto LABEL_179;
          case 'r':
            *(void *)(a1 + 172) |= 0x40000uLL;
            unint64_t v98 = *((void *)this + 1);
            if (v98 > 0xFFFFFFFFFFFFFFFBLL || v98 + 4 > *((void *)this + 2))
            {
LABEL_126:
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v98);
LABEL_179:
              *((void *)this + 1) += 4;
            }
            break;
          case 's':
            *(void *)(a1 + 172) |= 0x20000000000uLL;
            unint64_t v99 = *((void *)this + 1);
            if (v99 >= *((void *)this + 2))
            {
              BOOL v102 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v100 = v99 + 1;
              int v101 = *(unsigned __int8 *)(*(void *)this + v99);
              *((void *)this + 1) = v100;
              BOOL v102 = v101 != 0;
            }
            *(unsigned char *)(a1 + 164) = v102;
            break;
          case 't':
            *(void *)(a1 + 172) |= 0x400000000uLL;
            unint64_t v103 = *((void *)this + 1);
            if (v103 >= *((void *)this + 2))
            {
              BOOL v106 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v104 = v103 + 1;
              int v105 = *(unsigned __int8 *)(*(void *)this + v103);
              *((void *)this + 1) = v104;
              BOOL v106 = v105 != 0;
            }
            *(unsigned char *)(a1 + 157) = v106;
            break;
          case 'u':
            *(void *)(a1 + 172) |= 0x200000000000uLL;
            unint64_t v107 = *((void *)this + 1);
            if (v107 >= *((void *)this + 2))
            {
              BOOL v110 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v108 = v107 + 1;
              int v109 = *(unsigned __int8 *)(*(void *)this + v107);
              *((void *)this + 1) = v108;
              BOOL v110 = v109 != 0;
            }
            *(unsigned char *)(a1 + 168) = v110;
            break;
          case 'v':
            *(void *)(a1 + 172) |= 0x1000000000uLL;
            unint64_t v111 = *((void *)this + 1);
            if (v111 >= *((void *)this + 2))
            {
              BOOL v114 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v112 = v111 + 1;
              int v113 = *(unsigned __int8 *)(*(void *)this + v111);
              *((void *)this + 1) = v112;
              BOOL v114 = v113 != 0;
            }
            *(unsigned char *)(a1 + 159) = v114;
            break;
          case 'w':
            *(void *)(a1 + 172) |= 0x8000000000uLL;
            unint64_t v115 = *((void *)this + 1);
            if (v115 >= *((void *)this + 2))
            {
              BOOL v118 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v116 = v115 + 1;
              int v117 = *(unsigned __int8 *)(*(void *)this + v115);
              *((void *)this + 1) = v116;
              BOOL v118 = v117 != 0;
            }
            *(unsigned char *)(a1 + 162) = v118;
            break;
          default:
            JUMPOUT(0);
        }
      }
      else
      {
        switch((int)v21)
        {
          case 1:
            *(void *)(a1 + 172) |= 0x20000000uLL;
            unint64_t v22 = *((void *)this + 1);
            if (v22 > 0xFFFFFFFFFFFFFFFBLL || v22 + 4 > *((void *)this + 2)) {
              goto LABEL_126;
            }
            *(_DWORD *)(a1 + 140) = *(_DWORD *)(*(void *)this + v22);
            goto LABEL_179;
          case 2:
            *(void *)(a1 + 172) |= 0x8000000uLL;
            unint64_t v28 = *((void *)this + 1);
            if (v28 > 0xFFFFFFFFFFFFFFFBLL || v28 + 4 > *((void *)this + 2)) {
              goto LABEL_126;
            }
            *(_DWORD *)(a1 + 132) = *(_DWORD *)(*(void *)this + v28);
            goto LABEL_179;
          case 3:
            *(void *)(a1 + 172) |= 0x2000000uLL;
            unint64_t v29 = *((void *)this + 1);
            if (v29 > 0xFFFFFFFFFFFFFFFBLL || v29 + 4 > *((void *)this + 2)) {
              goto LABEL_126;
            }
            *(_DWORD *)(a1 + 124) = *(_DWORD *)(*(void *)this + v29);
            goto LABEL_179;
          case 4:
            *(void *)(a1 + 172) |= 0x80000000uLL;
            unint64_t v30 = *((void *)this + 1);
            if (v30 > 0xFFFFFFFFFFFFFFFBLL || v30 + 4 > *((void *)this + 2)) {
              goto LABEL_126;
            }
            *(_DWORD *)(a1 + 148) = *(_DWORD *)(*(void *)this + v30);
            goto LABEL_179;
          case 5:
            *(void *)(a1 + 172) |= 0x100000uLL;
            unint64_t v31 = *((void *)this + 1);
            unint64_t v32 = *((void *)this + 2);
            uint64_t v33 = *(void *)this;
            if (v31 <= 0xFFFFFFFFFFFFFFF5 && v31 + 10 <= v32)
            {
              char v34 = 0;
              unsigned int v35 = 0;
              uint64_t v36 = 0;
              do
              {
                unint64_t v37 = v31 + 1;
                *((void *)this + 1) = v31 + 1;
                char v38 = *(unsigned char *)(v33 + v31);
                v36 |= (unint64_t)(v38 & 0x7F) << v34;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_188;
                }
                v34 += 7;
                unint64_t v31 = v37;
                BOOL v14 = v35++ > 8;
              }
              while (!v14);
LABEL_135:
              LODWORD(v36) = 0;
              goto LABEL_188;
            }
            char v119 = 0;
            unsigned int v120 = 0;
            uint64_t v36 = 0;
            if (v32 <= v31) {
              unint64_t v32 = *((void *)this + 1);
            }
            while (2)
            {
              if (v32 == v31)
              {
                LODWORD(v36) = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v121 = v31 + 1;
                char v122 = *(unsigned char *)(v33 + v31);
                *((void *)this + 1) = v121;
                v36 |= (unint64_t)(v122 & 0x7F) << v119;
                if (v122 < 0)
                {
                  v119 += 7;
                  unint64_t v31 = v121;
                  BOOL v14 = v120++ > 8;
                  if (v14) {
                    goto LABEL_135;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v36) = 0;
                }
              }
              break;
            }
LABEL_188:
            *(_DWORD *)(a1 + 104) = v36;
            goto LABEL_180;
          case 6:
            *(void *)(a1 + 172) |= 0x80000uLL;
            unint64_t v39 = *((void *)this + 1);
            unint64_t v40 = *((void *)this + 2);
            uint64_t v41 = *(void *)this;
            if (v39 <= 0xFFFFFFFFFFFFFFF5 && v39 + 10 <= v40)
            {
              char v42 = 0;
              unsigned int v43 = 0;
              uint64_t v44 = 0;
              do
              {
                unint64_t v45 = v39 + 1;
                *((void *)this + 1) = v39 + 1;
                char v46 = *(unsigned char *)(v41 + v39);
                v44 |= (unint64_t)(v46 & 0x7F) << v42;
                if ((v46 & 0x80) == 0) {
                  goto LABEL_192;
                }
                v42 += 7;
                unint64_t v39 = v45;
                BOOL v14 = v43++ > 8;
              }
              while (!v14);
LABEL_142:
              LODWORD(v44) = 0;
              goto LABEL_192;
            }
            char v123 = 0;
            unsigned int v124 = 0;
            uint64_t v44 = 0;
            if (v40 <= v39) {
              unint64_t v40 = *((void *)this + 1);
            }
            while (2)
            {
              if (v40 == v39)
              {
                LODWORD(v44) = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v125 = v39 + 1;
                char v126 = *(unsigned char *)(v41 + v39);
                *((void *)this + 1) = v125;
                v44 |= (unint64_t)(v126 & 0x7F) << v123;
                if (v126 < 0)
                {
                  v123 += 7;
                  unint64_t v39 = v125;
                  BOOL v14 = v124++ > 8;
                  if (v14) {
                    goto LABEL_142;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v44) = 0;
                }
              }
              break;
            }
LABEL_192:
            *(_DWORD *)(a1 + 100) = v44;
            goto LABEL_180;
          case 7:
            *(void *)(a1 + 172) |= 0x800000uLL;
            unint64_t v47 = *((void *)this + 1);
            if (v47 > 0xFFFFFFFFFFFFFFFBLL || v47 + 4 > *((void *)this + 2)) {
              goto LABEL_126;
            }
            *(_DWORD *)(a1 + 116) = *(_DWORD *)(*(void *)this + v47);
            goto LABEL_179;
          case 8:
            *(void *)(a1 + 172) |= 0x40000000uLL;
            unint64_t v48 = *((void *)this + 1);
            if (v48 > 0xFFFFFFFFFFFFFFFBLL || v48 + 4 > *((void *)this + 2)) {
              goto LABEL_126;
            }
            *(_DWORD *)(a1 + 144) = *(_DWORD *)(*(void *)this + v48);
            goto LABEL_179;
          case 9:
            *(void *)(a1 + 172) |= 0x10000000uLL;
            unint64_t v49 = *((void *)this + 1);
            if (v49 > 0xFFFFFFFFFFFFFFFBLL || v49 + 4 > *((void *)this + 2)) {
              goto LABEL_126;
            }
            *(_DWORD *)(a1 + 136) = *(_DWORD *)(*(void *)this + v49);
            goto LABEL_179;
          case 10:
            *(void *)(a1 + 172) |= 0x4000000uLL;
            unint64_t v50 = *((void *)this + 1);
            if (v50 > 0xFFFFFFFFFFFFFFFBLL || v50 + 4 > *((void *)this + 2)) {
              goto LABEL_126;
            }
            *(_DWORD *)(a1 + 128) = *(_DWORD *)(*(void *)this + v50);
            goto LABEL_179;
          case 11:
            *(void *)(a1 + 172) |= (unint64_t)&_mh_execute_header;
            unint64_t v51 = *((void *)this + 1);
            if (v51 > 0xFFFFFFFFFFFFFFFBLL || v51 + 4 > *((void *)this + 2)) {
              goto LABEL_126;
            }
            *(_DWORD *)(a1 + 152) = *(_DWORD *)(*(void *)this + v51);
            goto LABEL_179;
          case 12:
            *(void *)(a1 + 172) |= 0x200000uLL;
            unint64_t v52 = *((void *)this + 1);
            unint64_t v53 = *((void *)this + 2);
            uint64_t v54 = *(void *)this;
            if (v52 <= 0xFFFFFFFFFFFFFFF5 && v52 + 10 <= v53)
            {
              char v55 = 0;
              unsigned int v56 = 0;
              uint64_t v57 = 0;
              do
              {
                unint64_t v58 = v52 + 1;
                *((void *)this + 1) = v52 + 1;
                char v59 = *(unsigned char *)(v54 + v52);
                v57 |= (unint64_t)(v59 & 0x7F) << v55;
                if ((v59 & 0x80) == 0) {
                  goto LABEL_196;
                }
                v55 += 7;
                unint64_t v52 = v58;
                BOOL v14 = v56++ > 8;
              }
              while (!v14);
LABEL_149:
              LODWORD(v57) = 0;
              goto LABEL_196;
            }
            char v127 = 0;
            unsigned int v128 = 0;
            uint64_t v57 = 0;
            if (v53 <= v52) {
              unint64_t v53 = *((void *)this + 1);
            }
            while (2)
            {
              if (v53 == v52)
              {
                LODWORD(v57) = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v129 = v52 + 1;
                char v130 = *(unsigned char *)(v54 + v52);
                *((void *)this + 1) = v129;
                v57 |= (unint64_t)(v130 & 0x7F) << v127;
                if (v130 < 0)
                {
                  v127 += 7;
                  unint64_t v52 = v129;
                  BOOL v14 = v128++ > 8;
                  if (v14) {
                    goto LABEL_149;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v57) = 0;
                }
              }
              break;
            }
LABEL_196:
            *(_DWORD *)(a1 + 108) = v57;
            goto LABEL_180;
          case 13:
            *(void *)(a1 + 172) |= 0x400000uLL;
            unint64_t v60 = *((void *)this + 1);
            unint64_t v61 = *((void *)this + 2);
            uint64_t v62 = *(void *)this;
            if (v60 <= 0xFFFFFFFFFFFFFFF5 && v60 + 10 <= v61)
            {
              char v63 = 0;
              unsigned int v64 = 0;
              uint64_t v65 = 0;
              do
              {
                unint64_t v66 = v60 + 1;
                *((void *)this + 1) = v60 + 1;
                char v67 = *(unsigned char *)(v62 + v60);
                v65 |= (unint64_t)(v67 & 0x7F) << v63;
                if ((v67 & 0x80) == 0) {
                  goto LABEL_200;
                }
                v63 += 7;
                unint64_t v60 = v66;
                BOOL v14 = v64++ > 8;
              }
              while (!v14);
LABEL_156:
              LODWORD(v65) = 0;
              goto LABEL_200;
            }
            char v131 = 0;
            unsigned int v132 = 0;
            uint64_t v65 = 0;
            if (v61 <= v60) {
              unint64_t v61 = *((void *)this + 1);
            }
            break;
          default:
            uint64_t result = PB::Reader::skip(this, v21, v20, 0);
            if (!result) {
              return result;
            }
            goto LABEL_180;
        }
        while (1)
        {
          if (v61 == v60)
          {
            LODWORD(v65) = 0;
            *((unsigned char *)this + 24) = 1;
            goto LABEL_200;
          }
          unint64_t v133 = v60 + 1;
          char v134 = *(unsigned char *)(v62 + v60);
          *((void *)this + 1) = v133;
          v65 |= (unint64_t)(v134 & 0x7F) << v131;
          if ((v134 & 0x80) == 0) {
            break;
          }
          v131 += 7;
          unint64_t v60 = v133;
          BOOL v14 = v132++ > 8;
          if (v14) {
            goto LABEL_156;
          }
        }
        if (*((unsigned char *)this + 24)) {
          LODWORD(v65) = 0;
        }
LABEL_200:
        *(_DWORD *)(a1 + 112) = v65;
      }
LABEL_180:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101689FF4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  uint64_t v4 = *(void *)(result + 172);
  if ((v4 & 0x20000000) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(result + 140), 1u);
    uint64_t v4 = *(void *)(v3 + 172);
    if ((v4 & 0x8000000) == 0)
    {
LABEL_3:
      if ((v4 & 0x2000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_50;
    }
  }
  else if ((v4 & 0x8000000) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 132), 2u);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_4:
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 124), 3u);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x80000000) == 0)
  {
LABEL_5:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 148), 4u);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x100000) == 0)
  {
LABEL_6:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 104), 5u);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x80000) == 0)
  {
LABEL_7:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 100), 6u);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x800000) == 0)
  {
LABEL_8:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 116), 7u);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x40000000) == 0)
  {
LABEL_9:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 144), 8u);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_10:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 136), 9u);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_11:
    if ((v4 & 0x100000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_58;
  }
LABEL_57:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 128), 0xAu);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x100000000) == 0)
  {
LABEL_12:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 152), 0xBu);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x200000) == 0)
  {
LABEL_13:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_60;
  }
LABEL_59:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 108), 0xCu);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x400000) == 0)
  {
LABEL_14:
    if ((v4 & 0x40000000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_61;
  }
LABEL_60:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 112), 0xDu);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x40000000000) == 0)
  {
LABEL_15:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 165), 0x65u);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x10000) == 0)
  {
LABEL_16:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_63;
  }
LABEL_62:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 88), 0x66u);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x4000) == 0)
  {
LABEL_17:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_64;
  }
LABEL_63:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80), 0x67u);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x1000) == 0)
  {
LABEL_18:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_65;
  }
LABEL_64:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72), 0x68u);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x20000) == 0)
  {
LABEL_19:
    if ((v4 & 0x10000000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_66;
  }
LABEL_65:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 92), 0x69u);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x10000000000) == 0)
  {
LABEL_20:
    if ((v4 & 0x200000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_67;
  }
LABEL_66:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 163), 0x6Au);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x200000000) == 0)
  {
LABEL_21:
    if ((v4 & 0x100000000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_68;
  }
LABEL_67:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 156), 0x6Bu);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x100000000000) == 0)
  {
LABEL_22:
    if ((v4 & 0x800000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_69;
  }
LABEL_68:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 167), 0x6Cu);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x800000000) == 0)
  {
LABEL_23:
    if ((v4 & 0x4000000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_70;
  }
LABEL_69:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 158), 0x6Du);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x4000000000) == 0)
  {
LABEL_24:
    if ((v4 & 0x80000000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_71;
  }
LABEL_70:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 161), 0x6Eu);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x80000000000) == 0)
  {
LABEL_25:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_72;
  }
LABEL_71:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 166), 0x6Fu);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x8000) == 0)
  {
LABEL_26:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_73;
  }
LABEL_72:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 84), 0x70u);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x2000) == 0)
  {
LABEL_27:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_74;
  }
LABEL_73:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76), 0x71u);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x40000) == 0)
  {
LABEL_28:
    if ((v4 & 0x20000000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_75;
  }
LABEL_74:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 96), 0x72u);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x20000000000) == 0)
  {
LABEL_29:
    if ((v4 & 0x400000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_76;
  }
LABEL_75:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 164), 0x73u);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x400000000) == 0)
  {
LABEL_30:
    if ((v4 & 0x200000000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_77;
  }
LABEL_76:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 157), 0x74u);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x200000000000) == 0)
  {
LABEL_31:
    if ((v4 & 0x1000000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_78;
  }
LABEL_77:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 168), 0x75u);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x1000000000) == 0)
  {
LABEL_32:
    if ((v4 & 0x8000000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_79;
  }
LABEL_78:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 159), 0x76u);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x8000000000) == 0)
  {
LABEL_33:
    if ((v4 & 0x2000000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_80;
  }
LABEL_79:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 162), 0x77u);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x2000000000) == 0)
  {
LABEL_34:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_81;
  }
LABEL_80:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 160), 0xC9u);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_35:
    if ((v4 & 4) == 0) {
      goto LABEL_36;
    }
    goto LABEL_82;
  }
LABEL_81:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 120), 0xCAu);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 4) == 0)
  {
LABEL_36:
    if ((v4 & 8) == 0) {
      goto LABEL_37;
    }
    goto LABEL_83;
  }
LABEL_82:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 24), 0xCBu);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 8) == 0)
  {
LABEL_37:
    if ((v4 & 0x10) == 0) {
      goto LABEL_38;
    }
    goto LABEL_84;
  }
LABEL_83:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 32), 0xCCu);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x10) == 0)
  {
LABEL_38:
    if ((v4 & 0x80) == 0) {
      goto LABEL_39;
    }
    goto LABEL_85;
  }
LABEL_84:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40), 0xCDu);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x80) == 0)
  {
LABEL_39:
    if ((v4 & 0x100) == 0) {
      goto LABEL_40;
    }
    goto LABEL_86;
  }
LABEL_85:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52), 0xCEu);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x100) == 0)
  {
LABEL_40:
    if ((v4 & 0x800) == 0) {
      goto LABEL_41;
    }
    goto LABEL_87;
  }
LABEL_86:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56), 0xCFu);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x800) == 0)
  {
LABEL_41:
    if ((v4 & 1) == 0) {
      goto LABEL_42;
    }
    goto LABEL_88;
  }
LABEL_87:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 68), 0xD0u);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 1) == 0)
  {
LABEL_42:
    if ((v4 & 2) == 0) {
      goto LABEL_43;
    }
    goto LABEL_89;
  }
LABEL_88:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 8), 0xD1u);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 2) == 0)
  {
LABEL_43:
    if ((v4 & 0x20) == 0) {
      goto LABEL_44;
    }
    goto LABEL_90;
  }
LABEL_89:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 16), 0xD2u);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x20) == 0)
  {
LABEL_44:
    if ((v4 & 0x40) == 0) {
      goto LABEL_45;
    }
    goto LABEL_91;
  }
LABEL_90:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44), 0xD3u);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x40) == 0)
  {
LABEL_45:
    if ((v4 & 0x200) == 0) {
      goto LABEL_46;
    }
LABEL_92:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 60), 0xD5u);
    if ((*(void *)(v3 + 172) & 0x400) == 0) {
      return result;
    }
    goto LABEL_93;
  }
LABEL_91:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48), 0xD4u);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x200) != 0) {
    goto LABEL_92;
  }
LABEL_46:
  if ((v4 & 0x400) == 0) {
    return result;
  }
LABEL_93:
  float v5 = *(float *)(v3 + 64);

  return PB::Writer::write(this, v5, 0xD6u);
}

uint64_t sub_10168A534(uint64_t result)
{
  *(void *)uint64_t result = &off_102333FE0;
  *(_DWORD *)(result + 28) = 0;
  return result;
}

void sub_10168A55C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_10168A594(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102333FE0;
  *(_DWORD *)(result + 28) = 0;
  char v2 = *(unsigned char *)(a2 + 28);
  if (v2)
  {
    int v4 = *(_DWORD *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(result + 28) = 1;
    *(_DWORD *)(result + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 28) & 8) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 20);
    v3 |= 8u;
    *(unsigned char *)(result + 28) = v3;
    *(_DWORD *)(result + 20) = v5;
    char v2 = *(unsigned char *)(a2 + 28);
  }
LABEL_6:
  if ((v2 & 0x10) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 24);
    v3 |= 0x10u;
    *(unsigned char *)(result + 28) = v3;
    *(_DWORD *)(result + 24) = v6;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 2) == 0)
    {
LABEL_8:
      if ((v2 & 4) == 0) {
        return result;
      }
LABEL_12:
      int v8 = *(_DWORD *)(a2 + 16);
      *(unsigned char *)(result + 28) = v3 | 4;
      *(_DWORD *)(result + 16) = v8;
      return result;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 12);
  v3 |= 2u;
  *(unsigned char *)(result + 28) = v3;
  *(_DWORD *)(result + 12) = v7;
  if ((*(unsigned char *)(a2 + 28) & 4) != 0) {
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_10168A64C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 28);
  if (v5)
  {
    PB::TextFormatter::format(this, "configThreshold1", *(float *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 28);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a1 + 28) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "debugX", *(float *)(a1 + 12));
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(this, "debugY", *(_DWORD *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(this, "outputA", *(float *)(a1 + 20));
  if ((*(unsigned char *)(a1 + 28) & 0x10) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "outputB", *(_DWORD *)(a1 + 24));
LABEL_7:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10168A730(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 0x186A0u:
              *(unsigned char *)(a1 + 28) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_39;
              }
              *(_DWORD *)(a1 + 8) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_62;
            case 0x186A1u:
              *(unsigned char *)(a1 + 28) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_39;
              }
              *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_62;
            case 0x186A2u:
              *(unsigned char *)(a1 + 28) |= 0x10u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v33 = 0;
                unsigned int v34 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_67;
                  }
                  unint64_t v35 = v21++;
                  char v36 = *(unsigned char *)(v22 + v35);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v36 & 0x7F) << v33;
                  if ((v36 & 0x80) == 0) {
                    break;
                  }
                  v33 += 7;
                  BOOL v14 = v34++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_66:
                    unint64_t v2 = v35 + 1;
                    goto LABEL_67;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_66;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_67;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_67:
              *(_DWORD *)(a1 + 24) = v25;
              goto LABEL_73;
            case 0x186A3u:
              *(unsigned char *)(a1 + 28) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 12) = *(_DWORD *)(*(void *)this + v2);
LABEL_62:
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_39:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_73;
            case 0x186A4u:
              *(unsigned char *)(a1 + 28) |= 4u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v37 = 0;
                unsigned int v38 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_72;
                  }
                  unint64_t v39 = v27++;
                  char v40 = *(unsigned char *)(v28 + v39);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v40 & 0x7F) << v37;
                  if ((v40 & 0x80) == 0) {
                    break;
                  }
                  v37 += 7;
                  BOOL v14 = v38++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_71:
                    unint64_t v2 = v39 + 1;
                    goto LABEL_72;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_71;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_72;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_72:
              *(_DWORD *)(a1 + 16) = v31;
LABEL_73:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_73;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_10168AB54(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 28);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(result + 8), 0x186A0u);
    char v4 = *(unsigned char *)(v3 + 28);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 28) & 8) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20), 0x186A1u);
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 0x10) == 0)
  {
LABEL_4:
    if ((v4 & 2) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 12), 0x186A3u);
    if ((*(unsigned char *)(v3 + 28) & 4) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 24), 0x186A2u);
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 4) == 0) {
    return result;
  }
LABEL_11:
  int v5 = *(_DWORD *)(v3 + 16);

  return PB::Writer::writeVarInt(this, v5, 0x186A4u);
}

uint64_t sub_10168AC30(uint64_t result)
{
  *(void *)uint64_t result = &off_102334018;
  *(_DWORD *)(result + 44) = 0;
  return result;
}

void sub_10168AC58(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_10168AC90(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102334018;
  *(_DWORD *)(result + 44) = 0;
  char v2 = *(unsigned char *)(a2 + 44);
  if ((v2 & 8) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 32);
    char v3 = 8;
    *(unsigned char *)(result + 44) = 8;
    *(void *)(result + 32) = v4;
    char v2 = *(unsigned char *)(a2 + 44);
    if ((v2 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if (*(unsigned char *)(a2 + 44))
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 8);
    v3 |= 1u;
    *(unsigned char *)(result + 44) = v3;
    *(void *)(result + 8) = v5;
    char v2 = *(unsigned char *)(a2 + 44);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(result + 44) = v3;
    *(void *)(result + 16) = v6;
    char v2 = *(unsigned char *)(a2 + 44);
    if ((v2 & 0x10) == 0)
    {
LABEL_8:
      if ((v2 & 4) == 0) {
        return result;
      }
LABEL_12:
      uint64_t v8 = *(void *)(a2 + 24);
      *(unsigned char *)(result + 44) = v3 | 4;
      *(void *)(result + 24) = v8;
      return result;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 40);
  v3 |= 0x10u;
  *(unsigned char *)(result + 44) = v3;
  *(_DWORD *)(result + 40) = v7;
  if ((*(unsigned char *)(a2 + 44) & 4) != 0) {
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_10168AD48(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 44);
  if (v5)
  {
    PB::TextFormatter::format(this, "epochFirstTimestamp", *(void *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 44);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a1 + 44) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "epochLastTimestamp", *(void *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(this, "maxNormTimestamp", *(void *)(a1 + 24));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(this, "maxNormValue", *(float *)(a1 + 40));
  if ((*(unsigned char *)(a1 + 44) & 8) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 32));
LABEL_7:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10168AE2C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 44) |= 8u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v45 = 0;
                unsigned int v46 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_88;
                  }
                  unint64_t v47 = v20++;
                  char v48 = *(unsigned char *)(v21 + v47);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v48 & 0x7F) << v45;
                  if ((v48 & 0x80) == 0) {
                    break;
                  }
                  v45 += 7;
                  BOOL v14 = v46++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
                    goto LABEL_87;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
LABEL_87:
                unint64_t v2 = v47 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_88;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                uint64_t v24 = 0;
              }
LABEL_88:
              *(void *)(a1 + 32) = v24;
              goto LABEL_104;
            case 2u:
              *(unsigned char *)(a1 + 44) |= 1u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v49 = 0;
                unsigned int v50 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    uint64_t v31 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_93;
                  }
                  unint64_t v51 = v27++;
                  char v52 = *(unsigned char *)(v28 + v51);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v52 & 0x7F) << v49;
                  if ((v52 & 0x80) == 0) {
                    break;
                  }
                  v49 += 7;
                  BOOL v14 = v50++ > 8;
                  if (v14)
                  {
                    uint64_t v31 = 0;
LABEL_92:
                    unint64_t v2 = v51 + 1;
                    goto LABEL_93;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v31 = 0;
                }
                goto LABEL_92;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_93;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              uint64_t v31 = 0;
LABEL_93:
              *(void *)(a1 + 8) = v31;
              goto LABEL_104;
            case 3u:
              *(unsigned char *)(a1 + 44) |= 2u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v53 = 0;
                unsigned int v54 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    uint64_t v37 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_98;
                  }
                  unint64_t v55 = v33++;
                  char v56 = *(unsigned char *)(v34 + v55);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v56 & 0x7F) << v53;
                  if ((v56 & 0x80) == 0) {
                    break;
                  }
                  v53 += 7;
                  BOOL v14 = v54++ > 8;
                  if (v14)
                  {
                    uint64_t v37 = 0;
LABEL_97:
                    unint64_t v2 = v55 + 1;
                    goto LABEL_98;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v37 = 0;
                }
                goto LABEL_97;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_98;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              uint64_t v37 = 0;
LABEL_98:
              *(void *)(a1 + 16) = v37;
              goto LABEL_104;
            case 4u:
              *(unsigned char *)(a1 + 44) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_104;
            case 5u:
              *(unsigned char *)(a1 + 44) |= 4u;
              unint64_t v39 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v40 = *(void *)this;
              if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
              {
                char v57 = 0;
                unsigned int v58 = 0;
                uint64_t v43 = 0;
                if (v2 <= v39) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v39)
                  {
                    uint64_t v43 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_103;
                  }
                  unint64_t v59 = v39++;
                  char v60 = *(unsigned char *)(v40 + v59);
                  *((void *)this + 1) = v39;
                  v43 |= (unint64_t)(v60 & 0x7F) << v57;
                  if ((v60 & 0x80) == 0) {
                    break;
                  }
                  v57 += 7;
                  BOOL v14 = v58++ > 8;
                  if (v14)
                  {
                    uint64_t v43 = 0;
LABEL_102:
                    unint64_t v2 = v59 + 1;
                    goto LABEL_103;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v43 = 0;
                }
                goto LABEL_102;
              }
              char v41 = 0;
              unsigned int v42 = 0;
              uint64_t v43 = 0;
              do
              {
                unint64_t v2 = v39 + 1;
                *((void *)this + 1) = v39 + 1;
                char v44 = *(unsigned char *)(v40 + v39);
                v43 |= (unint64_t)(v44 & 0x7F) << v41;
                if ((v44 & 0x80) == 0) {
                  goto LABEL_103;
                }
                v41 += 7;
                unint64_t v39 = v2;
                BOOL v14 = v42++ > 8;
              }
              while (!v14);
              uint64_t v43 = 0;
LABEL_103:
              *(void *)(a1 + 24) = v43;
LABEL_104:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_104;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_10168B3B0(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 44);
  if ((v4 & 8) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(result + 32), 1u);
    char v4 = *(unsigned char *)(v3 + 44);
    if ((v4 & 1) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 44) & 1) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 8), 2u);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 2) == 0)
  {
LABEL_4:
    if ((v4 & 0x10) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40), 4u);
    if ((*(unsigned char *)(v3 + 44) & 4) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 16), 3u);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 0x10) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 4) == 0) {
    return result;
  }
LABEL_11:
  unint64_t v5 = *(void *)(v3 + 24);

  return PB::Writer::writeVarInt(this, v5, 5u);
}

double sub_10168B474(uint64_t a1)
{
  *(void *)a1 = &off_102334050;
  *(_DWORD *)(a1 + 152) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return result;
}

void sub_10168B4A8(PB::Base *this)
{
  *(void *)this = &off_102334050;
  unint64_t v2 = (void *)*((void *)this + 4);
  if (v2)
  {
    *((void *)this + 5) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 1);
  if (v3)
  {
    *((void *)this + 2) = v3;
    operator delete(v3);
  }

  PB::Base::~Base(this);
}

void sub_10168B51C(PB::Base *a1)
{
  sub_10168B4A8(a1);

  operator delete();
}

uint64_t sub_10168B554(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102334050;
  *(_OWORD *)(a1 + 8) = 0u;
  char v4 = (char *)(a1 + 8);
  *(_DWORD *)(a1 + 152) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  int v5 = *(_DWORD *)(a2 + 152);
  if ((v5 & 0x80) != 0)
  {
    int v7 = *(_DWORD *)(a2 + 112);
    int v6 = 128;
    *(_DWORD *)(a1 + 152) = 128;
    *(_DWORD *)(a1 + 112) = v7;
    int v5 = *(_DWORD *)(a2 + 152);
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v6 = 0;
  if ((v5 & 8) != 0)
  {
LABEL_5:
    uint64_t v8 = *(void *)(a2 + 80);
    v6 |= 8u;
    *(_DWORD *)(a1 + 152) = v6;
    *(void *)(a1 + 80) = v8;
    int v5 = *(_DWORD *)(a2 + 152);
  }
LABEL_6:
  if ((v5 & 0x800) != 0)
  {
    int v13 = *(_DWORD *)(a2 + 128);
    v6 |= 0x800u;
    *(_DWORD *)(a1 + 152) = v6;
    *(_DWORD *)(a1 + 128) = v13;
    int v5 = *(_DWORD *)(a2 + 152);
    if ((v5 & 0x10) == 0)
    {
LABEL_8:
      if ((v5 & 0x4000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_29;
    }
  }
  else if ((v5 & 0x10) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v14 = *(void *)(a2 + 88);
  v6 |= 0x10u;
  *(_DWORD *)(a1 + 152) = v6;
  *(void *)(a1 + 88) = v14;
  int v5 = *(_DWORD *)(a2 + 152);
  if ((v5 & 0x4000) == 0)
  {
LABEL_9:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_30;
  }
LABEL_29:
  int v15 = *(_DWORD *)(a2 + 140);
  v6 |= 0x4000u;
  *(_DWORD *)(a1 + 152) = v6;
  *(_DWORD *)(a1 + 140) = v15;
  int v5 = *(_DWORD *)(a2 + 152);
  if ((v5 & 0x8000) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_31;
  }
LABEL_30:
  int v16 = *(_DWORD *)(a2 + 144);
  v6 |= 0x8000u;
  *(_DWORD *)(a1 + 152) = v6;
  *(_DWORD *)(a1 + 144) = v16;
  int v5 = *(_DWORD *)(a2 + 152);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_32;
  }
LABEL_31:
  int v17 = *(_DWORD *)(a2 + 120);
  v6 |= 0x200u;
  *(_DWORD *)(a1 + 152) = v6;
  *(_DWORD *)(a1 + 120) = v17;
  int v5 = *(_DWORD *)(a2 + 152);
  if ((v5 & 0x400) == 0)
  {
LABEL_12:
    if ((v5 & 0x20) == 0) {
      goto LABEL_13;
    }
    goto LABEL_33;
  }
LABEL_32:
  int v18 = *(_DWORD *)(a2 + 124);
  v6 |= 0x400u;
  *(_DWORD *)(a1 + 152) = v6;
  *(_DWORD *)(a1 + 124) = v18;
  int v5 = *(_DWORD *)(a2 + 152);
  if ((v5 & 0x20) == 0)
  {
LABEL_13:
    if ((v5 & 0x100) == 0) {
      goto LABEL_14;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t v19 = *(void *)(a2 + 96);
  v6 |= 0x20u;
  *(_DWORD *)(a1 + 152) = v6;
  *(void *)(a1 + 96) = v19;
  int v5 = *(_DWORD *)(a2 + 152);
  if ((v5 & 0x100) == 0)
  {
LABEL_14:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_35;
  }
LABEL_34:
  int v20 = *(_DWORD *)(a2 + 116);
  v6 |= 0x100u;
  *(_DWORD *)(a1 + 152) = v6;
  *(_DWORD *)(a1 + 116) = v20;
  int v5 = *(_DWORD *)(a2 + 152);
  if ((v5 & 0x10000) == 0)
  {
LABEL_15:
    if ((v5 & 0x40) == 0) {
      goto LABEL_16;
    }
    goto LABEL_36;
  }
LABEL_35:
  char v21 = *(unsigned char *)(a2 + 148);
  v6 |= 0x10000u;
  *(_DWORD *)(a1 + 152) = v6;
  *(unsigned char *)(a1 + 148) = v21;
  int v5 = *(_DWORD *)(a2 + 152);
  if ((v5 & 0x40) == 0)
  {
LABEL_16:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t v22 = *(void *)(a2 + 104);
  v6 |= 0x40u;
  *(_DWORD *)(a1 + 152) = v6;
  *(void *)(a1 + 104) = v22;
  int v5 = *(_DWORD *)(a2 + 152);
  if ((v5 & 0x1000) == 0)
  {
LABEL_17:
    if ((v5 & 4) == 0) {
      goto LABEL_18;
    }
    goto LABEL_38;
  }
LABEL_37:
  int v23 = *(_DWORD *)(a2 + 132);
  v6 |= 0x1000u;
  *(_DWORD *)(a1 + 152) = v6;
  *(_DWORD *)(a1 + 132) = v23;
  int v5 = *(_DWORD *)(a2 + 152);
  if ((v5 & 4) == 0)
  {
LABEL_18:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_38:
  uint64_t v24 = *(void *)(a2 + 72);
  v6 |= 4u;
  *(_DWORD *)(a1 + 152) = v6;
  *(void *)(a1 + 72) = v24;
  if ((*(_DWORD *)(a2 + 152) & 0x2000) != 0)
  {
LABEL_19:
    int v9 = *(_DWORD *)(a2 + 136);
    *(_DWORD *)(a1 + 152) = v6 | 0x2000;
    *(_DWORD *)(a1 + 136) = v9;
  }
LABEL_20:
  if (a1 != a2)
  {
    sub_1002DD194(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
    sub_1000FB43C((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
  }
  int v10 = *(_DWORD *)(a2 + 152);
  if ((v10 & 1) == 0)
  {
    if ((v10 & 2) == 0) {
      goto LABEL_24;
    }
LABEL_41:
    uint64_t v26 = *(void *)(a2 + 64);
    *(_DWORD *)(a1 + 152) |= 2u;
    *(void *)(a1 + 64) = v26;
    if ((*(_DWORD *)(a2 + 152) & 0x20000) == 0) {
      return a1;
    }
    goto LABEL_25;
  }
  uint64_t v25 = *(void *)(a2 + 56);
  *(_DWORD *)(a1 + 152) |= 1u;
  *(void *)(a1 + 56) = v25;
  int v10 = *(_DWORD *)(a2 + 152);
  if ((v10 & 2) != 0) {
    goto LABEL_41;
  }
LABEL_24:
  if ((v10 & 0x20000) != 0)
  {
LABEL_25:
    char v11 = *(unsigned char *)(a2 + 149);
    *(_DWORD *)(a1 + 152) |= 0x20000u;
    *(unsigned char *)(a1 + 149) = v11;
  }
  return a1;
}

uint64_t sub_10168B7E8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if ((*(unsigned char *)(a1 + 152) & 0x80) != 0) {
    PB::TextFormatter::format(this, "accelPeakThreshold", *(float *)(a1 + 112));
  }
  int v5 = *(unint64_t **)(a1 + 8);
  int v6 = *(unint64_t **)(a1 + 16);
  while (v5 != v6)
  {
    unint64_t v7 = *v5++;
    PB::TextFormatter::format(this, "allMaxNormTimestamps", v7);
  }
  uint64_t v8 = *(float **)(a1 + 32);
  int v9 = *(float **)(a1 + 40);
  while (v8 != v9)
  {
    float v10 = *v8++;
    PB::TextFormatter::format(this, "allMaxNormValues", v10);
  }
  int v11 = *(_DWORD *)(a1 + 152);
  if (v11)
  {
    PB::TextFormatter::format(this, "epochFirstTimestamp", *(void *)(a1 + 56));
    int v11 = *(_DWORD *)(a1 + 152);
    if ((v11 & 2) == 0)
    {
LABEL_9:
      if ((v11 & 0x10000) == 0) {
        goto LABEL_10;
      }
      goto LABEL_30;
    }
  }
  else if ((v11 & 2) == 0)
  {
    goto LABEL_9;
  }
  PB::TextFormatter::format(this, "epochLastTimestamp", *(void *)(a1 + 64));
  int v11 = *(_DWORD *)(a1 + 152);
  if ((v11 & 0x10000) == 0)
  {
LABEL_10:
    if ((v11 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "isMAPDetected", *(unsigned char *)(a1 + 148));
  int v11 = *(_DWORD *)(a1 + 152);
  if ((v11 & 0x100) == 0)
  {
LABEL_11:
    if ((v11 & 0x200) == 0) {
      goto LABEL_12;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(this, "magnitudePercentileThreshold", *(float *)(a1 + 116));
  int v11 = *(_DWORD *)(a1 + 152);
  if ((v11 & 0x200) == 0)
  {
LABEL_12:
    if ((v11 & 0x400) == 0) {
      goto LABEL_13;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(this, "magnitudePeriodicityLowerPercentile", *(float *)(a1 + 120));
  int v11 = *(_DWORD *)(a1 + 152);
  if ((v11 & 0x400) == 0)
  {
LABEL_13:
    if ((v11 & 0x800) == 0) {
      goto LABEL_14;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(this, "magnitudePeriodicityUpperPercentile", *(float *)(a1 + 124));
  int v11 = *(_DWORD *)(a1 + 152);
  if ((v11 & 0x800) == 0)
  {
LABEL_14:
    if ((v11 & 0x1000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(this, "minNumPeaks", *(_DWORD *)(a1 + 128));
  int v11 = *(_DWORD *)(a1 + 152);
  if ((v11 & 0x1000) == 0)
  {
LABEL_15:
    if ((v11 & 0x2000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "numPeaks", *(_DWORD *)(a1 + 132));
  int v11 = *(_DWORD *)(a1 + 152);
  if ((v11 & 0x2000) == 0)
  {
LABEL_16:
    if ((v11 & 0x20000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "peakMagnitudePercentileDiff", *(float *)(a1 + 136));
  int v11 = *(_DWORD *)(a1 + 152);
  if ((v11 & 0x20000) == 0)
  {
LABEL_17:
    if ((v11 & 4) == 0) {
      goto LABEL_18;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "peakSeparation", *(unsigned char *)(a1 + 149));
  int v11 = *(_DWORD *)(a1 + 152);
  if ((v11 & 4) == 0)
  {
LABEL_18:
    if ((v11 & 8) == 0) {
      goto LABEL_19;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "peakTimeDeltaPercentileDiff", *(void *)(a1 + 72));
  int v11 = *(_DWORD *)(a1 + 152);
  if ((v11 & 8) == 0)
  {
LABEL_19:
    if ((v11 & 0x10) == 0) {
      goto LABEL_20;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "peakToPeakMinimumSeparation", *(void *)(a1 + 80));
  int v11 = *(_DWORD *)(a1 + 152);
  if ((v11 & 0x10) == 0)
  {
LABEL_20:
    if ((v11 & 0x20) == 0) {
      goto LABEL_21;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "peakToPeakSeparationThreshold", *(void *)(a1 + 88));
  int v11 = *(_DWORD *)(a1 + 152);
  if ((v11 & 0x20) == 0)
  {
LABEL_21:
    if ((v11 & 0x4000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(this, "timePercentileDiffThreshold", *(void *)(a1 + 96));
  int v11 = *(_DWORD *)(a1 + 152);
  if ((v11 & 0x4000) == 0)
  {
LABEL_22:
    if ((v11 & 0x8000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(this, "timePeriodicityLowerPercentile", *(float *)(a1 + 140));
  int v11 = *(_DWORD *)(a1 + 152);
  if ((v11 & 0x8000) == 0)
  {
LABEL_23:
    if ((v11 & 0x40) == 0) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
LABEL_43:
  PB::TextFormatter::format(this, "timePeriodicityUpperPercentile", *(float *)(a1 + 144));
  if ((*(_DWORD *)(a1 + 152) & 0x40) != 0) {
LABEL_24:
  }
    PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 104));
LABEL_25:

  return PB::TextFormatter::endObject(this);
}

BOOL sub_10168BAD0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v8 = (void **)(a1 + 32);
    uint64_t v9 = a1 + 48;
    float v10 = (void **)(a1 + 8);
    int v11 = (void *)(a1 + 24);
    while (1)
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v13 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v17 = *(unsigned char *)(v12 + v2);
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          break;
        }
        v13 += 7;
        unint64_t v2 = v16;
        BOOL v101 = v14++ > 8;
        if (v101) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v23 = v15 & 7;
      if (v23 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v24 = v15 >> 3;
      if ((int)(v15 >> 3) > 100)
      {
        switch((int)v24)
        {
          case 201:
            *(_DWORD *)(a1 + 152) |= 0x1000u;
            unint64_t v26 = *((void *)this + 1);
            unint64_t v27 = *((void *)this + 2);
            uint64_t v28 = *(void *)this;
            if (v26 <= 0xFFFFFFFFFFFFFFF5 && v26 + 10 <= v27)
            {
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v32 = v26 + 1;
                *((void *)this + 1) = v26 + 1;
                char v33 = *(unsigned char *)(v28 + v26);
                v31 |= (unint64_t)(v33 & 0x7F) << v29;
                if ((v33 & 0x80) == 0) {
                  goto LABEL_285;
                }
                v29 += 7;
                unint64_t v26 = v32;
                BOOL v101 = v30++ > 8;
              }
              while (!v101);
LABEL_192:
              LODWORD(v31) = 0;
              goto LABEL_285;
            }
            char v150 = 0;
            unsigned int v151 = 0;
            uint64_t v31 = 0;
            if (v27 <= v26) {
              unint64_t v27 = *((void *)this + 1);
            }
            while (2)
            {
              if (v27 == v26)
              {
                LODWORD(v31) = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v152 = v26 + 1;
                char v153 = *(unsigned char *)(v28 + v26);
                *((void *)this + 1) = v152;
                v31 |= (unint64_t)(v153 & 0x7F) << v150;
                if (v153 < 0)
                {
                  v150 += 7;
                  unint64_t v26 = v152;
                  BOOL v101 = v151++ > 8;
                  if (v101) {
                    goto LABEL_192;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
              }
              break;
            }
LABEL_285:
            *(_DWORD *)(a1 + 132) = v31;
            break;
          case 202:
            *(_DWORD *)(a1 + 152) |= 4u;
            unint64_t v79 = *((void *)this + 1);
            unint64_t v80 = *((void *)this + 2);
            uint64_t v81 = *(void *)this;
            if (v79 <= 0xFFFFFFFFFFFFFFF5 && v79 + 10 <= v80)
            {
              char v82 = 0;
              unsigned int v83 = 0;
              uint64_t v84 = 0;
              do
              {
                unint64_t v85 = v79 + 1;
                *((void *)this + 1) = v79 + 1;
                char v86 = *(unsigned char *)(v81 + v79);
                v84 |= (unint64_t)(v86 & 0x7F) << v82;
                if ((v86 & 0x80) == 0) {
                  goto LABEL_303;
                }
                v82 += 7;
                unint64_t v79 = v85;
                BOOL v101 = v83++ > 8;
              }
              while (!v101);
LABEL_234:
              uint64_t v84 = 0;
              goto LABEL_303;
            }
            char v174 = 0;
            unsigned int v175 = 0;
            uint64_t v84 = 0;
            if (v80 <= v79) {
              unint64_t v80 = *((void *)this + 1);
            }
            while (2)
            {
              if (v80 == v79)
              {
                uint64_t v84 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v176 = v79 + 1;
                char v177 = *(unsigned char *)(v81 + v79);
                *((void *)this + 1) = v176;
                v84 |= (unint64_t)(v177 & 0x7F) << v174;
                if (v177 < 0)
                {
                  v174 += 7;
                  unint64_t v79 = v176;
                  BOOL v101 = v175++ > 8;
                  if (v101) {
                    goto LABEL_234;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v84 = 0;
                }
              }
              break;
            }
LABEL_303:
            *(void *)(a1 + 72) = v84;
            break;
          case 203:
            *(_DWORD *)(a1 + 152) |= 0x2000u;
            unint64_t v87 = *((void *)this + 1);
            if (v87 > 0xFFFFFFFFFFFFFFFBLL || v87 + 4 > *((void *)this + 2)) {
              goto LABEL_342;
            }
            *(_DWORD *)(a1 + 136) = *(_DWORD *)(*(void *)this + v87);
            goto LABEL_344;
          case 204:
            if (v23 != 2)
            {
              unint64_t v179 = *(char **)(a1 + 16);
              unint64_t v178 = *(void *)(a1 + 24);
              if ((unint64_t)v179 >= v178)
              {
                char v192 = (char *)*v10;
                uint64_t v193 = (v179 - (unsigned char *)*v10) >> 3;
                unint64_t v194 = v193 + 1;
                if ((unint64_t)(v193 + 1) >> 61) {
LABEL_360:
                }
                  sub_1001D7FD4();
                uint64_t v195 = v178 - (void)v192;
                if (v195 >> 2 > v194) {
                  unint64_t v194 = v195 >> 2;
                }
                if ((unint64_t)v195 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v196 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v196 = v194;
                }
                if (v196)
                {
                  uint64_t v197 = (char *)sub_1000DA54C((uint64_t)v11, v196);
                  char v192 = *(char **)(a1 + 8);
                  unint64_t v179 = *(char **)(a1 + 16);
                }
                else
                {
                  uint64_t v197 = 0;
                }
                char v204 = &v197[8 * v193];
                *(void *)char v204 = 0;
                v180 = v204 + 8;
                while (v179 != v192)
                {
                  uint64_t v205 = *((void *)v179 - 1);
                  v179 -= 8;
                  *((void *)v204 - 1) = v205;
                  v204 -= 8;
                }
                *(void *)(a1 + 8) = v204;
                *(void *)(a1 + 16) = v180;
                *(void *)(a1 + 24) = &v197[8 * v196];
                if (v192) {
                  operator delete(v192);
                }
              }
              else
              {
                *(void *)unint64_t v179 = 0;
                v180 = v179 + 8;
              }
              *(void *)(a1 + 16) = v180;
              unint64_t v206 = *((void *)this + 1);
              unint64_t v207 = *((void *)this + 2);
              uint64_t v208 = *(void *)this;
              char v209 = 0;
              unsigned int v210 = 0;
              if (v206 > 0xFFFFFFFFFFFFFFF5 || v206 + 10 > v207)
              {
                uint64_t v214 = 0;
                if (v207 <= v206) {
                  unint64_t v207 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v207 == v206)
                  {
                    uint64_t v214 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_348;
                  }
                  unint64_t v212 = v206 + 1;
                  char v213 = *(unsigned char *)(v208 + v206);
                  *((void *)this + 1) = v212;
                  v214 |= (unint64_t)(v213 & 0x7F) << v209;
                  if ((v213 & 0x80) == 0) {
                    break;
                  }
                  v209 += 7;
                  unint64_t v206 = v212;
                  BOOL v101 = v210++ > 8;
                  if (v101)
                  {
LABEL_333:
                    uint64_t v214 = 0;
                    goto LABEL_348;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v214 = 0;
                }
              }
              else
              {
                uint64_t v214 = 0;
                while (1)
                {
                  unint64_t v215 = v206 + 1;
                  *((void *)this + 1) = v206 + 1;
                  char v216 = *(unsigned char *)(v208 + v206);
                  v214 |= (unint64_t)(v216 & 0x7F) << v209;
                  if ((v216 & 0x80) == 0) {
                    break;
                  }
                  v209 += 7;
                  unint64_t v206 = v215;
                  BOOL v101 = v210++ > 8;
                  if (v101) {
                    goto LABEL_333;
                  }
                }
              }
LABEL_348:
              *(v180 - 1) = v214;
              break;
            }
            if (PB::Reader::placeMark()) {
              return 0;
            }
            if (*((void *)this + 1) < *((void *)this + 2) && !*((unsigned char *)this + 24))
            {
              unint64_t v88 = *(char **)(a1 + 16);
              do
              {
                if ((unint64_t)v88 >= *v11)
                {
                  unint64_t v89 = (char *)*v10;
                  uint64_t v90 = (v88 - (unsigned char *)*v10) >> 3;
                  unint64_t v91 = v90 + 1;
                  if ((unint64_t)(v90 + 1) >> 61) {
                    goto LABEL_360;
                  }
                  uint64_t v92 = *v11 - (void)v89;
                  if (v92 >> 2 > v91) {
                    unint64_t v91 = v92 >> 2;
                  }
                  if ((unint64_t)v92 >= 0x7FFFFFFFFFFFFFF8) {
                    unint64_t v93 = 0x1FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v93 = v91;
                  }
                  if (v93)
                  {
                    int v94 = (char *)sub_1000DA54C((uint64_t)v11, v93);
                    unint64_t v89 = *(char **)(a1 + 8);
                    unint64_t v88 = *(char **)(a1 + 16);
                  }
                  else
                  {
                    int v94 = 0;
                  }
                  BOOL v95 = &v94[8 * v90];
                  *(void *)BOOL v95 = 0;
                  unint64_t v96 = v95 + 8;
                  while (v88 != v89)
                  {
                    uint64_t v97 = *((void *)v88 - 1);
                    v88 -= 8;
                    *((void *)v95 - 1) = v97;
                    v95 -= 8;
                  }
                  *(void *)(a1 + 8) = v95;
                  *(void *)(a1 + 16) = v96;
                  *(void *)(a1 + 24) = &v94[8 * v93];
                  if (v89) {
                    operator delete(v89);
                  }
                  unint64_t v88 = v96;
                }
                else
                {
                  *(void *)unint64_t v88 = 0;
                  v88 += 8;
                }
                *(void *)(a1 + 16) = v88;
                unint64_t v99 = *((void *)this + 1);
                unint64_t v98 = *((void *)this + 2);
                uint64_t v100 = *(void *)this;
                BOOL v101 = v99 > 0xFFFFFFFFFFFFFFF5 || v99 + 10 > v98;
                if (!v101)
                {
                  char v107 = 0;
                  unsigned int v108 = 0;
                  uint64_t v109 = 0;
                  while (1)
                  {
                    unint64_t v110 = v99 + 1;
                    *((void *)this + 1) = v99 + 1;
                    char v111 = *(unsigned char *)(v100 + v99);
                    v109 |= (unint64_t)(v111 & 0x7F) << v107;
                    if ((v111 & 0x80) == 0) {
                      goto LABEL_139;
                    }
                    v107 += 7;
                    unint64_t v99 = v110;
                    BOOL v101 = v108++ > 8;
                    if (v101)
                    {
                      uint64_t v109 = 0;
                      goto LABEL_139;
                    }
                  }
                }
                char v102 = 0;
                unsigned int v103 = 0;
                uint64_t v109 = 0;
                if (v98 <= v99) {
                  uint64_t v104 = *((void *)this + 1);
                }
                else {
                  uint64_t v104 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v104 == v99)
                  {
                    *((unsigned char *)this + 24) = 1;
                    *((void *)v88 - 1) = 0;
                    goto LABEL_311;
                  }
                  unint64_t v105 = v99++;
                  char v106 = *(unsigned char *)(v100 + v105);
                  *((void *)this + 1) = v99;
                  v109 |= (unint64_t)(v106 & 0x7F) << v102;
                  if ((v106 & 0x80) == 0) {
                    break;
                  }
                  v102 += 7;
                  BOOL v101 = v103++ > 8;
                  if (v101)
                  {
                    uint64_t v109 = 0;
                    goto LABEL_138;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v109 = 0;
                }
LABEL_138:
                unint64_t v110 = v105 + 1;
LABEL_139:
                *((void *)v88 - 1) = v109;
              }
              while (v110 < v98 && !*((unsigned char *)this + 24));
            }
            goto LABEL_311;
          case 205:
            if (v23 == 2)
            {
              if (PB::Reader::placeMark()) {
                return 0;
              }
              unint64_t v112 = *((void *)this + 1);
              unint64_t v113 = *((void *)this + 2);
              while (v112 < v113 && !*((unsigned char *)this + 24))
              {
                unint64_t v115 = *(char **)(a1 + 40);
                unint64_t v114 = *(void *)(a1 + 48);
                if ((unint64_t)v115 >= v114)
                {
                  int v117 = (char *)*v8;
                  uint64_t v118 = (v115 - (unsigned char *)*v8) >> 2;
                  unint64_t v119 = v118 + 1;
                  if ((unint64_t)(v118 + 1) >> 62) {
                    goto LABEL_359;
                  }
                  uint64_t v120 = v114 - (void)v117;
                  if (v120 >> 1 > v119) {
                    unint64_t v119 = v120 >> 1;
                  }
                  if ((unint64_t)v120 >= 0x7FFFFFFFFFFFFFFCLL) {
                    unint64_t v121 = 0x3FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v121 = v119;
                  }
                  if (v121)
                  {
                    char v122 = (char *)sub_10017EA34(v9, v121);
                    int v117 = *(char **)(a1 + 32);
                    unint64_t v115 = *(char **)(a1 + 40);
                  }
                  else
                  {
                    char v122 = 0;
                  }
                  char v123 = &v122[4 * v118];
                  *(_DWORD *)char v123 = 0;
                  unint64_t v116 = v123 + 4;
                  while (v115 != v117)
                  {
                    int v124 = *((_DWORD *)v115 - 1);
                    v115 -= 4;
                    *((_DWORD *)v123 - 1) = v124;
                    v123 -= 4;
                  }
                  *(void *)(a1 + 32) = v123;
                  *(void *)(a1 + 40) = v116;
                  *(void *)(a1 + 48) = &v122[4 * v121];
                  if (v117) {
                    operator delete(v117);
                  }
                }
                else
                {
                  *(_DWORD *)unint64_t v115 = 0;
                  unint64_t v116 = v115 + 4;
                }
                *(void *)(a1 + 40) = v116;
                unint64_t v125 = *((void *)this + 1);
                if (v125 > 0xFFFFFFFFFFFFFFFBLL || v125 + 4 > *((void *)this + 2))
                {
                  *((unsigned char *)this + 24) = 1;
                  break;
                }
                *(v116 - 1) = *(_DWORD *)(*(void *)this + v125);
                unint64_t v113 = *((void *)this + 2);
                unint64_t v112 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v112;
              }
LABEL_311:
              PB::Reader::recallMark();
            }
            else
            {
              unint64_t v182 = *(char **)(a1 + 40);
              unint64_t v181 = *(void *)(a1 + 48);
              if ((unint64_t)v182 >= v181)
              {
                char v198 = (char *)*v8;
                uint64_t v199 = (v182 - (unsigned char *)*v8) >> 2;
                unint64_t v200 = v199 + 1;
                if ((unint64_t)(v199 + 1) >> 62) {
LABEL_359:
                }
                  sub_1001D7FD4();
                uint64_t v201 = v181 - (void)v198;
                if (v201 >> 1 > v200) {
                  unint64_t v200 = v201 >> 1;
                }
                if ((unint64_t)v201 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v202 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v202 = v200;
                }
                if (v202)
                {
                  unint64_t v203 = (char *)sub_10017EA34(v9, v202);
                  char v198 = *(char **)(a1 + 32);
                  unint64_t v182 = *(char **)(a1 + 40);
                }
                else
                {
                  unint64_t v203 = 0;
                }
                v217 = &v203[4 * v199];
                *(_DWORD *)v217 = 0;
                unint64_t v183 = v217 + 4;
                while (v182 != v198)
                {
                  int v218 = *((_DWORD *)v182 - 1);
                  v182 -= 4;
                  *((_DWORD *)v217 - 1) = v218;
                  v217 -= 4;
                }
                *(void *)(a1 + 32) = v217;
                *(void *)(a1 + 40) = v183;
                *(void *)(a1 + 48) = &v203[4 * v202];
                if (v198) {
                  operator delete(v198);
                }
              }
              else
              {
                *(_DWORD *)unint64_t v182 = 0;
                unint64_t v183 = v182 + 4;
              }
              *(void *)(a1 + 40) = v183;
              unint64_t v219 = *((void *)this + 1);
              if (v219 <= 0xFFFFFFFFFFFFFFFBLL && v219 + 4 <= *((void *)this + 2))
              {
                *(v183 - 1) = *(_DWORD *)(*(void *)this + v219);
LABEL_344:
                *((void *)this + 1) += 4;
              }
              else
              {
LABEL_342:
                *((unsigned char *)this + 24) = 1;
              }
            }
            break;
          case 206:
            *(_DWORD *)(a1 + 152) |= 1u;
            unint64_t v126 = *((void *)this + 1);
            unint64_t v127 = *((void *)this + 2);
            uint64_t v128 = *(void *)this;
            if (v126 <= 0xFFFFFFFFFFFFFFF5 && v126 + 10 <= v127)
            {
              char v129 = 0;
              unsigned int v130 = 0;
              uint64_t v131 = 0;
              do
              {
                unint64_t v132 = v126 + 1;
                *((void *)this + 1) = v126 + 1;
                char v133 = *(unsigned char *)(v128 + v126);
                v131 |= (unint64_t)(v133 & 0x7F) << v129;
                if ((v133 & 0x80) == 0) {
                  goto LABEL_306;
                }
                v129 += 7;
                unint64_t v126 = v132;
                BOOL v101 = v130++ > 8;
              }
              while (!v101);
LABEL_245:
              uint64_t v131 = 0;
              goto LABEL_306;
            }
            char v184 = 0;
            unsigned int v185 = 0;
            uint64_t v131 = 0;
            if (v127 <= v126) {
              unint64_t v127 = *((void *)this + 1);
            }
            while (2)
            {
              if (v127 == v126)
              {
                uint64_t v131 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v186 = v126 + 1;
                char v187 = *(unsigned char *)(v128 + v126);
                *((void *)this + 1) = v186;
                v131 |= (unint64_t)(v187 & 0x7F) << v184;
                if (v187 < 0)
                {
                  v184 += 7;
                  unint64_t v126 = v186;
                  BOOL v101 = v185++ > 8;
                  if (v101) {
                    goto LABEL_245;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v131 = 0;
                }
              }
              break;
            }
LABEL_306:
            *(void *)(a1 + 56) = v131;
            break;
          case 207:
            *(_DWORD *)(a1 + 152) |= 2u;
            unint64_t v134 = *((void *)this + 1);
            unint64_t v135 = *((void *)this + 2);
            uint64_t v136 = *(void *)this;
            if (v134 <= 0xFFFFFFFFFFFFFFF5 && v134 + 10 <= v135)
            {
              char v137 = 0;
              unsigned int v138 = 0;
              uint64_t v139 = 0;
              do
              {
                unint64_t v140 = v134 + 1;
                *((void *)this + 1) = v134 + 1;
                char v141 = *(unsigned char *)(v136 + v134);
                v139 |= (unint64_t)(v141 & 0x7F) << v137;
                if ((v141 & 0x80) == 0) {
                  goto LABEL_309;
                }
                v137 += 7;
                unint64_t v134 = v140;
                BOOL v101 = v138++ > 8;
              }
              while (!v101);
LABEL_252:
              uint64_t v139 = 0;
              goto LABEL_309;
            }
            char v188 = 0;
            unsigned int v189 = 0;
            uint64_t v139 = 0;
            if (v135 <= v134) {
              unint64_t v135 = *((void *)this + 1);
            }
            while (2)
            {
              if (v135 == v134)
              {
                uint64_t v139 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v190 = v134 + 1;
                char v191 = *(unsigned char *)(v136 + v134);
                *((void *)this + 1) = v190;
                v139 |= (unint64_t)(v191 & 0x7F) << v188;
                if (v191 < 0)
                {
                  v188 += 7;
                  unint64_t v134 = v190;
                  BOOL v101 = v189++ > 8;
                  if (v101) {
                    goto LABEL_252;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v139 = 0;
                }
              }
              break;
            }
LABEL_309:
            *(void *)(a1 + 64) = v139;
            break;
          case 208:
            *(_DWORD *)(a1 + 152) |= 0x20000u;
            unint64_t v142 = *((void *)this + 1);
            if (v142 >= *((void *)this + 2))
            {
              BOOL v145 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v143 = v142 + 1;
              int v144 = *(unsigned __int8 *)(*(void *)this + v142);
              *((void *)this + 1) = v143;
              BOOL v145 = v144 != 0;
            }
            *(unsigned char *)(a1 + 149) = v145;
            break;
          default:
            if (v24 == 101)
            {
              *(_DWORD *)(a1 + 152) |= 0x10000u;
              unint64_t v146 = *((void *)this + 1);
              if (v146 >= *((void *)this + 2))
              {
                BOOL v149 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v147 = v146 + 1;
                int v148 = *(unsigned __int8 *)(*(void *)this + v146);
                *((void *)this + 1) = v147;
                BOOL v149 = v148 != 0;
              }
              *(unsigned char *)(a1 + 148) = v149;
            }
            else if (v24 == 102)
            {
              *(_DWORD *)(a1 + 152) |= 0x40u;
              unint64_t v34 = *((void *)this + 1);
              unint64_t v35 = *((void *)this + 2);
              uint64_t v36 = *(void *)this;
              if (v34 > 0xFFFFFFFFFFFFFFF5 || v34 + 10 > v35)
              {
                char v154 = 0;
                unsigned int v155 = 0;
                uint64_t v39 = 0;
                if (v35 <= v34) {
                  unint64_t v35 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v35 == v34)
                  {
                    uint64_t v39 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_288;
                  }
                  unint64_t v156 = v34 + 1;
                  char v157 = *(unsigned char *)(v36 + v34);
                  *((void *)this + 1) = v156;
                  v39 |= (unint64_t)(v157 & 0x7F) << v154;
                  if ((v157 & 0x80) == 0) {
                    break;
                  }
                  v154 += 7;
                  unint64_t v34 = v156;
                  BOOL v101 = v155++ > 8;
                  if (v101)
                  {
LABEL_199:
                    uint64_t v39 = 0;
                    goto LABEL_288;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v39 = 0;
                }
              }
              else
              {
                char v37 = 0;
                unsigned int v38 = 0;
                uint64_t v39 = 0;
                while (1)
                {
                  unint64_t v40 = v34 + 1;
                  *((void *)this + 1) = v34 + 1;
                  char v41 = *(unsigned char *)(v36 + v34);
                  v39 |= (unint64_t)(v41 & 0x7F) << v37;
                  if ((v41 & 0x80) == 0) {
                    break;
                  }
                  v37 += 7;
                  unint64_t v34 = v40;
                  BOOL v101 = v38++ > 8;
                  if (v101) {
                    goto LABEL_199;
                  }
                }
              }
LABEL_288:
              *(void *)(a1 + 104) = v39;
            }
            else
            {
LABEL_184:
              if ((PB::Reader::skip(this, v24, v23, 0) & 1) == 0) {
                return 0;
              }
            }
            break;
        }
      }
      else
      {
        switch((int)v24)
        {
          case 1:
            *(_DWORD *)(a1 + 152) |= 0x80u;
            unint64_t v25 = *((void *)this + 1);
            if (v25 > 0xFFFFFFFFFFFFFFFBLL || v25 + 4 > *((void *)this + 2)) {
              goto LABEL_342;
            }
            *(_DWORD *)(a1 + 112) = *(_DWORD *)(*(void *)this + v25);
            goto LABEL_344;
          case 2:
            *(_DWORD *)(a1 + 152) |= 8u;
            unint64_t v42 = *((void *)this + 1);
            unint64_t v43 = *((void *)this + 2);
            uint64_t v44 = *(void *)this;
            if (v42 <= 0xFFFFFFFFFFFFFFF5 && v42 + 10 <= v43)
            {
              char v45 = 0;
              unsigned int v46 = 0;
              uint64_t v47 = 0;
              do
              {
                unint64_t v48 = v42 + 1;
                *((void *)this + 1) = v42 + 1;
                char v49 = *(unsigned char *)(v44 + v42);
                v47 |= (unint64_t)(v49 & 0x7F) << v45;
                if ((v49 & 0x80) == 0) {
                  goto LABEL_291;
                }
                v45 += 7;
                unint64_t v42 = v48;
                BOOL v101 = v46++ > 8;
              }
              while (!v101);
LABEL_206:
              uint64_t v47 = 0;
              goto LABEL_291;
            }
            char v158 = 0;
            unsigned int v159 = 0;
            uint64_t v47 = 0;
            if (v43 <= v42) {
              unint64_t v43 = *((void *)this + 1);
            }
            while (2)
            {
              if (v43 == v42)
              {
                uint64_t v47 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v160 = v42 + 1;
                char v161 = *(unsigned char *)(v44 + v42);
                *((void *)this + 1) = v160;
                v47 |= (unint64_t)(v161 & 0x7F) << v158;
                if (v161 < 0)
                {
                  v158 += 7;
                  unint64_t v42 = v160;
                  BOOL v101 = v159++ > 8;
                  if (v101) {
                    goto LABEL_206;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v47 = 0;
                }
              }
              break;
            }
LABEL_291:
            *(void *)(a1 + 80) = v47;
            goto LABEL_349;
          case 3:
            *(_DWORD *)(a1 + 152) |= 0x800u;
            unint64_t v50 = *((void *)this + 1);
            unint64_t v51 = *((void *)this + 2);
            uint64_t v52 = *(void *)this;
            if (v50 <= 0xFFFFFFFFFFFFFFF5 && v50 + 10 <= v51)
            {
              char v53 = 0;
              unsigned int v54 = 0;
              uint64_t v55 = 0;
              do
              {
                unint64_t v56 = v50 + 1;
                *((void *)this + 1) = v50 + 1;
                char v57 = *(unsigned char *)(v52 + v50);
                v55 |= (unint64_t)(v57 & 0x7F) << v53;
                if ((v57 & 0x80) == 0) {
                  goto LABEL_294;
                }
                v53 += 7;
                unint64_t v50 = v56;
                BOOL v101 = v54++ > 8;
              }
              while (!v101);
LABEL_213:
              LODWORD(v55) = 0;
              goto LABEL_294;
            }
            char v162 = 0;
            unsigned int v163 = 0;
            uint64_t v55 = 0;
            if (v51 <= v50) {
              unint64_t v51 = *((void *)this + 1);
            }
            while (2)
            {
              if (v51 == v50)
              {
                LODWORD(v55) = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v164 = v50 + 1;
                char v165 = *(unsigned char *)(v52 + v50);
                *((void *)this + 1) = v164;
                v55 |= (unint64_t)(v165 & 0x7F) << v162;
                if (v165 < 0)
                {
                  v162 += 7;
                  unint64_t v50 = v164;
                  BOOL v101 = v163++ > 8;
                  if (v101) {
                    goto LABEL_213;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v55) = 0;
                }
              }
              break;
            }
LABEL_294:
            *(_DWORD *)(a1 + 128) = v55;
            goto LABEL_349;
          case 4:
            *(_DWORD *)(a1 + 152) |= 0x10u;
            unint64_t v58 = *((void *)this + 1);
            unint64_t v59 = *((void *)this + 2);
            uint64_t v60 = *(void *)this;
            if (v58 <= 0xFFFFFFFFFFFFFFF5 && v58 + 10 <= v59)
            {
              char v61 = 0;
              unsigned int v62 = 0;
              uint64_t v63 = 0;
              do
              {
                unint64_t v64 = v58 + 1;
                *((void *)this + 1) = v58 + 1;
                char v65 = *(unsigned char *)(v60 + v58);
                v63 |= (unint64_t)(v65 & 0x7F) << v61;
                if ((v65 & 0x80) == 0) {
                  goto LABEL_297;
                }
                v61 += 7;
                unint64_t v58 = v64;
                BOOL v101 = v62++ > 8;
              }
              while (!v101);
LABEL_220:
              uint64_t v63 = 0;
              goto LABEL_297;
            }
            char v166 = 0;
            unsigned int v167 = 0;
            uint64_t v63 = 0;
            if (v59 <= v58) {
              unint64_t v59 = *((void *)this + 1);
            }
            while (2)
            {
              if (v59 == v58)
              {
                uint64_t v63 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v168 = v58 + 1;
                char v169 = *(unsigned char *)(v60 + v58);
                *((void *)this + 1) = v168;
                v63 |= (unint64_t)(v169 & 0x7F) << v166;
                if (v169 < 0)
                {
                  v166 += 7;
                  unint64_t v58 = v168;
                  BOOL v101 = v167++ > 8;
                  if (v101) {
                    goto LABEL_220;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v63 = 0;
                }
              }
              break;
            }
LABEL_297:
            *(void *)(a1 + 88) = v63;
            goto LABEL_349;
          case 5:
            *(_DWORD *)(a1 + 152) |= 0x4000u;
            unint64_t v66 = *((void *)this + 1);
            if (v66 > 0xFFFFFFFFFFFFFFFBLL || v66 + 4 > *((void *)this + 2)) {
              goto LABEL_342;
            }
            *(_DWORD *)(a1 + 140) = *(_DWORD *)(*(void *)this + v66);
            goto LABEL_344;
          case 6:
            *(_DWORD *)(a1 + 152) |= 0x8000u;
            unint64_t v67 = *((void *)this + 1);
            if (v67 > 0xFFFFFFFFFFFFFFFBLL || v67 + 4 > *((void *)this + 2)) {
              goto LABEL_342;
            }
            *(_DWORD *)(a1 + 144) = *(_DWORD *)(*(void *)this + v67);
            goto LABEL_344;
          case 7:
            *(_DWORD *)(a1 + 152) |= 0x200u;
            unint64_t v68 = *((void *)this + 1);
            if (v68 > 0xFFFFFFFFFFFFFFFBLL || v68 + 4 > *((void *)this + 2)) {
              goto LABEL_342;
            }
            *(_DWORD *)(a1 + 120) = *(_DWORD *)(*(void *)this + v68);
            goto LABEL_344;
          case 8:
            *(_DWORD *)(a1 + 152) |= 0x400u;
            unint64_t v69 = *((void *)this + 1);
            if (v69 > 0xFFFFFFFFFFFFFFFBLL || v69 + 4 > *((void *)this + 2)) {
              goto LABEL_342;
            }
            *(_DWORD *)(a1 + 124) = *(_DWORD *)(*(void *)this + v69);
            goto LABEL_344;
          case 9:
            *(_DWORD *)(a1 + 152) |= 0x20u;
            unint64_t v70 = *((void *)this + 1);
            unint64_t v71 = *((void *)this + 2);
            uint64_t v72 = *(void *)this;
            if (v70 <= 0xFFFFFFFFFFFFFFF5 && v70 + 10 <= v71)
            {
              char v73 = 0;
              unsigned int v74 = 0;
              uint64_t v75 = 0;
              do
              {
                unint64_t v76 = v70 + 1;
                *((void *)this + 1) = v70 + 1;
                char v77 = *(unsigned char *)(v72 + v70);
                v75 |= (unint64_t)(v77 & 0x7F) << v73;
                if ((v77 & 0x80) == 0) {
                  goto LABEL_300;
                }
                v73 += 7;
                unint64_t v70 = v76;
                BOOL v101 = v74++ > 8;
              }
              while (!v101);
LABEL_227:
              uint64_t v75 = 0;
              goto LABEL_300;
            }
            char v170 = 0;
            unsigned int v171 = 0;
            uint64_t v75 = 0;
            if (v71 <= v70) {
              unint64_t v71 = *((void *)this + 1);
            }
            break;
          case 10:
            *(_DWORD *)(a1 + 152) |= 0x100u;
            unint64_t v78 = *((void *)this + 1);
            if (v78 > 0xFFFFFFFFFFFFFFFBLL || v78 + 4 > *((void *)this + 2)) {
              goto LABEL_342;
            }
            *(_DWORD *)(a1 + 116) = *(_DWORD *)(*(void *)this + v78);
            goto LABEL_344;
          default:
            goto LABEL_184;
        }
        while (1)
        {
          if (v71 == v70)
          {
            uint64_t v75 = 0;
            *((unsigned char *)this + 24) = 1;
            goto LABEL_300;
          }
          unint64_t v172 = v70 + 1;
          char v173 = *(unsigned char *)(v72 + v70);
          *((void *)this + 1) = v172;
          v75 |= (unint64_t)(v173 & 0x7F) << v170;
          if ((v173 & 0x80) == 0) {
            break;
          }
          v170 += 7;
          unint64_t v70 = v172;
          BOOL v101 = v171++ > 8;
          if (v101) {
            goto LABEL_227;
          }
        }
        if (*((unsigned char *)this + 24)) {
          uint64_t v75 = 0;
        }
LABEL_300:
        *(void *)(a1 + 96) = v75;
      }
LABEL_349:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v18 = 0;
    unsigned int v19 = 0;
    unint64_t v15 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v20 = v2 + 1;
      char v21 = *(unsigned char *)(v12 + v2);
      *((void *)this + 1) = v20;
      v15 |= (unint64_t)(v21 & 0x7F) << v18;
      if ((v21 & 0x80) == 0) {
        goto LABEL_21;
      }
      v18 += 7;
      unint64_t v2 = v20;
      if (v19++ >= 9)
      {
LABEL_20:
        unint64_t v15 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10168CC50(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 152);
  if ((v4 & 0x80) != 0)
  {
    double result = PB::Writer::write(this, *(float *)(result + 112), 1u);
    int v4 = *(_DWORD *)(v3 + 152);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 0x800) == 0) {
        goto LABEL_4;
      }
      goto LABEL_29;
    }
  }
  else if ((v4 & 8) == 0)
  {
    goto LABEL_3;
  }
  double result = PB::Writer::writeVarInt(this, *(void *)(v3 + 80), 2u);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x800) == 0)
  {
LABEL_4:
    if ((v4 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_30;
  }
LABEL_29:
  double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 128), 3u);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x10) == 0)
  {
LABEL_5:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_31;
  }
LABEL_30:
  double result = PB::Writer::writeVarInt(this, *(void *)(v3 + 88), 4u);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x4000) == 0)
  {
LABEL_6:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_32;
  }
LABEL_31:
  double result = PB::Writer::write(this, *(float *)(v3 + 140), 5u);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x8000) == 0)
  {
LABEL_7:
    if ((v4 & 0x200) == 0) {
      goto LABEL_8;
    }
    goto LABEL_33;
  }
LABEL_32:
  double result = PB::Writer::write(this, *(float *)(v3 + 144), 6u);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x200) == 0)
  {
LABEL_8:
    if ((v4 & 0x400) == 0) {
      goto LABEL_9;
    }
    goto LABEL_34;
  }
LABEL_33:
  double result = PB::Writer::write(this, *(float *)(v3 + 120), 7u);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x400) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_35;
  }
LABEL_34:
  double result = PB::Writer::write(this, *(float *)(v3 + 124), 8u);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x20) == 0)
  {
LABEL_10:
    if ((v4 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_36;
  }
LABEL_35:
  double result = PB::Writer::writeVarInt(this, *(void *)(v3 + 96), 9u);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x100) == 0)
  {
LABEL_11:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_37;
  }
LABEL_36:
  double result = PB::Writer::write(this, *(float *)(v3 + 116), 0xAu);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x10000) == 0)
  {
LABEL_12:
    if ((v4 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_38;
  }
LABEL_37:
  double result = PB::Writer::write(this, *(unsigned char *)(v3 + 148), 0x65u);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x40) == 0)
  {
LABEL_13:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_39;
  }
LABEL_38:
  double result = PB::Writer::writeVarInt(this, *(void *)(v3 + 104), 0x66u);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x1000) == 0)
  {
LABEL_14:
    if ((v4 & 4) == 0) {
      goto LABEL_15;
    }
LABEL_40:
    double result = PB::Writer::writeVarInt(this, *(void *)(v3 + 72), 0xCAu);
    if ((*(_DWORD *)(v3 + 152) & 0x2000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_39:
  double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 132), 0xC9u);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 4) != 0) {
    goto LABEL_40;
  }
LABEL_15:
  if ((v4 & 0x2000) != 0) {
LABEL_16:
  }
    double result = PB::Writer::write(this, *(float *)(v3 + 136), 0xCBu);
LABEL_17:
  int v5 = *(unint64_t **)(v3 + 8);
  int v6 = *(unint64_t **)(v3 + 16);
  while (v5 != v6)
  {
    unint64_t v7 = *v5++;
    double result = PB::Writer::writeVarInt(this, v7, 0xCCu);
  }
  uint64_t v8 = *(float **)(v3 + 32);
  uint64_t v9 = *(float **)(v3 + 40);
  while (v8 != v9)
  {
    float v10 = *v8++;
    double result = PB::Writer::write(this, v10, 0xCDu);
  }
  int v11 = *(_DWORD *)(v3 + 152);
  if ((v11 & 1) == 0)
  {
    if ((v11 & 2) == 0) {
      goto LABEL_25;
    }
LABEL_43:
    double result = PB::Writer::writeVarInt(this, *(void *)(v3 + 64), 0xCFu);
    if ((*(_DWORD *)(v3 + 152) & 0x20000) == 0) {
      return result;
    }
    goto LABEL_44;
  }
  double result = PB::Writer::writeVarInt(this, *(void *)(v3 + 56), 0xCEu);
  int v11 = *(_DWORD *)(v3 + 152);
  if ((v11 & 2) != 0) {
    goto LABEL_43;
  }
LABEL_25:
  if ((v11 & 0x20000) == 0) {
    return result;
  }
LABEL_44:
  char v12 = *(unsigned char *)(v3 + 149);

  return PB::Writer::write(this, v12, 0xD0u);
}

uint64_t sub_10168CECC(uint64_t result)
{
  *(void *)double result = &off_102334088;
  *(_DWORD *)(result + 72) = 0;
  *(_DWORD *)(result + 112) = 0;
  return result;
}

void sub_10168CEF8(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_10168CF30(uint64_t result, uint64_t a2)
{
  *(void *)double result = &off_102334088;
  *(_DWORD *)(result + 72) = 0;
  *(_DWORD *)(result + 112) = 0;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x40) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 56);
    int v3 = 64;
    *(_DWORD *)(result + 112) = 64;
    *(void *)(result + 56) = v4;
    int v2 = *(_DWORD *)(a2 + 112);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 8) != 0)
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 32);
    v3 |= 8u;
    *(_DWORD *)(result + 112) = v3;
    *(void *)(result + 32) = v5;
    int v2 = *(_DWORD *)(a2 + 112);
  }
LABEL_6:
  if (v2)
  {
    uint64_t v6 = *(void *)(a2 + 8);
    v3 |= 1u;
    *(_DWORD *)(result + 112) = v3;
    *(void *)(result + 8) = v6;
    int v2 = *(_DWORD *)(a2 + 112);
    if ((v2 & 0x80) == 0)
    {
LABEL_8:
      if ((v2 & 0x1000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_26;
    }
  }
  else if ((v2 & 0x80) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 64);
  v3 |= 0x80u;
  *(_DWORD *)(result + 112) = v3;
  *(_DWORD *)(result + 64) = v7;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x1000) == 0)
  {
LABEL_9:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_26:
  int v8 = *(_DWORD *)(a2 + 84);
  v3 |= 0x1000u;
  *(_DWORD *)(result + 112) = v3;
  *(_DWORD *)(result + 84) = v8;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x4000) == 0)
  {
LABEL_10:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_28;
  }
LABEL_27:
  int v9 = *(_DWORD *)(a2 + 92);
  v3 |= 0x4000u;
  *(_DWORD *)(result + 112) = v3;
  *(_DWORD *)(result + 92) = v9;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x10000) == 0)
  {
LABEL_11:
    if ((v2 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_28:
  int v10 = *(_DWORD *)(a2 + 100);
  v3 |= 0x10000u;
  *(_DWORD *)(result + 112) = v3;
  *(_DWORD *)(result + 100) = v10;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x400) == 0)
  {
LABEL_12:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_30;
  }
LABEL_29:
  int v11 = *(_DWORD *)(a2 + 76);
  v3 |= 0x400u;
  *(_DWORD *)(result + 112) = v3;
  *(_DWORD *)(result + 76) = v11;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x2000) == 0)
  {
LABEL_13:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_31;
  }
LABEL_30:
  int v12 = *(_DWORD *)(a2 + 88);
  v3 |= 0x2000u;
  *(_DWORD *)(result + 112) = v3;
  *(_DWORD *)(result + 88) = v12;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x8000) == 0)
  {
LABEL_14:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_32;
  }
LABEL_31:
  int v13 = *(_DWORD *)(a2 + 96);
  v3 |= 0x8000u;
  *(_DWORD *)(result + 112) = v3;
  *(_DWORD *)(result + 96) = v13;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x20000) == 0)
  {
LABEL_15:
    if ((v2 & 0x800) == 0) {
      goto LABEL_16;
    }
    goto LABEL_33;
  }
LABEL_32:
  int v14 = *(_DWORD *)(a2 + 104);
  v3 |= 0x20000u;
  *(_DWORD *)(result + 112) = v3;
  *(_DWORD *)(result + 104) = v14;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x800) == 0)
  {
LABEL_16:
    if ((v2 & 0x100) == 0) {
      goto LABEL_17;
    }
    goto LABEL_34;
  }
LABEL_33:
  int v15 = *(_DWORD *)(a2 + 80);
  v3 |= 0x800u;
  *(_DWORD *)(result + 112) = v3;
  *(_DWORD *)(result + 80) = v15;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x100) == 0)
  {
LABEL_17:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_35;
  }
LABEL_34:
  int v16 = *(_DWORD *)(a2 + 68);
  v3 |= 0x100u;
  *(_DWORD *)(result + 112) = v3;
  *(_DWORD *)(result + 68) = v16;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x40000) == 0)
  {
LABEL_18:
    if ((v2 & 0x200) == 0) {
      goto LABEL_19;
    }
    goto LABEL_36;
  }
LABEL_35:
  char v17 = *(unsigned char *)(a2 + 108);
  v3 |= 0x40000u;
  *(_DWORD *)(result + 112) = v3;
  *(unsigned char *)(result + 108) = v17;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x200) == 0)
  {
LABEL_19:
    if ((v2 & 2) == 0) {
      goto LABEL_20;
    }
    goto LABEL_37;
  }
LABEL_36:
  int v18 = *(_DWORD *)(a2 + 72);
  v3 |= 0x200u;
  *(_DWORD *)(result + 112) = v3;
  *(_DWORD *)(result + 72) = v18;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 2) == 0)
  {
LABEL_20:
    if ((v2 & 0x20) == 0) {
      goto LABEL_21;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t v19 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_DWORD *)(result + 112) = v3;
  *(void *)(result + 16) = v19;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x20) == 0)
  {
LABEL_21:
    if ((v2 & 0x10) == 0) {
      goto LABEL_22;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t v20 = *(void *)(a2 + 48);
  v3 |= 0x20u;
  *(_DWORD *)(result + 112) = v3;
  *(void *)(result + 48) = v20;
  int v2 = *(_DWORD *)(a2 + 112);
  if ((v2 & 0x10) == 0)
  {
LABEL_22:
    if ((v2 & 4) == 0) {
      return result;
    }
LABEL_40:
    uint64_t v22 = *(void *)(a2 + 24);
    *(_DWORD *)(result + 112) = v3 | 4;
    *(void *)(result + 24) = v22;
    return result;
  }
LABEL_39:
  uint64_t v21 = *(void *)(a2 + 40);
  v3 |= 0x10u;
  *(_DWORD *)(result + 112) = v3;
  *(void *)(result + 40) = v21;
  if ((*(_DWORD *)(a2 + 112) & 4) != 0) {
    goto LABEL_40;
  }
  return result;
}

uint64_t sub_10168D174(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x80) != 0)
  {
    PB::TextFormatter::format(this, "accelMagnitude", *(float *)(a1 + 64));
    int v5 = *(_DWORD *)(a1 + 112);
    if ((v5 & 0x100) == 0)
    {
LABEL_3:
      if ((v5 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_26;
    }
  }
  else if ((v5 & 0x100) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "deltaVThisImpact", *(float *)(a1 + 68));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 1) == 0)
  {
LABEL_4:
    if ((v5 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "dimensions", *(void *)(a1 + 8));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 2) == 0)
  {
LABEL_5:
    if ((v5 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(this, "epochCounter", *(void *)(a1 + 16));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 4) == 0)
  {
LABEL_6:
    if ((v5 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "jHG", *(void *)(a1 + 24));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 8) == 0)
  {
LABEL_7:
    if ((v5 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(this, "jImpactStart", *(void *)(a1 + 32));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x10) == 0)
  {
LABEL_8:
    if ((v5 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "jLG", *(void *)(a1 + 40));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x20) == 0)
  {
LABEL_9:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(this, "nextTimestamp", *(void *)(a1 + 48));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x40000) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(this, "partOfHgPath", *(unsigned char *)(a1 + 108));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(this, "pointType", *(_DWORD *)(a1 + 72));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x400) == 0)
  {
LABEL_12:
    if ((v5 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(this, "runningArclengthOverEpoch", *(float *)(a1 + 76));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x800) == 0)
  {
LABEL_13:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "runningArclengthThisImpact", *(float *)(a1 + 80));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x1000) == 0)
  {
LABEL_14:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "runningDeltaVXOverEpoch", *(float *)(a1 + 84));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x2000) == 0)
  {
LABEL_15:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "runningDeltaVXThisImpact", *(float *)(a1 + 88));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x4000) == 0)
  {
LABEL_16:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "runningDeltaVYOverEpoch", *(float *)(a1 + 92));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x8000) == 0)
  {
LABEL_17:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "runningDeltaVYThisImpact", *(float *)(a1 + 96));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x10000) == 0)
  {
LABEL_18:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "runningDeltaVZOverEpoch", *(float *)(a1 + 100));
  int v5 = *(_DWORD *)(a1 + 112);
  if ((v5 & 0x20000) == 0)
  {
LABEL_19:
    if ((v5 & 0x40) == 0) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }
LABEL_41:
  PB::TextFormatter::format(this, "runningDeltaVZThisImpact", *(float *)(a1 + 104));
  if ((*(_DWORD *)(a1 + 112) & 0x40) != 0) {
LABEL_20:
  }
    PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 56));
LABEL_21:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10168D418(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_DWORD *)(a1 + 112) |= 0x40u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v71 = 0;
                unsigned int v72 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_176;
                  }
                  unint64_t v73 = v20++;
                  char v74 = *(unsigned char *)(v21 + v73);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v74 & 0x7F) << v71;
                  if ((v74 & 0x80) == 0) {
                    break;
                  }
                  v71 += 7;
                  BOOL v14 = v72++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
                    goto LABEL_175;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
LABEL_175:
                unint64_t v2 = v73 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_176;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                uint64_t v24 = 0;
              }
LABEL_176:
              *(void *)(a1 + 56) = v24;
              goto LABEL_212;
            case 2u:
              *(_DWORD *)(a1 + 112) |= 8u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v75 = 0;
                unsigned int v76 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    uint64_t v31 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_181;
                  }
                  unint64_t v77 = v27++;
                  char v78 = *(unsigned char *)(v28 + v77);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v78 & 0x7F) << v75;
                  if ((v78 & 0x80) == 0) {
                    break;
                  }
                  v75 += 7;
                  BOOL v14 = v76++ > 8;
                  if (v14)
                  {
                    uint64_t v31 = 0;
LABEL_180:
                    unint64_t v2 = v77 + 1;
                    goto LABEL_181;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v31 = 0;
                }
                goto LABEL_180;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_181;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              uint64_t v31 = 0;
LABEL_181:
              *(void *)(a1 + 32) = -(v31 & 1) ^ (v31 >> 1);
              goto LABEL_212;
            case 3u:
              *(_DWORD *)(a1 + 112) |= 1u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v79 = 0;
                unsigned int v80 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    uint64_t v37 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_186;
                  }
                  unint64_t v81 = v33++;
                  char v82 = *(unsigned char *)(v34 + v81);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v82 & 0x7F) << v79;
                  if ((v82 & 0x80) == 0) {
                    break;
                  }
                  v79 += 7;
                  BOOL v14 = v80++ > 8;
                  if (v14)
                  {
                    uint64_t v37 = 0;
LABEL_185:
                    unint64_t v2 = v81 + 1;
                    goto LABEL_186;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v37 = 0;
                }
                goto LABEL_185;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_186;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              uint64_t v37 = 0;
LABEL_186:
              *(void *)(a1 + 8) = v37;
              goto LABEL_212;
            case 4u:
              *(_DWORD *)(a1 + 112) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_74;
              }
              *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_171;
            case 5u:
              *(_DWORD *)(a1 + 112) |= 0x1000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_74;
              }
              *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_171;
            case 6u:
              *(_DWORD *)(a1 + 112) |= 0x4000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_74;
              }
              *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_171;
            case 7u:
              *(_DWORD *)(a1 + 112) |= 0x10000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_74;
              }
              *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_171;
            case 8u:
              *(_DWORD *)(a1 + 112) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_74;
              }
              *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_171;
            case 9u:
              *(_DWORD *)(a1 + 112) |= 0x2000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_74;
              }
              *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_171;
            case 0xAu:
              *(_DWORD *)(a1 + 112) |= 0x8000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_74;
              }
              *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_171;
            case 0xBu:
              *(_DWORD *)(a1 + 112) |= 0x20000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_74;
              }
              *(_DWORD *)(a1 + 104) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_171;
            case 0xCu:
              *(_DWORD *)(a1 + 112) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_74;
              }
              *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_171;
            case 0xDu:
              *(_DWORD *)(a1 + 112) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 68) = *(_DWORD *)(*(void *)this + v2);
LABEL_171:
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_74:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_212;
            case 0xEu:
              *(_DWORD *)(a1 + 112) |= 0x40000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v40 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v39 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v40 = v39 != 0;
              }
              *(unsigned char *)(a1 + 108) = v40;
              goto LABEL_212;
            case 0xFu:
              *(_DWORD *)(a1 + 112) |= 0x200u;
              unint64_t v41 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v42 = *(void *)this;
              if (v41 > 0xFFFFFFFFFFFFFFF5 || v41 + 10 > v2)
              {
                char v83 = 0;
                unsigned int v84 = 0;
                uint64_t v45 = 0;
                if (v2 <= v41) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v41)
                  {
                    LODWORD(v45) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_191;
                  }
                  unint64_t v85 = v41++;
                  char v86 = *(unsigned char *)(v42 + v85);
                  *((void *)this + 1) = v41;
                  v45 |= (unint64_t)(v86 & 0x7F) << v83;
                  if ((v86 & 0x80) == 0) {
                    break;
                  }
                  v83 += 7;
                  BOOL v14 = v84++ > 8;
                  if (v14)
                  {
                    LODWORD(v45) = 0;
LABEL_190:
                    unint64_t v2 = v85 + 1;
                    goto LABEL_191;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v45) = 0;
                }
                goto LABEL_190;
              }
              char v43 = 0;
              unsigned int v44 = 0;
              uint64_t v45 = 0;
              do
              {
                unint64_t v2 = v41 + 1;
                *((void *)this + 1) = v41 + 1;
                char v46 = *(unsigned char *)(v42 + v41);
                v45 |= (unint64_t)(v46 & 0x7F) << v43;
                if ((v46 & 0x80) == 0) {
                  goto LABEL_191;
                }
                v43 += 7;
                unint64_t v41 = v2;
                BOOL v14 = v44++ > 8;
              }
              while (!v14);
              LODWORD(v45) = 0;
LABEL_191:
              *(_DWORD *)(a1 + 72) = v45;
              goto LABEL_212;
            case 0x10u:
              *(_DWORD *)(a1 + 112) |= 2u;
              unint64_t v47 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v48 = *(void *)this;
              if (v47 > 0xFFFFFFFFFFFFFFF5 || v47 + 10 > v2)
              {
                char v87 = 0;
                unsigned int v88 = 0;
                uint64_t v51 = 0;
                if (v2 <= v47) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v47)
                  {
                    uint64_t v51 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_196;
                  }
                  unint64_t v89 = v47++;
                  char v90 = *(unsigned char *)(v48 + v89);
                  *((void *)this + 1) = v47;
                  v51 |= (unint64_t)(v90 & 0x7F) << v87;
                  if ((v90 & 0x80) == 0) {
                    break;
                  }
                  v87 += 7;
                  BOOL v14 = v88++ > 8;
                  if (v14)
                  {
                    uint64_t v51 = 0;
LABEL_195:
                    unint64_t v2 = v89 + 1;
                    goto LABEL_196;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v51 = 0;
                }
                goto LABEL_195;
              }
              char v49 = 0;
              unsigned int v50 = 0;
              uint64_t v51 = 0;
              do
              {
                unint64_t v2 = v47 + 1;
                *((void *)this + 1) = v47 + 1;
                char v52 = *(unsigned char *)(v48 + v47);
                v51 |= (unint64_t)(v52 & 0x7F) << v49;
                if ((v52 & 0x80) == 0) {
                  goto LABEL_196;
                }
                v49 += 7;
                unint64_t v47 = v2;
                BOOL v14 = v50++ > 8;
              }
              while (!v14);
              uint64_t v51 = 0;
LABEL_196:
              *(void *)(a1 + 16) = v51;
              goto LABEL_212;
            case 0x11u:
              *(_DWORD *)(a1 + 112) |= 0x20u;
              unint64_t v53 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v54 = *(void *)this;
              if (v53 > 0xFFFFFFFFFFFFFFF5 || v53 + 10 > v2)
              {
                char v91 = 0;
                unsigned int v92 = 0;
                uint64_t v57 = 0;
                if (v2 <= v53) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v53)
                  {
                    uint64_t v57 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_201;
                  }
                  unint64_t v93 = v53++;
                  char v94 = *(unsigned char *)(v54 + v93);
                  *((void *)this + 1) = v53;
                  v57 |= (unint64_t)(v94 & 0x7F) << v91;
                  if ((v94 & 0x80) == 0) {
                    break;
                  }
                  v91 += 7;
                  BOOL v14 = v92++ > 8;
                  if (v14)
                  {
                    uint64_t v57 = 0;
LABEL_200:
                    unint64_t v2 = v93 + 1;
                    goto LABEL_201;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v57 = 0;
                }
                goto LABEL_200;
              }
              char v55 = 0;
              unsigned int v56 = 0;
              uint64_t v57 = 0;
              do
              {
                unint64_t v2 = v53 + 1;
                *((void *)this + 1) = v53 + 1;
                char v58 = *(unsigned char *)(v54 + v53);
                v57 |= (unint64_t)(v58 & 0x7F) << v55;
                if ((v58 & 0x80) == 0) {
                  goto LABEL_201;
                }
                v55 += 7;
                unint64_t v53 = v2;
                BOOL v14 = v56++ > 8;
              }
              while (!v14);
              uint64_t v57 = 0;
LABEL_201:
              *(void *)(a1 + 48) = v57;
              goto LABEL_212;
            case 0x12u:
              *(_DWORD *)(a1 + 112) |= 0x10u;
              unint64_t v59 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v60 = *(void *)this;
              if (v59 > 0xFFFFFFFFFFFFFFF5 || v59 + 10 > v2)
              {
                char v95 = 0;
                unsigned int v96 = 0;
                uint64_t v63 = 0;
                if (v2 <= v59) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v59)
                  {
                    uint64_t v63 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_206;
                  }
                  unint64_t v97 = v59++;
                  char v98 = *(unsigned char *)(v60 + v97);
                  *((void *)this + 1) = v59;
                  v63 |= (unint64_t)(v98 & 0x7F) << v95;
                  if ((v98 & 0x80) == 0) {
                    break;
                  }
                  v95 += 7;
                  BOOL v14 = v96++ > 8;
                  if (v14)
                  {
                    uint64_t v63 = 0;
LABEL_205:
                    unint64_t v2 = v97 + 1;
                    goto LABEL_206;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v63 = 0;
                }
                goto LABEL_205;
              }
              char v61 = 0;
              unsigned int v62 = 0;
              uint64_t v63 = 0;
              do
              {
                unint64_t v2 = v59 + 1;
                *((void *)this + 1) = v59 + 1;
                char v64 = *(unsigned char *)(v60 + v59);
                v63 |= (unint64_t)(v64 & 0x7F) << v61;
                if ((v64 & 0x80) == 0) {
                  goto LABEL_206;
                }
                v61 += 7;
                unint64_t v59 = v2;
                BOOL v14 = v62++ > 8;
              }
              while (!v14);
              uint64_t v63 = 0;
LABEL_206:
              *(void *)(a1 + 40) = v63;
              goto LABEL_212;
            case 0x13u:
              *(_DWORD *)(a1 + 112) |= 4u;
              unint64_t v65 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v66 = *(void *)this;
              if (v65 > 0xFFFFFFFFFFFFFFF5 || v65 + 10 > v2)
              {
                char v99 = 0;
                unsigned int v100 = 0;
                uint64_t v69 = 0;
                if (v2 <= v65) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v65)
                  {
                    uint64_t v69 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_211;
                  }
                  unint64_t v101 = v65++;
                  char v102 = *(unsigned char *)(v66 + v101);
                  *((void *)this + 1) = v65;
                  v69 |= (unint64_t)(v102 & 0x7F) << v99;
                  if ((v102 & 0x80) == 0) {
                    break;
                  }
                  v99 += 7;
                  BOOL v14 = v100++ > 8;
                  if (v14)
                  {
                    uint64_t v69 = 0;
LABEL_210:
                    unint64_t v2 = v101 + 1;
                    goto LABEL_211;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v69 = 0;
                }
                goto LABEL_210;
              }
              char v67 = 0;
              unsigned int v68 = 0;
              uint64_t v69 = 0;
              do
              {
                unint64_t v2 = v65 + 1;
                *((void *)this + 1) = v65 + 1;
                char v70 = *(unsigned char *)(v66 + v65);
                v69 |= (unint64_t)(v70 & 0x7F) << v67;
                if ((v70 & 0x80) == 0) {
                  goto LABEL_211;
                }
                v67 += 7;
                unint64_t v65 = v2;
                BOOL v14 = v68++ > 8;
              }
              while (!v14);
              uint64_t v69 = 0;
LABEL_211:
              *(void *)(a1 + 24) = v69;
LABEL_212:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_212;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_10168DFCC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 112);
  if ((v4 & 0x40) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(result + 56), 1u);
    int v4 = *(_DWORD *)(v3 + 112);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_23;
    }
  }
  else if ((v4 & 8) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeSInt(this, *(void *)(v3 + 32), 2u);
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 1) == 0)
  {
LABEL_4:
    if ((v4 & 0x80) == 0) {
      goto LABEL_5;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 8), 3u);
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x80) == 0)
  {
LABEL_5:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64), 4u);
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x1000) == 0)
  {
LABEL_6:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 84), 5u);
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x4000) == 0)
  {
LABEL_7:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 92), 6u);
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x10000) == 0)
  {
LABEL_8:
    if ((v4 & 0x400) == 0) {
      goto LABEL_9;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 100), 7u);
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x400) == 0)
  {
LABEL_9:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76), 8u);
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x2000) == 0)
  {
LABEL_10:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 88), 9u);
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x8000) == 0)
  {
LABEL_11:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 96), 0xAu);
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x20000) == 0)
  {
LABEL_12:
    if ((v4 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 104), 0xBu);
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x800) == 0)
  {
LABEL_13:
    if ((v4 & 0x100) == 0) {
      goto LABEL_14;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80), 0xCu);
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x100) == 0)
  {
LABEL_14:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 68), 0xDu);
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x40000) == 0)
  {
LABEL_15:
    if ((v4 & 0x200) == 0) {
      goto LABEL_16;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 108), 0xEu);
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x200) == 0)
  {
LABEL_16:
    if ((v4 & 2) == 0) {
      goto LABEL_17;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 72), 0xFu);
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 2) == 0)
  {
LABEL_17:
    if ((v4 & 0x20) == 0) {
      goto LABEL_18;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 16), 0x10u);
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x20) == 0)
  {
LABEL_18:
    if ((v4 & 0x10) == 0) {
      goto LABEL_19;
    }
LABEL_38:
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 40), 0x12u);
    if ((*(_DWORD *)(v3 + 112) & 4) == 0) {
      return result;
    }
    goto LABEL_39;
  }
LABEL_37:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 48), 0x11u);
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x10) != 0) {
    goto LABEL_38;
  }
LABEL_19:
  if ((v4 & 4) == 0) {
    return result;
  }
LABEL_39:
  unint64_t v5 = *(void *)(v3 + 24);

  return PB::Writer::writeVarInt(this, v5, 0x13u);
}

uint64_t sub_10168E218(uint64_t result)
{
  *(void *)uint64_t result = &off_1023340C0;
  *(_DWORD *)(result + 80) = 0;
  return result;
}

void sub_10168E240(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

double sub_10168E278(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_1023340C0;
  *(_DWORD *)(a1 + 80) = 0;
  __int16 v2 = *(_WORD *)(a2 + 80);
  if ((v2 & 0x100) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 72);
    __int16 v3 = 256;
    *(_WORD *)(a1 + 80) = 256;
    *(void *)(a1 + 72) = v4;
    __int16 v2 = *(_WORD *)(a2 + 80);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_5:
    double result = *(double *)(a2 + 16);
    v3 |= 2u;
    *(_WORD *)(a1 + 80) = v3;
    *(double *)(a1 + 16) = result;
    __int16 v2 = *(_WORD *)(a2 + 80);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    double result = *(double *)(a2 + 24);
    v3 |= 4u;
    *(_WORD *)(a1 + 80) = v3;
    *(double *)(a1 + 24) = result;
    __int16 v2 = *(_WORD *)(a2 + 80);
    if ((v2 & 8) == 0)
    {
LABEL_8:
      if ((v2 & 1) == 0) {
        goto LABEL_9;
      }
      goto LABEL_16;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_8;
  }
  double result = *(double *)(a2 + 32);
  v3 |= 8u;
  *(_WORD *)(a1 + 80) = v3;
  *(double *)(a1 + 32) = result;
  __int16 v2 = *(_WORD *)(a2 + 80);
  if ((v2 & 1) == 0)
  {
LABEL_9:
    if ((v2 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t v6 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(a1 + 80) = v3;
  *(void *)(a1 + 8) = v6;
  __int16 v2 = *(_WORD *)(a2 + 80);
  if ((v2 & 0x20) == 0)
  {
LABEL_10:
    if ((v2 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_18;
  }
LABEL_17:
  double result = *(double *)(a2 + 48);
  v3 |= 0x20u;
  *(_WORD *)(a1 + 80) = v3;
  *(double *)(a1 + 48) = result;
  __int16 v2 = *(_WORD *)(a2 + 80);
  if ((v2 & 0x40) == 0)
  {
LABEL_11:
    if ((v2 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_19;
  }
LABEL_18:
  double result = *(double *)(a2 + 56);
  v3 |= 0x40u;
  *(_WORD *)(a1 + 80) = v3;
  *(double *)(a1 + 56) = result;
  __int16 v2 = *(_WORD *)(a2 + 80);
  if ((v2 & 0x80) == 0)
  {
LABEL_12:
    if ((v2 & 0x10) == 0) {
      return result;
    }
LABEL_20:
    double result = *(double *)(a2 + 40);
    *(_WORD *)(a1 + 80) = v3 | 0x10;
    *(double *)(a1 + 40) = result;
    return result;
  }
LABEL_19:
  double result = *(double *)(a2 + 64);
  v3 |= 0x80u;
  *(_WORD *)(a1 + 80) = v3;
  *(double *)(a1 + 64) = result;
  if ((*(_WORD *)(a2 + 80) & 0x10) != 0) {
    goto LABEL_20;
  }
  return result;
}

uint64_t sub_10168E3A0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 80);
  if (v5)
  {
    PB::TextFormatter::format(this, "epochCounter", *(void *)(a1 + 8));
    __int16 v5 = *(_WORD *)(a1 + 80);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "inertialAccelX", *(double *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 80);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "inertialAccelY", *(double *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 80);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  PB::TextFormatter::format(this, "inertialAccelZ", *(double *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 80);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "quaternionW", *(double *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 80);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "quaternionX", *(double *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 80);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "quaternionY", *(double *)(a1 + 56));
  __int16 v5 = *(_WORD *)(a1 + 80);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_21:
  PB::TextFormatter::format(this, "quaternionZ", *(double *)(a1 + 64));
  if ((*(_WORD *)(a1 + 80) & 0x100) != 0) {
LABEL_10:
  }
    PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 72));
LABEL_11:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10168E504(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 80) |= 0x100u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v33 = 0;
                unsigned int v34 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_79;
                  }
                  unint64_t v35 = v20++;
                  char v36 = *(unsigned char *)(v21 + v35);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v36 & 0x7F) << v33;
                  if ((v36 & 0x80) == 0) {
                    break;
                  }
                  v33 += 7;
                  BOOL v14 = v34++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
                    goto LABEL_78;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
LABEL_78:
                unint64_t v2 = v35 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_79;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                uint64_t v24 = 0;
              }
LABEL_79:
              *(void *)(a1 + 72) = v24;
              goto LABEL_85;
            case 2u:
              *(_WORD *)(a1 + 80) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_58;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_74;
            case 3u:
              *(_WORD *)(a1 + 80) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_58;
              }
              *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
              goto LABEL_74;
            case 4u:
              *(_WORD *)(a1 + 80) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_58;
              }
              *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
              goto LABEL_74;
            case 5u:
              *(_WORD *)(a1 + 80) |= 1u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v37 = 0;
                unsigned int v38 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    uint64_t v31 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_84;
                  }
                  unint64_t v39 = v27++;
                  char v40 = *(unsigned char *)(v28 + v39);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v40 & 0x7F) << v37;
                  if ((v40 & 0x80) == 0) {
                    break;
                  }
                  v37 += 7;
                  BOOL v14 = v38++ > 8;
                  if (v14)
                  {
                    uint64_t v31 = 0;
LABEL_83:
                    unint64_t v2 = v39 + 1;
                    goto LABEL_84;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v31 = 0;
                }
                goto LABEL_83;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_84;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              uint64_t v31 = 0;
LABEL_84:
              *(void *)(a1 + 8) = v31;
LABEL_85:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 6u:
              *(_WORD *)(a1 + 80) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_58;
              }
              *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
              goto LABEL_74;
            case 7u:
              *(_WORD *)(a1 + 80) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_58;
              }
              *(void *)(a1 + 56) = *(void *)(*(void *)this + v2);
              goto LABEL_74;
            case 8u:
              *(_WORD *)(a1 + 80) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_58;
              }
              *(void *)(a1 + 64) = *(void *)(*(void *)this + v2);
              goto LABEL_74;
            case 9u:
              *(_WORD *)(a1 + 80) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
LABEL_74:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_58:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_85;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_85;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_10168EA10(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 80);
  if ((v4 & 0x100) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(result + 72), 1u);
    __int16 v4 = *(_WORD *)(v3 + 80);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16), 2u);
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24), 3u);
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32), 4u);
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 1) == 0)
  {
LABEL_6:
    if ((v4 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 8), 5u);
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 0x20) == 0)
  {
LABEL_7:
    if ((v4 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48), 6u);
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 0x40) == 0)
  {
LABEL_8:
    if ((v4 & 0x80) == 0) {
      goto LABEL_9;
    }
LABEL_18:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 64), 8u);
    if ((*(_WORD *)(v3 + 80) & 0x10) == 0) {
      return result;
    }
    goto LABEL_19;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 56), 7u);
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 0x80) != 0) {
    goto LABEL_18;
  }
LABEL_9:
  if ((v4 & 0x10) == 0) {
    return result;
  }
LABEL_19:
  double v5 = *(double *)(v3 + 40);

  return PB::Writer::write(this, v5, 9u);
}

uint64_t sub_10168EB44(uint64_t result)
{
  *(void *)uint64_t result = &off_1023340F8;
  *(_DWORD *)(result + 104) = 0;
  return result;
}

void sub_10168EB6C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

double sub_10168EBA4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_1023340F8;
  *(_DWORD *)(a1 + 104) = 0;
  __int16 v2 = *(_WORD *)(a2 + 104);
  if ((v2 & 0x800) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 96);
    __int16 v3 = 2048;
    *(_WORD *)(a1 + 104) = 2048;
    *(void *)(a1 + 96) = v4;
    __int16 v2 = *(_WORD *)(a2 + 104);
    if ((v2 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 0x10) != 0)
  {
LABEL_5:
    double result = *(double *)(a2 + 40);
    v3 |= 0x10u;
    *(_WORD *)(a1 + 104) = v3;
    *(double *)(a1 + 40) = result;
    __int16 v2 = *(_WORD *)(a2 + 104);
  }
LABEL_6:
  if ((v2 & 0x20) != 0)
  {
    double result = *(double *)(a2 + 48);
    v3 |= 0x20u;
    *(_WORD *)(a1 + 104) = v3;
    *(double *)(a1 + 48) = result;
    __int16 v2 = *(_WORD *)(a2 + 104);
    if ((v2 & 0x40) == 0)
    {
LABEL_8:
      if ((v2 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_19;
    }
  }
  else if ((v2 & 0x40) == 0)
  {
    goto LABEL_8;
  }
  double result = *(double *)(a2 + 56);
  v3 |= 0x40u;
  *(_WORD *)(a1 + 104) = v3;
  *(double *)(a1 + 56) = result;
  __int16 v2 = *(_WORD *)(a2 + 104);
  if ((v2 & 8) == 0)
  {
LABEL_9:
    if ((v2 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t v6 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_WORD *)(a1 + 104) = v3;
  *(void *)(a1 + 32) = v6;
  __int16 v2 = *(_WORD *)(a2 + 104);
  if ((v2 & 0x100) == 0)
  {
LABEL_10:
    if ((v2 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_21;
  }
LABEL_20:
  double result = *(double *)(a2 + 72);
  v3 |= 0x100u;
  *(_WORD *)(a1 + 104) = v3;
  *(double *)(a1 + 72) = result;
  __int16 v2 = *(_WORD *)(a2 + 104);
  if ((v2 & 0x200) == 0)
  {
LABEL_11:
    if ((v2 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_21:
  double result = *(double *)(a2 + 80);
  v3 |= 0x200u;
  *(_WORD *)(a1 + 104) = v3;
  *(double *)(a1 + 80) = result;
  __int16 v2 = *(_WORD *)(a2 + 104);
  if ((v2 & 0x400) == 0)
  {
LABEL_12:
    if ((v2 & 0x80) == 0) {
      goto LABEL_13;
    }
    goto LABEL_23;
  }
LABEL_22:
  double result = *(double *)(a2 + 88);
  v3 |= 0x400u;
  *(_WORD *)(a1 + 104) = v3;
  *(double *)(a1 + 88) = result;
  __int16 v2 = *(_WORD *)(a2 + 104);
  if ((v2 & 0x80) == 0)
  {
LABEL_13:
    if ((v2 & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_24;
  }
LABEL_23:
  double result = *(double *)(a2 + 64);
  v3 |= 0x80u;
  *(_WORD *)(a1 + 104) = v3;
  *(double *)(a1 + 64) = result;
  __int16 v2 = *(_WORD *)(a2 + 104);
  if ((v2 & 1) == 0)
  {
LABEL_14:
    if ((v2 & 2) == 0) {
      goto LABEL_15;
    }
    goto LABEL_25;
  }
LABEL_24:
  double result = *(double *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(a1 + 104) = v3;
  *(double *)(a1 + 8) = result;
  __int16 v2 = *(_WORD *)(a2 + 104);
  if ((v2 & 2) == 0)
  {
LABEL_15:
    if ((v2 & 4) == 0) {
      return result;
    }
LABEL_26:
    double result = *(double *)(a2 + 24);
    *(_WORD *)(a1 + 104) = v3 | 4;
    *(double *)(a1 + 24) = result;
    return result;
  }
LABEL_25:
  double result = *(double *)(a2 + 16);
  v3 |= 2u;
  *(_WORD *)(a1 + 104) = v3;
  *(double *)(a1 + 16) = result;
  if ((*(_WORD *)(a2 + 104) & 4) != 0) {
    goto LABEL_26;
  }
  return result;
}

uint64_t sub_10168ED20(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 104);
  if (v5)
  {
    PB::TextFormatter::format(this, "bodyAccelX", *(double *)(a1 + 8));
    __int16 v5 = *(_WORD *)(a1 + 104);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "bodyAccelY", *(double *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 104);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "bodyAccelZ", *(double *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 104);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "epochCounter", *(void *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 104);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "inertialAccelX", *(double *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 104);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "inertialAccelY", *(double *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 104);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "inertialAccelZ", *(double *)(a1 + 56));
  __int16 v5 = *(_WORD *)(a1 + 104);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "quaternionW", *(double *)(a1 + 64));
  __int16 v5 = *(_WORD *)(a1 + 104);
  if ((v5 & 0x100) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "quaternionX", *(double *)(a1 + 72));
  __int16 v5 = *(_WORD *)(a1 + 104);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "quaternionY", *(double *)(a1 + 80));
  __int16 v5 = *(_WORD *)(a1 + 104);
  if ((v5 & 0x400) == 0)
  {
LABEL_12:
    if ((v5 & 0x800) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_27:
  PB::TextFormatter::format(this, "quaternionZ", *(double *)(a1 + 88));
  if ((*(_WORD *)(a1 + 104) & 0x800) != 0) {
LABEL_13:
  }
    PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 96));
LABEL_14:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10168EEE4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 104) |= 0x800u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v33 = 0;
                unsigned int v34 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_88;
                  }
                  unint64_t v35 = v20++;
                  char v36 = *(unsigned char *)(v21 + v35);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v36 & 0x7F) << v33;
                  if ((v36 & 0x80) == 0) {
                    break;
                  }
                  v33 += 7;
                  BOOL v14 = v34++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
                    goto LABEL_87;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
LABEL_87:
                unint64_t v2 = v35 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_88;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                uint64_t v24 = 0;
              }
LABEL_88:
              *(void *)(a1 + 96) = v24;
              goto LABEL_94;
            case 2u:
              *(_WORD *)(a1 + 104) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_67;
              }
              *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
              goto LABEL_83;
            case 3u:
              *(_WORD *)(a1 + 104) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_67;
              }
              *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
              goto LABEL_83;
            case 4u:
              *(_WORD *)(a1 + 104) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_67;
              }
              *(void *)(a1 + 56) = *(void *)(*(void *)this + v2);
              goto LABEL_83;
            case 5u:
              *(_WORD *)(a1 + 104) |= 8u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v37 = 0;
                unsigned int v38 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    uint64_t v31 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_93;
                  }
                  unint64_t v39 = v27++;
                  char v40 = *(unsigned char *)(v28 + v39);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v40 & 0x7F) << v37;
                  if ((v40 & 0x80) == 0) {
                    break;
                  }
                  v37 += 7;
                  BOOL v14 = v38++ > 8;
                  if (v14)
                  {
                    uint64_t v31 = 0;
LABEL_92:
                    unint64_t v2 = v39 + 1;
                    goto LABEL_93;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v31 = 0;
                }
                goto LABEL_92;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_93;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              uint64_t v31 = 0;
LABEL_93:
              *(void *)(a1 + 32) = v31;
LABEL_94:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 6u:
              *(_WORD *)(a1 + 104) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_67;
              }
              *(void *)(a1 + 72) = *(void *)(*(void *)this + v2);
              goto LABEL_83;
            case 7u:
              *(_WORD *)(a1 + 104) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_67;
              }
              *(void *)(a1 + 80) = *(void *)(*(void *)this + v2);
              goto LABEL_83;
            case 8u:
              *(_WORD *)(a1 + 104) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_67;
              }
              *(void *)(a1 + 88) = *(void *)(*(void *)this + v2);
              goto LABEL_83;
            case 9u:
              *(_WORD *)(a1 + 104) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_67;
              }
              *(void *)(a1 + 64) = *(void *)(*(void *)this + v2);
              goto LABEL_83;
            case 0xAu:
              *(_WORD *)(a1 + 104) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_67;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_83;
            case 0xBu:
              *(_WORD *)(a1 + 104) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_67;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_83;
            case 0xCu:
              *(_WORD *)(a1 + 104) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
LABEL_83:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_67:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_94;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_94;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_10168F4A4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 104);
  if ((v4 & 0x800) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(result + 96), 1u);
    __int16 v4 = *(_WORD *)(v3 + 104);
    if ((v4 & 0x10) == 0)
    {
LABEL_3:
      if ((v4 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v4 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40), 2u);
  __int16 v4 = *(_WORD *)(v3 + 104);
  if ((v4 & 0x20) == 0)
  {
LABEL_4:
    if ((v4 & 0x40) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48), 3u);
  __int16 v4 = *(_WORD *)(v3 + 104);
  if ((v4 & 0x40) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 56), 4u);
  __int16 v4 = *(_WORD *)(v3 + 104);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x100) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 32), 5u);
  __int16 v4 = *(_WORD *)(v3 + 104);
  if ((v4 & 0x100) == 0)
  {
LABEL_7:
    if ((v4 & 0x200) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 72), 6u);
  __int16 v4 = *(_WORD *)(v3 + 104);
  if ((v4 & 0x200) == 0)
  {
LABEL_8:
    if ((v4 & 0x400) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 80), 7u);
  __int16 v4 = *(_WORD *)(v3 + 104);
  if ((v4 & 0x400) == 0)
  {
LABEL_9:
    if ((v4 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 88), 8u);
  __int16 v4 = *(_WORD *)(v3 + 104);
  if ((v4 & 0x80) == 0)
  {
LABEL_10:
    if ((v4 & 1) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 64), 9u);
  __int16 v4 = *(_WORD *)(v3 + 104);
  if ((v4 & 1) == 0)
  {
LABEL_11:
    if ((v4 & 2) == 0) {
      goto LABEL_12;
    }
LABEL_24:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16), 0xBu);
    if ((*(_WORD *)(v3 + 104) & 4) == 0) {
      return result;
    }
    goto LABEL_25;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8), 0xAu);
  __int16 v4 = *(_WORD *)(v3 + 104);
  if ((v4 & 2) != 0) {
    goto LABEL_24;
  }
LABEL_12:
  if ((v4 & 4) == 0) {
    return result;
  }
LABEL_25:
  double v5 = *(double *)(v3 + 24);

  return PB::Writer::write(this, v5, 0xCu);
}

uint64_t sub_10168F62C(uint64_t result)
{
  *(void *)uint64_t result = &off_102334130;
  *(_DWORD *)(result + 324) = 0;
  *(void *)(result + 316) = 0;
  return result;
}

void sub_10168F65C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

float sub_10168F694(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102334130;
  unint64_t v2 = (uint64_t *)(a1 + 316);
  *(_DWORD *)(a1 + 324) = 0;
  *(void *)(a1 + 316) = 0;
  uint64_t v3 = (uint64_t *)(a2 + 316);
  char v4 = *(unsigned char *)(a2 + 324);
  if ((v4 & 8) != 0)
  {
    uint64_t v5 = 0;
    char v8 = *(unsigned char *)(a2 + 312);
    *unint64_t v2 = 0;
    char v6 = 8;
    *(unsigned char *)(a1 + 324) = 8;
    *(unsigned char *)(a1 + 312) = v8;
    uint64_t v7 = *v3;
    char v4 = *(unsigned char *)(a2 + 324);
    if ((v4 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v5 = 0;
  char v6 = 0;
  uint64_t v7 = *v3;
  if ((*(unsigned char *)(a2 + 324) & 2) != 0)
  {
LABEL_5:
    float result = *(float *)(a2 + 304);
    v6 |= 2u;
    *unint64_t v2 = 0;
    *(unsigned char *)(a1 + 324) = v6;
    *(float *)(a1 + 304) = result;
    uint64_t v7 = *v3;
    char v4 = *(unsigned char *)(a2 + 324);
  }
LABEL_6:
  if ((v4 & 4) != 0)
  {
    float result = *(float *)(a2 + 308);
    v6 |= 4u;
    *unint64_t v2 = 0;
    *(unsigned char *)(a1 + 324) = v6;
    *(float *)(a1 + 308) = result;
    uint64_t v7 = *v3;
    char v4 = *(unsigned char *)(a2 + 324);
    if ((*v3 & 0x20) == 0)
    {
LABEL_8:
      if ((v7 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_75;
    }
  }
  else if ((v7 & 0x20) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v5 = 32;
  *unint64_t v2 = 32;
  *(unsigned char *)(a1 + 324) = v6;
  *(void *)(a1 + 48) = v10;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x40) == 0)
  {
LABEL_9:
    if ((v7 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_76;
  }
LABEL_75:
  uint64_t v11 = *(void *)(a2 + 56);
  v5 |= 0x40uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(void *)(a1 + 56) = v11;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 1) == 0)
  {
LABEL_10:
    if ((v7 & 0x8000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_77;
  }
LABEL_76:
  uint64_t v12 = *(void *)(a2 + 8);
  v5 |= 1uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(void *)(a1 + 8) = v12;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x8000) == 0)
  {
LABEL_11:
    if ((v7 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_78;
  }
LABEL_77:
  float result = *(float *)(a2 + 104);
  v5 |= 0x8000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 104) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x80) == 0)
  {
LABEL_12:
    if ((v7 & 0x100) == 0) {
      goto LABEL_13;
    }
    goto LABEL_79;
  }
LABEL_78:
  uint64_t v13 = *(void *)(a2 + 64);
  v5 |= 0x80uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(void *)(a1 + 64) = v13;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x100) == 0)
  {
LABEL_13:
    if ((v7 & 0x20000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_80;
  }
LABEL_79:
  uint64_t v14 = *(void *)(a2 + 72);
  v5 |= 0x100uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(void *)(a1 + 72) = v14;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x20000) == 0)
  {
LABEL_14:
    if ((v7 & 0x10000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_81;
  }
LABEL_80:
  float result = *(float *)(a2 + 112);
  v5 |= 0x20000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 112) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x10000) == 0)
  {
LABEL_15:
    if ((v7 & 0x2000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_82;
  }
LABEL_81:
  float result = *(float *)(a2 + 108);
  v5 |= 0x10000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 108) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x2000000) == 0)
  {
LABEL_16:
    if ((v7 & 0x200) == 0) {
      goto LABEL_17;
    }
    goto LABEL_83;
  }
LABEL_82:
  float result = *(float *)(a2 + 144);
  v5 |= 0x2000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 144) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x200) == 0)
  {
LABEL_17:
    if ((v7 & 0x400) == 0) {
      goto LABEL_18;
    }
    goto LABEL_84;
  }
LABEL_83:
  float result = *(float *)(a2 + 80);
  v5 |= 0x200uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 80) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x400) == 0)
  {
LABEL_18:
    if ((v7 & 0x800000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_85;
  }
LABEL_84:
  float result = *(float *)(a2 + 84);
  v5 |= 0x400uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 84) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x800000) == 0)
  {
LABEL_19:
    if ((v7 & 0x4000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_86;
  }
LABEL_85:
  float result = *(float *)(a2 + 136);
  v5 |= 0x800000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 136) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x4000) == 0)
  {
LABEL_20:
    if ((v7 & 0x400000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_87;
  }
LABEL_86:
  float result = *(float *)(a2 + 100);
  v5 |= 0x4000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 100) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x400000) == 0)
  {
LABEL_21:
    if ((v7 & 0x2000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_88;
  }
LABEL_87:
  float result = *(float *)(a2 + 132);
  v5 |= 0x400000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 132) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x2000) == 0)
  {
LABEL_22:
    if ((v7 & 0x8000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_89;
  }
LABEL_88:
  float result = *(float *)(a2 + 96);
  v5 |= 0x2000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 96) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x8000000) == 0)
  {
LABEL_23:
    if ((v7 & 0x100000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_90;
  }
LABEL_89:
  float result = *(float *)(a2 + 152);
  v5 |= 0x8000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 152) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x100000) == 0)
  {
LABEL_24:
    if ((v7 & 0x1000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_91;
  }
LABEL_90:
  float result = *(float *)(a2 + 124);
  v5 |= 0x100000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 124) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x1000) == 0)
  {
LABEL_25:
    if ((v7 & 0x80000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_92;
  }
LABEL_91:
  float result = *(float *)(a2 + 92);
  v5 |= 0x1000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 92) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x80000) == 0)
  {
LABEL_26:
    if ((v7 & 0x800) == 0) {
      goto LABEL_27;
    }
    goto LABEL_93;
  }
LABEL_92:
  float result = *(float *)(a2 + 120);
  v5 |= 0x80000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 120) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x800) == 0)
  {
LABEL_27:
    if ((v7 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_94;
  }
LABEL_93:
  float result = *(float *)(a2 + 88);
  v5 |= 0x800uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 88) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v7 & 0x40000000000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_95;
  }
LABEL_94:
  float result = *(float *)(a2 + 148);
  v5 |= 0x4000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 148) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x40000000000000) == 0)
  {
LABEL_29:
    if ((v7 & 0x20000000000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_96;
  }
LABEL_95:
  float result = *(float *)(a2 + 260);
  v5 |= 0x40000000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 260) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x20000000000000) == 0)
  {
LABEL_30:
    if ((v7 & 0x4000000000000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_97;
  }
LABEL_96:
  float result = *(float *)(a2 + 256);
  v5 |= 0x20000000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 256) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x4000000000000000) == 0)
  {
LABEL_31:
    if ((v7 & 0x800000000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_98;
  }
LABEL_97:
  float result = *(float *)(a2 + 292);
  v5 |= 0x4000000000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 292) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x800000000000) == 0)
  {
LABEL_32:
    if ((v7 & 0x1000000000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_99;
  }
LABEL_98:
  float result = *(float *)(a2 + 232);
  v5 |= 0x800000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 232) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x1000000000000) == 0)
  {
LABEL_33:
    if ((v7 & 0x1000000000000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_100;
  }
LABEL_99:
  float result = *(float *)(a2 + 236);
  v5 |= 0x1000000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 236) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x1000000000000000) == 0)
  {
LABEL_34:
    if ((v7 & 0x10000000000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_101;
  }
LABEL_100:
  float result = *(float *)(a2 + 284);
  v5 |= 0x1000000000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 284) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x10000000000000) == 0)
  {
LABEL_35:
    if ((v7 & 0x800000000000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_102;
  }
LABEL_101:
  float result = *(float *)(a2 + 252);
  v5 |= 0x10000000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 252) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x800000000000000) == 0)
  {
LABEL_36:
    if ((v7 & 0x8000000000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_103;
  }
LABEL_102:
  float result = *(float *)(a2 + 280);
  v5 |= 0x800000000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 280) = result;
  uint64_t v7 = *v3;
  char v4 = *(unsigned char *)(a2 + 324);
  if ((*v3 & 0x8000000000000) == 0)
  {
LABEL_37:
    if ((v4 & 1) == 0) {
      goto LABEL_38;
    }
    goto LABEL_104;
  }
LABEL_103:
  float result = *(float *)(a2 + 248);
  v5 |= 0x8000000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 248) = result;
  uint64_t v7 = *v3;
  if ((*(unsigned char *)(a2 + 324) & 1) == 0)
  {
LABEL_38:
    if ((v7 & 0x200000000000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_105;
  }
LABEL_104:
  float result = *(float *)(a2 + 300);
  v6 |= 1u;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 300) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x200000000000000) == 0)
  {
LABEL_39:
    if ((v7 & 0x4000000000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_106;
  }
LABEL_105:
  float result = *(float *)(a2 + 272);
  v5 |= 0x200000000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 272) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x4000000000000) == 0)
  {
LABEL_40:
    if ((v7 & 0x100000000000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_107;
  }
LABEL_106:
  float result = *(float *)(a2 + 244);
  v5 |= 0x4000000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 244) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x100000000000000) == 0)
  {
LABEL_41:
    if ((v7 & 0x2000000000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_108;
  }
LABEL_107:
  float result = *(float *)(a2 + 268);
  v5 |= 0x100000000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 268) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x2000000000000) == 0)
  {
LABEL_42:
    if ((v7 & 0x8000000000000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_109;
  }
LABEL_108:
  float result = *(float *)(a2 + 240);
  v5 |= 0x2000000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 240) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x8000000000000000) == 0)
  {
LABEL_43:
    if ((v7 & 0x800000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_110;
  }
LABEL_109:
  float result = *(float *)(a2 + 296);
  v5 |= 0x8000000000000000;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 296) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x800000000) == 0)
  {
LABEL_44:
    if ((v7 & 0x400000000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_111;
  }
LABEL_110:
  float result = *(float *)(a2 + 184);
  v5 |= 0x800000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 184) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x400000000) == 0)
  {
LABEL_45:
    if ((v7 & 0x80000000000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_112;
  }
LABEL_111:
  float result = *(float *)(a2 + 180);
  v5 |= 0x400000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 180) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x80000000000) == 0)
  {
LABEL_46:
    if ((v7 & 0x10000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_113;
  }
LABEL_112:
  float result = *(float *)(a2 + 216);
  v5 |= 0x80000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 216) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x10000000) == 0)
  {
LABEL_47:
    if ((v7 & 0x20000000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_114;
  }
LABEL_113:
  float result = *(float *)(a2 + 156);
  v5 |= 0x10000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 156) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x20000000) == 0)
  {
LABEL_48:
    if ((v7 & 0x20000000000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_115;
  }
LABEL_114:
  float result = *(float *)(a2 + 160);
  v5 |= 0x20000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 160) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x20000000000) == 0)
  {
LABEL_49:
    if ((v7 & 0x200000000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_116;
  }
LABEL_115:
  float result = *(float *)(a2 + 208);
  v5 |= 0x20000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 208) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x200000000) == 0)
  {
LABEL_50:
    if ((v7 & 0x10000000000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_117;
  }
LABEL_116:
  float result = *(float *)(a2 + 176);
  v5 |= 0x200000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 176) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x10000000000) == 0)
  {
LABEL_51:
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_118;
  }
LABEL_117:
  float result = *(float *)(a2 + 204);
  v5 |= 0x10000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 204) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x100000000) == 0)
  {
LABEL_52:
    if ((v7 & 0x200000000000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_119;
  }
LABEL_118:
  float result = *(float *)(a2 + 172);
  v5 |= (unint64_t)&_mh_execute_header;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 172) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x200000000000) == 0)
  {
LABEL_53:
    if ((v7 & 0x4000000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_120;
  }
LABEL_119:
  float result = *(float *)(a2 + 224);
  v5 |= 0x200000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 224) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x4000000000) == 0)
  {
LABEL_54:
    if ((v7 & 0x80000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_121;
  }
LABEL_120:
  float result = *(float *)(a2 + 196);
  v5 |= 0x4000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 196) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x80000000) == 0)
  {
LABEL_55:
    if ((v7 & 0x2000000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_122;
  }
LABEL_121:
  float result = *(float *)(a2 + 168);
  v5 |= 0x80000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 168) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x2000000000) == 0)
  {
LABEL_56:
    if ((v7 & 0x40000000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_123;
  }
LABEL_122:
  float result = *(float *)(a2 + 192);
  v5 |= 0x2000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 192) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x40000000) == 0)
  {
LABEL_57:
    if ((v7 & 0x100000000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_124;
  }
LABEL_123:
  float result = *(float *)(a2 + 164);
  v5 |= 0x40000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 164) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x100000000000) == 0)
  {
LABEL_58:
    if ((v7 & 8) == 0) {
      goto LABEL_59;
    }
    goto LABEL_125;
  }
LABEL_124:
  float result = *(float *)(a2 + 220);
  v5 |= 0x100000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 220) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 8) == 0)
  {
LABEL_59:
    if ((v7 & 0x10) == 0) {
      goto LABEL_60;
    }
    goto LABEL_126;
  }
LABEL_125:
  uint64_t v15 = *(void *)(a2 + 32);
  v5 |= 8uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(void *)(a1 + 32) = v15;
  uint64_t v7 = *v3;
  if ((*v3 & 0x10) == 0)
  {
LABEL_60:
    if ((v7 & 0x1000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_127;
  }
LABEL_126:
  uint64_t v16 = *(void *)(a2 + 40);
  v5 |= 0x10uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(void *)(a1 + 40) = v16;
  uint64_t v7 = *v3;
  if ((*v3 & 0x1000000) == 0)
  {
LABEL_61:
    if ((v7 & 0x2000000000000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_128;
  }
LABEL_127:
  float result = *(float *)(a2 + 140);
  v5 |= 0x1000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 140) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x2000000000000000) == 0)
  {
LABEL_62:
    if ((v7 & 0x40000000000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_129;
  }
LABEL_128:
  float result = *(float *)(a2 + 288);
  v5 |= 0x2000000000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 288) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x40000000000) == 0)
  {
LABEL_63:
    if ((v7 & 0x40000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_130;
  }
LABEL_129:
  float result = *(float *)(a2 + 212);
  v5 |= 0x40000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 212) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x40000) == 0)
  {
LABEL_64:
    if ((v7 & 0x80000000000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_131;
  }
LABEL_130:
  float result = *(float *)(a2 + 116);
  v5 |= 0x40000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 116) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x80000000000000) == 0)
  {
LABEL_65:
    if ((v7 & 0x1000000000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_132;
  }
LABEL_131:
  float result = *(float *)(a2 + 264);
  v5 |= 0x80000000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 264) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x1000000000) == 0)
  {
LABEL_66:
    if ((v7 & 0x200000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_133;
  }
LABEL_132:
  float result = *(float *)(a2 + 188);
  v5 |= 0x1000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 188) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x200000) == 0)
  {
LABEL_67:
    if ((v7 & 0x400000000000000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_134;
  }
LABEL_133:
  float result = *(float *)(a2 + 128);
  v5 |= 0x200000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 128) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x400000000000000) == 0)
  {
LABEL_68:
    if ((v7 & 0x8000000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_135;
  }
LABEL_134:
  float result = *(float *)(a2 + 276);
  v5 |= 0x400000000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 276) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x8000000000) == 0)
  {
LABEL_69:
    if ((v7 & 2) == 0) {
      goto LABEL_70;
    }
    goto LABEL_136;
  }
LABEL_135:
  float result = *(float *)(a2 + 200);
  v5 |= 0x8000000000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(float *)(a1 + 200) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 2) == 0)
  {
LABEL_70:
    if ((v7 & 4) == 0) {
      goto LABEL_71;
    }
    goto LABEL_137;
  }
LABEL_136:
  uint64_t v17 = *(void *)(a2 + 16);
  v5 |= 2uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(void *)(a1 + 16) = v17;
  uint64_t v7 = *v3;
  if ((*v3 & 4) == 0)
  {
LABEL_71:
    if ((v7 & 0x400000000000) == 0) {
      return result;
    }
LABEL_138:
    float result = *(float *)(a2 + 228);
    *unint64_t v2 = v5 | 0x400000000000;
    *(unsigned char *)(a1 + 324) = v6;
    *(float *)(a1 + 228) = result;
    return result;
  }
LABEL_137:
  uint64_t v18 = *(void *)(a2 + 24);
  v5 |= 4uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 324) = v6;
  *(void *)(a1 + 24) = v18;
  if ((*v3 & 0x400000000000) != 0) {
    goto LABEL_138;
  }
  return result;
}

uint64_t sub_10168FFDC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = (uint64_t *)(a1 + 316);
  uint64_t v6 = *(void *)(a1 + 316);
  if ((v6 & 0x200) != 0)
  {
    PB::TextFormatter::format(this, "arclengthXYBiggestImpact", *(float *)(a1 + 80));
    uint64_t v6 = *v5;
    char v7 = *(unsigned char *)(a1 + 324);
    if ((*v5 & 0x400) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v7 = *(unsigned char *)(a1 + 324);
  if ((v6 & 0x400) != 0)
  {
LABEL_5:
    PB::TextFormatter::format(this, "arclengthXYOverEpoch", *(float *)(a1 + 84));
    uint64_t v6 = *v5;
    char v7 = *(unsigned char *)(a1 + 324);
  }
LABEL_6:
  if ((v6 & 0x800) != 0)
  {
    PB::TextFormatter::format(this, "arclengthXYZBiggestImpact", *(float *)(a1 + 88));
    uint64_t v6 = *v5;
    char v7 = *(unsigned char *)(a1 + 324);
    if ((*v5 & 0x1000) == 0)
    {
LABEL_8:
      if ((v6 & 0x2000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_78;
    }
  }
  else if ((v6 & 0x1000) == 0)
  {
    goto LABEL_8;
  }
  PB::TextFormatter::format(this, "arclengthXYZOverEpoch", *(float *)(a1 + 92));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x2000) == 0)
  {
LABEL_9:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_79;
  }
LABEL_78:
  PB::TextFormatter::format(this, "arclengthZBiggestImpact", *(float *)(a1 + 96));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x4000) == 0)
  {
LABEL_10:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_80;
  }
LABEL_79:
  PB::TextFormatter::format(this, "arclengthZOverEpoch", *(float *)(a1 + 100));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x8000) == 0)
  {
LABEL_11:
    if ((v6 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_81;
  }
LABEL_80:
  PB::TextFormatter::format(this, "configDecelPulseThreshold", *(float *)(a1 + 104));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 1) == 0)
  {
LABEL_12:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_82;
  }
LABEL_81:
  PB::TextFormatter::format(this, "deltaTriggerTime", *(void *)(a1 + 8));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x10000) == 0)
  {
LABEL_13:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_83;
  }
LABEL_82:
  PB::TextFormatter::format(this, "deltaVXYBiggestImpact", *(float *)(a1 + 108));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x20000) == 0)
  {
LABEL_14:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_84;
  }
LABEL_83:
  PB::TextFormatter::format(this, "deltaVXYOverEpoch", *(float *)(a1 + 112));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x40000) == 0)
  {
LABEL_15:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_85;
  }
LABEL_84:
  PB::TextFormatter::format(this, "deltaVXYUnconditional", *(float *)(a1 + 116));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x80000) == 0)
  {
LABEL_16:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_86;
  }
LABEL_85:
  PB::TextFormatter::format(this, "deltaVXYZBiggestImpact", *(float *)(a1 + 120));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x100000) == 0)
  {
LABEL_17:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_87;
  }
LABEL_86:
  PB::TextFormatter::format(this, "deltaVXYZOverEpoch", *(float *)(a1 + 124));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x200000) == 0)
  {
LABEL_18:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_88;
  }
LABEL_87:
  PB::TextFormatter::format(this, "deltaVXYZUnconditional", *(float *)(a1 + 128));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x400000) == 0)
  {
LABEL_19:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_89;
  }
LABEL_88:
  PB::TextFormatter::format(this, "deltaVZBiggestImpact", *(float *)(a1 + 132));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x800000) == 0)
  {
LABEL_20:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_90;
  }
LABEL_89:
  PB::TextFormatter::format(this, "deltaVZOverEpoch", *(float *)(a1 + 136));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x1000000) == 0)
  {
LABEL_21:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_91;
  }
LABEL_90:
  PB::TextFormatter::format(this, "deltaVZUnconditional", *(float *)(a1 + 140));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x2000000) == 0)
  {
LABEL_22:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_92;
  }
LABEL_91:
  PB::TextFormatter::format(this, "durationXYBiggestImpact", *(float *)(a1 + 144));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x4000000) == 0)
  {
LABEL_23:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_93;
  }
LABEL_92:
  PB::TextFormatter::format(this, "durationXYZBiggestImpact", *(float *)(a1 + 148));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x8000000) == 0)
  {
LABEL_24:
    if ((v6 & 2) == 0) {
      goto LABEL_25;
    }
    goto LABEL_94;
  }
LABEL_93:
  PB::TextFormatter::format(this, "durationZBiggestImpact", *(float *)(a1 + 152));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 2) == 0)
  {
LABEL_25:
    if ((v6 & 4) == 0) {
      goto LABEL_26;
    }
    goto LABEL_95;
  }
LABEL_94:
  PB::TextFormatter::format(this, "epochFirstTimestamp", *(void *)(a1 + 16));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 4) == 0)
  {
LABEL_26:
    if ((v6 & 8) == 0) {
      goto LABEL_27;
    }
    goto LABEL_96;
  }
LABEL_95:
  PB::TextFormatter::format(this, "epochLastTimestamp", *(void *)(a1 + 24));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 8) == 0)
  {
LABEL_27:
    if ((v6 & 0x10) == 0) {
      goto LABEL_28;
    }
    goto LABEL_97;
  }
LABEL_96:
  PB::TextFormatter::format(this, "faultCounter", *(void *)(a1 + 32));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x10) == 0)
  {
LABEL_28:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_98;
  }
LABEL_97:
  PB::TextFormatter::format(this, "hgAccelBufferSize", *(void *)(a1 + 40));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x10000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_99;
  }
LABEL_98:
  PB::TextFormatter::format(this, "hgArclengthXYBiggestImpact", *(float *)(a1 + 156));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x20000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_100;
  }
LABEL_99:
  PB::TextFormatter::format(this, "hgArclengthXYOverEpoch", *(float *)(a1 + 160));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x40000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_101;
  }
LABEL_100:
  PB::TextFormatter::format(this, "hgArclengthXYZBiggestImpact", *(float *)(a1 + 164));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x80000000) == 0)
  {
LABEL_32:
    if ((v6 & 0x100000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_102;
  }
LABEL_101:
  PB::TextFormatter::format(this, "hgArclengthXYZOverEpoch", *(float *)(a1 + 168));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x100000000) == 0)
  {
LABEL_33:
    if ((v6 & 0x200000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_103;
  }
LABEL_102:
  PB::TextFormatter::format(this, "hgArclengthZBiggestImpact", *(float *)(a1 + 172));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x200000000) == 0)
  {
LABEL_34:
    if ((v6 & 0x400000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_104;
  }
LABEL_103:
  PB::TextFormatter::format(this, "hgArclengthZOverEpoch", *(float *)(a1 + 176));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x400000000) == 0)
  {
LABEL_35:
    if ((v6 & 0x800000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_105;
  }
LABEL_104:
  PB::TextFormatter::format(this, "hgDeltaVXYBiggestImpact", *(float *)(a1 + 180));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x800000000) == 0)
  {
LABEL_36:
    if ((v6 & 0x1000000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_106;
  }
LABEL_105:
  PB::TextFormatter::format(this, "hgDeltaVXYOverEpoch", *(float *)(a1 + 184));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x1000000000) == 0)
  {
LABEL_37:
    if ((v6 & 0x2000000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_107;
  }
LABEL_106:
  PB::TextFormatter::format(this, "hgDeltaVXYUnconditional", *(float *)(a1 + 188));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x2000000000) == 0)
  {
LABEL_38:
    if ((v6 & 0x4000000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_108;
  }
LABEL_107:
  PB::TextFormatter::format(this, "hgDeltaVXYZBiggestImpact", *(float *)(a1 + 192));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x4000000000) == 0)
  {
LABEL_39:
    if ((v6 & 0x8000000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_109;
  }
LABEL_108:
  PB::TextFormatter::format(this, "hgDeltaVXYZOverEpoch", *(float *)(a1 + 196));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x8000000000) == 0)
  {
LABEL_40:
    if ((v6 & 0x10000000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_110;
  }
LABEL_109:
  PB::TextFormatter::format(this, "hgDeltaVXYZUnconditional", *(float *)(a1 + 200));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x10000000000) == 0)
  {
LABEL_41:
    if ((v6 & 0x20000000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_111;
  }
LABEL_110:
  PB::TextFormatter::format(this, "hgDeltaVZBiggestImpact", *(float *)(a1 + 204));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x20000000000) == 0)
  {
LABEL_42:
    if ((v6 & 0x40000000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_112;
  }
LABEL_111:
  PB::TextFormatter::format(this, "hgDeltaVZOverEpoch", *(float *)(a1 + 208));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x40000000000) == 0)
  {
LABEL_43:
    if ((v6 & 0x80000000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_113;
  }
LABEL_112:
  PB::TextFormatter::format(this, "hgDeltaVZUnconditional", *(float *)(a1 + 212));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x80000000000) == 0)
  {
LABEL_44:
    if ((v6 & 0x100000000000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_114;
  }
LABEL_113:
  PB::TextFormatter::format(this, "hgDurationXYBiggestImpact", *(float *)(a1 + 216));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x100000000000) == 0)
  {
LABEL_45:
    if ((v6 & 0x200000000000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_115;
  }
LABEL_114:
  PB::TextFormatter::format(this, "hgDurationXYZBiggestImpact", *(float *)(a1 + 220));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x200000000000) == 0)
  {
LABEL_46:
    if ((v6 & 0x400000000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_116;
  }
LABEL_115:
  PB::TextFormatter::format(this, "hgDurationZBiggestImpact", *(float *)(a1 + 224));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x400000000000) == 0)
  {
LABEL_47:
    if ((v7 & 8) == 0) {
      goto LABEL_48;
    }
    goto LABEL_117;
  }
LABEL_116:
  PB::TextFormatter::format(this, "hgWeightCoeff", *(float *)(a1 + 228));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((v7 & 8) == 0)
  {
LABEL_48:
    if ((v6 & 0x800000000000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_118;
  }
LABEL_117:
  PB::TextFormatter::format(this, "isPulseDetected", *(unsigned char *)(a1 + 312));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x800000000000) == 0)
  {
LABEL_49:
    if ((v6 & 0x1000000000000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_119;
  }
LABEL_118:
  PB::TextFormatter::format(this, "lgArclengthXYBiggestImpact", *(float *)(a1 + 232));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x1000000000000) == 0)
  {
LABEL_50:
    if ((v6 & 0x2000000000000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_120;
  }
LABEL_119:
  PB::TextFormatter::format(this, "lgArclengthXYOverEpoch", *(float *)(a1 + 236));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x2000000000000) == 0)
  {
LABEL_51:
    if ((v6 & 0x4000000000000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_121;
  }
LABEL_120:
  PB::TextFormatter::format(this, "lgArclengthXYZBiggestImpact", *(float *)(a1 + 240));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x4000000000000) == 0)
  {
LABEL_52:
    if ((v6 & 0x8000000000000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_122;
  }
LABEL_121:
  PB::TextFormatter::format(this, "lgArclengthXYZOverEpoch", *(float *)(a1 + 244));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x8000000000000) == 0)
  {
LABEL_53:
    if ((v6 & 0x10000000000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_123;
  }
LABEL_122:
  PB::TextFormatter::format(this, "lgArclengthZBiggestImpact", *(float *)(a1 + 248));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x10000000000000) == 0)
  {
LABEL_54:
    if ((v6 & 0x20000000000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_124;
  }
LABEL_123:
  PB::TextFormatter::format(this, "lgArclengthZOverEpoch", *(float *)(a1 + 252));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x20000000000000) == 0)
  {
LABEL_55:
    if ((v6 & 0x40000000000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_125;
  }
LABEL_124:
  PB::TextFormatter::format(this, "lgDeltaVXYBiggestImpact", *(float *)(a1 + 256));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x40000000000000) == 0)
  {
LABEL_56:
    if ((v6 & 0x80000000000000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_126;
  }
LABEL_125:
  PB::TextFormatter::format(this, "lgDeltaVXYOverEpoch", *(float *)(a1 + 260));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x80000000000000) == 0)
  {
LABEL_57:
    if ((v6 & 0x100000000000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_127;
  }
LABEL_126:
  PB::TextFormatter::format(this, "lgDeltaVXYUnconditional", *(float *)(a1 + 264));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x100000000000000) == 0)
  {
LABEL_58:
    if ((v6 & 0x200000000000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_128;
  }
LABEL_127:
  PB::TextFormatter::format(this, "lgDeltaVXYZBiggestImpact", *(float *)(a1 + 268));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x200000000000000) == 0)
  {
LABEL_59:
    if ((v6 & 0x400000000000000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_129;
  }
LABEL_128:
  PB::TextFormatter::format(this, "lgDeltaVXYZOverEpoch", *(float *)(a1 + 272));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x400000000000000) == 0)
  {
LABEL_60:
    if ((v6 & 0x800000000000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_130;
  }
LABEL_129:
  PB::TextFormatter::format(this, "lgDeltaVXYZUnconditional", *(float *)(a1 + 276));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x800000000000000) == 0)
  {
LABEL_61:
    if ((v6 & 0x1000000000000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_131;
  }
LABEL_130:
  PB::TextFormatter::format(this, "lgDeltaVZBiggestImpact", *(float *)(a1 + 280));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x1000000000000000) == 0)
  {
LABEL_62:
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_132;
  }
LABEL_131:
  PB::TextFormatter::format(this, "lgDeltaVZOverEpoch", *(float *)(a1 + 284));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x2000000000000000) == 0)
  {
LABEL_63:
    if ((v6 & 0x4000000000000000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_133;
  }
LABEL_132:
  PB::TextFormatter::format(this, "lgDeltaVZUnconditional", *(float *)(a1 + 288));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x4000000000000000) == 0)
  {
LABEL_64:
    if ((v6 & 0x8000000000000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_134;
  }
LABEL_133:
  PB::TextFormatter::format(this, "lgDurationXYBiggestImpact", *(float *)(a1 + 292));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((*v5 & 0x8000000000000000) == 0)
  {
LABEL_65:
    if ((v7 & 1) == 0) {
      goto LABEL_66;
    }
    goto LABEL_135;
  }
LABEL_134:
  PB::TextFormatter::format(this, "lgDurationXYZBiggestImpact", *(float *)(a1 + 296));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((v7 & 1) == 0)
  {
LABEL_66:
    if ((v7 & 2) == 0) {
      goto LABEL_67;
    }
    goto LABEL_136;
  }
LABEL_135:
  PB::TextFormatter::format(this, "lgDurationZBiggestImpact", *(float *)(a1 + 300));
  uint64_t v6 = *v5;
  char v7 = *(unsigned char *)(a1 + 324);
  if ((v7 & 2) == 0)
  {
LABEL_67:
    if ((v7 & 4) == 0) {
      goto LABEL_68;
    }
    goto LABEL_137;
  }
LABEL_136:
  PB::TextFormatter::format(this, "maxPulse", *(float *)(a1 + 304));
  uint64_t v6 = *v5;
  if ((*(unsigned char *)(a1 + 324) & 4) == 0)
  {
LABEL_68:
    if ((v6 & 0x20) == 0) {
      goto LABEL_69;
    }
    goto LABEL_138;
  }
LABEL_137:
  PB::TextFormatter::format(this, "maxPulseHeight", *(float *)(a1 + 308));
  uint64_t v6 = *v5;
  if ((*v5 & 0x20) == 0)
  {
LABEL_69:
    if ((v6 & 0x40) == 0) {
      goto LABEL_70;
    }
    goto LABEL_139;
  }
LABEL_138:
  PB::TextFormatter::format(this, "maxPulseStartTime", *(void *)(a1 + 48));
  uint64_t v6 = *v5;
  if ((*v5 & 0x40) == 0)
  {
LABEL_70:
    if ((v6 & 0x80) == 0) {
      goto LABEL_71;
    }
    goto LABEL_140;
  }
LABEL_139:
  PB::TextFormatter::format(this, "maxPulseTime", *(void *)(a1 + 56));
  uint64_t v6 = *v5;
  if ((*v5 & 0x80) == 0)
  {
LABEL_71:
    if ((v6 & 0x100) == 0) {
      goto LABEL_73;
    }
    goto LABEL_72;
  }
LABEL_140:
  PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 64));
  if ((*v5 & 0x100) != 0) {
LABEL_72:
  }
    PB::TextFormatter::format(this, "triggerTimestamp", *(void *)(a1 + 72));
LABEL_73:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_1016909AC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v8 = a1 + 316;
    while (1)
    {
      uint64_t v9 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v10 = 0;
      unsigned int v11 = 0;
      unint64_t v12 = 0;
      while (1)
      {
        unint64_t v13 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v14 = *(unsigned char *)(v9 + v2);
        v12 |= (unint64_t)(v14 & 0x7F) << v10;
        if ((v14 & 0x80) == 0) {
          break;
        }
        v10 += 7;
        unint64_t v2 = v13;
        BOOL v15 = v11++ > 8;
        if (v15) {
          goto LABEL_20;
        }
      }
LABEL_21:
      if ((v12 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v21 = v12 >> 3;
      if ((int)(v12 >> 3) > 200)
      {
        switch(v21)
        {
          case 0xC9:
            *(void *)v8 |= 2uLL;
            unint64_t v140 = *((void *)this + 1);
            unint64_t v141 = *((void *)this + 2);
            uint64_t v142 = *(void *)this;
            if (v140 > 0xFFFFFFFFFFFFFFF5 || v140 + 10 > v141)
            {
              char v185 = 0;
              unsigned int v186 = 0;
              uint64_t v145 = 0;
              if (v141 <= v140) {
                unint64_t v141 = *((void *)this + 1);
              }
              while (1)
              {
                if (v141 == v140)
                {
                  uint64_t v145 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_372;
                }
                unint64_t v187 = v140 + 1;
                char v188 = *(unsigned char *)(v142 + v140);
                *((void *)this + 1) = v187;
                v145 |= (unint64_t)(v188 & 0x7F) << v185;
                if ((v188 & 0x80) == 0) {
                  break;
                }
                v185 += 7;
                unint64_t v140 = v187;
                BOOL v15 = v186++ > 8;
                if (v15)
                {
LABEL_325:
                  uint64_t v145 = 0;
                  goto LABEL_372;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v145 = 0;
              }
            }
            else
            {
              char v143 = 0;
              unsigned int v144 = 0;
              uint64_t v145 = 0;
              while (1)
              {
                unint64_t v146 = v140 + 1;
                *((void *)this + 1) = v140 + 1;
                char v147 = *(unsigned char *)(v142 + v140);
                v145 |= (unint64_t)(v147 & 0x7F) << v143;
                if ((v147 & 0x80) == 0) {
                  break;
                }
                v143 += 7;
                unint64_t v140 = v146;
                BOOL v15 = v144++ > 8;
                if (v15) {
                  goto LABEL_325;
                }
              }
            }
LABEL_372:
            *(void *)(a1 + 16) = v145;
            break;
          case 0xCA:
            *(void *)v8 |= 4uLL;
            unint64_t v148 = *((void *)this + 1);
            unint64_t v149 = *((void *)this + 2);
            uint64_t v150 = *(void *)this;
            if (v148 > 0xFFFFFFFFFFFFFFF5 || v148 + 10 > v149)
            {
              char v189 = 0;
              unsigned int v190 = 0;
              uint64_t v153 = 0;
              if (v149 <= v148) {
                unint64_t v149 = *((void *)this + 1);
              }
              while (1)
              {
                if (v149 == v148)
                {
                  uint64_t v153 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_376;
                }
                unint64_t v191 = v148 + 1;
                char v192 = *(unsigned char *)(v150 + v148);
                *((void *)this + 1) = v191;
                v153 |= (unint64_t)(v192 & 0x7F) << v189;
                if ((v192 & 0x80) == 0) {
                  break;
                }
                v189 += 7;
                unint64_t v148 = v191;
                BOOL v15 = v190++ > 8;
                if (v15)
                {
LABEL_332:
                  uint64_t v153 = 0;
                  goto LABEL_376;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v153 = 0;
              }
            }
            else
            {
              char v151 = 0;
              unsigned int v152 = 0;
              uint64_t v153 = 0;
              while (1)
              {
                unint64_t v154 = v148 + 1;
                *((void *)this + 1) = v148 + 1;
                char v155 = *(unsigned char *)(v150 + v148);
                v153 |= (unint64_t)(v155 & 0x7F) << v151;
                if ((v155 & 0x80) == 0) {
                  break;
                }
                v151 += 7;
                unint64_t v148 = v154;
                BOOL v15 = v152++ > 8;
                if (v15) {
                  goto LABEL_332;
                }
              }
            }
LABEL_376:
            *(void *)(a1 + 24) = v153;
            break;
          case 0x12D:
            *(void *)v8 |= 0x400000000000uLL;
            unint64_t v26 = *((void *)this + 1);
            if (v26 <= 0xFFFFFFFFFFFFFFFBLL && v26 + 4 <= *((void *)this + 2))
            {
              *(_DWORD *)(a1 + 228) = *(_DWORD *)(*(void *)this + v26);
LABEL_335:
              *((void *)this + 1) += 4;
            }
            else
            {
              *((unsigned char *)this + 24) = 1;
            }
            break;
          default:
LABEL_266:
            uint64_t result = PB::Reader::skip(this, v21, v12 & 7, 0);
            if (!result) {
              return result;
            }
            break;
        }
      }
      else
      {
        switch((int)v21)
        {
          case 1:
            *(unsigned char *)(v8 + 8) |= 8u;
            unint64_t v22 = *((void *)this + 1);
            if (v22 >= *((void *)this + 2))
            {
              BOOL v25 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v23 = v22 + 1;
              int v24 = *(unsigned __int8 *)(*(void *)this + v22);
              *((void *)this + 1) = v23;
              BOOL v25 = v24 != 0;
            }
            *(unsigned char *)(a1 + 312) = v25;
            goto LABEL_336;
          case 2:
            *(unsigned char *)(v8 + 8) |= 2u;
            unint64_t v27 = *((void *)this + 1);
            if (v27 > 0xFFFFFFFFFFFFFFFBLL || v27 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 304) = *(_DWORD *)(*(void *)this + v27);
            goto LABEL_335;
          case 3:
            *(unsigned char *)(v8 + 8) |= 4u;
            unint64_t v28 = *((void *)this + 1);
            if (v28 > 0xFFFFFFFFFFFFFFFBLL || v28 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 308) = *(_DWORD *)(*(void *)this + v28);
            goto LABEL_335;
          case 4:
            *(void *)v8 |= 0x20uLL;
            unint64_t v29 = *((void *)this + 1);
            unint64_t v30 = *((void *)this + 2);
            uint64_t v31 = *(void *)this;
            if (v29 <= 0xFFFFFFFFFFFFFFF5 && v29 + 10 <= v30)
            {
              char v32 = 0;
              unsigned int v33 = 0;
              uint64_t v34 = 0;
              do
              {
                unint64_t v35 = v29 + 1;
                *((void *)this + 1) = v29 + 1;
                char v36 = *(unsigned char *)(v31 + v29);
                v34 |= (unint64_t)(v36 & 0x7F) << v32;
                if ((v36 & 0x80) == 0) {
                  goto LABEL_344;
                }
                v32 += 7;
                unint64_t v29 = v35;
                BOOL v15 = v33++ > 8;
              }
              while (!v15);
LABEL_276:
              uint64_t v34 = 0;
              goto LABEL_344;
            }
            char v157 = 0;
            unsigned int v158 = 0;
            uint64_t v34 = 0;
            if (v30 <= v29) {
              unint64_t v30 = *((void *)this + 1);
            }
            while (2)
            {
              if (v30 == v29)
              {
                uint64_t v34 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v159 = v29 + 1;
                char v160 = *(unsigned char *)(v31 + v29);
                *((void *)this + 1) = v159;
                v34 |= (unint64_t)(v160 & 0x7F) << v157;
                if (v160 < 0)
                {
                  v157 += 7;
                  unint64_t v29 = v159;
                  BOOL v15 = v158++ > 8;
                  if (v15) {
                    goto LABEL_276;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v34 = 0;
                }
              }
              break;
            }
LABEL_344:
            *(void *)(a1 + 48) = v34;
            goto LABEL_336;
          case 5:
            *(void *)v8 |= 0x40uLL;
            unint64_t v37 = *((void *)this + 1);
            unint64_t v38 = *((void *)this + 2);
            uint64_t v39 = *(void *)this;
            if (v37 <= 0xFFFFFFFFFFFFFFF5 && v37 + 10 <= v38)
            {
              char v40 = 0;
              unsigned int v41 = 0;
              uint64_t v42 = 0;
              do
              {
                unint64_t v43 = v37 + 1;
                *((void *)this + 1) = v37 + 1;
                char v44 = *(unsigned char *)(v39 + v37);
                v42 |= (unint64_t)(v44 & 0x7F) << v40;
                if ((v44 & 0x80) == 0) {
                  goto LABEL_348;
                }
                v40 += 7;
                unint64_t v37 = v43;
                BOOL v15 = v41++ > 8;
              }
              while (!v15);
LABEL_283:
              uint64_t v42 = 0;
              goto LABEL_348;
            }
            char v161 = 0;
            unsigned int v162 = 0;
            uint64_t v42 = 0;
            if (v38 <= v37) {
              unint64_t v38 = *((void *)this + 1);
            }
            while (2)
            {
              if (v38 == v37)
              {
                uint64_t v42 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v163 = v37 + 1;
                char v164 = *(unsigned char *)(v39 + v37);
                *((void *)this + 1) = v163;
                v42 |= (unint64_t)(v164 & 0x7F) << v161;
                if (v164 < 0)
                {
                  v161 += 7;
                  unint64_t v37 = v163;
                  BOOL v15 = v162++ > 8;
                  if (v15) {
                    goto LABEL_283;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v42 = 0;
                }
              }
              break;
            }
LABEL_348:
            *(void *)(a1 + 56) = v42;
            goto LABEL_336;
          case 6:
            *(void *)v8 |= 1uLL;
            unint64_t v45 = *((void *)this + 1);
            unint64_t v46 = *((void *)this + 2);
            uint64_t v47 = *(void *)this;
            if (v45 <= 0xFFFFFFFFFFFFFFF5 && v45 + 10 <= v46)
            {
              char v48 = 0;
              unsigned int v49 = 0;
              uint64_t v50 = 0;
              do
              {
                unint64_t v51 = v45 + 1;
                *((void *)this + 1) = v45 + 1;
                char v52 = *(unsigned char *)(v47 + v45);
                v50 |= (unint64_t)(v52 & 0x7F) << v48;
                if ((v52 & 0x80) == 0) {
                  goto LABEL_352;
                }
                v48 += 7;
                unint64_t v45 = v51;
                BOOL v15 = v49++ > 8;
              }
              while (!v15);
LABEL_290:
              uint64_t v50 = 0;
              goto LABEL_352;
            }
            char v165 = 0;
            unsigned int v166 = 0;
            uint64_t v50 = 0;
            if (v46 <= v45) {
              unint64_t v46 = *((void *)this + 1);
            }
            while (2)
            {
              if (v46 == v45)
              {
                uint64_t v50 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v167 = v45 + 1;
                char v168 = *(unsigned char *)(v47 + v45);
                *((void *)this + 1) = v167;
                v50 |= (unint64_t)(v168 & 0x7F) << v165;
                if (v168 < 0)
                {
                  v165 += 7;
                  unint64_t v45 = v167;
                  BOOL v15 = v166++ > 8;
                  if (v15) {
                    goto LABEL_290;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v50 = 0;
                }
              }
              break;
            }
LABEL_352:
            *(void *)(a1 + 8) = v50;
            goto LABEL_336;
          case 7:
            *(void *)v8 |= 0x8000uLL;
            unint64_t v53 = *((void *)this + 1);
            if (v53 > 0xFFFFFFFFFFFFFFFBLL || v53 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 104) = *(_DWORD *)(*(void *)this + v53);
            goto LABEL_335;
          case 8:
            *(void *)v8 |= 0x80uLL;
            unint64_t v54 = *((void *)this + 1);
            unint64_t v55 = *((void *)this + 2);
            uint64_t v56 = *(void *)this;
            if (v54 <= 0xFFFFFFFFFFFFFFF5 && v54 + 10 <= v55)
            {
              char v57 = 0;
              unsigned int v58 = 0;
              uint64_t v59 = 0;
              do
              {
                unint64_t v60 = v54 + 1;
                *((void *)this + 1) = v54 + 1;
                char v61 = *(unsigned char *)(v56 + v54);
                v59 |= (unint64_t)(v61 & 0x7F) << v57;
                if ((v61 & 0x80) == 0) {
                  goto LABEL_356;
                }
                v57 += 7;
                unint64_t v54 = v60;
                BOOL v15 = v58++ > 8;
              }
              while (!v15);
LABEL_297:
              uint64_t v59 = 0;
              goto LABEL_356;
            }
            char v169 = 0;
            unsigned int v170 = 0;
            uint64_t v59 = 0;
            if (v55 <= v54) {
              unint64_t v55 = *((void *)this + 1);
            }
            while (2)
            {
              if (v55 == v54)
              {
                uint64_t v59 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v171 = v54 + 1;
                char v172 = *(unsigned char *)(v56 + v54);
                *((void *)this + 1) = v171;
                v59 |= (unint64_t)(v172 & 0x7F) << v169;
                if (v172 < 0)
                {
                  v169 += 7;
                  unint64_t v54 = v171;
                  BOOL v15 = v170++ > 8;
                  if (v15) {
                    goto LABEL_297;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v59 = 0;
                }
              }
              break;
            }
LABEL_356:
            *(void *)(a1 + 64) = v59;
            goto LABEL_336;
          case 9:
            *(void *)v8 |= 0x100uLL;
            unint64_t v62 = *((void *)this + 1);
            unint64_t v63 = *((void *)this + 2);
            uint64_t v64 = *(void *)this;
            if (v62 <= 0xFFFFFFFFFFFFFFF5 && v62 + 10 <= v63)
            {
              char v65 = 0;
              unsigned int v66 = 0;
              uint64_t v67 = 0;
              do
              {
                unint64_t v68 = v62 + 1;
                *((void *)this + 1) = v62 + 1;
                char v69 = *(unsigned char *)(v64 + v62);
                v67 |= (unint64_t)(v69 & 0x7F) << v65;
                if ((v69 & 0x80) == 0) {
                  goto LABEL_360;
                }
                v65 += 7;
                unint64_t v62 = v68;
                BOOL v15 = v66++ > 8;
              }
              while (!v15);
LABEL_304:
              uint64_t v67 = 0;
              goto LABEL_360;
            }
            char v173 = 0;
            unsigned int v174 = 0;
            uint64_t v67 = 0;
            if (v63 <= v62) {
              unint64_t v63 = *((void *)this + 1);
            }
            while (2)
            {
              if (v63 == v62)
              {
                uint64_t v67 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v175 = v62 + 1;
                char v176 = *(unsigned char *)(v64 + v62);
                *((void *)this + 1) = v175;
                v67 |= (unint64_t)(v176 & 0x7F) << v173;
                if (v176 < 0)
                {
                  v173 += 7;
                  unint64_t v62 = v175;
                  BOOL v15 = v174++ > 8;
                  if (v15) {
                    goto LABEL_304;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v67 = 0;
                }
              }
              break;
            }
LABEL_360:
            *(void *)(a1 + 72) = v67;
            goto LABEL_336;
          case 10:
            *(void *)v8 |= 0x20000uLL;
            unint64_t v70 = *((void *)this + 1);
            if (v70 > 0xFFFFFFFFFFFFFFFBLL || v70 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 112) = *(_DWORD *)(*(void *)this + v70);
            goto LABEL_335;
          case 11:
            *(void *)v8 |= 0x10000uLL;
            unint64_t v71 = *((void *)this + 1);
            if (v71 > 0xFFFFFFFFFFFFFFFBLL || v71 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 108) = *(_DWORD *)(*(void *)this + v71);
            goto LABEL_335;
          case 12:
            *(void *)v8 |= 0x2000000uLL;
            unint64_t v72 = *((void *)this + 1);
            if (v72 > 0xFFFFFFFFFFFFFFFBLL || v72 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 144) = *(_DWORD *)(*(void *)this + v72);
            goto LABEL_335;
          case 13:
            *(void *)v8 |= 0x200uLL;
            unint64_t v73 = *((void *)this + 1);
            if (v73 > 0xFFFFFFFFFFFFFFFBLL || v73 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v73);
            goto LABEL_335;
          case 14:
            *(void *)v8 |= 0x400uLL;
            unint64_t v74 = *((void *)this + 1);
            if (v74 > 0xFFFFFFFFFFFFFFFBLL || v74 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v74);
            goto LABEL_335;
          case 15:
            *(void *)v8 |= 0x800000uLL;
            unint64_t v75 = *((void *)this + 1);
            if (v75 > 0xFFFFFFFFFFFFFFFBLL || v75 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 136) = *(_DWORD *)(*(void *)this + v75);
            goto LABEL_335;
          case 16:
            *(void *)v8 |= 0x4000uLL;
            unint64_t v76 = *((void *)this + 1);
            if (v76 > 0xFFFFFFFFFFFFFFFBLL || v76 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v76);
            goto LABEL_335;
          case 17:
            *(void *)v8 |= 0x400000uLL;
            unint64_t v77 = *((void *)this + 1);
            if (v77 > 0xFFFFFFFFFFFFFFFBLL || v77 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 132) = *(_DWORD *)(*(void *)this + v77);
            goto LABEL_335;
          case 18:
            *(void *)v8 |= 0x2000uLL;
            unint64_t v78 = *((void *)this + 1);
            if (v78 > 0xFFFFFFFFFFFFFFFBLL || v78 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v78);
            goto LABEL_335;
          case 19:
            *(void *)v8 |= 0x8000000uLL;
            unint64_t v79 = *((void *)this + 1);
            if (v79 > 0xFFFFFFFFFFFFFFFBLL || v79 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 152) = *(_DWORD *)(*(void *)this + v79);
            goto LABEL_335;
          case 20:
            *(void *)v8 |= 0x100000uLL;
            unint64_t v80 = *((void *)this + 1);
            if (v80 > 0xFFFFFFFFFFFFFFFBLL || v80 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 124) = *(_DWORD *)(*(void *)this + v80);
            goto LABEL_335;
          case 21:
            *(void *)v8 |= 0x1000uLL;
            unint64_t v81 = *((void *)this + 1);
            if (v81 > 0xFFFFFFFFFFFFFFFBLL || v81 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(void *)this + v81);
            goto LABEL_335;
          case 22:
            *(void *)v8 |= 0x80000uLL;
            unint64_t v82 = *((void *)this + 1);
            if (v82 > 0xFFFFFFFFFFFFFFFBLL || v82 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 120) = *(_DWORD *)(*(void *)this + v82);
            goto LABEL_335;
          case 23:
            *(void *)v8 |= 0x800uLL;
            unint64_t v83 = *((void *)this + 1);
            if (v83 > 0xFFFFFFFFFFFFFFFBLL || v83 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v83);
            goto LABEL_335;
          case 24:
            *(void *)v8 |= 0x4000000uLL;
            unint64_t v84 = *((void *)this + 1);
            if (v84 > 0xFFFFFFFFFFFFFFFBLL || v84 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 148) = *(_DWORD *)(*(void *)this + v84);
            goto LABEL_335;
          case 25:
            *(void *)v8 |= 0x40000000000000uLL;
            unint64_t v85 = *((void *)this + 1);
            if (v85 > 0xFFFFFFFFFFFFFFFBLL || v85 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 260) = *(_DWORD *)(*(void *)this + v85);
            goto LABEL_335;
          case 26:
            *(void *)v8 |= 0x20000000000000uLL;
            unint64_t v86 = *((void *)this + 1);
            if (v86 > 0xFFFFFFFFFFFFFFFBLL || v86 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 256) = *(_DWORD *)(*(void *)this + v86);
            goto LABEL_335;
          case 27:
            *(void *)v8 |= 0x4000000000000000uLL;
            unint64_t v87 = *((void *)this + 1);
            if (v87 > 0xFFFFFFFFFFFFFFFBLL || v87 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 292) = *(_DWORD *)(*(void *)this + v87);
            goto LABEL_335;
          case 28:
            *(void *)v8 |= 0x800000000000uLL;
            unint64_t v88 = *((void *)this + 1);
            if (v88 > 0xFFFFFFFFFFFFFFFBLL || v88 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 232) = *(_DWORD *)(*(void *)this + v88);
            goto LABEL_335;
          case 29:
            *(void *)v8 |= 0x1000000000000uLL;
            unint64_t v89 = *((void *)this + 1);
            if (v89 > 0xFFFFFFFFFFFFFFFBLL || v89 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 236) = *(_DWORD *)(*(void *)this + v89);
            goto LABEL_335;
          case 30:
            *(void *)v8 |= 0x1000000000000000uLL;
            unint64_t v90 = *((void *)this + 1);
            if (v90 > 0xFFFFFFFFFFFFFFFBLL || v90 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 284) = *(_DWORD *)(*(void *)this + v90);
            goto LABEL_335;
          case 31:
            *(void *)v8 |= 0x10000000000000uLL;
            unint64_t v91 = *((void *)this + 1);
            if (v91 > 0xFFFFFFFFFFFFFFFBLL || v91 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 252) = *(_DWORD *)(*(void *)this + v91);
            goto LABEL_335;
          case 32:
            *(void *)v8 |= 0x800000000000000uLL;
            unint64_t v92 = *((void *)this + 1);
            if (v92 > 0xFFFFFFFFFFFFFFFBLL || v92 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 280) = *(_DWORD *)(*(void *)this + v92);
            goto LABEL_335;
          case 33:
            *(void *)v8 |= 0x8000000000000uLL;
            unint64_t v93 = *((void *)this + 1);
            if (v93 > 0xFFFFFFFFFFFFFFFBLL || v93 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 248) = *(_DWORD *)(*(void *)this + v93);
            goto LABEL_335;
          case 34:
            *(unsigned char *)(v8 + 8) |= 1u;
            unint64_t v94 = *((void *)this + 1);
            if (v94 > 0xFFFFFFFFFFFFFFFBLL || v94 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 300) = *(_DWORD *)(*(void *)this + v94);
            goto LABEL_335;
          case 35:
            *(void *)v8 |= 0x200000000000000uLL;
            unint64_t v95 = *((void *)this + 1);
            if (v95 > 0xFFFFFFFFFFFFFFFBLL || v95 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 272) = *(_DWORD *)(*(void *)this + v95);
            goto LABEL_335;
          case 36:
            *(void *)v8 |= 0x4000000000000uLL;
            unint64_t v96 = *((void *)this + 1);
            if (v96 > 0xFFFFFFFFFFFFFFFBLL || v96 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 244) = *(_DWORD *)(*(void *)this + v96);
            goto LABEL_335;
          case 37:
            *(void *)v8 |= 0x100000000000000uLL;
            unint64_t v97 = *((void *)this + 1);
            if (v97 > 0xFFFFFFFFFFFFFFFBLL || v97 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 268) = *(_DWORD *)(*(void *)this + v97);
            goto LABEL_335;
          case 38:
            *(void *)v8 |= 0x2000000000000uLL;
            unint64_t v98 = *((void *)this + 1);
            if (v98 > 0xFFFFFFFFFFFFFFFBLL || v98 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 240) = *(_DWORD *)(*(void *)this + v98);
            goto LABEL_335;
          case 39:
            *(void *)v8 |= 0x8000000000000000;
            unint64_t v99 = *((void *)this + 1);
            if (v99 > 0xFFFFFFFFFFFFFFFBLL || v99 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 296) = *(_DWORD *)(*(void *)this + v99);
            goto LABEL_335;
          case 40:
            *(void *)v8 |= 0x800000000uLL;
            unint64_t v100 = *((void *)this + 1);
            if (v100 > 0xFFFFFFFFFFFFFFFBLL || v100 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 184) = *(_DWORD *)(*(void *)this + v100);
            goto LABEL_335;
          case 41:
            *(void *)v8 |= 0x400000000uLL;
            unint64_t v101 = *((void *)this + 1);
            if (v101 > 0xFFFFFFFFFFFFFFFBLL || v101 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 180) = *(_DWORD *)(*(void *)this + v101);
            goto LABEL_335;
          case 42:
            *(void *)v8 |= 0x80000000000uLL;
            unint64_t v102 = *((void *)this + 1);
            if (v102 > 0xFFFFFFFFFFFFFFFBLL || v102 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 216) = *(_DWORD *)(*(void *)this + v102);
            goto LABEL_335;
          case 43:
            *(void *)v8 |= 0x10000000uLL;
            unint64_t v103 = *((void *)this + 1);
            if (v103 > 0xFFFFFFFFFFFFFFFBLL || v103 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 156) = *(_DWORD *)(*(void *)this + v103);
            goto LABEL_335;
          case 44:
            *(void *)v8 |= 0x20000000uLL;
            unint64_t v104 = *((void *)this + 1);
            if (v104 > 0xFFFFFFFFFFFFFFFBLL || v104 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 160) = *(_DWORD *)(*(void *)this + v104);
            goto LABEL_335;
          case 45:
            *(void *)v8 |= 0x20000000000uLL;
            unint64_t v105 = *((void *)this + 1);
            if (v105 > 0xFFFFFFFFFFFFFFFBLL || v105 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 208) = *(_DWORD *)(*(void *)this + v105);
            goto LABEL_335;
          case 46:
            *(void *)v8 |= 0x200000000uLL;
            unint64_t v106 = *((void *)this + 1);
            if (v106 > 0xFFFFFFFFFFFFFFFBLL || v106 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 176) = *(_DWORD *)(*(void *)this + v106);
            goto LABEL_335;
          case 47:
            *(void *)v8 |= 0x10000000000uLL;
            unint64_t v107 = *((void *)this + 1);
            if (v107 > 0xFFFFFFFFFFFFFFFBLL || v107 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 204) = *(_DWORD *)(*(void *)this + v107);
            goto LABEL_335;
          case 48:
            *(void *)v8 |= (unint64_t)&_mh_execute_header;
            unint64_t v108 = *((void *)this + 1);
            if (v108 > 0xFFFFFFFFFFFFFFFBLL || v108 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 172) = *(_DWORD *)(*(void *)this + v108);
            goto LABEL_335;
          case 49:
            *(void *)v8 |= 0x200000000000uLL;
            unint64_t v109 = *((void *)this + 1);
            if (v109 > 0xFFFFFFFFFFFFFFFBLL || v109 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 224) = *(_DWORD *)(*(void *)this + v109);
            goto LABEL_335;
          case 50:
            *(void *)v8 |= 0x4000000000uLL;
            unint64_t v110 = *((void *)this + 1);
            if (v110 > 0xFFFFFFFFFFFFFFFBLL || v110 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 196) = *(_DWORD *)(*(void *)this + v110);
            goto LABEL_335;
          case 51:
            *(void *)v8 |= 0x80000000uLL;
            unint64_t v111 = *((void *)this + 1);
            if (v111 > 0xFFFFFFFFFFFFFFFBLL || v111 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 168) = *(_DWORD *)(*(void *)this + v111);
            goto LABEL_335;
          case 52:
            *(void *)v8 |= 0x2000000000uLL;
            unint64_t v112 = *((void *)this + 1);
            if (v112 > 0xFFFFFFFFFFFFFFFBLL || v112 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 192) = *(_DWORD *)(*(void *)this + v112);
            goto LABEL_335;
          case 53:
            *(void *)v8 |= 0x40000000uLL;
            unint64_t v113 = *((void *)this + 1);
            if (v113 > 0xFFFFFFFFFFFFFFFBLL || v113 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 164) = *(_DWORD *)(*(void *)this + v113);
            goto LABEL_335;
          case 54:
            *(void *)v8 |= 0x100000000000uLL;
            unint64_t v114 = *((void *)this + 1);
            if (v114 > 0xFFFFFFFFFFFFFFFBLL || v114 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 220) = *(_DWORD *)(*(void *)this + v114);
            goto LABEL_335;
          case 55:
            *(void *)v8 |= 8uLL;
            unint64_t v115 = *((void *)this + 1);
            unint64_t v116 = *((void *)this + 2);
            uint64_t v117 = *(void *)this;
            if (v115 <= 0xFFFFFFFFFFFFFFF5 && v115 + 10 <= v116)
            {
              char v118 = 0;
              unsigned int v119 = 0;
              uint64_t v120 = 0;
              do
              {
                unint64_t v121 = v115 + 1;
                *((void *)this + 1) = v115 + 1;
                char v122 = *(unsigned char *)(v117 + v115);
                v120 |= (unint64_t)(v122 & 0x7F) << v118;
                if ((v122 & 0x80) == 0) {
                  goto LABEL_364;
                }
                v118 += 7;
                unint64_t v115 = v121;
                BOOL v15 = v119++ > 8;
              }
              while (!v15);
LABEL_311:
              uint64_t v120 = 0;
              goto LABEL_364;
            }
            char v177 = 0;
            unsigned int v178 = 0;
            uint64_t v120 = 0;
            if (v116 <= v115) {
              unint64_t v116 = *((void *)this + 1);
            }
            while (2)
            {
              if (v116 == v115)
              {
                uint64_t v120 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v179 = v115 + 1;
                char v180 = *(unsigned char *)(v117 + v115);
                *((void *)this + 1) = v179;
                v120 |= (unint64_t)(v180 & 0x7F) << v177;
                if (v180 < 0)
                {
                  v177 += 7;
                  unint64_t v115 = v179;
                  BOOL v15 = v178++ > 8;
                  if (v15) {
                    goto LABEL_311;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v120 = 0;
                }
              }
              break;
            }
LABEL_364:
            *(void *)(a1 + 32) = v120;
            goto LABEL_336;
          case 56:
            *(void *)v8 |= 0x10uLL;
            unint64_t v123 = *((void *)this + 1);
            unint64_t v124 = *((void *)this + 2);
            uint64_t v125 = *(void *)this;
            if (v123 <= 0xFFFFFFFFFFFFFFF5 && v123 + 10 <= v124)
            {
              char v126 = 0;
              unsigned int v127 = 0;
              uint64_t v128 = 0;
              do
              {
                unint64_t v129 = v123 + 1;
                *((void *)this + 1) = v123 + 1;
                char v130 = *(unsigned char *)(v125 + v123);
                v128 |= (unint64_t)(v130 & 0x7F) << v126;
                if ((v130 & 0x80) == 0) {
                  goto LABEL_368;
                }
                v126 += 7;
                unint64_t v123 = v129;
                BOOL v15 = v127++ > 8;
              }
              while (!v15);
LABEL_318:
              uint64_t v128 = 0;
              goto LABEL_368;
            }
            char v181 = 0;
            unsigned int v182 = 0;
            uint64_t v128 = 0;
            if (v124 <= v123) {
              unint64_t v124 = *((void *)this + 1);
            }
            break;
          case 57:
            *(void *)v8 |= 0x1000000uLL;
            unint64_t v131 = *((void *)this + 1);
            if (v131 > 0xFFFFFFFFFFFFFFFBLL || v131 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 140) = *(_DWORD *)(*(void *)this + v131);
            goto LABEL_335;
          case 58:
            *(void *)v8 |= 0x2000000000000000uLL;
            unint64_t v132 = *((void *)this + 1);
            if (v132 > 0xFFFFFFFFFFFFFFFBLL || v132 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 288) = *(_DWORD *)(*(void *)this + v132);
            goto LABEL_335;
          case 59:
            *(void *)v8 |= 0x40000000000uLL;
            unint64_t v133 = *((void *)this + 1);
            if (v133 > 0xFFFFFFFFFFFFFFFBLL || v133 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 212) = *(_DWORD *)(*(void *)this + v133);
            goto LABEL_335;
          case 60:
            *(void *)v8 |= 0x40000uLL;
            unint64_t v134 = *((void *)this + 1);
            if (v134 > 0xFFFFFFFFFFFFFFFBLL || v134 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 116) = *(_DWORD *)(*(void *)this + v134);
            goto LABEL_335;
          case 61:
            *(void *)v8 |= 0x80000000000000uLL;
            unint64_t v135 = *((void *)this + 1);
            if (v135 > 0xFFFFFFFFFFFFFFFBLL || v135 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 264) = *(_DWORD *)(*(void *)this + v135);
            goto LABEL_335;
          case 62:
            *(void *)v8 |= 0x1000000000uLL;
            unint64_t v136 = *((void *)this + 1);
            if (v136 > 0xFFFFFFFFFFFFFFFBLL || v136 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 188) = *(_DWORD *)(*(void *)this + v136);
            goto LABEL_335;
          case 63:
            *(void *)v8 |= 0x200000uLL;
            unint64_t v137 = *((void *)this + 1);
            if (v137 > 0xFFFFFFFFFFFFFFFBLL || v137 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 128) = *(_DWORD *)(*(void *)this + v137);
            goto LABEL_335;
          case 64:
            *(void *)v8 |= 0x400000000000000uLL;
            unint64_t v138 = *((void *)this + 1);
            if (v138 > 0xFFFFFFFFFFFFFFFBLL || v138 + 4 > *((void *)this + 2)) {
              goto LABEL_251;
            }
            *(_DWORD *)(a1 + 276) = *(_DWORD *)(*(void *)this + v138);
            goto LABEL_335;
          case 65:
            *(void *)v8 |= 0x8000000000uLL;
            unint64_t v139 = *((void *)this + 1);
            if (v139 > 0xFFFFFFFFFFFFFFFBLL || v139 + 4 > *((void *)this + 2))
            {
LABEL_251:
              *((unsigned char *)this + 24) = 1;
              goto LABEL_336;
            }
            *(_DWORD *)(a1 + 200) = *(_DWORD *)(*(void *)this + v139);
            goto LABEL_335;
          default:
            goto LABEL_266;
        }
        while (1)
        {
          if (v124 == v123)
          {
            uint64_t v128 = 0;
            *((unsigned char *)this + 24) = 1;
            goto LABEL_368;
          }
          unint64_t v183 = v123 + 1;
          char v184 = *(unsigned char *)(v125 + v123);
          *((void *)this + 1) = v183;
          v128 |= (unint64_t)(v184 & 0x7F) << v181;
          if ((v184 & 0x80) == 0) {
            break;
          }
          v181 += 7;
          unint64_t v123 = v183;
          BOOL v15 = v182++ > 8;
          if (v15) {
            goto LABEL_318;
          }
        }
        if (*((unsigned char *)this + 24)) {
          uint64_t v128 = 0;
        }
LABEL_368:
        *(void *)(a1 + 40) = v128;
      }
LABEL_336:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v16 = 0;
    unsigned int v17 = 0;
    unint64_t v12 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v18 = v2 + 1;
      char v19 = *(unsigned char *)(v9 + v2);
      *((void *)this + 1) = v18;
      v12 |= (unint64_t)(v19 & 0x7F) << v16;
      if ((v19 & 0x80) == 0) {
        goto LABEL_21;
      }
      v16 += 7;
      unint64_t v2 = v18;
      if (v17++ >= 9)
      {
LABEL_20:
        unint64_t v12 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10169217C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = (uint64_t *)(result + 316);
  char v5 = *(unsigned char *)(result + 324);
  if ((v5 & 8) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(unsigned char *)(result + 312), 1u);
    uint64_t v6 = *v4;
    char v5 = *((unsigned char *)v4 + 8);
    if ((v5 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v6 = *v4;
  if ((*(unsigned char *)(result + 324) & 2) != 0)
  {
LABEL_5:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 304), 2u);
    uint64_t v6 = *v4;
    char v5 = *((unsigned char *)v4 + 8);
  }
LABEL_6:
  if ((v5 & 4) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 308), 3u);
    uint64_t v6 = *v4;
    char v5 = *((unsigned char *)v4 + 8);
    if ((*v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v6 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_75;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_8;
  }
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 48), 4u);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x40) == 0)
  {
LABEL_9:
    if ((v6 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_76;
  }
LABEL_75:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 56), 5u);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 1) == 0)
  {
LABEL_10:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_77;
  }
LABEL_76:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 8), 6u);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x8000) == 0)
  {
LABEL_11:
    if ((v6 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_78;
  }
LABEL_77:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 104), 7u);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x80) == 0)
  {
LABEL_12:
    if ((v6 & 0x100) == 0) {
      goto LABEL_13;
    }
    goto LABEL_79;
  }
LABEL_78:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 64), 8u);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x100) == 0)
  {
LABEL_13:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_80;
  }
LABEL_79:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 72), 9u);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x20000) == 0)
  {
LABEL_14:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_81;
  }
LABEL_80:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 112), 0xAu);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x10000) == 0)
  {
LABEL_15:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_82;
  }
LABEL_81:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 108), 0xBu);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x2000000) == 0)
  {
LABEL_16:
    if ((v6 & 0x200) == 0) {
      goto LABEL_17;
    }
    goto LABEL_83;
  }
LABEL_82:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 144), 0xCu);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x200) == 0)
  {
LABEL_17:
    if ((v6 & 0x400) == 0) {
      goto LABEL_18;
    }
    goto LABEL_84;
  }
LABEL_83:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80), 0xDu);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x400) == 0)
  {
LABEL_18:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_85;
  }
LABEL_84:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 84), 0xEu);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x800000) == 0)
  {
LABEL_19:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_86;
  }
LABEL_85:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 136), 0xFu);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x4000) == 0)
  {
LABEL_20:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_87;
  }
LABEL_86:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 100), 0x10u);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x400000) == 0)
  {
LABEL_21:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_88;
  }
LABEL_87:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 132), 0x11u);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x2000) == 0)
  {
LABEL_22:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_89;
  }
LABEL_88:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 96), 0x12u);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x8000000) == 0)
  {
LABEL_23:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_90;
  }
LABEL_89:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 152), 0x13u);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x100000) == 0)
  {
LABEL_24:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_91;
  }
LABEL_90:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 124), 0x14u);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x1000) == 0)
  {
LABEL_25:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_92;
  }
LABEL_91:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 92), 0x15u);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x80000) == 0)
  {
LABEL_26:
    if ((v6 & 0x800) == 0) {
      goto LABEL_27;
    }
    goto LABEL_93;
  }
LABEL_92:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 120), 0x16u);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x800) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_94;
  }
LABEL_93:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 88), 0x17u);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x40000000000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_95;
  }
LABEL_94:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 148), 0x18u);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x40000000000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x20000000000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_96;
  }
LABEL_95:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 260), 0x19u);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x20000000000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x4000000000000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_97;
  }
LABEL_96:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 256), 0x1Au);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x4000000000000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x800000000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_98;
  }
LABEL_97:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 292), 0x1Bu);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x800000000000) == 0)
  {
LABEL_32:
    if ((v6 & 0x1000000000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_99;
  }
LABEL_98:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 232), 0x1Cu);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x1000000000000) == 0)
  {
LABEL_33:
    if ((v6 & 0x1000000000000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_100;
  }
LABEL_99:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 236), 0x1Du);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x1000000000000000) == 0)
  {
LABEL_34:
    if ((v6 & 0x10000000000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_101;
  }
LABEL_100:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 284), 0x1Eu);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x10000000000000) == 0)
  {
LABEL_35:
    if ((v6 & 0x800000000000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_102;
  }
LABEL_101:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 252), 0x1Fu);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x800000000000000) == 0)
  {
LABEL_36:
    if ((v6 & 0x8000000000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_103;
  }
LABEL_102:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 280), 0x20u);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x8000000000000) == 0)
  {
LABEL_37:
    if ((v5 & 1) == 0) {
      goto LABEL_38;
    }
    goto LABEL_104;
  }
LABEL_103:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 248), 0x21u);
  uint64_t v6 = *v4;
  if ((v4[1] & 1) == 0)
  {
LABEL_38:
    if ((v6 & 0x200000000000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_105;
  }
LABEL_104:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 300), 0x22u);
  uint64_t v6 = *v4;
  if ((*v4 & 0x200000000000000) == 0)
  {
LABEL_39:
    if ((v6 & 0x4000000000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_106;
  }
LABEL_105:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 272), 0x23u);
  uint64_t v6 = *v4;
  if ((*v4 & 0x4000000000000) == 0)
  {
LABEL_40:
    if ((v6 & 0x100000000000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_107;
  }
LABEL_106:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 244), 0x24u);
  uint64_t v6 = *v4;
  if ((*v4 & 0x100000000000000) == 0)
  {
LABEL_41:
    if ((v6 & 0x2000000000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_108;
  }
LABEL_107:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 268), 0x25u);
  uint64_t v6 = *v4;
  if ((*v4 & 0x2000000000000) == 0)
  {
LABEL_42:
    if ((v6 & 0x8000000000000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_109;
  }
LABEL_108:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 240), 0x26u);
  uint64_t v6 = *v4;
  if ((*v4 & 0x8000000000000000) == 0)
  {
LABEL_43:
    if ((v6 & 0x800000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_110;
  }
LABEL_109:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 296), 0x27u);
  uint64_t v6 = *v4;
  if ((*v4 & 0x800000000) == 0)
  {
LABEL_44:
    if ((v6 & 0x400000000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_111;
  }
LABEL_110:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 184), 0x28u);
  uint64_t v6 = *v4;
  if ((*v4 & 0x400000000) == 0)
  {
LABEL_45:
    if ((v6 & 0x80000000000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_112;
  }
LABEL_111:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 180), 0x29u);
  uint64_t v6 = *v4;
  if ((*v4 & 0x80000000000) == 0)
  {
LABEL_46:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_113;
  }
LABEL_112:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 216), 0x2Au);
  uint64_t v6 = *v4;
  if ((*v4 & 0x10000000) == 0)
  {
LABEL_47:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_114;
  }
LABEL_113:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 156), 0x2Bu);
  uint64_t v6 = *v4;
  if ((*v4 & 0x20000000) == 0)
  {
LABEL_48:
    if ((v6 & 0x20000000000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_115;
  }
LABEL_114:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 160), 0x2Cu);
  uint64_t v6 = *v4;
  if ((*v4 & 0x20000000000) == 0)
  {
LABEL_49:
    if ((v6 & 0x200000000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_116;
  }
LABEL_115:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 208), 0x2Du);
  uint64_t v6 = *v4;
  if ((*v4 & 0x200000000) == 0)
  {
LABEL_50:
    if ((v6 & 0x10000000000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_117;
  }
LABEL_116:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 176), 0x2Eu);
  uint64_t v6 = *v4;
  if ((*v4 & 0x10000000000) == 0)
  {
LABEL_51:
    if ((v6 & 0x100000000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_118;
  }
LABEL_117:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 204), 0x2Fu);
  uint64_t v6 = *v4;
  if ((*v4 & 0x100000000) == 0)
  {
LABEL_52:
    if ((v6 & 0x200000000000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_119;
  }
LABEL_118:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 172), 0x30u);
  uint64_t v6 = *v4;
  if ((*v4 & 0x200000000000) == 0)
  {
LABEL_53:
    if ((v6 & 0x4000000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_120;
  }
LABEL_119:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 224), 0x31u);
  uint64_t v6 = *v4;
  if ((*v4 & 0x4000000000) == 0)
  {
LABEL_54:
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_121;
  }
LABEL_120:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 196), 0x32u);
  uint64_t v6 = *v4;
  if ((*v4 & 0x80000000) == 0)
  {
LABEL_55:
    if ((v6 & 0x2000000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_122;
  }
LABEL_121:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 168), 0x33u);
  uint64_t v6 = *v4;
  if ((*v4 & 0x2000000000) == 0)
  {
LABEL_56:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_123;
  }
LABEL_122:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 192), 0x34u);
  uint64_t v6 = *v4;
  if ((*v4 & 0x40000000) == 0)
  {
LABEL_57:
    if ((v6 & 0x100000000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_124;
  }
LABEL_123:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 164), 0x35u);
  uint64_t v6 = *v4;
  if ((*v4 & 0x100000000000) == 0)
  {
LABEL_58:
    if ((v6 & 8) == 0) {
      goto LABEL_59;
    }
    goto LABEL_125;
  }
LABEL_124:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 220), 0x36u);
  uint64_t v6 = *v4;
  if ((*v4 & 8) == 0)
  {
LABEL_59:
    if ((v6 & 0x10) == 0) {
      goto LABEL_60;
    }
    goto LABEL_126;
  }
LABEL_125:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 32), 0x37u);
  uint64_t v6 = *v4;
  if ((*v4 & 0x10) == 0)
  {
LABEL_60:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_127;
  }
LABEL_126:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 40), 0x38u);
  uint64_t v6 = *v4;
  if ((*v4 & 0x1000000) == 0)
  {
LABEL_61:
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_128;
  }
LABEL_127:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 140), 0x39u);
  uint64_t v6 = *v4;
  if ((*v4 & 0x2000000000000000) == 0)
  {
LABEL_62:
    if ((v6 & 0x40000000000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_129;
  }
LABEL_128:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 288), 0x3Au);
  uint64_t v6 = *v4;
  if ((*v4 & 0x40000000000) == 0)
  {
LABEL_63:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_130;
  }
LABEL_129:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 212), 0x3Bu);
  uint64_t v6 = *v4;
  if ((*v4 & 0x40000) == 0)
  {
LABEL_64:
    if ((v6 & 0x80000000000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_131;
  }
LABEL_130:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 116), 0x3Cu);
  uint64_t v6 = *v4;
  if ((*v4 & 0x80000000000000) == 0)
  {
LABEL_65:
    if ((v6 & 0x1000000000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_132;
  }
LABEL_131:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 264), 0x3Du);
  uint64_t v6 = *v4;
  if ((*v4 & 0x1000000000) == 0)
  {
LABEL_66:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_133;
  }
LABEL_132:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 188), 0x3Eu);
  uint64_t v6 = *v4;
  if ((*v4 & 0x200000) == 0)
  {
LABEL_67:
    if ((v6 & 0x400000000000000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_134;
  }
LABEL_133:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 128), 0x3Fu);
  uint64_t v6 = *v4;
  if ((*v4 & 0x400000000000000) == 0)
  {
LABEL_68:
    if ((v6 & 0x8000000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_135;
  }
LABEL_134:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 276), 0x40u);
  uint64_t v6 = *v4;
  if ((*v4 & 0x8000000000) == 0)
  {
LABEL_69:
    if ((v6 & 2) == 0) {
      goto LABEL_70;
    }
    goto LABEL_136;
  }
LABEL_135:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 200), 0x41u);
  uint64_t v6 = *v4;
  if ((*v4 & 2) == 0)
  {
LABEL_70:
    if ((v6 & 4) == 0) {
      goto LABEL_71;
    }
LABEL_137:
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 24), 0xCAu);
    if ((*v4 & 0x400000000000) == 0) {
      return result;
    }
    goto LABEL_138;
  }
LABEL_136:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 16), 0xC9u);
  uint64_t v6 = *v4;
  if ((*v4 & 4) != 0) {
    goto LABEL_137;
  }
LABEL_71:
  if ((v6 & 0x400000000000) == 0) {
    return result;
  }
LABEL_138:
  float v7 = *(float *)(v3 + 228);

  return PB::Writer::write(this, v7, 0x12Du);
}

uint64_t sub_1016929BC(uint64_t result)
{
  *(void *)uint64_t result = &off_102334168;
  *(_DWORD *)(result + 28) = 0;
  return result;
}

void sub_1016929E4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_101692A1C(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102334168;
  *(_DWORD *)(result + 28) = 0;
  char v2 = *(unsigned char *)(a2 + 28);
  if (v2)
  {
    int v4 = *(_DWORD *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(result + 28) = 1;
    *(_DWORD *)(result + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 28) & 8) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 20);
    v3 |= 8u;
    *(unsigned char *)(result + 28) = v3;
    *(_DWORD *)(result + 20) = v5;
    char v2 = *(unsigned char *)(a2 + 28);
  }
LABEL_6:
  if ((v2 & 0x10) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 24);
    v3 |= 0x10u;
    *(unsigned char *)(result + 28) = v3;
    *(_DWORD *)(result + 24) = v6;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 2) == 0)
    {
LABEL_8:
      if ((v2 & 4) == 0) {
        return result;
      }
LABEL_12:
      int v8 = *(_DWORD *)(a2 + 16);
      *(unsigned char *)(result + 28) = v3 | 4;
      *(_DWORD *)(result + 16) = v8;
      return result;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 12);
  v3 |= 2u;
  *(unsigned char *)(result + 28) = v3;
  *(_DWORD *)(result + 12) = v7;
  if ((*(unsigned char *)(a2 + 28) & 4) != 0) {
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_101692AD4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 28);
  if (v5)
  {
    PB::TextFormatter::format(this, "configThreshold1", *(float *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 28);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a1 + 28) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "debugX", *(float *)(a1 + 12));
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(this, "debugY", *(_DWORD *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(this, "outputA", *(float *)(a1 + 20));
  if ((*(unsigned char *)(a1 + 28) & 0x10) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "outputB", *(_DWORD *)(a1 + 24));
LABEL_7:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101692BB8(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 0x186A0u:
              *(unsigned char *)(a1 + 28) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_39;
              }
              *(_DWORD *)(a1 + 8) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_62;
            case 0x186A1u:
              *(unsigned char *)(a1 + 28) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_39;
              }
              *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_62;
            case 0x186A2u:
              *(unsigned char *)(a1 + 28) |= 0x10u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v33 = 0;
                unsigned int v34 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_67;
                  }
                  unint64_t v35 = v21++;
                  char v36 = *(unsigned char *)(v22 + v35);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v36 & 0x7F) << v33;
                  if ((v36 & 0x80) == 0) {
                    break;
                  }
                  v33 += 7;
                  BOOL v14 = v34++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_66:
                    unint64_t v2 = v35 + 1;
                    goto LABEL_67;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_66;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_67;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_67:
              *(_DWORD *)(a1 + 24) = v25;
              goto LABEL_73;
            case 0x186A3u:
              *(unsigned char *)(a1 + 28) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 12) = *(_DWORD *)(*(void *)this + v2);
LABEL_62:
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_39:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_73;
            case 0x186A4u:
              *(unsigned char *)(a1 + 28) |= 4u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v37 = 0;
                unsigned int v38 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_72;
                  }
                  unint64_t v39 = v27++;
                  char v40 = *(unsigned char *)(v28 + v39);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v40 & 0x7F) << v37;
                  if ((v40 & 0x80) == 0) {
                    break;
                  }
                  v37 += 7;
                  BOOL v14 = v38++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_71:
                    unint64_t v2 = v39 + 1;
                    goto LABEL_72;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_71;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_72;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_72:
              *(_DWORD *)(a1 + 16) = v31;
LABEL_73:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_73;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_101692FDC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 28);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(result + 8), 0x186A0u);
    char v4 = *(unsigned char *)(v3 + 28);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 28) & 8) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20), 0x186A1u);
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 0x10) == 0)
  {
LABEL_4:
    if ((v4 & 2) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 12), 0x186A3u);
    if ((*(unsigned char *)(v3 + 28) & 4) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 24), 0x186A2u);
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 4) == 0) {
    return result;
  }
LABEL_11:
  int v5 = *(_DWORD *)(v3 + 16);

  return PB::Writer::writeVarInt(this, v5, 0x186A4u);
}

uint64_t sub_1016930B8(uint64_t result)
{
  *(void *)uint64_t result = &off_1023341A0;
  *(_DWORD *)(result + 28) = 0;
  return result;
}

void sub_1016930E0(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_101693118(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_1023341A0;
  *(_DWORD *)(result + 28) = 0;
  char v2 = *(unsigned char *)(a2 + 28);
  if (v2)
  {
    int v4 = *(_DWORD *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(result + 28) = 1;
    *(_DWORD *)(result + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 28) & 8) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 20);
    v3 |= 8u;
    *(unsigned char *)(result + 28) = v3;
    *(_DWORD *)(result + 20) = v5;
    char v2 = *(unsigned char *)(a2 + 28);
  }
LABEL_6:
  if ((v2 & 0x10) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 24);
    v3 |= 0x10u;
    *(unsigned char *)(result + 28) = v3;
    *(_DWORD *)(result + 24) = v6;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 2) == 0)
    {
LABEL_8:
      if ((v2 & 4) == 0) {
        return result;
      }
LABEL_12:
      int v8 = *(_DWORD *)(a2 + 16);
      *(unsigned char *)(result + 28) = v3 | 4;
      *(_DWORD *)(result + 16) = v8;
      return result;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 12);
  v3 |= 2u;
  *(unsigned char *)(result + 28) = v3;
  *(_DWORD *)(result + 12) = v7;
  if ((*(unsigned char *)(a2 + 28) & 4) != 0) {
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_1016931D0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 28);
  if (v5)
  {
    PB::TextFormatter::format(this, "configThreshold1", *(float *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 28);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a1 + 28) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "debugX", *(float *)(a1 + 12));
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(this, "debugY", *(_DWORD *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(this, "outputA", *(float *)(a1 + 20));
  if ((*(unsigned char *)(a1 + 28) & 0x10) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "outputB", *(_DWORD *)(a1 + 24));
LABEL_7:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_1016932B4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 0x186A0u:
              *(unsigned char *)(a1 + 28) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_39;
              }
              *(_DWORD *)(a1 + 8) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_62;
            case 0x186A1u:
              *(unsigned char *)(a1 + 28) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_39;
              }
              *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_62;
            case 0x186A2u:
              *(unsigned char *)(a1 + 28) |= 0x10u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v33 = 0;
                unsigned int v34 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_67;
                  }
                  unint64_t v35 = v21++;
                  char v36 = *(unsigned char *)(v22 + v35);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v36 & 0x7F) << v33;
                  if ((v36 & 0x80) == 0) {
                    break;
                  }
                  v33 += 7;
                  BOOL v14 = v34++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_66:
                    unint64_t v2 = v35 + 1;
                    goto LABEL_67;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_66;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_67;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_67:
              *(_DWORD *)(a1 + 24) = v25;
              goto LABEL_73;
            case 0x186A3u:
              *(unsigned char *)(a1 + 28) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 12) = *(_DWORD *)(*(void *)this + v2);
LABEL_62:
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_39:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_73;
            case 0x186A4u:
              *(unsigned char *)(a1 + 28) |= 4u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v37 = 0;
                unsigned int v38 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_72;
                  }
                  unint64_t v39 = v27++;
                  char v40 = *(unsigned char *)(v28 + v39);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v40 & 0x7F) << v37;
                  if ((v40 & 0x80) == 0) {
                    break;
                  }
                  v37 += 7;
                  BOOL v14 = v38++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_71:
                    unint64_t v2 = v39 + 1;
                    goto LABEL_72;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_71;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_72;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_72:
              *(_DWORD *)(a1 + 16) = v31;
LABEL_73:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_73;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_1016936D8(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 28);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(result + 8), 0x186A0u);
    char v4 = *(unsigned char *)(v3 + 28);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 28) & 8) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20), 0x186A1u);
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 0x10) == 0)
  {
LABEL_4:
    if ((v4 & 2) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 12), 0x186A3u);
    if ((*(unsigned char *)(v3 + 28) & 4) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 24), 0x186A2u);
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 4) == 0) {
    return result;
  }
LABEL_11:
  int v5 = *(_DWORD *)(v3 + 16);

  return PB::Writer::writeVarInt(this, v5, 0x186A4u);
}

uint64_t sub_1016937B4(uint64_t result)
{
  *(void *)uint64_t result = &off_1023341D8;
  *(void *)(result + 204) = 0;
  *(_DWORD *)(result + 212) = 0;
  return result;
}

void sub_1016937E0(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_101693818(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_1023341D8;
  *(void *)(result + 204) = 0;
  *(_DWORD *)(result + 212) = 0;
  uint64_t v2 = *(void *)(a2 + 204);
  if (v2)
  {
    unint64_t v4 = 0;
    uint64_t v6 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 214) = 0;
    *(_WORD *)(result + 212) = 0;
    uint64_t v3 = 1;
    *(void *)(result + 204) = 1;
    *(void *)(result + 8) = v6;
    int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
    uint64_t v2 = *(void *)(a2 + 204);
    if ((v2 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v3 = 0;
  unint64_t v4 = 0;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  if ((v2 & 0x10) != 0)
  {
LABEL_5:
    int v7 = *(_DWORD *)(a2 + 40);
    v3 |= 0x10uLL;
    *(void *)(result + 204) = v3;
    *(_WORD *)(result + 212) = 0;
    *(unsigned char *)(result + 214) = 0;
    *(_DWORD *)(result + 40) = v7;
    int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
    uint64_t v2 = *(void *)(a2 + 204);
  }
LABEL_6:
  if ((v5 & 2) != 0)
  {
    char v8 = *(unsigned char *)(a2 + 188);
    unint64_t v4 = 2;
    *(void *)(result + 204) = v3;
    *(unsigned char *)(result + 214) = 0;
    *(_WORD *)(result + 212) = 2;
    *(unsigned char *)(result + 188) = v8;
    int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
    uint64_t v2 = *(void *)(a2 + 204);
    if ((v2 & 0x200000) == 0)
    {
LABEL_8:
      if ((v5 & 4) == 0) {
        goto LABEL_9;
      }
      goto LABEL_88;
    }
  }
  else if ((v2 & 0x200000) == 0)
  {
    goto LABEL_8;
  }
  int v9 = *(_DWORD *)(a2 + 108);
  v3 |= 0x200000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 108) = v9;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((*(_WORD *)(a2 + 212) & 4) == 0)
  {
LABEL_9:
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_89;
  }
LABEL_88:
  char v10 = *(unsigned char *)(a2 + 189);
  unint64_t v11 = v4 >> 16;
  v4 |= 4uLL;
  *(void *)(result + 204) = v3;
  *(unsigned char *)(result + 214) = v11;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 189) = v10;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 2) == 0)
  {
LABEL_10:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_90;
  }
LABEL_89:
  uint64_t v12 = *(void *)(a2 + 16);
  v3 |= 2uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(void *)(result + 16) = v12;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x400000) == 0)
  {
LABEL_11:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_91;
  }
LABEL_90:
  int v13 = *(_DWORD *)(a2 + 112);
  v3 |= 0x400000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 112) = v13;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x4000) == 0)
  {
LABEL_12:
    if ((v2 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_92;
  }
LABEL_91:
  int v14 = *(_DWORD *)(a2 + 80);
  v3 |= 0x4000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 80) = v14;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x40) == 0)
  {
LABEL_13:
    if ((v2 & 0x4000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_93;
  }
LABEL_92:
  int v15 = *(_DWORD *)(a2 + 48);
  v3 |= 0x40uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 48) = v15;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_14:
    if ((v2 & 0x400000000000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_94;
  }
LABEL_93:
  int v16 = *(_DWORD *)(a2 + 128);
  v3 |= 0x4000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 128) = v16;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x400000000000000) == 0)
  {
LABEL_15:
    if ((v2 & 0x400000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_95;
  }
LABEL_94:
  char v17 = *(unsigned char *)(a2 + 181);
  v3 |= 0x400000000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 181) = v17;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x400000000) == 0)
  {
LABEL_16:
    if ((v5 & 0x400) == 0) {
      goto LABEL_17;
    }
    goto LABEL_96;
  }
LABEL_95:
  char v18 = *(unsigned char *)(a2 + 157);
  v3 |= 0x400000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 157) = v18;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((*(_WORD *)(a2 + 212) & 0x400) == 0)
  {
LABEL_17:
    if ((v2 & 0x40000000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_97;
  }
LABEL_96:
  char v19 = *(unsigned char *)(a2 + 197);
  unint64_t v20 = v4 >> 16;
  v4 |= 0x400uLL;
  *(void *)(result + 204) = v3;
  *(unsigned char *)(result + 214) = v20;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 197) = v19;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x40000000000) == 0)
  {
LABEL_18:
    if ((v2 & 0x4000000000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_98;
  }
LABEL_97:
  char v21 = *(unsigned char *)(a2 + 165);
  v3 |= 0x40000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 165) = v21;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x4000000000000) == 0)
  {
LABEL_19:
    if ((v5 & 8) == 0) {
      goto LABEL_20;
    }
    goto LABEL_99;
  }
LABEL_98:
  char v22 = *(unsigned char *)(a2 + 173);
  v3 |= 0x4000000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 173) = v22;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((*(_WORD *)(a2 + 212) & 8) == 0)
  {
LABEL_20:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_100;
  }
LABEL_99:
  char v23 = *(unsigned char *)(a2 + 190);
  unint64_t v24 = v4 >> 16;
  v4 |= 8uLL;
  *(void *)(result + 204) = v3;
  *(unsigned char *)(result + 214) = v24;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 190) = v23;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x40000) == 0)
  {
LABEL_21:
    if ((v2 & 0x400) == 0) {
      goto LABEL_22;
    }
    goto LABEL_101;
  }
LABEL_100:
  int v25 = *(_DWORD *)(a2 + 96);
  v3 |= 0x40000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 96) = v25;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x400) == 0)
  {
LABEL_22:
    if ((v2 & 0x40000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_102;
  }
LABEL_101:
  int v26 = *(_DWORD *)(a2 + 64);
  v3 |= 0x400uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 64) = v26;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x40000000) == 0)
  {
LABEL_23:
    if ((v2 & 0x4000000000000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_103;
  }
LABEL_102:
  int v27 = *(_DWORD *)(a2 + 144);
  v3 |= 0x40000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 144) = v27;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x4000000000000000) == 0)
  {
LABEL_24:
    if ((v2 & 0x4000000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_104;
  }
LABEL_103:
  char v28 = *(unsigned char *)(a2 + 185);
  v3 |= 0x4000000000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 185) = v28;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x4000000000) == 0)
  {
LABEL_25:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_105;
  }
LABEL_104:
  char v29 = *(unsigned char *)(a2 + 161);
  v3 |= 0x4000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 161) = v29;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((*(_WORD *)(a2 + 212) & 0x4000) == 0)
  {
LABEL_26:
    if ((v2 & 0x400000000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_106;
  }
LABEL_105:
  char v30 = *(unsigned char *)(a2 + 201);
  unint64_t v31 = v4 >> 16;
  v4 |= 0x4000uLL;
  *(void *)(result + 204) = v3;
  *(unsigned char *)(result + 214) = v31;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 201) = v30;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x400000000000) == 0)
  {
LABEL_27:
    if ((v2 & 0x40000000000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_107;
  }
LABEL_106:
  char v32 = *(unsigned char *)(a2 + 169);
  v3 |= 0x400000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 169) = v32;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x40000000000000) == 0)
  {
LABEL_28:
    if ((v5 & 0x40) == 0) {
      goto LABEL_29;
    }
    goto LABEL_108;
  }
LABEL_107:
  char v33 = *(unsigned char *)(a2 + 177);
  v3 |= 0x40000000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 177) = v33;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((*(_WORD *)(a2 + 212) & 0x40) == 0)
  {
LABEL_29:
    if ((v2 & 4) == 0) {
      goto LABEL_30;
    }
    goto LABEL_109;
  }
LABEL_108:
  char v34 = *(unsigned char *)(a2 + 193);
  unint64_t v35 = v4 >> 16;
  v4 |= 0x40uLL;
  *(void *)(result + 204) = v3;
  *(unsigned char *)(result + 214) = v35;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 193) = v34;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 4) == 0)
  {
LABEL_30:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_110;
  }
LABEL_109:
  uint64_t v36 = *(void *)(a2 + 24);
  v3 |= 4uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(void *)(result + 24) = v36;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x800000) == 0)
  {
LABEL_31:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_111;
  }
LABEL_110:
  int v37 = *(_DWORD *)(a2 + 116);
  v3 |= 0x800000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 116) = v37;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x8000) == 0)
  {
LABEL_32:
    if ((v2 & 0x80) == 0) {
      goto LABEL_33;
    }
    goto LABEL_112;
  }
LABEL_111:
  int v38 = *(_DWORD *)(a2 + 84);
  v3 |= 0x8000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 84) = v38;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x80) == 0)
  {
LABEL_33:
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_113;
  }
LABEL_112:
  int v39 = *(_DWORD *)(a2 + 52);
  v3 |= 0x80uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 52) = v39;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x8000000) == 0)
  {
LABEL_34:
    if ((v2 & 0x800000000000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_114;
  }
LABEL_113:
  int v40 = *(_DWORD *)(a2 + 132);
  v3 |= 0x8000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 132) = v40;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x800000000000000) == 0)
  {
LABEL_35:
    if ((v2 & 0x800000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_115;
  }
LABEL_114:
  char v41 = *(unsigned char *)(a2 + 182);
  v3 |= 0x800000000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 182) = v41;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x800000000) == 0)
  {
LABEL_36:
    if ((v5 & 0x800) == 0) {
      goto LABEL_37;
    }
    goto LABEL_116;
  }
LABEL_115:
  char v42 = *(unsigned char *)(a2 + 158);
  v3 |= 0x800000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 158) = v42;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((*(_WORD *)(a2 + 212) & 0x800) == 0)
  {
LABEL_37:
    if ((v2 & 0x80000000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_117;
  }
LABEL_116:
  char v43 = *(unsigned char *)(a2 + 198);
  unint64_t v44 = v4 >> 16;
  v4 |= 0x800uLL;
  *(void *)(result + 204) = v3;
  *(unsigned char *)(result + 214) = v44;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 198) = v43;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x80000000000) == 0)
  {
LABEL_38:
    if ((v2 & 0x8000000000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_118;
  }
LABEL_117:
  char v45 = *(unsigned char *)(a2 + 166);
  v3 |= 0x80000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 166) = v45;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x8000000000000) == 0)
  {
LABEL_39:
    if ((v5 & 0x10) == 0) {
      goto LABEL_40;
    }
    goto LABEL_119;
  }
LABEL_118:
  char v46 = *(unsigned char *)(a2 + 174);
  v3 |= 0x8000000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 174) = v46;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((*(_WORD *)(a2 + 212) & 0x10) == 0)
  {
LABEL_40:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_120;
  }
LABEL_119:
  char v47 = *(unsigned char *)(a2 + 191);
  unint64_t v48 = v4 >> 16;
  v4 |= 0x10uLL;
  *(void *)(result + 204) = v3;
  *(unsigned char *)(result + 214) = v48;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 191) = v47;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x80000) == 0)
  {
LABEL_41:
    if ((v2 & 0x800) == 0) {
      goto LABEL_42;
    }
    goto LABEL_121;
  }
LABEL_120:
  int v49 = *(_DWORD *)(a2 + 100);
  v3 |= 0x80000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 100) = v49;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x800) == 0)
  {
LABEL_42:
    if ((v2 & 0x80000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_122;
  }
LABEL_121:
  int v50 = *(_DWORD *)(a2 + 68);
  v3 |= 0x800uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 68) = v50;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x80000000) == 0)
  {
LABEL_43:
    if ((v2 & 0x8000000000000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_123;
  }
LABEL_122:
  int v51 = *(_DWORD *)(a2 + 148);
  v3 |= 0x80000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 148) = v51;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x8000000000000000) == 0)
  {
LABEL_44:
    if ((v2 & 0x8000000000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_124;
  }
LABEL_123:
  char v52 = *(unsigned char *)(a2 + 186);
  v3 |= 0x8000000000000000;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 186) = v52;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x8000000000) == 0)
  {
LABEL_45:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_125;
  }
LABEL_124:
  char v53 = *(unsigned char *)(a2 + 162);
  v3 |= 0x8000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 162) = v53;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((*(_WORD *)(a2 + 212) & 0x8000) == 0)
  {
LABEL_46:
    if ((v2 & 0x800000000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_126;
  }
LABEL_125:
  char v54 = *(unsigned char *)(a2 + 202);
  unint64_t v55 = v4 >> 16;
  v4 |= 0x8000uLL;
  *(void *)(result + 204) = v3;
  *(unsigned char *)(result + 214) = v55;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 202) = v54;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x800000000000) == 0)
  {
LABEL_47:
    if ((v2 & 0x80000000000000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_127;
  }
LABEL_126:
  char v56 = *(unsigned char *)(a2 + 170);
  v3 |= 0x800000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 170) = v56;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x80000000000000) == 0)
  {
LABEL_48:
    if ((v5 & 0x80) == 0) {
      goto LABEL_49;
    }
    goto LABEL_128;
  }
LABEL_127:
  char v57 = *(unsigned char *)(a2 + 178);
  v3 |= 0x80000000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 178) = v57;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((*(_WORD *)(a2 + 212) & 0x80) == 0)
  {
LABEL_49:
    if ((v2 & 8) == 0) {
      goto LABEL_50;
    }
    goto LABEL_129;
  }
LABEL_128:
  char v58 = *(unsigned char *)(a2 + 194);
  unint64_t v59 = v4 >> 16;
  v4 |= 0x80uLL;
  *(void *)(result + 204) = v3;
  *(unsigned char *)(result + 214) = v59;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 194) = v58;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 8) == 0)
  {
LABEL_50:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_130;
  }
LABEL_129:
  uint64_t v60 = *(void *)(a2 + 32);
  v3 |= 8uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(void *)(result + 32) = v60;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_51:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_131;
  }
LABEL_130:
  int v61 = *(_DWORD *)(a2 + 120);
  v3 |= 0x1000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 120) = v61;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x10000) == 0)
  {
LABEL_52:
    if ((v2 & 0x100) == 0) {
      goto LABEL_53;
    }
    goto LABEL_132;
  }
LABEL_131:
  int v62 = *(_DWORD *)(a2 + 88);
  v3 |= 0x10000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 88) = v62;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x100) == 0)
  {
LABEL_53:
    if ((v2 & 0x10000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_133;
  }
LABEL_132:
  int v63 = *(_DWORD *)(a2 + 56);
  v3 |= 0x100uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 56) = v63;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x10000000) == 0)
  {
LABEL_54:
    if ((v2 & 0x1000000000000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_134;
  }
LABEL_133:
  int v64 = *(_DWORD *)(a2 + 136);
  v3 |= 0x10000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 136) = v64;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x1000000000000000) == 0)
  {
LABEL_55:
    if ((v2 & 0x1000000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_135;
  }
LABEL_134:
  char v65 = *(unsigned char *)(a2 + 183);
  v3 |= 0x1000000000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 183) = v65;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x1000000000) == 0)
  {
LABEL_56:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_136;
  }
LABEL_135:
  char v66 = *(unsigned char *)(a2 + 159);
  v3 |= 0x1000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 159) = v66;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((*(_WORD *)(a2 + 212) & 0x1000) == 0)
  {
LABEL_57:
    if ((v2 & 0x100000000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_137;
  }
LABEL_136:
  char v67 = *(unsigned char *)(a2 + 199);
  unint64_t v68 = v4 >> 16;
  v4 |= 0x1000uLL;
  *(void *)(result + 204) = v3;
  *(unsigned char *)(result + 214) = v68;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 199) = v67;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x100000000000) == 0)
  {
LABEL_58:
    if ((v2 & 0x10000000000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_138;
  }
LABEL_137:
  char v69 = *(unsigned char *)(a2 + 167);
  v3 |= 0x100000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 167) = v69;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x10000000000000) == 0)
  {
LABEL_59:
    if ((v5 & 0x20) == 0) {
      goto LABEL_60;
    }
    goto LABEL_139;
  }
LABEL_138:
  char v70 = *(unsigned char *)(a2 + 175);
  v3 |= 0x10000000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 175) = v70;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((*(_WORD *)(a2 + 212) & 0x20) == 0)
  {
LABEL_60:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_140;
  }
LABEL_139:
  char v71 = *(unsigned char *)(a2 + 192);
  unint64_t v72 = v4 >> 16;
  v4 |= 0x20uLL;
  *(void *)(result + 204) = v3;
  *(unsigned char *)(result + 214) = v72;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 192) = v71;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x100000) == 0)
  {
LABEL_61:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_141;
  }
LABEL_140:
  int v73 = *(_DWORD *)(a2 + 104);
  v3 |= 0x100000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 104) = v73;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x1000) == 0)
  {
LABEL_62:
    if ((v2 & 0x100000000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_142;
  }
LABEL_141:
  int v74 = *(_DWORD *)(a2 + 72);
  v3 |= 0x1000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 72) = v74;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x100000000) == 0)
  {
LABEL_63:
    if ((v5 & 1) == 0) {
      goto LABEL_64;
    }
    goto LABEL_143;
  }
LABEL_142:
  int v75 = *(_DWORD *)(a2 + 152);
  v3 |= (unint64_t)&_mh_execute_header;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 152) = v75;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((*(_WORD *)(a2 + 212) & 1) == 0)
  {
LABEL_64:
    if ((v2 & 0x10000000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_144;
  }
LABEL_143:
  char v76 = *(unsigned char *)(a2 + 187);
  unint64_t v77 = v4 >> 16;
  v4 |= 1uLL;
  *(void *)(result + 204) = v3;
  *(unsigned char *)(result + 214) = v77;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 187) = v76;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x10000000000) == 0)
  {
LABEL_65:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_145;
  }
LABEL_144:
  char v78 = *(unsigned char *)(a2 + 163);
  v3 |= 0x10000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 163) = v78;
  int v5 = *(unsigned __int16 *)(a2 + 212) | (*(unsigned __int8 *)(a2 + 214) << 16);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v5 & 0x10000) == 0)
  {
LABEL_66:
    if ((v2 & 0x1000000000000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_146;
  }
LABEL_145:
  char v79 = *(unsigned char *)(a2 + 203);
  *(_WORD *)(result + 212) = v4;
  v4 |= 0x10000uLL;
  *(void *)(result + 204) = v3;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 203) = v79;
  LOWORD(v5) = *(_WORD *)(a2 + 212);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x1000000000000) == 0)
  {
LABEL_67:
    if ((v2 & 0x100000000000000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_147;
  }
LABEL_146:
  char v80 = *(unsigned char *)(a2 + 171);
  v3 |= 0x1000000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 171) = v80;
  LOWORD(v5) = *(_WORD *)(a2 + 212);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x100000000000000) == 0)
  {
LABEL_68:
    if ((v5 & 0x100) == 0) {
      goto LABEL_69;
    }
    goto LABEL_148;
  }
LABEL_147:
  char v81 = *(unsigned char *)(a2 + 179);
  v3 |= 0x100000000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 179) = v81;
  LOWORD(v5) = *(_WORD *)(a2 + 212);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v5 & 0x100) == 0)
  {
LABEL_69:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_149;
  }
LABEL_148:
  char v82 = *(unsigned char *)(a2 + 195);
  unint64_t v83 = v4 >> 16;
  v4 |= 0x100uLL;
  *(void *)(result + 204) = v3;
  *(unsigned char *)(result + 214) = v83;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 195) = v82;
  LOWORD(v5) = *(_WORD *)(a2 + 212);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x2000) == 0)
  {
LABEL_70:
    if ((v2 & 0x20) == 0) {
      goto LABEL_71;
    }
    goto LABEL_150;
  }
LABEL_149:
  int v84 = *(_DWORD *)(a2 + 76);
  v3 |= 0x2000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 76) = v84;
  LOWORD(v5) = *(_WORD *)(a2 + 212);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x20) == 0)
  {
LABEL_71:
    if ((v2 & 0x2000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_151;
  }
LABEL_150:
  int v85 = *(_DWORD *)(a2 + 44);
  v3 |= 0x20uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 44) = v85;
  LOWORD(v5) = *(_WORD *)(a2 + 212);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x2000000) == 0)
  {
LABEL_72:
    if ((v2 & 0x200000000000000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_152;
  }
LABEL_151:
  int v86 = *(_DWORD *)(a2 + 124);
  v3 |= 0x2000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 124) = v86;
  LOWORD(v5) = *(_WORD *)(a2 + 212);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x200000000000000) == 0)
  {
LABEL_73:
    if ((v2 & 0x200000000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_153;
  }
LABEL_152:
  char v87 = *(unsigned char *)(a2 + 180);
  v3 |= 0x200000000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 180) = v87;
  LOWORD(v5) = *(_WORD *)(a2 + 212);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x200000000) == 0)
  {
LABEL_74:
    if ((v5 & 0x200) == 0) {
      goto LABEL_75;
    }
    goto LABEL_154;
  }
LABEL_153:
  char v88 = *(unsigned char *)(a2 + 156);
  v3 |= 0x200000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 156) = v88;
  LOWORD(v5) = *(_WORD *)(a2 + 212);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v5 & 0x200) == 0)
  {
LABEL_75:
    if ((v2 & 0x20000000000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_155;
  }
LABEL_154:
  char v89 = *(unsigned char *)(a2 + 196);
  unint64_t v90 = v4 >> 16;
  v4 |= 0x200uLL;
  *(void *)(result + 204) = v3;
  *(unsigned char *)(result + 214) = v90;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 196) = v89;
  LOWORD(v5) = *(_WORD *)(a2 + 212);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x20000000000) == 0)
  {
LABEL_76:
    if ((v2 & 0x2000000000000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_156;
  }
LABEL_155:
  char v91 = *(unsigned char *)(a2 + 164);
  v3 |= 0x20000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 164) = v91;
  LOWORD(v5) = *(_WORD *)(a2 + 212);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x2000000000000) == 0)
  {
LABEL_77:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_157;
  }
LABEL_156:
  char v92 = *(unsigned char *)(a2 + 172);
  v3 |= 0x2000000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 172) = v92;
  LOWORD(v5) = *(_WORD *)(a2 + 212);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x20000) == 0)
  {
LABEL_78:
    if ((v2 & 0x200) == 0) {
      goto LABEL_79;
    }
    goto LABEL_158;
  }
LABEL_157:
  int v93 = *(_DWORD *)(a2 + 92);
  v3 |= 0x20000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 92) = v93;
  LOWORD(v5) = *(_WORD *)(a2 + 212);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x200) == 0)
  {
LABEL_79:
    if ((v2 & 0x20000000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_159;
  }
LABEL_158:
  int v94 = *(_DWORD *)(a2 + 60);
  v3 |= 0x200uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 60) = v94;
  LOWORD(v5) = *(_WORD *)(a2 + 212);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x20000000) == 0)
  {
LABEL_80:
    if ((v2 & 0x2000000000000000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_160;
  }
LABEL_159:
  int v95 = *(_DWORD *)(a2 + 140);
  v3 |= 0x20000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(_DWORD *)(result + 140) = v95;
  LOWORD(v5) = *(_WORD *)(a2 + 212);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x2000000000000000) == 0)
  {
LABEL_81:
    if ((v2 & 0x2000000000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_161;
  }
LABEL_160:
  char v96 = *(unsigned char *)(a2 + 184);
  v3 |= 0x2000000000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 184) = v96;
  LOWORD(v5) = *(_WORD *)(a2 + 212);
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x2000000000) == 0)
  {
LABEL_82:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_162;
  }
LABEL_161:
  char v97 = *(unsigned char *)(a2 + 160);
  v3 |= 0x2000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 160) = v97;
  uint64_t v2 = *(void *)(a2 + 204);
  if ((*(_WORD *)(a2 + 212) & 0x2000) == 0)
  {
LABEL_83:
    if ((v2 & 0x200000000000) == 0) {
      goto LABEL_84;
    }
    goto LABEL_163;
  }
LABEL_162:
  char v98 = *(unsigned char *)(a2 + 200);
  unint64_t v99 = v4 >> 16;
  LODWORD(v4) = v4 | 0x2000;
  *(void *)(result + 204) = v3;
  *(unsigned char *)(result + 214) = v99;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 200) = v98;
  uint64_t v2 = *(void *)(a2 + 204);
  if ((v2 & 0x200000000000) == 0)
  {
LABEL_84:
    if ((v2 & 0x20000000000000) == 0) {
      return result;
    }
LABEL_164:
    char v101 = *(unsigned char *)(a2 + 176);
    *(void *)(result + 204) = v3 | 0x20000000000000;
    *(_WORD *)(result + 212) = v4;
    *(unsigned char *)(result + 214) = BYTE2(v4);
    *(unsigned char *)(result + 176) = v101;
    return result;
  }
LABEL_163:
  char v100 = *(unsigned char *)(a2 + 168);
  v3 |= 0x200000000000uLL;
  *(void *)(result + 204) = v3;
  *(_WORD *)(result + 212) = v4;
  *(unsigned char *)(result + 214) = BYTE2(v4);
  *(unsigned char *)(result + 168) = v100;
  if ((*(void *)(a2 + 204) & 0x20000000000000) != 0) {
    goto LABEL_164;
  }
  return result;
}

uint64_t sub_1016948A8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x200000000) != 0)
  {
    PB::TextFormatter::format(this, "chaosMet", *(unsigned char *)(a1 + 156));
    int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
    uint64_t v5 = *(void *)(a1 + 204);
    if ((v5 & 0x400000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  if ((v5 & 0x400000000) != 0)
  {
LABEL_5:
    PB::TextFormatter::format(this, "chaosMet0", *(unsigned char *)(a1 + 157));
    int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
    uint64_t v5 = *(void *)(a1 + 204);
  }
LABEL_6:
  if ((v5 & 0x800000000) != 0)
  {
    PB::TextFormatter::format(this, "chaosMet1", *(unsigned char *)(a1 + 158));
    int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
    uint64_t v5 = *(void *)(a1 + 204);
    if ((v5 & 0x1000000000) == 0)
    {
LABEL_8:
      if ((v5 & 0x2000000000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_91;
    }
  }
  else if ((v5 & 0x1000000000) == 0)
  {
    goto LABEL_8;
  }
  PB::TextFormatter::format(this, "chaosMet2", *(unsigned char *)(a1 + 159));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x2000000000) == 0)
  {
LABEL_9:
    if ((v5 & 0x4000000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_92;
  }
LABEL_91:
  PB::TextFormatter::format(this, "chaosMetRollover", *(unsigned char *)(a1 + 160));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x4000000000) == 0)
  {
LABEL_10:
    if ((v5 & 0x8000000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_93;
  }
LABEL_92:
  PB::TextFormatter::format(this, "chaosMetRollover0", *(unsigned char *)(a1 + 161));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x8000000000) == 0)
  {
LABEL_11:
    if ((v5 & 0x10000000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_94;
  }
LABEL_93:
  PB::TextFormatter::format(this, "chaosMetRollover1", *(unsigned char *)(a1 + 162));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x10000000000) == 0)
  {
LABEL_12:
    if ((v5 & 0x20000000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_95;
  }
LABEL_94:
  PB::TextFormatter::format(this, "chaosMetRollover2", *(unsigned char *)(a1 + 163));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x20000000000) == 0)
  {
LABEL_13:
    if ((v5 & 0x40000000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_96;
  }
LABEL_95:
  PB::TextFormatter::format(this, "chaosOrSaturationMet", *(unsigned char *)(a1 + 164));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x40000000000) == 0)
  {
LABEL_14:
    if ((v5 & 0x80000000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_97;
  }
LABEL_96:
  PB::TextFormatter::format(this, "chaosOrSaturationMet0", *(unsigned char *)(a1 + 165));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x80000000000) == 0)
  {
LABEL_15:
    if ((v5 & 0x100000000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_98;
  }
LABEL_97:
  PB::TextFormatter::format(this, "chaosOrSaturationMet1", *(unsigned char *)(a1 + 166));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x100000000000) == 0)
  {
LABEL_16:
    if ((v5 & 0x200000000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_99;
  }
LABEL_98:
  PB::TextFormatter::format(this, "chaosOrSaturationMet2", *(unsigned char *)(a1 + 167));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x200000000000) == 0)
  {
LABEL_17:
    if ((v5 & 0x400000000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_100;
  }
LABEL_99:
  PB::TextFormatter::format(this, "chaosOrSaturationMetRollover", *(unsigned char *)(a1 + 168));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x400000000000) == 0)
  {
LABEL_18:
    if ((v5 & 0x800000000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_101;
  }
LABEL_100:
  PB::TextFormatter::format(this, "chaosOrSaturationMetRollover0", *(unsigned char *)(a1 + 169));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x800000000000) == 0)
  {
LABEL_19:
    if ((v5 & 0x1000000000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_102;
  }
LABEL_101:
  PB::TextFormatter::format(this, "chaosOrSaturationMetRollover1", *(unsigned char *)(a1 + 170));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x1000000000000) == 0)
  {
LABEL_20:
    if ((v5 & 0x2000000000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_103;
  }
LABEL_102:
  PB::TextFormatter::format(this, "chaosOrSaturationMetRollover2", *(unsigned char *)(a1 + 171));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x2000000000000) == 0)
  {
LABEL_21:
    if ((v5 & 0x4000000000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_104;
  }
LABEL_103:
  PB::TextFormatter::format(this, "energyAndChaosOrSaturationMet", *(unsigned char *)(a1 + 172));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x4000000000000) == 0)
  {
LABEL_22:
    if ((v5 & 0x8000000000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_105;
  }
LABEL_104:
  PB::TextFormatter::format(this, "energyAndChaosOrSaturationMet0", *(unsigned char *)(a1 + 173));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x8000000000000) == 0)
  {
LABEL_23:
    if ((v5 & 0x10000000000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_106;
  }
LABEL_105:
  PB::TextFormatter::format(this, "energyAndChaosOrSaturationMet1", *(unsigned char *)(a1 + 174));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x10000000000000) == 0)
  {
LABEL_24:
    if ((v5 & 0x20000000000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_107;
  }
LABEL_106:
  PB::TextFormatter::format(this, "energyAndChaosOrSaturationMet2", *(unsigned char *)(a1 + 175));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x20000000000000) == 0)
  {
LABEL_25:
    if ((v5 & 0x40000000000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_108;
  }
LABEL_107:
  PB::TextFormatter::format(this, "energyAndChaosOrSaturationMetRollover", *(unsigned char *)(a1 + 176));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x40000000000000) == 0)
  {
LABEL_26:
    if ((v5 & 0x80000000000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_109;
  }
LABEL_108:
  PB::TextFormatter::format(this, "energyAndChaosOrSaturationMetRollover0", *(unsigned char *)(a1 + 177));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x80000000000000) == 0)
  {
LABEL_27:
    if ((v5 & 0x100000000000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_110;
  }
LABEL_109:
  PB::TextFormatter::format(this, "energyAndChaosOrSaturationMetRollover1", *(unsigned char *)(a1 + 178));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x100000000000000) == 0)
  {
LABEL_28:
    if ((v5 & 0x200000000000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_111;
  }
LABEL_110:
  PB::TextFormatter::format(this, "energyAndChaosOrSaturationMetRollover2", *(unsigned char *)(a1 + 179));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x200000000000000) == 0)
  {
LABEL_29:
    if ((v5 & 0x400000000000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_112;
  }
LABEL_111:
  PB::TextFormatter::format(this, "energyMet", *(unsigned char *)(a1 + 180));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x400000000000000) == 0)
  {
LABEL_30:
    if ((v5 & 0x800000000000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_113;
  }
LABEL_112:
  PB::TextFormatter::format(this, "energyMet0", *(unsigned char *)(a1 + 181));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x800000000000000) == 0)
  {
LABEL_31:
    if ((v5 & 0x1000000000000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_114;
  }
LABEL_113:
  PB::TextFormatter::format(this, "energyMet1", *(unsigned char *)(a1 + 182));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x1000000000000000) == 0)
  {
LABEL_32:
    if ((v5 & 0x2000000000000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_115;
  }
LABEL_114:
  PB::TextFormatter::format(this, "energyMet2", *(unsigned char *)(a1 + 183));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x2000000000000000) == 0)
  {
LABEL_33:
    if ((v5 & 0x4000000000000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_116;
  }
LABEL_115:
  PB::TextFormatter::format(this, "energyMetRollover", *(unsigned char *)(a1 + 184));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x4000000000000000) == 0)
  {
LABEL_34:
    if ((v5 & 0x8000000000000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_117;
  }
LABEL_116:
  PB::TextFormatter::format(this, "energyMetRollover0", *(unsigned char *)(a1 + 185));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x8000000000000000) == 0)
  {
LABEL_35:
    if ((v6 & 1) == 0) {
      goto LABEL_36;
    }
    goto LABEL_118;
  }
LABEL_117:
  PB::TextFormatter::format(this, "energyMetRollover1", *(unsigned char *)(a1 + 186));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((*(_WORD *)(a1 + 212) & 1) == 0)
  {
LABEL_36:
    if ((v5 & 0x10) == 0) {
      goto LABEL_37;
    }
    goto LABEL_119;
  }
LABEL_118:
  PB::TextFormatter::format(this, "energyMetRollover2", *(unsigned char *)(a1 + 187));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x10) == 0)
  {
LABEL_37:
    if ((v5 & 0x20) == 0) {
      goto LABEL_38;
    }
    goto LABEL_120;
  }
LABEL_119:
  PB::TextFormatter::format(this, "epochNumber", *(_DWORD *)(a1 + 40));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x20) == 0)
  {
LABEL_38:
    if ((v5 & 0x40) == 0) {
      goto LABEL_39;
    }
    goto LABEL_121;
  }
LABEL_120:
  PB::TextFormatter::format(this, "maxChaos", *(float *)(a1 + 44));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x40) == 0)
  {
LABEL_39:
    if ((v5 & 0x80) == 0) {
      goto LABEL_40;
    }
    goto LABEL_122;
  }
LABEL_121:
  PB::TextFormatter::format(this, "maxChaos0", *(float *)(a1 + 48));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x80) == 0)
  {
LABEL_40:
    if ((v5 & 0x100) == 0) {
      goto LABEL_41;
    }
    goto LABEL_123;
  }
LABEL_122:
  PB::TextFormatter::format(this, "maxChaos1", *(float *)(a1 + 52));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x100) == 0)
  {
LABEL_41:
    if ((v5 & 0x200) == 0) {
      goto LABEL_42;
    }
    goto LABEL_124;
  }
LABEL_123:
  PB::TextFormatter::format(this, "maxChaos2", *(float *)(a1 + 56));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x200) == 0)
  {
LABEL_42:
    if ((v5 & 0x400) == 0) {
      goto LABEL_43;
    }
    goto LABEL_125;
  }
LABEL_124:
  PB::TextFormatter::format(this, "maxChaosRollover", *(float *)(a1 + 60));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x400) == 0)
  {
LABEL_43:
    if ((v5 & 0x800) == 0) {
      goto LABEL_44;
    }
    goto LABEL_126;
  }
LABEL_125:
  PB::TextFormatter::format(this, "maxChaosRollover0", *(float *)(a1 + 64));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x800) == 0)
  {
LABEL_44:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_127;
  }
LABEL_126:
  PB::TextFormatter::format(this, "maxChaosRollover1", *(float *)(a1 + 68));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x1000) == 0)
  {
LABEL_45:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_128;
  }
LABEL_127:
  PB::TextFormatter::format(this, "maxChaosRollover2", *(float *)(a1 + 72));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x2000) == 0)
  {
LABEL_46:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_129;
  }
LABEL_128:
  PB::TextFormatter::format(this, "maxEnergy", *(float *)(a1 + 76));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x4000) == 0)
  {
LABEL_47:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_130;
  }
LABEL_129:
  PB::TextFormatter::format(this, "maxEnergy0", *(float *)(a1 + 80));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x8000) == 0)
  {
LABEL_48:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_131;
  }
LABEL_130:
  PB::TextFormatter::format(this, "maxEnergy1", *(float *)(a1 + 84));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x10000) == 0)
  {
LABEL_49:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_132;
  }
LABEL_131:
  PB::TextFormatter::format(this, "maxEnergy2", *(float *)(a1 + 88));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x20000) == 0)
  {
LABEL_50:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_133;
  }
LABEL_132:
  PB::TextFormatter::format(this, "maxEnergyRollover", *(float *)(a1 + 92));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x40000) == 0)
  {
LABEL_51:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_134;
  }
LABEL_133:
  PB::TextFormatter::format(this, "maxEnergyRollover0", *(float *)(a1 + 96));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x80000) == 0)
  {
LABEL_52:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_135;
  }
LABEL_134:
  PB::TextFormatter::format(this, "maxEnergyRollover1", *(float *)(a1 + 100));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x100000) == 0)
  {
LABEL_53:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_136;
  }
LABEL_135:
  PB::TextFormatter::format(this, "maxEnergyRollover2", *(float *)(a1 + 104));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x200000) == 0)
  {
LABEL_54:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_137;
  }
LABEL_136:
  PB::TextFormatter::format(this, "maxRMS", *(float *)(a1 + 108));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x400000) == 0)
  {
LABEL_55:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_138;
  }
LABEL_137:
  PB::TextFormatter::format(this, "maxRMS0", *(float *)(a1 + 112));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x800000) == 0)
  {
LABEL_56:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_139;
  }
LABEL_138:
  PB::TextFormatter::format(this, "maxRMS1", *(float *)(a1 + 116));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_57:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_140;
  }
LABEL_139:
  PB::TextFormatter::format(this, "maxRMS2", *(float *)(a1 + 120));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_58:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_141;
  }
LABEL_140:
  PB::TextFormatter::format(this, "maxSaturation", *(float *)(a1 + 124));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_59:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_142;
  }
LABEL_141:
  PB::TextFormatter::format(this, "maxSaturation0", *(float *)(a1 + 128));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_60:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_143;
  }
LABEL_142:
  PB::TextFormatter::format(this, "maxSaturation1", *(float *)(a1 + 132));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_61:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_144;
  }
LABEL_143:
  PB::TextFormatter::format(this, "maxSaturation2", *(float *)(a1 + 136));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x20000000) == 0)
  {
LABEL_62:
    if ((v5 & 0x40000000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_145;
  }
LABEL_144:
  PB::TextFormatter::format(this, "maxSaturationRollover", *(float *)(a1 + 140));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x40000000) == 0)
  {
LABEL_63:
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_146;
  }
LABEL_145:
  PB::TextFormatter::format(this, "maxSaturationRollover0", *(float *)(a1 + 144));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x80000000) == 0)
  {
LABEL_64:
    if ((v5 & 0x100000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_147;
  }
LABEL_146:
  PB::TextFormatter::format(this, "maxSaturationRollover1", *(float *)(a1 + 148));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 0x100000000) == 0)
  {
LABEL_65:
    if ((v6 & 2) == 0) {
      goto LABEL_66;
    }
    goto LABEL_148;
  }
LABEL_147:
  PB::TextFormatter::format(this, "maxSaturationRollover2", *(float *)(a1 + 152));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((*(_WORD *)(a1 + 212) & 2) == 0)
  {
LABEL_66:
    if ((v6 & 4) == 0) {
      goto LABEL_67;
    }
    goto LABEL_149;
  }
LABEL_148:
  PB::TextFormatter::format(this, "passThru", *(unsigned char *)(a1 + 188));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((*(_WORD *)(a1 + 212) & 4) == 0)
  {
LABEL_67:
    if ((v6 & 8) == 0) {
      goto LABEL_68;
    }
    goto LABEL_150;
  }
LABEL_149:
  PB::TextFormatter::format(this, "passThruRollover", *(unsigned char *)(a1 + 189));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((*(_WORD *)(a1 + 212) & 8) == 0)
  {
LABEL_68:
    if ((v6 & 0x10) == 0) {
      goto LABEL_69;
    }
    goto LABEL_151;
  }
LABEL_150:
  PB::TextFormatter::format(this, "passthru0", *(unsigned char *)(a1 + 190));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((*(_WORD *)(a1 + 212) & 0x10) == 0)
  {
LABEL_69:
    if ((v6 & 0x20) == 0) {
      goto LABEL_70;
    }
    goto LABEL_152;
  }
LABEL_151:
  PB::TextFormatter::format(this, "passthru1", *(unsigned char *)(a1 + 191));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((*(_WORD *)(a1 + 212) & 0x20) == 0)
  {
LABEL_70:
    if ((v6 & 0x40) == 0) {
      goto LABEL_71;
    }
    goto LABEL_153;
  }
LABEL_152:
  PB::TextFormatter::format(this, "passthru2", *(unsigned char *)(a1 + 192));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((*(_WORD *)(a1 + 212) & 0x40) == 0)
  {
LABEL_71:
    if ((v6 & 0x80) == 0) {
      goto LABEL_72;
    }
    goto LABEL_154;
  }
LABEL_153:
  PB::TextFormatter::format(this, "passthruRollover0", *(unsigned char *)(a1 + 193));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((*(_WORD *)(a1 + 212) & 0x80) == 0)
  {
LABEL_72:
    if ((v6 & 0x100) == 0) {
      goto LABEL_73;
    }
    goto LABEL_155;
  }
LABEL_154:
  PB::TextFormatter::format(this, "passthruRollover1", *(unsigned char *)(a1 + 194));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((*(_WORD *)(a1 + 212) & 0x100) == 0)
  {
LABEL_73:
    if ((v6 & 0x200) == 0) {
      goto LABEL_74;
    }
    goto LABEL_156;
  }
LABEL_155:
  PB::TextFormatter::format(this, "passthruRollover2", *(unsigned char *)(a1 + 195));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((*(_WORD *)(a1 + 212) & 0x200) == 0)
  {
LABEL_74:
    if ((v6 & 0x400) == 0) {
      goto LABEL_75;
    }
    goto LABEL_157;
  }
LABEL_156:
  PB::TextFormatter::format(this, "saturationMet", *(unsigned char *)(a1 + 196));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((*(_WORD *)(a1 + 212) & 0x400) == 0)
  {
LABEL_75:
    if ((v6 & 0x800) == 0) {
      goto LABEL_76;
    }
    goto LABEL_158;
  }
LABEL_157:
  PB::TextFormatter::format(this, "saturationMet0", *(unsigned char *)(a1 + 197));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((*(_WORD *)(a1 + 212) & 0x800) == 0)
  {
LABEL_76:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_159;
  }
LABEL_158:
  PB::TextFormatter::format(this, "saturationMet1", *(unsigned char *)(a1 + 198));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((*(_WORD *)(a1 + 212) & 0x1000) == 0)
  {
LABEL_77:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_160;
  }
LABEL_159:
  PB::TextFormatter::format(this, "saturationMet2", *(unsigned char *)(a1 + 199));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((*(_WORD *)(a1 + 212) & 0x2000) == 0)
  {
LABEL_78:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_161;
  }
LABEL_160:
  PB::TextFormatter::format(this, "saturationMetRollover", *(unsigned char *)(a1 + 200));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((*(_WORD *)(a1 + 212) & 0x4000) == 0)
  {
LABEL_79:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_162;
  }
LABEL_161:
  PB::TextFormatter::format(this, "saturationMetRollover0", *(unsigned char *)(a1 + 201));
  int v6 = *(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16);
  uint64_t v5 = *(void *)(a1 + 204);
  if ((*(_WORD *)(a1 + 212) & 0x8000) == 0)
  {
LABEL_80:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_163;
  }
LABEL_162:
  PB::TextFormatter::format(this, "saturationMetRollover1", *(unsigned char *)(a1 + 202));
  uint64_t v5 = *(void *)(a1 + 204);
  if (((*(unsigned __int16 *)(a1 + 212) | (*(unsigned __int8 *)(a1 + 214) << 16)) & 0x10000) == 0)
  {
LABEL_81:
    if ((v5 & 1) == 0) {
      goto LABEL_82;
    }
    goto LABEL_164;
  }
LABEL_163:
  PB::TextFormatter::format(this, "saturationMetRollover2", *(unsigned char *)(a1 + 203));
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 1) == 0)
  {
LABEL_82:
    if ((v5 & 2) == 0) {
      goto LABEL_83;
    }
    goto LABEL_165;
  }
LABEL_164:
  PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 8));
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 2) == 0)
  {
LABEL_83:
    if ((v5 & 4) == 0) {
      goto LABEL_84;
    }
    goto LABEL_166;
  }
LABEL_165:
  PB::TextFormatter::format(this, "timestamp0", *(void *)(a1 + 16));
  uint64_t v5 = *(void *)(a1 + 204);
  if ((v5 & 4) == 0)
  {
LABEL_84:
    if ((v5 & 8) == 0) {
      goto LABEL_86;
    }
    goto LABEL_85;
  }
LABEL_166:
  PB::TextFormatter::format(this, "timestamp1", *(void *)(a1 + 24));
  if ((*(void *)(a1 + 204) & 8) != 0) {
LABEL_85:
  }
    PB::TextFormatter::format(this, "timestamp2", *(void *)(a1 + 32));
LABEL_86:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_1016956A8(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v8 = a1 + 204;
    while (1)
    {
      uint64_t v9 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v10 = 0;
      unsigned int v11 = 0;
      unint64_t v12 = 0;
      while (1)
      {
        unint64_t v13 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v14 = *(unsigned char *)(v9 + v2);
        v12 |= (unint64_t)(v14 & 0x7F) << v10;
        if ((v14 & 0x80) == 0) {
          break;
        }
        v10 += 7;
        unint64_t v2 = v13;
        BOOL v15 = v11++ > 8;
        if (v15) {
          goto LABEL_20;
        }
      }
LABEL_21:
      if ((v12 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v21 = v12 >> 3;
      if ((int)(v12 >> 3) > 1102)
      {
        if ((v12 >> 3) <= 0x44E)
        {
          switch((int)v21)
          {
            case 1103:
              *(void *)v8 |= 4uLL;
              unint64_t v46 = *((void *)this + 1);
              unint64_t v47 = *((void *)this + 2);
              uint64_t v48 = *(void *)this;
              if (v46 <= 0xFFFFFFFFFFFFFFF5 && v46 + 10 <= v47)
              {
                char v49 = 0;
                unsigned int v50 = 0;
                uint64_t v51 = 0;
                do
                {
                  unint64_t v52 = v46 + 1;
                  *((void *)this + 1) = v46 + 1;
                  char v53 = *(unsigned char *)(v48 + v46);
                  v51 |= (unint64_t)(v53 & 0x7F) << v49;
                  if ((v53 & 0x80) == 0) {
                    goto LABEL_398;
                  }
                  v49 += 7;
                  unint64_t v46 = v52;
                  BOOL v15 = v50++ > 8;
                }
                while (!v15);
LABEL_272:
                uint64_t v51 = 0;
                goto LABEL_398;
              }
              char v313 = 0;
              unsigned int v314 = 0;
              uint64_t v51 = 0;
              if (v47 <= v46) {
                unint64_t v47 = *((void *)this + 1);
              }
              break;
            case 1104:
              *(void *)v8 |= 0x800000uLL;
              unint64_t v242 = *((void *)this + 1);
              if (v242 > 0xFFFFFFFFFFFFFFFBLL || v242 + 4 > *((void *)this + 2)) {
                goto LABEL_232;
              }
              *(_DWORD *)(a1 + 116) = *(_DWORD *)(*(void *)this + v242);
              goto LABEL_377;
            case 1105:
              *(void *)v8 |= 0x8000uLL;
              unint64_t v243 = *((void *)this + 1);
              if (v243 > 0xFFFFFFFFFFFFFFFBLL || v243 + 4 > *((void *)this + 2)) {
                goto LABEL_232;
              }
              *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v243);
              goto LABEL_377;
            case 1106:
              *(void *)v8 |= 0x80uLL;
              unint64_t v244 = *((void *)this + 1);
              if (v244 > 0xFFFFFFFFFFFFFFFBLL || v244 + 4 > *((void *)this + 2)) {
                goto LABEL_232;
              }
              *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v244);
              goto LABEL_377;
            case 1107:
              *(void *)v8 |= 0x8000000uLL;
              unint64_t v245 = *((void *)this + 1);
              if (v245 > 0xFFFFFFFFFFFFFFFBLL || v245 + 4 > *((void *)this + 2)) {
                goto LABEL_232;
              }
              *(_DWORD *)(a1 + 132) = *(_DWORD *)(*(void *)this + v245);
              goto LABEL_377;
            case 1108:
              *(void *)v8 |= 0x800000000000000uLL;
              unint64_t v246 = *((void *)this + 1);
              if (v246 >= *((void *)this + 2))
              {
                BOOL v249 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v247 = v246 + 1;
                int v248 = *(unsigned __int8 *)(*(void *)this + v246);
                *((void *)this + 1) = v247;
                BOOL v249 = v248 != 0;
              }
              *(unsigned char *)(a1 + 182) = v249;
              goto LABEL_378;
            case 1109:
              *(void *)v8 |= 0x800000000uLL;
              unint64_t v250 = *((void *)this + 1);
              if (v250 >= *((void *)this + 2))
              {
                BOOL v253 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v251 = v250 + 1;
                int v252 = *(unsigned __int8 *)(*(void *)this + v250);
                *((void *)this + 1) = v251;
                BOOL v253 = v252 != 0;
              }
              *(unsigned char *)(a1 + 158) = v253;
              goto LABEL_378;
            case 1110:
              char v254 = *(unsigned char *)(v8 + 10);
              *(_WORD *)(v8 + 8) |= 0x800u;
              *(unsigned char *)(v8 + 10) = v254;
              unint64_t v255 = *((void *)this + 1);
              if (v255 >= *((void *)this + 2))
              {
                BOOL v258 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v256 = v255 + 1;
                int v257 = *(unsigned __int8 *)(*(void *)this + v255);
                *((void *)this + 1) = v256;
                BOOL v258 = v257 != 0;
              }
              *(unsigned char *)(a1 + 198) = v258;
              goto LABEL_378;
            case 1111:
              *(void *)v8 |= 0x80000000000uLL;
              unint64_t v259 = *((void *)this + 1);
              if (v259 >= *((void *)this + 2))
              {
                BOOL v262 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v260 = v259 + 1;
                int v261 = *(unsigned __int8 *)(*(void *)this + v259);
                *((void *)this + 1) = v260;
                BOOL v262 = v261 != 0;
              }
              *(unsigned char *)(a1 + 166) = v262;
              goto LABEL_378;
            case 1112:
              *(void *)v8 |= 0x8000000000000uLL;
              unint64_t v263 = *((void *)this + 1);
              if (v263 >= *((void *)this + 2))
              {
                BOOL v266 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v264 = v263 + 1;
                int v265 = *(unsigned __int8 *)(*(void *)this + v263);
                *((void *)this + 1) = v264;
                BOOL v266 = v265 != 0;
              }
              *(unsigned char *)(a1 + 174) = v266;
              goto LABEL_378;
            case 1113:
              char v267 = *(unsigned char *)(v8 + 10);
              *(_WORD *)(v8 + 8) |= 0x10u;
              *(unsigned char *)(v8 + 10) = v267;
              unint64_t v268 = *((void *)this + 1);
              if (v268 >= *((void *)this + 2))
              {
                BOOL v271 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v269 = v268 + 1;
                int v270 = *(unsigned __int8 *)(*(void *)this + v268);
                *((void *)this + 1) = v269;
                BOOL v271 = v270 != 0;
              }
              *(unsigned char *)(a1 + 191) = v271;
              goto LABEL_378;
            case 1114:
              *(void *)v8 |= 0x80000uLL;
              unint64_t v272 = *((void *)this + 1);
              if (v272 > 0xFFFFFFFFFFFFFFFBLL || v272 + 4 > *((void *)this + 2)) {
                goto LABEL_232;
              }
              *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v272);
              goto LABEL_377;
            case 1115:
              *(void *)v8 |= 0x800uLL;
              unint64_t v273 = *((void *)this + 1);
              if (v273 > 0xFFFFFFFFFFFFFFFBLL || v273 + 4 > *((void *)this + 2)) {
                goto LABEL_232;
              }
              *(_DWORD *)(a1 + 68) = *(_DWORD *)(*(void *)this + v273);
              goto LABEL_377;
            case 1116:
              *(void *)v8 |= 0x80000000uLL;
              unint64_t v274 = *((void *)this + 1);
              if (v274 <= 0xFFFFFFFFFFFFFFFBLL && v274 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 148) = *(_DWORD *)(*(void *)this + v274);
LABEL_377:
                *((void *)this + 1) += 4;
              }
              else
              {
LABEL_232:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_378;
            case 1117:
              *(void *)v8 |= 0x8000000000000000;
              unint64_t v275 = *((void *)this + 1);
              if (v275 >= *((void *)this + 2))
              {
                BOOL v278 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v276 = v275 + 1;
                int v277 = *(unsigned __int8 *)(*(void *)this + v275);
                *((void *)this + 1) = v276;
                BOOL v278 = v277 != 0;
              }
              *(unsigned char *)(a1 + 186) = v278;
              goto LABEL_378;
            case 1118:
              *(void *)v8 |= 0x8000000000uLL;
              unint64_t v279 = *((void *)this + 1);
              if (v279 >= *((void *)this + 2))
              {
                BOOL v282 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v280 = v279 + 1;
                int v281 = *(unsigned __int8 *)(*(void *)this + v279);
                *((void *)this + 1) = v280;
                BOOL v282 = v281 != 0;
              }
              *(unsigned char *)(a1 + 162) = v282;
              goto LABEL_378;
            case 1119:
              char v283 = *(unsigned char *)(v8 + 10);
              *(_WORD *)(v8 + 8) |= 0x8000u;
              *(unsigned char *)(v8 + 10) = v283;
              unint64_t v284 = *((void *)this + 1);
              if (v284 >= *((void *)this + 2))
              {
                BOOL v287 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v285 = v284 + 1;
                int v286 = *(unsigned __int8 *)(*(void *)this + v284);
                *((void *)this + 1) = v285;
                BOOL v287 = v286 != 0;
              }
              *(unsigned char *)(a1 + 202) = v287;
              goto LABEL_378;
            case 1120:
              *(void *)v8 |= 0x800000000000uLL;
              unint64_t v288 = *((void *)this + 1);
              if (v288 >= *((void *)this + 2))
              {
                BOOL v291 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v289 = v288 + 1;
                int v290 = *(unsigned __int8 *)(*(void *)this + v288);
                *((void *)this + 1) = v289;
                BOOL v291 = v290 != 0;
              }
              *(unsigned char *)(a1 + 170) = v291;
              goto LABEL_378;
            case 1121:
              *(void *)v8 |= 0x80000000000000uLL;
              unint64_t v292 = *((void *)this + 1);
              if (v292 >= *((void *)this + 2))
              {
                BOOL v295 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v293 = v292 + 1;
                int v294 = *(unsigned __int8 *)(*(void *)this + v292);
                *((void *)this + 1) = v293;
                BOOL v295 = v294 != 0;
              }
              *(unsigned char *)(a1 + 178) = v295;
              goto LABEL_378;
            case 1122:
              char v296 = *(unsigned char *)(v8 + 10);
              *(_WORD *)(v8 + 8) |= 0x80u;
              *(unsigned char *)(v8 + 10) = v296;
              unint64_t v297 = *((void *)this + 1);
              if (v297 >= *((void *)this + 2))
              {
                BOOL v300 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v298 = v297 + 1;
                int v299 = *(unsigned __int8 *)(*(void *)this + v297);
                *((void *)this + 1) = v298;
                BOOL v300 = v299 != 0;
              }
              *(unsigned char *)(a1 + 194) = v300;
              goto LABEL_378;
            default:
              JUMPOUT(0);
          }
          while (1)
          {
            if (v47 == v46)
            {
              uint64_t v51 = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_398;
            }
            unint64_t v315 = v46 + 1;
            char v316 = *(unsigned char *)(v48 + v46);
            *((void *)this + 1) = v315;
            v51 |= (unint64_t)(v316 & 0x7F) << v313;
            if ((v316 & 0x80) == 0) {
              break;
            }
            v313 += 7;
            unint64_t v46 = v315;
            BOOL v15 = v314++ > 8;
            if (v15) {
              goto LABEL_272;
            }
          }
          if (*((unsigned char *)this + 24)) {
            uint64_t v51 = 0;
          }
LABEL_398:
          *(void *)(a1 + 24) = v51;
        }
        else
        {
          switch((int)v21)
          {
            case 1203:
              *(void *)v8 |= 8uLL;
              unint64_t v30 = *((void *)this + 1);
              unint64_t v31 = *((void *)this + 2);
              uint64_t v32 = *(void *)this;
              if (v30 <= 0xFFFFFFFFFFFFFFF5 && v30 + 10 <= v31)
              {
                char v33 = 0;
                unsigned int v34 = 0;
                uint64_t v35 = 0;
                do
                {
                  unint64_t v36 = v30 + 1;
                  *((void *)this + 1) = v30 + 1;
                  char v37 = *(unsigned char *)(v32 + v30);
                  v35 |= (unint64_t)(v37 & 0x7F) << v33;
                  if ((v37 & 0x80) == 0) {
                    goto LABEL_390;
                  }
                  v33 += 7;
                  unint64_t v30 = v36;
                  BOOL v15 = v34++ > 8;
                }
                while (!v15);
LABEL_258:
                uint64_t v35 = 0;
                goto LABEL_390;
              }
              char v305 = 0;
              unsigned int v306 = 0;
              uint64_t v35 = 0;
              if (v31 <= v30) {
                unint64_t v31 = *((void *)this + 1);
              }
              break;
            case 1204:
              *(void *)v8 |= 0x1000000uLL;
              unint64_t v121 = *((void *)this + 1);
              if (v121 > 0xFFFFFFFFFFFFFFFBLL || v121 + 4 > *((void *)this + 2)) {
                goto LABEL_232;
              }
              *(_DWORD *)(a1 + 120) = *(_DWORD *)(*(void *)this + v121);
              goto LABEL_377;
            case 1205:
              *(void *)v8 |= 0x10000uLL;
              unint64_t v122 = *((void *)this + 1);
              if (v122 > 0xFFFFFFFFFFFFFFFBLL || v122 + 4 > *((void *)this + 2)) {
                goto LABEL_232;
              }
              *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v122);
              goto LABEL_377;
            case 1206:
              *(void *)v8 |= 0x100uLL;
              unint64_t v123 = *((void *)this + 1);
              if (v123 > 0xFFFFFFFFFFFFFFFBLL || v123 + 4 > *((void *)this + 2)) {
                goto LABEL_232;
              }
              *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v123);
              goto LABEL_377;
            case 1207:
              *(void *)v8 |= 0x10000000uLL;
              unint64_t v124 = *((void *)this + 1);
              if (v124 > 0xFFFFFFFFFFFFFFFBLL || v124 + 4 > *((void *)this + 2)) {
                goto LABEL_232;
              }
              *(_DWORD *)(a1 + 136) = *(_DWORD *)(*(void *)this + v124);
              goto LABEL_377;
            case 1208:
              *(void *)v8 |= 0x1000000000000000uLL;
              unint64_t v125 = *((void *)this + 1);
              if (v125 >= *((void *)this + 2))
              {
                BOOL v128 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v126 = v125 + 1;
                int v127 = *(unsigned __int8 *)(*(void *)this + v125);
                *((void *)this + 1) = v126;
                BOOL v128 = v127 != 0;
              }
              *(unsigned char *)(a1 + 183) = v128;
              goto LABEL_378;
            case 1209:
              *(void *)v8 |= 0x1000000000uLL;
              unint64_t v129 = *((void *)this + 1);
              if (v129 >= *((void *)this + 2))
              {
                BOOL v132 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v130 = v129 + 1;
                int v131 = *(unsigned __int8 *)(*(void *)this + v129);
                *((void *)this + 1) = v130;
                BOOL v132 = v131 != 0;
              }
              *(unsigned char *)(a1 + 159) = v132;
              goto LABEL_378;
            case 1210:
              char v133 = *(unsigned char *)(v8 + 10);
              *(_WORD *)(v8 + 8) |= 0x1000u;
              *(unsigned char *)(v8 + 10) = v133;
              unint64_t v134 = *((void *)this + 1);
              if (v134 >= *((void *)this + 2))
              {
                BOOL v137 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v135 = v134 + 1;
                int v136 = *(unsigned __int8 *)(*(void *)this + v134);
                *((void *)this + 1) = v135;
                BOOL v137 = v136 != 0;
              }
              *(unsigned char *)(a1 + 199) = v137;
              goto LABEL_378;
            case 1211:
              *(void *)v8 |= 0x100000000000uLL;
              unint64_t v138 = *((void *)this + 1);
              if (v138 >= *((void *)this + 2))
              {
                BOOL v141 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v139 = v138 + 1;
                int v140 = *(unsigned __int8 *)(*(void *)this + v138);
                *((void *)this + 1) = v139;
                BOOL v141 = v140 != 0;
              }
              *(unsigned char *)(a1 + 167) = v141;
              goto LABEL_378;
            case 1212:
              *(void *)v8 |= 0x10000000000000uLL;
              unint64_t v142 = *((void *)this + 1);
              if (v142 >= *((void *)this + 2))
              {
                BOOL v145 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v143 = v142 + 1;
                int v144 = *(unsigned __int8 *)(*(void *)this + v142);
                *((void *)this + 1) = v143;
                BOOL v145 = v144 != 0;
              }
              *(unsigned char *)(a1 + 175) = v145;
              goto LABEL_378;
            case 1213:
              char v146 = *(unsigned char *)(v8 + 10);
              *(_WORD *)(v8 + 8) |= 0x20u;
              *(unsigned char *)(v8 + 10) = v146;
              unint64_t v147 = *((void *)this + 1);
              if (v147 >= *((void *)this + 2))
              {
                BOOL v150 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v148 = v147 + 1;
                int v149 = *(unsigned __int8 *)(*(void *)this + v147);
                *((void *)this + 1) = v148;
                BOOL v150 = v149 != 0;
              }
              *(unsigned char *)(a1 + 192) = v150;
              goto LABEL_378;
            case 1214:
              *(void *)v8 |= 0x100000uLL;
              unint64_t v151 = *((void *)this + 1);
              if (v151 > 0xFFFFFFFFFFFFFFFBLL || v151 + 4 > *((void *)this + 2)) {
                goto LABEL_232;
              }
              *(_DWORD *)(a1 + 104) = *(_DWORD *)(*(void *)this + v151);
              goto LABEL_377;
            case 1215:
              *(void *)v8 |= 0x1000uLL;
              unint64_t v152 = *((void *)this + 1);
              if (v152 > 0xFFFFFFFFFFFFFFFBLL || v152 + 4 > *((void *)this + 2)) {
                goto LABEL_232;
              }
              *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v152);
              goto LABEL_377;
            case 1216:
              *(void *)v8 |= (unint64_t)&_mh_execute_header;
              unint64_t v153 = *((void *)this + 1);
              if (v153 > 0xFFFFFFFFFFFFFFFBLL || v153 + 4 > *((void *)this + 2)) {
                goto LABEL_232;
              }
              *(_DWORD *)(a1 + 152) = *(_DWORD *)(*(void *)this + v153);
              goto LABEL_377;
            case 1217:
              char v154 = *(unsigned char *)(v8 + 10);
              *(_WORD *)(v8 + 8) |= 1u;
              *(unsigned char *)(v8 + 10) = v154;
              unint64_t v155 = *((void *)this + 1);
              if (v155 >= *((void *)this + 2))
              {
                BOOL v158 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v156 = v155 + 1;
                int v157 = *(unsigned __int8 *)(*(void *)this + v155);
                *((void *)this + 1) = v156;
                BOOL v158 = v157 != 0;
              }
              *(unsigned char *)(a1 + 187) = v158;
              goto LABEL_378;
            case 1218:
              *(void *)v8 |= 0x10000000000uLL;
              unint64_t v159 = *((void *)this + 1);
              if (v159 >= *((void *)this + 2))
              {
                BOOL v162 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v160 = v159 + 1;
                int v161 = *(unsigned __int8 *)(*(void *)this + v159);
                *((void *)this + 1) = v160;
                BOOL v162 = v161 != 0;
              }
              *(unsigned char *)(a1 + 163) = v162;
              goto LABEL_378;
            case 1219:
              int v163 = *(unsigned __int16 *)(v8 + 8);
              unsigned int v164 = (v163 | (*(unsigned __int8 *)(v8 + 10) << 16) | 0x10000u) >> 16;
              *(_WORD *)(v8 + 8) = v163;
              *(unsigned char *)(v8 + 10) = v164;
              unint64_t v165 = *((void *)this + 1);
              if (v165 >= *((void *)this + 2))
              {
                BOOL v168 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v166 = v165 + 1;
                int v167 = *(unsigned __int8 *)(*(void *)this + v165);
                *((void *)this + 1) = v166;
                BOOL v168 = v167 != 0;
              }
              *(unsigned char *)(a1 + 203) = v168;
              goto LABEL_378;
            case 1220:
              *(void *)v8 |= 0x1000000000000uLL;
              unint64_t v169 = *((void *)this + 1);
              if (v169 >= *((void *)this + 2))
              {
                BOOL v172 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v170 = v169 + 1;
                int v171 = *(unsigned __int8 *)(*(void *)this + v169);
                *((void *)this + 1) = v170;
                BOOL v172 = v171 != 0;
              }
              *(unsigned char *)(a1 + 171) = v172;
              goto LABEL_378;
            case 1221:
              *(void *)v8 |= 0x100000000000000uLL;
              unint64_t v173 = *((void *)this + 1);
              if (v173 >= *((void *)this + 2))
              {
                BOOL v176 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v174 = v173 + 1;
                int v175 = *(unsigned __int8 *)(*(void *)this + v173);
                *((void *)this + 1) = v174;
                BOOL v176 = v175 != 0;
              }
              *(unsigned char *)(a1 + 179) = v176;
              goto LABEL_378;
            case 1222:
              char v177 = *(unsigned char *)(v8 + 10);
              *(_WORD *)(v8 + 8) |= 0x100u;
              *(unsigned char *)(v8 + 10) = v177;
              unint64_t v178 = *((void *)this + 1);
              if (v178 >= *((void *)this + 2))
              {
                BOOL v181 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v179 = v178 + 1;
                int v180 = *(unsigned __int8 *)(*(void *)this + v178);
                *((void *)this + 1) = v179;
                BOOL v181 = v180 != 0;
              }
              *(unsigned char *)(a1 + 195) = v181;
              goto LABEL_378;
            default:
LABEL_153:
              uint64_t result = PB::Reader::skip(this, v21, v12 & 7, 0);
              if (!result) {
                return result;
              }
              goto LABEL_378;
          }
          while (1)
          {
            if (v31 == v30)
            {
              uint64_t v35 = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_390;
            }
            unint64_t v307 = v30 + 1;
            char v308 = *(unsigned char *)(v32 + v30);
            *((void *)this + 1) = v307;
            v35 |= (unint64_t)(v308 & 0x7F) << v305;
            if ((v308 & 0x80) == 0) {
              break;
            }
            v305 += 7;
            unint64_t v30 = v307;
            BOOL v15 = v306++ > 8;
            if (v15) {
              goto LABEL_258;
            }
          }
          if (*((unsigned char *)this + 24)) {
            uint64_t v35 = 0;
          }
LABEL_390:
          *(void *)(a1 + 32) = v35;
        }
      }
      else
      {
        switch((int)v21)
        {
          case 'e':
            *(void *)v8 |= 1uLL;
            unint64_t v22 = *((void *)this + 1);
            unint64_t v23 = *((void *)this + 2);
            uint64_t v24 = *(void *)this;
            if (v22 <= 0xFFFFFFFFFFFFFFF5 && v22 + 10 <= v23)
            {
              char v25 = 0;
              unsigned int v26 = 0;
              uint64_t v27 = 0;
              do
              {
                unint64_t v28 = v22 + 1;
                *((void *)this + 1) = v22 + 1;
                char v29 = *(unsigned char *)(v24 + v22);
                v27 |= (unint64_t)(v29 & 0x7F) << v25;
                if ((v29 & 0x80) == 0) {
                  goto LABEL_386;
                }
                v25 += 7;
                unint64_t v22 = v28;
                BOOL v15 = v26++ > 8;
              }
              while (!v15);
LABEL_251:
              uint64_t v27 = 0;
              goto LABEL_386;
            }
            char v301 = 0;
            unsigned int v302 = 0;
            uint64_t v27 = 0;
            if (v23 <= v22) {
              unint64_t v23 = *((void *)this + 1);
            }
            while (2)
            {
              if (v23 == v22)
              {
                uint64_t v27 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v303 = v22 + 1;
                char v304 = *(unsigned char *)(v24 + v22);
                *((void *)this + 1) = v303;
                v27 |= (unint64_t)(v304 & 0x7F) << v301;
                if (v304 < 0)
                {
                  v301 += 7;
                  unint64_t v22 = v303;
                  BOOL v15 = v302++ > 8;
                  if (v15) {
                    goto LABEL_251;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v27 = 0;
                }
              }
              break;
            }
LABEL_386:
            *(void *)(a1 + 8) = v27;
            goto LABEL_378;
          case 'f':
            *(void *)v8 |= 0x10uLL;
            unint64_t v54 = *((void *)this + 1);
            unint64_t v55 = *((void *)this + 2);
            uint64_t v56 = *(void *)this;
            if (v54 <= 0xFFFFFFFFFFFFFFF5 && v54 + 10 <= v55)
            {
              char v57 = 0;
              unsigned int v58 = 0;
              uint64_t v59 = 0;
              do
              {
                unint64_t v60 = v54 + 1;
                *((void *)this + 1) = v54 + 1;
                char v61 = *(unsigned char *)(v56 + v54);
                v59 |= (unint64_t)(v61 & 0x7F) << v57;
                if ((v61 & 0x80) == 0) {
                  goto LABEL_402;
                }
                v57 += 7;
                unint64_t v54 = v60;
                BOOL v15 = v58++ > 8;
              }
              while (!v15);
LABEL_279:
              LODWORD(v59) = 0;
              goto LABEL_402;
            }
            char v317 = 0;
            unsigned int v318 = 0;
            uint64_t v59 = 0;
            if (v55 <= v54) {
              unint64_t v55 = *((void *)this + 1);
            }
            while (2)
            {
              if (v55 == v54)
              {
                LODWORD(v59) = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v319 = v54 + 1;
                char v320 = *(unsigned char *)(v56 + v54);
                *((void *)this + 1) = v319;
                v59 |= (unint64_t)(v320 & 0x7F) << v317;
                if (v320 < 0)
                {
                  v317 += 7;
                  unint64_t v54 = v319;
                  BOOL v15 = v318++ > 8;
                  if (v15) {
                    goto LABEL_279;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v59) = 0;
                }
              }
              break;
            }
LABEL_402:
            *(_DWORD *)(a1 + 40) = v59;
            goto LABEL_378;
          case 'g':
            char v62 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 2u;
            *(unsigned char *)(v8 + 10) = v62;
            unint64_t v63 = *((void *)this + 1);
            if (v63 >= *((void *)this + 2))
            {
              BOOL v66 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v64 = v63 + 1;
              int v65 = *(unsigned __int8 *)(*(void *)this + v63);
              *((void *)this + 1) = v64;
              BOOL v66 = v65 != 0;
            }
            *(unsigned char *)(a1 + 188) = v66;
            goto LABEL_378;
          case 'h':
            *(void *)v8 |= 0x200000uLL;
            unint64_t v67 = *((void *)this + 1);
            if (v67 > 0xFFFFFFFFFFFFFFFBLL || v67 + 4 > *((void *)this + 2)) {
              goto LABEL_232;
            }
            *(_DWORD *)(a1 + 108) = *(_DWORD *)(*(void *)this + v67);
            goto LABEL_377;
          case 'i':
            *(void *)v8 |= 0x2000uLL;
            unint64_t v68 = *((void *)this + 1);
            if (v68 > 0xFFFFFFFFFFFFFFFBLL || v68 + 4 > *((void *)this + 2)) {
              goto LABEL_232;
            }
            *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v68);
            goto LABEL_377;
          case 'j':
            *(void *)v8 |= 0x20uLL;
            unint64_t v69 = *((void *)this + 1);
            if (v69 > 0xFFFFFFFFFFFFFFFBLL || v69 + 4 > *((void *)this + 2)) {
              goto LABEL_232;
            }
            *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v69);
            goto LABEL_377;
          case 'k':
            *(void *)v8 |= 0x2000000uLL;
            unint64_t v70 = *((void *)this + 1);
            if (v70 > 0xFFFFFFFFFFFFFFFBLL || v70 + 4 > *((void *)this + 2)) {
              goto LABEL_232;
            }
            *(_DWORD *)(a1 + 124) = *(_DWORD *)(*(void *)this + v70);
            goto LABEL_377;
          case 'l':
            *(void *)v8 |= 0x200000000000000uLL;
            unint64_t v71 = *((void *)this + 1);
            if (v71 >= *((void *)this + 2))
            {
              BOOL v74 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v72 = v71 + 1;
              int v73 = *(unsigned __int8 *)(*(void *)this + v71);
              *((void *)this + 1) = v72;
              BOOL v74 = v73 != 0;
            }
            *(unsigned char *)(a1 + 180) = v74;
            goto LABEL_378;
          case 'm':
            *(void *)v8 |= 0x200000000uLL;
            unint64_t v75 = *((void *)this + 1);
            if (v75 >= *((void *)this + 2))
            {
              BOOL v78 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v76 = v75 + 1;
              int v77 = *(unsigned __int8 *)(*(void *)this + v75);
              *((void *)this + 1) = v76;
              BOOL v78 = v77 != 0;
            }
            *(unsigned char *)(a1 + 156) = v78;
            goto LABEL_378;
          case 'n':
            char v79 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 0x200u;
            *(unsigned char *)(v8 + 10) = v79;
            unint64_t v80 = *((void *)this + 1);
            if (v80 >= *((void *)this + 2))
            {
              BOOL v83 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v81 = v80 + 1;
              int v82 = *(unsigned __int8 *)(*(void *)this + v80);
              *((void *)this + 1) = v81;
              BOOL v83 = v82 != 0;
            }
            *(unsigned char *)(a1 + 196) = v83;
            goto LABEL_378;
          case 'o':
            *(void *)v8 |= 0x20000000000uLL;
            unint64_t v84 = *((void *)this + 1);
            if (v84 >= *((void *)this + 2))
            {
              BOOL v87 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v85 = v84 + 1;
              int v86 = *(unsigned __int8 *)(*(void *)this + v84);
              *((void *)this + 1) = v85;
              BOOL v87 = v86 != 0;
            }
            *(unsigned char *)(a1 + 164) = v87;
            goto LABEL_378;
          case 'p':
            *(void *)v8 |= 0x2000000000000uLL;
            unint64_t v88 = *((void *)this + 1);
            if (v88 >= *((void *)this + 2))
            {
              BOOL v91 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v89 = v88 + 1;
              int v90 = *(unsigned __int8 *)(*(void *)this + v88);
              *((void *)this + 1) = v89;
              BOOL v91 = v90 != 0;
            }
            *(unsigned char *)(a1 + 172) = v91;
            goto LABEL_378;
          case 'q':
            char v92 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 4u;
            *(unsigned char *)(v8 + 10) = v92;
            unint64_t v93 = *((void *)this + 1);
            if (v93 >= *((void *)this + 2))
            {
              BOOL v96 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v94 = v93 + 1;
              int v95 = *(unsigned __int8 *)(*(void *)this + v93);
              *((void *)this + 1) = v94;
              BOOL v96 = v95 != 0;
            }
            *(unsigned char *)(a1 + 189) = v96;
            goto LABEL_378;
          case 'r':
            *(void *)v8 |= 0x20000uLL;
            unint64_t v97 = *((void *)this + 1);
            if (v97 > 0xFFFFFFFFFFFFFFFBLL || v97 + 4 > *((void *)this + 2)) {
              goto LABEL_232;
            }
            *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(void *)this + v97);
            goto LABEL_377;
          case 's':
            *(void *)v8 |= 0x200uLL;
            unint64_t v98 = *((void *)this + 1);
            if (v98 > 0xFFFFFFFFFFFFFFFBLL || v98 + 4 > *((void *)this + 2)) {
              goto LABEL_232;
            }
            *(_DWORD *)(a1 + 60) = *(_DWORD *)(*(void *)this + v98);
            goto LABEL_377;
          case 't':
            *(void *)v8 |= 0x20000000uLL;
            unint64_t v99 = *((void *)this + 1);
            if (v99 > 0xFFFFFFFFFFFFFFFBLL || v99 + 4 > *((void *)this + 2)) {
              goto LABEL_232;
            }
            *(_DWORD *)(a1 + 140) = *(_DWORD *)(*(void *)this + v99);
            goto LABEL_377;
          case 'u':
            *(void *)v8 |= 0x2000000000000000uLL;
            unint64_t v100 = *((void *)this + 1);
            if (v100 >= *((void *)this + 2))
            {
              BOOL v103 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v101 = v100 + 1;
              int v102 = *(unsigned __int8 *)(*(void *)this + v100);
              *((void *)this + 1) = v101;
              BOOL v103 = v102 != 0;
            }
            *(unsigned char *)(a1 + 184) = v103;
            goto LABEL_378;
          case 'v':
            *(void *)v8 |= 0x2000000000uLL;
            unint64_t v104 = *((void *)this + 1);
            if (v104 >= *((void *)this + 2))
            {
              BOOL v107 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v105 = v104 + 1;
              int v106 = *(unsigned __int8 *)(*(void *)this + v104);
              *((void *)this + 1) = v105;
              BOOL v107 = v106 != 0;
            }
            *(unsigned char *)(a1 + 160) = v107;
            goto LABEL_378;
          case 'w':
            char v108 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 0x2000u;
            *(unsigned char *)(v8 + 10) = v108;
            unint64_t v109 = *((void *)this + 1);
            if (v109 >= *((void *)this + 2))
            {
              BOOL v112 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v110 = v109 + 1;
              int v111 = *(unsigned __int8 *)(*(void *)this + v109);
              *((void *)this + 1) = v110;
              BOOL v112 = v111 != 0;
            }
            *(unsigned char *)(a1 + 200) = v112;
            goto LABEL_378;
          case 'x':
            *(void *)v8 |= 0x200000000000uLL;
            unint64_t v113 = *((void *)this + 1);
            if (v113 >= *((void *)this + 2))
            {
              BOOL v116 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v114 = v113 + 1;
              int v115 = *(unsigned __int8 *)(*(void *)this + v113);
              *((void *)this + 1) = v114;
              BOOL v116 = v115 != 0;
            }
            *(unsigned char *)(a1 + 168) = v116;
            goto LABEL_378;
          case 'y':
            *(void *)v8 |= 0x20000000000000uLL;
            unint64_t v117 = *((void *)this + 1);
            if (v117 >= *((void *)this + 2))
            {
              BOOL v120 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v118 = v117 + 1;
              int v119 = *(unsigned __int8 *)(*(void *)this + v117);
              *((void *)this + 1) = v118;
              BOOL v120 = v119 != 0;
            }
            *(unsigned char *)(a1 + 176) = v120;
            goto LABEL_378;
          default:
            switch((int)v21)
            {
              case 1003:
                *(void *)v8 |= 2uLL;
                unint64_t v38 = *((void *)this + 1);
                unint64_t v39 = *((void *)this + 2);
                uint64_t v40 = *(void *)this;
                if (v38 <= 0xFFFFFFFFFFFFFFF5 && v38 + 10 <= v39)
                {
                  char v41 = 0;
                  unsigned int v42 = 0;
                  uint64_t v43 = 0;
                  do
                  {
                    unint64_t v44 = v38 + 1;
                    *((void *)this + 1) = v38 + 1;
                    char v45 = *(unsigned char *)(v40 + v38);
                    v43 |= (unint64_t)(v45 & 0x7F) << v41;
                    if ((v45 & 0x80) == 0) {
                      goto LABEL_394;
                    }
                    v41 += 7;
                    unint64_t v38 = v44;
                    BOOL v15 = v42++ > 8;
                  }
                  while (!v15);
LABEL_265:
                  uint64_t v43 = 0;
                  goto LABEL_394;
                }
                char v309 = 0;
                unsigned int v310 = 0;
                uint64_t v43 = 0;
                if (v39 <= v38) {
                  unint64_t v39 = *((void *)this + 1);
                }
                break;
              case 1004:
                *(void *)v8 |= 0x400000uLL;
                unint64_t v183 = *((void *)this + 1);
                if (v183 > 0xFFFFFFFFFFFFFFFBLL || v183 + 4 > *((void *)this + 2)) {
                  goto LABEL_232;
                }
                *(_DWORD *)(a1 + 112) = *(_DWORD *)(*(void *)this + v183);
                goto LABEL_377;
              case 1005:
                *(void *)v8 |= 0x4000uLL;
                unint64_t v184 = *((void *)this + 1);
                if (v184 > 0xFFFFFFFFFFFFFFFBLL || v184 + 4 > *((void *)this + 2)) {
                  goto LABEL_232;
                }
                *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v184);
                goto LABEL_377;
              case 1006:
                *(void *)v8 |= 0x40uLL;
                unint64_t v185 = *((void *)this + 1);
                if (v185 > 0xFFFFFFFFFFFFFFFBLL || v185 + 4 > *((void *)this + 2)) {
                  goto LABEL_232;
                }
                *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v185);
                goto LABEL_377;
              case 1007:
                *(void *)v8 |= 0x4000000uLL;
                unint64_t v186 = *((void *)this + 1);
                if (v186 > 0xFFFFFFFFFFFFFFFBLL || v186 + 4 > *((void *)this + 2)) {
                  goto LABEL_232;
                }
                *(_DWORD *)(a1 + 128) = *(_DWORD *)(*(void *)this + v186);
                goto LABEL_377;
              case 1008:
                *(void *)v8 |= 0x400000000000000uLL;
                unint64_t v187 = *((void *)this + 1);
                if (v187 >= *((void *)this + 2))
                {
                  BOOL v190 = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v188 = v187 + 1;
                  int v189 = *(unsigned __int8 *)(*(void *)this + v187);
                  *((void *)this + 1) = v188;
                  BOOL v190 = v189 != 0;
                }
                *(unsigned char *)(a1 + 181) = v190;
                goto LABEL_378;
              case 1009:
                *(void *)v8 |= 0x400000000uLL;
                unint64_t v191 = *((void *)this + 1);
                if (v191 >= *((void *)this + 2))
                {
                  BOOL v194 = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v192 = v191 + 1;
                  int v193 = *(unsigned __int8 *)(*(void *)this + v191);
                  *((void *)this + 1) = v192;
                  BOOL v194 = v193 != 0;
                }
                *(unsigned char *)(a1 + 157) = v194;
                goto LABEL_378;
              case 1010:
                char v195 = *(unsigned char *)(v8 + 10);
                *(_WORD *)(v8 + 8) |= 0x400u;
                *(unsigned char *)(v8 + 10) = v195;
                unint64_t v196 = *((void *)this + 1);
                if (v196 >= *((void *)this + 2))
                {
                  BOOL v199 = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v197 = v196 + 1;
                  int v198 = *(unsigned __int8 *)(*(void *)this + v196);
                  *((void *)this + 1) = v197;
                  BOOL v199 = v198 != 0;
                }
                *(unsigned char *)(a1 + 197) = v199;
                goto LABEL_378;
              case 1011:
                *(void *)v8 |= 0x40000000000uLL;
                unint64_t v200 = *((void *)this + 1);
                if (v200 >= *((void *)this + 2))
                {
                  BOOL v203 = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v201 = v200 + 1;
                  int v202 = *(unsigned __int8 *)(*(void *)this + v200);
                  *((void *)this + 1) = v201;
                  BOOL v203 = v202 != 0;
                }
                *(unsigned char *)(a1 + 165) = v203;
                goto LABEL_378;
              case 1012:
                *(void *)v8 |= 0x4000000000000uLL;
                unint64_t v204 = *((void *)this + 1);
                if (v204 >= *((void *)this + 2))
                {
                  BOOL v207 = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v205 = v204 + 1;
                  int v206 = *(unsigned __int8 *)(*(void *)this + v204);
                  *((void *)this + 1) = v205;
                  BOOL v207 = v206 != 0;
                }
                *(unsigned char *)(a1 + 173) = v207;
                goto LABEL_378;
              case 1013:
                char v208 = *(unsigned char *)(v8 + 10);
                *(_WORD *)(v8 + 8) |= 8u;
                *(unsigned char *)(v8 + 10) = v208;
                unint64_t v209 = *((void *)this + 1);
                if (v209 >= *((void *)this + 2))
                {
                  BOOL v212 = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v210 = v209 + 1;
                  int v211 = *(unsigned __int8 *)(*(void *)this + v209);
                  *((void *)this + 1) = v210;
                  BOOL v212 = v211 != 0;
                }
                *(unsigned char *)(a1 + 190) = v212;
                goto LABEL_378;
              case 1014:
                *(void *)v8 |= 0x40000uLL;
                unint64_t v213 = *((void *)this + 1);
                if (v213 > 0xFFFFFFFFFFFFFFFBLL || v213 + 4 > *((void *)this + 2)) {
                  goto LABEL_232;
                }
                *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v213);
                goto LABEL_377;
              case 1015:
                *(void *)v8 |= 0x400uLL;
                unint64_t v214 = *((void *)this + 1);
                if (v214 > 0xFFFFFFFFFFFFFFFBLL || v214 + 4 > *((void *)this + 2)) {
                  goto LABEL_232;
                }
                *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v214);
                goto LABEL_377;
              case 1016:
                *(void *)v8 |= 0x40000000uLL;
                unint64_t v215 = *((void *)this + 1);
                if (v215 > 0xFFFFFFFFFFFFFFFBLL || v215 + 4 > *((void *)this + 2)) {
                  goto LABEL_232;
                }
                *(_DWORD *)(a1 + 144) = *(_DWORD *)(*(void *)this + v215);
                goto LABEL_377;
              case 1017:
                *(void *)v8 |= 0x4000000000000000uLL;
                unint64_t v216 = *((void *)this + 1);
                if (v216 >= *((void *)this + 2))
                {
                  BOOL v219 = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v217 = v216 + 1;
                  int v218 = *(unsigned __int8 *)(*(void *)this + v216);
                  *((void *)this + 1) = v217;
                  BOOL v219 = v218 != 0;
                }
                *(unsigned char *)(a1 + 185) = v219;
                goto LABEL_378;
              case 1018:
                *(void *)v8 |= 0x4000000000uLL;
                unint64_t v220 = *((void *)this + 1);
                if (v220 >= *((void *)this + 2))
                {
                  BOOL v223 = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v221 = v220 + 1;
                  int v222 = *(unsigned __int8 *)(*(void *)this + v220);
                  *((void *)this + 1) = v221;
                  BOOL v223 = v222 != 0;
                }
                *(unsigned char *)(a1 + 161) = v223;
                goto LABEL_378;
              case 1019:
                char v224 = *(unsigned char *)(v8 + 10);
                *(_WORD *)(v8 + 8) |= 0x4000u;
                *(unsigned char *)(v8 + 10) = v224;
                unint64_t v225 = *((void *)this + 1);
                if (v225 >= *((void *)this + 2))
                {
                  BOOL v228 = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v226 = v225 + 1;
                  int v227 = *(unsigned __int8 *)(*(void *)this + v225);
                  *((void *)this + 1) = v226;
                  BOOL v228 = v227 != 0;
                }
                *(unsigned char *)(a1 + 201) = v228;
                goto LABEL_378;
              case 1020:
                *(void *)v8 |= 0x400000000000uLL;
                unint64_t v229 = *((void *)this + 1);
                if (v229 >= *((void *)this + 2))
                {
                  BOOL v232 = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v230 = v229 + 1;
                  int v231 = *(unsigned __int8 *)(*(void *)this + v229);
                  *((void *)this + 1) = v230;
                  BOOL v232 = v231 != 0;
                }
                *(unsigned char *)(a1 + 169) = v232;
                goto LABEL_378;
              case 1021:
                *(void *)v8 |= 0x40000000000000uLL;
                unint64_t v233 = *((void *)this + 1);
                if (v233 >= *((void *)this + 2))
                {
                  BOOL v236 = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v234 = v233 + 1;
                  int v235 = *(unsigned __int8 *)(*(void *)this + v233);
                  *((void *)this + 1) = v234;
                  BOOL v236 = v235 != 0;
                }
                *(unsigned char *)(a1 + 177) = v236;
                goto LABEL_378;
              case 1022:
                char v237 = *(unsigned char *)(v8 + 10);
                *(_WORD *)(v8 + 8) |= 0x40u;
                *(unsigned char *)(v8 + 10) = v237;
                unint64_t v238 = *((void *)this + 1);
                if (v238 >= *((void *)this + 2))
                {
                  BOOL v241 = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v239 = v238 + 1;
                  int v240 = *(unsigned __int8 *)(*(void *)this + v238);
                  *((void *)this + 1) = v239;
                  BOOL v241 = v240 != 0;
                }
                *(unsigned char *)(a1 + 193) = v241;
                goto LABEL_378;
              default:
                goto LABEL_153;
            }
            break;
        }
        while (1)
        {
          if (v39 == v38)
          {
            uint64_t v43 = 0;
            *((unsigned char *)this + 24) = 1;
            goto LABEL_394;
          }
          unint64_t v311 = v38 + 1;
          char v312 = *(unsigned char *)(v40 + v38);
          *((void *)this + 1) = v311;
          v43 |= (unint64_t)(v312 & 0x7F) << v309;
          if ((v312 & 0x80) == 0) {
            break;
          }
          v309 += 7;
          unint64_t v38 = v311;
          BOOL v15 = v310++ > 8;
          if (v15) {
            goto LABEL_265;
          }
        }
        if (*((unsigned char *)this + 24)) {
          uint64_t v43 = 0;
        }
LABEL_394:
        *(void *)(a1 + 16) = v43;
      }
LABEL_378:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v16 = 0;
    unsigned int v17 = 0;
    unint64_t v12 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v18 = v2 + 1;
      char v19 = *(unsigned char *)(v9 + v2);
      *((void *)this + 1) = v18;
      v12 |= (unint64_t)(v19 & 0x7F) << v16;
      if ((v19 & 0x80) == 0) {
        goto LABEL_21;
      }
      v16 += 7;
      unint64_t v2 = v18;
      if (v17++ >= 9)
      {
LABEL_20:
        unint64_t v12 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101697228(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  uint64_t v4 = *(void *)(result + 204);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(result + 8), 0x65u);
    int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
    uint64_t v4 = *(void *)(v3 + 204);
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v5 = *(unsigned __int16 *)(result + 212) | (*(unsigned __int8 *)(result + 214) << 16);
  if ((v4 & 0x10) != 0)
  {
LABEL_5:
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 40), 0x66u);
    int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
    uint64_t v4 = *(void *)(v3 + 204);
  }
LABEL_6:
  if ((v5 & 2) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 188), 0x67u);
    int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
    uint64_t v4 = *(void *)(v3 + 204);
    if ((v4 & 0x200000) == 0)
    {
LABEL_8:
      if ((v4 & 0x2000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_88;
    }
  }
  else if ((v4 & 0x200000) == 0)
  {
    goto LABEL_8;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 108), 0x68u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x2000) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_89;
  }
LABEL_88:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76), 0x69u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x20) == 0)
  {
LABEL_10:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_90;
  }
LABEL_89:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44), 0x6Au);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_11:
    if ((v4 & 0x200000000000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_91;
  }
LABEL_90:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 124), 0x6Bu);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x200000000000000) == 0)
  {
LABEL_12:
    if ((v4 & 0x200000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_92;
  }
LABEL_91:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 180), 0x6Cu);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x200000000) == 0)
  {
LABEL_13:
    if ((v5 & 0x200) == 0) {
      goto LABEL_14;
    }
    goto LABEL_93;
  }
LABEL_92:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 156), 0x6Du);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x200) == 0)
  {
LABEL_14:
    if ((v4 & 0x20000000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_94;
  }
LABEL_93:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 196), 0x6Eu);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x20000000000) == 0)
  {
LABEL_15:
    if ((v4 & 0x2000000000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_95;
  }
LABEL_94:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 164), 0x6Fu);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x2000000000000) == 0)
  {
LABEL_16:
    if ((v5 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_96;
  }
LABEL_95:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 172), 0x70u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 4) == 0)
  {
LABEL_17:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_97;
  }
LABEL_96:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 189), 0x71u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x20000) == 0)
  {
LABEL_18:
    if ((v4 & 0x200) == 0) {
      goto LABEL_19;
    }
    goto LABEL_98;
  }
LABEL_97:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 92), 0x72u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x200) == 0)
  {
LABEL_19:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_99;
  }
LABEL_98:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 60), 0x73u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_20:
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_100;
  }
LABEL_99:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 140), 0x74u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x2000000000000000) == 0)
  {
LABEL_21:
    if ((v4 & 0x2000000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_101;
  }
LABEL_100:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 184), 0x75u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x2000000000) == 0)
  {
LABEL_22:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_102;
  }
LABEL_101:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 160), 0x76u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x2000) == 0)
  {
LABEL_23:
    if ((v4 & 0x200000000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_103;
  }
LABEL_102:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 200), 0x77u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x200000000000) == 0)
  {
LABEL_24:
    if ((v4 & 0x20000000000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_104;
  }
LABEL_103:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 168), 0x78u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x20000000000000) == 0)
  {
LABEL_25:
    if ((v4 & 2) == 0) {
      goto LABEL_26;
    }
    goto LABEL_105;
  }
LABEL_104:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 176), 0x79u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 2) == 0)
  {
LABEL_26:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_106;
  }
LABEL_105:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 16), 0x3EBu);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x400000) == 0)
  {
LABEL_27:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_107;
  }
LABEL_106:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 112), 0x3ECu);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x4000) == 0)
  {
LABEL_28:
    if ((v4 & 0x40) == 0) {
      goto LABEL_29;
    }
    goto LABEL_108;
  }
LABEL_107:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80), 0x3EDu);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x40) == 0)
  {
LABEL_29:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_109;
  }
LABEL_108:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48), 0x3EEu);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_30:
    if ((v4 & 0x400000000000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_110;
  }
LABEL_109:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 128), 0x3EFu);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x400000000000000) == 0)
  {
LABEL_31:
    if ((v4 & 0x400000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_111;
  }
LABEL_110:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 181), 0x3F0u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x400000000) == 0)
  {
LABEL_32:
    if ((v5 & 0x400) == 0) {
      goto LABEL_33;
    }
    goto LABEL_112;
  }
LABEL_111:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 157), 0x3F1u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x400) == 0)
  {
LABEL_33:
    if ((v4 & 0x40000000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_113;
  }
LABEL_112:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 197), 0x3F2u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x40000000000) == 0)
  {
LABEL_34:
    if ((v4 & 0x4000000000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_114;
  }
LABEL_113:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 165), 0x3F3u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x4000000000000) == 0)
  {
LABEL_35:
    if ((v5 & 8) == 0) {
      goto LABEL_36;
    }
    goto LABEL_115;
  }
LABEL_114:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 173), 0x3F4u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 8) == 0)
  {
LABEL_36:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_116;
  }
LABEL_115:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 190), 0x3F5u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x40000) == 0)
  {
LABEL_37:
    if ((v4 & 0x400) == 0) {
      goto LABEL_38;
    }
    goto LABEL_117;
  }
LABEL_116:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 96), 0x3F6u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x400) == 0)
  {
LABEL_38:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_118;
  }
LABEL_117:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64), 0x3F7u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x40000000) == 0)
  {
LABEL_39:
    if ((v4 & 0x4000000000000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_119;
  }
LABEL_118:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 144), 0x3F8u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x4000000000000000) == 0)
  {
LABEL_40:
    if ((v4 & 0x4000000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_120;
  }
LABEL_119:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 185), 0x3F9u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x4000000000) == 0)
  {
LABEL_41:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_121;
  }
LABEL_120:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 161), 0x3FAu);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x4000) == 0)
  {
LABEL_42:
    if ((v4 & 0x400000000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_122;
  }
LABEL_121:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 201), 0x3FBu);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x400000000000) == 0)
  {
LABEL_43:
    if ((v4 & 0x40000000000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_123;
  }
LABEL_122:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 169), 0x3FCu);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x40000000000000) == 0)
  {
LABEL_44:
    if ((v5 & 0x40) == 0) {
      goto LABEL_45;
    }
    goto LABEL_124;
  }
LABEL_123:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 177), 0x3FDu);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x40) == 0)
  {
LABEL_45:
    if ((v4 & 4) == 0) {
      goto LABEL_46;
    }
    goto LABEL_125;
  }
LABEL_124:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 193), 0x3FEu);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 4) == 0)
  {
LABEL_46:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_126;
  }
LABEL_125:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 24), 0x44Fu);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x800000) == 0)
  {
LABEL_47:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_127;
  }
LABEL_126:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 116), 0x450u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x8000) == 0)
  {
LABEL_48:
    if ((v4 & 0x80) == 0) {
      goto LABEL_49;
    }
    goto LABEL_128;
  }
LABEL_127:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 84), 0x451u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x80) == 0)
  {
LABEL_49:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_129;
  }
LABEL_128:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52), 0x452u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_50:
    if ((v4 & 0x800000000000000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_130;
  }
LABEL_129:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 132), 0x453u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x800000000000000) == 0)
  {
LABEL_51:
    if ((v4 & 0x800000000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_131;
  }
LABEL_130:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 182), 0x454u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x800000000) == 0)
  {
LABEL_52:
    if ((v5 & 0x800) == 0) {
      goto LABEL_53;
    }
    goto LABEL_132;
  }
LABEL_131:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 158), 0x455u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x800) == 0)
  {
LABEL_53:
    if ((v4 & 0x80000000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_133;
  }
LABEL_132:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 198), 0x456u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x80000000000) == 0)
  {
LABEL_54:
    if ((v4 & 0x8000000000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_134;
  }
LABEL_133:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 166), 0x457u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x8000000000000) == 0)
  {
LABEL_55:
    if ((v5 & 0x10) == 0) {
      goto LABEL_56;
    }
    goto LABEL_135;
  }
LABEL_134:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 174), 0x458u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x10) == 0)
  {
LABEL_56:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_136;
  }
LABEL_135:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 191), 0x459u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x80000) == 0)
  {
LABEL_57:
    if ((v4 & 0x800) == 0) {
      goto LABEL_58;
    }
    goto LABEL_137;
  }
LABEL_136:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 100), 0x45Au);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x800) == 0)
  {
LABEL_58:
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_138;
  }
LABEL_137:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 68), 0x45Bu);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x80000000) == 0)
  {
LABEL_59:
    if ((v4 & 0x8000000000000000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_139;
  }
LABEL_138:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 148), 0x45Cu);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x8000000000000000) == 0)
  {
LABEL_60:
    if ((v4 & 0x8000000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_140;
  }
LABEL_139:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 186), 0x45Du);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x8000000000) == 0)
  {
LABEL_61:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_141;
  }
LABEL_140:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 162), 0x45Eu);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x8000) == 0)
  {
LABEL_62:
    if ((v4 & 0x800000000000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_142;
  }
LABEL_141:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 202), 0x45Fu);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x800000000000) == 0)
  {
LABEL_63:
    if ((v4 & 0x80000000000000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_143;
  }
LABEL_142:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 170), 0x460u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x80000000000000) == 0)
  {
LABEL_64:
    if ((v5 & 0x80) == 0) {
      goto LABEL_65;
    }
    goto LABEL_144;
  }
LABEL_143:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 178), 0x461u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x80) == 0)
  {
LABEL_65:
    if ((v4 & 8) == 0) {
      goto LABEL_66;
    }
    goto LABEL_145;
  }
LABEL_144:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 194), 0x462u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 8) == 0)
  {
LABEL_66:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_146;
  }
LABEL_145:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 32), 0x4B3u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_67:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_147;
  }
LABEL_146:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 120), 0x4B4u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x10000) == 0)
  {
LABEL_68:
    if ((v4 & 0x100) == 0) {
      goto LABEL_69;
    }
    goto LABEL_148;
  }
LABEL_147:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 88), 0x4B5u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x100) == 0)
  {
LABEL_69:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_149;
  }
LABEL_148:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56), 0x4B6u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_70:
    if ((v4 & 0x1000000000000000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_150;
  }
LABEL_149:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 136), 0x4B7u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x1000000000000000) == 0)
  {
LABEL_71:
    if ((v4 & 0x1000000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_151;
  }
LABEL_150:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 183), 0x4B8u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x1000000000) == 0)
  {
LABEL_72:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_152;
  }
LABEL_151:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 159), 0x4B9u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x1000) == 0)
  {
LABEL_73:
    if ((v4 & 0x100000000000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_153;
  }
LABEL_152:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 199), 0x4BAu);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x100000000000) == 0)
  {
LABEL_74:
    if ((v4 & 0x10000000000000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_154;
  }
LABEL_153:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 167), 0x4BBu);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x10000000000000) == 0)
  {
LABEL_75:
    if ((v5 & 0x20) == 0) {
      goto LABEL_76;
    }
    goto LABEL_155;
  }
LABEL_154:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 175), 0x4BCu);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x20) == 0)
  {
LABEL_76:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_156;
  }
LABEL_155:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 192), 0x4BDu);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x100000) == 0)
  {
LABEL_77:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_157;
  }
LABEL_156:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 104), 0x4BEu);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x1000) == 0)
  {
LABEL_78:
    if ((v4 & 0x100000000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_158;
  }
LABEL_157:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72), 0x4BFu);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x100000000) == 0)
  {
LABEL_79:
    if ((v5 & 1) == 0) {
      goto LABEL_80;
    }
    goto LABEL_159;
  }
LABEL_158:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 152), 0x4C0u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 1) == 0)
  {
LABEL_80:
    if ((v4 & 0x10000000000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_160;
  }
LABEL_159:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 187), 0x4C1u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x10000000000) == 0)
  {
LABEL_81:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_161;
  }
LABEL_160:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 163), 0x4C2u);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v5 & 0x10000) == 0)
  {
LABEL_82:
    if ((v4 & 0x1000000000000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_162;
  }
LABEL_161:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 203), 0x4C3u);
  LOWORD(v5) = *(_WORD *)(v3 + 212);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x1000000000000) == 0)
  {
LABEL_83:
    if ((v4 & 0x100000000000000) == 0) {
      goto LABEL_84;
    }
LABEL_163:
    uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 179), 0x4C5u);
    if ((*(_WORD *)(v3 + 212) & 0x100) == 0) {
      return result;
    }
    goto LABEL_164;
  }
LABEL_162:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 171), 0x4C4u);
  LOWORD(v5) = *(_WORD *)(v3 + 212);
  if ((*(void *)(v3 + 204) & 0x100000000000000) != 0) {
    goto LABEL_163;
  }
LABEL_84:
  if ((v5 & 0x100) == 0) {
    return result;
  }
LABEL_164:
  char v6 = *(unsigned char *)(v3 + 195);

  return PB::Writer::write(this, v6, 0x4C6u);
}

uint64_t sub_101697F04(uint64_t result)
{
  *(void *)uint64_t result = &off_102334210;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void sub_101697F2C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_101697F64(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102334210;
  *(_DWORD *)(result + 32) = 0;
  char v2 = *(unsigned char *)(a2 + 32);
  if ((v2 & 2) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 16);
    char v3 = 2;
    *(unsigned char *)(result + 32) = 2;
    *(void *)(result + 16) = v4;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if (*(unsigned char *)(a2 + 32))
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 8);
    v3 |= 1u;
    *(unsigned char *)(result + 32) = v3;
    *(void *)(result + 8) = v5;
    char v2 = *(unsigned char *)(a2 + 32);
  }
LABEL_6:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      return result;
    }
LABEL_10:
    int v7 = *(_DWORD *)(a2 + 28);
    *(unsigned char *)(result + 32) = v3 | 8;
    *(_DWORD *)(result + 28) = v7;
    return result;
  }
  int v6 = *(_DWORD *)(a2 + 24);
  v3 |= 4u;
  *(unsigned char *)(result + 32) = v3;
  *(_DWORD *)(result + 24) = v6;
  if ((*(unsigned char *)(a2 + 32) & 8) != 0) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_101698000(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "distanceToNearestRoad", *(float *)(a1 + 24));
    char v5 = *(unsigned char *)(a1 + 32);
    if ((v5 & 8) == 0)
    {
LABEL_3:
      if ((v5 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a1 + 32) & 8) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "roadClass", *(_DWORD *)(a1 + 28));
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 1) == 0)
  {
LABEL_4:
    if ((v5 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(this, "searchTimestamp", *(void *)(a1 + 8));
  if ((*(unsigned char *)(a1 + 32) & 2) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 16));
LABEL_6:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_1016980C4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 32) |= 2u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v39 = 0;
                unsigned int v40 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_74;
                  }
                  unint64_t v41 = v20++;
                  char v42 = *(unsigned char *)(v21 + v41);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v42 & 0x7F) << v39;
                  if ((v42 & 0x80) == 0) {
                    break;
                  }
                  v39 += 7;
                  BOOL v14 = v40++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
                    goto LABEL_73;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
LABEL_73:
                unint64_t v2 = v41 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_74;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                uint64_t v24 = 0;
              }
LABEL_74:
              *(void *)(a1 + 16) = v24;
              goto LABEL_85;
            case 2u:
              *(unsigned char *)(a1 + 32) |= 1u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v43 = 0;
                unsigned int v44 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    uint64_t v31 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_79;
                  }
                  unint64_t v45 = v27++;
                  char v46 = *(unsigned char *)(v28 + v45);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v46 & 0x7F) << v43;
                  if ((v46 & 0x80) == 0) {
                    break;
                  }
                  v43 += 7;
                  BOOL v14 = v44++ > 8;
                  if (v14)
                  {
                    uint64_t v31 = 0;
LABEL_78:
                    unint64_t v2 = v45 + 1;
                    goto LABEL_79;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v31 = 0;
                }
                goto LABEL_78;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_79;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              uint64_t v31 = 0;
LABEL_79:
              *(void *)(a1 + 8) = v31;
              goto LABEL_85;
            case 3u:
              *(unsigned char *)(a1 + 32) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_85;
            case 4u:
              *(unsigned char *)(a1 + 32) |= 8u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v47 = 0;
                unsigned int v48 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_84;
                  }
                  unint64_t v49 = v33++;
                  char v50 = *(unsigned char *)(v34 + v49);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v50 & 0x7F) << v47;
                  if ((v50 & 0x80) == 0) {
                    break;
                  }
                  v47 += 7;
                  BOOL v14 = v48++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_83:
                    unint64_t v2 = v49 + 1;
                    goto LABEL_84;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_83;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_84;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              LODWORD(v37) = 0;
LABEL_84:
              *(_DWORD *)(a1 + 28) = v37;
LABEL_85:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_85;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_101698558(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 32);
  if ((v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(result + 16), 1u);
    char v4 = *(unsigned char *)(v3 + 32);
    if ((v4 & 1) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24), 3u);
      if ((*(unsigned char *)(v3 + 32) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 32) & 1) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 8), 2u);
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 8) == 0) {
    return result;
  }
LABEL_9:
  unsigned int v5 = *(_DWORD *)(v3 + 28);

  return PB::Writer::writeVarInt(this, v5, 4u);
}

uint64_t sub_101698600(uint64_t result)
{
  *(void *)uint64_t result = &off_102334248;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void sub_101698628(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_101698660(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102334248;
  *(_DWORD *)(result + 40) = 0;
  char v2 = *(unsigned char *)(a2 + 40);
  if ((v2 & 4) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 24);
    char v3 = 4;
    *(unsigned char *)(result + 40) = 4;
    *(void *)(result + 24) = v4;
    char v2 = *(unsigned char *)(a2 + 40);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 40) & 8) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 32);
    v3 |= 8u;
    *(unsigned char *)(result + 40) = v3;
    *(_DWORD *)(result + 32) = v5;
    char v2 = *(unsigned char *)(a2 + 40);
  }
LABEL_6:
  if ((v2 & 0x10) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 36);
    v3 |= 0x10u;
    *(unsigned char *)(result + 40) = v3;
    *(_DWORD *)(result + 36) = v6;
    char v2 = *(unsigned char *)(a2 + 40);
    if ((v2 & 1) == 0)
    {
LABEL_8:
      if ((v2 & 2) == 0) {
        return result;
      }
LABEL_12:
      uint64_t v8 = *(void *)(a2 + 16);
      *(unsigned char *)(result + 40) = v3 | 2;
      *(void *)(result + 16) = v8;
      return result;
    }
  }
  else if ((v2 & 1) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(unsigned char *)(result + 40) = v3;
  *(void *)(result + 8) = v7;
  if ((*(unsigned char *)(a2 + 40) & 2) != 0) {
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_101698718(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 8) != 0)
  {
    PB::TextFormatter::format(this, "distanceToNearestRoad", *(float *)(a1 + 32));
    char v5 = *(unsigned char *)(a1 + 40);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a1 + 40) & 1) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "epochFirstTimestamp", *(void *)(a1 + 8));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 2) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(this, "epochLastTimestamp", *(void *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 4) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(this, "roadClass", *(_DWORD *)(a1 + 36));
  if ((*(unsigned char *)(a1 + 40) & 4) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 24));
LABEL_7:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_1016987FC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  for (int i = *((unsigned __int8 *)this + 24); v2 < v3 && i == 0; int i = *((unsigned __int8 *)this + 24))
  {
    uint64_t v8 = *(void *)this;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      while (v3 != v2)
      {
        unint64_t v17 = v2 + 1;
        char v18 = *(unsigned char *)(v8 + v2);
        *((void *)this + 1) = v17;
        v11 |= (unint64_t)(v18 & 0x7F) << v15;
        if ((v18 & 0x80) == 0) {
          goto LABEL_20;
        }
        v15 += 7;
        unint64_t v2 = v17;
        if (v16++ >= 9)
        {
LABEL_19:
          unint64_t v11 = 0;
          goto LABEL_20;
        }
      }
      int i = 1;
      *((unsigned char *)this + 24) = 1;
      return i == 0;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)this + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
LABEL_20:
    if ((v11 & 7) == 4)
    {
      int i = 0;
      return i == 0;
    }
    unint64_t v20 = v11 >> 3;
    if ((int)(v11 >> 3) <= 103)
    {
      if (v20 == 101)
      {
        *(unsigned char *)(a1 + 40) |= 4u;
        unint64_t v39 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v40 = *(void *)this;
        if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
        {
          char v58 = 0;
          unsigned int v59 = 0;
          uint64_t v43 = 0;
          if (v2 <= v39) {
            unint64_t v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v39)
            {
              uint64_t v43 = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_108;
            }
            unint64_t v60 = v39++;
            char v61 = *(unsigned char *)(v40 + v60);
            *((void *)this + 1) = v39;
            v43 |= (unint64_t)(v61 & 0x7F) << v58;
            if ((v61 & 0x80) == 0) {
              break;
            }
            v58 += 7;
            BOOL v14 = v59++ > 8;
            if (v14)
            {
              uint64_t v43 = 0;
              goto LABEL_107;
            }
          }
          if (*((unsigned char *)this + 24)) {
            uint64_t v43 = 0;
          }
LABEL_107:
          unint64_t v2 = v60 + 1;
        }
        else
        {
          char v41 = 0;
          unsigned int v42 = 0;
          uint64_t v43 = 0;
          while (1)
          {
            unint64_t v2 = v39 + 1;
            *((void *)this + 1) = v39 + 1;
            char v44 = *(unsigned char *)(v40 + v39);
            v43 |= (unint64_t)(v44 & 0x7F) << v41;
            if ((v44 & 0x80) == 0) {
              break;
            }
            v41 += 7;
            unint64_t v39 = v2;
            BOOL v14 = v42++ > 8;
            if (v14)
            {
              uint64_t v43 = 0;
              break;
            }
          }
        }
LABEL_108:
        *(void *)(a1 + 24) = v43;
      }
      else
      {
        if (v20 != 103)
        {
LABEL_58:
          uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          goto LABEL_109;
        }
        *(unsigned char *)(a1 + 40) |= 8u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
        {
          *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 4;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
    }
    else
    {
      switch(v20)
      {
        case 0x68:
          *(unsigned char *)(a1 + 40) |= 0x10u;
          unint64_t v27 = *((void *)this + 1);
          unint64_t v2 = *((void *)this + 2);
          uint64_t v28 = *(void *)this;
          if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
          {
            char v50 = 0;
            unsigned int v51 = 0;
            uint64_t v31 = 0;
            if (v2 <= v27) {
              unint64_t v2 = *((void *)this + 1);
            }
            while (1)
            {
              if (v2 == v27)
              {
                LODWORD(v31) = 0;
                *((unsigned char *)this + 24) = 1;
                goto LABEL_98;
              }
              unint64_t v52 = v27++;
              char v53 = *(unsigned char *)(v28 + v52);
              *((void *)this + 1) = v27;
              v31 |= (unint64_t)(v53 & 0x7F) << v50;
              if ((v53 & 0x80) == 0) {
                break;
              }
              v50 += 7;
              BOOL v14 = v51++ > 8;
              if (v14)
              {
                LODWORD(v31) = 0;
                goto LABEL_97;
              }
            }
            if (*((unsigned char *)this + 24)) {
              LODWORD(v31) = 0;
            }
LABEL_97:
            unint64_t v2 = v52 + 1;
          }
          else
          {
            char v29 = 0;
            unsigned int v30 = 0;
            uint64_t v31 = 0;
            while (1)
            {
              unint64_t v2 = v27 + 1;
              *((void *)this + 1) = v27 + 1;
              char v32 = *(unsigned char *)(v28 + v27);
              v31 |= (unint64_t)(v32 & 0x7F) << v29;
              if ((v32 & 0x80) == 0) {
                break;
              }
              v29 += 7;
              unint64_t v27 = v2;
              BOOL v14 = v30++ > 8;
              if (v14)
              {
                LODWORD(v31) = 0;
                break;
              }
            }
          }
LABEL_98:
          *(_DWORD *)(a1 + 36) = v31;
          break;
        case 0xC9:
          *(unsigned char *)(a1 + 40) |= 1u;
          unint64_t v33 = *((void *)this + 1);
          unint64_t v2 = *((void *)this + 2);
          uint64_t v34 = *(void *)this;
          if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
          {
            char v54 = 0;
            unsigned int v55 = 0;
            uint64_t v37 = 0;
            if (v2 <= v33) {
              unint64_t v2 = *((void *)this + 1);
            }
            while (1)
            {
              if (v2 == v33)
              {
                uint64_t v37 = 0;
                *((unsigned char *)this + 24) = 1;
                goto LABEL_103;
              }
              unint64_t v56 = v33++;
              char v57 = *(unsigned char *)(v34 + v56);
              *((void *)this + 1) = v33;
              v37 |= (unint64_t)(v57 & 0x7F) << v54;
              if ((v57 & 0x80) == 0) {
                break;
              }
              v54 += 7;
              BOOL v14 = v55++ > 8;
              if (v14)
              {
                uint64_t v37 = 0;
                goto LABEL_102;
              }
            }
            if (*((unsigned char *)this + 24)) {
              uint64_t v37 = 0;
            }
LABEL_102:
            unint64_t v2 = v56 + 1;
          }
          else
          {
            char v35 = 0;
            unsigned int v36 = 0;
            uint64_t v37 = 0;
            while (1)
            {
              unint64_t v2 = v33 + 1;
              *((void *)this + 1) = v33 + 1;
              char v38 = *(unsigned char *)(v34 + v33);
              v37 |= (unint64_t)(v38 & 0x7F) << v35;
              if ((v38 & 0x80) == 0) {
                break;
              }
              v35 += 7;
              unint64_t v33 = v2;
              BOOL v14 = v36++ > 8;
              if (v14)
              {
                uint64_t v37 = 0;
                break;
              }
            }
          }
LABEL_103:
          *(void *)(a1 + 8) = v37;
          break;
        case 0xCA:
          *(unsigned char *)(a1 + 40) |= 2u;
          unint64_t v21 = *((void *)this + 1);
          unint64_t v2 = *((void *)this + 2);
          uint64_t v22 = *(void *)this;
          if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
          {
            char v46 = 0;
            unsigned int v47 = 0;
            uint64_t v25 = 0;
            if (v2 <= v21) {
              unint64_t v2 = *((void *)this + 1);
            }
            while (1)
            {
              if (v2 == v21)
              {
                uint64_t v25 = 0;
                *((unsigned char *)this + 24) = 1;
                goto LABEL_93;
              }
              unint64_t v48 = v21++;
              char v49 = *(unsigned char *)(v22 + v48);
              *((void *)this + 1) = v21;
              v25 |= (unint64_t)(v49 & 0x7F) << v46;
              if ((v49 & 0x80) == 0) {
                break;
              }
              v46 += 7;
              BOOL v14 = v47++ > 8;
              if (v14)
              {
                uint64_t v25 = 0;
                goto LABEL_92;
              }
            }
            if (*((unsigned char *)this + 24)) {
              uint64_t v25 = 0;
            }
LABEL_92:
            unint64_t v2 = v48 + 1;
          }
          else
          {
            char v23 = 0;
            unsigned int v24 = 0;
            uint64_t v25 = 0;
            while (1)
            {
              unint64_t v2 = v21 + 1;
              *((void *)this + 1) = v21 + 1;
              char v26 = *(unsigned char *)(v22 + v21);
              v25 |= (unint64_t)(v26 & 0x7F) << v23;
              if ((v26 & 0x80) == 0) {
                break;
              }
              v23 += 7;
              unint64_t v21 = v2;
              BOOL v14 = v24++ > 8;
              if (v14)
              {
                uint64_t v25 = 0;
                break;
              }
            }
          }
LABEL_93:
          *(void *)(a1 + 16) = v25;
          break;
        default:
          goto LABEL_58;
      }
    }
LABEL_109:
    unint64_t v3 = *((void *)this + 2);
  }
  return i == 0;
}

uint64_t sub_101698D70(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 40);
  if ((v4 & 4) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(result + 24), 0x65u);
    char v4 = *(unsigned char *)(v3 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 40) & 8) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32), 0x67u);
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 0x10) == 0)
  {
LABEL_4:
    if ((v4 & 1) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 8), 0xC9u);
    if ((*(unsigned char *)(v3 + 40) & 2) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 36), 0x68u);
  char v4 = *(unsigned char *)(v3 + 40);
  if (v4) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_11:
  unint64_t v5 = *(void *)(v3 + 16);

  return PB::Writer::writeVarInt(this, v5, 0xCAu);
}

uint64_t sub_101698E34(uint64_t result)
{
  *(void *)uint64_t result = &off_102334280;
  *(_DWORD *)(result + 324) = 0;
  *(void *)(result + 316) = 0;
  return result;
}

void sub_101698E64(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

float sub_101698E9C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102334280;
  unint64_t v2 = (uint64_t *)(a1 + 316);
  *(_DWORD *)(a1 + 324) = 0;
  *(void *)(a1 + 316) = 0;
  uint64_t v3 = (uint64_t *)(a2 + 316);
  uint64_t v4 = *(void *)(a2 + 316);
  if (v4)
  {
    unint64_t v6 = 0;
    unint64_t v8 = *(void *)(a2 + 8);
    *(unsigned char *)(a1 + 326) = 0;
    *(_WORD *)(a1 + 324) = 0;
    uint64_t v5 = 1;
    *unint64_t v2 = 1;
    *(void *)(a1 + 8) = v8;
    LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
    uint64_t v4 = *v3;
    if ((*(_WORD *)(a2 + 324) & 0x8000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v5 = 0;
  unint64_t v6 = 0;
  int v7 = *(unsigned __int16 *)(a2 + 324);
  LODWORD(v8) = v7 | (*(unsigned __int8 *)(a2 + 326) << 16);
  if ((v7 & 0x8000) != 0)
  {
LABEL_5:
    char v9 = *(unsigned char *)(a2 + 310);
    unint64_t v6 = 0x8000;
    *unint64_t v2 = v5;
    *(unsigned char *)(a1 + 326) = 0;
    *(_WORD *)(a1 + 324) = 0x8000;
    *(unsigned char *)(a1 + 310) = v9;
    LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
    uint64_t v4 = *v3;
  }
LABEL_6:
  if ((v8 & 0x10000) != 0)
  {
    char v10 = *(unsigned char *)(a2 + 311);
    *(_WORD *)(a1 + 324) = v6;
    v6 |= 0x10000uLL;
    *unint64_t v2 = v5;
    *(unsigned char *)(a1 + 326) = BYTE2(v6);
    *(unsigned char *)(a1 + 311) = v10;
    LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
    uint64_t v4 = *v3;
    if ((*v3 & 0x40000000000) == 0)
    {
LABEL_8:
      if ((v4 & 0x40000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_90;
    }
  }
  else if ((v4 & 0x40000000000) == 0)
  {
    goto LABEL_8;
  }
  float result = *(float *)(a2 + 180);
  v5 |= 0x40000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 180) = result;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 0x40000) == 0)
  {
LABEL_9:
    if ((v8 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_91;
  }
LABEL_90:
  float result = *(float *)(a2 + 84);
  v5 |= 0x40000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 84) = result;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*(_WORD *)(a2 + 324) & 8) == 0)
  {
LABEL_10:
    if ((v8 & 0x2000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_92;
  }
LABEL_91:
  float result = *(float *)(a2 + 280);
  unint64_t v8 = v6 >> 16;
  v6 |= 8uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 326) = v8;
  *(_WORD *)(a1 + 324) = v6;
  *(float *)(a1 + 280) = result;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*(_WORD *)(a2 + 324) & 0x2000) == 0)
  {
LABEL_11:
    if ((v8 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_93;
  }
LABEL_92:
  char v12 = *(unsigned char *)(a2 + 308);
  unint64_t v13 = v6 >> 16;
  v6 |= 0x2000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 326) = v13;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 308) = v12;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*(_WORD *)(a2 + 324) & 0x400) == 0)
  {
LABEL_12:
    if ((v8 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_94;
  }
LABEL_93:
  char v14 = *(unsigned char *)(a2 + 305);
  unint64_t v15 = v6 >> 16;
  v6 |= 0x400uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 326) = v15;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 305) = v14;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*(_WORD *)(a2 + 324) & 0x200) == 0)
  {
LABEL_13:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_95;
  }
LABEL_94:
  char v16 = *(unsigned char *)(a2 + 304);
  unint64_t v17 = v6 >> 16;
  v6 |= 0x200uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 326) = v17;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 304) = v16;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 0x2000000) == 0)
  {
LABEL_14:
    if ((v8 & 0x1000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_96;
  }
LABEL_95:
  int v18 = *(_DWORD *)(a2 + 112);
  v5 |= 0x2000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(_DWORD *)(a1 + 112) = v18;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*(_WORD *)(a2 + 324) & 0x1000) == 0)
  {
LABEL_15:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_97;
  }
LABEL_96:
  char v19 = *(unsigned char *)(a2 + 307);
  unint64_t v20 = v6 >> 16;
  v6 |= 0x1000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 326) = v20;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 307) = v19;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 0x1000000) == 0)
  {
LABEL_16:
    if ((v4 & 0x2000000000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_98;
  }
LABEL_97:
  float result = *(float *)(a2 + 108);
  v5 |= 0x1000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 108) = result;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 0x2000000000000) == 0)
  {
LABEL_17:
    if ((v4 & 0x1000000000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_99;
  }
LABEL_98:
  float result = *(float *)(a2 + 208);
  v5 |= 0x2000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 208) = result;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 0x1000000000000) == 0)
  {
LABEL_18:
    if ((v4 & 0x4000000000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_100;
  }
LABEL_99:
  float result = *(float *)(a2 + 204);
  v5 |= 0x1000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 204) = result;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 0x4000000000000) == 0)
  {
LABEL_19:
    if ((v4 & 0x40) == 0) {
      goto LABEL_20;
    }
    goto LABEL_101;
  }
LABEL_100:
  float result = *(float *)(a2 + 212);
  v5 |= 0x4000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 212) = result;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 0x40) == 0)
  {
LABEL_20:
    if ((v4 & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_102;
  }
LABEL_101:
  float result = *(float *)(a2 + 36);
  v5 |= 0x40uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 36) = result;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 2) == 0)
  {
LABEL_21:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_103;
  }
LABEL_102:
  float result = *(float *)(a2 + 16);
  v5 |= 2uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 16) = result;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 0x8000) == 0)
  {
LABEL_22:
    if ((v8 & 0x40000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_104;
  }
LABEL_103:
  float result = *(float *)(a2 + 72);
  v5 |= 0x8000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 72) = result;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((v8 & 0x40000) == 0)
  {
LABEL_23:
    if ((v8 & 0x800) == 0) {
      goto LABEL_24;
    }
    goto LABEL_105;
  }
LABEL_104:
  char v21 = *(unsigned char *)(a2 + 313);
  *(_WORD *)(a1 + 324) = v6;
  v6 |= 0x40000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(unsigned char *)(a1 + 313) = v21;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*(_WORD *)(a2 + 324) & 0x800) == 0)
  {
LABEL_24:
    if ((v8 & 0x4000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_106;
  }
LABEL_105:
  char v22 = *(unsigned char *)(a2 + 306);
  unint64_t v23 = v6 >> 16;
  v6 |= 0x800uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 326) = v23;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 306) = v22;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*(_WORD *)(a2 + 324) & 0x4000) == 0)
  {
LABEL_25:
    if ((v4 & 0x20000000000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_107;
  }
LABEL_106:
  char v24 = *(unsigned char *)(a2 + 309);
  unint64_t v25 = v6 >> 16;
  v6 |= 0x4000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 326) = v25;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 309) = v24;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 0x20000000000000) == 0)
  {
LABEL_26:
    if ((v4 & 0x8000000000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_108;
  }
LABEL_107:
  float result = *(float *)(a2 + 224);
  v5 |= 0x20000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 224) = result;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 0x8000000000000) == 0)
  {
LABEL_27:
    if ((v4 & 0x10000000000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_109;
  }
LABEL_108:
  float result = *(float *)(a2 + 216);
  v5 |= 0x8000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 216) = result;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 0x10000000000000) == 0)
  {
LABEL_28:
    if ((v8 & 0x20000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_110;
  }
LABEL_109:
  int v26 = *(_DWORD *)(a2 + 220);
  v5 |= 0x10000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(_DWORD *)(a1 + 220) = v26;
  LODWORD(v8) = *(unsigned __int16 *)(a2 + 324) | (*(unsigned __int8 *)(a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((v8 & 0x20000) == 0)
  {
LABEL_29:
    if ((v4 & 0x40000000000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_111;
  }
LABEL_110:
  char v27 = *(unsigned char *)(a2 + 312);
  *(_WORD *)(a1 + 324) = v6;
  v6 |= 0x20000uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(unsigned char *)(a1 + 312) = v27;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x40000000000000) == 0)
  {
LABEL_30:
    if ((v4 & 0x800000000000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_112;
  }
LABEL_111:
  float result = *(float *)(a2 + 228);
  v5 |= 0x40000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 228) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x800000000000000) == 0)
  {
LABEL_31:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_113;
  }
LABEL_112:
  float result = *(float *)(a2 + 248);
  v5 |= 0x800000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 248) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x80000) == 0)
  {
LABEL_32:
    if ((v4 & 0x80000000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_114;
  }
LABEL_113:
  float result = *(float *)(a2 + 88);
  v5 |= 0x80000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 88) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x80000000000) == 0)
  {
LABEL_33:
    if ((v8 & 0x10) == 0) {
      goto LABEL_34;
    }
    goto LABEL_115;
  }
LABEL_114:
  float result = *(float *)(a2 + 184);
  v5 |= 0x80000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 184) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((v8 & 0x10) == 0)
  {
LABEL_34:
    if ((v4 & 0x80000000000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_116;
  }
LABEL_115:
  float result = *(float *)(a2 + 284);
  unint64_t v8 = v6 >> 16;
  v6 |= 0x10uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 326) = v8;
  *(_WORD *)(a1 + 324) = v6;
  *(float *)(a1 + 284) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x80000000000000) == 0)
  {
LABEL_35:
    if ((v4 & 0x1000000000000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_117;
  }
LABEL_116:
  float result = *(float *)(a2 + 232);
  v5 |= 0x80000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 232) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x1000000000000000) == 0)
  {
LABEL_36:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_118;
  }
LABEL_117:
  float result = *(float *)(a2 + 252);
  v5 |= 0x1000000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 252) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x100000) == 0)
  {
LABEL_37:
    if ((v4 & 0x100000000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_119;
  }
LABEL_118:
  float result = *(float *)(a2 + 92);
  v5 |= 0x100000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 92) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x100000000000) == 0)
  {
LABEL_38:
    if ((v8 & 0x20) == 0) {
      goto LABEL_39;
    }
    goto LABEL_120;
  }
LABEL_119:
  float result = *(float *)(a2 + 188);
  v5 |= 0x100000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 188) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((v8 & 0x20) == 0)
  {
LABEL_39:
    if ((v4 & 0x100000000000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_121;
  }
LABEL_120:
  float result = *(float *)(a2 + 288);
  unint64_t v8 = v6 >> 16;
  v6 |= 0x20uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 326) = v8;
  *(_WORD *)(a1 + 324) = v6;
  *(float *)(a1 + 288) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x100000000000000) == 0)
  {
LABEL_40:
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_122;
  }
LABEL_121:
  float result = *(float *)(a2 + 236);
  v5 |= 0x100000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 236) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x2000000000000000) == 0)
  {
LABEL_41:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_123;
  }
LABEL_122:
  float result = *(float *)(a2 + 256);
  v5 |= 0x2000000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 256) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x200000) == 0)
  {
LABEL_42:
    if ((v4 & 0x200000000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_124;
  }
LABEL_123:
  float result = *(float *)(a2 + 96);
  v5 |= 0x200000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 96) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x200000000000) == 0)
  {
LABEL_43:
    if ((v8 & 0x40) == 0) {
      goto LABEL_44;
    }
    goto LABEL_125;
  }
LABEL_124:
  float result = *(float *)(a2 + 192);
  v5 |= 0x200000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 192) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((v8 & 0x40) == 0)
  {
LABEL_44:
    if ((v4 & 0x80) == 0) {
      goto LABEL_45;
    }
    goto LABEL_126;
  }
LABEL_125:
  float result = *(float *)(a2 + 292);
  unint64_t v8 = v6 >> 16;
  v6 |= 0x40uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 326) = v8;
  *(_WORD *)(a1 + 324) = v6;
  *(float *)(a1 + 292) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x80) == 0)
  {
LABEL_45:
    if ((v4 & 0x400) == 0) {
      goto LABEL_46;
    }
    goto LABEL_127;
  }
LABEL_126:
  float result = *(float *)(a2 + 40);
  v5 |= 0x80uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 40) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x400) == 0)
  {
LABEL_46:
    if ((v4 & 0x200) == 0) {
      goto LABEL_47;
    }
    goto LABEL_128;
  }
LABEL_127:
  float result = *(float *)(a2 + 52);
  v5 |= 0x400uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 52) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x200) == 0)
  {
LABEL_47:
    if ((v4 & 0x100) == 0) {
      goto LABEL_48;
    }
    goto LABEL_129;
  }
LABEL_128:
  float result = *(float *)(a2 + 48);
  v5 |= 0x200uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 48) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x100) == 0)
  {
LABEL_48:
    if ((v4 & 4) == 0) {
      goto LABEL_49;
    }
    goto LABEL_130;
  }
LABEL_129:
  float result = *(float *)(a2 + 44);
  v5 |= 0x100uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 44) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 4) == 0)
  {
LABEL_49:
    if ((v4 & 0x20) == 0) {
      goto LABEL_50;
    }
    goto LABEL_131;
  }
LABEL_130:
  float result = *(float *)(a2 + 20);
  v5 |= 4uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 20) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x20) == 0)
  {
LABEL_50:
    if ((v4 & 0x10) == 0) {
      goto LABEL_51;
    }
    goto LABEL_132;
  }
LABEL_131:
  float result = *(float *)(a2 + 32);
  v5 |= 0x20uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 32) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x10) == 0)
  {
LABEL_51:
    if ((v4 & 8) == 0) {
      goto LABEL_52;
    }
    goto LABEL_133;
  }
LABEL_132:
  float result = *(float *)(a2 + 28);
  v5 |= 0x10uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 28) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 8) == 0)
  {
LABEL_52:
    if ((v4 & 0x800) == 0) {
      goto LABEL_53;
    }
    goto LABEL_134;
  }
LABEL_133:
  float result = *(float *)(a2 + 24);
  v5 |= 8uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 24) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x800) == 0)
  {
LABEL_53:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_135;
  }
LABEL_134:
  float result = *(float *)(a2 + 56);
  v5 |= 0x800uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 56) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x4000) == 0)
  {
LABEL_54:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_136;
  }
LABEL_135:
  float result = *(float *)(a2 + 68);
  v5 |= 0x4000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 68) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x2000) == 0)
  {
LABEL_55:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_137;
  }
LABEL_136:
  float result = *(float *)(a2 + 64);
  v5 |= 0x2000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 64) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x1000) == 0)
  {
LABEL_56:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_138;
  }
LABEL_137:
  float result = *(float *)(a2 + 60);
  v5 |= 0x1000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 60) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x10000) == 0)
  {
LABEL_57:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_139;
  }
LABEL_138:
  float result = *(float *)(a2 + 76);
  v5 |= 0x10000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 76) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x20000) == 0)
  {
LABEL_58:
    if ((v4 & 0x200000000000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_140;
  }
LABEL_139:
  float result = *(float *)(a2 + 80);
  v5 |= 0x20000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 80) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x200000000000000) == 0)
  {
LABEL_59:
    if ((v4 & 0x4000000000000000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_141;
  }
LABEL_140:
  float result = *(float *)(a2 + 240);
  v5 |= 0x200000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 240) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x4000000000000000) == 0)
  {
LABEL_60:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_142;
  }
LABEL_141:
  float result = *(float *)(a2 + 260);
  v5 |= 0x4000000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 260) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x400000) == 0)
  {
LABEL_61:
    if ((v4 & 0x400000000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_143;
  }
LABEL_142:
  float result = *(float *)(a2 + 100);
  v5 |= 0x400000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 100) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x400000000000) == 0)
  {
LABEL_62:
    if ((v8 & 0x80) == 0) {
      goto LABEL_63;
    }
    goto LABEL_144;
  }
LABEL_143:
  float result = *(float *)(a2 + 196);
  v5 |= 0x400000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 196) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((v8 & 0x80) == 0)
  {
LABEL_63:
    if ((v4 & 0x400000000000000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_145;
  }
LABEL_144:
  float result = *(float *)(a2 + 296);
  unint64_t v8 = v6 >> 16;
  v6 |= 0x80uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 326) = v8;
  *(_WORD *)(a1 + 324) = v6;
  *(float *)(a1 + 296) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x400000000000000) == 0)
  {
LABEL_64:
    if ((v4 & 0x8000000000000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_146;
  }
LABEL_145:
  float result = *(float *)(a2 + 244);
  v5 |= 0x400000000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 244) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x8000000000000000) == 0)
  {
LABEL_65:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_147;
  }
LABEL_146:
  float result = *(float *)(a2 + 264);
  v5 |= 0x8000000000000000;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 264) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x800000) == 0)
  {
LABEL_66:
    if ((v4 & 0x800000000000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_148;
  }
LABEL_147:
  float result = *(float *)(a2 + 104);
  v5 |= 0x800000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 104) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x800000000000) == 0)
  {
LABEL_67:
    if ((v8 & 0x100) == 0) {
      goto LABEL_68;
    }
    goto LABEL_149;
  }
LABEL_148:
  float result = *(float *)(a2 + 200);
  v5 |= 0x800000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 200) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((v8 & 0x100) == 0)
  {
LABEL_68:
    if ((v4 & 0x100000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_150;
  }
LABEL_149:
  float result = *(float *)(a2 + 300);
  unint64_t v8 = v6 >> 16;
  v6 |= 0x100uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 326) = v8;
  *(_WORD *)(a1 + 324) = v6;
  *(float *)(a1 + 300) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x100000000) == 0)
  {
LABEL_69:
    if ((v4 & 0x200000000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_151;
  }
LABEL_150:
  float result = *(float *)(a2 + 140);
  v5 |= (unint64_t)&_mh_execute_header;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 140) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x200000000) == 0)
  {
LABEL_70:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_152;
  }
LABEL_151:
  float result = *(float *)(a2 + 144);
  v5 |= 0x200000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 144) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x8000000) == 0)
  {
LABEL_71:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_153;
  }
LABEL_152:
  float result = *(float *)(a2 + 120);
  v5 |= 0x8000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 120) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x4000000) == 0)
  {
LABEL_72:
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_154;
  }
LABEL_153:
  float result = *(float *)(a2 + 116);
  v5 |= 0x4000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 116) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x80000000) == 0)
  {
LABEL_73:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_155;
  }
LABEL_154:
  float result = *(float *)(a2 + 136);
  v5 |= 0x80000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 136) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x40000000) == 0)
  {
LABEL_74:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_156;
  }
LABEL_155:
  float result = *(float *)(a2 + 132);
  v5 |= 0x40000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 132) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x20000000) == 0)
  {
LABEL_75:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_157;
  }
LABEL_156:
  float result = *(float *)(a2 + 128);
  v5 |= 0x20000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 128) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x10000000) == 0)
  {
LABEL_76:
    if ((v4 & 0x10000000000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_158;
  }
LABEL_157:
  float result = *(float *)(a2 + 124);
  v5 |= 0x10000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 124) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x10000000000) == 0)
  {
LABEL_77:
    if ((v4 & 0x20000000000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_159;
  }
LABEL_158:
  float result = *(float *)(a2 + 172);
  v5 |= 0x10000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 172) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x20000000000) == 0)
  {
LABEL_78:
    if ((v4 & 0x800000000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_160;
  }
LABEL_159:
  float result = *(float *)(a2 + 176);
  v5 |= 0x20000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 176) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x800000000) == 0)
  {
LABEL_79:
    if ((v4 & 0x400000000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_161;
  }
LABEL_160:
  float result = *(float *)(a2 + 152);
  v5 |= 0x800000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 152) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x400000000) == 0)
  {
LABEL_80:
    if ((v4 & 0x8000000000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_162;
  }
LABEL_161:
  float result = *(float *)(a2 + 148);
  v5 |= 0x400000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 148) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x8000000000) == 0)
  {
LABEL_81:
    if ((v4 & 0x4000000000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_163;
  }
LABEL_162:
  float result = *(float *)(a2 + 168);
  v5 |= 0x8000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 168) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x4000000000) == 0)
  {
LABEL_82:
    if ((v4 & 0x2000000000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_164;
  }
LABEL_163:
  float result = *(float *)(a2 + 164);
  v5 |= 0x4000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 164) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  uint64_t v4 = *v3;
  if ((*v3 & 0x2000000000) == 0)
  {
LABEL_83:
    if ((v4 & 0x1000000000) == 0) {
      goto LABEL_84;
    }
    goto LABEL_165;
  }
LABEL_164:
  float result = *(float *)(a2 + 160);
  v5 |= 0x2000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 160) = result;
  LOWORD(v8) = *(_WORD *)(a2 + 324);
  if ((*v3 & 0x1000000000) == 0)
  {
LABEL_84:
    if ((v8 & 2) == 0) {
      goto LABEL_85;
    }
    goto LABEL_166;
  }
LABEL_165:
  float result = *(float *)(a2 + 156);
  v5 |= 0x1000000000uLL;
  *unint64_t v2 = v5;
  *(_WORD *)(a1 + 324) = v6;
  *(unsigned char *)(a1 + 326) = BYTE2(v6);
  *(float *)(a1 + 156) = result;
  LOBYTE(v8) = *(_WORD *)(a2 + 324);
  if ((*(_WORD *)(a2 + 324) & 2) == 0)
  {
LABEL_85:
    if ((v8 & 4) == 0) {
      goto LABEL_86;
    }
    goto LABEL_167;
  }
LABEL_166:
  float result = *(float *)(a2 + 272);
  unint64_t v8 = v6 >> 16;
  v6 |= 2uLL;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 326) = v8;
  *(_WORD *)(a1 + 324) = v6;
  *(float *)(a1 + 272) = result;
  LOBYTE(v8) = *(_WORD *)(a2 + 324);
  if ((*(_WORD *)(a2 + 324) & 4) == 0)
  {
LABEL_86:
    if ((v8 & 1) == 0) {
      return result;
    }
LABEL_168:
    float result = *(float *)(a2 + 268);
    *unint64_t v2 = v5;
    *(unsigned char *)(a1 + 326) = BYTE2(v6);
    *(_WORD *)(a1 + 324) = v6 | 1;
    *(float *)(a1 + 268) = result;
    return result;
  }
LABEL_167:
  float result = *(float *)(a2 + 276);
  unint64_t v28 = v6 >> 16;
  LODWORD(v6) = v6 | 4;
  *unint64_t v2 = v5;
  *(unsigned char *)(a1 + 326) = v28;
  *(_WORD *)(a1 + 324) = v6;
  *(float *)(a1 + 276) = result;
  if (*(_WORD *)(a2 + 324)) {
    goto LABEL_168;
  }
  return result;
}

uint64_t sub_101699FA8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = (uint64_t *)(a1 + 316);
  uint64_t v6 = *(void *)(a1 + 316);
  if ((v6 & 2) != 0)
  {
    PB::TextFormatter::format(this, "audioRolloverDvChaosThreshold", *(float *)(a1 + 16));
    int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
    uint64_t v6 = *v5;
    if ((*v5 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  if ((v6 & 4) != 0)
  {
LABEL_5:
    PB::TextFormatter::format(this, "audioRolloverDvChaosThresholdCenter", *(float *)(a1 + 20));
    int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
    uint64_t v6 = *v5;
  }
LABEL_6:
  if ((v6 & 8) != 0)
  {
    PB::TextFormatter::format(this, "audioRolloverDvChaosThresholdMax", *(float *)(a1 + 24));
    int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
    uint64_t v6 = *v5;
    if ((*v5 & 0x10) == 0)
    {
LABEL_8:
      if ((v6 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_93;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_8;
  }
  PB::TextFormatter::format(this, "audioRolloverDvChaosThresholdMin", *(float *)(a1 + 28));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x20) == 0)
  {
LABEL_9:
    if ((v6 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_94;
  }
LABEL_93:
  PB::TextFormatter::format(this, "audioRolloverDvChaosThresholdStretch", *(float *)(a1 + 32));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x40) == 0)
  {
LABEL_10:
    if ((v6 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_95;
  }
LABEL_94:
  PB::TextFormatter::format(this, "audioRolloverDvEnergyThreshold", *(float *)(a1 + 36));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x80) == 0)
  {
LABEL_11:
    if ((v6 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_96;
  }
LABEL_95:
  PB::TextFormatter::format(this, "audioRolloverDvEnergyThresholdCenter", *(float *)(a1 + 40));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x100) == 0)
  {
LABEL_12:
    if ((v6 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_97;
  }
LABEL_96:
  PB::TextFormatter::format(this, "audioRolloverDvEnergyThresholdMax", *(float *)(a1 + 44));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x200) == 0)
  {
LABEL_13:
    if ((v6 & 0x400) == 0) {
      goto LABEL_14;
    }
    goto LABEL_98;
  }
LABEL_97:
  PB::TextFormatter::format(this, "audioRolloverDvEnergyThresholdMin", *(float *)(a1 + 48));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x400) == 0)
  {
LABEL_14:
    if ((v6 & 0x800) == 0) {
      goto LABEL_15;
    }
    goto LABEL_99;
  }
LABEL_98:
  PB::TextFormatter::format(this, "audioRolloverDvEnergyThresholdStretch", *(float *)(a1 + 52));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x800) == 0)
  {
LABEL_15:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_100;
  }
LABEL_99:
  PB::TextFormatter::format(this, "audioRolloverDvMaxRmsThresholdCenter", *(float *)(a1 + 56));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x1000) == 0)
  {
LABEL_16:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_101;
  }
LABEL_100:
  PB::TextFormatter::format(this, "audioRolloverDvMaxRmsThresholdMax", *(float *)(a1 + 60));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x2000) == 0)
  {
LABEL_17:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_102;
  }
LABEL_101:
  PB::TextFormatter::format(this, "audioRolloverDvMaxRmsThresholdMin", *(float *)(a1 + 64));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x4000) == 0)
  {
LABEL_18:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_103;
  }
LABEL_102:
  PB::TextFormatter::format(this, "audioRolloverDvMaxRmsThresholdStretch", *(float *)(a1 + 68));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x8000) == 0)
  {
LABEL_19:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_104;
  }
LABEL_103:
  PB::TextFormatter::format(this, "audioRolloverDvRmsThreshold", *(float *)(a1 + 72));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x10000) == 0)
  {
LABEL_20:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_105;
  }
LABEL_104:
  PB::TextFormatter::format(this, "baroEscalateMaxAccelNormThreshold", *(float *)(a1 + 76));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x20000) == 0)
  {
LABEL_21:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_106;
  }
LABEL_105:
  PB::TextFormatter::format(this, "baroEscalateSpinNormThreshold", *(float *)(a1 + 80));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x40000) == 0)
  {
LABEL_22:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_107;
  }
LABEL_106:
  PB::TextFormatter::format(this, "cumulativeRotation", *(float *)(a1 + 84));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x80000) == 0)
  {
LABEL_23:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_108;
  }
LABEL_107:
  PB::TextFormatter::format(this, "cumulativeRotationThreshold", *(float *)(a1 + 88));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x100000) == 0)
  {
LABEL_24:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_109;
  }
LABEL_108:
  PB::TextFormatter::format(this, "cumulativeRotationThresholdWithAudio", *(float *)(a1 + 92));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x200000) == 0)
  {
LABEL_25:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_110;
  }
LABEL_109:
  PB::TextFormatter::format(this, "cumulativeRotationThresholdWithoutAudio", *(float *)(a1 + 96));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x400000) == 0)
  {
LABEL_26:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_111;
  }
LABEL_110:
  PB::TextFormatter::format(this, "cumulativeRotationThresholdWithoutAudioStandaloneBaroNeeded", *(float *)(a1 + 100));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x800000) == 0)
  {
LABEL_27:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_112;
  }
LABEL_111:
  PB::TextFormatter::format(this, "cumulativeRotationThresholdWithoutAudioStandaloneFull", *(float *)(a1 + 104));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x1000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_113;
  }
LABEL_112:
  PB::TextFormatter::format(this, "deltaVXYOverEpoch", *(float *)(a1 + 108));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x2000000) == 0)
  {
LABEL_29:
    if ((v7 & 0x200) == 0) {
      goto LABEL_30;
    }
    goto LABEL_114;
  }
LABEL_113:
  PB::TextFormatter::format(this, "detectorRegime", *(_DWORD *)(a1 + 112));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*(_WORD *)(a1 + 324) & 0x200) == 0)
  {
LABEL_30:
    if ((v7 & 0x400) == 0) {
      goto LABEL_31;
    }
    goto LABEL_115;
  }
LABEL_114:
  PB::TextFormatter::format(this, "hasAudioInEpoch", *(unsigned char *)(a1 + 304));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*(_WORD *)(a1 + 324) & 0x400) == 0)
  {
LABEL_31:
    if ((v7 & 0x800) == 0) {
      goto LABEL_32;
    }
    goto LABEL_116;
  }
LABEL_115:
  PB::TextFormatter::format(this, "isAudioRollover", *(unsigned char *)(a1 + 305));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*(_WORD *)(a1 + 324) & 0x800) == 0)
  {
LABEL_32:
    if ((v7 & 0x1000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_117;
  }
LABEL_116:
  PB::TextFormatter::format(this, "isAudioRolloverDv", *(unsigned char *)(a1 + 306));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*(_WORD *)(a1 + 324) & 0x1000) == 0)
  {
LABEL_33:
    if ((v7 & 0x2000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_118;
  }
LABEL_117:
  PB::TextFormatter::format(this, "isAudioSupported", *(unsigned char *)(a1 + 307));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*(_WORD *)(a1 + 324) & 0x2000) == 0)
  {
LABEL_34:
    if ((v7 & 0x4000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_119;
  }
LABEL_118:
  PB::TextFormatter::format(this, "isBaro", *(unsigned char *)(a1 + 308));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*(_WORD *)(a1 + 324) & 0x4000) == 0)
  {
LABEL_35:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_120;
  }
LABEL_119:
  PB::TextFormatter::format(this, "isCompanionConnected", *(unsigned char *)(a1 + 309));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x4000000) == 0)
  {
LABEL_36:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_121;
  }
LABEL_120:
  PB::TextFormatter::format(this, "lowSenseWithAudioCumulativeRotationThreshold", *(float *)(a1 + 116));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x8000000) == 0)
  {
LABEL_37:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_122;
  }
LABEL_121:
  PB::TextFormatter::format(this, "lowSenseWithAudioMaxAccelNormThreshold", *(float *)(a1 + 120));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x10000000) == 0)
  {
LABEL_38:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_123;
  }
LABEL_122:
  PB::TextFormatter::format(this, "lowSenseWithAudioParBaroCumulativeRotationThreshold", *(float *)(a1 + 124));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x20000000) == 0)
  {
LABEL_39:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_124;
  }
LABEL_123:
  PB::TextFormatter::format(this, "lowSenseWithAudioParBaroNormThreshold", *(float *)(a1 + 128));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x40000000) == 0)
  {
LABEL_40:
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_125;
  }
LABEL_124:
  PB::TextFormatter::format(this, "lowSenseWithAudioPeakPressureThreshold", *(float *)(a1 + 132));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x80000000) == 0)
  {
LABEL_41:
    if ((v6 & 0x100000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_126;
  }
LABEL_125:
  PB::TextFormatter::format(this, "lowSenseWithAudioZgtimeThreshold", *(float *)(a1 + 136));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x100000000) == 0)
  {
LABEL_42:
    if ((v6 & 0x200000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_127;
  }
LABEL_126:
  PB::TextFormatter::format(this, "lowSenseWithAudiodvThreshold1", *(float *)(a1 + 140));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x200000000) == 0)
  {
LABEL_43:
    if ((v6 & 0x400000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_128;
  }
LABEL_127:
  PB::TextFormatter::format(this, "lowSenseWithAudiodvThreshold2", *(float *)(a1 + 144));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x400000000) == 0)
  {
LABEL_44:
    if ((v6 & 0x800000000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_129;
  }
LABEL_128:
  PB::TextFormatter::format(this, "lowSenseWithoutAudioCumulativeRotationThreshold", *(float *)(a1 + 148));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x800000000) == 0)
  {
LABEL_45:
    if ((v6 & 0x1000000000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_130;
  }
LABEL_129:
  PB::TextFormatter::format(this, "lowSenseWithoutAudioMaxAccelNormThreshold", *(float *)(a1 + 152));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x1000000000) == 0)
  {
LABEL_46:
    if ((v6 & 0x2000000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_131;
  }
LABEL_130:
  PB::TextFormatter::format(this, "lowSenseWithoutAudioParBaroCumulativeRotationThreshold", *(float *)(a1 + 156));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x2000000000) == 0)
  {
LABEL_47:
    if ((v6 & 0x4000000000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_132;
  }
LABEL_131:
  PB::TextFormatter::format(this, "lowSenseWithoutAudioParBaroNormThreshold", *(float *)(a1 + 160));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x4000000000) == 0)
  {
LABEL_48:
    if ((v6 & 0x8000000000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_133;
  }
LABEL_132:
  PB::TextFormatter::format(this, "lowSenseWithoutAudioPeakPressureThreshold", *(float *)(a1 + 164));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x8000000000) == 0)
  {
LABEL_49:
    if ((v6 & 0x10000000000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_134;
  }
LABEL_133:
  PB::TextFormatter::format(this, "lowSenseWithoutAudioZgtimeThreshold", *(float *)(a1 + 168));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x10000000000) == 0)
  {
LABEL_50:
    if ((v6 & 0x20000000000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_135;
  }
LABEL_134:
  PB::TextFormatter::format(this, "lowSenseWithoutAudiodvThreshold1", *(float *)(a1 + 172));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x20000000000) == 0)
  {
LABEL_51:
    if ((v6 & 0x40000000000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_136;
  }
LABEL_135:
  PB::TextFormatter::format(this, "lowSenseWithoutAudiodvThreshold2", *(float *)(a1 + 176));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x40000000000) == 0)
  {
LABEL_52:
    if ((v6 & 0x80000000000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_137;
  }
LABEL_136:
  PB::TextFormatter::format(this, "maxAccelNorm", *(float *)(a1 + 180));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x80000000000) == 0)
  {
LABEL_53:
    if ((v6 & 0x100000000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_138;
  }
LABEL_137:
  PB::TextFormatter::format(this, "maxAccelNormThreshold", *(float *)(a1 + 184));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x100000000000) == 0)
  {
LABEL_54:
    if ((v6 & 0x200000000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_139;
  }
LABEL_138:
  PB::TextFormatter::format(this, "maxAccelNormThresholdWithAudio", *(float *)(a1 + 188));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x200000000000) == 0)
  {
LABEL_55:
    if ((v6 & 0x400000000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_140;
  }
LABEL_139:
  PB::TextFormatter::format(this, "maxAccelNormThresholdWithoutAudio", *(float *)(a1 + 192));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x400000000000) == 0)
  {
LABEL_56:
    if ((v6 & 0x800000000000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_141;
  }
LABEL_140:
  PB::TextFormatter::format(this, "maxAccelNormThresholdWithoutAudioStandaloneBaroNeeded", *(float *)(a1 + 196));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x800000000000) == 0)
  {
LABEL_57:
    if ((v6 & 0x1000000000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_142;
  }
LABEL_141:
  PB::TextFormatter::format(this, "maxAccelNormThresholdWithoutAudioStandaloneFull", *(float *)(a1 + 200));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x1000000000000) == 0)
  {
LABEL_58:
    if ((v6 & 0x2000000000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_143;
  }
LABEL_142:
  PB::TextFormatter::format(this, "maxAudioRolloverChaos", *(float *)(a1 + 204));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x2000000000000) == 0)
  {
LABEL_59:
    if ((v6 & 0x4000000000000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_144;
  }
LABEL_143:
  PB::TextFormatter::format(this, "maxAudioRolloverEnergy", *(float *)(a1 + 208));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x4000000000000) == 0)
  {
LABEL_60:
    if ((v6 & 0x8000000000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_145;
  }
LABEL_144:
  PB::TextFormatter::format(this, "maxAudioRolloverRms", *(float *)(a1 + 212));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x8000000000000) == 0)
  {
LABEL_61:
    if ((v6 & 0x10000000000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_146;
  }
LABEL_145:
  PB::TextFormatter::format(this, "maxPulse", *(float *)(a1 + 216));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x10000000000000) == 0)
  {
LABEL_62:
    if ((v6 & 0x20000000000000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_147;
  }
LABEL_146:
  PB::TextFormatter::format(this, "numShortAudio", *(_DWORD *)(a1 + 220));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x20000000000000) == 0)
  {
LABEL_63:
    if ((v7 & 0x8000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_148;
  }
LABEL_147:
  PB::TextFormatter::format(this, "peakPressure", *(float *)(a1 + 224));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*(_WORD *)(a1 + 324) & 0x8000) == 0)
  {
LABEL_64:
    if ((v7 & 0x10000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_149;
  }
LABEL_148:
  PB::TextFormatter::format(this, "rolloverCrashDetectorDecision", *(unsigned char *)(a1 + 310));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((v7 & 0x10000) == 0)
  {
LABEL_65:
    if ((v6 & 0x40000000000000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_150;
  }
LABEL_149:
  PB::TextFormatter::format(this, "rolloverCrashDetectorDecisionLowSense", *(unsigned char *)(a1 + 311));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x40000000000000) == 0)
  {
LABEL_66:
    if ((v6 & 0x80000000000000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_151;
  }
LABEL_150:
  PB::TextFormatter::format(this, "rolloverDetectorRegimeDeltaVThreshold1", *(float *)(a1 + 228));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x80000000000000) == 0)
  {
LABEL_67:
    if ((v6 & 0x100000000000000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_152;
  }
LABEL_151:
  PB::TextFormatter::format(this, "rolloverDetectorRegimeDeltaVThreshold1WithAudio", *(float *)(a1 + 232));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x100000000000000) == 0)
  {
LABEL_68:
    if ((v6 & 0x200000000000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_153;
  }
LABEL_152:
  PB::TextFormatter::format(this, "rolloverDetectorRegimeDeltaVThreshold1WithoutAudio", *(float *)(a1 + 236));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x200000000000000) == 0)
  {
LABEL_69:
    if ((v6 & 0x400000000000000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_154;
  }
LABEL_153:
  PB::TextFormatter::format(this, "rolloverDetectorRegimeDeltaVThreshold1WithoutAudioStandaloneBaroNeeded", *(float *)(a1 + 240));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x400000000000000) == 0)
  {
LABEL_70:
    if ((v6 & 0x800000000000000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_155;
  }
LABEL_154:
  PB::TextFormatter::format(this, "rolloverDetectorRegimeDeltaVThreshold1WithoutAudioStandaloneFull", *(float *)(a1 + 244));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x800000000000000) == 0)
  {
LABEL_71:
    if ((v6 & 0x1000000000000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_156;
  }
LABEL_155:
  PB::TextFormatter::format(this, "rolloverDetectorRegimeDeltaVThreshold2", *(float *)(a1 + 248));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x1000000000000000) == 0)
  {
LABEL_72:
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_157;
  }
LABEL_156:
  PB::TextFormatter::format(this, "rolloverDetectorRegimeDeltaVThreshold2WithAudio", *(float *)(a1 + 252));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x2000000000000000) == 0)
  {
LABEL_73:
    if ((v6 & 0x4000000000000000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_158;
  }
LABEL_157:
  PB::TextFormatter::format(this, "rolloverDetectorRegimeDeltaVThreshold2WithoutAudio", *(float *)(a1 + 256));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x4000000000000000) == 0)
  {
LABEL_74:
    if ((v6 & 0x8000000000000000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_159;
  }
LABEL_158:
  PB::TextFormatter::format(this, "rolloverDetectorRegimeDeltaVThreshold2WithoutAudioStandaloneBaroNeeded", *(float *)(a1 + 260));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x8000000000000000) == 0)
  {
LABEL_75:
    if ((v7 & 1) == 0) {
      goto LABEL_76;
    }
    goto LABEL_160;
  }
LABEL_159:
  PB::TextFormatter::format(this, "rolloverDetectorRegimeDeltaVThreshold2WithoutAudioStandaloneFull", *(float *)(a1 + 264));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*(_WORD *)(a1 + 324) & 1) == 0)
  {
LABEL_76:
    if ((v7 & 0x20000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_161;
  }
LABEL_160:
  PB::TextFormatter::format(this, "shortAudioMaxPulseThreshold", *(float *)(a1 + 268));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((v7 & 0x20000) == 0)
  {
LABEL_77:
    if ((v7 & 2) == 0) {
      goto LABEL_78;
    }
    goto LABEL_162;
  }
LABEL_161:
  PB::TextFormatter::format(this, "shortAudioMet", *(unsigned char *)(a1 + 312));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*(_WORD *)(a1 + 324) & 2) == 0)
  {
LABEL_78:
    if ((v7 & 4) == 0) {
      goto LABEL_79;
    }
    goto LABEL_163;
  }
LABEL_162:
  PB::TextFormatter::format(this, "shortAudioNumThreshold", *(float *)(a1 + 272));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((*(_WORD *)(a1 + 324) & 4) == 0)
  {
LABEL_79:
    if ((v7 & 0x40000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_164;
  }
LABEL_163:
  PB::TextFormatter::format(this, "shortAudioPeakPressureThreshold", *(float *)(a1 + 276));
  int v7 = *(unsigned __int16 *)(a1 + 324) | (*(unsigned __int8 *)(a1 + 326) << 16);
  uint64_t v6 = *v5;
  if ((v7 & 0x40000) == 0)
  {
LABEL_80:
    if ((v6 & 1) == 0) {
      goto LABEL_81;
    }
    goto LABEL_165;
  }
LABEL_164:
  PB::TextFormatter::format(this, "strongerAudioRollover", *(unsigned char *)(a1 + 313));
  LOWORD(v7) = *(_WORD *)(a1 + 324);
  if ((*v5 & 1) == 0)
  {
LABEL_81:
    if ((v7 & 8) == 0) {
      goto LABEL_82;
    }
    goto LABEL_166;
  }
LABEL_165:
  PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 8));
  LOWORD(v7) = *(_WORD *)(a1 + 324);
  if ((v7 & 8) == 0)
  {
LABEL_82:
    if ((v7 & 0x10) == 0) {
      goto LABEL_83;
    }
    goto LABEL_167;
  }
LABEL_166:
  PB::TextFormatter::format(this, "zgTime", *(float *)(a1 + 280));
  LOWORD(v7) = *(_WORD *)(a1 + 324);
  if ((v7 & 0x10) == 0)
  {
LABEL_83:
    if ((v7 & 0x20) == 0) {
      goto LABEL_84;
    }
    goto LABEL_168;
  }
LABEL_167:
  PB::TextFormatter::format(this, "zgTimeThreshold", *(float *)(a1 + 284));
  LOWORD(v7) = *(_WORD *)(a1 + 324);
  if ((v7 & 0x20) == 0)
  {
LABEL_84:
    if ((v7 & 0x40) == 0) {
      goto LABEL_85;
    }
    goto LABEL_169;
  }
LABEL_168:
  PB::TextFormatter::format(this, "zgTimeThresholdWithAudio", *(float *)(a1 + 288));
  LOWORD(v7) = *(_WORD *)(a1 + 324);
  if ((v7 & 0x40) == 0)
  {
LABEL_85:
    if ((v7 & 0x80) == 0) {
      goto LABEL_86;
    }
    goto LABEL_170;
  }
LABEL_169:
  PB::TextFormatter::format(this, "zgTimeThresholdWithoutAudio", *(float *)(a1 + 292));
  LOWORD(v7) = *(_WORD *)(a1 + 324);
  if ((v7 & 0x80) == 0)
  {
LABEL_86:
    if ((v7 & 0x100) == 0) {
      goto LABEL_88;
    }
    goto LABEL_87;
  }
LABEL_170:
  PB::TextFormatter::format(this, "zgTimeThresholdWithoutAudioStandaloneBaroNeeded", *(float *)(a1 + 296));
  if ((*(_WORD *)(a1 + 324) & 0x100) != 0) {
LABEL_87:
  }
    PB::TextFormatter::format(this, "zgTimeThresholdWithoutAudioStandaloneFull", *(float *)(a1 + 300));
LABEL_88:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10169AE24(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v8 = a1 + 316;
    while (1)
    {
      uint64_t v9 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v10 = 0;
      unsigned int v11 = 0;
      unint64_t v12 = 0;
      while (1)
      {
        unint64_t v13 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v14 = *(unsigned char *)(v9 + v2);
        v12 |= (unint64_t)(v14 & 0x7F) << v10;
        if ((v14 & 0x80) == 0) {
          break;
        }
        v10 += 7;
        unint64_t v2 = v13;
        BOOL v15 = v11++ > 8;
        if (v15) {
          goto LABEL_20;
        }
      }
LABEL_21:
      if ((v12 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v21 = v12 >> 3;
      if ((int)(v12 >> 3) <= 100)
      {
        switch(v21)
        {
          case 1:
            *(void *)v8 |= 1uLL;
            unint64_t v165 = *((void *)this + 1);
            unint64_t v166 = *((void *)this + 2);
            uint64_t v167 = *(void *)this;
            if (v165 > 0xFFFFFFFFFFFFFFF5 || v165 + 10 > v166)
            {
              char v187 = 0;
              unsigned int v188 = 0;
              uint64_t v170 = 0;
              if (v166 <= v165) {
                unint64_t v166 = *((void *)this + 1);
              }
              while (1)
              {
                if (v166 == v165)
                {
                  uint64_t v170 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_339;
                }
                unint64_t v189 = v165 + 1;
                char v190 = *(unsigned char *)(v167 + v165);
                *((void *)this + 1) = v189;
                v170 |= (unint64_t)(v190 & 0x7F) << v187;
                if ((v190 & 0x80) == 0) {
                  break;
                }
                v187 += 7;
                unint64_t v165 = v189;
                BOOL v15 = v188++ > 8;
                if (v15)
                {
LABEL_318:
                  uint64_t v170 = 0;
                  goto LABEL_339;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v170 = 0;
              }
            }
            else
            {
              char v168 = 0;
              unsigned int v169 = 0;
              uint64_t v170 = 0;
              while (1)
              {
                unint64_t v171 = v165 + 1;
                *((void *)this + 1) = v165 + 1;
                char v172 = *(unsigned char *)(v167 + v165);
                v170 |= (unint64_t)(v172 & 0x7F) << v168;
                if ((v172 & 0x80) == 0) {
                  break;
                }
                v168 += 7;
                unint64_t v165 = v171;
                BOOL v15 = v169++ > 8;
                if (v15) {
                  goto LABEL_318;
                }
              }
            }
LABEL_339:
            *(void *)(a1 + 8) = v170;
            break;
          case 2:
            char v173 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 0x8000u;
            *(unsigned char *)(v8 + 10) = v173;
            unint64_t v174 = *((void *)this + 1);
            if (v174 >= *((void *)this + 2))
            {
              BOOL v177 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v175 = v174 + 1;
              int v176 = *(unsigned __int8 *)(*(void *)this + v174);
              *((void *)this + 1) = v175;
              BOOL v177 = v176 != 0;
            }
            *(unsigned char *)(a1 + 310) = v177;
            break;
          case 3:
            int v23 = *(unsigned __int16 *)(v8 + 8);
            unsigned int v24 = (v23 | (*(unsigned __int8 *)(v8 + 10) << 16) | 0x10000u) >> 16;
            *(_WORD *)(v8 + 8) = v23;
            *(unsigned char *)(v8 + 10) = v24;
            unint64_t v25 = *((void *)this + 1);
            if (v25 >= *((void *)this + 2))
            {
              BOOL v28 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v26 = v25 + 1;
              int v27 = *(unsigned __int8 *)(*(void *)this + v25);
              *((void *)this + 1) = v26;
              BOOL v28 = v27 != 0;
            }
            *(unsigned char *)(a1 + 311) = v28;
            break;
          default:
LABEL_278:
            uint64_t result = PB::Reader::skip(this, v21, v12 & 7, 0);
            if (!result) {
              return result;
            }
            break;
        }
      }
      else
      {
        switch((int)v21)
        {
          case 101:
            *(void *)v8 |= 0x40000000000uLL;
            unint64_t v22 = *((void *)this + 1);
            if (v22 > 0xFFFFFFFFFFFFFFFBLL || v22 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 180) = *(_DWORD *)(*(void *)this + v22);
            goto LABEL_322;
          case 102:
            *(void *)v8 |= 0x40000uLL;
            unint64_t v29 = *((void *)this + 1);
            if (v29 > 0xFFFFFFFFFFFFFFFBLL || v29 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v29);
            goto LABEL_322;
          case 103:
            char v30 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 8u;
            *(unsigned char *)(v8 + 10) = v30;
            unint64_t v31 = *((void *)this + 1);
            if (v31 > 0xFFFFFFFFFFFFFFFBLL || v31 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 280) = *(_DWORD *)(*(void *)this + v31);
            goto LABEL_322;
          case 104:
            char v32 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 0x2000u;
            *(unsigned char *)(v8 + 10) = v32;
            unint64_t v33 = *((void *)this + 1);
            if (v33 >= *((void *)this + 2))
            {
              BOOL v36 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v34 = v33 + 1;
              int v35 = *(unsigned __int8 *)(*(void *)this + v33);
              *((void *)this + 1) = v34;
              BOOL v36 = v35 != 0;
            }
            *(unsigned char *)(a1 + 308) = v36;
            goto LABEL_323;
          case 105:
            char v37 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 0x400u;
            *(unsigned char *)(v8 + 10) = v37;
            unint64_t v38 = *((void *)this + 1);
            if (v38 >= *((void *)this + 2))
            {
              BOOL v41 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v39 = v38 + 1;
              int v40 = *(unsigned __int8 *)(*(void *)this + v38);
              *((void *)this + 1) = v39;
              BOOL v41 = v40 != 0;
            }
            *(unsigned char *)(a1 + 305) = v41;
            goto LABEL_323;
          case 106:
            char v42 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 0x200u;
            *(unsigned char *)(v8 + 10) = v42;
            unint64_t v43 = *((void *)this + 1);
            if (v43 >= *((void *)this + 2))
            {
              BOOL v46 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v44 = v43 + 1;
              int v45 = *(unsigned __int8 *)(*(void *)this + v43);
              *((void *)this + 1) = v44;
              BOOL v46 = v45 != 0;
            }
            *(unsigned char *)(a1 + 304) = v46;
            goto LABEL_323;
          case 107:
            *(void *)v8 |= 0x2000000uLL;
            unint64_t v47 = *((void *)this + 1);
            unint64_t v48 = *((void *)this + 2);
            uint64_t v49 = *(void *)this;
            if (v47 <= 0xFFFFFFFFFFFFFFF5 && v47 + 10 <= v48)
            {
              char v50 = 0;
              unsigned int v51 = 0;
              uint64_t v52 = 0;
              do
              {
                unint64_t v53 = v47 + 1;
                *((void *)this + 1) = v47 + 1;
                char v54 = *(unsigned char *)(v49 + v47);
                v52 |= (unint64_t)(v54 & 0x7F) << v50;
                if ((v54 & 0x80) == 0) {
                  goto LABEL_331;
                }
                v50 += 7;
                unint64_t v47 = v53;
                BOOL v15 = v51++ > 8;
              }
              while (!v15);
LABEL_294:
              LODWORD(v52) = 0;
              goto LABEL_331;
            }
            char v179 = 0;
            unsigned int v180 = 0;
            uint64_t v52 = 0;
            if (v48 <= v47) {
              unint64_t v48 = *((void *)this + 1);
            }
            while (2)
            {
              if (v48 == v47)
              {
                LODWORD(v52) = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v181 = v47 + 1;
                char v182 = *(unsigned char *)(v49 + v47);
                *((void *)this + 1) = v181;
                v52 |= (unint64_t)(v182 & 0x7F) << v179;
                if (v182 < 0)
                {
                  v179 += 7;
                  unint64_t v47 = v181;
                  BOOL v15 = v180++ > 8;
                  if (v15) {
                    goto LABEL_294;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v52) = 0;
                }
              }
              break;
            }
LABEL_331:
            *(_DWORD *)(a1 + 112) = v52;
            goto LABEL_323;
          case 108:
            char v55 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 0x1000u;
            *(unsigned char *)(v8 + 10) = v55;
            unint64_t v56 = *((void *)this + 1);
            if (v56 >= *((void *)this + 2))
            {
              BOOL v59 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v57 = v56 + 1;
              int v58 = *(unsigned __int8 *)(*(void *)this + v56);
              *((void *)this + 1) = v57;
              BOOL v59 = v58 != 0;
            }
            *(unsigned char *)(a1 + 307) = v59;
            goto LABEL_323;
          case 109:
            *(void *)v8 |= 0x1000000uLL;
            unint64_t v60 = *((void *)this + 1);
            if (v60 > 0xFFFFFFFFFFFFFFFBLL || v60 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 108) = *(_DWORD *)(*(void *)this + v60);
            goto LABEL_322;
          case 110:
            *(void *)v8 |= 0x2000000000000uLL;
            unint64_t v61 = *((void *)this + 1);
            if (v61 > 0xFFFFFFFFFFFFFFFBLL || v61 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 208) = *(_DWORD *)(*(void *)this + v61);
            goto LABEL_322;
          case 111:
            *(void *)v8 |= 0x1000000000000uLL;
            unint64_t v62 = *((void *)this + 1);
            if (v62 > 0xFFFFFFFFFFFFFFFBLL || v62 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 204) = *(_DWORD *)(*(void *)this + v62);
            goto LABEL_322;
          case 112:
            *(void *)v8 |= 0x4000000000000uLL;
            unint64_t v63 = *((void *)this + 1);
            if (v63 > 0xFFFFFFFFFFFFFFFBLL || v63 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 212) = *(_DWORD *)(*(void *)this + v63);
            goto LABEL_322;
          case 113:
            *(void *)v8 |= 0x40uLL;
            unint64_t v64 = *((void *)this + 1);
            if (v64 > 0xFFFFFFFFFFFFFFFBLL || v64 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v64);
            goto LABEL_322;
          case 114:
            *(void *)v8 |= 2uLL;
            unint64_t v65 = *((void *)this + 1);
            if (v65 > 0xFFFFFFFFFFFFFFFBLL || v65 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v65);
            goto LABEL_322;
          case 115:
            *(void *)v8 |= 0x8000uLL;
            unint64_t v66 = *((void *)this + 1);
            if (v66 > 0xFFFFFFFFFFFFFFFBLL || v66 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v66);
            goto LABEL_322;
          case 116:
            int v67 = *(unsigned __int16 *)(v8 + 8);
            unsigned int v68 = (v67 | (*(unsigned __int8 *)(v8 + 10) << 16) | 0x40000u) >> 16;
            *(_WORD *)(v8 + 8) = v67;
            *(unsigned char *)(v8 + 10) = v68;
            unint64_t v69 = *((void *)this + 1);
            if (v69 >= *((void *)this + 2))
            {
              BOOL v72 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v70 = v69 + 1;
              int v71 = *(unsigned __int8 *)(*(void *)this + v69);
              *((void *)this + 1) = v70;
              BOOL v72 = v71 != 0;
            }
            *(unsigned char *)(a1 + 313) = v72;
            goto LABEL_323;
          case 117:
            char v73 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 0x800u;
            *(unsigned char *)(v8 + 10) = v73;
            unint64_t v74 = *((void *)this + 1);
            if (v74 >= *((void *)this + 2))
            {
              BOOL v77 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v75 = v74 + 1;
              int v76 = *(unsigned __int8 *)(*(void *)this + v74);
              *((void *)this + 1) = v75;
              BOOL v77 = v76 != 0;
            }
            *(unsigned char *)(a1 + 306) = v77;
            goto LABEL_323;
          case 118:
            char v78 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 0x4000u;
            *(unsigned char *)(v8 + 10) = v78;
            unint64_t v79 = *((void *)this + 1);
            if (v79 >= *((void *)this + 2))
            {
              BOOL v82 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v80 = v79 + 1;
              int v81 = *(unsigned __int8 *)(*(void *)this + v79);
              *((void *)this + 1) = v80;
              BOOL v82 = v81 != 0;
            }
            *(unsigned char *)(a1 + 309) = v82;
            goto LABEL_323;
          case 119:
            *(void *)v8 |= 0x20000000000000uLL;
            unint64_t v83 = *((void *)this + 1);
            if (v83 > 0xFFFFFFFFFFFFFFFBLL || v83 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 224) = *(_DWORD *)(*(void *)this + v83);
            goto LABEL_322;
          case 120:
            *(void *)v8 |= 0x8000000000000uLL;
            unint64_t v84 = *((void *)this + 1);
            if (v84 > 0xFFFFFFFFFFFFFFFBLL || v84 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 216) = *(_DWORD *)(*(void *)this + v84);
            goto LABEL_322;
          case 121:
            *(void *)v8 |= 0x10000000000000uLL;
            unint64_t v85 = *((void *)this + 1);
            unint64_t v86 = *((void *)this + 2);
            uint64_t v87 = *(void *)this;
            if (v85 <= 0xFFFFFFFFFFFFFFF5 && v85 + 10 <= v86)
            {
              char v88 = 0;
              unsigned int v89 = 0;
              uint64_t v90 = 0;
              do
              {
                unint64_t v91 = v85 + 1;
                *((void *)this + 1) = v85 + 1;
                char v92 = *(unsigned char *)(v87 + v85);
                v90 |= (unint64_t)(v92 & 0x7F) << v88;
                if ((v92 & 0x80) == 0) {
                  goto LABEL_335;
                }
                v88 += 7;
                unint64_t v85 = v91;
                BOOL v15 = v89++ > 8;
              }
              while (!v15);
LABEL_309:
              LODWORD(v90) = 0;
              goto LABEL_335;
            }
            char v183 = 0;
            unsigned int v184 = 0;
            uint64_t v90 = 0;
            if (v86 <= v85) {
              unint64_t v86 = *((void *)this + 1);
            }
            break;
          case 122:
            int v93 = *(unsigned __int16 *)(v8 + 8);
            unsigned int v94 = (v93 | (*(unsigned __int8 *)(v8 + 10) << 16) | 0x20000u) >> 16;
            *(_WORD *)(v8 + 8) = v93;
            *(unsigned char *)(v8 + 10) = v94;
            unint64_t v95 = *((void *)this + 1);
            if (v95 >= *((void *)this + 2))
            {
              BOOL v98 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v96 = v95 + 1;
              int v97 = *(unsigned __int8 *)(*(void *)this + v95);
              *((void *)this + 1) = v96;
              BOOL v98 = v97 != 0;
            }
            *(unsigned char *)(a1 + 312) = v98;
            goto LABEL_323;
          case 201:
            *(void *)v8 |= 0x40000000000000uLL;
            unint64_t v99 = *((void *)this + 1);
            if (v99 > 0xFFFFFFFFFFFFFFFBLL || v99 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 228) = *(_DWORD *)(*(void *)this + v99);
            goto LABEL_322;
          case 202:
            *(void *)v8 |= 0x800000000000000uLL;
            unint64_t v100 = *((void *)this + 1);
            if (v100 > 0xFFFFFFFFFFFFFFFBLL || v100 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 248) = *(_DWORD *)(*(void *)this + v100);
            goto LABEL_322;
          case 203:
            *(void *)v8 |= 0x80000uLL;
            unint64_t v101 = *((void *)this + 1);
            if (v101 > 0xFFFFFFFFFFFFFFFBLL || v101 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v101);
            goto LABEL_322;
          case 204:
            *(void *)v8 |= 0x80000000000uLL;
            unint64_t v102 = *((void *)this + 1);
            if (v102 > 0xFFFFFFFFFFFFFFFBLL || v102 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 184) = *(_DWORD *)(*(void *)this + v102);
            goto LABEL_322;
          case 205:
            char v103 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 0x10u;
            *(unsigned char *)(v8 + 10) = v103;
            unint64_t v104 = *((void *)this + 1);
            if (v104 > 0xFFFFFFFFFFFFFFFBLL || v104 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 284) = *(_DWORD *)(*(void *)this + v104);
            goto LABEL_322;
          case 206:
            *(void *)v8 |= 0x80000000000000uLL;
            unint64_t v105 = *((void *)this + 1);
            if (v105 > 0xFFFFFFFFFFFFFFFBLL || v105 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 232) = *(_DWORD *)(*(void *)this + v105);
            goto LABEL_322;
          case 207:
            *(void *)v8 |= 0x1000000000000000uLL;
            unint64_t v106 = *((void *)this + 1);
            if (v106 > 0xFFFFFFFFFFFFFFFBLL || v106 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 252) = *(_DWORD *)(*(void *)this + v106);
            goto LABEL_322;
          case 208:
            *(void *)v8 |= 0x100000uLL;
            unint64_t v107 = *((void *)this + 1);
            if (v107 > 0xFFFFFFFFFFFFFFFBLL || v107 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(void *)this + v107);
            goto LABEL_322;
          case 209:
            *(void *)v8 |= 0x100000000000uLL;
            unint64_t v108 = *((void *)this + 1);
            if (v108 > 0xFFFFFFFFFFFFFFFBLL || v108 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 188) = *(_DWORD *)(*(void *)this + v108);
            goto LABEL_322;
          case 210:
            char v109 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 0x20u;
            *(unsigned char *)(v8 + 10) = v109;
            unint64_t v110 = *((void *)this + 1);
            if (v110 > 0xFFFFFFFFFFFFFFFBLL || v110 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 288) = *(_DWORD *)(*(void *)this + v110);
            goto LABEL_322;
          case 231:
            *(void *)v8 |= 0x100000000000000uLL;
            unint64_t v111 = *((void *)this + 1);
            if (v111 > 0xFFFFFFFFFFFFFFFBLL || v111 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 236) = *(_DWORD *)(*(void *)this + v111);
            goto LABEL_322;
          case 232:
            *(void *)v8 |= 0x2000000000000000uLL;
            unint64_t v112 = *((void *)this + 1);
            if (v112 > 0xFFFFFFFFFFFFFFFBLL || v112 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 256) = *(_DWORD *)(*(void *)this + v112);
            goto LABEL_322;
          case 233:
            *(void *)v8 |= 0x200000uLL;
            unint64_t v113 = *((void *)this + 1);
            if (v113 > 0xFFFFFFFFFFFFFFFBLL || v113 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v113);
            goto LABEL_322;
          case 234:
            *(void *)v8 |= 0x200000000000uLL;
            unint64_t v114 = *((void *)this + 1);
            if (v114 > 0xFFFFFFFFFFFFFFFBLL || v114 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 192) = *(_DWORD *)(*(void *)this + v114);
            goto LABEL_322;
          case 235:
            char v115 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 0x40u;
            *(unsigned char *)(v8 + 10) = v115;
            unint64_t v116 = *((void *)this + 1);
            if (v116 > 0xFFFFFFFFFFFFFFFBLL || v116 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 292) = *(_DWORD *)(*(void *)this + v116);
            goto LABEL_322;
          case 236:
            *(void *)v8 |= 0x80uLL;
            unint64_t v117 = *((void *)this + 1);
            if (v117 > 0xFFFFFFFFFFFFFFFBLL || v117 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v117);
            goto LABEL_322;
          case 237:
            *(void *)v8 |= 0x400uLL;
            unint64_t v118 = *((void *)this + 1);
            if (v118 > 0xFFFFFFFFFFFFFFFBLL || v118 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v118);
            goto LABEL_322;
          case 238:
            *(void *)v8 |= 0x200uLL;
            unint64_t v119 = *((void *)this + 1);
            if (v119 > 0xFFFFFFFFFFFFFFFBLL || v119 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v119);
            goto LABEL_322;
          case 239:
            *(void *)v8 |= 0x100uLL;
            unint64_t v120 = *((void *)this + 1);
            if (v120 > 0xFFFFFFFFFFFFFFFBLL || v120 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v120);
            goto LABEL_322;
          case 240:
            *(void *)v8 |= 4uLL;
            unint64_t v121 = *((void *)this + 1);
            if (v121 > 0xFFFFFFFFFFFFFFFBLL || v121 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v121);
            goto LABEL_322;
          case 241:
            *(void *)v8 |= 0x20uLL;
            unint64_t v122 = *((void *)this + 1);
            if (v122 > 0xFFFFFFFFFFFFFFFBLL || v122 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v122);
            goto LABEL_322;
          case 242:
            *(void *)v8 |= 0x10uLL;
            unint64_t v123 = *((void *)this + 1);
            if (v123 > 0xFFFFFFFFFFFFFFFBLL || v123 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v123);
            goto LABEL_322;
          case 243:
            *(void *)v8 |= 8uLL;
            unint64_t v124 = *((void *)this + 1);
            if (v124 > 0xFFFFFFFFFFFFFFFBLL || v124 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v124);
            goto LABEL_322;
          case 244:
            *(void *)v8 |= 0x800uLL;
            unint64_t v125 = *((void *)this + 1);
            if (v125 > 0xFFFFFFFFFFFFFFFBLL || v125 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v125);
            goto LABEL_322;
          case 245:
            *(void *)v8 |= 0x4000uLL;
            unint64_t v126 = *((void *)this + 1);
            if (v126 > 0xFFFFFFFFFFFFFFFBLL || v126 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 68) = *(_DWORD *)(*(void *)this + v126);
            goto LABEL_322;
          case 246:
            *(void *)v8 |= 0x2000uLL;
            unint64_t v127 = *((void *)this + 1);
            if (v127 > 0xFFFFFFFFFFFFFFFBLL || v127 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v127);
            goto LABEL_322;
          case 247:
            *(void *)v8 |= 0x1000uLL;
            unint64_t v128 = *((void *)this + 1);
            if (v128 > 0xFFFFFFFFFFFFFFFBLL || v128 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 60) = *(_DWORD *)(*(void *)this + v128);
            goto LABEL_322;
          case 248:
            *(void *)v8 |= 0x10000uLL;
            unint64_t v129 = *((void *)this + 1);
            if (v129 > 0xFFFFFFFFFFFFFFFBLL || v129 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v129);
            goto LABEL_322;
          case 249:
            *(void *)v8 |= 0x20000uLL;
            unint64_t v130 = *((void *)this + 1);
            if (v130 > 0xFFFFFFFFFFFFFFFBLL || v130 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v130);
            goto LABEL_322;
          case 250:
            *(void *)v8 |= 0x200000000000000uLL;
            unint64_t v131 = *((void *)this + 1);
            if (v131 > 0xFFFFFFFFFFFFFFFBLL || v131 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 240) = *(_DWORD *)(*(void *)this + v131);
            goto LABEL_322;
          case 251:
            *(void *)v8 |= 0x4000000000000000uLL;
            unint64_t v132 = *((void *)this + 1);
            if (v132 > 0xFFFFFFFFFFFFFFFBLL || v132 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 260) = *(_DWORD *)(*(void *)this + v132);
            goto LABEL_322;
          case 252:
            *(void *)v8 |= 0x400000uLL;
            unint64_t v133 = *((void *)this + 1);
            if (v133 > 0xFFFFFFFFFFFFFFFBLL || v133 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v133);
            goto LABEL_322;
          case 253:
            *(void *)v8 |= 0x400000000000uLL;
            unint64_t v134 = *((void *)this + 1);
            if (v134 > 0xFFFFFFFFFFFFFFFBLL || v134 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 196) = *(_DWORD *)(*(void *)this + v134);
            goto LABEL_322;
          case 254:
            char v135 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 0x80u;
            *(unsigned char *)(v8 + 10) = v135;
            unint64_t v136 = *((void *)this + 1);
            if (v136 > 0xFFFFFFFFFFFFFFFBLL || v136 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 296) = *(_DWORD *)(*(void *)this + v136);
            goto LABEL_322;
          case 255:
            *(void *)v8 |= 0x400000000000000uLL;
            unint64_t v137 = *((void *)this + 1);
            if (v137 > 0xFFFFFFFFFFFFFFFBLL || v137 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 244) = *(_DWORD *)(*(void *)this + v137);
            goto LABEL_322;
          case 256:
            *(void *)v8 |= 0x8000000000000000;
            unint64_t v138 = *((void *)this + 1);
            if (v138 > 0xFFFFFFFFFFFFFFFBLL || v138 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 264) = *(_DWORD *)(*(void *)this + v138);
            goto LABEL_322;
          case 257:
            *(void *)v8 |= 0x800000uLL;
            unint64_t v139 = *((void *)this + 1);
            if (v139 > 0xFFFFFFFFFFFFFFFBLL || v139 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 104) = *(_DWORD *)(*(void *)this + v139);
            goto LABEL_322;
          case 258:
            *(void *)v8 |= 0x800000000000uLL;
            unint64_t v140 = *((void *)this + 1);
            if (v140 > 0xFFFFFFFFFFFFFFFBLL || v140 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 200) = *(_DWORD *)(*(void *)this + v140);
            goto LABEL_322;
          case 259:
            char v141 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 0x100u;
            *(unsigned char *)(v8 + 10) = v141;
            unint64_t v142 = *((void *)this + 1);
            if (v142 > 0xFFFFFFFFFFFFFFFBLL || v142 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 300) = *(_DWORD *)(*(void *)this + v142);
            goto LABEL_322;
          case 260:
            *(void *)v8 |= (unint64_t)&_mh_execute_header;
            unint64_t v143 = *((void *)this + 1);
            if (v143 > 0xFFFFFFFFFFFFFFFBLL || v143 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 140) = *(_DWORD *)(*(void *)this + v143);
            goto LABEL_322;
          case 261:
            *(void *)v8 |= 0x200000000uLL;
            unint64_t v144 = *((void *)this + 1);
            if (v144 > 0xFFFFFFFFFFFFFFFBLL || v144 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 144) = *(_DWORD *)(*(void *)this + v144);
            goto LABEL_322;
          case 262:
            *(void *)v8 |= 0x8000000uLL;
            unint64_t v145 = *((void *)this + 1);
            if (v145 > 0xFFFFFFFFFFFFFFFBLL || v145 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 120) = *(_DWORD *)(*(void *)this + v145);
            goto LABEL_322;
          case 263:
            *(void *)v8 |= 0x4000000uLL;
            unint64_t v146 = *((void *)this + 1);
            if (v146 > 0xFFFFFFFFFFFFFFFBLL || v146 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 116) = *(_DWORD *)(*(void *)this + v146);
            goto LABEL_322;
          case 264:
            *(void *)v8 |= 0x80000000uLL;
            unint64_t v147 = *((void *)this + 1);
            if (v147 > 0xFFFFFFFFFFFFFFFBLL || v147 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 136) = *(_DWORD *)(*(void *)this + v147);
            goto LABEL_322;
          case 265:
            *(void *)v8 |= 0x40000000uLL;
            unint64_t v148 = *((void *)this + 1);
            if (v148 > 0xFFFFFFFFFFFFFFFBLL || v148 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 132) = *(_DWORD *)(*(void *)this + v148);
            goto LABEL_322;
          case 266:
            *(void *)v8 |= 0x20000000uLL;
            unint64_t v149 = *((void *)this + 1);
            if (v149 > 0xFFFFFFFFFFFFFFFBLL || v149 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 128) = *(_DWORD *)(*(void *)this + v149);
            goto LABEL_322;
          case 267:
            *(void *)v8 |= 0x10000000uLL;
            unint64_t v150 = *((void *)this + 1);
            if (v150 > 0xFFFFFFFFFFFFFFFBLL || v150 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 124) = *(_DWORD *)(*(void *)this + v150);
            goto LABEL_322;
          case 268:
            *(void *)v8 |= 0x10000000000uLL;
            unint64_t v151 = *((void *)this + 1);
            if (v151 > 0xFFFFFFFFFFFFFFFBLL || v151 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 172) = *(_DWORD *)(*(void *)this + v151);
            goto LABEL_322;
          case 269:
            *(void *)v8 |= 0x20000000000uLL;
            unint64_t v152 = *((void *)this + 1);
            if (v152 > 0xFFFFFFFFFFFFFFFBLL || v152 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 176) = *(_DWORD *)(*(void *)this + v152);
            goto LABEL_322;
          case 270:
            *(void *)v8 |= 0x800000000uLL;
            unint64_t v153 = *((void *)this + 1);
            if (v153 > 0xFFFFFFFFFFFFFFFBLL || v153 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 152) = *(_DWORD *)(*(void *)this + v153);
            goto LABEL_322;
          case 271:
            *(void *)v8 |= 0x400000000uLL;
            unint64_t v154 = *((void *)this + 1);
            if (v154 > 0xFFFFFFFFFFFFFFFBLL || v154 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 148) = *(_DWORD *)(*(void *)this + v154);
            goto LABEL_322;
          case 272:
            *(void *)v8 |= 0x8000000000uLL;
            unint64_t v155 = *((void *)this + 1);
            if (v155 > 0xFFFFFFFFFFFFFFFBLL || v155 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 168) = *(_DWORD *)(*(void *)this + v155);
            goto LABEL_322;
          case 273:
            *(void *)v8 |= 0x4000000000uLL;
            unint64_t v156 = *((void *)this + 1);
            if (v156 > 0xFFFFFFFFFFFFFFFBLL || v156 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 164) = *(_DWORD *)(*(void *)this + v156);
            goto LABEL_322;
          case 274:
            *(void *)v8 |= 0x2000000000uLL;
            unint64_t v157 = *((void *)this + 1);
            if (v157 > 0xFFFFFFFFFFFFFFFBLL || v157 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 160) = *(_DWORD *)(*(void *)this + v157);
            goto LABEL_322;
          case 275:
            *(void *)v8 |= 0x1000000000uLL;
            unint64_t v158 = *((void *)this + 1);
            if (v158 > 0xFFFFFFFFFFFFFFFBLL || v158 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 156) = *(_DWORD *)(*(void *)this + v158);
            goto LABEL_322;
          case 276:
            char v159 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 2u;
            *(unsigned char *)(v8 + 10) = v159;
            unint64_t v160 = *((void *)this + 1);
            if (v160 > 0xFFFFFFFFFFFFFFFBLL || v160 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 272) = *(_DWORD *)(*(void *)this + v160);
            goto LABEL_322;
          case 277:
            char v161 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 4u;
            *(unsigned char *)(v8 + 10) = v161;
            unint64_t v162 = *((void *)this + 1);
            if (v162 > 0xFFFFFFFFFFFFFFFBLL || v162 + 4 > *((void *)this + 2)) {
              goto LABEL_268;
            }
            *(_DWORD *)(a1 + 276) = *(_DWORD *)(*(void *)this + v162);
            goto LABEL_322;
          case 278:
            char v163 = *(unsigned char *)(v8 + 10);
            *(_WORD *)(v8 + 8) |= 1u;
            *(unsigned char *)(v8 + 10) = v163;
            unint64_t v164 = *((void *)this + 1);
            if (v164 <= 0xFFFFFFFFFFFFFFFBLL && v164 + 4 <= *((void *)this + 2))
            {
              *(_DWORD *)(a1 + 268) = *(_DWORD *)(*(void *)this + v164);
LABEL_322:
              *((void *)this + 1) += 4;
            }
            else
            {
LABEL_268:
              *((unsigned char *)this + 24) = 1;
            }
            goto LABEL_323;
          default:
            goto LABEL_278;
        }
        while (1)
        {
          if (v86 == v85)
          {
            LODWORD(v90) = 0;
            *((unsigned char *)this + 24) = 1;
            goto LABEL_335;
          }
          unint64_t v185 = v85 + 1;
          char v186 = *(unsigned char *)(v87 + v85);
          *((void *)this + 1) = v185;
          v90 |= (unint64_t)(v186 & 0x7F) << v183;
          if ((v186 & 0x80) == 0) {
            break;
          }
          v183 += 7;
          unint64_t v85 = v185;
          BOOL v15 = v184++ > 8;
          if (v15) {
            goto LABEL_309;
          }
        }
        if (*((unsigned char *)this + 24)) {
          LODWORD(v90) = 0;
        }
LABEL_335:
        *(_DWORD *)(a1 + 220) = v90;
      }
LABEL_323:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v16 = 0;
    unsigned int v17 = 0;
    unint64_t v12 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v18 = v2 + 1;
      char v19 = *(unsigned char *)(v9 + v2);
      *((void *)this + 1) = v18;
      v12 |= (unint64_t)(v19 & 0x7F) << v16;
      if ((v19 & 0x80) == 0) {
        goto LABEL_21;
      }
      v16 += 7;
      unint64_t v2 = v18;
      if (v17++ >= 9)
      {
LABEL_20:
        unint64_t v12 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10169C860(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = (uint64_t *)(result + 316);
  uint64_t v5 = *(void *)(result + 316);
  if (v5)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(result + 8), 1u);
    int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
    uint64_t v5 = *v4;
    if ((v4[1] & 0x8000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v6 = *(unsigned __int16 *)(result + 324);
  int v7 = v6 | (*(unsigned __int8 *)(result + 326) << 16);
  if ((v6 & 0x8000) != 0)
  {
LABEL_5:
    uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 310), 2u);
    int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
    uint64_t v5 = *v4;
  }
LABEL_6:
  if ((v7 & 0x10000) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 311), 3u);
    int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
    uint64_t v5 = *v4;
    if ((*v4 & 0x40000000000) == 0)
    {
LABEL_8:
      if ((v5 & 0x40000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_90;
    }
  }
  else if ((v5 & 0x40000000000) == 0)
  {
    goto LABEL_8;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 180), 0x65u);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 0x40000) == 0)
  {
LABEL_9:
    if ((v7 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_91;
  }
LABEL_90:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 84), 0x66u);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((v4[1] & 8) == 0)
  {
LABEL_10:
    if ((v7 & 0x2000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_92;
  }
LABEL_91:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 280), 0x67u);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((v4[1] & 0x2000) == 0)
  {
LABEL_11:
    if ((v7 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_93;
  }
LABEL_92:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 308), 0x68u);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((v4[1] & 0x400) == 0)
  {
LABEL_12:
    if ((v7 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_94;
  }
LABEL_93:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 305), 0x69u);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((v4[1] & 0x200) == 0)
  {
LABEL_13:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_95;
  }
LABEL_94:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 304), 0x6Au);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 0x2000000) == 0)
  {
LABEL_14:
    if ((v7 & 0x1000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_96;
  }
LABEL_95:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 112), 0x6Bu);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((v4[1] & 0x1000) == 0)
  {
LABEL_15:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_97;
  }
LABEL_96:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 307), 0x6Cu);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 0x1000000) == 0)
  {
LABEL_16:
    if ((v5 & 0x2000000000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_98;
  }
LABEL_97:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 108), 0x6Du);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 0x2000000000000) == 0)
  {
LABEL_17:
    if ((v5 & 0x1000000000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_99;
  }
LABEL_98:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 208), 0x6Eu);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 0x1000000000000) == 0)
  {
LABEL_18:
    if ((v5 & 0x4000000000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_100;
  }
LABEL_99:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 204), 0x6Fu);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 0x4000000000000) == 0)
  {
LABEL_19:
    if ((v5 & 0x40) == 0) {
      goto LABEL_20;
    }
    goto LABEL_101;
  }
LABEL_100:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 212), 0x70u);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 0x40) == 0)
  {
LABEL_20:
    if ((v5 & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_102;
  }
LABEL_101:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36), 0x71u);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 2) == 0)
  {
LABEL_21:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_103;
  }
LABEL_102:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16), 0x72u);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 0x8000) == 0)
  {
LABEL_22:
    if ((v7 & 0x40000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_104;
  }
LABEL_103:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72), 0x73u);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((v7 & 0x40000) == 0)
  {
LABEL_23:
    if ((v7 & 0x800) == 0) {
      goto LABEL_24;
    }
    goto LABEL_105;
  }
LABEL_104:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 313), 0x74u);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((v4[1] & 0x800) == 0)
  {
LABEL_24:
    if ((v7 & 0x4000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_106;
  }
LABEL_105:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 306), 0x75u);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((v4[1] & 0x4000) == 0)
  {
LABEL_25:
    if ((v5 & 0x20000000000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_107;
  }
LABEL_106:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 309), 0x76u);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 0x20000000000000) == 0)
  {
LABEL_26:
    if ((v5 & 0x8000000000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_108;
  }
LABEL_107:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 224), 0x77u);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 0x8000000000000) == 0)
  {
LABEL_27:
    if ((v5 & 0x10000000000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_109;
  }
LABEL_108:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 216), 0x78u);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 0x10000000000000) == 0)
  {
LABEL_28:
    if ((v7 & 0x20000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_110;
  }
LABEL_109:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 220), 0x79u);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((v7 & 0x20000) == 0)
  {
LABEL_29:
    if ((v5 & 0x40000000000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_111;
  }
LABEL_110:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 312), 0x7Au);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x40000000000000) == 0)
  {
LABEL_30:
    if ((v5 & 0x800000000000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_112;
  }
LABEL_111:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 228), 0xC9u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x800000000000000) == 0)
  {
LABEL_31:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_113;
  }
LABEL_112:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 248), 0xCAu);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x80000) == 0)
  {
LABEL_32:
    if ((v5 & 0x80000000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_114;
  }
LABEL_113:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 88), 0xCBu);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x80000000000) == 0)
  {
LABEL_33:
    if ((v7 & 0x10) == 0) {
      goto LABEL_34;
    }
    goto LABEL_115;
  }
LABEL_114:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 184), 0xCCu);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((v7 & 0x10) == 0)
  {
LABEL_34:
    if ((v5 & 0x80000000000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_116;
  }
LABEL_115:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 284), 0xCDu);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x80000000000000) == 0)
  {
LABEL_35:
    if ((v5 & 0x1000000000000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_117;
  }
LABEL_116:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 232), 0xCEu);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x1000000000000000) == 0)
  {
LABEL_36:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_118;
  }
LABEL_117:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 252), 0xCFu);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x100000) == 0)
  {
LABEL_37:
    if ((v5 & 0x100000000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_119;
  }
LABEL_118:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 92), 0xD0u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x100000000000) == 0)
  {
LABEL_38:
    if ((v7 & 0x20) == 0) {
      goto LABEL_39;
    }
    goto LABEL_120;
  }
LABEL_119:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 188), 0xD1u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((v7 & 0x20) == 0)
  {
LABEL_39:
    if ((v5 & 0x100000000000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_121;
  }
LABEL_120:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 288), 0xD2u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x100000000000000) == 0)
  {
LABEL_40:
    if ((v5 & 0x2000000000000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_122;
  }
LABEL_121:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 236), 0xE7u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x2000000000000000) == 0)
  {
LABEL_41:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_123;
  }
LABEL_122:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 256), 0xE8u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x200000) == 0)
  {
LABEL_42:
    if ((v5 & 0x200000000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_124;
  }
LABEL_123:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 96), 0xE9u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x200000000000) == 0)
  {
LABEL_43:
    if ((v7 & 0x40) == 0) {
      goto LABEL_44;
    }
    goto LABEL_125;
  }
LABEL_124:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 192), 0xEAu);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((v7 & 0x40) == 0)
  {
LABEL_44:
    if ((v5 & 0x80) == 0) {
      goto LABEL_45;
    }
    goto LABEL_126;
  }
LABEL_125:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 292), 0xEBu);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x80) == 0)
  {
LABEL_45:
    if ((v5 & 0x400) == 0) {
      goto LABEL_46;
    }
    goto LABEL_127;
  }
LABEL_126:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40), 0xECu);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x400) == 0)
  {
LABEL_46:
    if ((v5 & 0x200) == 0) {
      goto LABEL_47;
    }
    goto LABEL_128;
  }
LABEL_127:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52), 0xEDu);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x200) == 0)
  {
LABEL_47:
    if ((v5 & 0x100) == 0) {
      goto LABEL_48;
    }
    goto LABEL_129;
  }
LABEL_128:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48), 0xEEu);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x100) == 0)
  {
LABEL_48:
    if ((v5 & 4) == 0) {
      goto LABEL_49;
    }
    goto LABEL_130;
  }
LABEL_129:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44), 0xEFu);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 4) == 0)
  {
LABEL_49:
    if ((v5 & 0x20) == 0) {
      goto LABEL_50;
    }
    goto LABEL_131;
  }
LABEL_130:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20), 0xF0u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x20) == 0)
  {
LABEL_50:
    if ((v5 & 0x10) == 0) {
      goto LABEL_51;
    }
    goto LABEL_132;
  }
LABEL_131:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32), 0xF1u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x10) == 0)
  {
LABEL_51:
    if ((v5 & 8) == 0) {
      goto LABEL_52;
    }
    goto LABEL_133;
  }
LABEL_132:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28), 0xF2u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 8) == 0)
  {
LABEL_52:
    if ((v5 & 0x800) == 0) {
      goto LABEL_53;
    }
    goto LABEL_134;
  }
LABEL_133:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24), 0xF3u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x800) == 0)
  {
LABEL_53:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_135;
  }
LABEL_134:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56), 0xF4u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x4000) == 0)
  {
LABEL_54:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_136;
  }
LABEL_135:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 68), 0xF5u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x2000) == 0)
  {
LABEL_55:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_137;
  }
LABEL_136:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64), 0xF6u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x1000) == 0)
  {
LABEL_56:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_138;
  }
LABEL_137:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 60), 0xF7u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x10000) == 0)
  {
LABEL_57:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_139;
  }
LABEL_138:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76), 0xF8u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x20000) == 0)
  {
LABEL_58:
    if ((v5 & 0x200000000000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_140;
  }
LABEL_139:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80), 0xF9u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x200000000000000) == 0)
  {
LABEL_59:
    if ((v5 & 0x4000000000000000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_141;
  }
LABEL_140:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 240), 0xFAu);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x4000000000000000) == 0)
  {
LABEL_60:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_142;
  }
LABEL_141:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 260), 0xFBu);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x400000) == 0)
  {
LABEL_61:
    if ((v5 & 0x400000000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_143;
  }
LABEL_142:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 100), 0xFCu);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x400000000000) == 0)
  {
LABEL_62:
    if ((v7 & 0x80) == 0) {
      goto LABEL_63;
    }
    goto LABEL_144;
  }
LABEL_143:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 196), 0xFDu);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((v7 & 0x80) == 0)
  {
LABEL_63:
    if ((v5 & 0x400000000000000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_145;
  }
LABEL_144:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 296), 0xFEu);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x400000000000000) == 0)
  {
LABEL_64:
    if ((v5 & 0x8000000000000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_146;
  }
LABEL_145:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 244), 0xFFu);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x8000000000000000) == 0)
  {
LABEL_65:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_147;
  }
LABEL_146:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 264), 0x100u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x800000) == 0)
  {
LABEL_66:
    if ((v5 & 0x800000000000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_148;
  }
LABEL_147:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 104), 0x101u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x800000000000) == 0)
  {
LABEL_67:
    if ((v7 & 0x100) == 0) {
      goto LABEL_68;
    }
    goto LABEL_149;
  }
LABEL_148:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 200), 0x102u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((v7 & 0x100) == 0)
  {
LABEL_68:
    if ((v5 & 0x100000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_150;
  }
LABEL_149:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 300), 0x103u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x100000000) == 0)
  {
LABEL_69:
    if ((v5 & 0x200000000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_151;
  }
LABEL_150:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 140), 0x104u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x200000000) == 0)
  {
LABEL_70:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_152;
  }
LABEL_151:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 144), 0x105u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x8000000) == 0)
  {
LABEL_71:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_153;
  }
LABEL_152:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 120), 0x106u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x4000000) == 0)
  {
LABEL_72:
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_154;
  }
LABEL_153:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 116), 0x107u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x80000000) == 0)
  {
LABEL_73:
    if ((v5 & 0x40000000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_155;
  }
LABEL_154:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 136), 0x108u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x40000000) == 0)
  {
LABEL_74:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_156;
  }
LABEL_155:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 132), 0x109u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x20000000) == 0)
  {
LABEL_75:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_157;
  }
LABEL_156:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 128), 0x10Au);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x10000000) == 0)
  {
LABEL_76:
    if ((v5 & 0x10000000000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_158;
  }
LABEL_157:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 124), 0x10Bu);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x10000000000) == 0)
  {
LABEL_77:
    if ((v5 & 0x20000000000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_159;
  }
LABEL_158:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 172), 0x10Cu);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x20000000000) == 0)
  {
LABEL_78:
    if ((v5 & 0x800000000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_160;
  }
LABEL_159:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 176), 0x10Du);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x800000000) == 0)
  {
LABEL_79:
    if ((v5 & 0x400000000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_161;
  }
LABEL_160:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 152), 0x10Eu);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x400000000) == 0)
  {
LABEL_80:
    if ((v5 & 0x8000000000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_162;
  }
LABEL_161:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 148), 0x10Fu);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x8000000000) == 0)
  {
LABEL_81:
    if ((v5 & 0x4000000000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_163;
  }
LABEL_162:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 168), 0x110u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x4000000000) == 0)
  {
LABEL_82:
    if ((v5 & 0x2000000000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_164;
  }
LABEL_163:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 164), 0x111u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x2000000000) == 0)
  {
LABEL_83:
    if ((v5 & 0x1000000000) == 0) {
      goto LABEL_84;
    }
    goto LABEL_165;
  }
LABEL_164:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 160), 0x112u);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  if ((*v4 & 0x1000000000) == 0)
  {
LABEL_84:
    if ((v7 & 2) == 0) {
      goto LABEL_85;
    }
    goto LABEL_166;
  }
LABEL_165:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 156), 0x113u);
  LOBYTE(v7) = *((_WORD *)v4 + 4);
  if ((v4[1] & 2) == 0)
  {
LABEL_85:
    if ((v7 & 4) == 0) {
      goto LABEL_86;
    }
LABEL_167:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 276), 0x115u);
    if ((v4[1] & 1) == 0) {
      return result;
    }
    goto LABEL_168;
  }
LABEL_166:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 272), 0x114u);
  LOBYTE(v7) = *((_WORD *)v4 + 4);
  if ((v4[1] & 4) != 0) {
    goto LABEL_167;
  }
LABEL_86:
  if ((v7 & 1) == 0) {
    return result;
  }
LABEL_168:
  float v8 = *(float *)(v3 + 268);

  return PB::Writer::write(this, v8, 0x116u);
}

void *sub_10169D594(void *result)
{
  *uint64_t result = &off_1023342B8;
  *(void *)((char *)result + 364) = 0;
  *(void *)((char *)result + 356) = 0;
  return result;
}

void sub_10169D5C8(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

float sub_10169D600(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_1023342B8;
  unint64_t v2 = (uint64_t *)(a1 + 356);
  *(void *)(a1 + 364) = 0;
  *(void *)(a1 + 356) = 0;
  uint64_t v3 = (uint64_t *)(a2 + 356);
  uint64_t v4 = *(void *)(a2 + 356);
  if ((v4 & 0x800000) != 0)
  {
    uint64_t v6 = 0;
    float result = *(float *)(a2 + 132);
    uint64_t v5 = 0x800000;
    *unint64_t v2 = 0x800000;
    *(void *)(a1 + 364) = 0;
    *(float *)(a1 + 132) = result;
    uint64_t v4 = *v3;
    uint64_t v7 = *(void *)(a2 + 364);
    if ((*v3 & 0x400000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v4 & 0x400000) != 0)
  {
LABEL_5:
    float result = *(float *)(a2 + 128);
    v5 |= 0x400000uLL;
    *unint64_t v2 = v5;
    *(void *)(a1 + 364) = 0;
    *(float *)(a1 + 128) = result;
    uint64_t v4 = *v3;
    uint64_t v7 = *(void *)(a2 + 364);
  }
LABEL_6:
  if ((v4 & 0x1000000) != 0)
  {
    int v11 = *(_DWORD *)(a2 + 136);
    v5 |= 0x1000000uLL;
    *unint64_t v2 = v5;
    *(void *)(a1 + 364) = 0;
    *(_DWORD *)(a1 + 136) = v11;
    uint64_t v4 = *v3;
    uint64_t v7 = *(void *)(a2 + 364);
    if ((*v3 & 0x10000000000000) == 0)
    {
LABEL_8:
      if ((v7 & 1) == 0) {
        goto LABEL_9;
      }
      goto LABEL_115;
    }
  }
  else if ((v4 & 0x10000000000000) == 0)
  {
    goto LABEL_8;
  }
  int v12 = *(_DWORD *)(a2 + 248);
  v5 |= 0x10000000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = 0;
  *(_DWORD *)(a1 + 248) = v12;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 1) == 0)
  {
LABEL_9:
    if ((v4 & 0x400000000000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_116;
  }
LABEL_115:
  float result = *(float *)(a2 + 296);
  uint64_t v6 = 1;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = 1;
  *(float *)(a1 + 296) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x400000000000000) == 0)
  {
LABEL_10:
    if ((v4 & 0x400000000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_117;
  }
LABEL_116:
  float result = *(float *)(a2 + 272);
  v5 |= 0x400000000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 272) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x400000000000) == 0)
  {
LABEL_11:
    if ((v4 & 0x200000000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_118;
  }
LABEL_117:
  float result = *(float *)(a2 + 224);
  v5 |= 0x400000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 224) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x200000000000) == 0)
  {
LABEL_12:
    if ((v4 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_119;
  }
LABEL_118:
  float result = *(float *)(a2 + 220);
  v5 |= 0x200000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 220) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x200) == 0)
  {
LABEL_13:
    if ((v4 & 0x80000000000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_120;
  }
LABEL_119:
  float result = *(float *)(a2 + 76);
  v5 |= 0x200uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 76) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x80000000000000) == 0)
  {
LABEL_14:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_121;
  }
LABEL_120:
  int v13 = *(_DWORD *)(a2 + 260);
  v5 |= 0x80000000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 260) = v13;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x2000000) == 0)
  {
LABEL_15:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_122;
  }
LABEL_121:
  int v14 = *(_DWORD *)(a2 + 140);
  v5 |= 0x2000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 140) = v14;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x10000) == 0)
  {
LABEL_16:
    if ((v7 & 8) == 0) {
      goto LABEL_17;
    }
    goto LABEL_123;
  }
LABEL_122:
  float result = *(float *)(a2 + 104);
  v5 |= 0x10000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 104) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 8) == 0)
  {
LABEL_17:
    if ((v7 & 0x10) == 0) {
      goto LABEL_18;
    }
    goto LABEL_124;
  }
LABEL_123:
  float result = *(float *)(a2 + 308);
  v6 |= 8uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 308) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x10) == 0)
  {
LABEL_18:
    if ((v4 & 0x80000000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_125;
  }
LABEL_124:
  float result = *(float *)(a2 + 312);
  v6 |= 0x10uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 312) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x80000000000) == 0)
  {
LABEL_19:
    if ((v4 & 0x20000000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_126;
  }
LABEL_125:
  int v15 = *(_DWORD *)(a2 + 212);
  v5 |= 0x80000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 212) = v15;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x20000000000) == 0)
  {
LABEL_20:
    if ((v4 & 0x4000000000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_127;
  }
LABEL_126:
  int v16 = *(_DWORD *)(a2 + 204);
  v5 |= 0x20000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 204) = v16;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x4000000000000) == 0)
  {
LABEL_21:
    if ((v4 & 0x1000000000000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_128;
  }
LABEL_127:
  float result = *(float *)(a2 + 240);
  v5 |= 0x4000000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 240) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x1000000000000000) == 0)
  {
LABEL_22:
    if ((v7 & 2) == 0) {
      goto LABEL_23;
    }
    goto LABEL_129;
  }
LABEL_128:
  int v17 = *(_DWORD *)(a2 + 280);
  v5 |= 0x1000000000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 280) = v17;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 2) == 0)
  {
LABEL_23:
    if ((v4 & 0x80) == 0) {
      goto LABEL_24;
    }
    goto LABEL_130;
  }
LABEL_129:
  int v18 = *(_DWORD *)(a2 + 300);
  v6 |= 2uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 300) = v18;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x80) == 0)
  {
LABEL_24:
    if ((v4 & 1) == 0) {
      goto LABEL_25;
    }
    goto LABEL_131;
  }
LABEL_130:
  uint64_t v19 = *(void *)(a2 + 64);
  v5 |= 0x80uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(void *)(a1 + 64) = v19;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 1) == 0)
  {
LABEL_25:
    if ((v7 & 0x40) == 0) {
      goto LABEL_26;
    }
    goto LABEL_132;
  }
LABEL_131:
  uint64_t v20 = *(void *)(a2 + 8);
  v5 |= 1uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(void *)(a1 + 8) = v20;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x40) == 0)
  {
LABEL_26:
    if ((v7 & 0x80) == 0) {
      goto LABEL_27;
    }
    goto LABEL_133;
  }
LABEL_132:
  char v21 = *(unsigned char *)(a2 + 317);
  v6 |= 0x40uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 317) = v21;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x80) == 0)
  {
LABEL_27:
    if ((v7 & 0x8000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_134;
  }
LABEL_133:
  char v22 = *(unsigned char *)(a2 + 318);
  v6 |= 0x80uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 318) = v22;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x8000) == 0)
  {
LABEL_28:
    if ((v7 & 0x10000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_135;
  }
LABEL_134:
  char v23 = *(unsigned char *)(a2 + 326);
  v6 |= 0x8000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 326) = v23;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x10000) == 0)
  {
LABEL_29:
    if ((v7 & 0x8000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_136;
  }
LABEL_135:
  char v24 = *(unsigned char *)(a2 + 327);
  v6 |= 0x10000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 327) = v24;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x8000000) == 0)
  {
LABEL_30:
    if ((v7 & 0x2000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_137;
  }
LABEL_136:
  char v25 = *(unsigned char *)(a2 + 338);
  v6 |= 0x8000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 338) = v25;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x2000000) == 0)
  {
LABEL_31:
    if ((v7 & 0x1000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_138;
  }
LABEL_137:
  char v26 = *(unsigned char *)(a2 + 336);
  v6 |= 0x2000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 336) = v26;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x1000) == 0)
  {
LABEL_32:
    if ((v7 & 0x10000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_139;
  }
LABEL_138:
  char v27 = *(unsigned char *)(a2 + 323);
  v6 |= 0x1000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 323) = v27;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x10000000) == 0)
  {
LABEL_33:
    if ((v7 & 0x20000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_140;
  }
LABEL_139:
  char v28 = *(unsigned char *)(a2 + 339);
  v6 |= 0x10000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 339) = v28;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x20000000) == 0)
  {
LABEL_34:
    if ((v7 & 0x200) == 0) {
      goto LABEL_35;
    }
    goto LABEL_141;
  }
LABEL_140:
  char v29 = *(unsigned char *)(a2 + 340);
  v6 |= 0x20000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 340) = v29;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x200) == 0)
  {
LABEL_35:
    if ((v7 & 0x1000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_142;
  }
LABEL_141:
  char v30 = *(unsigned char *)(a2 + 320);
  v6 |= 0x200uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 320) = v30;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x1000000) == 0)
  {
LABEL_36:
    if ((v7 & 0x2000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_143;
  }
LABEL_142:
  char v31 = *(unsigned char *)(a2 + 335);
  v6 |= 0x1000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 335) = v31;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x2000) == 0)
  {
LABEL_37:
    if ((v7 & 0x4000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_144;
  }
LABEL_143:
  char v32 = *(unsigned char *)(a2 + 324);
  v6 |= 0x2000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 324) = v32;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x4000000) == 0)
  {
LABEL_38:
    if ((v7 & 0x80000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_145;
  }
LABEL_144:
  char v33 = *(unsigned char *)(a2 + 337);
  v6 |= 0x4000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 337) = v33;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x80000) == 0)
  {
LABEL_39:
    if ((v7 & 0x2000000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_146;
  }
LABEL_145:
  char v34 = *(unsigned char *)(a2 + 330);
  v6 |= 0x80000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 330) = v34;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x2000000000) == 0)
  {
LABEL_40:
    if ((v7 & 0x200000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_147;
  }
LABEL_146:
  char v35 = *(unsigned char *)(a2 + 348);
  v6 |= 0x2000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 348) = v35;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x200000000) == 0)
  {
LABEL_41:
    if ((v7 & 0x4000000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_148;
  }
LABEL_147:
  char v36 = *(unsigned char *)(a2 + 344);
  v6 |= 0x200000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 344) = v36;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x4000000000) == 0)
  {
LABEL_42:
    if ((v7 & 0x400000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_149;
  }
LABEL_148:
  char v37 = *(unsigned char *)(a2 + 349);
  v6 |= 0x4000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 349) = v37;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x400000000) == 0)
  {
LABEL_43:
    if ((v7 & 0x40000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_150;
  }
LABEL_149:
  char v38 = *(unsigned char *)(a2 + 345);
  v6 |= 0x400000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 345) = v38;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x40000000) == 0)
  {
LABEL_44:
    if ((v7 & 0x800) == 0) {
      goto LABEL_45;
    }
    goto LABEL_151;
  }
LABEL_150:
  char v39 = *(unsigned char *)(a2 + 341);
  v6 |= 0x40000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 341) = v39;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x800) == 0)
  {
LABEL_45:
    if ((v7 & 0x100000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_152;
  }
LABEL_151:
  char v40 = *(unsigned char *)(a2 + 322);
  v6 |= 0x800uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 322) = v40;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x100000) == 0)
  {
LABEL_46:
    if ((v7 & 0x8000000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_153;
  }
LABEL_152:
  char v41 = *(unsigned char *)(a2 + 331);
  v6 |= 0x100000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 331) = v41;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x8000000000) == 0)
  {
LABEL_47:
    if ((v7 & 0x800000000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_154;
  }
LABEL_153:
  char v42 = *(unsigned char *)(a2 + 350);
  v6 |= 0x8000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 350) = v42;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x800000000) == 0)
  {
LABEL_48:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_155;
  }
LABEL_154:
  char v43 = *(unsigned char *)(a2 + 346);
  v6 |= 0x800000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 346) = v43;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x20000) == 0)
  {
LABEL_49:
    if ((v7 & 0x400000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_156;
  }
LABEL_155:
  int v44 = *(_DWORD *)(a2 + 108);
  v5 |= 0x20000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 108) = v44;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x400000) == 0)
  {
LABEL_50:
    if ((v7 & 0x800000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_157;
  }
LABEL_156:
  char v45 = *(unsigned char *)(a2 + 333);
  v6 |= 0x400000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 333) = v45;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x800000) == 0)
  {
LABEL_51:
    if ((v7 & 0x20) == 0) {
      goto LABEL_52;
    }
    goto LABEL_158;
  }
LABEL_157:
  char v46 = *(unsigned char *)(a2 + 334);
  v6 |= 0x800000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 334) = v46;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x20) == 0)
  {
LABEL_52:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_159;
  }
LABEL_158:
  char v47 = *(unsigned char *)(a2 + 316);
  v6 |= 0x20uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 316) = v47;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x40000) == 0)
  {
LABEL_53:
    if ((v7 & 0x40000000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_160;
  }
LABEL_159:
  int v48 = *(_DWORD *)(a2 + 112);
  v5 |= 0x40000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 112) = v48;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x40000000000) == 0)
  {
LABEL_54:
    if ((v7 & 0x10000000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_161;
  }
LABEL_160:
  char v49 = *(unsigned char *)(a2 + 353);
  v6 |= 0x40000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 353) = v49;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x10000000000) == 0)
  {
LABEL_55:
    if ((v7 & 0x20000000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_162;
  }
LABEL_161:
  char v50 = *(unsigned char *)(a2 + 351);
  v6 |= 0x10000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 351) = v50;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x20000000000) == 0)
  {
LABEL_56:
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_163;
  }
LABEL_162:
  char v51 = *(unsigned char *)(a2 + 352);
  v6 |= 0x20000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 352) = v51;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x100000000) == 0)
  {
LABEL_57:
    if ((v7 & 0x80000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_164;
  }
LABEL_163:
  char v52 = *(unsigned char *)(a2 + 343);
  v6 |= (unint64_t)&_mh_execute_header;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 343) = v52;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x80000000) == 0)
  {
LABEL_58:
    if ((v4 & 0x20000000000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_165;
  }
LABEL_164:
  char v53 = *(unsigned char *)(a2 + 342);
  v6 |= 0x80000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 342) = v53;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x20000000000000) == 0)
  {
LABEL_59:
    if ((v4 & 0x40000000000000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_166;
  }
LABEL_165:
  int v54 = *(_DWORD *)(a2 + 252);
  v5 |= 0x20000000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 252) = v54;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x40000000000000) == 0)
  {
LABEL_60:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_167;
  }
LABEL_166:
  int v55 = *(_DWORD *)(a2 + 256);
  v5 |= 0x40000000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 256) = v55;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x4000000) == 0)
  {
LABEL_61:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_168;
  }
LABEL_167:
  int v56 = *(_DWORD *)(a2 + 144);
  v5 |= 0x4000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 144) = v56;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x8000000) == 0)
  {
LABEL_62:
    if ((v7 & 0x20000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_169;
  }
LABEL_168:
  int v57 = *(_DWORD *)(a2 + 148);
  v5 |= 0x8000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 148) = v57;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x20000) == 0)
  {
LABEL_63:
    if ((v7 & 0x4000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_170;
  }
LABEL_169:
  char v58 = *(unsigned char *)(a2 + 328);
  v6 |= 0x20000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 328) = v58;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x4000) == 0)
  {
LABEL_64:
    if ((v4 & 0x2000000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_171;
  }
LABEL_170:
  char v59 = *(unsigned char *)(a2 + 325);
  v6 |= 0x4000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 325) = v59;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x2000000000) == 0)
  {
LABEL_65:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_172;
  }
LABEL_171:
  int v60 = *(_DWORD *)(a2 + 188);
  v5 |= 0x2000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 188) = v60;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x80000) == 0)
  {
LABEL_66:
    if ((v4 & 0x1000000000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_173;
  }
LABEL_172:
  int v61 = *(_DWORD *)(a2 + 116);
  v5 |= 0x80000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 116) = v61;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x1000000000) == 0)
  {
LABEL_67:
    if ((v4 & 0x4000000000000000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_174;
  }
LABEL_173:
  int v62 = *(_DWORD *)(a2 + 184);
  v5 |= 0x1000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 184) = v62;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x4000000000000000) == 0)
  {
LABEL_68:
    if ((v4 & 0x8000000000000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_175;
  }
LABEL_174:
  float result = *(float *)(a2 + 288);
  v5 |= 0x4000000000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 288) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x8000000000000000) == 0)
  {
LABEL_69:
    if ((v4 & 0x200000000000000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_176;
  }
LABEL_175:
  float result = *(float *)(a2 + 292);
  v5 |= 0x8000000000000000;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 292) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x200000000000000) == 0)
  {
LABEL_70:
    if ((v4 & 0x800000000000000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_177;
  }
LABEL_176:
  float result = *(float *)(a2 + 268);
  v5 |= 0x200000000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 268) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x800000000000000) == 0)
  {
LABEL_71:
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_178;
  }
LABEL_177:
  int v63 = *(_DWORD *)(a2 + 276);
  v5 |= 0x800000000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 276) = v63;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x2000000000000000) == 0)
  {
LABEL_72:
    if ((v7 & 0x400) == 0) {
      goto LABEL_73;
    }
    goto LABEL_179;
  }
LABEL_178:
  int v64 = *(_DWORD *)(a2 + 284);
  v5 |= 0x2000000000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 284) = v64;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x400) == 0)
  {
LABEL_73:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_180;
  }
LABEL_179:
  char v65 = *(unsigned char *)(a2 + 321);
  v6 |= 0x400uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 321) = v65;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x4000) == 0)
  {
LABEL_74:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_181;
  }
LABEL_180:
  int v66 = *(_DWORD *)(a2 + 96);
  v5 |= 0x4000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 96) = v66;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x1000) == 0)
  {
LABEL_75:
    if ((v4 & 0x100000000000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_182;
  }
LABEL_181:
  float result = *(float *)(a2 + 88);
  v5 |= 0x1000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 88) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x100000000000) == 0)
  {
LABEL_76:
    if ((v4 & 0x100000000000000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_183;
  }
LABEL_182:
  int v67 = *(_DWORD *)(a2 + 216);
  v5 |= 0x100000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 216) = v67;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x100000000000000) == 0)
  {
LABEL_77:
    if ((v4 & 0x40) == 0) {
      goto LABEL_78;
    }
    goto LABEL_184;
  }
LABEL_183:
  int v68 = *(_DWORD *)(a2 + 264);
  v5 |= 0x100000000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 264) = v68;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x40) == 0)
  {
LABEL_78:
    if ((v4 & 0x800000000000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_185;
  }
LABEL_184:
  uint64_t v69 = *(void *)(a2 + 56);
  v5 |= 0x40uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(void *)(a1 + 56) = v69;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x800000000000) == 0)
  {
LABEL_79:
    if ((v4 & 0x1000000000000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_186;
  }
LABEL_185:
  int v70 = *(_DWORD *)(a2 + 228);
  v5 |= 0x800000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 228) = v70;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x1000000000000) == 0)
  {
LABEL_80:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_187;
  }
LABEL_186:
  int v71 = *(_DWORD *)(a2 + 232);
  v5 |= 0x1000000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 232) = v71;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x100000) == 0)
  {
LABEL_81:
    if ((v4 & 0x400) == 0) {
      goto LABEL_82;
    }
    goto LABEL_188;
  }
LABEL_187:
  float result = *(float *)(a2 + 120);
  v5 |= 0x100000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 120) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x400) == 0)
  {
LABEL_82:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_189;
  }
LABEL_188:
  float result = *(float *)(a2 + 80);
  v5 |= 0x400uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 80) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x200000) == 0)
  {
LABEL_83:
    if ((v4 & 0x800) == 0) {
      goto LABEL_84;
    }
    goto LABEL_190;
  }
LABEL_189:
  float result = *(float *)(a2 + 124);
  v5 |= 0x200000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 124) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x800) == 0)
  {
LABEL_84:
    if ((v4 & 0x100) == 0) {
      goto LABEL_85;
    }
    goto LABEL_191;
  }
LABEL_190:
  float result = *(float *)(a2 + 84);
  v5 |= 0x800uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 84) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x100) == 0)
  {
LABEL_85:
    if ((v7 & 0x200000) == 0) {
      goto LABEL_86;
    }
    goto LABEL_192;
  }
LABEL_191:
  float result = *(float *)(a2 + 72);
  v5 |= 0x100uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 72) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x200000) == 0)
  {
LABEL_86:
    if ((v7 & 4) == 0) {
      goto LABEL_87;
    }
    goto LABEL_193;
  }
LABEL_192:
  char v72 = *(unsigned char *)(a2 + 332);
  v6 |= 0x200000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 332) = v72;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 4) == 0)
  {
LABEL_87:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_88;
    }
    goto LABEL_194;
  }
LABEL_193:
  int v73 = *(_DWORD *)(a2 + 304);
  v6 |= 4uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 304) = v73;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x10000000) == 0)
  {
LABEL_88:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_89;
    }
    goto LABEL_195;
  }
LABEL_194:
  int v74 = *(_DWORD *)(a2 + 152);
  v5 |= 0x10000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 152) = v74;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x40000000) == 0)
  {
LABEL_89:
    if ((v7 & 0x1000000000) == 0) {
      goto LABEL_90;
    }
    goto LABEL_196;
  }
LABEL_195:
  int v75 = *(_DWORD *)(a2 + 160);
  v5 |= 0x40000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 160) = v75;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x1000000000) == 0)
  {
LABEL_90:
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_91;
    }
    goto LABEL_197;
  }
LABEL_196:
  char v76 = *(unsigned char *)(a2 + 347);
  v6 |= 0x1000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 347) = v76;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x80000000) == 0)
  {
LABEL_91:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_92;
    }
    goto LABEL_198;
  }
LABEL_197:
  int v77 = *(_DWORD *)(a2 + 164);
  v5 |= 0x80000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 164) = v77;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x20000000) == 0)
  {
LABEL_92:
    if ((v4 & 0x8000000000000) == 0) {
      goto LABEL_93;
    }
    goto LABEL_199;
  }
LABEL_198:
  int v78 = *(_DWORD *)(a2 + 156);
  v5 |= 0x20000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 156) = v78;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x8000000000000) == 0)
  {
LABEL_93:
    if ((v4 & 0x4000000000) == 0) {
      goto LABEL_94;
    }
    goto LABEL_200;
  }
LABEL_199:
  float result = *(float *)(a2 + 244);
  v5 |= 0x8000000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 244) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x4000000000) == 0)
  {
LABEL_94:
    if ((v4 & 0x8000000000) == 0) {
      goto LABEL_95;
    }
    goto LABEL_201;
  }
LABEL_200:
  int v79 = *(_DWORD *)(a2 + 192);
  v5 |= 0x4000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 192) = v79;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x8000000000) == 0)
  {
LABEL_95:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_96;
    }
    goto LABEL_202;
  }
LABEL_201:
  int v80 = *(_DWORD *)(a2 + 196);
  v5 |= 0x8000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 196) = v80;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x8000) == 0)
  {
LABEL_96:
    if ((v4 & 0x40000000000) == 0) {
      goto LABEL_97;
    }
    goto LABEL_203;
  }
LABEL_202:
  float result = *(float *)(a2 + 100);
  v5 |= 0x8000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(float *)(a1 + 100) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x40000000000) == 0)
  {
LABEL_97:
    if ((v4 & 0x10000000000) == 0) {
      goto LABEL_98;
    }
    goto LABEL_204;
  }
LABEL_203:
  int v81 = *(_DWORD *)(a2 + 208);
  v5 |= 0x40000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 208) = v81;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x10000000000) == 0)
  {
LABEL_98:
    if ((v4 & 0x800000000) == 0) {
      goto LABEL_99;
    }
    goto LABEL_205;
  }
LABEL_204:
  int v82 = *(_DWORD *)(a2 + 200);
  v5 |= 0x10000000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 200) = v82;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x800000000) == 0)
  {
LABEL_99:
    if ((v4 & 0x100000000) == 0) {
      goto LABEL_100;
    }
    goto LABEL_206;
  }
LABEL_205:
  int v83 = *(_DWORD *)(a2 + 180);
  v5 |= 0x800000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 180) = v83;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x100000000) == 0)
  {
LABEL_100:
    if ((v4 & 0x400000000) == 0) {
      goto LABEL_101;
    }
    goto LABEL_207;
  }
LABEL_206:
  int v84 = *(_DWORD *)(a2 + 168);
  v5 |= (unint64_t)&_mh_execute_header;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 168) = v84;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((*v3 & 0x400000000) == 0)
  {
LABEL_101:
    if ((v7 & 0x100) == 0) {
      goto LABEL_102;
    }
    goto LABEL_208;
  }
LABEL_207:
  int v85 = *(_DWORD *)(a2 + 176);
  v5 |= 0x400000000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(_DWORD *)(a1 + 176) = v85;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)(a2 + 364);
  if ((v7 & 0x100) == 0)
  {
LABEL_102:
    if ((v7 & 0x40000) == 0) {
      goto LABEL_103;
    }
    goto LABEL_209;
  }
LABEL_208:
  char v86 = *(unsigned char *)(a2 + 319);
  v6 |= 0x100uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 319) = v86;
  uint64_t v4 = *v3;
  if ((*(void *)(a2 + 364) & 0x40000) == 0)
  {
LABEL_103:
    if ((v4 & 0x200000000) == 0) {
      goto LABEL_105;
    }
    goto LABEL_104;
  }
LABEL_209:
  char v87 = *(unsigned char *)(a2 + 329);
  v6 |= 0x40000uLL;
  *unint64_t v2 = v5;
  *(void *)(a1 + 364) = v6;
  *(unsigned char *)(a1 + 329) = v87;
  if ((*v3 & 0x200000000) != 0)
  {
LABEL_104:
    int v9 = *(_DWORD *)(a2 + 172);
    *unint64_t v2 = v5 | 0x200000000;
    *(void *)(a1 + 364) = v6;
    *(_DWORD *)(a1 + 172) = v9;
  }
LABEL_105:
  uint64_t v10 = *v3;
  if ((*v3 & 2) != 0)
  {
    uint64_t v88 = *(void *)(a2 + 16);
    *v2 |= 2uLL;
    *(void *)(a1 + 16) = v88;
    uint64_t v10 = *v3;
    if ((*v3 & 0x20) == 0)
    {
LABEL_107:
      if ((v10 & 4) == 0) {
        goto LABEL_108;
      }
      goto LABEL_213;
    }
  }
  else if ((v10 & 0x20) == 0)
  {
    goto LABEL_107;
  }
  uint64_t v89 = *(void *)(a2 + 48);
  *v2 |= 0x20uLL;
  *(void *)(a1 + 48) = v89;
  uint64_t v10 = *v3;
  if ((*v3 & 4) == 0)
  {
LABEL_108:
    if ((v10 & 8) == 0) {
      goto LABEL_109;
    }
    goto LABEL_214;
  }
LABEL_213:
  uint64_t v90 = *(void *)(a2 + 24);
  *v2 |= 4uLL;
  *(void *)(a1 + 24) = v90;
  uint64_t v10 = *v3;
  if ((*v3 & 8) == 0)
  {
LABEL_109:
    if ((v10 & 0x10) == 0) {
      goto LABEL_110;
    }
    goto LABEL_215;
  }
LABEL_214:
  uint64_t v91 = *(void *)(a2 + 32);
  *v2 |= 8uLL;
  *(void *)(a1 + 32) = v91;
  uint64_t v10 = *v3;
  if ((*v3 & 0x10) == 0)
  {
LABEL_110:
    if ((v10 & 0x2000000000000) == 0) {
      goto LABEL_111;
    }
    goto LABEL_216;
  }
LABEL_215:
  uint64_t v92 = *(void *)(a2 + 40);
  *v2 |= 0x10uLL;
  *(void *)(a1 + 40) = v92;
  uint64_t v10 = *v3;
  if ((*v3 & 0x2000000000000) == 0)
  {
LABEL_111:
    if ((v10 & 0x2000) == 0) {
      return result;
    }
LABEL_217:
    float result = *(float *)(a2 + 92);
    *v2 |= 0x2000uLL;
    *(float *)(a1 + 92) = result;
    return result;
  }
LABEL_216:
  int v93 = *(_DWORD *)(a2 + 236);
  *v2 |= 0x2000000000000uLL;
  *(_DWORD *)(a1 + 236) = v93;
  if ((*v3 & 0x2000) != 0) {
    goto LABEL_217;
  }
  return result;
}

uint64_t sub_10169E218(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = (uint64_t *)(a1 + 356);
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x20) != 0)
  {
    PB::TextFormatter::format(this, "anyLowSense", *(unsigned char *)(a1 + 316));
    uint64_t v6 = *(void *)(a1 + 364);
  }
  uint64_t v7 = *v5;
  if ((*v5 & 0x100) != 0)
  {
    PB::TextFormatter::format(this, "autocorrelationPeriodicCount", *(float *)(a1 + 72));
    uint64_t v7 = *v5;
    uint64_t v6 = *(void *)(a1 + 364);
    if ((*v5 & 0x200) == 0)
    {
LABEL_5:
      if ((v6 & 0x40) == 0) {
        goto LABEL_6;
      }
      goto LABEL_108;
    }
  }
  else if ((v7 & 0x200) == 0)
  {
    goto LABEL_5;
  }
  PB::TextFormatter::format(this, "autocorrelationPeriodicCountThreshold", *(float *)(a1 + 76));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x40) == 0)
  {
LABEL_6:
    if ((v7 & 1) == 0) {
      goto LABEL_7;
    }
    goto LABEL_109;
  }
LABEL_108:
  PB::TextFormatter::format(this, "crashDetectorDecision", *(unsigned char *)(a1 + 317));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 1) == 0)
  {
LABEL_7:
    if ((v7 & 0x400) == 0) {
      goto LABEL_8;
    }
    goto LABEL_110;
  }
LABEL_109:
  PB::TextFormatter::format(this, "crashTimestamp", *(void *)(a1 + 8));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x400) == 0)
  {
LABEL_8:
    if ((v7 & 0x800) == 0) {
      goto LABEL_9;
    }
    goto LABEL_111;
  }
LABEL_110:
  PB::TextFormatter::format(this, "cumulativeRotation", *(float *)(a1 + 80));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x800) == 0)
  {
LABEL_9:
    if ((v7 & 0x1000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_112;
  }
LABEL_111:
  PB::TextFormatter::format(this, "cumulativeRotationHarmonicMean", *(float *)(a1 + 84));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x1000) == 0)
  {
LABEL_10:
    if ((v7 & 0x2000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_113;
  }
LABEL_112:
  PB::TextFormatter::format(this, "currentCadence", *(float *)(a1 + 88));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x2000) == 0)
  {
LABEL_11:
    if ((v7 & 0x4000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_114;
  }
LABEL_113:
  PB::TextFormatter::format(this, "deltaRealTrigger", *(float *)(a1 + 92));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x4000) == 0)
  {
LABEL_12:
    if ((v7 & 0x8000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_115;
  }
LABEL_114:
  PB::TextFormatter::format(this, "deltaSteps", *(_DWORD *)(a1 + 96));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x8000) == 0)
  {
LABEL_13:
    if ((v7 & 0x10000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_116;
  }
LABEL_115:
  PB::TextFormatter::format(this, "distanceToNearestRoad", *(float *)(a1 + 100));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x10000) == 0)
  {
LABEL_14:
    if ((v6 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_117;
  }
LABEL_116:
  PB::TextFormatter::format(this, "distanceToNearestRoadThreshold", *(float *)(a1 + 104));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x80) == 0)
  {
LABEL_15:
    if ((v6 & 0x100) == 0) {
      goto LABEL_16;
    }
    goto LABEL_118;
  }
LABEL_117:
  PB::TextFormatter::format(this, "earlyCrashDetectorDecision", *(unsigned char *)(a1 + 318));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x100) == 0)
  {
LABEL_16:
    if ((v6 & 0x200) == 0) {
      goto LABEL_17;
    }
    goto LABEL_119;
  }
LABEL_118:
  PB::TextFormatter::format(this, "escalationCandidate", *(unsigned char *)(a1 + 319));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x200) == 0)
  {
LABEL_17:
    if ((v7 & 0x20000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_120;
  }
LABEL_119:
  PB::TextFormatter::format(this, "escalationCandidateSuppressed", *(unsigned char *)(a1 + 320));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x20000) == 0)
  {
LABEL_18:
    if ((v7 & 2) == 0) {
      goto LABEL_19;
    }
    goto LABEL_121;
  }
LABEL_120:
  PB::TextFormatter::format(this, "faultCounter", *(_DWORD *)(a1 + 108));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 2) == 0)
  {
LABEL_19:
    if ((v6 & 0x400) == 0) {
      goto LABEL_20;
    }
    goto LABEL_122;
  }
LABEL_121:
  PB::TextFormatter::format(this, "firstTimestampMAPDecision", *(void *)(a1 + 16));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x400) == 0)
  {
LABEL_20:
    if ((v7 & 0x40000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_123;
  }
LABEL_122:
  PB::TextFormatter::format(this, "hasSteps", *(unsigned char *)(a1 + 321));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x40000) == 0)
  {
LABEL_21:
    if ((v6 & 0x800) == 0) {
      goto LABEL_22;
    }
    goto LABEL_124;
  }
LABEL_123:
  PB::TextFormatter::format(this, "highSensitivityBitmap", *(_DWORD *)(a1 + 112));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x800) == 0)
  {
LABEL_22:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_125;
  }
LABEL_124:
  PB::TextFormatter::format(this, "isAirbagDetectedOverWindow", *(unsigned char *)(a1 + 322));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x1000) == 0)
  {
LABEL_23:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_126;
  }
LABEL_125:
  PB::TextFormatter::format(this, "isAutocorrelationDecided", *(unsigned char *)(a1 + 323));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x2000) == 0)
  {
LABEL_24:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_127;
  }
LABEL_126:
  PB::TextFormatter::format(this, "isCrashDetected", *(unsigned char *)(a1 + 324));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x4000) == 0)
  {
LABEL_25:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_128;
  }
LABEL_127:
  PB::TextFormatter::format(this, "isDecisionMadeAtBoundary", *(unsigned char *)(a1 + 325));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x8000) == 0)
  {
LABEL_26:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_129;
  }
LABEL_128:
  PB::TextFormatter::format(this, "isDescalationDecided", *(unsigned char *)(a1 + 326));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x10000) == 0)
  {
LABEL_27:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_130;
  }
LABEL_129:
  PB::TextFormatter::format(this, "isDescalationRequired", *(unsigned char *)(a1 + 327));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x20000) == 0)
  {
LABEL_28:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_131;
  }
LABEL_130:
  PB::TextFormatter::format(this, "isEvaluatingMovingGps", *(unsigned char *)(a1 + 328));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x40000) == 0)
  {
LABEL_29:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_132;
  }
LABEL_131:
  PB::TextFormatter::format(this, "isFreeFallDetectedEpoch", *(unsigned char *)(a1 + 329));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x80000) == 0)
  {
LABEL_30:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_133;
  }
LABEL_132:
  PB::TextFormatter::format(this, "isHighSpeedCrashDetected", *(unsigned char *)(a1 + 330));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x100000) == 0)
  {
LABEL_31:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_134;
  }
LABEL_133:
  PB::TextFormatter::format(this, "isHighSpeedCrashDetectedOverWindow", *(unsigned char *)(a1 + 331));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x200000) == 0)
  {
LABEL_32:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_135;
  }
LABEL_134:
  PB::TextFormatter::format(this, "isHighSpeedDetectedOverWindow", *(unsigned char *)(a1 + 332));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x400000) == 0)
  {
LABEL_33:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_136;
  }
LABEL_135:
  PB::TextFormatter::format(this, "isLowSensCrashDetected", *(unsigned char *)(a1 + 333));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x800000) == 0)
  {
LABEL_34:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_137;
  }
LABEL_136:
  PB::TextFormatter::format(this, "isLowSensRolloverCrashDetected", *(unsigned char *)(a1 + 334));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x1000000) == 0)
  {
LABEL_35:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_138;
  }
LABEL_137:
  PB::TextFormatter::format(this, "isMAPFPDecided", *(unsigned char *)(a1 + 335));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_36:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_139;
  }
LABEL_138:
  PB::TextFormatter::format(this, "isQuiescenceDecided", *(unsigned char *)(a1 + 336));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_37:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_140;
  }
LABEL_139:
  PB::TextFormatter::format(this, "isRolloverCrashDetected", *(unsigned char *)(a1 + 337));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x8000000) == 0)
  {
LABEL_38:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_141;
  }
LABEL_140:
  PB::TextFormatter::format(this, "isStepsDecided", *(unsigned char *)(a1 + 338));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x10000000) == 0)
  {
LABEL_39:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_142;
  }
LABEL_141:
  PB::TextFormatter::format(this, "isTriggerClustersDecided", *(unsigned char *)(a1 + 339));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x20000000) == 0)
  {
LABEL_40:
    if ((v7 & 4) == 0) {
      goto LABEL_41;
    }
    goto LABEL_143;
  }
LABEL_142:
  PB::TextFormatter::format(this, "isUshaFPDecided", *(unsigned char *)(a1 + 340));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 4) == 0)
  {
LABEL_41:
    if ((v7 & 8) == 0) {
      goto LABEL_42;
    }
    goto LABEL_144;
  }
LABEL_143:
  PB::TextFormatter::format(this, "lastLocalRealTriggerTimestamp", *(void *)(a1 + 24));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 8) == 0)
  {
LABEL_42:
    if ((v7 & 0x10) == 0) {
      goto LABEL_43;
    }
    goto LABEL_145;
  }
LABEL_144:
  PB::TextFormatter::format(this, "lastRemoteRealTriggerTimestamp", *(void *)(a1 + 32));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x10) == 0)
  {
LABEL_43:
    if ((v7 & 0x20) == 0) {
      goto LABEL_44;
    }
    goto LABEL_146;
  }
LABEL_145:
  PB::TextFormatter::format(this, "lastRemoteSampleTimestamp", *(void *)(a1 + 40));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x20) == 0)
  {
LABEL_44:
    if ((v7 & 0x80000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_147;
  }
LABEL_146:
  PB::TextFormatter::format(this, "lastTimestampMAPDecision", *(void *)(a1 + 48));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x80000) == 0)
  {
LABEL_45:
    if ((v7 & 0x100000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_148;
  }
LABEL_147:
  PB::TextFormatter::format(this, "lowSpeedOrFakeCountAtBoundaryThreshold", *(_DWORD *)(a1 + 116));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x100000) == 0)
  {
LABEL_46:
    if ((v7 & 0x200000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_149;
  }
LABEL_148:
  PB::TextFormatter::format(this, "maxPulse", *(float *)(a1 + 120));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x200000) == 0)
  {
LABEL_47:
    if ((v7 & 0x400000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_150;
  }
LABEL_149:
  PB::TextFormatter::format(this, "maxPulseHarmonicMean", *(float *)(a1 + 124));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x400000) == 0)
  {
LABEL_48:
    if ((v7 & 0x800000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_151;
  }
LABEL_150:
  PB::TextFormatter::format(this, "maximumHoldDuration", *(float *)(a1 + 128));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x800000) == 0)
  {
LABEL_49:
    if ((v7 & 0x1000000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_152;
  }
LABEL_151:
  PB::TextFormatter::format(this, "minimumHoldDuration", *(float *)(a1 + 132));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x1000000) == 0)
  {
LABEL_50:
    if ((v7 & 0x2000000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_153;
  }
LABEL_152:
  PB::TextFormatter::format(this, "movingCountThreshold", *(_DWORD *)(a1 + 136));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x2000000) == 0)
  {
LABEL_51:
    if ((v7 & 0x4000000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_154;
  }
LABEL_153:
  PB::TextFormatter::format(this, "movingCountThresholdFromSydneyB", *(_DWORD *)(a1 + 140));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x4000000) == 0)
  {
LABEL_52:
    if ((v7 & 0x8000000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_155;
  }
LABEL_154:
  PB::TextFormatter::format(this, "movingGpsCount", *(_DWORD *)(a1 + 144));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x8000000) == 0)
  {
LABEL_53:
    if ((v7 & 0x10000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_156;
  }
LABEL_155:
  PB::TextFormatter::format(this, "movingGpsCountTotal", *(_DWORD *)(a1 + 148));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x10000000) == 0)
  {
LABEL_54:
    if ((v7 & 0x20000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_157;
  }
LABEL_156:
  PB::TextFormatter::format(this, "numAudioSkiing", *(_DWORD *)(a1 + 152));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x20000000) == 0)
  {
LABEL_55:
    if ((v7 & 0x40000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_158;
  }
LABEL_157:
  PB::TextFormatter::format(this, "numAudioSkiingThreshold", *(_DWORD *)(a1 + 156));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x40000000) == 0)
  {
LABEL_56:
    if ((v7 & 0x80000000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_159;
  }
LABEL_158:
  PB::TextFormatter::format(this, "numBaroIncreasesSkiing", *(_DWORD *)(a1 + 160));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x80000000) == 0)
  {
LABEL_57:
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_160;
  }
LABEL_159:
  PB::TextFormatter::format(this, "numBaroIncreasesSkiingThreshold", *(_DWORD *)(a1 + 164));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x100000000) == 0)
  {
LABEL_58:
    if ((v7 & 0x200000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_161;
  }
LABEL_160:
  PB::TextFormatter::format(this, "numDeescalationAOI", *(_DWORD *)(a1 + 168));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x200000000) == 0)
  {
LABEL_59:
    if ((v7 & 0x400000000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_162;
  }
LABEL_161:
  PB::TextFormatter::format(this, "numDeescalationMAP", *(_DWORD *)(a1 + 172));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x400000000) == 0)
  {
LABEL_60:
    if ((v7 & 0x800000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_163;
  }
LABEL_162:
  PB::TextFormatter::format(this, "numDeescalationTwoLevel", *(_DWORD *)(a1 + 176));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x800000000) == 0)
  {
LABEL_61:
    if ((v7 & 0x1000000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_164;
  }
LABEL_163:
  PB::TextFormatter::format(this, "numDeescalationUsha", *(_DWORD *)(a1 + 180));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x1000000000) == 0)
  {
LABEL_62:
    if ((v7 & 0x2000000000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_165;
  }
LABEL_164:
  PB::TextFormatter::format(this, "numGpsSamplesInHistory", *(_DWORD *)(a1 + 184));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x2000000000) == 0)
  {
LABEL_63:
    if ((v7 & 0x4000000000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_166;
  }
LABEL_165:
  PB::TextFormatter::format(this, "numLowOrFakeGpsSamplesInHistory", *(_DWORD *)(a1 + 188));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x4000000000) == 0)
  {
LABEL_64:
    if ((v7 & 0x8000000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_167;
  }
LABEL_166:
  PB::TextFormatter::format(this, "numTriggersWithRecentSkiLiftDetected", *(_DWORD *)(a1 + 192));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x8000000000) == 0)
  {
LABEL_65:
    if ((v7 & 0x10000000000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_168;
  }
LABEL_167:
  PB::TextFormatter::format(this, "numTriggersWithTrueBtHint", *(_DWORD *)(a1 + 196));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x10000000000) == 0)
  {
LABEL_66:
    if ((v7 & 0x20000000000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_169;
  }
LABEL_168:
  PB::TextFormatter::format(this, "numUshaCPEpoch", *(_DWORD *)(a1 + 200));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x20000000000) == 0)
  {
LABEL_67:
    if ((v7 & 0x40000000000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_170;
  }
LABEL_169:
  PB::TextFormatter::format(this, "numUshaCPEpochThreshold", *(_DWORD *)(a1 + 204));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x40000000000) == 0)
  {
LABEL_68:
    if ((v7 & 0x80000000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_171;
  }
LABEL_170:
  PB::TextFormatter::format(this, "numUshaFPEpoch", *(_DWORD *)(a1 + 208));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x80000000000) == 0)
  {
LABEL_69:
    if ((v7 & 0x100000000000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_172;
  }
LABEL_171:
  PB::TextFormatter::format(this, "numUshaFPEpochThreshold", *(_DWORD *)(a1 + 212));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x100000000000) == 0)
  {
LABEL_70:
    if ((v7 & 0x200000000000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_173;
  }
LABEL_172:
  PB::TextFormatter::format(this, "pedometerArmConstrainedState", *(_DWORD *)(a1 + 216));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x200000000000) == 0)
  {
LABEL_71:
    if ((v7 & 0x400000000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_174;
  }
LABEL_173:
  PB::TextFormatter::format(this, "quiescenceCumulativeRotationHarmonicMeanThreshold", *(float *)(a1 + 220));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x400000000000) == 0)
  {
LABEL_72:
    if ((v7 & 0x800000000000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_175;
  }
LABEL_174:
  PB::TextFormatter::format(this, "quiescenceMaxPulseHarmonicMeanThreshold", *(float *)(a1 + 224));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x800000000000) == 0)
  {
LABEL_73:
    if ((v7 & 0x1000000000000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_176;
  }
LABEL_175:
  PB::TextFormatter::format(this, "quiescencePulseEpochCount", *(_DWORD *)(a1 + 228));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x1000000000000) == 0)
  {
LABEL_74:
    if ((v7 & 0x2000000000000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_177;
  }
LABEL_176:
  PB::TextFormatter::format(this, "quiescenceSpinEpochCount", *(_DWORD *)(a1 + 232));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x2000000000000) == 0)
  {
LABEL_75:
    if ((v7 & 0x4000000000000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_178;
  }
LABEL_177:
  PB::TextFormatter::format(this, "sameEventState", *(_DWORD *)(a1 + 236));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((*v5 & 0x4000000000000) == 0)
  {
LABEL_76:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_179;
  }
LABEL_178:
  PB::TextFormatter::format(this, "secondDeescalationHoldDuration", *(float *)(a1 + 240));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x40000000) == 0)
  {
LABEL_77:
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_180;
  }
LABEL_179:
  PB::TextFormatter::format(this, "shouldDeescalateBecauseOfAutocorrelationCondition", *(unsigned char *)(a1 + 341));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x80000000) == 0)
  {
LABEL_78:
    if ((v6 & 0x100000000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_181;
  }
LABEL_180:
  PB::TextFormatter::format(this, "shouldDeescalateBecauseOfJointDetectionCondition", *(unsigned char *)(a1 + 342));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x100000000) == 0)
  {
LABEL_79:
    if ((v6 & 0x200000000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_182;
  }
LABEL_181:
  PB::TextFormatter::format(this, "shouldDeescalateBecauseOfMAPFPCondition", *(unsigned char *)(a1 + 343));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x200000000) == 0)
  {
LABEL_80:
    if ((v6 & 0x400000000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_183;
  }
LABEL_182:
  PB::TextFormatter::format(this, "shouldDeescalateBecauseOfMovingCondition", *(unsigned char *)(a1 + 344));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x400000000) == 0)
  {
LABEL_81:
    if ((v6 & 0x800000000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_184;
  }
LABEL_183:
  PB::TextFormatter::format(this, "shouldDeescalateBecauseOfQuiescenceCondition", *(unsigned char *)(a1 + 345));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x800000000) == 0)
  {
LABEL_82:
    if ((v6 & 0x1000000000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_185;
  }
LABEL_184:
  PB::TextFormatter::format(this, "shouldDeescalateBecauseOfSkiLiftCondition", *(unsigned char *)(a1 + 346));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x1000000000) == 0)
  {
LABEL_83:
    if ((v6 & 0x2000000000) == 0) {
      goto LABEL_84;
    }
    goto LABEL_186;
  }
LABEL_185:
  PB::TextFormatter::format(this, "shouldDeescalateBecauseOfSkiingCondition", *(unsigned char *)(a1 + 347));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x2000000000) == 0)
  {
LABEL_84:
    if ((v6 & 0x4000000000) == 0) {
      goto LABEL_85;
    }
    goto LABEL_187;
  }
LABEL_186:
  PB::TextFormatter::format(this, "shouldDeescalateBecauseOfStaticCondition", *(unsigned char *)(a1 + 348));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x4000000000) == 0)
  {
LABEL_85:
    if ((v6 & 0x8000000000) == 0) {
      goto LABEL_86;
    }
    goto LABEL_188;
  }
LABEL_187:
  PB::TextFormatter::format(this, "shouldDeescalateBecauseOfStepsCondition", *(unsigned char *)(a1 + 349));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x8000000000) == 0)
  {
LABEL_86:
    if ((v6 & 0x10000000000) == 0) {
      goto LABEL_87;
    }
    goto LABEL_189;
  }
LABEL_188:
  PB::TextFormatter::format(this, "shouldDeescalateBecauseOfTriggerClustersCondition", *(unsigned char *)(a1 + 350));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x10000000000) == 0)
  {
LABEL_87:
    if ((v6 & 0x20000000000) == 0) {
      goto LABEL_88;
    }
    goto LABEL_190;
  }
LABEL_189:
  PB::TextFormatter::format(this, "shouldDeescalateBecauseOfTwoLevelSensitivityCondition", *(unsigned char *)(a1 + 351));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)(a1 + 364);
  if ((v6 & 0x20000000000) == 0)
  {
LABEL_88:
    if ((v6 & 0x40000000000) == 0) {
      goto LABEL_89;
    }
    goto LABEL_191;
  }
LABEL_190:
  PB::TextFormatter::format(this, "shouldDeescalateBecauseOfUshaFPCondition", *(unsigned char *)(a1 + 352));
  uint64_t v7 = *v5;
  if ((*(void *)(a1 + 364) & 0x40000000000) == 0)
  {
LABEL_89:
    if ((v7 & 0x8000000000000) == 0) {
      goto LABEL_90;
    }
    goto LABEL_192;
  }
LABEL_191:
  PB::TextFormatter::format(this, "shouldEnableHighSensBecauseOfDistanceToRoadCondition", *(unsigned char *)(a1 + 353));
  uint64_t v7 = *v5;
  if ((*v5 & 0x8000000000000) == 0)
  {
LABEL_90:
    if ((v7 & 0x10000000000000) == 0) {
      goto LABEL_91;
    }
    goto LABEL_193;
  }
LABEL_192:
  PB::TextFormatter::format(this, "skiingPressureChangeOverEpochThreshold", *(float *)(a1 + 244));
  uint64_t v7 = *v5;
  if ((*v5 & 0x10000000000000) == 0)
  {
LABEL_91:
    if ((v7 & 0x20000000000000) == 0) {
      goto LABEL_92;
    }
    goto LABEL_194;
  }
LABEL_193:
  PB::TextFormatter::format(this, "staticCountThreshold", *(_DWORD *)(a1 + 248));
  uint64_t v7 = *v5;
  if ((*v5 & 0x20000000000000) == 0)
  {
LABEL_92:
    if ((v7 & 0x40000000000000) == 0) {
      goto LABEL_93;
    }
    goto LABEL_195;
  }
LABEL_194:
  PB::TextFormatter::format(this, "staticGpsCount", *(_DWORD *)(a1 + 252));
  uint64_t v7 = *v5;
  if ((*v5 & 0x40000000000000) == 0)
  {
LABEL_93:
    if ((v7 & 0x80000000000000) == 0) {
      goto LABEL_94;
    }
    goto LABEL_196;
  }
LABEL_195:
  PB::TextFormatter::format(this, "staticGpsCountTotal", *(_DWORD *)(a1 + 256));
  uint64_t v7 = *v5;
  if ((*v5 & 0x80000000000000) == 0)
  {
LABEL_94:
    if ((v7 & 0x100000000000000) == 0) {
      goto LABEL_95;
    }
    goto LABEL_197;
  }
LABEL_196:
  PB::TextFormatter::format(this, "stationaryCountMissingAsNoOpThreshold", *(_DWORD *)(a1 + 260));
  uint64_t v7 = *v5;
  if ((*v5 & 0x100000000000000) == 0)
  {
LABEL_95:
    if ((v7 & 0x40) == 0) {
      goto LABEL_96;
    }
    goto LABEL_198;
  }
LABEL_197:
  PB::TextFormatter::format(this, "stepCountEventTimestamp", *(_DWORD *)(a1 + 264));
  uint64_t v7 = *v5;
  if ((*v5 & 0x40) == 0)
  {
LABEL_96:
    if ((v7 & 0x200000000000000) == 0) {
      goto LABEL_97;
    }
    goto LABEL_199;
  }
LABEL_198:
  PB::TextFormatter::format(this, "stepCountEventTimestamp64", *(void *)(a1 + 56));
  uint64_t v7 = *v5;
  if ((*v5 & 0x200000000000000) == 0)
  {
LABEL_97:
    if ((v7 & 0x400000000000000) == 0) {
      goto LABEL_98;
    }
    goto LABEL_200;
  }
LABEL_199:
  PB::TextFormatter::format(this, "stepsCadence", *(float *)(a1 + 268));
  uint64_t v7 = *v5;
  if ((*v5 & 0x400000000000000) == 0)
  {
LABEL_98:
    if ((v7 & 0x800000000000000) == 0) {
      goto LABEL_99;
    }
    goto LABEL_201;
  }
LABEL_200:
  PB::TextFormatter::format(this, "stepsCadenceThreshold", *(float *)(a1 + 272));
  uint64_t v7 = *v5;
  if ((*v5 & 0x800000000000000) == 0)
  {
LABEL_99:
    if ((v7 & 0x1000000000000000) == 0) {
      goto LABEL_100;
    }
    goto LABEL_202;
  }
LABEL_201:
  PB::TextFormatter::format(this, "stepsCount", *(_DWORD *)(a1 + 276));
  uint64_t v7 = *v5;
  if ((*v5 & 0x1000000000000000) == 0)
  {
LABEL_100:
    if ((v7 & 0x2000000000000000) == 0) {
      goto LABEL_101;
    }
    goto LABEL_203;
  }
LABEL_202:
  PB::TextFormatter::format(this, "stepsCountThreshold", *(_DWORD *)(a1 + 280));
  uint64_t v7 = *v5;
  if ((*v5 & 0x2000000000000000) == 0)
  {
LABEL_101:
    if ((v7 & 0x4000000000000000) == 0) {
      goto LABEL_103;
    }
    goto LABEL_102;
  }
LABEL_203:
  PB::TextFormatter::format(this, "stepsDeescalatedAtOpp", *(_DWORD *)(a1 + 284));
  if ((*v5 & 0x4000000000000000) != 0) {
LABEL_102:
  }
    PB::TextFormatter::format(this, "stepsEpochCount", *(float *)(a1 + 288));
LABEL_103:
  uint64_t v8 = *v5;
  if (*v5 < 0)
  {
    PB::TextFormatter::format(this, "stepsPerMinute", *(float *)(a1 + 292));
    uint64_t v8 = *v5;
    uint64_t v9 = *(void *)(a1 + 364);
    if ((v9 & 1) == 0) {
      goto LABEL_207;
    }
    goto LABEL_206;
  }
  uint64_t v9 = *(void *)(a1 + 364);
  if (v9)
  {
LABEL_206:
    PB::TextFormatter::format(this, "stepsPerMinuteThreshold", *(float *)(a1 + 296));
    uint64_t v8 = *v5;
    uint64_t v9 = *(void *)(a1 + 364);
  }
LABEL_207:
  if ((v9 & 2) != 0)
  {
    PB::TextFormatter::format(this, "stepsSecondOpportunityLookbackLength", *(_DWORD *)(a1 + 300));
    uint64_t v9 = *(void *)(a1 + 364);
    if ((*v5 & 0x80) == 0)
    {
LABEL_209:
      if ((v9 & 4) == 0) {
        goto LABEL_210;
      }
      goto LABEL_218;
    }
  }
  else if ((v8 & 0x80) == 0)
  {
    goto LABEL_209;
  }
  PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 64));
  uint64_t v9 = *(void *)(a1 + 364);
  if ((v9 & 4) == 0)
  {
LABEL_210:
    if ((v9 & 8) == 0) {
      goto LABEL_211;
    }
    goto LABEL_219;
  }
LABEL_218:
  PB::TextFormatter::format(this, "triggerClusterDeescalationWindowBoundary", *(_DWORD *)(a1 + 304));
  uint64_t v9 = *(void *)(a1 + 364);
  if ((v9 & 8) == 0)
  {
LABEL_211:
    if ((v9 & 0x10) == 0) {
      goto LABEL_213;
    }
    goto LABEL_212;
  }
LABEL_219:
  PB::TextFormatter::format(this, "ushaCumulativeRotationThreshold", *(float *)(a1 + 308));
  if ((*(void *)(a1 + 364) & 0x10) != 0) {
LABEL_212:
  }
    PB::TextFormatter::format(this, "ushaPeakPressureThreshold", *(float *)(a1 + 312));
LABEL_213:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10169EFCC(uint64_t a1, PB::Reader *this)
{
  uint64_t v3 = (unint64_t *)((char *)this + 8);
  unint64_t v2 = *((void *)this + 1);
  uint64_t v5 = (char *)this + 24;
  int v4 = *((unsigned __int8 *)this + 24);
  unint64_t v6 = *((void *)this + 2);
  if (v2 < v6 && v4 == 0)
  {
    int v11 = (void *)(a1 + 356);
    do
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v6)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        unint64_t v15 = 0;
        if (v2 > v6) {
          unint64_t v6 = v2;
        }
        while (1)
        {
          if (v6 == v2)
          {
            unint64_t v15 = 0;
            unsigned char *v5 = 1;
            goto LABEL_24;
          }
          unint64_t v21 = v2 + 1;
          char v22 = *(unsigned char *)(v12 + v2);
          *uint64_t v3 = v21;
          v15 |= (unint64_t)(v22 & 0x7F) << v19;
          if ((v22 & 0x80) == 0) {
            break;
          }
          v19 += 7;
          unint64_t v2 = v21;
          BOOL v18 = v20++ > 8;
          if (v18)
          {
LABEL_20:
            unint64_t v15 = 0;
            goto LABEL_24;
          }
        }
        if (*v5) {
          unint64_t v15 = 0;
        }
      }
      else
      {
        char v13 = 0;
        unsigned int v14 = 0;
        unint64_t v15 = 0;
        while (1)
        {
          unint64_t v16 = v2 + 1;
          *uint64_t v3 = v2 + 1;
          char v17 = *(unsigned char *)(v12 + v2);
          v15 |= (unint64_t)(v17 & 0x7F) << v13;
          if ((v17 & 0x80) == 0) {
            break;
          }
          v13 += 7;
          unint64_t v2 = v16;
          BOOL v18 = v14++ > 8;
          if (v18) {
            goto LABEL_20;
          }
        }
      }
LABEL_24:
      int v23 = v15 & 7;
      int v4 = *v5;
      if (*v5) {
        BOOL v24 = 1;
      }
      else {
        BOOL v24 = v23 == 4;
      }
      if (v24) {
        break;
      }
      unint64_t v25 = v15 >> 3;
      if ((int)(v15 >> 3) > 400)
      {
        if ((int)v25 <= 900)
        {
          if ((int)v25 > 600)
          {
            if ((int)v25 > 700)
            {
              switch((int)v25)
              {
                case 801:
                  *v11 |= 0x100000uLL;
                  unint64_t v60 = *v3;
                  if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v60 + 4 > *((void *)this + 2)) {
                    goto LABEL_512;
                  }
                  *(_DWORD *)(a1 + 120) = *(_DWORD *)(*(void *)this + v60);
                  goto LABEL_919;
                case 802:
                  *v11 |= 0x400uLL;
                  unint64_t v427 = *v3;
                  if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v427 + 4 > *((void *)this + 2)) {
                    goto LABEL_512;
                  }
                  *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v427);
                  goto LABEL_919;
                case 803:
                  *v11 |= 0x200000uLL;
                  unint64_t v428 = *v3;
                  if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v428 + 4 > *((void *)this + 2)) {
                    goto LABEL_512;
                  }
                  *(_DWORD *)(a1 + 124) = *(_DWORD *)(*(void *)this + v428);
                  goto LABEL_919;
                case 804:
                  *v11 |= 0x800uLL;
                  unint64_t v429 = *v3;
                  if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v429 + 4 > *((void *)this + 2)) {
                    goto LABEL_512;
                  }
                  *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v429);
                  goto LABEL_919;
                default:
                  if (v25 == 701)
                  {
                    *v11 |= 0x800000000000uLL;
                    unint64_t v448 = *((void *)this + 1);
                    unint64_t v449 = *((void *)this + 2);
                    uint64_t v450 = *(void *)this;
                    if (v448 > 0xFFFFFFFFFFFFFFF5 || v448 + 10 > v449)
                    {
                      char v693 = 0;
                      unsigned int v694 = 0;
                      uint64_t v453 = 0;
                      if (v449 <= v448) {
                        unint64_t v449 = *((void *)this + 1);
                      }
                      while (1)
                      {
                        if (v449 == v448)
                        {
                          LODWORD(v453) = 0;
                          unsigned char *v5 = 1;
                          goto LABEL_1052;
                        }
                        unint64_t v695 = v448 + 1;
                        char v696 = *(unsigned char *)(v450 + v448);
                        *uint64_t v3 = v695;
                        v453 |= (unint64_t)(v696 & 0x7F) << v693;
                        if ((v696 & 0x80) == 0) {
                          break;
                        }
                        v693 += 7;
                        unint64_t v448 = v695;
                        BOOL v18 = v694++ > 8;
                        if (v18)
                        {
LABEL_815:
                          LODWORD(v453) = 0;
                          goto LABEL_1052;
                        }
                      }
                      if (*v5) {
                        LODWORD(v453) = 0;
                      }
                    }
                    else
                    {
                      char v451 = 0;
                      unsigned int v452 = 0;
                      uint64_t v453 = 0;
                      while (1)
                      {
                        unint64_t v454 = v448 + 1;
                        *uint64_t v3 = v448 + 1;
                        char v455 = *(unsigned char *)(v450 + v448);
                        v453 |= (unint64_t)(v455 & 0x7F) << v451;
                        if ((v455 & 0x80) == 0) {
                          break;
                        }
                        v451 += 7;
                        unint64_t v448 = v454;
                        BOOL v18 = v452++ > 8;
                        if (v18) {
                          goto LABEL_815;
                        }
                      }
                    }
LABEL_1052:
                    *(_DWORD *)(a1 + 228) = v453;
                  }
                  else
                  {
                    if (v25 != 702) {
                      goto LABEL_140;
                    }
                    *v11 |= 0x1000000000000uLL;
                    unint64_t v70 = *((void *)this + 1);
                    unint64_t v71 = *((void *)this + 2);
                    uint64_t v72 = *(void *)this;
                    if (v70 > 0xFFFFFFFFFFFFFFF5 || v70 + 10 > v71)
                    {
                      char v597 = 0;
                      unsigned int v598 = 0;
                      uint64_t v75 = 0;
                      if (v71 <= v70) {
                        unint64_t v71 = *((void *)this + 1);
                      }
                      while (1)
                      {
                        if (v71 == v70)
                        {
                          LODWORD(v75) = 0;
                          unsigned char *v5 = 1;
                          goto LABEL_980;
                        }
                        unint64_t v599 = v70 + 1;
                        char v600 = *(unsigned char *)(v72 + v70);
                        *uint64_t v3 = v599;
                        v75 |= (unint64_t)(v600 & 0x7F) << v597;
                        if ((v600 & 0x80) == 0) {
                          break;
                        }
                        v597 += 7;
                        unint64_t v70 = v599;
                        BOOL v18 = v598++ > 8;
                        if (v18)
                        {
LABEL_583:
                          LODWORD(v75) = 0;
                          goto LABEL_980;
                        }
                      }
                      if (*v5) {
                        LODWORD(v75) = 0;
                      }
                    }
                    else
                    {
                      char v73 = 0;
                      unsigned int v74 = 0;
                      uint64_t v75 = 0;
                      while (1)
                      {
                        unint64_t v76 = v70 + 1;
                        *uint64_t v3 = v70 + 1;
                        char v77 = *(unsigned char *)(v72 + v70);
                        v75 |= (unint64_t)(v77 & 0x7F) << v73;
                        if ((v77 & 0x80) == 0) {
                          break;
                        }
                        v73 += 7;
                        unint64_t v70 = v76;
                        BOOL v18 = v74++ > 8;
                        if (v18) {
                          goto LABEL_583;
                        }
                      }
                    }
LABEL_980:
                    *(_DWORD *)(a1 + 232) = v75;
                  }
                  break;
              }
            }
            else
            {
              switch((int)v25)
              {
                case 601:
                  v11[1] |= 0x400uLL;
                  unint64_t v48 = *((void *)this + 1);
                  if (v48 >= *((void *)this + 2))
                  {
                    BOOL v51 = 0;
                    unsigned char *v5 = 1;
                  }
                  else
                  {
                    unint64_t v49 = v48 + 1;
                    int v50 = *(unsigned __int8 *)(*(void *)this + v48);
                    *((void *)this + 1) = v49;
                    BOOL v51 = v50 != 0;
                  }
                  *(unsigned char *)(a1 + 321) = v51;
                  goto LABEL_920;
                case 602:
                  *v11 |= 0x4000uLL;
                  unint64_t v394 = *((void *)this + 1);
                  unint64_t v395 = *((void *)this + 2);
                  uint64_t v396 = *(void *)this;
                  if (v394 <= 0xFFFFFFFFFFFFFFF5 && v394 + 10 <= v395)
                  {
                    char v397 = 0;
                    unsigned int v398 = 0;
                    uint64_t v399 = 0;
                    do
                    {
                      unint64_t v400 = v394 + 1;
                      *uint64_t v3 = v394 + 1;
                      char v401 = *(unsigned char *)(v396 + v394);
                      v399 |= (unint64_t)(v401 & 0x7F) << v397;
                      if ((v401 & 0x80) == 0) {
                        goto LABEL_1034;
                      }
                      v397 += 7;
                      unint64_t v394 = v400;
                      BOOL v18 = v398++ > 8;
                    }
                    while (!v18);
LABEL_773:
                    LODWORD(v399) = 0;
                    goto LABEL_1034;
                  }
                  char v669 = 0;
                  unsigned int v670 = 0;
                  uint64_t v399 = 0;
                  if (v395 <= v394) {
                    unint64_t v395 = *((void *)this + 1);
                  }
                  while (2)
                  {
                    if (v395 == v394)
                    {
                      LODWORD(v399) = 0;
                      unsigned char *v5 = 1;
                    }
                    else
                    {
                      unint64_t v671 = v394 + 1;
                      char v672 = *(unsigned char *)(v396 + v394);
                      *uint64_t v3 = v671;
                      v399 |= (unint64_t)(v672 & 0x7F) << v669;
                      if (v672 < 0)
                      {
                        v669 += 7;
                        unint64_t v394 = v671;
                        BOOL v18 = v670++ > 8;
                        if (v18) {
                          goto LABEL_773;
                        }
                        continue;
                      }
                      if (*v5) {
                        LODWORD(v399) = 0;
                      }
                    }
                    break;
                  }
LABEL_1034:
                  *(_DWORD *)(a1 + 96) = v399;
                  goto LABEL_920;
                case 603:
                  *v11 |= 0x1000uLL;
                  unint64_t v402 = *v3;
                  if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v402 + 4 > *((void *)this + 2)) {
                    goto LABEL_512;
                  }
                  *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v402);
                  goto LABEL_919;
                case 604:
                  *v11 |= 0x100000000000uLL;
                  unint64_t v403 = *((void *)this + 1);
                  unint64_t v404 = *((void *)this + 2);
                  uint64_t v405 = *(void *)this;
                  if (v403 <= 0xFFFFFFFFFFFFFFF5 && v403 + 10 <= v404)
                  {
                    char v406 = 0;
                    unsigned int v407 = 0;
                    uint64_t v408 = 0;
                    do
                    {
                      unint64_t v409 = v403 + 1;
                      *uint64_t v3 = v403 + 1;
                      char v410 = *(unsigned char *)(v405 + v403);
                      v408 |= (unint64_t)(v410 & 0x7F) << v406;
                      if ((v410 & 0x80) == 0) {
                        goto LABEL_1037;
                      }
                      v406 += 7;
                      unint64_t v403 = v409;
                      BOOL v18 = v407++ > 8;
                    }
                    while (!v18);
LABEL_780:
                    LODWORD(v408) = 0;
                    goto LABEL_1037;
                  }
                  char v673 = 0;
                  unsigned int v674 = 0;
                  uint64_t v408 = 0;
                  if (v404 <= v403) {
                    unint64_t v404 = *((void *)this + 1);
                  }
                  while (2)
                  {
                    if (v404 == v403)
                    {
                      LODWORD(v408) = 0;
                      unsigned char *v5 = 1;
                    }
                    else
                    {
                      unint64_t v675 = v403 + 1;
                      char v676 = *(unsigned char *)(v405 + v403);
                      *uint64_t v3 = v675;
                      v408 |= (unint64_t)(v676 & 0x7F) << v673;
                      if (v676 < 0)
                      {
                        v673 += 7;
                        unint64_t v403 = v675;
                        BOOL v18 = v674++ > 8;
                        if (v18) {
                          goto LABEL_780;
                        }
                        continue;
                      }
                      if (*v5) {
                        LODWORD(v408) = 0;
                      }
                    }
                    break;
                  }
LABEL_1037:
                  *(_DWORD *)(a1 + 216) = v408;
                  goto LABEL_920;
                case 605:
                  *v11 |= 0x100000000000000uLL;
                  unint64_t v411 = *((void *)this + 1);
                  unint64_t v412 = *((void *)this + 2);
                  uint64_t v413 = *(void *)this;
                  if (v411 <= 0xFFFFFFFFFFFFFFF5 && v411 + 10 <= v412)
                  {
                    char v414 = 0;
                    unsigned int v415 = 0;
                    uint64_t v416 = 0;
                    do
                    {
                      unint64_t v417 = v411 + 1;
                      *uint64_t v3 = v411 + 1;
                      char v418 = *(unsigned char *)(v413 + v411);
                      v416 |= (unint64_t)(v418 & 0x7F) << v414;
                      if ((v418 & 0x80) == 0) {
                        goto LABEL_1040;
                      }
                      v414 += 7;
                      unint64_t v411 = v417;
                      BOOL v18 = v415++ > 8;
                    }
                    while (!v18);
LABEL_787:
                    LODWORD(v416) = 0;
                    goto LABEL_1040;
                  }
                  char v677 = 0;
                  unsigned int v678 = 0;
                  uint64_t v416 = 0;
                  if (v412 <= v411) {
                    unint64_t v412 = *((void *)this + 1);
                  }
                  while (2)
                  {
                    if (v412 == v411)
                    {
                      LODWORD(v416) = 0;
                      unsigned char *v5 = 1;
                    }
                    else
                    {
                      unint64_t v679 = v411 + 1;
                      char v680 = *(unsigned char *)(v413 + v411);
                      *uint64_t v3 = v679;
                      v416 |= (unint64_t)(v680 & 0x7F) << v677;
                      if (v680 < 0)
                      {
                        v677 += 7;
                        unint64_t v411 = v679;
                        BOOL v18 = v678++ > 8;
                        if (v18) {
                          goto LABEL_787;
                        }
                        continue;
                      }
                      if (*v5) {
                        LODWORD(v416) = 0;
                      }
                    }
                    break;
                  }
LABEL_1040:
                  *(_DWORD *)(a1 + 264) = v416;
                  goto LABEL_920;
                case 606:
                  *v11 |= 0x40uLL;
                  unint64_t v419 = *((void *)this + 1);
                  unint64_t v420 = *((void *)this + 2);
                  uint64_t v421 = *(void *)this;
                  if (v419 <= 0xFFFFFFFFFFFFFFF5 && v419 + 10 <= v420)
                  {
                    char v422 = 0;
                    unsigned int v423 = 0;
                    uint64_t v424 = 0;
                    do
                    {
                      unint64_t v425 = v419 + 1;
                      *uint64_t v3 = v419 + 1;
                      char v426 = *(unsigned char *)(v421 + v419);
                      v424 |= (unint64_t)(v426 & 0x7F) << v422;
                      if ((v426 & 0x80) == 0) {
                        goto LABEL_1043;
                      }
                      v422 += 7;
                      unint64_t v419 = v425;
                      BOOL v18 = v423++ > 8;
                    }
                    while (!v18);
LABEL_794:
                    uint64_t v424 = 0;
                    goto LABEL_1043;
                  }
                  char v681 = 0;
                  unsigned int v682 = 0;
                  uint64_t v424 = 0;
                  if (v420 <= v419) {
                    unint64_t v420 = *((void *)this + 1);
                  }
                  break;
                default:
                  goto LABEL_140;
              }
              while (1)
              {
                if (v420 == v419)
                {
                  uint64_t v424 = 0;
                  unsigned char *v5 = 1;
                  goto LABEL_1043;
                }
                unint64_t v683 = v419 + 1;
                char v684 = *(unsigned char *)(v421 + v419);
                *uint64_t v3 = v683;
                v424 |= (unint64_t)(v684 & 0x7F) << v681;
                if ((v684 & 0x80) == 0) {
                  break;
                }
                v681 += 7;
                unint64_t v419 = v683;
                BOOL v18 = v682++ > 8;
                if (v18) {
                  goto LABEL_794;
                }
              }
              if (*v5) {
                uint64_t v424 = 0;
              }
LABEL_1043:
              *(void *)(a1 + 56) = v424;
            }
          }
          else
          {
            switch((int)v25)
            {
              case 401:
                *v11 |= 0x20000000000000uLL;
                unint64_t v28 = *((void *)this + 1);
                unint64_t v29 = *((void *)this + 2);
                uint64_t v30 = *(void *)this;
                if (v28 <= 0xFFFFFFFFFFFFFFF5 && v28 + 10 <= v29)
                {
                  char v31 = 0;
                  unsigned int v32 = 0;
                  uint64_t v33 = 0;
                  do
                  {
                    unint64_t v34 = v28 + 1;
                    *uint64_t v3 = v28 + 1;
                    char v35 = *(unsigned char *)(v30 + v28);
                    v33 |= (unint64_t)(v35 & 0x7F) << v31;
                    if ((v35 & 0x80) == 0) {
                      goto LABEL_974;
                    }
                    v31 += 7;
                    unint64_t v28 = v34;
                    BOOL v18 = v32++ > 8;
                  }
                  while (!v18);
LABEL_565:
                  LODWORD(v33) = 0;
                  goto LABEL_974;
                }
                char v589 = 0;
                unsigned int v590 = 0;
                uint64_t v33 = 0;
                if (v29 <= v28) {
                  unint64_t v29 = *((void *)this + 1);
                }
                while (2)
                {
                  if (v29 == v28)
                  {
                    LODWORD(v33) = 0;
                    unsigned char *v5 = 1;
                  }
                  else
                  {
                    unint64_t v591 = v28 + 1;
                    char v592 = *(unsigned char *)(v30 + v28);
                    *uint64_t v3 = v591;
                    v33 |= (unint64_t)(v592 & 0x7F) << v589;
                    if (v592 < 0)
                    {
                      v589 += 7;
                      unint64_t v28 = v591;
                      BOOL v18 = v590++ > 8;
                      if (v18) {
                        goto LABEL_565;
                      }
                      continue;
                    }
                    if (*v5) {
                      LODWORD(v33) = 0;
                    }
                  }
                  break;
                }
LABEL_974:
                *(_DWORD *)(a1 + 252) = v33;
                goto LABEL_920;
              case 402:
                *v11 |= 0x40000000000000uLL;
                unint64_t v194 = *((void *)this + 1);
                unint64_t v195 = *((void *)this + 2);
                uint64_t v196 = *(void *)this;
                if (v194 <= 0xFFFFFFFFFFFFFFF5 && v194 + 10 <= v195)
                {
                  char v197 = 0;
                  unsigned int v198 = 0;
                  uint64_t v199 = 0;
                  do
                  {
                    unint64_t v200 = v194 + 1;
                    *uint64_t v3 = v194 + 1;
                    char v201 = *(unsigned char *)(v196 + v194);
                    v199 |= (unint64_t)(v201 & 0x7F) << v197;
                    if ((v201 & 0x80) == 0) {
                      goto LABEL_1007;
                    }
                    v197 += 7;
                    unint64_t v194 = v200;
                    BOOL v18 = v198++ > 8;
                  }
                  while (!v18);
LABEL_646:
                  LODWORD(v199) = 0;
                  goto LABEL_1007;
                }
                char v633 = 0;
                unsigned int v634 = 0;
                uint64_t v199 = 0;
                if (v195 <= v194) {
                  unint64_t v195 = *((void *)this + 1);
                }
                while (2)
                {
                  if (v195 == v194)
                  {
                    LODWORD(v199) = 0;
                    unsigned char *v5 = 1;
                  }
                  else
                  {
                    unint64_t v635 = v194 + 1;
                    char v636 = *(unsigned char *)(v196 + v194);
                    *uint64_t v3 = v635;
                    v199 |= (unint64_t)(v636 & 0x7F) << v633;
                    if (v636 < 0)
                    {
                      v633 += 7;
                      unint64_t v194 = v635;
                      BOOL v18 = v634++ > 8;
                      if (v18) {
                        goto LABEL_646;
                      }
                      continue;
                    }
                    if (*v5) {
                      LODWORD(v199) = 0;
                    }
                  }
                  break;
                }
LABEL_1007:
                *(_DWORD *)(a1 + 256) = v199;
                goto LABEL_920;
              case 403:
                *v11 |= 0x4000000uLL;
                unint64_t v202 = *((void *)this + 1);
                unint64_t v203 = *((void *)this + 2);
                uint64_t v204 = *(void *)this;
                if (v202 <= 0xFFFFFFFFFFFFFFF5 && v202 + 10 <= v203)
                {
                  char v205 = 0;
                  unsigned int v206 = 0;
                  uint64_t v207 = 0;
                  do
                  {
                    unint64_t v208 = v202 + 1;
                    *uint64_t v3 = v202 + 1;
                    char v209 = *(unsigned char *)(v204 + v202);
                    v207 |= (unint64_t)(v209 & 0x7F) << v205;
                    if ((v209 & 0x80) == 0) {
                      goto LABEL_1010;
                    }
                    v205 += 7;
                    unint64_t v202 = v208;
                    BOOL v18 = v206++ > 8;
                  }
                  while (!v18);
LABEL_653:
                  LODWORD(v207) = 0;
                  goto LABEL_1010;
                }
                char v637 = 0;
                unsigned int v638 = 0;
                uint64_t v207 = 0;
                if (v203 <= v202) {
                  unint64_t v203 = *((void *)this + 1);
                }
                while (2)
                {
                  if (v203 == v202)
                  {
                    LODWORD(v207) = 0;
                    unsigned char *v5 = 1;
                  }
                  else
                  {
                    unint64_t v639 = v202 + 1;
                    char v640 = *(unsigned char *)(v204 + v202);
                    *uint64_t v3 = v639;
                    v207 |= (unint64_t)(v640 & 0x7F) << v637;
                    if (v640 < 0)
                    {
                      v637 += 7;
                      unint64_t v202 = v639;
                      BOOL v18 = v638++ > 8;
                      if (v18) {
                        goto LABEL_653;
                      }
                      continue;
                    }
                    if (*v5) {
                      LODWORD(v207) = 0;
                    }
                  }
                  break;
                }
LABEL_1010:
                *(_DWORD *)(a1 + 144) = v207;
                goto LABEL_920;
              case 404:
                *v11 |= 0x8000000uLL;
                unint64_t v210 = *((void *)this + 1);
                unint64_t v211 = *((void *)this + 2);
                uint64_t v212 = *(void *)this;
                if (v210 <= 0xFFFFFFFFFFFFFFF5 && v210 + 10 <= v211)
                {
                  char v213 = 0;
                  unsigned int v214 = 0;
                  uint64_t v215 = 0;
                  do
                  {
                    unint64_t v216 = v210 + 1;
                    *uint64_t v3 = v210 + 1;
                    char v217 = *(unsigned char *)(v212 + v210);
                    v215 |= (unint64_t)(v217 & 0x7F) << v213;
                    if ((v217 & 0x80) == 0) {
                      goto LABEL_1013;
                    }
                    v213 += 7;
                    unint64_t v210 = v216;
                    BOOL v18 = v214++ > 8;
                  }
                  while (!v18);
LABEL_660:
                  LODWORD(v215) = 0;
                  goto LABEL_1013;
                }
                char v641 = 0;
                unsigned int v642 = 0;
                uint64_t v215 = 0;
                if (v211 <= v210) {
                  unint64_t v211 = *((void *)this + 1);
                }
                while (2)
                {
                  if (v211 == v210)
                  {
                    LODWORD(v215) = 0;
                    unsigned char *v5 = 1;
                  }
                  else
                  {
                    unint64_t v643 = v210 + 1;
                    char v644 = *(unsigned char *)(v212 + v210);
                    *uint64_t v3 = v643;
                    v215 |= (unint64_t)(v644 & 0x7F) << v641;
                    if (v644 < 0)
                    {
                      v641 += 7;
                      unint64_t v210 = v643;
                      BOOL v18 = v642++ > 8;
                      if (v18) {
                        goto LABEL_660;
                      }
                      continue;
                    }
                    if (*v5) {
                      LODWORD(v215) = 0;
                    }
                  }
                  break;
                }
LABEL_1013:
                *(_DWORD *)(a1 + 148) = v215;
                goto LABEL_920;
              case 405:
                v11[1] |= 0x20000uLL;
                unint64_t v218 = *((void *)this + 1);
                if (v218 >= *((void *)this + 2))
                {
                  BOOL v221 = 0;
                  unsigned char *v5 = 1;
                }
                else
                {
                  unint64_t v219 = v218 + 1;
                  int v220 = *(unsigned __int8 *)(*(void *)this + v218);
                  *((void *)this + 1) = v219;
                  BOOL v221 = v220 != 0;
                }
                *(unsigned char *)(a1 + 328) = v221;
                goto LABEL_920;
              case 406:
                v11[1] |= 0x4000uLL;
                unint64_t v222 = *((void *)this + 1);
                if (v222 >= *((void *)this + 2))
                {
                  BOOL v225 = 0;
                  unsigned char *v5 = 1;
                }
                else
                {
                  unint64_t v223 = v222 + 1;
                  int v224 = *(unsigned __int8 *)(*(void *)this + v222);
                  *((void *)this + 1) = v223;
                  BOOL v225 = v224 != 0;
                }
                *(unsigned char *)(a1 + 325) = v225;
                goto LABEL_920;
              case 407:
                *v11 |= 0x2000000000uLL;
                unint64_t v226 = *((void *)this + 1);
                unint64_t v227 = *((void *)this + 2);
                uint64_t v228 = *(void *)this;
                if (v226 <= 0xFFFFFFFFFFFFFFF5 && v226 + 10 <= v227)
                {
                  char v229 = 0;
                  unsigned int v230 = 0;
                  uint64_t v231 = 0;
                  do
                  {
                    unint64_t v232 = v226 + 1;
                    *uint64_t v3 = v226 + 1;
                    char v233 = *(unsigned char *)(v228 + v226);
                    v231 |= (unint64_t)(v233 & 0x7F) << v229;
                    if ((v233 & 0x80) == 0) {
                      goto LABEL_1016;
                    }
                    v229 += 7;
                    unint64_t v226 = v232;
                    BOOL v18 = v230++ > 8;
                  }
                  while (!v18);
LABEL_671:
                  LODWORD(v231) = 0;
                  goto LABEL_1016;
                }
                char v645 = 0;
                unsigned int v646 = 0;
                uint64_t v231 = 0;
                if (v227 <= v226) {
                  unint64_t v227 = *((void *)this + 1);
                }
                while (2)
                {
                  if (v227 == v226)
                  {
                    LODWORD(v231) = 0;
                    unsigned char *v5 = 1;
                  }
                  else
                  {
                    unint64_t v647 = v226 + 1;
                    char v648 = *(unsigned char *)(v228 + v226);
                    *uint64_t v3 = v647;
                    v231 |= (unint64_t)(v648 & 0x7F) << v645;
                    if (v648 < 0)
                    {
                      v645 += 7;
                      unint64_t v226 = v647;
                      BOOL v18 = v646++ > 8;
                      if (v18) {
                        goto LABEL_671;
                      }
                      continue;
                    }
                    if (*v5) {
                      LODWORD(v231) = 0;
                    }
                  }
                  break;
                }
LABEL_1016:
                *(_DWORD *)(a1 + 188) = v231;
                goto LABEL_920;
              case 408:
                *v11 |= 0x80000uLL;
                unint64_t v234 = *((void *)this + 1);
                unint64_t v235 = *((void *)this + 2);
                uint64_t v236 = *(void *)this;
                if (v234 <= 0xFFFFFFFFFFFFFFF5 && v234 + 10 <= v235)
                {
                  char v237 = 0;
                  unsigned int v238 = 0;
                  uint64_t v239 = 0;
                  do
                  {
                    unint64_t v240 = v234 + 1;
                    *uint64_t v3 = v234 + 1;
                    char v241 = *(unsigned char *)(v236 + v234);
                    v239 |= (unint64_t)(v241 & 0x7F) << v237;
                    if ((v241 & 0x80) == 0) {
                      goto LABEL_1019;
                    }
                    v237 += 7;
                    unint64_t v234 = v240;
                    BOOL v18 = v238++ > 8;
                  }
                  while (!v18);
LABEL_678:
                  LODWORD(v239) = 0;
                  goto LABEL_1019;
                }
                char v649 = 0;
                unsigned int v650 = 0;
                uint64_t v239 = 0;
                if (v235 <= v234) {
                  unint64_t v235 = *((void *)this + 1);
                }
                while (2)
                {
                  if (v235 == v234)
                  {
                    LODWORD(v239) = 0;
                    unsigned char *v5 = 1;
                  }
                  else
                  {
                    unint64_t v651 = v234 + 1;
                    char v652 = *(unsigned char *)(v236 + v234);
                    *uint64_t v3 = v651;
                    v239 |= (unint64_t)(v652 & 0x7F) << v649;
                    if (v652 < 0)
                    {
                      v649 += 7;
                      unint64_t v234 = v651;
                      BOOL v18 = v650++ > 8;
                      if (v18) {
                        goto LABEL_678;
                      }
                      continue;
                    }
                    if (*v5) {
                      LODWORD(v239) = 0;
                    }
                  }
                  break;
                }
LABEL_1019:
                *(_DWORD *)(a1 + 116) = v239;
                goto LABEL_920;
              case 409:
                *v11 |= 0x1000000000uLL;
                unint64_t v242 = *((void *)this + 1);
                unint64_t v243 = *((void *)this + 2);
                uint64_t v244 = *(void *)this;
                if (v242 <= 0xFFFFFFFFFFFFFFF5 && v242 + 10 <= v243)
                {
                  char v245 = 0;
                  unsigned int v246 = 0;
                  uint64_t v247 = 0;
                  do
                  {
                    unint64_t v248 = v242 + 1;
                    *uint64_t v3 = v242 + 1;
                    char v249 = *(unsigned char *)(v244 + v242);
                    v247 |= (unint64_t)(v249 & 0x7F) << v245;
                    if ((v249 & 0x80) == 0) {
                      goto LABEL_1022;
                    }
                    v245 += 7;
                    unint64_t v242 = v248;
                    BOOL v18 = v246++ > 8;
                  }
                  while (!v18);
LABEL_685:
                  LODWORD(v247) = 0;
                  goto LABEL_1022;
                }
                char v653 = 0;
                unsigned int v654 = 0;
                uint64_t v247 = 0;
                if (v243 <= v242) {
                  unint64_t v243 = *((void *)this + 1);
                }
                while (2)
                {
                  if (v243 == v242)
                  {
                    LODWORD(v247) = 0;
                    unsigned char *v5 = 1;
                  }
                  else
                  {
                    unint64_t v655 = v242 + 1;
                    char v656 = *(unsigned char *)(v244 + v242);
                    *uint64_t v3 = v655;
                    v247 |= (unint64_t)(v656 & 0x7F) << v653;
                    if (v656 < 0)
                    {
                      v653 += 7;
                      unint64_t v242 = v655;
                      BOOL v18 = v654++ > 8;
                      if (v18) {
                        goto LABEL_685;
                      }
                      continue;
                    }
                    if (*v5) {
                      LODWORD(v247) = 0;
                    }
                  }
                  break;
                }
LABEL_1022:
                *(_DWORD *)(a1 + 184) = v247;
                goto LABEL_920;
              default:
                switch((int)v25)
                {
                  case 501:
                    *v11 |= 0x4000000000000000uLL;
                    unint64_t v61 = *v3;
                    if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v61 + 4 > *((void *)this + 2)) {
                      goto LABEL_512;
                    }
                    *(_DWORD *)(a1 + 288) = *(_DWORD *)(*(void *)this + v61);
                    goto LABEL_919;
                  case 502:
                    *v11 |= 0x8000000000000000;
                    unint64_t v430 = *v3;
                    if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v430 + 4 > *((void *)this + 2)) {
                      goto LABEL_512;
                    }
                    *(_DWORD *)(a1 + 292) = *(_DWORD *)(*(void *)this + v430);
                    goto LABEL_919;
                  case 503:
                    *v11 |= 0x200000000000000uLL;
                    unint64_t v431 = *v3;
                    if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v431 + 4 > *((void *)this + 2)) {
                      goto LABEL_512;
                    }
                    *(_DWORD *)(a1 + 268) = *(_DWORD *)(*(void *)this + v431);
                    goto LABEL_919;
                  case 504:
                    *v11 |= 0x800000000000000uLL;
                    unint64_t v432 = *((void *)this + 1);
                    unint64_t v433 = *((void *)this + 2);
                    uint64_t v434 = *(void *)this;
                    if (v432 <= 0xFFFFFFFFFFFFFFF5 && v432 + 10 <= v433)
                    {
                      char v435 = 0;
                      unsigned int v436 = 0;
                      uint64_t v437 = 0;
                      do
                      {
                        unint64_t v438 = v432 + 1;
                        *uint64_t v3 = v432 + 1;
                        char v439 = *(unsigned char *)(v434 + v432);
                        v437 |= (unint64_t)(v439 & 0x7F) << v435;
                        if ((v439 & 0x80) == 0) {
                          goto LABEL_1046;
                        }
                        v435 += 7;
                        unint64_t v432 = v438;
                        BOOL v18 = v436++ > 8;
                      }
                      while (!v18);
LABEL_801:
                      LODWORD(v437) = 0;
                      goto LABEL_1046;
                    }
                    char v685 = 0;
                    unsigned int v686 = 0;
                    uint64_t v437 = 0;
                    if (v433 <= v432) {
                      unint64_t v433 = *((void *)this + 1);
                    }
                    while (2)
                    {
                      if (v433 == v432)
                      {
                        LODWORD(v437) = 0;
                        unsigned char *v5 = 1;
                      }
                      else
                      {
                        unint64_t v687 = v432 + 1;
                        char v688 = *(unsigned char *)(v434 + v432);
                        *uint64_t v3 = v687;
                        v437 |= (unint64_t)(v688 & 0x7F) << v685;
                        if (v688 < 0)
                        {
                          v685 += 7;
                          unint64_t v432 = v687;
                          BOOL v18 = v686++ > 8;
                          if (v18) {
                            goto LABEL_801;
                          }
                          continue;
                        }
                        if (*v5) {
                          LODWORD(v437) = 0;
                        }
                      }
                      break;
                    }
LABEL_1046:
                    *(_DWORD *)(a1 + 276) = v437;
                    goto LABEL_920;
                  case 505:
                    *v11 |= 0x2000000000000000uLL;
                    unint64_t v440 = *((void *)this + 1);
                    unint64_t v441 = *((void *)this + 2);
                    uint64_t v442 = *(void *)this;
                    if (v440 <= 0xFFFFFFFFFFFFFFF5 && v440 + 10 <= v441)
                    {
                      char v443 = 0;
                      unsigned int v444 = 0;
                      uint64_t v445 = 0;
                      do
                      {
                        unint64_t v446 = v440 + 1;
                        *uint64_t v3 = v440 + 1;
                        char v447 = *(unsigned char *)(v442 + v440);
                        v445 |= (unint64_t)(v447 & 0x7F) << v443;
                        if ((v447 & 0x80) == 0) {
                          goto LABEL_1049;
                        }
                        v443 += 7;
                        unint64_t v440 = v446;
                        BOOL v18 = v444++ > 8;
                      }
                      while (!v18);
LABEL_808:
                      LODWORD(v445) = 0;
                      goto LABEL_1049;
                    }
                    char v689 = 0;
                    unsigned int v690 = 0;
                    uint64_t v445 = 0;
                    if (v441 <= v440) {
                      unint64_t v441 = *((void *)this + 1);
                    }
                    break;
                  default:
                    goto LABEL_140;
                }
                break;
            }
            while (1)
            {
              if (v441 == v440)
              {
                LODWORD(v445) = 0;
                unsigned char *v5 = 1;
                goto LABEL_1049;
              }
              unint64_t v691 = v440 + 1;
              char v692 = *(unsigned char *)(v442 + v440);
              *uint64_t v3 = v691;
              v445 |= (unint64_t)(v692 & 0x7F) << v689;
              if ((v692 & 0x80) == 0) {
                break;
              }
              v689 += 7;
              unint64_t v440 = v691;
              BOOL v18 = v690++ > 8;
              if (v18) {
                goto LABEL_808;
              }
            }
            if (*v5) {
              LODWORD(v445) = 0;
            }
LABEL_1049:
            *(_DWORD *)(a1 + 284) = v445;
          }
        }
        else if ((int)v25 <= 1200)
        {
          if ((int)v25 <= 1100)
          {
            switch(v25)
            {
              case 0x385:
                *v11 |= 0x100uLL;
                unint64_t v115 = *v3;
                if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v115 + 4 > *((void *)this + 2))
                {
LABEL_512:
                  unsigned char *v5 = 1;
                }
                else
                {
                  *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v115);
LABEL_919:
                  *((void *)this + 1) += 4;
                }
                break;
              case 0x386:
                v11[1] |= 0x200000uLL;
                unint64_t v116 = *((void *)this + 1);
                if (v116 >= *((void *)this + 2))
                {
                  BOOL v119 = 0;
                  unsigned char *v5 = 1;
                }
                else
                {
                  unint64_t v117 = v116 + 1;
                  int v118 = *(unsigned __int8 *)(*(void *)this + v116);
                  *((void *)this + 1) = v117;
                  BOOL v119 = v118 != 0;
                }
                *(unsigned char *)(a1 + 332) = v119;
                break;
              case 0x3E9:
                v11[1] |= 4uLL;
                unint64_t v62 = *((void *)this + 1);
                unint64_t v63 = *((void *)this + 2);
                uint64_t v64 = *(void *)this;
                if (v62 > 0xFFFFFFFFFFFFFFF5 || v62 + 10 > v63)
                {
                  char v573 = 0;
                  unsigned int v574 = 0;
                  uint64_t v67 = 0;
                  if (v63 <= v62) {
                    unint64_t v63 = *((void *)this + 1);
                  }
                  while (1)
                  {
                    if (v63 == v62)
                    {
                      LODWORD(v67) = 0;
                      unsigned char *v5 = 1;
                      goto LABEL_935;
                    }
                    unint64_t v575 = v62 + 1;
                    char v576 = *(unsigned char *)(v64 + v62);
                    *uint64_t v3 = v575;
                    v67 |= (unint64_t)(v576 & 0x7F) << v573;
                    if ((v576 & 0x80) == 0) {
                      break;
                    }
                    v573 += 7;
                    unint64_t v62 = v575;
                    BOOL v18 = v574++ > 8;
                    if (v18)
                    {
LABEL_533:
                      LODWORD(v67) = 0;
                      goto LABEL_935;
                    }
                  }
                  if (*v5) {
                    LODWORD(v67) = 0;
                  }
                }
                else
                {
                  char v65 = 0;
                  unsigned int v66 = 0;
                  uint64_t v67 = 0;
                  while (1)
                  {
                    unint64_t v68 = v62 + 1;
                    *uint64_t v3 = v62 + 1;
                    char v69 = *(unsigned char *)(v64 + v62);
                    v67 |= (unint64_t)(v69 & 0x7F) << v65;
                    if ((v69 & 0x80) == 0) {
                      break;
                    }
                    v65 += 7;
                    unint64_t v62 = v68;
                    BOOL v18 = v66++ > 8;
                    if (v18) {
                      goto LABEL_533;
                    }
                  }
                }
LABEL_935:
                *(_DWORD *)(a1 + 304) = v67;
                break;
              default:
LABEL_140:
                uint64_t result = PB::Reader::skip(this, v25, v23, 0);
                if (!result) {
                  return result;
                }
                break;
            }
          }
          else
          {
            switch((int)v25)
            {
              case 1101:
                *v11 |= 0x10000000uLL;
                unint64_t v52 = *((void *)this + 1);
                unint64_t v53 = *((void *)this + 2);
                uint64_t v54 = *(void *)this;
                if (v52 <= 0xFFFFFFFFFFFFFFF5 && v52 + 10 <= v53)
                {
                  char v55 = 0;
                  unsigned int v56 = 0;
                  uint64_t v57 = 0;
                  do
                  {
                    unint64_t v58 = v52 + 1;
                    *uint64_t v3 = v52 + 1;
                    char v59 = *(unsigned char *)(v54 + v52);
                    v57 |= (unint64_t)(v59 & 0x7F) << v55;
                    if ((v59 & 0x80) == 0) {
                      goto LABEL_932;
                    }
                    v55 += 7;
                    unint64_t v52 = v58;
                    BOOL v18 = v56++ > 8;
                  }
                  while (!v18);
LABEL_526:
                  LODWORD(v57) = 0;
                  goto LABEL_932;
                }
                char v569 = 0;
                unsigned int v570 = 0;
                uint64_t v57 = 0;
                if (v53 <= v52) {
                  unint64_t v53 = *((void *)this + 1);
                }
                while (2)
                {
                  if (v53 == v52)
                  {
                    LODWORD(v57) = 0;
                    unsigned char *v5 = 1;
                  }
                  else
                  {
                    unint64_t v571 = v52 + 1;
                    char v572 = *(unsigned char *)(v54 + v52);
                    *uint64_t v3 = v571;
                    v57 |= (unint64_t)(v572 & 0x7F) << v569;
                    if (v572 < 0)
                    {
                      v569 += 7;
                      unint64_t v52 = v571;
                      BOOL v18 = v570++ > 8;
                      if (v18) {
                        goto LABEL_526;
                      }
                      continue;
                    }
                    if (*v5) {
                      LODWORD(v57) = 0;
                    }
                  }
                  break;
                }
LABEL_932:
                *(_DWORD *)(a1 + 152) = v57;
                goto LABEL_920;
              case 1102:
                *v11 |= 0x40000000uLL;
                unint64_t v86 = *((void *)this + 1);
                unint64_t v87 = *((void *)this + 2);
                uint64_t v88 = *(void *)this;
                if (v86 <= 0xFFFFFFFFFFFFFFF5 && v86 + 10 <= v87)
                {
                  char v89 = 0;
                  unsigned int v90 = 0;
                  uint64_t v91 = 0;
                  do
                  {
                    unint64_t v92 = v86 + 1;
                    *uint64_t v3 = v86 + 1;
                    char v93 = *(unsigned char *)(v88 + v86);
                    v91 |= (unint64_t)(v93 & 0x7F) << v89;
                    if ((v93 & 0x80) == 0) {
                      goto LABEL_938;
                    }
                    v89 += 7;
                    unint64_t v86 = v92;
                    BOOL v18 = v90++ > 8;
                  }
                  while (!v18);
LABEL_540:
                  LODWORD(v91) = 0;
                  goto LABEL_938;
                }
                char v577 = 0;
                unsigned int v578 = 0;
                uint64_t v91 = 0;
                if (v87 <= v86) {
                  unint64_t v87 = *((void *)this + 1);
                }
                while (2)
                {
                  if (v87 == v86)
                  {
                    LODWORD(v91) = 0;
                    unsigned char *v5 = 1;
                  }
                  else
                  {
                    unint64_t v579 = v86 + 1;
                    char v580 = *(unsigned char *)(v88 + v86);
                    *uint64_t v3 = v579;
                    v91 |= (unint64_t)(v580 & 0x7F) << v577;
                    if (v580 < 0)
                    {
                      v577 += 7;
                      unint64_t v86 = v579;
                      BOOL v18 = v578++ > 8;
                      if (v18) {
                        goto LABEL_540;
                      }
                      continue;
                    }
                    if (*v5) {
                      LODWORD(v91) = 0;
                    }
                  }
                  break;
                }
LABEL_938:
                *(_DWORD *)(a1 + 160) = v91;
                goto LABEL_920;
              case 1103:
                v11[1] |= 0x1000000000uLL;
                unint64_t v94 = *((void *)this + 1);
                if (v94 >= *((void *)this + 2))
                {
                  BOOL v97 = 0;
                  unsigned char *v5 = 1;
                }
                else
                {
                  unint64_t v95 = v94 + 1;
                  int v96 = *(unsigned __int8 *)(*(void *)this + v94);
                  *((void *)this + 1) = v95;
                  BOOL v97 = v96 != 0;
                }
                *(unsigned char *)(a1 + 347) = v97;
                goto LABEL_920;
              case 1104:
                *v11 |= 0x80000000uLL;
                unint64_t v98 = *((void *)this + 1);
                unint64_t v99 = *((void *)this + 2);
                uint64_t v100 = *(void *)this;
                if (v98 <= 0xFFFFFFFFFFFFFFF5 && v98 + 10 <= v99)
                {
                  char v101 = 0;
                  unsigned int v102 = 0;
                  uint64_t v103 = 0;
                  do
                  {
                    unint64_t v104 = v98 + 1;
                    *uint64_t v3 = v98 + 1;
                    char v105 = *(unsigned char *)(v100 + v98);
                    v103 |= (unint64_t)(v105 & 0x7F) << v101;
                    if ((v105 & 0x80) == 0) {
                      goto LABEL_941;
                    }
                    v101 += 7;
                    unint64_t v98 = v104;
                    BOOL v18 = v102++ > 8;
                  }
                  while (!v18);
LABEL_549:
                  LODWORD(v103) = 0;
                  goto LABEL_941;
                }
                char v581 = 0;
                unsigned int v582 = 0;
                uint64_t v103 = 0;
                if (v99 <= v98) {
                  unint64_t v99 = *((void *)this + 1);
                }
                while (2)
                {
                  if (v99 == v98)
                  {
                    LODWORD(v103) = 0;
                    unsigned char *v5 = 1;
                  }
                  else
                  {
                    unint64_t v583 = v98 + 1;
                    char v584 = *(unsigned char *)(v100 + v98);
                    *uint64_t v3 = v583;
                    v103 |= (unint64_t)(v584 & 0x7F) << v581;
                    if (v584 < 0)
                    {
                      v581 += 7;
                      unint64_t v98 = v583;
                      BOOL v18 = v582++ > 8;
                      if (v18) {
                        goto LABEL_549;
                      }
                      continue;
                    }
                    if (*v5) {
                      LODWORD(v103) = 0;
                    }
                  }
                  break;
                }
LABEL_941:
                *(_DWORD *)(a1 + 164) = v103;
                goto LABEL_920;
              case 1105:
                *v11 |= 0x20000000uLL;
                unint64_t v106 = *((void *)this + 1);
                unint64_t v107 = *((void *)this + 2);
                uint64_t v108 = *(void *)this;
                if (v106 <= 0xFFFFFFFFFFFFFFF5 && v106 + 10 <= v107)
                {
                  char v109 = 0;
                  unsigned int v110 = 0;
                  uint64_t v111 = 0;
                  do
                  {
                    unint64_t v112 = v106 + 1;
                    *uint64_t v3 = v106 + 1;
                    char v113 = *(unsigned char *)(v108 + v106);
                    v111 |= (unint64_t)(v113 & 0x7F) << v109;
                    if ((v113 & 0x80) == 0) {
                      goto LABEL_944;
                    }
                    v109 += 7;
                    unint64_t v106 = v112;
                    BOOL v18 = v110++ > 8;
                  }
                  while (!v18);
LABEL_556:
                  LODWORD(v111) = 0;
                  goto LABEL_944;
                }
                char v585 = 0;
                unsigned int v586 = 0;
                uint64_t v111 = 0;
                if (v107 <= v106) {
                  unint64_t v107 = *((void *)this + 1);
                }
                break;
              case 1106:
                *v11 |= 0x8000000000000uLL;
                unint64_t v114 = *v3;
                if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v114 + 4 > *((void *)this + 2)) {
                  goto LABEL_512;
                }
                *(_DWORD *)(a1 + 244) = *(_DWORD *)(*(void *)this + v114);
                goto LABEL_919;
              default:
                goto LABEL_140;
            }
            while (1)
            {
              if (v107 == v106)
              {
                LODWORD(v111) = 0;
                unsigned char *v5 = 1;
                goto LABEL_944;
              }
              unint64_t v587 = v106 + 1;
              char v588 = *(unsigned char *)(v108 + v106);
              *uint64_t v3 = v587;
              v111 |= (unint64_t)(v588 & 0x7F) << v585;
              if ((v588 & 0x80) == 0) {
                break;
              }
              v585 += 7;
              unint64_t v106 = v587;
              BOOL v18 = v586++ > 8;
              if (v18) {
                goto LABEL_556;
              }
            }
            if (*v5) {
              LODWORD(v111) = 0;
            }
LABEL_944:
            *(_DWORD *)(a1 + 156) = v111;
          }
        }
        else
        {
          switch((int)v25)
          {
            case 1301:
              *v11 |= 0x8000uLL;
              unint64_t v27 = *v3;
              if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v27 + 4 > *((void *)this + 2)) {
                goto LABEL_512;
              }
              *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v27);
              goto LABEL_919;
            case 1302:
              *v11 |= 0x40000000000uLL;
              unint64_t v456 = *((void *)this + 1);
              unint64_t v457 = *((void *)this + 2);
              uint64_t v458 = *(void *)this;
              if (v456 <= 0xFFFFFFFFFFFFFFF5 && v456 + 10 <= v457)
              {
                char v459 = 0;
                unsigned int v460 = 0;
                uint64_t v461 = 0;
                do
                {
                  unint64_t v462 = v456 + 1;
                  *uint64_t v3 = v456 + 1;
                  char v463 = *(unsigned char *)(v458 + v456);
                  v461 |= (unint64_t)(v463 & 0x7F) << v459;
                  if ((v463 & 0x80) == 0) {
                    goto LABEL_1060;
                  }
                  v459 += 7;
                  unint64_t v456 = v462;
                  BOOL v18 = v460++ > 8;
                }
                while (!v18);
LABEL_829:
                LODWORD(v461) = 0;
                goto LABEL_1060;
              }
              char v701 = 0;
              unsigned int v702 = 0;
              uint64_t v461 = 0;
              if (v457 <= v456) {
                unint64_t v457 = *((void *)this + 1);
              }
              while (2)
              {
                if (v457 == v456)
                {
                  LODWORD(v461) = 0;
                  unsigned char *v5 = 1;
                }
                else
                {
                  unint64_t v703 = v456 + 1;
                  char v704 = *(unsigned char *)(v458 + v456);
                  *uint64_t v3 = v703;
                  v461 |= (unint64_t)(v704 & 0x7F) << v701;
                  if (v704 < 0)
                  {
                    v701 += 7;
                    unint64_t v456 = v703;
                    BOOL v18 = v702++ > 8;
                    if (v18) {
                      goto LABEL_829;
                    }
                    continue;
                  }
                  if (*v5) {
                    LODWORD(v461) = 0;
                  }
                }
                break;
              }
LABEL_1060:
              *(_DWORD *)(a1 + 208) = v461;
              break;
            case 1303:
              *v11 |= 0x10000000000uLL;
              unint64_t v464 = *((void *)this + 1);
              unint64_t v465 = *((void *)this + 2);
              uint64_t v466 = *(void *)this;
              if (v464 <= 0xFFFFFFFFFFFFFFF5 && v464 + 10 <= v465)
              {
                char v467 = 0;
                unsigned int v468 = 0;
                uint64_t v469 = 0;
                do
                {
                  unint64_t v470 = v464 + 1;
                  *uint64_t v3 = v464 + 1;
                  char v471 = *(unsigned char *)(v466 + v464);
                  v469 |= (unint64_t)(v471 & 0x7F) << v467;
                  if ((v471 & 0x80) == 0) {
                    goto LABEL_1064;
                  }
                  v467 += 7;
                  unint64_t v464 = v470;
                  BOOL v18 = v468++ > 8;
                }
                while (!v18);
LABEL_836:
                LODWORD(v469) = 0;
                goto LABEL_1064;
              }
              char v705 = 0;
              unsigned int v706 = 0;
              uint64_t v469 = 0;
              if (v465 <= v464) {
                unint64_t v465 = *((void *)this + 1);
              }
              while (2)
              {
                if (v465 == v464)
                {
                  LODWORD(v469) = 0;
                  unsigned char *v5 = 1;
                }
                else
                {
                  unint64_t v707 = v464 + 1;
                  char v708 = *(unsigned char *)(v466 + v464);
                  *uint64_t v3 = v707;
                  v469 |= (unint64_t)(v708 & 0x7F) << v705;
                  if (v708 < 0)
                  {
                    v705 += 7;
                    unint64_t v464 = v707;
                    BOOL v18 = v706++ > 8;
                    if (v18) {
                      goto LABEL_836;
                    }
                    continue;
                  }
                  if (*v5) {
                    LODWORD(v469) = 0;
                  }
                }
                break;
              }
LABEL_1064:
              *(_DWORD *)(a1 + 200) = v469;
              break;
            case 1304:
              *v11 |= 0x800000000uLL;
              unint64_t v472 = *((void *)this + 1);
              unint64_t v473 = *((void *)this + 2);
              uint64_t v474 = *(void *)this;
              if (v472 <= 0xFFFFFFFFFFFFFFF5 && v472 + 10 <= v473)
              {
                char v475 = 0;
                unsigned int v476 = 0;
                uint64_t v477 = 0;
                do
                {
                  unint64_t v478 = v472 + 1;
                  *uint64_t v3 = v472 + 1;
                  char v479 = *(unsigned char *)(v474 + v472);
                  v477 |= (unint64_t)(v479 & 0x7F) << v475;
                  if ((v479 & 0x80) == 0) {
                    goto LABEL_1068;
                  }
                  v475 += 7;
                  unint64_t v472 = v478;
                  BOOL v18 = v476++ > 8;
                }
                while (!v18);
LABEL_843:
                LODWORD(v477) = 0;
                goto LABEL_1068;
              }
              char v709 = 0;
              unsigned int v710 = 0;
              uint64_t v477 = 0;
              if (v473 <= v472) {
                unint64_t v473 = *((void *)this + 1);
              }
              while (2)
              {
                if (v473 == v472)
                {
                  LODWORD(v477) = 0;
                  unsigned char *v5 = 1;
                }
                else
                {
                  unint64_t v711 = v472 + 1;
                  char v712 = *(unsigned char *)(v474 + v472);
                  *uint64_t v3 = v711;
                  v477 |= (unint64_t)(v712 & 0x7F) << v709;
                  if (v712 < 0)
                  {
                    v709 += 7;
                    unint64_t v472 = v711;
                    BOOL v18 = v710++ > 8;
                    if (v18) {
                      goto LABEL_843;
                    }
                    continue;
                  }
                  if (*v5) {
                    LODWORD(v477) = 0;
                  }
                }
                break;
              }
LABEL_1068:
              *(_DWORD *)(a1 + 180) = v477;
              break;
            case 1305:
              *v11 |= (unint64_t)&_mh_execute_header;
              unint64_t v480 = *((void *)this + 1);
              unint64_t v481 = *((void *)this + 2);
              uint64_t v482 = *(void *)this;
              if (v480 <= 0xFFFFFFFFFFFFFFF5 && v480 + 10 <= v481)
              {
                char v483 = 0;
                unsigned int v484 = 0;
                uint64_t v485 = 0;
                do
                {
                  unint64_t v486 = v480 + 1;
                  *uint64_t v3 = v480 + 1;
                  char v487 = *(unsigned char *)(v482 + v480);
                  v485 |= (unint64_t)(v487 & 0x7F) << v483;
                  if ((v487 & 0x80) == 0) {
                    goto LABEL_1072;
                  }
                  v483 += 7;
                  unint64_t v480 = v486;
                  BOOL v18 = v484++ > 8;
                }
                while (!v18);
LABEL_850:
                LODWORD(v485) = 0;
                goto LABEL_1072;
              }
              char v713 = 0;
              unsigned int v714 = 0;
              uint64_t v485 = 0;
              if (v481 <= v480) {
                unint64_t v481 = *((void *)this + 1);
              }
              while (2)
              {
                if (v481 == v480)
                {
                  LODWORD(v485) = 0;
                  unsigned char *v5 = 1;
                }
                else
                {
                  unint64_t v715 = v480 + 1;
                  char v716 = *(unsigned char *)(v482 + v480);
                  *uint64_t v3 = v715;
                  v485 |= (unint64_t)(v716 & 0x7F) << v713;
                  if (v716 < 0)
                  {
                    v713 += 7;
                    unint64_t v480 = v715;
                    BOOL v18 = v714++ > 8;
                    if (v18) {
                      goto LABEL_850;
                    }
                    continue;
                  }
                  if (*v5) {
                    LODWORD(v485) = 0;
                  }
                }
                break;
              }
LABEL_1072:
              *(_DWORD *)(a1 + 168) = v485;
              break;
            case 1306:
              *v11 |= 0x400000000uLL;
              unint64_t v488 = *((void *)this + 1);
              unint64_t v489 = *((void *)this + 2);
              uint64_t v490 = *(void *)this;
              if (v488 <= 0xFFFFFFFFFFFFFFF5 && v488 + 10 <= v489)
              {
                char v491 = 0;
                unsigned int v492 = 0;
                uint64_t v493 = 0;
                do
                {
                  unint64_t v494 = v488 + 1;
                  *uint64_t v3 = v488 + 1;
                  char v495 = *(unsigned char *)(v490 + v488);
                  v493 |= (unint64_t)(v495 & 0x7F) << v491;
                  if ((v495 & 0x80) == 0) {
                    goto LABEL_1076;
                  }
                  v491 += 7;
                  unint64_t v488 = v494;
                  BOOL v18 = v492++ > 8;
                }
                while (!v18);
LABEL_857:
                LODWORD(v493) = 0;
                goto LABEL_1076;
              }
              char v717 = 0;
              unsigned int v718 = 0;
              uint64_t v493 = 0;
              if (v489 <= v488) {
                unint64_t v489 = *((void *)this + 1);
              }
              while (2)
              {
                if (v489 == v488)
                {
                  LODWORD(v493) = 0;
                  unsigned char *v5 = 1;
                }
                else
                {
                  unint64_t v719 = v488 + 1;
                  char v720 = *(unsigned char *)(v490 + v488);
                  *uint64_t v3 = v719;
                  v493 |= (unint64_t)(v720 & 0x7F) << v717;
                  if (v720 < 0)
                  {
                    v717 += 7;
                    unint64_t v488 = v719;
                    BOOL v18 = v718++ > 8;
                    if (v18) {
                      goto LABEL_857;
                    }
                    continue;
                  }
                  if (*v5) {
                    LODWORD(v493) = 0;
                  }
                }
                break;
              }
LABEL_1076:
              *(_DWORD *)(a1 + 176) = v493;
              break;
            case 1307:
              v11[1] |= 0x100uLL;
              unint64_t v496 = *((void *)this + 1);
              if (v496 >= *((void *)this + 2))
              {
                BOOL v499 = 0;
                unsigned char *v5 = 1;
              }
              else
              {
                unint64_t v497 = v496 + 1;
                int v498 = *(unsigned __int8 *)(*(void *)this + v496);
                *((void *)this + 1) = v497;
                BOOL v499 = v498 != 0;
              }
              *(unsigned char *)(a1 + 319) = v499;
              break;
            case 1308:
              v11[1] |= 0x40000uLL;
              unint64_t v500 = *((void *)this + 1);
              if (v500 >= *((void *)this + 2))
              {
                BOOL v503 = 0;
                unsigned char *v5 = 1;
              }
              else
              {
                unint64_t v501 = v500 + 1;
                int v502 = *(unsigned __int8 *)(*(void *)this + v500);
                *((void *)this + 1) = v501;
                BOOL v503 = v502 != 0;
              }
              *(unsigned char *)(a1 + 329) = v503;
              break;
            case 1309:
              *v11 |= 0x200000000uLL;
              unint64_t v504 = *((void *)this + 1);
              unint64_t v505 = *((void *)this + 2);
              uint64_t v506 = *(void *)this;
              if (v504 <= 0xFFFFFFFFFFFFFFF5 && v504 + 10 <= v505)
              {
                char v507 = 0;
                unsigned int v508 = 0;
                uint64_t v509 = 0;
                do
                {
                  unint64_t v510 = v504 + 1;
                  *uint64_t v3 = v504 + 1;
                  char v511 = *(unsigned char *)(v506 + v504);
                  v509 |= (unint64_t)(v511 & 0x7F) << v507;
                  if ((v511 & 0x80) == 0) {
                    goto LABEL_1080;
                  }
                  v507 += 7;
                  unint64_t v504 = v510;
                  BOOL v18 = v508++ > 8;
                }
                while (!v18);
LABEL_868:
                LODWORD(v509) = 0;
                goto LABEL_1080;
              }
              char v721 = 0;
              unsigned int v722 = 0;
              uint64_t v509 = 0;
              if (v505 <= v504) {
                unint64_t v505 = *((void *)this + 1);
              }
              while (2)
              {
                if (v505 == v504)
                {
                  LODWORD(v509) = 0;
                  unsigned char *v5 = 1;
                }
                else
                {
                  unint64_t v723 = v504 + 1;
                  char v724 = *(unsigned char *)(v506 + v504);
                  *uint64_t v3 = v723;
                  v509 |= (unint64_t)(v724 & 0x7F) << v721;
                  if (v724 < 0)
                  {
                    v721 += 7;
                    unint64_t v504 = v723;
                    BOOL v18 = v722++ > 8;
                    if (v18) {
                      goto LABEL_868;
                    }
                    continue;
                  }
                  if (*v5) {
                    LODWORD(v509) = 0;
                  }
                }
                break;
              }
LABEL_1080:
              *(_DWORD *)(a1 + 172) = v509;
              break;
            case 1310:
              *v11 |= 2uLL;
              unint64_t v512 = *((void *)this + 1);
              unint64_t v513 = *((void *)this + 2);
              uint64_t v514 = *(void *)this;
              if (v512 <= 0xFFFFFFFFFFFFFFF5 && v512 + 10 <= v513)
              {
                char v515 = 0;
                unsigned int v516 = 0;
                uint64_t v517 = 0;
                do
                {
                  unint64_t v518 = v512 + 1;
                  *uint64_t v3 = v512 + 1;
                  char v519 = *(unsigned char *)(v514 + v512);
                  v517 |= (unint64_t)(v519 & 0x7F) << v515;
                  if ((v519 & 0x80) == 0) {
                    goto LABEL_1084;
                  }
                  v515 += 7;
                  unint64_t v512 = v518;
                  BOOL v18 = v516++ > 8;
                }
                while (!v18);
LABEL_875:
                uint64_t v517 = 0;
                goto LABEL_1084;
              }
              char v725 = 0;
              unsigned int v726 = 0;
              uint64_t v517 = 0;
              if (v513 <= v512) {
                unint64_t v513 = *((void *)this + 1);
              }
              while (2)
              {
                if (v513 == v512)
                {
                  uint64_t v517 = 0;
                  unsigned char *v5 = 1;
                }
                else
                {
                  unint64_t v727 = v512 + 1;
                  char v728 = *(unsigned char *)(v514 + v512);
                  *uint64_t v3 = v727;
                  v517 |= (unint64_t)(v728 & 0x7F) << v725;
                  if (v728 < 0)
                  {
                    v725 += 7;
                    unint64_t v512 = v727;
                    BOOL v18 = v726++ > 8;
                    if (v18) {
                      goto LABEL_875;
                    }
                    continue;
                  }
                  if (*v5) {
                    uint64_t v517 = 0;
                  }
                }
                break;
              }
LABEL_1084:
              *(void *)(a1 + 16) = v517;
              break;
            case 1311:
              *v11 |= 0x20uLL;
              unint64_t v520 = *((void *)this + 1);
              unint64_t v521 = *((void *)this + 2);
              uint64_t v522 = *(void *)this;
              if (v520 <= 0xFFFFFFFFFFFFFFF5 && v520 + 10 <= v521)
              {
                char v523 = 0;
                unsigned int v524 = 0;
                uint64_t v525 = 0;
                do
                {
                  unint64_t v526 = v520 + 1;
                  *uint64_t v3 = v520 + 1;
                  char v527 = *(unsigned char *)(v522 + v520);
                  v525 |= (unint64_t)(v527 & 0x7F) << v523;
                  if ((v527 & 0x80) == 0) {
                    goto LABEL_1088;
                  }
                  v523 += 7;
                  unint64_t v520 = v526;
                  BOOL v18 = v524++ > 8;
                }
                while (!v18);
LABEL_882:
                uint64_t v525 = 0;
                goto LABEL_1088;
              }
              char v729 = 0;
              unsigned int v730 = 0;
              uint64_t v525 = 0;
              if (v521 <= v520) {
                unint64_t v521 = *((void *)this + 1);
              }
              while (2)
              {
                if (v521 == v520)
                {
                  uint64_t v525 = 0;
                  unsigned char *v5 = 1;
                }
                else
                {
                  unint64_t v731 = v520 + 1;
                  char v732 = *(unsigned char *)(v522 + v520);
                  *uint64_t v3 = v731;
                  v525 |= (unint64_t)(v732 & 0x7F) << v729;
                  if (v732 < 0)
                  {
                    v729 += 7;
                    unint64_t v520 = v731;
                    BOOL v18 = v730++ > 8;
                    if (v18) {
                      goto LABEL_882;
                    }
                    continue;
                  }
                  if (*v5) {
                    uint64_t v525 = 0;
                  }
                }
                break;
              }
LABEL_1088:
              *(void *)(a1 + 48) = v525;
              break;
            case 1312:
              *v11 |= 4uLL;
              unint64_t v528 = *((void *)this + 1);
              unint64_t v529 = *((void *)this + 2);
              uint64_t v530 = *(void *)this;
              if (v528 <= 0xFFFFFFFFFFFFFFF5 && v528 + 10 <= v529)
              {
                char v531 = 0;
                unsigned int v532 = 0;
                uint64_t v533 = 0;
                do
                {
                  unint64_t v534 = v528 + 1;
                  *uint64_t v3 = v528 + 1;
                  char v535 = *(unsigned char *)(v530 + v528);
                  v533 |= (unint64_t)(v535 & 0x7F) << v531;
                  if ((v535 & 0x80) == 0) {
                    goto LABEL_1092;
                  }
                  v531 += 7;
                  unint64_t v528 = v534;
                  BOOL v18 = v532++ > 8;
                }
                while (!v18);
LABEL_889:
                uint64_t v533 = 0;
                goto LABEL_1092;
              }
              char v733 = 0;
              unsigned int v734 = 0;
              uint64_t v533 = 0;
              if (v529 <= v528) {
                unint64_t v529 = *((void *)this + 1);
              }
              while (2)
              {
                if (v529 == v528)
                {
                  uint64_t v533 = 0;
                  unsigned char *v5 = 1;
                }
                else
                {
                  unint64_t v735 = v528 + 1;
                  char v736 = *(unsigned char *)(v530 + v528);
                  *uint64_t v3 = v735;
                  v533 |= (unint64_t)(v736 & 0x7F) << v733;
                  if (v736 < 0)
                  {
                    v733 += 7;
                    unint64_t v528 = v735;
                    BOOL v18 = v734++ > 8;
                    if (v18) {
                      goto LABEL_889;
                    }
                    continue;
                  }
                  if (*v5) {
                    uint64_t v533 = 0;
                  }
                }
                break;
              }
LABEL_1092:
              *(void *)(a1 + 24) = v533;
              break;
            case 1313:
              *v11 |= 8uLL;
              unint64_t v536 = *((void *)this + 1);
              unint64_t v537 = *((void *)this + 2);
              uint64_t v538 = *(void *)this;
              if (v536 <= 0xFFFFFFFFFFFFFFF5 && v536 + 10 <= v537)
              {
                char v539 = 0;
                unsigned int v540 = 0;
                uint64_t v541 = 0;
                do
                {
                  unint64_t v542 = v536 + 1;
                  *uint64_t v3 = v536 + 1;
                  char v543 = *(unsigned char *)(v538 + v536);
                  v541 |= (unint64_t)(v543 & 0x7F) << v539;
                  if ((v543 & 0x80) == 0) {
                    goto LABEL_1096;
                  }
                  v539 += 7;
                  unint64_t v536 = v542;
                  BOOL v18 = v540++ > 8;
                }
                while (!v18);
LABEL_896:
                uint64_t v541 = 0;
                goto LABEL_1096;
              }
              char v737 = 0;
              unsigned int v738 = 0;
              uint64_t v541 = 0;
              if (v537 <= v536) {
                unint64_t v537 = *((void *)this + 1);
              }
              while (2)
              {
                if (v537 == v536)
                {
                  uint64_t v541 = 0;
                  unsigned char *v5 = 1;
                }
                else
                {
                  unint64_t v739 = v536 + 1;
                  char v740 = *(unsigned char *)(v538 + v536);
                  *uint64_t v3 = v739;
                  v541 |= (unint64_t)(v740 & 0x7F) << v737;
                  if (v740 < 0)
                  {
                    v737 += 7;
                    unint64_t v536 = v739;
                    BOOL v18 = v738++ > 8;
                    if (v18) {
                      goto LABEL_896;
                    }
                    continue;
                  }
                  if (*v5) {
                    uint64_t v541 = 0;
                  }
                }
                break;
              }
LABEL_1096:
              *(void *)(a1 + 32) = v541;
              break;
            case 1314:
              *v11 |= 0x10uLL;
              unint64_t v544 = *((void *)this + 1);
              unint64_t v545 = *((void *)this + 2);
              uint64_t v546 = *(void *)this;
              if (v544 <= 0xFFFFFFFFFFFFFFF5 && v544 + 10 <= v545)
              {
                char v547 = 0;
                unsigned int v548 = 0;
                uint64_t v549 = 0;
                do
                {
                  unint64_t v550 = v544 + 1;
                  *uint64_t v3 = v544 + 1;
                  char v551 = *(unsigned char *)(v546 + v544);
                  v549 |= (unint64_t)(v551 & 0x7F) << v547;
                  if ((v551 & 0x80) == 0) {
                    goto LABEL_1100;
                  }
                  v547 += 7;
                  unint64_t v544 = v550;
                  BOOL v18 = v548++ > 8;
                }
                while (!v18);
LABEL_903:
                uint64_t v549 = 0;
                goto LABEL_1100;
              }
              char v741 = 0;
              unsigned int v742 = 0;
              uint64_t v549 = 0;
              if (v545 <= v544) {
                unint64_t v545 = *((void *)this + 1);
              }
              while (2)
              {
                if (v545 == v544)
                {
                  uint64_t v549 = 0;
                  unsigned char *v5 = 1;
                }
                else
                {
                  unint64_t v743 = v544 + 1;
                  char v744 = *(unsigned char *)(v546 + v544);
                  *uint64_t v3 = v743;
                  v549 |= (unint64_t)(v744 & 0x7F) << v741;
                  if (v744 < 0)
                  {
                    v741 += 7;
                    unint64_t v544 = v743;
                    BOOL v18 = v742++ > 8;
                    if (v18) {
                      goto LABEL_903;
                    }
                    continue;
                  }
                  if (*v5) {
                    uint64_t v549 = 0;
                  }
                }
                break;
              }
LABEL_1100:
              *(void *)(a1 + 40) = v549;
              break;
            case 1315:
              *v11 |= 0x2000000000000uLL;
              unint64_t v552 = *((void *)this + 1);
              unint64_t v553 = *((void *)this + 2);
              uint64_t v554 = *(void *)this;
              if (v552 <= 0xFFFFFFFFFFFFFFF5 && v552 + 10 <= v553)
              {
                char v555 = 0;
                unsigned int v556 = 0;
                uint64_t v557 = 0;
                do
                {
                  unint64_t v558 = v552 + 1;
                  *uint64_t v3 = v552 + 1;
                  char v559 = *(unsigned char *)(v554 + v552);
                  v557 |= (unint64_t)(v559 & 0x7F) << v555;
                  if ((v559 & 0x80) == 0) {
                    goto LABEL_1104;
                  }
                  v555 += 7;
                  unint64_t v552 = v558;
                  BOOL v18 = v556++ > 8;
                }
                while (!v18);
LABEL_910:
                LODWORD(v557) = 0;
                goto LABEL_1104;
              }
              char v745 = 0;
              unsigned int v746 = 0;
              uint64_t v557 = 0;
              if (v553 <= v552) {
                unint64_t v553 = *((void *)this + 1);
              }
              while (2)
              {
                if (v553 == v552)
                {
                  LODWORD(v557) = 0;
                  unsigned char *v5 = 1;
                }
                else
                {
                  unint64_t v747 = v552 + 1;
                  char v748 = *(unsigned char *)(v554 + v552);
                  *uint64_t v3 = v747;
                  v557 |= (unint64_t)(v748 & 0x7F) << v745;
                  if (v748 < 0)
                  {
                    v745 += 7;
                    unint64_t v552 = v747;
                    BOOL v18 = v746++ > 8;
                    if (v18) {
                      goto LABEL_910;
                    }
                    continue;
                  }
                  if (*v5) {
                    LODWORD(v557) = 0;
                  }
                }
                break;
              }
LABEL_1104:
              *(_DWORD *)(a1 + 236) = v557;
              break;
            case 1316:
              *v11 |= 0x2000uLL;
              unint64_t v560 = *v3;
              if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v560 + 4 > *((void *)this + 2)) {
                goto LABEL_512;
              }
              *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(void *)this + v560);
              goto LABEL_919;
            default:
              if (v25 == 1201)
              {
                *v11 |= 0x4000000000uLL;
                unint64_t v561 = *((void *)this + 1);
                unint64_t v562 = *((void *)this + 2);
                uint64_t v563 = *(void *)this;
                if (v561 > 0xFFFFFFFFFFFFFFF5 || v561 + 10 > v562)
                {
                  char v749 = 0;
                  unsigned int v750 = 0;
                  uint64_t v566 = 0;
                  if (v562 <= v561) {
                    unint64_t v562 = *((void *)this + 1);
                  }
                  while (1)
                  {
                    if (v562 == v561)
                    {
                      LODWORD(v566) = 0;
                      unsigned char *v5 = 1;
                      goto LABEL_1108;
                    }
                    unint64_t v751 = v561 + 1;
                    char v752 = *(unsigned char *)(v563 + v561);
                    *uint64_t v3 = v751;
                    v566 |= (unint64_t)(v752 & 0x7F) << v749;
                    if ((v752 & 0x80) == 0) {
                      break;
                    }
                    v749 += 7;
                    unint64_t v561 = v751;
                    BOOL v18 = v750++ > 8;
                    if (v18)
                    {
LABEL_917:
                      LODWORD(v566) = 0;
                      goto LABEL_1108;
                    }
                  }
                  if (*v5) {
                    LODWORD(v566) = 0;
                  }
                }
                else
                {
                  char v564 = 0;
                  unsigned int v565 = 0;
                  uint64_t v566 = 0;
                  while (1)
                  {
                    unint64_t v567 = v561 + 1;
                    *uint64_t v3 = v561 + 1;
                    char v568 = *(unsigned char *)(v563 + v561);
                    v566 |= (unint64_t)(v568 & 0x7F) << v564;
                    if ((v568 & 0x80) == 0) {
                      break;
                    }
                    v564 += 7;
                    unint64_t v561 = v567;
                    BOOL v18 = v565++ > 8;
                    if (v18) {
                      goto LABEL_917;
                    }
                  }
                }
LABEL_1108:
                *(_DWORD *)(a1 + 192) = v566;
              }
              else
              {
                if (v25 != 1202) {
                  goto LABEL_140;
                }
                *v11 |= 0x8000000000uLL;
                unint64_t v78 = *((void *)this + 1);
                unint64_t v79 = *((void *)this + 2);
                uint64_t v80 = *(void *)this;
                if (v78 > 0xFFFFFFFFFFFFFFF5 || v78 + 10 > v79)
                {
                  char v697 = 0;
                  unsigned int v698 = 0;
                  uint64_t v83 = 0;
                  if (v79 <= v78) {
                    unint64_t v79 = *((void *)this + 1);
                  }
                  while (1)
                  {
                    if (v79 == v78)
                    {
                      LODWORD(v83) = 0;
                      unsigned char *v5 = 1;
                      goto LABEL_1056;
                    }
                    unint64_t v699 = v78 + 1;
                    char v700 = *(unsigned char *)(v80 + v78);
                    *uint64_t v3 = v699;
                    v83 |= (unint64_t)(v700 & 0x7F) << v697;
                    if ((v700 & 0x80) == 0) {
                      break;
                    }
                    v697 += 7;
                    unint64_t v78 = v699;
                    BOOL v18 = v698++ > 8;
                    if (v18)
                    {
LABEL_822:
                      LODWORD(v83) = 0;
                      goto LABEL_1056;
                    }
                  }
                  if (*v5) {
                    LODWORD(v83) = 0;
                  }
                }
                else
                {
                  char v81 = 0;
                  unsigned int v82 = 0;
                  uint64_t v83 = 0;
                  while (1)
                  {
                    unint64_t v84 = v78 + 1;
                    *uint64_t v3 = v78 + 1;
                    char v85 = *(unsigned char *)(v80 + v78);
                    v83 |= (unint64_t)(v85 & 0x7F) << v81;
                    if ((v85 & 0x80) == 0) {
                      break;
                    }
                    v81 += 7;
                    unint64_t v78 = v84;
                    BOOL v18 = v82++ > 8;
                    if (v18) {
                      goto LABEL_822;
                    }
                  }
                }
LABEL_1056:
                *(_DWORD *)(a1 + 196) = v83;
              }
              break;
          }
        }
      }
      else if ((v15 >> 3) <= 0x190)
      {
        switch((int)v25)
        {
          case 301:
            v11[1] |= 0x2000uLL;
            unint64_t v36 = *((void *)this + 1);
            if (v36 >= *((void *)this + 2))
            {
              BOOL v39 = 0;
              unsigned char *v5 = 1;
            }
            else
            {
              unint64_t v37 = v36 + 1;
              int v38 = *(unsigned __int8 *)(*(void *)this + v36);
              *((void *)this + 1) = v37;
              BOOL v39 = v38 != 0;
            }
            *(unsigned char *)(a1 + 324) = v39;
            goto LABEL_920;
          case 302:
            v11[1] |= 0x4000000uLL;
            unint64_t v250 = *((void *)this + 1);
            if (v250 >= *((void *)this + 2))
            {
              BOOL v253 = 0;
              unsigned char *v5 = 1;
            }
            else
            {
              unint64_t v251 = v250 + 1;
              int v252 = *(unsigned __int8 *)(*(void *)this + v250);
              *((void *)this + 1) = v251;
              BOOL v253 = v252 != 0;
            }
            *(unsigned char *)(a1 + 337) = v253;
            goto LABEL_920;
          case 303:
            v11[1] |= 0x80000uLL;
            unint64_t v254 = *((void *)this + 1);
            if (v254 >= *((void *)this + 2))
            {
              BOOL v257 = 0;
              unsigned char *v5 = 1;
            }
            else
            {
              unint64_t v255 = v254 + 1;
              int v256 = *(unsigned __int8 *)(*(void *)this + v254);
              *((void *)this + 1) = v255;
              BOOL v257 = v256 != 0;
            }
            *(unsigned char *)(a1 + 330) = v257;
            goto LABEL_920;
          case 304:
            v11[1] |= 0x2000000000uLL;
            unint64_t v258 = *((void *)this + 1);
            if (v258 >= *((void *)this + 2))
            {
              BOOL v261 = 0;
              unsigned char *v5 = 1;
            }
            else
            {
              unint64_t v259 = v258 + 1;
              int v260 = *(unsigned __int8 *)(*(void *)this + v258);
              *((void *)this + 1) = v259;
              BOOL v261 = v260 != 0;
            }
            *(unsigned char *)(a1 + 348) = v261;
            goto LABEL_920;
          case 305:
            v11[1] |= 0x200000000uLL;
            unint64_t v262 = *((void *)this + 1);
            if (v262 >= *((void *)this + 2))
            {
              BOOL v265 = 0;
              unsigned char *v5 = 1;
            }
            else
            {
              unint64_t v263 = v262 + 1;
              int v264 = *(unsigned __int8 *)(*(void *)this + v262);
              *((void *)this + 1) = v263;
              BOOL v265 = v264 != 0;
            }
            *(unsigned char *)(a1 + 344) = v265;
            goto LABEL_920;
          case 306:
            v11[1] |= 0x4000000000uLL;
            unint64_t v266 = *((void *)this + 1);
            if (v266 >= *((void *)this + 2))
            {
              BOOL v269 = 0;
              unsigned char *v5 = 1;
            }
            else
            {
              unint64_t v267 = v266 + 1;
              int v268 = *(unsigned __int8 *)(*(void *)this + v266);
              *((void *)this + 1) = v267;
              BOOL v269 = v268 != 0;
            }
            *(unsigned char *)(a1 + 349) = v269;
            goto LABEL_920;
          case 307:
            v11[1] |= 0x400000000uLL;
            unint64_t v270 = *((void *)this + 1);
            if (v270 >= *((void *)this + 2))
            {
              BOOL v273 = 0;
              unsigned char *v5 = 1;
            }
            else
            {
              unint64_t v271 = v270 + 1;
              int v272 = *(unsigned __int8 *)(*(void *)this + v270);
              *((void *)this + 1) = v271;
              BOOL v273 = v272 != 0;
            }
            *(unsigned char *)(a1 + 345) = v273;
            goto LABEL_920;
          case 308:
            v11[1] |= 0x40000000uLL;
            unint64_t v274 = *((void *)this + 1);
            if (v274 >= *((void *)this + 2))
            {
              BOOL v277 = 0;
              unsigned char *v5 = 1;
            }
            else
            {
              unint64_t v275 = v274 + 1;
              int v276 = *(unsigned __int8 *)(*(void *)this + v274);
              *((void *)this + 1) = v275;
              BOOL v277 = v276 != 0;
            }
            *(unsigned char *)(a1 + 341) = v277;
            goto LABEL_920;
          case 309:
            v11[1] |= 0x800uLL;
            unint64_t v278 = *((void *)this + 1);
            if (v278 >= *((void *)this + 2))
            {
              BOOL v281 = 0;
              unsigned char *v5 = 1;
            }
            else
            {
              unint64_t v279 = v278 + 1;
              int v280 = *(unsigned __int8 *)(*(void *)this + v278);
              *((void *)this + 1) = v279;
              BOOL v281 = v280 != 0;
            }
            *(unsigned char *)(a1 + 322) = v281;
            goto LABEL_920;
          case 310:
            v11[1] |= 0x100000uLL;
            unint64_t v282 = *((void *)this + 1);
            if (v282 >= *((void *)this + 2))
            {
              BOOL v285 = 0;
              unsigned char *v5 = 1;
            }
            else
            {
              unint64_t v283 = v282 + 1;
              int v284 = *(unsigned __int8 *)(*(void *)this + v282);
              *((void *)this + 1) = v283;
              BOOL v285 = v284 != 0;
            }
            *(unsigned char *)(a1 + 331) = v285;
            goto LABEL_920;
          case 311:
            v11[1] |= 0x8000000000uLL;
            unint64_t v286 = *((void *)this + 1);
            if (v286 >= *((void *)this + 2))
            {
              BOOL v289 = 0;
              unsigned char *v5 = 1;
            }
            else
            {
              unint64_t v287 = v286 + 1;
              int v288 = *(unsigned __int8 *)(*(void *)this + v286);
              *((void *)this + 1) = v287;
              BOOL v289 = v288 != 0;
            }
            *(unsigned char *)(a1 + 350) = v289;
            goto LABEL_920;
          case 312:
            v11[1] |= 0x800000000uLL;
            unint64_t v290 = *((void *)this + 1);
            if (v290 >= *((void *)this + 2))
            {
              BOOL v293 = 0;
              unsigned char *v5 = 1;
            }
            else
            {
              unint64_t v291 = v290 + 1;
              int v292 = *(unsigned __int8 *)(*(void *)this + v290);
              *((void *)this + 1) = v291;
              BOOL v293 = v292 != 0;
            }
            *(unsigned char *)(a1 + 346) = v293;
            goto LABEL_920;
          case 313:
            *v11 |= 0x20000uLL;
            unint64_t v294 = *((void *)this + 1);
            unint64_t v295 = *((void *)this + 2);
            uint64_t v296 = *(void *)this;
            if (v294 <= 0xFFFFFFFFFFFFFFF5 && v294 + 10 <= v295)
            {
              char v297 = 0;
              unsigned int v298 = 0;
              uint64_t v299 = 0;
              do
              {
                unint64_t v300 = v294 + 1;
                *uint64_t v3 = v294 + 1;
                char v301 = *(unsigned char *)(v296 + v294);
                v299 |= (unint64_t)(v301 & 0x7F) << v297;
                if ((v301 & 0x80) == 0) {
                  goto LABEL_1025;
                }
                v297 += 7;
                unint64_t v294 = v300;
                BOOL v18 = v298++ > 8;
              }
              while (!v18);
LABEL_714:
              LODWORD(v299) = 0;
              goto LABEL_1025;
            }
            char v657 = 0;
            unsigned int v658 = 0;
            uint64_t v299 = 0;
            if (v295 <= v294) {
              unint64_t v295 = *((void *)this + 1);
            }
            while (2)
            {
              if (v295 == v294)
              {
                LODWORD(v299) = 0;
                unsigned char *v5 = 1;
              }
              else
              {
                unint64_t v659 = v294 + 1;
                char v660 = *(unsigned char *)(v296 + v294);
                *uint64_t v3 = v659;
                v299 |= (unint64_t)(v660 & 0x7F) << v657;
                if (v660 < 0)
                {
                  v657 += 7;
                  unint64_t v294 = v659;
                  BOOL v18 = v658++ > 8;
                  if (v18) {
                    goto LABEL_714;
                  }
                  continue;
                }
                if (*v5) {
                  LODWORD(v299) = 0;
                }
              }
              break;
            }
LABEL_1025:
            *(_DWORD *)(a1 + 108) = v299;
            goto LABEL_920;
          case 314:
            v11[1] |= 0x400000uLL;
            unint64_t v302 = *((void *)this + 1);
            if (v302 >= *((void *)this + 2))
            {
              BOOL v305 = 0;
              unsigned char *v5 = 1;
            }
            else
            {
              unint64_t v303 = v302 + 1;
              int v304 = *(unsigned __int8 *)(*(void *)this + v302);
              *((void *)this + 1) = v303;
              BOOL v305 = v304 != 0;
            }
            *(unsigned char *)(a1 + 333) = v305;
            goto LABEL_920;
          case 315:
            v11[1] |= 0x800000uLL;
            unint64_t v306 = *((void *)this + 1);
            if (v306 >= *((void *)this + 2))
            {
              BOOL v309 = 0;
              unsigned char *v5 = 1;
            }
            else
            {
              unint64_t v307 = v306 + 1;
              int v308 = *(unsigned __int8 *)(*(void *)this + v306);
              *((void *)this + 1) = v307;
              BOOL v309 = v308 != 0;
            }
            *(unsigned char *)(a1 + 334) = v309;
            goto LABEL_920;
          case 316:
            v11[1] |= 0x20uLL;
            unint64_t v310 = *((void *)this + 1);
            if (v310 >= *((void *)this + 2))
            {
              BOOL v313 = 0;
              unsigned char *v5 = 1;
            }
            else
            {
              unint64_t v311 = v310 + 1;
              int v312 = *(unsigned __int8 *)(*(void *)this + v310);
              *((void *)this + 1) = v311;
              BOOL v313 = v312 != 0;
            }
            *(unsigned char *)(a1 + 316) = v313;
            goto LABEL_920;
          case 317:
            *v11 |= 0x40000uLL;
            unint64_t v314 = *((void *)this + 1);
            unint64_t v315 = *((void *)this + 2);
            uint64_t v316 = *(void *)this;
            if (v314 <= 0xFFFFFFFFFFFFFFF5 && v314 + 10 <= v315)
            {
              char v317 = 0;
              unsigned int v318 = 0;
              uint64_t v319 = 0;
              do
              {
                unint64_t v320 = v314 + 1;
                *uint64_t v3 = v314 + 1;
                char v321 = *(unsigned char *)(v316 + v314);
                v319 |= (unint64_t)(v321 & 0x7F) << v317;
                if ((v321 & 0x80) == 0) {
                  goto LABEL_1028;
                }
                v317 += 7;
                unint64_t v314 = v320;
                BOOL v18 = v318++ > 8;
              }
              while (!v18);
LABEL_727:
              LODWORD(v319) = 0;
              goto LABEL_1028;
            }
            char v661 = 0;
            unsigned int v662 = 0;
            uint64_t v319 = 0;
            if (v315 <= v314) {
              unint64_t v315 = *((void *)this + 1);
            }
            break;
          case 318:
            v11[1] |= 0x40000000000uLL;
            unint64_t v322 = *((void *)this + 1);
            if (v322 >= *((void *)this + 2))
            {
              BOOL v325 = 0;
              unsigned char *v5 = 1;
            }
            else
            {
              unint64_t v323 = v322 + 1;
              int v324 = *(unsigned __int8 *)(*(void *)this + v322);
              *((void *)this + 1) = v323;
              BOOL v325 = v324 != 0;
            }
            *(unsigned char *)(a1 + 353) = v325;
            goto LABEL_920;
          case 319:
            v11[1] |= 0x10000000000uLL;
            unint64_t v326 = *((void *)this + 1);
            if (v326 >= *((void *)this + 2))
            {
              BOOL v329 = 0;
              unsigned char *v5 = 1;
            }
            else
            {
              unint64_t v327 = v326 + 1;
              int v328 = *(unsigned __int8 *)(*(void *)this + v326);
              *((void *)this + 1) = v327;
              BOOL v329 = v328 != 0;
            }
            *(unsigned char *)(a1 + 351) = v329;
            goto LABEL_920;
          case 320:
            v11[1] |= 0x20000000000uLL;
            unint64_t v330 = *((void *)this + 1);
            if (v330 >= *((void *)this + 2))
            {
              BOOL v333 = 0;
              unsigned char *v5 = 1;
            }
            else
            {
              unint64_t v331 = v330 + 1;
              int v332 = *(unsigned __int8 *)(*(void *)this + v330);
              *((void *)this + 1) = v331;
              BOOL v333 = v332 != 0;
            }
            *(unsigned char *)(a1 + 352) = v333;
            goto LABEL_920;
          case 321:
            v11[1] |= (unint64_t)&_mh_execute_header;
            unint64_t v334 = *((void *)this + 1);
            if (v334 >= *((void *)this + 2))
            {
              BOOL v337 = 0;
              unsigned char *v5 = 1;
            }
            else
            {
              unint64_t v335 = v334 + 1;
              int v336 = *(unsigned __int8 *)(*(void *)this + v334);
              *((void *)this + 1) = v335;
              BOOL v337 = v336 != 0;
            }
            *(unsigned char *)(a1 + 343) = v337;
            goto LABEL_920;
          case 322:
            v11[1] |= 0x80000000uLL;
            unint64_t v338 = *((void *)this + 1);
            if (v338 >= *((void *)this + 2))
            {
              BOOL v341 = 0;
              unsigned char *v5 = 1;
            }
            else
            {
              unint64_t v339 = v338 + 1;
              int v340 = *(unsigned __int8 *)(*(void *)this + v338);
              *((void *)this + 1) = v339;
              BOOL v341 = v340 != 0;
            }
            *(unsigned char *)(a1 + 342) = v341;
            goto LABEL_920;
          default:
            JUMPOUT(0);
        }
        while (1)
        {
          if (v315 == v314)
          {
            LODWORD(v319) = 0;
            unsigned char *v5 = 1;
            goto LABEL_1028;
          }
          unint64_t v663 = v314 + 1;
          char v664 = *(unsigned char *)(v316 + v314);
          *uint64_t v3 = v663;
          v319 |= (unint64_t)(v664 & 0x7F) << v661;
          if ((v664 & 0x80) == 0) {
            break;
          }
          v661 += 7;
          unint64_t v314 = v663;
          BOOL v18 = v662++ > 8;
          if (v18) {
            goto LABEL_727;
          }
        }
        if (*v5) {
          LODWORD(v319) = 0;
        }
LABEL_1028:
        *(_DWORD *)(a1 + 112) = v319;
      }
      else
      {
        switch((int)v25)
        {
          case 1:
            *v11 |= 0x800000uLL;
            unint64_t v26 = *v3;
            if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v26 + 4 > *((void *)this + 2)) {
              goto LABEL_512;
            }
            *(_DWORD *)(a1 + 132) = *(_DWORD *)(*(void *)this + v26);
            goto LABEL_919;
          case 2:
            *v11 |= 0x400000uLL;
            unint64_t v120 = *v3;
            if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v120 + 4 > *((void *)this + 2)) {
              goto LABEL_512;
            }
            *(_DWORD *)(a1 + 128) = *(_DWORD *)(*(void *)this + v120);
            goto LABEL_919;
          case 3:
            *v11 |= 0x1000000uLL;
            unint64_t v121 = *((void *)this + 1);
            unint64_t v122 = *((void *)this + 2);
            uint64_t v123 = *(void *)this;
            if (v121 <= 0xFFFFFFFFFFFFFFF5 && v121 + 10 <= v122)
            {
              char v124 = 0;
              unsigned int v125 = 0;
              uint64_t v126 = 0;
              do
              {
                unint64_t v127 = v121 + 1;
                *uint64_t v3 = v121 + 1;
                char v128 = *(unsigned char *)(v123 + v121);
                v126 |= (unint64_t)(v128 & 0x7F) << v124;
                if ((v128 & 0x80) == 0) {
                  goto LABEL_983;
                }
                v124 += 7;
                unint64_t v121 = v127;
                BOOL v18 = v125++ > 8;
              }
              while (!v18);
LABEL_590:
              LODWORD(v126) = 0;
              goto LABEL_983;
            }
            char v601 = 0;
            unsigned int v602 = 0;
            uint64_t v126 = 0;
            if (v122 <= v121) {
              unint64_t v122 = *((void *)this + 1);
            }
            while (2)
            {
              if (v122 == v121)
              {
                LODWORD(v126) = 0;
                unsigned char *v5 = 1;
              }
              else
              {
                unint64_t v603 = v121 + 1;
                char v604 = *(unsigned char *)(v123 + v121);
                *uint64_t v3 = v603;
                v126 |= (unint64_t)(v604 & 0x7F) << v601;
                if (v604 < 0)
                {
                  v601 += 7;
                  unint64_t v121 = v603;
                  BOOL v18 = v602++ > 8;
                  if (v18) {
                    goto LABEL_590;
                  }
                  continue;
                }
                if (*v5) {
                  LODWORD(v126) = 0;
                }
              }
              break;
            }
LABEL_983:
            *(_DWORD *)(a1 + 136) = v126;
            goto LABEL_920;
          case 4:
            *v11 |= 0x10000000000000uLL;
            unint64_t v129 = *((void *)this + 1);
            unint64_t v130 = *((void *)this + 2);
            uint64_t v131 = *(void *)this;
            if (v129 <= 0xFFFFFFFFFFFFFFF5 && v129 + 10 <= v130)
            {
              char v132 = 0;
              unsigned int v133 = 0;
              uint64_t v134 = 0;
              do
              {
                unint64_t v135 = v129 + 1;
                *uint64_t v3 = v129 + 1;
                char v136 = *(unsigned char *)(v131 + v129);
                v134 |= (unint64_t)(v136 & 0x7F) << v132;
                if ((v136 & 0x80) == 0) {
                  goto LABEL_986;
                }
                v132 += 7;
                unint64_t v129 = v135;
                BOOL v18 = v133++ > 8;
              }
              while (!v18);
LABEL_597:
              LODWORD(v134) = 0;
              goto LABEL_986;
            }
            char v605 = 0;
            unsigned int v606 = 0;
            uint64_t v134 = 0;
            if (v130 <= v129) {
              unint64_t v130 = *((void *)this + 1);
            }
            while (2)
            {
              if (v130 == v129)
              {
                LODWORD(v134) = 0;
                unsigned char *v5 = 1;
              }
              else
              {
                unint64_t v607 = v129 + 1;
                char v608 = *(unsigned char *)(v131 + v129);
                *uint64_t v3 = v607;
                v134 |= (unint64_t)(v608 & 0x7F) << v605;
                if (v608 < 0)
                {
                  v605 += 7;
                  unint64_t v129 = v607;
                  BOOL v18 = v606++ > 8;
                  if (v18) {
                    goto LABEL_597;
                  }
                  continue;
                }
                if (*v5) {
                  LODWORD(v134) = 0;
                }
              }
              break;
            }
LABEL_986:
            *(_DWORD *)(a1 + 248) = v134;
            goto LABEL_920;
          case 5:
            v11[1] |= 1uLL;
            unint64_t v137 = *v3;
            if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v137 + 4 > *((void *)this + 2)) {
              goto LABEL_512;
            }
            *(_DWORD *)(a1 + 296) = *(_DWORD *)(*(void *)this + v137);
            goto LABEL_919;
          case 6:
            *v11 |= 0x400000000000000uLL;
            unint64_t v138 = *v3;
            if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v138 + 4 > *((void *)this + 2)) {
              goto LABEL_512;
            }
            *(_DWORD *)(a1 + 272) = *(_DWORD *)(*(void *)this + v138);
            goto LABEL_919;
          case 7:
            *v11 |= 0x400000000000uLL;
            unint64_t v139 = *v3;
            if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v139 + 4 > *((void *)this + 2)) {
              goto LABEL_512;
            }
            *(_DWORD *)(a1 + 224) = *(_DWORD *)(*(void *)this + v139);
            goto LABEL_919;
          case 8:
            *v11 |= 0x200000000000uLL;
            unint64_t v140 = *v3;
            if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v140 + 4 > *((void *)this + 2)) {
              goto LABEL_512;
            }
            *(_DWORD *)(a1 + 220) = *(_DWORD *)(*(void *)this + v140);
            goto LABEL_919;
          case 9:
            *v11 |= 0x200uLL;
            unint64_t v141 = *v3;
            if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v141 + 4 > *((void *)this + 2)) {
              goto LABEL_512;
            }
            *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v141);
            goto LABEL_919;
          case 10:
            *v11 |= 0x80000000000000uLL;
            unint64_t v142 = *((void *)this + 1);
            unint64_t v143 = *((void *)this + 2);
            uint64_t v144 = *(void *)this;
            if (v142 <= 0xFFFFFFFFFFFFFFF5 && v142 + 10 <= v143)
            {
              char v145 = 0;
              unsigned int v146 = 0;
              uint64_t v147 = 0;
              do
              {
                unint64_t v148 = v142 + 1;
                *uint64_t v3 = v142 + 1;
                char v149 = *(unsigned char *)(v144 + v142);
                v147 |= (unint64_t)(v149 & 0x7F) << v145;
                if ((v149 & 0x80) == 0) {
                  goto LABEL_989;
                }
                v145 += 7;
                unint64_t v142 = v148;
                BOOL v18 = v146++ > 8;
              }
              while (!v18);
LABEL_604:
              LODWORD(v147) = 0;
              goto LABEL_989;
            }
            char v609 = 0;
            unsigned int v610 = 0;
            uint64_t v147 = 0;
            if (v143 <= v142) {
              unint64_t v143 = *((void *)this + 1);
            }
            while (2)
            {
              if (v143 == v142)
              {
                LODWORD(v147) = 0;
                unsigned char *v5 = 1;
              }
              else
              {
                unint64_t v611 = v142 + 1;
                char v612 = *(unsigned char *)(v144 + v142);
                *uint64_t v3 = v611;
                v147 |= (unint64_t)(v612 & 0x7F) << v609;
                if (v612 < 0)
                {
                  v609 += 7;
                  unint64_t v142 = v611;
                  BOOL v18 = v610++ > 8;
                  if (v18) {
                    goto LABEL_604;
                  }
                  continue;
                }
                if (*v5) {
                  LODWORD(v147) = 0;
                }
              }
              break;
            }
LABEL_989:
            *(_DWORD *)(a1 + 260) = v147;
            goto LABEL_920;
          case 11:
            *v11 |= 0x2000000uLL;
            unint64_t v150 = *((void *)this + 1);
            unint64_t v151 = *((void *)this + 2);
            uint64_t v152 = *(void *)this;
            if (v150 <= 0xFFFFFFFFFFFFFFF5 && v150 + 10 <= v151)
            {
              char v153 = 0;
              unsigned int v154 = 0;
              uint64_t v155 = 0;
              do
              {
                unint64_t v156 = v150 + 1;
                *uint64_t v3 = v150 + 1;
                char v157 = *(unsigned char *)(v152 + v150);
                v155 |= (unint64_t)(v157 & 0x7F) << v153;
                if ((v157 & 0x80) == 0) {
                  goto LABEL_992;
                }
                v153 += 7;
                unint64_t v150 = v156;
                BOOL v18 = v154++ > 8;
              }
              while (!v18);
LABEL_611:
              LODWORD(v155) = 0;
              goto LABEL_992;
            }
            char v613 = 0;
            unsigned int v614 = 0;
            uint64_t v155 = 0;
            if (v151 <= v150) {
              unint64_t v151 = *((void *)this + 1);
            }
            while (2)
            {
              if (v151 == v150)
              {
                LODWORD(v155) = 0;
                unsigned char *v5 = 1;
              }
              else
              {
                unint64_t v615 = v150 + 1;
                char v616 = *(unsigned char *)(v152 + v150);
                *uint64_t v3 = v615;
                v155 |= (unint64_t)(v616 & 0x7F) << v613;
                if (v616 < 0)
                {
                  v613 += 7;
                  unint64_t v150 = v615;
                  BOOL v18 = v614++ > 8;
                  if (v18) {
                    goto LABEL_611;
                  }
                  continue;
                }
                if (*v5) {
                  LODWORD(v155) = 0;
                }
              }
              break;
            }
LABEL_992:
            *(_DWORD *)(a1 + 140) = v155;
            goto LABEL_920;
          case 12:
            *v11 |= 0x10000uLL;
            unint64_t v158 = *v3;
            if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v158 + 4 > *((void *)this + 2)) {
              goto LABEL_512;
            }
            *(_DWORD *)(a1 + 104) = *(_DWORD *)(*(void *)this + v158);
            goto LABEL_919;
          case 13:
            v11[1] |= 8uLL;
            unint64_t v159 = *v3;
            if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v159 + 4 > *((void *)this + 2)) {
              goto LABEL_512;
            }
            *(_DWORD *)(a1 + 308) = *(_DWORD *)(*(void *)this + v159);
            goto LABEL_919;
          case 14:
            v11[1] |= 0x10uLL;
            unint64_t v160 = *v3;
            if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v160 + 4 > *((void *)this + 2)) {
              goto LABEL_512;
            }
            *(_DWORD *)(a1 + 312) = *(_DWORD *)(*(void *)this + v160);
            goto LABEL_919;
          case 15:
            *v11 |= 0x80000000000uLL;
            unint64_t v161 = *((void *)this + 1);
            unint64_t v162 = *((void *)this + 2);
            uint64_t v163 = *(void *)this;
            if (v161 <= 0xFFFFFFFFFFFFFFF5 && v161 + 10 <= v162)
            {
              char v164 = 0;
              unsigned int v165 = 0;
              uint64_t v166 = 0;
              do
              {
                unint64_t v167 = v161 + 1;
                *uint64_t v3 = v161 + 1;
                char v168 = *(unsigned char *)(v163 + v161);
                v166 |= (unint64_t)(v168 & 0x7F) << v164;
                if ((v168 & 0x80) == 0) {
                  goto LABEL_995;
                }
                v164 += 7;
                unint64_t v161 = v167;
                BOOL v18 = v165++ > 8;
              }
              while (!v18);
LABEL_618:
              LODWORD(v166) = 0;
              goto LABEL_995;
            }
            char v617 = 0;
            unsigned int v618 = 0;
            uint64_t v166 = 0;
            if (v162 <= v161) {
              unint64_t v162 = *((void *)this + 1);
            }
            while (2)
            {
              if (v162 == v161)
              {
                LODWORD(v166) = 0;
                unsigned char *v5 = 1;
              }
              else
              {
                unint64_t v619 = v161 + 1;
                char v620 = *(unsigned char *)(v163 + v161);
                *uint64_t v3 = v619;
                v166 |= (unint64_t)(v620 & 0x7F) << v617;
                if (v620 < 0)
                {
                  v617 += 7;
                  unint64_t v161 = v619;
                  BOOL v18 = v618++ > 8;
                  if (v18) {
                    goto LABEL_618;
                  }
                  continue;
                }
                if (*v5) {
                  LODWORD(v166) = 0;
                }
              }
              break;
            }
LABEL_995:
            *(_DWORD *)(a1 + 212) = v166;
            goto LABEL_920;
          case 16:
            *v11 |= 0x20000000000uLL;
            unint64_t v169 = *((void *)this + 1);
            unint64_t v170 = *((void *)this + 2);
            uint64_t v171 = *(void *)this;
            if (v169 <= 0xFFFFFFFFFFFFFFF5 && v169 + 10 <= v170)
            {
              char v172 = 0;
              unsigned int v173 = 0;
              uint64_t v174 = 0;
              do
              {
                unint64_t v175 = v169 + 1;
                *uint64_t v3 = v169 + 1;
                char v176 = *(unsigned char *)(v171 + v169);
                v174 |= (unint64_t)(v176 & 0x7F) << v172;
                if ((v176 & 0x80) == 0) {
                  goto LABEL_998;
                }
                v172 += 7;
                unint64_t v169 = v175;
                BOOL v18 = v173++ > 8;
              }
              while (!v18);
LABEL_625:
              LODWORD(v174) = 0;
              goto LABEL_998;
            }
            char v621 = 0;
            unsigned int v622 = 0;
            uint64_t v174 = 0;
            if (v170 <= v169) {
              unint64_t v170 = *((void *)this + 1);
            }
            while (2)
            {
              if (v170 == v169)
              {
                LODWORD(v174) = 0;
                unsigned char *v5 = 1;
              }
              else
              {
                unint64_t v623 = v169 + 1;
                char v624 = *(unsigned char *)(v171 + v169);
                *uint64_t v3 = v623;
                v174 |= (unint64_t)(v624 & 0x7F) << v621;
                if (v624 < 0)
                {
                  v621 += 7;
                  unint64_t v169 = v623;
                  BOOL v18 = v622++ > 8;
                  if (v18) {
                    goto LABEL_625;
                  }
                  continue;
                }
                if (*v5) {
                  LODWORD(v174) = 0;
                }
              }
              break;
            }
LABEL_998:
            *(_DWORD *)(a1 + 204) = v174;
            goto LABEL_920;
          case 17:
            *v11 |= 0x4000000000000uLL;
            unint64_t v177 = *v3;
            if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v177 + 4 > *((void *)this + 2)) {
              goto LABEL_512;
            }
            *(_DWORD *)(a1 + 240) = *(_DWORD *)(*(void *)this + v177);
            goto LABEL_919;
          case 18:
            *v11 |= 0x1000000000000000uLL;
            unint64_t v178 = *((void *)this + 1);
            unint64_t v179 = *((void *)this + 2);
            uint64_t v180 = *(void *)this;
            if (v178 <= 0xFFFFFFFFFFFFFFF5 && v178 + 10 <= v179)
            {
              char v181 = 0;
              unsigned int v182 = 0;
              uint64_t v183 = 0;
              do
              {
                unint64_t v184 = v178 + 1;
                *uint64_t v3 = v178 + 1;
                char v185 = *(unsigned char *)(v180 + v178);
                v183 |= (unint64_t)(v185 & 0x7F) << v181;
                if ((v185 & 0x80) == 0) {
                  goto LABEL_1001;
                }
                v181 += 7;
                unint64_t v178 = v184;
                BOOL v18 = v182++ > 8;
              }
              while (!v18);
LABEL_632:
              LODWORD(v183) = 0;
              goto LABEL_1001;
            }
            char v625 = 0;
            unsigned int v626 = 0;
            uint64_t v183 = 0;
            if (v179 <= v178) {
              unint64_t v179 = *((void *)this + 1);
            }
            while (2)
            {
              if (v179 == v178)
              {
                LODWORD(v183) = 0;
                unsigned char *v5 = 1;
              }
              else
              {
                unint64_t v627 = v178 + 1;
                char v628 = *(unsigned char *)(v180 + v178);
                *uint64_t v3 = v627;
                v183 |= (unint64_t)(v628 & 0x7F) << v625;
                if (v628 < 0)
                {
                  v625 += 7;
                  unint64_t v178 = v627;
                  BOOL v18 = v626++ > 8;
                  if (v18) {
                    goto LABEL_632;
                  }
                  continue;
                }
                if (*v5) {
                  LODWORD(v183) = 0;
                }
              }
              break;
            }
LABEL_1001:
            *(_DWORD *)(a1 + 280) = v183;
            goto LABEL_920;
          case 19:
            v11[1] |= 2uLL;
            unint64_t v186 = *((void *)this + 1);
            unint64_t v187 = *((void *)this + 2);
            uint64_t v188 = *(void *)this;
            if (v186 <= 0xFFFFFFFFFFFFFFF5 && v186 + 10 <= v187)
            {
              char v189 = 0;
              unsigned int v190 = 0;
              uint64_t v191 = 0;
              do
              {
                unint64_t v192 = v186 + 1;
                *uint64_t v3 = v186 + 1;
                char v193 = *(unsigned char *)(v188 + v186);
                v191 |= (unint64_t)(v193 & 0x7F) << v189;
                if ((v193 & 0x80) == 0) {
                  goto LABEL_1004;
                }
                v189 += 7;
                unint64_t v186 = v192;
                BOOL v18 = v190++ > 8;
              }
              while (!v18);
LABEL_639:
              LODWORD(v191) = 0;
              goto LABEL_1004;
            }
            char v629 = 0;
            unsigned int v630 = 0;
            uint64_t v191 = 0;
            if (v187 <= v186) {
              unint64_t v187 = *((void *)this + 1);
            }
            while (2)
            {
              if (v187 == v186)
              {
                LODWORD(v191) = 0;
                unsigned char *v5 = 1;
              }
              else
              {
                unint64_t v631 = v186 + 1;
                char v632 = *(unsigned char *)(v188 + v186);
                *uint64_t v3 = v631;
                v191 |= (unint64_t)(v632 & 0x7F) << v629;
                if (v632 < 0)
                {
                  v629 += 7;
                  unint64_t v186 = v631;
                  BOOL v18 = v630++ > 8;
                  if (v18) {
                    goto LABEL_639;
                  }
                  continue;
                }
                if (*v5) {
                  LODWORD(v191) = 0;
                }
              }
              break;
            }
LABEL_1004:
            *(_DWORD *)(a1 + 300) = v191;
            goto LABEL_920;
          default:
            switch((int)v25)
            {
              case 'e':
                *v11 |= 0x80uLL;
                unint64_t v40 = *((void *)this + 1);
                unint64_t v41 = *((void *)this + 2);
                uint64_t v42 = *(void *)this;
                if (v40 <= 0xFFFFFFFFFFFFFFF5 && v40 + 10 <= v41)
                {
                  char v43 = 0;
                  unsigned int v44 = 0;
                  uint64_t v45 = 0;
                  do
                  {
                    unint64_t v46 = v40 + 1;
                    *uint64_t v3 = v40 + 1;
                    char v47 = *(unsigned char *)(v42 + v40);
                    v45 |= (unint64_t)(v47 & 0x7F) << v43;
                    if ((v47 & 0x80) == 0) {
                      goto LABEL_977;
                    }
                    v43 += 7;
                    unint64_t v40 = v46;
                    BOOL v18 = v44++ > 8;
                  }
                  while (!v18);
LABEL_574:
                  uint64_t v45 = 0;
                  goto LABEL_977;
                }
                char v593 = 0;
                unsigned int v594 = 0;
                uint64_t v45 = 0;
                if (v41 <= v40) {
                  unint64_t v41 = *((void *)this + 1);
                }
                while (2)
                {
                  if (v41 == v40)
                  {
                    uint64_t v45 = 0;
                    unsigned char *v5 = 1;
                  }
                  else
                  {
                    unint64_t v595 = v40 + 1;
                    char v596 = *(unsigned char *)(v42 + v40);
                    *uint64_t v3 = v595;
                    v45 |= (unint64_t)(v596 & 0x7F) << v593;
                    if (v596 < 0)
                    {
                      v593 += 7;
                      unint64_t v40 = v595;
                      BOOL v18 = v594++ > 8;
                      if (v18) {
                        goto LABEL_574;
                      }
                      continue;
                    }
                    if (*v5) {
                      uint64_t v45 = 0;
                    }
                  }
                  break;
                }
LABEL_977:
                *(void *)(a1 + 64) = v45;
                goto LABEL_920;
              case 'f':
                *v11 |= 1uLL;
                unint64_t v342 = *((void *)this + 1);
                unint64_t v343 = *((void *)this + 2);
                uint64_t v344 = *(void *)this;
                if (v342 <= 0xFFFFFFFFFFFFFFF5 && v342 + 10 <= v343)
                {
                  char v345 = 0;
                  unsigned int v346 = 0;
                  uint64_t v347 = 0;
                  do
                  {
                    unint64_t v348 = v342 + 1;
                    *uint64_t v3 = v342 + 1;
                    char v349 = *(unsigned char *)(v344 + v342);
                    v347 |= (unint64_t)(v349 & 0x7F) << v345;
                    if ((v349 & 0x80) == 0) {
                      goto LABEL_1031;
                    }
                    v345 += 7;
                    unint64_t v342 = v348;
                    BOOL v18 = v346++ > 8;
                  }
                  while (!v18);
LABEL_744:
                  uint64_t v347 = 0;
                  goto LABEL_1031;
                }
                char v665 = 0;
                unsigned int v666 = 0;
                uint64_t v347 = 0;
                if (v343 <= v342) {
                  unint64_t v343 = *((void *)this + 1);
                }
                break;
              case 'g':
                v11[1] |= 0x40uLL;
                unint64_t v350 = *((void *)this + 1);
                if (v350 >= *((void *)this + 2))
                {
                  BOOL v353 = 0;
                  unsigned char *v5 = 1;
                }
                else
                {
                  unint64_t v351 = v350 + 1;
                  int v352 = *(unsigned __int8 *)(*(void *)this + v350);
                  *((void *)this + 1) = v351;
                  BOOL v353 = v352 != 0;
                }
                *(unsigned char *)(a1 + 317) = v353;
                goto LABEL_920;
              case 'h':
                v11[1] |= 0x80uLL;
                unint64_t v354 = *((void *)this + 1);
                if (v354 >= *((void *)this + 2))
                {
                  BOOL v357 = 0;
                  unsigned char *v5 = 1;
                }
                else
                {
                  unint64_t v355 = v354 + 1;
                  int v356 = *(unsigned __int8 *)(*(void *)this + v354);
                  *((void *)this + 1) = v355;
                  BOOL v357 = v356 != 0;
                }
                *(unsigned char *)(a1 + 318) = v357;
                goto LABEL_920;
              case 'i':
                v11[1] |= 0x8000uLL;
                unint64_t v358 = *((void *)this + 1);
                if (v358 >= *((void *)this + 2))
                {
                  BOOL v361 = 0;
                  unsigned char *v5 = 1;
                }
                else
                {
                  unint64_t v359 = v358 + 1;
                  int v360 = *(unsigned __int8 *)(*(void *)this + v358);
                  *((void *)this + 1) = v359;
                  BOOL v361 = v360 != 0;
                }
                *(unsigned char *)(a1 + 326) = v361;
                goto LABEL_920;
              case 'j':
                v11[1] |= 0x10000uLL;
                unint64_t v362 = *((void *)this + 1);
                if (v362 >= *((void *)this + 2))
                {
                  BOOL v365 = 0;
                  unsigned char *v5 = 1;
                }
                else
                {
                  unint64_t v363 = v362 + 1;
                  int v364 = *(unsigned __int8 *)(*(void *)this + v362);
                  *((void *)this + 1) = v363;
                  BOOL v365 = v364 != 0;
                }
                *(unsigned char *)(a1 + 327) = v365;
                goto LABEL_920;
              case 'k':
                v11[1] |= 0x8000000uLL;
                unint64_t v366 = *((void *)this + 1);
                if (v366 >= *((void *)this + 2))
                {
                  BOOL v369 = 0;
                  unsigned char *v5 = 1;
                }
                else
                {
                  unint64_t v367 = v366 + 1;
                  int v368 = *(unsigned __int8 *)(*(void *)this + v366);
                  *((void *)this + 1) = v367;
                  BOOL v369 = v368 != 0;
                }
                *(unsigned char *)(a1 + 338) = v369;
                goto LABEL_920;
              case 'l':
                v11[1] |= 0x2000000uLL;
                unint64_t v370 = *((void *)this + 1);
                if (v370 >= *((void *)this + 2))
                {
                  BOOL v373 = 0;
                  unsigned char *v5 = 1;
                }
                else
                {
                  unint64_t v371 = v370 + 1;
                  int v372 = *(unsigned __int8 *)(*(void *)this + v370);
                  *((void *)this + 1) = v371;
                  BOOL v373 = v372 != 0;
                }
                *(unsigned char *)(a1 + 336) = v373;
                goto LABEL_920;
              case 'm':
                v11[1] |= 0x1000uLL;
                unint64_t v374 = *((void *)this + 1);
                if (v374 >= *((void *)this + 2))
                {
                  BOOL v377 = 0;
                  unsigned char *v5 = 1;
                }
                else
                {
                  unint64_t v375 = v374 + 1;
                  int v376 = *(unsigned __int8 *)(*(void *)this + v374);
                  *((void *)this + 1) = v375;
                  BOOL v377 = v376 != 0;
                }
                *(unsigned char *)(a1 + 323) = v377;
                goto LABEL_920;
              case 'n':
                v11[1] |= 0x10000000uLL;
                unint64_t v378 = *((void *)this + 1);
                if (v378 >= *((void *)this + 2))
                {
                  BOOL v381 = 0;
                  unsigned char *v5 = 1;
                }
                else
                {
                  unint64_t v379 = v378 + 1;
                  int v380 = *(unsigned __int8 *)(*(void *)this + v378);
                  *((void *)this + 1) = v379;
                  BOOL v381 = v380 != 0;
                }
                *(unsigned char *)(a1 + 339) = v381;
                goto LABEL_920;
              case 'o':
                v11[1] |= 0x20000000uLL;
                unint64_t v382 = *((void *)this + 1);
                if (v382 >= *((void *)this + 2))
                {
                  BOOL v385 = 0;
                  unsigned char *v5 = 1;
                }
                else
                {
                  unint64_t v383 = v382 + 1;
                  int v384 = *(unsigned __int8 *)(*(void *)this + v382);
                  *((void *)this + 1) = v383;
                  BOOL v385 = v384 != 0;
                }
                *(unsigned char *)(a1 + 340) = v385;
                goto LABEL_920;
              case 'p':
                v11[1] |= 0x200uLL;
                unint64_t v386 = *((void *)this + 1);
                if (v386 >= *((void *)this + 2))
                {
                  BOOL v389 = 0;
                  unsigned char *v5 = 1;
                }
                else
                {
                  unint64_t v387 = v386 + 1;
                  int v388 = *(unsigned __int8 *)(*(void *)this + v386);
                  *((void *)this + 1) = v387;
                  BOOL v389 = v388 != 0;
                }
                *(unsigned char *)(a1 + 320) = v389;
                goto LABEL_920;
              case 'q':
                v11[1] |= 0x1000000uLL;
                unint64_t v390 = *((void *)this + 1);
                if (v390 >= *((void *)this + 2))
                {
                  BOOL v393 = 0;
                  unsigned char *v5 = 1;
                }
                else
                {
                  unint64_t v391 = v390 + 1;
                  int v392 = *(unsigned __int8 *)(*(void *)this + v390);
                  *((void *)this + 1) = v391;
                  BOOL v393 = v392 != 0;
                }
                *(unsigned char *)(a1 + 335) = v393;
                goto LABEL_920;
              default:
                goto LABEL_140;
            }
            break;
        }
        while (1)
        {
          if (v343 == v342)
          {
            uint64_t v347 = 0;
            unsigned char *v5 = 1;
            goto LABEL_1031;
          }
          unint64_t v667 = v342 + 1;
          char v668 = *(unsigned char *)(v344 + v342);
          *uint64_t v3 = v667;
          v347 |= (unint64_t)(v668 & 0x7F) << v665;
          if ((v668 & 0x80) == 0) {
            break;
          }
          v665 += 7;
          unint64_t v342 = v667;
          BOOL v18 = v666++ > 8;
          if (v18) {
            goto LABEL_744;
          }
        }
        if (*v5) {
          uint64_t v347 = 0;
        }
LABEL_1031:
        *(void *)(a1 + 8) = v347;
      }
LABEL_920:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v6 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
    }
    while (v2 < v6 && v4 == 0);
  }
  return v4 == 0;
}

uint64_t sub_1016A2CEC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = (uint64_t *)(result + 356);
  uint64_t v5 = *(void *)(result + 356);
  if ((v5 & 0x800000) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(result + 132), 1u);
    uint64_t v5 = *v4;
    uint64_t v6 = v4[1];
    if ((*v4 & 0x400000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v6 = *(void *)(result + 364);
  if ((v5 & 0x400000) != 0)
  {
LABEL_5:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 128), 2u);
    uint64_t v5 = *v4;
    uint64_t v6 = v4[1];
  }
LABEL_6:
  if ((v5 & 0x1000000) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 136), 3u);
    uint64_t v5 = *v4;
    uint64_t v6 = v4[1];
    if ((*v4 & 0x10000000000000) == 0)
    {
LABEL_8:
      if ((v6 & 1) == 0) {
        goto LABEL_9;
      }
      goto LABEL_115;
    }
  }
  else if ((v5 & 0x10000000000000) == 0)
  {
    goto LABEL_8;
  }
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 248), 4u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 1) == 0)
  {
LABEL_9:
    if ((v5 & 0x400000000000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_116;
  }
LABEL_115:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 296), 5u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x400000000000000) == 0)
  {
LABEL_10:
    if ((v5 & 0x400000000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_117;
  }
LABEL_116:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 272), 6u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x400000000000) == 0)
  {
LABEL_11:
    if ((v5 & 0x200000000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_118;
  }
LABEL_117:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 224), 7u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x200000000000) == 0)
  {
LABEL_12:
    if ((v5 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_119;
  }
LABEL_118:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 220), 8u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x200) == 0)
  {
LABEL_13:
    if ((v5 & 0x80000000000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_120;
  }
LABEL_119:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76), 9u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x80000000000000) == 0)
  {
LABEL_14:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_121;
  }
LABEL_120:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 260), 0xAu);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x2000000) == 0)
  {
LABEL_15:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_122;
  }
LABEL_121:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 140), 0xBu);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x10000) == 0)
  {
LABEL_16:
    if ((v6 & 8) == 0) {
      goto LABEL_17;
    }
    goto LABEL_123;
  }
LABEL_122:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 104), 0xCu);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 8) == 0)
  {
LABEL_17:
    if ((v6 & 0x10) == 0) {
      goto LABEL_18;
    }
    goto LABEL_124;
  }
LABEL_123:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 308), 0xDu);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x10) == 0)
  {
LABEL_18:
    if ((v5 & 0x80000000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_125;
  }
LABEL_124:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 312), 0xEu);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x80000000000) == 0)
  {
LABEL_19:
    if ((v5 & 0x20000000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_126;
  }
LABEL_125:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 212), 0xFu);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x20000000000) == 0)
  {
LABEL_20:
    if ((v5 & 0x4000000000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_127;
  }
LABEL_126:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 204), 0x10u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x4000000000000) == 0)
  {
LABEL_21:
    if ((v5 & 0x1000000000000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_128;
  }
LABEL_127:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 240), 0x11u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x1000000000000000) == 0)
  {
LABEL_22:
    if ((v6 & 2) == 0) {
      goto LABEL_23;
    }
    goto LABEL_129;
  }
LABEL_128:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 280), 0x12u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 2) == 0)
  {
LABEL_23:
    if ((v5 & 0x80) == 0) {
      goto LABEL_24;
    }
    goto LABEL_130;
  }
LABEL_129:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 300), 0x13u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x80) == 0)
  {
LABEL_24:
    if ((v5 & 1) == 0) {
      goto LABEL_25;
    }
    goto LABEL_131;
  }
LABEL_130:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 64), 0x65u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 1) == 0)
  {
LABEL_25:
    if ((v6 & 0x40) == 0) {
      goto LABEL_26;
    }
    goto LABEL_132;
  }
LABEL_131:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 8), 0x66u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x40) == 0)
  {
LABEL_26:
    if ((v6 & 0x80) == 0) {
      goto LABEL_27;
    }
    goto LABEL_133;
  }
LABEL_132:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 317), 0x67u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x80) == 0)
  {
LABEL_27:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_134;
  }
LABEL_133:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 318), 0x68u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x8000) == 0)
  {
LABEL_28:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_135;
  }
LABEL_134:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 326), 0x69u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x10000) == 0)
  {
LABEL_29:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_136;
  }
LABEL_135:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 327), 0x6Au);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x8000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_137;
  }
LABEL_136:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 338), 0x6Bu);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x2000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_138;
  }
LABEL_137:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 336), 0x6Cu);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x1000) == 0)
  {
LABEL_32:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_139;
  }
LABEL_138:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 323), 0x6Du);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x10000000) == 0)
  {
LABEL_33:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_140;
  }
LABEL_139:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 339), 0x6Eu);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x20000000) == 0)
  {
LABEL_34:
    if ((v6 & 0x200) == 0) {
      goto LABEL_35;
    }
    goto LABEL_141;
  }
LABEL_140:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 340), 0x6Fu);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x200) == 0)
  {
LABEL_35:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_142;
  }
LABEL_141:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 320), 0x70u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x1000000) == 0)
  {
LABEL_36:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_143;
  }
LABEL_142:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 335), 0x71u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x2000) == 0)
  {
LABEL_37:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_144;
  }
LABEL_143:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 324), 0x12Du);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x4000000) == 0)
  {
LABEL_38:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_145;
  }
LABEL_144:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 337), 0x12Eu);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x80000) == 0)
  {
LABEL_39:
    if ((v6 & 0x2000000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_146;
  }
LABEL_145:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 330), 0x12Fu);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x2000000000) == 0)
  {
LABEL_40:
    if ((v6 & 0x200000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_147;
  }
LABEL_146:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 348), 0x130u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x200000000) == 0)
  {
LABEL_41:
    if ((v6 & 0x4000000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_148;
  }
LABEL_147:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 344), 0x131u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x4000000000) == 0)
  {
LABEL_42:
    if ((v6 & 0x400000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_149;
  }
LABEL_148:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 349), 0x132u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x400000000) == 0)
  {
LABEL_43:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_150;
  }
LABEL_149:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 345), 0x133u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x40000000) == 0)
  {
LABEL_44:
    if ((v6 & 0x800) == 0) {
      goto LABEL_45;
    }
    goto LABEL_151;
  }
LABEL_150:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 341), 0x134u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x800) == 0)
  {
LABEL_45:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_152;
  }
LABEL_151:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 322), 0x135u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x100000) == 0)
  {
LABEL_46:
    if ((v6 & 0x8000000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_153;
  }
LABEL_152:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 331), 0x136u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x8000000000) == 0)
  {
LABEL_47:
    if ((v6 & 0x800000000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_154;
  }
LABEL_153:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 350), 0x137u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x800000000) == 0)
  {
LABEL_48:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_155;
  }
LABEL_154:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 346), 0x138u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x20000) == 0)
  {
LABEL_49:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_156;
  }
LABEL_155:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 108), 0x139u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x400000) == 0)
  {
LABEL_50:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_157;
  }
LABEL_156:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 333), 0x13Au);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x800000) == 0)
  {
LABEL_51:
    if ((v6 & 0x20) == 0) {
      goto LABEL_52;
    }
    goto LABEL_158;
  }
LABEL_157:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 334), 0x13Bu);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x20) == 0)
  {
LABEL_52:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_159;
  }
LABEL_158:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 316), 0x13Cu);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x40000) == 0)
  {
LABEL_53:
    if ((v6 & 0x40000000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_160;
  }
LABEL_159:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 112), 0x13Du);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x40000000000) == 0)
  {
LABEL_54:
    if ((v6 & 0x10000000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_161;
  }
LABEL_160:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 353), 0x13Eu);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x10000000000) == 0)
  {
LABEL_55:
    if ((v6 & 0x20000000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_162;
  }
LABEL_161:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 351), 0x13Fu);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x20000000000) == 0)
  {
LABEL_56:
    if ((v6 & 0x100000000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_163;
  }
LABEL_162:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 352), 0x140u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x100000000) == 0)
  {
LABEL_57:
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_164;
  }
LABEL_163:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 343), 0x141u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x80000000) == 0)
  {
LABEL_58:
    if ((v5 & 0x20000000000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_165;
  }
LABEL_164:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 342), 0x142u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x20000000000000) == 0)
  {
LABEL_59:
    if ((v5 & 0x40000000000000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_166;
  }
LABEL_165:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 252), 0x191u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x40000000000000) == 0)
  {
LABEL_60:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_167;
  }
LABEL_166:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 256), 0x192u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x4000000) == 0)
  {
LABEL_61:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_168;
  }
LABEL_167:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 144), 0x193u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x8000000) == 0)
  {
LABEL_62:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_169;
  }
LABEL_168:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 148), 0x194u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x20000) == 0)
  {
LABEL_63:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_170;
  }
LABEL_169:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 328), 0x195u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x4000) == 0)
  {
LABEL_64:
    if ((v5 & 0x2000000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_171;
  }
LABEL_170:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 325), 0x196u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x2000000000) == 0)
  {
LABEL_65:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_172;
  }
LABEL_171:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 188), 0x197u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x80000) == 0)
  {
LABEL_66:
    if ((v5 & 0x1000000000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_173;
  }
LABEL_172:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 116), 0x198u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x1000000000) == 0)
  {
LABEL_67:
    if ((v5 & 0x4000000000000000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_174;
  }
LABEL_173:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 184), 0x199u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x4000000000000000) == 0)
  {
LABEL_68:
    if ((v5 & 0x8000000000000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_175;
  }
LABEL_174:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 288), 0x1F5u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x8000000000000000) == 0)
  {
LABEL_69:
    if ((v5 & 0x200000000000000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_176;
  }
LABEL_175:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 292), 0x1F6u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x200000000000000) == 0)
  {
LABEL_70:
    if ((v5 & 0x800000000000000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_177;
  }
LABEL_176:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 268), 0x1F7u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x800000000000000) == 0)
  {
LABEL_71:
    if ((v5 & 0x2000000000000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_178;
  }
LABEL_177:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 276), 0x1F8u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x2000000000000000) == 0)
  {
LABEL_72:
    if ((v6 & 0x400) == 0) {
      goto LABEL_73;
    }
    goto LABEL_179;
  }
LABEL_178:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 284), 0x1F9u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x400) == 0)
  {
LABEL_73:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_180;
  }
LABEL_179:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 321), 0x259u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x4000) == 0)
  {
LABEL_74:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_181;
  }
LABEL_180:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 96), 0x25Au);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x1000) == 0)
  {
LABEL_75:
    if ((v5 & 0x100000000000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_182;
  }
LABEL_181:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 88), 0x25Bu);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x100000000000) == 0)
  {
LABEL_76:
    if ((v5 & 0x100000000000000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_183;
  }
LABEL_182:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 216), 0x25Cu);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x100000000000000) == 0)
  {
LABEL_77:
    if ((v5 & 0x40) == 0) {
      goto LABEL_78;
    }
    goto LABEL_184;
  }
LABEL_183:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 264), 0x25Du);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x40) == 0)
  {
LABEL_78:
    if ((v5 & 0x800000000000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_185;
  }
LABEL_184:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 56), 0x25Eu);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x800000000000) == 0)
  {
LABEL_79:
    if ((v5 & 0x1000000000000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_186;
  }
LABEL_185:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 228), 0x2BDu);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x1000000000000) == 0)
  {
LABEL_80:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_187;
  }
LABEL_186:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 232), 0x2BEu);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x100000) == 0)
  {
LABEL_81:
    if ((v5 & 0x400) == 0) {
      goto LABEL_82;
    }
    goto LABEL_188;
  }
LABEL_187:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 120), 0x321u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x400) == 0)
  {
LABEL_82:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_189;
  }
LABEL_188:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80), 0x322u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x200000) == 0)
  {
LABEL_83:
    if ((v5 & 0x800) == 0) {
      goto LABEL_84;
    }
    goto LABEL_190;
  }
LABEL_189:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 124), 0x323u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x800) == 0)
  {
LABEL_84:
    if ((v5 & 0x100) == 0) {
      goto LABEL_85;
    }
    goto LABEL_191;
  }
LABEL_190:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 84), 0x324u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x100) == 0)
  {
LABEL_85:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_86;
    }
    goto LABEL_192;
  }
LABEL_191:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72), 0x385u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x200000) == 0)
  {
LABEL_86:
    if ((v6 & 4) == 0) {
      goto LABEL_87;
    }
    goto LABEL_193;
  }
LABEL_192:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 332), 0x386u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 4) == 0)
  {
LABEL_87:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_88;
    }
    goto LABEL_194;
  }
LABEL_193:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 304), 0x3E9u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x10000000) == 0)
  {
LABEL_88:
    if ((v5 & 0x40000000) == 0) {
      goto LABEL_89;
    }
    goto LABEL_195;
  }
LABEL_194:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 152), 0x44Du);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x40000000) == 0)
  {
LABEL_89:
    if ((v6 & 0x1000000000) == 0) {
      goto LABEL_90;
    }
    goto LABEL_196;
  }
LABEL_195:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 160), 0x44Eu);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x1000000000) == 0)
  {
LABEL_90:
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_91;
    }
    goto LABEL_197;
  }
LABEL_196:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 347), 0x44Fu);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x80000000) == 0)
  {
LABEL_91:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_92;
    }
    goto LABEL_198;
  }
LABEL_197:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 164), 0x450u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x20000000) == 0)
  {
LABEL_92:
    if ((v5 & 0x8000000000000) == 0) {
      goto LABEL_93;
    }
    goto LABEL_199;
  }
LABEL_198:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 156), 0x451u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x8000000000000) == 0)
  {
LABEL_93:
    if ((v5 & 0x4000000000) == 0) {
      goto LABEL_94;
    }
    goto LABEL_200;
  }
LABEL_199:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 244), 0x452u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x4000000000) == 0)
  {
LABEL_94:
    if ((v5 & 0x8000000000) == 0) {
      goto LABEL_95;
    }
    goto LABEL_201;
  }
LABEL_200:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 192), 0x4B1u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x8000000000) == 0)
  {
LABEL_95:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_96;
    }
    goto LABEL_202;
  }
LABEL_201:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 196), 0x4B2u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x8000) == 0)
  {
LABEL_96:
    if ((v5 & 0x40000000000) == 0) {
      goto LABEL_97;
    }
    goto LABEL_203;
  }
LABEL_202:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 100), 0x515u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x40000000000) == 0)
  {
LABEL_97:
    if ((v5 & 0x10000000000) == 0) {
      goto LABEL_98;
    }
    goto LABEL_204;
  }
LABEL_203:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 208), 0x516u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x10000000000) == 0)
  {
LABEL_98:
    if ((v5 & 0x800000000) == 0) {
      goto LABEL_99;
    }
    goto LABEL_205;
  }
LABEL_204:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 200), 0x517u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x800000000) == 0)
  {
LABEL_99:
    if ((v5 & 0x100000000) == 0) {
      goto LABEL_100;
    }
    goto LABEL_206;
  }
LABEL_205:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 180), 0x518u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x100000000) == 0)
  {
LABEL_100:
    if ((v5 & 0x400000000) == 0) {
      goto LABEL_101;
    }
    goto LABEL_207;
  }
LABEL_206:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 168), 0x519u);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x400000000) == 0)
  {
LABEL_101:
    if ((v6 & 0x100) == 0) {
      goto LABEL_102;
    }
    goto LABEL_208;
  }
LABEL_207:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 176), 0x51Au);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x100) == 0)
  {
LABEL_102:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_103;
    }
    goto LABEL_209;
  }
LABEL_208:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 319), 0x51Bu);
  uint64_t v5 = *v4;
  if ((v4[1] & 0x40000) == 0)
  {
LABEL_103:
    if ((v5 & 0x200000000) == 0) {
      goto LABEL_105;
    }
    goto LABEL_104;
  }
LABEL_209:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 329), 0x51Cu);
  if ((*v4 & 0x200000000) != 0) {
LABEL_104:
  }
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 172), 0x51Du);
LABEL_105:
  uint64_t v7 = *v4;
  if ((*v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 16), 0x51Eu);
    uint64_t v7 = *v4;
    if ((*v4 & 0x20) == 0)
    {
LABEL_107:
      if ((v7 & 4) == 0) {
        goto LABEL_108;
      }
      goto LABEL_213;
    }
  }
  else if ((v7 & 0x20) == 0)
  {
    goto LABEL_107;
  }
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 48), 0x51Fu);
  uint64_t v7 = *v4;
  if ((*v4 & 4) == 0)
  {
LABEL_108:
    if ((v7 & 8) == 0) {
      goto LABEL_109;
    }
    goto LABEL_214;
  }
LABEL_213:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 24), 0x520u);
  uint64_t v7 = *v4;
  if ((*v4 & 8) == 0)
  {
LABEL_109:
    if ((v7 & 0x10) == 0) {
      goto LABEL_110;
    }
    goto LABEL_215;
  }
LABEL_214:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 32), 0x521u);
  uint64_t v7 = *v4;
  if ((*v4 & 0x10) == 0)
  {
LABEL_110:
    if ((v7 & 0x2000000000000) == 0) {
      goto LABEL_111;
    }
LABEL_216:
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 236), 0x523u);
    if ((*v4 & 0x2000) == 0) {
      return result;
    }
    goto LABEL_217;
  }
LABEL_215:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 40), 0x522u);
  uint64_t v7 = *v4;
  if ((*v4 & 0x2000000000000) != 0) {
    goto LABEL_216;
  }
LABEL_111:
  if ((v7 & 0x2000) == 0) {
    return result;
  }
LABEL_217:
  float v8 = *(float *)(v3 + 92);

  return PB::Writer::write(this, v8, 0x524u);
}

double sub_1016A38EC(uint64_t a1)
{
  *(void *)a1 = &off_1023342F0;
  *(_DWORD *)(a1 + 204) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(void *)(a1 + 120) = 0;
  return result;
}

void sub_1016A3934(PB::Base *this)
{
  *(void *)this = &off_1023342F0;
  unint64_t v2 = (void *)*((void *)this + 13);
  if (v2)
  {
    *((void *)this + 14) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 10);
  if (v3)
  {
    *((void *)this + 11) = v3;
    operator delete(v3);
  }
  int v4 = (void *)*((void *)this + 7);
  if (v4)
  {
    *((void *)this + 8) = v4;
    operator delete(v4);
  }
  uint64_t v5 = (void *)*((void *)this + 4);
  if (v5)
  {
    *((void *)this + 5) = v5;
    operator delete(v5);
  }
  uint64_t v6 = (void *)*((void *)this + 1);
  if (v6)
  {
    *((void *)this + 2) = v6;
    operator delete(v6);
  }

  PB::Base::~Base(this);
}

void sub_1016A39D8(PB::Base *a1)
{
  sub_1016A3934(a1);

  operator delete();
}

uint64_t sub_1016A3A10(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_1023342F0;
  *(_OWORD *)(a1 + 8) = 0u;
  int v4 = (char *)(a1 + 8);
  *(_OWORD *)(a1 + 56) = 0u;
  uint64_t v5 = (char *)(a1 + 56);
  *(_OWORD *)(a1 + 104) = 0u;
  uint64_t v6 = (char *)(a1 + 104);
  *(_DWORD *)(a1 + 204) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(void *)(a1 + 120) = 0;
  __int16 v7 = *(_WORD *)(a2 + 204);
  if ((v7 & 0x1000) != 0)
  {
    int v9 = *(_DWORD *)(a2 + 196);
    __int16 v8 = 4096;
    *(_WORD *)(a1 + 204) = 4096;
    *(_DWORD *)(a1 + 196) = v9;
    __int16 v7 = *(_WORD *)(a2 + 204);
    if ((v7 & 0x800) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v8 = 0;
  if ((*(_WORD *)(a2 + 204) & 0x800) != 0)
  {
LABEL_5:
    int v10 = *(_DWORD *)(a2 + 192);
    v8 |= 0x800u;
    *(_WORD *)(a1 + 204) = v8;
    *(_DWORD *)(a1 + 192) = v10;
    __int16 v7 = *(_WORD *)(a2 + 204);
  }
LABEL_6:
  if ((v7 & 0x10) != 0)
  {
    uint64_t v13 = *(void *)(a2 + 160);
    v8 |= 0x10u;
    *(_WORD *)(a1 + 204) = v8;
    *(void *)(a1 + 160) = v13;
    __int16 v7 = *(_WORD *)(a2 + 204);
    if ((v7 & 0x4000) == 0)
    {
LABEL_8:
      if ((v7 & 0x400) == 0) {
        goto LABEL_9;
      }
      goto LABEL_25;
    }
  }
  else if ((v7 & 0x4000) == 0)
  {
    goto LABEL_8;
  }
  char v14 = *(unsigned char *)(a2 + 201);
  v8 |= 0x4000u;
  *(_WORD *)(a1 + 204) = v8;
  *(unsigned char *)(a1 + 201) = v14;
  __int16 v7 = *(_WORD *)(a2 + 204);
  if ((v7 & 0x400) == 0)
  {
LABEL_9:
    if ((v7 & 0x2000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_25:
  int v15 = *(_DWORD *)(a2 + 188);
  v8 |= 0x400u;
  *(_WORD *)(a1 + 204) = v8;
  *(_DWORD *)(a1 + 188) = v15;
  __int16 v7 = *(_WORD *)(a2 + 204);
  if ((v7 & 0x2000) == 0)
  {
LABEL_10:
    if ((v7 & 4) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_26:
  char v16 = *(unsigned char *)(a2 + 200);
  v8 |= 0x2000u;
  *(_WORD *)(a1 + 204) = v8;
  *(unsigned char *)(a1 + 200) = v16;
  __int16 v7 = *(_WORD *)(a2 + 204);
  if ((v7 & 4) == 0)
  {
LABEL_11:
    if ((v7 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t v17 = *(void *)(a2 + 144);
  v8 |= 4u;
  *(_WORD *)(a1 + 204) = v8;
  *(void *)(a1 + 144) = v17;
  __int16 v7 = *(_WORD *)(a2 + 204);
  if ((v7 & 8) == 0)
  {
LABEL_12:
    if ((v7 & 0x100) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t v18 = *(void *)(a2 + 152);
  v8 |= 8u;
  *(_WORD *)(a1 + 204) = v8;
  *(void *)(a1 + 152) = v18;
  __int16 v7 = *(_WORD *)(a2 + 204);
  if ((v7 & 0x100) == 0)
  {
LABEL_13:
    if ((v7 & 0x80) == 0) {
      goto LABEL_14;
    }
    goto LABEL_30;
  }
LABEL_29:
  int v19 = *(_DWORD *)(a2 + 180);
  v8 |= 0x100u;
  *(_WORD *)(a1 + 204) = v8;
  *(_DWORD *)(a1 + 180) = v19;
  __int16 v7 = *(_WORD *)(a2 + 204);
  if ((v7 & 0x80) == 0)
  {
LABEL_14:
    if ((v7 & 0x40) == 0) {
      goto LABEL_15;
    }
    goto LABEL_31;
  }
LABEL_30:
  int v20 = *(_DWORD *)(a2 + 176);
  v8 |= 0x80u;
  *(_WORD *)(a1 + 204) = v8;
  *(_DWORD *)(a1 + 176) = v20;
  __int16 v7 = *(_WORD *)(a2 + 204);
  if ((v7 & 0x40) == 0)
  {
LABEL_15:
    if ((v7 & 1) == 0) {
      goto LABEL_16;
    }
    goto LABEL_32;
  }
LABEL_31:
  int v21 = *(_DWORD *)(a2 + 172);
  v8 |= 0x40u;
  *(_WORD *)(a1 + 204) = v8;
  *(_DWORD *)(a1 + 172) = v21;
  __int16 v7 = *(_WORD *)(a2 + 204);
  if ((v7 & 1) == 0)
  {
LABEL_16:
    if ((v7 & 2) == 0) {
      goto LABEL_17;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t v22 = *(void *)(a2 + 128);
  v8 |= 1u;
  *(_WORD *)(a1 + 204) = v8;
  *(void *)(a1 + 128) = v22;
  __int16 v7 = *(_WORD *)(a2 + 204);
  if ((v7 & 2) == 0)
  {
LABEL_17:
    if ((v7 & 0x200) == 0) {
      goto LABEL_18;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t v23 = *(void *)(a2 + 136);
  v8 |= 2u;
  *(_WORD *)(a1 + 204) = v8;
  *(void *)(a1 + 136) = v23;
  __int16 v7 = *(_WORD *)(a2 + 204);
  if ((v7 & 0x200) == 0)
  {
LABEL_18:
    if ((v7 & 0x20) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_34:
  int v24 = *(_DWORD *)(a2 + 184);
  v8 |= 0x200u;
  *(_WORD *)(a1 + 204) = v8;
  *(_DWORD *)(a1 + 184) = v24;
  if ((*(_WORD *)(a2 + 204) & 0x20) != 0)
  {
LABEL_19:
    int v11 = *(_DWORD *)(a2 + 168);
    *(_WORD *)(a1 + 204) = v8 | 0x20;
    *(_DWORD *)(a1 + 168) = v11;
  }
LABEL_20:
  if (a1 != a2)
  {
    sub_1002DD194((char *)(a1 + 80), *(char **)(a2 + 80), *(void *)(a2 + 88), (uint64_t)(*(void *)(a2 + 88) - *(void *)(a2 + 80)) >> 3);
    sub_1002DD194(v6, *(char **)(a2 + 104), *(void *)(a2 + 112), (uint64_t)(*(void *)(a2 + 112) - *(void *)(a2 + 104)) >> 3);
    sub_1000FB43C(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
    sub_1000FB43C(v5, *(char **)(a2 + 56), *(void *)(a2 + 64), (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 2);
    sub_1000FB43C((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
  }
  return a1;
}

uint64_t sub_1016A3CB4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 204);
  if ((v5 & 0x20) != 0)
  {
    PB::TextFormatter::format(this, "deltaGravity", *(float *)(a1 + 168));
    __int16 v5 = *(_WORD *)(a1 + 204);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_33;
    }
  }
  else if ((v5 & 1) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "epochFirstTimestamp", *(void *)(a1 + 128));
  __int16 v5 = *(_WORD *)(a1 + 204);
  if ((v5 & 2) == 0)
  {
LABEL_4:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(this, "epochLastTimestamp", *(void *)(a1 + 136));
  __int16 v5 = *(_WORD *)(a1 + 204);
  if ((v5 & 0x2000) == 0)
  {
LABEL_5:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(this, "isSlowRollDetected", *(unsigned char *)(a1 + 200));
  __int16 v5 = *(_WORD *)(a1 + 204);
  if ((v5 & 0x4000) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "isSpinDetected", *(unsigned char *)(a1 + 201));
  __int16 v5 = *(_WORD *)(a1 + 204);
  if ((v5 & 0x40) == 0)
  {
LABEL_7:
    if ((v5 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "maxDeltaAngleLong", *(float *)(a1 + 172));
  __int16 v5 = *(_WORD *)(a1 + 204);
  if ((v5 & 0x80) == 0)
  {
LABEL_8:
    if ((v5 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_37:
  PB::TextFormatter::format(this, "maxDeltaAngleShort", *(float *)(a1 + 176));
  if ((*(_WORD *)(a1 + 204) & 0x100) != 0) {
LABEL_9:
  }
    PB::TextFormatter::format(this, "slowRollCumCoherentAngle", *(float *)(a1 + 180));
LABEL_10:
  uint64_t v6 = *(float **)(a1 + 8);
  __int16 v7 = *(float **)(a1 + 16);
  while (v6 != v7)
  {
    float v8 = *v6++;
    PB::TextFormatter::format(this, "slowRollSegmentMaxAxisVariance", v8);
  }
  int v9 = *(float **)(a1 + 32);
  int v10 = *(float **)(a1 + 40);
  while (v9 != v10)
  {
    float v11 = *v9++;
    PB::TextFormatter::format(this, "slowRollSegmentMaxFiltRotRate", v11);
  }
  uint64_t v12 = *(float **)(a1 + 56);
  uint64_t v13 = *(float **)(a1 + 64);
  while (v12 != v13)
  {
    float v14 = *v12++;
    PB::TextFormatter::format(this, "slowRollSegmentMinFiltRotRate", v14);
  }
  int v15 = *(unint64_t **)(a1 + 80);
  char v16 = *(unint64_t **)(a1 + 88);
  while (v15 != v16)
  {
    unint64_t v17 = *v15++;
    PB::TextFormatter::format(this, "slowRollSegmentStartTimes", v17);
  }
  uint64_t v18 = *(unint64_t **)(a1 + 104);
  int v19 = *(unint64_t **)(a1 + 112);
  while (v18 != v19)
  {
    unint64_t v20 = *v18++;
    PB::TextFormatter::format(this, "slowRollSegmentStopTimes", v20);
  }
  __int16 v21 = *(_WORD *)(a1 + 204);
  if ((v21 & 4) != 0)
  {
    PB::TextFormatter::format(this, "slowRollStartTime", *(void *)(a1 + 144));
    __int16 v21 = *(_WORD *)(a1 + 204);
    if ((v21 & 8) == 0)
    {
LABEL_22:
      if ((v21 & 0x200) == 0) {
        goto LABEL_23;
      }
      goto LABEL_41;
    }
  }
  else if ((v21 & 8) == 0)
  {
    goto LABEL_22;
  }
  PB::TextFormatter::format(this, "slowRollStopTime", *(void *)(a1 + 152));
  __int16 v21 = *(_WORD *)(a1 + 204);
  if ((v21 & 0x200) == 0)
  {
LABEL_23:
    if ((v21 & 0x400) == 0) {
      goto LABEL_24;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(this, "spatialSamplingCount", *(_DWORD *)(a1 + 184));
  __int16 v21 = *(_WORD *)(a1 + 204);
  if ((v21 & 0x400) == 0)
  {
LABEL_24:
    if ((v21 & 0x800) == 0) {
      goto LABEL_25;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(this, "spinCumulativeRotation", *(float *)(a1 + 188));
  __int16 v21 = *(_WORD *)(a1 + 204);
  if ((v21 & 0x800) == 0)
  {
LABEL_25:
    if ((v21 & 0x1000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(this, "spinCumulativeRotationThresholdDegrees", *(float *)(a1 + 192));
  __int16 v21 = *(_WORD *)(a1 + 204);
  if ((v21 & 0x1000) == 0)
  {
LABEL_26:
    if ((v21 & 0x10) == 0) {
      goto LABEL_28;
    }
    goto LABEL_27;
  }
LABEL_44:
  PB::TextFormatter::format(this, "spinGravityAngleThresholdDegrees", *(float *)(a1 + 196));
  if ((*(_WORD *)(a1 + 204) & 0x10) != 0) {
LABEL_27:
  }
    PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 160));
LABEL_28:

  return PB::TextFormatter::endObject(this);
}

BOOL sub_1016A3FC4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    float v8 = (void **)(a1 + 32);
    int v9 = (void **)(a1 + 56);
    uint64_t v281 = a1 + 72;
    uint64_t v282 = a1 + 48;
    int v10 = (void **)(a1 + 8);
    uint64_t v11 = a1 + 24;
    uint64_t v12 = (void *)(a1 + 120);
    unint64_t v279 = (void **)(a1 + 80);
    int v280 = (void **)(a1 + 104);
    uint64_t v13 = (void *)(a1 + 96);
    while (1)
    {
      uint64_t v14 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v17 = 0;
      while (1)
      {
        unint64_t v18 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v19 = *(unsigned char *)(v14 + v2);
        v17 |= (unint64_t)(v19 & 0x7F) << v15;
        if ((v19 & 0x80) == 0) {
          break;
        }
        v15 += 7;
        unint64_t v2 = v18;
        BOOL v102 = v16++ > 8;
        if (v102) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v25 = v17 & 7;
      if (v25 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v26 = v17 >> 3;
      if ((int)(v17 >> 3) > 200)
      {
        switch((int)v26)
        {
          case 201:
            *(_WORD *)(a1 + 204) |= 1u;
            unint64_t v35 = *((void *)this + 1);
            unint64_t v36 = *((void *)this + 2);
            uint64_t v37 = *(void *)this;
            if (v35 <= 0xFFFFFFFFFFFFFFF5 && v35 + 10 <= v36)
            {
              char v38 = 0;
              unsigned int v39 = 0;
              uint64_t v40 = 0;
              do
              {
                unint64_t v41 = v35 + 1;
                *((void *)this + 1) = v35 + 1;
                char v42 = *(unsigned char *)(v37 + v35);
                v40 |= (unint64_t)(v42 & 0x7F) << v38;
                if ((v42 & 0x80) == 0) {
                  goto LABEL_368;
                }
                v38 += 7;
                unint64_t v35 = v41;
                BOOL v102 = v39++ > 8;
              }
              while (!v102);
LABEL_271:
              uint64_t v40 = 0;
              goto LABEL_368;
            }
            char v183 = 0;
            unsigned int v184 = 0;
            uint64_t v40 = 0;
            if (v36 <= v35) {
              unint64_t v36 = *((void *)this + 1);
            }
            while (2)
            {
              if (v36 == v35)
              {
                uint64_t v40 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v185 = v35 + 1;
                char v186 = *(unsigned char *)(v37 + v35);
                *((void *)this + 1) = v185;
                v40 |= (unint64_t)(v186 & 0x7F) << v183;
                if (v186 < 0)
                {
                  v183 += 7;
                  unint64_t v35 = v185;
                  BOOL v102 = v184++ > 8;
                  if (v102) {
                    goto LABEL_271;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v40 = 0;
                }
              }
              break;
            }
LABEL_368:
            *(void *)(a1 + 128) = v40;
            goto LABEL_455;
          case 202:
            *(_WORD *)(a1 + 204) |= 2u;
            unint64_t v72 = *((void *)this + 1);
            unint64_t v73 = *((void *)this + 2);
            uint64_t v74 = *(void *)this;
            if (v72 <= 0xFFFFFFFFFFFFFFF5 && v72 + 10 <= v73)
            {
              char v75 = 0;
              unsigned int v76 = 0;
              uint64_t v77 = 0;
              do
              {
                unint64_t v78 = v72 + 1;
                *((void *)this + 1) = v72 + 1;
                char v79 = *(unsigned char *)(v74 + v72);
                v77 |= (unint64_t)(v79 & 0x7F) << v75;
                if ((v79 & 0x80) == 0) {
                  goto LABEL_377;
                }
                v75 += 7;
                unint64_t v72 = v78;
                BOOL v102 = v76++ > 8;
              }
              while (!v102);
LABEL_296:
              uint64_t v77 = 0;
              goto LABEL_377;
            }
            char v195 = 0;
            unsigned int v196 = 0;
            uint64_t v77 = 0;
            if (v73 <= v72) {
              unint64_t v73 = *((void *)this + 1);
            }
            while (2)
            {
              if (v73 == v72)
              {
                uint64_t v77 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v197 = v72 + 1;
                char v198 = *(unsigned char *)(v74 + v72);
                *((void *)this + 1) = v197;
                v77 |= (unint64_t)(v198 & 0x7F) << v195;
                if (v198 < 0)
                {
                  v195 += 7;
                  unint64_t v72 = v197;
                  BOOL v102 = v196++ > 8;
                  if (v102) {
                    goto LABEL_296;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v77 = 0;
                }
              }
              break;
            }
LABEL_377:
            *(void *)(a1 + 136) = v77;
            goto LABEL_455;
          case 203:
            *(_WORD *)(a1 + 204) |= 0x200u;
            unint64_t v80 = *((void *)this + 1);
            unint64_t v81 = *((void *)this + 2);
            uint64_t v82 = *(void *)this;
            if (v80 <= 0xFFFFFFFFFFFFFFF5 && v80 + 10 <= v81)
            {
              char v83 = 0;
              unsigned int v84 = 0;
              uint64_t v85 = 0;
              do
              {
                unint64_t v86 = v80 + 1;
                *((void *)this + 1) = v80 + 1;
                char v87 = *(unsigned char *)(v82 + v80);
                v85 |= (unint64_t)(v87 & 0x7F) << v83;
                if ((v87 & 0x80) == 0) {
                  goto LABEL_380;
                }
                v83 += 7;
                unint64_t v80 = v86;
                BOOL v102 = v84++ > 8;
              }
              while (!v102);
LABEL_303:
              LODWORD(v85) = 0;
              goto LABEL_380;
            }
            char v199 = 0;
            unsigned int v200 = 0;
            uint64_t v85 = 0;
            if (v81 <= v80) {
              unint64_t v81 = *((void *)this + 1);
            }
            while (2)
            {
              if (v81 == v80)
              {
                LODWORD(v85) = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v201 = v80 + 1;
                char v202 = *(unsigned char *)(v82 + v80);
                *((void *)this + 1) = v201;
                v85 |= (unint64_t)(v202 & 0x7F) << v199;
                if (v202 < 0)
                {
                  v199 += 7;
                  unint64_t v80 = v201;
                  BOOL v102 = v200++ > 8;
                  if (v102) {
                    goto LABEL_303;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v85) = 0;
                }
              }
              break;
            }
LABEL_380:
            *(_DWORD *)(a1 + 184) = v85;
            goto LABEL_455;
          case 204:
            *(_WORD *)(a1 + 204) |= 0x20u;
            unint64_t v88 = *((void *)this + 1);
            if (v88 > 0xFFFFFFFFFFFFFFFBLL || v88 + 4 > *((void *)this + 2)) {
              break;
            }
            *(_DWORD *)(a1 + 168) = *(_DWORD *)(*(void *)this + v88);
            goto LABEL_454;
          case 205:
            if (v25 == 2)
            {
              if (PB::Reader::placeMark()) {
                return 0;
              }
              if (*((void *)this + 1) < *((void *)this + 2) && !*((unsigned char *)this + 24))
              {
                char v89 = *(char **)(a1 + 88);
                do
                {
                  if ((unint64_t)v89 >= *v13)
                  {
                    unsigned int v90 = (char *)*v279;
                    uint64_t v91 = (v89 - (unsigned char *)*v279) >> 3;
                    unint64_t v92 = v91 + 1;
                    if ((unint64_t)(v91 + 1) >> 61) {
                      goto LABEL_468;
                    }
                    uint64_t v93 = *v13 - (void)v90;
                    if (v93 >> 2 > v92) {
                      unint64_t v92 = v93 >> 2;
                    }
                    if ((unint64_t)v93 >= 0x7FFFFFFFFFFFFFF8) {
                      unint64_t v94 = 0x1FFFFFFFFFFFFFFFLL;
                    }
                    else {
                      unint64_t v94 = v92;
                    }
                    if (v94)
                    {
                      unint64_t v95 = (char *)sub_1000DA54C((uint64_t)v13, v94);
                      unsigned int v90 = *(char **)(a1 + 80);
                      char v89 = *(char **)(a1 + 88);
                    }
                    else
                    {
                      unint64_t v95 = 0;
                    }
                    int v96 = &v95[8 * v91];
                    *(void *)int v96 = 0;
                    BOOL v97 = v96 + 8;
                    while (v89 != v90)
                    {
                      uint64_t v98 = *((void *)v89 - 1);
                      v89 -= 8;
                      *((void *)v96 - 1) = v98;
                      v96 -= 8;
                    }
                    *(void *)(a1 + 80) = v96;
                    *(void *)(a1 + 88) = v97;
                    *(void *)(a1 + 96) = &v95[8 * v94];
                    if (v90) {
                      operator delete(v90);
                    }
                    char v89 = v97;
                  }
                  else
                  {
                    *(void *)char v89 = 0;
                    v89 += 8;
                  }
                  *(void *)(a1 + 88) = v89;
                  unint64_t v100 = *((void *)this + 1);
                  unint64_t v99 = *((void *)this + 2);
                  uint64_t v101 = *(void *)this;
                  BOOL v102 = v100 > 0xFFFFFFFFFFFFFFF5 || v100 + 10 > v99;
                  if (v102)
                  {
                    char v103 = 0;
                    unsigned int v104 = 0;
                    uint64_t v110 = 0;
                    if (v99 <= v100) {
                      uint64_t v105 = *((void *)this + 1);
                    }
                    else {
                      uint64_t v105 = *((void *)this + 2);
                    }
                    while (1)
                    {
                      if (v105 == v100) {
                        goto LABEL_315;
                      }
                      unint64_t v106 = v100++;
                      char v107 = *(unsigned char *)(v101 + v106);
                      *((void *)this + 1) = v100;
                      v110 |= (unint64_t)(v107 & 0x7F) << v103;
                      if ((v107 & 0x80) == 0) {
                        break;
                      }
                      v103 += 7;
                      BOOL v102 = v104++ > 8;
                      if (v102)
                      {
                        uint64_t v110 = 0;
                        goto LABEL_132;
                      }
                    }
                    if (*((unsigned char *)this + 24)) {
                      uint64_t v110 = 0;
                    }
LABEL_132:
                    unint64_t v111 = v106 + 1;
                  }
                  else
                  {
                    char v108 = 0;
                    unsigned int v109 = 0;
                    uint64_t v110 = 0;
                    while (1)
                    {
                      unint64_t v111 = v100 + 1;
                      *((void *)this + 1) = v100 + 1;
                      char v112 = *(unsigned char *)(v101 + v100);
                      v110 |= (unint64_t)(v112 & 0x7F) << v108;
                      if ((v112 & 0x80) == 0) {
                        break;
                      }
                      v108 += 7;
                      unint64_t v100 = v111;
                      BOOL v102 = v109++ > 8;
                      if (v102)
                      {
                        uint64_t v110 = 0;
                        break;
                      }
                    }
                  }
                  *((void *)v89 - 1) = v110;
                }
                while (v111 < v99 && !*((unsigned char *)this + 24));
              }
              goto LABEL_316;
            }
            uint64_t v204 = *(char **)(a1 + 88);
            unint64_t v203 = *(void *)(a1 + 96);
            if ((unint64_t)v204 >= v203)
            {
              uint64_t v215 = (char *)*v279;
              uint64_t v216 = (v204 - (unsigned char *)*v279) >> 3;
              unint64_t v217 = v216 + 1;
              if ((unint64_t)(v216 + 1) >> 61) {
LABEL_468:
              }
                sub_1001D7FD4();
              uint64_t v218 = v203 - (void)v215;
              if (v218 >> 2 > v217) {
                unint64_t v217 = v218 >> 2;
              }
              if ((unint64_t)v218 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v219 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v219 = v217;
              }
              if (v219)
              {
                int v220 = (char *)sub_1000DA54C((uint64_t)v13, v219);
                uint64_t v215 = *(char **)(a1 + 80);
                uint64_t v204 = *(char **)(a1 + 88);
              }
              else
              {
                int v220 = 0;
              }
              char v245 = &v220[8 * v216];
              *(void *)char v245 = 0;
              char v205 = v245 + 8;
              while (v204 != v215)
              {
                uint64_t v246 = *((void *)v204 - 1);
                v204 -= 8;
                *((void *)v245 - 1) = v246;
                v245 -= 8;
              }
              *(void *)(a1 + 80) = v245;
              *(void *)(a1 + 88) = v205;
              *(void *)(a1 + 96) = &v220[8 * v219];
              if (v215) {
                operator delete(v215);
              }
            }
            else
            {
              *(void *)uint64_t v204 = 0;
              char v205 = v204 + 8;
            }
            *(void *)(a1 + 88) = v205;
            unint64_t v247 = *((void *)this + 1);
            unint64_t v248 = *((void *)this + 2);
            uint64_t v249 = *(void *)this;
            char v250 = 0;
            unsigned int v251 = 0;
            if (v247 <= 0xFFFFFFFFFFFFFFF5 && v247 + 10 <= v248)
            {
              uint64_t v255 = 0;
              while (1)
              {
                unint64_t v256 = v247 + 1;
                *((void *)this + 1) = v247 + 1;
                char v257 = *(unsigned char *)(v249 + v247);
                v255 |= (unint64_t)(v257 & 0x7F) << v250;
                if ((v257 & 0x80) == 0) {
                  goto LABEL_428;
                }
                v250 += 7;
                unint64_t v247 = v256;
                BOOL v102 = v251++ > 8;
                if (v102) {
                  goto LABEL_424;
                }
              }
            }
            uint64_t v255 = 0;
            if (v248 <= v247) {
              unint64_t v248 = *((void *)this + 1);
            }
            while (v248 != v247)
            {
              unint64_t v253 = v247 + 1;
              char v254 = *(unsigned char *)(v249 + v247);
              *((void *)this + 1) = v253;
              v255 |= (unint64_t)(v254 & 0x7F) << v250;
              if ((v254 & 0x80) == 0) {
                goto LABEL_426;
              }
              v250 += 7;
              unint64_t v247 = v253;
              BOOL v102 = v251++ > 8;
              if (v102) {
                goto LABEL_424;
              }
            }
            goto LABEL_425;
          case 206:
            if (v25 != 2)
            {
              uint64_t v207 = *(char **)(a1 + 112);
              unint64_t v206 = *(void *)(a1 + 120);
              if ((unint64_t)v207 >= v206)
              {
                BOOL v221 = (char *)*v280;
                uint64_t v222 = (v207 - (unsigned char *)*v280) >> 3;
                unint64_t v223 = v222 + 1;
                if ((unint64_t)(v222 + 1) >> 61) {
LABEL_469:
                }
                  sub_1001D7FD4();
                uint64_t v224 = v206 - (void)v221;
                if (v224 >> 2 > v223) {
                  unint64_t v223 = v224 >> 2;
                }
                if ((unint64_t)v224 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v225 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v225 = v223;
                }
                if (v225)
                {
                  unint64_t v226 = (char *)sub_1000DA54C((uint64_t)v12, v225);
                  BOOL v221 = *(char **)(a1 + 104);
                  uint64_t v207 = *(char **)(a1 + 112);
                }
                else
                {
                  unint64_t v226 = 0;
                }
                unint64_t v258 = &v226[8 * v222];
                *(void *)unint64_t v258 = 0;
                char v205 = v258 + 8;
                while (v207 != v221)
                {
                  uint64_t v259 = *((void *)v207 - 1);
                  v207 -= 8;
                  *((void *)v258 - 1) = v259;
                  v258 -= 8;
                }
                *(void *)(a1 + 104) = v258;
                *(void *)(a1 + 112) = v205;
                *(void *)(a1 + 120) = &v226[8 * v225];
                if (v221) {
                  operator delete(v221);
                }
              }
              else
              {
                *(void *)uint64_t v207 = 0;
                char v205 = v207 + 8;
              }
              *(void *)(a1 + 112) = v205;
              unint64_t v260 = *((void *)this + 1);
              unint64_t v261 = *((void *)this + 2);
              uint64_t v262 = *(void *)this;
              char v263 = 0;
              unsigned int v264 = 0;
              if (v260 > 0xFFFFFFFFFFFFFFF5 || v260 + 10 > v261)
              {
                uint64_t v255 = 0;
                if (v261 <= v260) {
                  unint64_t v261 = *((void *)this + 1);
                }
                while (v261 != v260)
                {
                  unint64_t v266 = v260 + 1;
                  char v267 = *(unsigned char *)(v262 + v260);
                  *((void *)this + 1) = v266;
                  v255 |= (unint64_t)(v267 & 0x7F) << v263;
                  if ((v267 & 0x80) == 0)
                  {
LABEL_426:
                    if (*((unsigned char *)this + 24)) {
                      uint64_t v255 = 0;
                    }
                    goto LABEL_428;
                  }
                  v263 += 7;
                  unint64_t v260 = v266;
                  BOOL v102 = v264++ > 8;
                  if (v102)
                  {
LABEL_424:
                    uint64_t v255 = 0;
                    goto LABEL_428;
                  }
                }
LABEL_425:
                uint64_t v255 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                uint64_t v255 = 0;
                while (1)
                {
                  unint64_t v268 = v260 + 1;
                  *((void *)this + 1) = v260 + 1;
                  char v269 = *(unsigned char *)(v262 + v260);
                  v255 |= (unint64_t)(v269 & 0x7F) << v263;
                  if ((v269 & 0x80) == 0) {
                    break;
                  }
                  v263 += 7;
                  unint64_t v260 = v268;
                  BOOL v102 = v264++ > 8;
                  if (v102) {
                    goto LABEL_424;
                  }
                }
              }
LABEL_428:
              *(v205 - 1) = v255;
              goto LABEL_455;
            }
            if (PB::Reader::placeMark()) {
              return 0;
            }
            if (*((void *)this + 1) < *((void *)this + 2) && !*((unsigned char *)this + 24))
            {
              char v89 = *(char **)(a1 + 112);
              do
              {
                if ((unint64_t)v89 >= *v12)
                {
                  char v113 = (char *)*v280;
                  uint64_t v114 = (v89 - (unsigned char *)*v280) >> 3;
                  unint64_t v115 = v114 + 1;
                  if ((unint64_t)(v114 + 1) >> 61) {
                    goto LABEL_469;
                  }
                  uint64_t v116 = *v12 - (void)v113;
                  if (v116 >> 2 > v115) {
                    unint64_t v115 = v116 >> 2;
                  }
                  if ((unint64_t)v116 >= 0x7FFFFFFFFFFFFFF8) {
                    unint64_t v117 = 0x1FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v117 = v115;
                  }
                  if (v117)
                  {
                    int v118 = (char *)sub_1000DA54C((uint64_t)v12, v117);
                    char v113 = *(char **)(a1 + 104);
                    char v89 = *(char **)(a1 + 112);
                  }
                  else
                  {
                    int v118 = 0;
                  }
                  BOOL v119 = &v118[8 * v114];
                  *(void *)BOOL v119 = 0;
                  unint64_t v120 = v119 + 8;
                  while (v89 != v113)
                  {
                    uint64_t v121 = *((void *)v89 - 1);
                    v89 -= 8;
                    *((void *)v119 - 1) = v121;
                    v119 -= 8;
                  }
                  *(void *)(a1 + 104) = v119;
                  *(void *)(a1 + 112) = v120;
                  *(void *)(a1 + 120) = &v118[8 * v117];
                  if (v113) {
                    operator delete(v113);
                  }
                  char v89 = v120;
                }
                else
                {
                  *(void *)char v89 = 0;
                  v89 += 8;
                }
                *(void *)(a1 + 112) = v89;
                unint64_t v123 = *((void *)this + 1);
                unint64_t v122 = *((void *)this + 2);
                uint64_t v124 = *(void *)this;
                if (v123 <= 0xFFFFFFFFFFFFFFF5 && v123 + 10 <= v122)
                {
                  char v131 = 0;
                  unsigned int v132 = 0;
                  uint64_t v133 = 0;
                  while (1)
                  {
                    unint64_t v134 = v123 + 1;
                    *((void *)this + 1) = v123 + 1;
                    char v135 = *(unsigned char *)(v124 + v123);
                    v133 |= (unint64_t)(v135 & 0x7F) << v131;
                    if ((v135 & 0x80) == 0) {
                      goto LABEL_178;
                    }
                    v131 += 7;
                    unint64_t v123 = v134;
                    BOOL v102 = v132++ > 8;
                    if (v102)
                    {
                      uint64_t v133 = 0;
                      goto LABEL_178;
                    }
                  }
                }
                char v126 = 0;
                unsigned int v127 = 0;
                uint64_t v133 = 0;
                if (v122 <= v123) {
                  uint64_t v128 = *((void *)this + 1);
                }
                else {
                  uint64_t v128 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v128 == v123)
                  {
LABEL_315:
                    *((unsigned char *)this + 24) = 1;
                    *((void *)v89 - 1) = 0;
                    goto LABEL_316;
                  }
                  unint64_t v129 = v123++;
                  char v130 = *(unsigned char *)(v124 + v129);
                  *((void *)this + 1) = v123;
                  v133 |= (unint64_t)(v130 & 0x7F) << v126;
                  if ((v130 & 0x80) == 0) {
                    break;
                  }
                  v126 += 7;
                  BOOL v102 = v127++ > 8;
                  if (v102)
                  {
                    uint64_t v133 = 0;
                    goto LABEL_177;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v133 = 0;
                }
LABEL_177:
                unint64_t v134 = v129 + 1;
LABEL_178:
                *((void *)v89 - 1) = v133;
              }
              while (v134 < v122 && !*((unsigned char *)this + 24));
            }
            goto LABEL_316;
          case 207:
            if (v25 != 2)
            {
              char v209 = *(char **)(a1 + 16);
              unint64_t v208 = *(void *)(a1 + 24);
              if ((unint64_t)v209 >= v208)
              {
                unint64_t v227 = (char *)*v10;
                uint64_t v228 = (v209 - (unsigned char *)*v10) >> 2;
                unint64_t v229 = v228 + 1;
                if ((unint64_t)(v228 + 1) >> 62) {
LABEL_465:
                }
                  sub_1001D7FD4();
                uint64_t v230 = v208 - (void)v227;
                if (v230 >> 1 > v229) {
                  unint64_t v229 = v230 >> 1;
                }
                if ((unint64_t)v230 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v231 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v231 = v229;
                }
                if (v231)
                {
                  unint64_t v232 = (char *)sub_10017EA34(v11, v231);
                  unint64_t v227 = *(char **)(a1 + 8);
                  char v209 = *(char **)(a1 + 16);
                }
                else
                {
                  unint64_t v232 = 0;
                }
                unint64_t v270 = &v232[4 * v228];
                *(_DWORD *)unint64_t v270 = 0;
                unint64_t v210 = v270 + 4;
                while (v209 != v227)
                {
                  int v271 = *((_DWORD *)v209 - 1);
                  v209 -= 4;
                  *((_DWORD *)v270 - 1) = v271;
                  v270 -= 4;
                }
                *(void *)(a1 + 8) = v270;
                *(void *)(a1 + 16) = v210;
                *(void *)(a1 + 24) = &v232[4 * v231];
                if (v227) {
                  operator delete(v227);
                }
              }
              else
              {
                *(_DWORD *)char v209 = 0;
                unint64_t v210 = v209 + 4;
              }
              *(void *)(a1 + 16) = v210;
              goto LABEL_450;
            }
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v136 = *((void *)this + 1);
            unint64_t v137 = *((void *)this + 2);
            while (v136 < v137 && !*((unsigned char *)this + 24))
            {
              unint64_t v139 = *(char **)(a1 + 16);
              unint64_t v138 = *(void *)(a1 + 24);
              if ((unint64_t)v139 >= v138)
              {
                unint64_t v141 = (char *)*v10;
                uint64_t v142 = (v139 - (unsigned char *)*v10) >> 2;
                unint64_t v143 = v142 + 1;
                if ((unint64_t)(v142 + 1) >> 62) {
                  goto LABEL_465;
                }
                uint64_t v144 = v138 - (void)v141;
                if (v144 >> 1 > v143) {
                  unint64_t v143 = v144 >> 1;
                }
                if ((unint64_t)v144 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v145 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v145 = v143;
                }
                if (v145)
                {
                  unsigned int v146 = (char *)sub_10017EA34(v11, v145);
                  unint64_t v141 = *(char **)(a1 + 8);
                  unint64_t v139 = *(char **)(a1 + 16);
                }
                else
                {
                  unsigned int v146 = 0;
                }
                uint64_t v147 = &v146[4 * v142];
                *(_DWORD *)uint64_t v147 = 0;
                unint64_t v140 = v147 + 4;
                while (v139 != v141)
                {
                  int v148 = *((_DWORD *)v139 - 1);
                  v139 -= 4;
                  *((_DWORD *)v147 - 1) = v148;
                  v147 -= 4;
                }
                *(void *)(a1 + 8) = v147;
                *(void *)(a1 + 16) = v140;
                *(void *)(a1 + 24) = &v146[4 * v145];
                if (v141) {
                  operator delete(v141);
                }
              }
              else
              {
                *(_DWORD *)unint64_t v139 = 0;
                unint64_t v140 = v139 + 4;
              }
              *(void *)(a1 + 16) = v140;
              unint64_t v149 = *((void *)this + 1);
              if (v149 > 0xFFFFFFFFFFFFFFFBLL || v149 + 4 > *((void *)this + 2)) {
                goto LABEL_314;
              }
              *(v140 - 1) = *(_DWORD *)(*(void *)this + v149);
              unint64_t v137 = *((void *)this + 2);
              unint64_t v136 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v136;
            }
            goto LABEL_316;
          case 208:
            if (v25 != 2)
            {
              uint64_t v212 = *(char **)(a1 + 64);
              unint64_t v211 = *(void *)(a1 + 72);
              if ((unint64_t)v212 >= v211)
              {
                char v233 = (char *)*v9;
                uint64_t v234 = (v212 - (unsigned char *)*v9) >> 2;
                unint64_t v235 = v234 + 1;
                if ((unint64_t)(v234 + 1) >> 62) {
LABEL_466:
                }
                  sub_1001D7FD4();
                uint64_t v236 = v211 - (void)v233;
                if (v236 >> 1 > v235) {
                  unint64_t v235 = v236 >> 1;
                }
                if ((unint64_t)v236 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v237 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v237 = v235;
                }
                if (v237)
                {
                  unsigned int v238 = (char *)sub_10017EA34(v281, v237);
                  char v233 = *(char **)(a1 + 56);
                  uint64_t v212 = *(char **)(a1 + 64);
                }
                else
                {
                  unsigned int v238 = 0;
                }
                int v272 = &v238[4 * v234];
                *(_DWORD *)int v272 = 0;
                unint64_t v210 = v272 + 4;
                while (v212 != v233)
                {
                  int v273 = *((_DWORD *)v212 - 1);
                  v212 -= 4;
                  *((_DWORD *)v272 - 1) = v273;
                  v272 -= 4;
                }
                *(void *)(a1 + 56) = v272;
                *(void *)(a1 + 64) = v210;
                *(void *)(a1 + 72) = &v238[4 * v237];
                if (v233) {
                  operator delete(v233);
                }
              }
              else
              {
                *(_DWORD *)uint64_t v212 = 0;
                unint64_t v210 = v212 + 4;
              }
              *(void *)(a1 + 64) = v210;
              goto LABEL_450;
            }
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v150 = *((void *)this + 1);
            unint64_t v151 = *((void *)this + 2);
            while (v150 < v151 && !*((unsigned char *)this + 24))
            {
              char v153 = *(char **)(a1 + 64);
              unint64_t v152 = *(void *)(a1 + 72);
              if ((unint64_t)v153 >= v152)
              {
                uint64_t v155 = (char *)*v9;
                uint64_t v156 = (v153 - (unsigned char *)*v9) >> 2;
                unint64_t v157 = v156 + 1;
                if ((unint64_t)(v156 + 1) >> 62) {
                  goto LABEL_466;
                }
                uint64_t v158 = v152 - (void)v155;
                if (v158 >> 1 > v157) {
                  unint64_t v157 = v158 >> 1;
                }
                if ((unint64_t)v158 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v159 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v159 = v157;
                }
                if (v159)
                {
                  unint64_t v160 = (char *)sub_10017EA34(v281, v159);
                  uint64_t v155 = *(char **)(a1 + 56);
                  char v153 = *(char **)(a1 + 64);
                }
                else
                {
                  unint64_t v160 = 0;
                }
                unint64_t v161 = &v160[4 * v156];
                *(_DWORD *)unint64_t v161 = 0;
                unsigned int v154 = v161 + 4;
                while (v153 != v155)
                {
                  int v162 = *((_DWORD *)v153 - 1);
                  v153 -= 4;
                  *((_DWORD *)v161 - 1) = v162;
                  v161 -= 4;
                }
                *(void *)(a1 + 56) = v161;
                *(void *)(a1 + 64) = v154;
                *(void *)(a1 + 72) = &v160[4 * v159];
                if (v155) {
                  operator delete(v155);
                }
              }
              else
              {
                *(_DWORD *)char v153 = 0;
                unsigned int v154 = v153 + 4;
              }
              *(void *)(a1 + 64) = v154;
              unint64_t v163 = *((void *)this + 1);
              if (v163 > 0xFFFFFFFFFFFFFFFBLL || v163 + 4 > *((void *)this + 2)) {
                goto LABEL_314;
              }
              *(v154 - 1) = *(_DWORD *)(*(void *)this + v163);
              unint64_t v151 = *((void *)this + 2);
              unint64_t v150 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v150;
            }
            goto LABEL_316;
          case 209:
            if (v25 == 2)
            {
              if (PB::Reader::placeMark()) {
                return 0;
              }
              unint64_t v164 = *((void *)this + 1);
              unint64_t v165 = *((void *)this + 2);
              while (v164 < v165 && !*((unsigned char *)this + 24))
              {
                unint64_t v167 = *(char **)(a1 + 40);
                unint64_t v166 = *(void *)(a1 + 48);
                if ((unint64_t)v167 >= v166)
                {
                  unint64_t v169 = (char *)*v8;
                  uint64_t v170 = (v167 - (unsigned char *)*v8) >> 2;
                  unint64_t v171 = v170 + 1;
                  if ((unint64_t)(v170 + 1) >> 62) {
                    goto LABEL_467;
                  }
                  uint64_t v172 = v166 - (void)v169;
                  if (v172 >> 1 > v171) {
                    unint64_t v171 = v172 >> 1;
                  }
                  if ((unint64_t)v172 >= 0x7FFFFFFFFFFFFFFCLL) {
                    unint64_t v173 = 0x3FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v173 = v171;
                  }
                  if (v173)
                  {
                    uint64_t v174 = (char *)sub_10017EA34(v282, v173);
                    unint64_t v169 = *(char **)(a1 + 32);
                    unint64_t v167 = *(char **)(a1 + 40);
                  }
                  else
                  {
                    uint64_t v174 = 0;
                  }
                  unint64_t v175 = &v174[4 * v170];
                  *(_DWORD *)unint64_t v175 = 0;
                  char v168 = v175 + 4;
                  while (v167 != v169)
                  {
                    int v176 = *((_DWORD *)v167 - 1);
                    v167 -= 4;
                    *((_DWORD *)v175 - 1) = v176;
                    v175 -= 4;
                  }
                  *(void *)(a1 + 32) = v175;
                  *(void *)(a1 + 40) = v168;
                  *(void *)(a1 + 48) = &v174[4 * v173];
                  if (v169) {
                    operator delete(v169);
                  }
                }
                else
                {
                  *(_DWORD *)unint64_t v167 = 0;
                  char v168 = v167 + 4;
                }
                *(void *)(a1 + 40) = v168;
                unint64_t v177 = *((void *)this + 1);
                if (v177 > 0xFFFFFFFFFFFFFFFBLL || v177 + 4 > *((void *)this + 2))
                {
LABEL_314:
                  *((unsigned char *)this + 24) = 1;
                  break;
                }
                *(v168 - 1) = *(_DWORD *)(*(void *)this + v177);
                unint64_t v165 = *((void *)this + 2);
                unint64_t v164 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v164;
              }
LABEL_316:
              PB::Reader::recallMark();
              goto LABEL_455;
            }
            unsigned int v214 = *(char **)(a1 + 40);
            unint64_t v213 = *(void *)(a1 + 48);
            if ((unint64_t)v214 >= v213)
            {
              uint64_t v239 = (char *)*v8;
              uint64_t v240 = (v214 - (unsigned char *)*v8) >> 2;
              unint64_t v241 = v240 + 1;
              if ((unint64_t)(v240 + 1) >> 62) {
LABEL_467:
              }
                sub_1001D7FD4();
              uint64_t v242 = v213 - (void)v239;
              if (v242 >> 1 > v241) {
                unint64_t v241 = v242 >> 1;
              }
              if ((unint64_t)v242 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v243 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v243 = v241;
              }
              if (v243)
              {
                uint64_t v244 = (char *)sub_10017EA34(v282, v243);
                uint64_t v239 = *(char **)(a1 + 32);
                unsigned int v214 = *(char **)(a1 + 40);
              }
              else
              {
                uint64_t v244 = 0;
              }
              unint64_t v274 = &v244[4 * v240];
              *(_DWORD *)unint64_t v274 = 0;
              unint64_t v210 = v274 + 4;
              while (v214 != v239)
              {
                int v275 = *((_DWORD *)v214 - 1);
                v214 -= 4;
                *((_DWORD *)v274 - 1) = v275;
                v274 -= 4;
              }
              *(void *)(a1 + 32) = v274;
              *(void *)(a1 + 40) = v210;
              *(void *)(a1 + 48) = &v244[4 * v243];
              if (v239) {
                operator delete(v239);
              }
            }
            else
            {
              *(_DWORD *)unsigned int v214 = 0;
              unint64_t v210 = v214 + 4;
            }
            *(void *)(a1 + 40) = v210;
LABEL_450:
            unint64_t v276 = *((void *)this + 1);
            if (v276 <= 0xFFFFFFFFFFFFFFFBLL && v276 + 4 <= *((void *)this + 2))
            {
              *(v210 - 1) = *(_DWORD *)(*(void *)this + v276);
              goto LABEL_454;
            }
            break;
          default:
            goto LABEL_256;
        }
      }
      else
      {
        switch((int)v26)
        {
          case 'e':
            *(_WORD *)(a1 + 204) |= 0x10u;
            unint64_t v27 = *((void *)this + 1);
            unint64_t v28 = *((void *)this + 2);
            uint64_t v29 = *(void *)this;
            if (v27 <= 0xFFFFFFFFFFFFFFF5 && v27 + 10 <= v28)
            {
              char v30 = 0;
              unsigned int v31 = 0;
              uint64_t v32 = 0;
              do
              {
                unint64_t v33 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v34 = *(unsigned char *)(v29 + v27);
                v32 |= (unint64_t)(v34 & 0x7F) << v30;
                if ((v34 & 0x80) == 0) {
                  goto LABEL_365;
                }
                v30 += 7;
                unint64_t v27 = v33;
                BOOL v102 = v31++ > 8;
              }
              while (!v102);
LABEL_264:
              uint64_t v32 = 0;
              goto LABEL_365;
            }
            char v179 = 0;
            unsigned int v180 = 0;
            uint64_t v32 = 0;
            if (v28 <= v27) {
              unint64_t v28 = *((void *)this + 1);
            }
            while (2)
            {
              if (v28 == v27)
              {
                uint64_t v32 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v181 = v27 + 1;
                char v182 = *(unsigned char *)(v29 + v27);
                *((void *)this + 1) = v181;
                v32 |= (unint64_t)(v182 & 0x7F) << v179;
                if (v182 < 0)
                {
                  v179 += 7;
                  unint64_t v27 = v181;
                  BOOL v102 = v180++ > 8;
                  if (v102) {
                    goto LABEL_264;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v32 = 0;
                }
              }
              break;
            }
LABEL_365:
            *(void *)(a1 + 160) = v32;
            goto LABEL_455;
          case 'f':
            *(_WORD *)(a1 + 204) |= 0x4000u;
            unint64_t v44 = *((void *)this + 1);
            if (v44 >= *((void *)this + 2))
            {
              BOOL v47 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v45 = v44 + 1;
              int v46 = *(unsigned __int8 *)(*(void *)this + v44);
              *((void *)this + 1) = v45;
              BOOL v47 = v46 != 0;
            }
            *(unsigned char *)(a1 + 201) = v47;
            goto LABEL_455;
          case 'g':
            *(_WORD *)(a1 + 204) |= 0x400u;
            unint64_t v48 = *((void *)this + 1);
            if (v48 > 0xFFFFFFFFFFFFFFFBLL || v48 + 4 > *((void *)this + 2)) {
              break;
            }
            *(_DWORD *)(a1 + 188) = *(_DWORD *)(*(void *)this + v48);
            goto LABEL_454;
          case 'h':
            *(_WORD *)(a1 + 204) |= 0x2000u;
            unint64_t v49 = *((void *)this + 1);
            if (v49 >= *((void *)this + 2))
            {
              BOOL v52 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v50 = v49 + 1;
              int v51 = *(unsigned __int8 *)(*(void *)this + v49);
              *((void *)this + 1) = v50;
              BOOL v52 = v51 != 0;
            }
            *(unsigned char *)(a1 + 200) = v52;
            goto LABEL_455;
          case 'i':
            *(_WORD *)(a1 + 204) |= 4u;
            unint64_t v53 = *((void *)this + 1);
            unint64_t v54 = *((void *)this + 2);
            uint64_t v55 = *(void *)this;
            if (v53 <= 0xFFFFFFFFFFFFFFF5 && v53 + 10 <= v54)
            {
              char v56 = 0;
              unsigned int v57 = 0;
              uint64_t v58 = 0;
              do
              {
                unint64_t v59 = v53 + 1;
                *((void *)this + 1) = v53 + 1;
                char v60 = *(unsigned char *)(v55 + v53);
                v58 |= (unint64_t)(v60 & 0x7F) << v56;
                if ((v60 & 0x80) == 0) {
                  goto LABEL_371;
                }
                v56 += 7;
                unint64_t v53 = v59;
                BOOL v102 = v57++ > 8;
              }
              while (!v102);
LABEL_282:
              uint64_t v58 = 0;
              goto LABEL_371;
            }
            char v187 = 0;
            unsigned int v188 = 0;
            uint64_t v58 = 0;
            if (v54 <= v53) {
              unint64_t v54 = *((void *)this + 1);
            }
            while (2)
            {
              if (v54 == v53)
              {
                uint64_t v58 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v189 = v53 + 1;
                char v190 = *(unsigned char *)(v55 + v53);
                *((void *)this + 1) = v189;
                v58 |= (unint64_t)(v190 & 0x7F) << v187;
                if (v190 < 0)
                {
                  v187 += 7;
                  unint64_t v53 = v189;
                  BOOL v102 = v188++ > 8;
                  if (v102) {
                    goto LABEL_282;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v58 = 0;
                }
              }
              break;
            }
LABEL_371:
            *(void *)(a1 + 144) = v58;
            goto LABEL_455;
          case 'j':
            *(_WORD *)(a1 + 204) |= 8u;
            unint64_t v61 = *((void *)this + 1);
            unint64_t v62 = *((void *)this + 2);
            uint64_t v63 = *(void *)this;
            if (v61 <= 0xFFFFFFFFFFFFFFF5 && v61 + 10 <= v62)
            {
              char v64 = 0;
              unsigned int v65 = 0;
              uint64_t v66 = 0;
              do
              {
                unint64_t v67 = v61 + 1;
                *((void *)this + 1) = v61 + 1;
                char v68 = *(unsigned char *)(v63 + v61);
                v66 |= (unint64_t)(v68 & 0x7F) << v64;
                if ((v68 & 0x80) == 0) {
                  goto LABEL_374;
                }
                v64 += 7;
                unint64_t v61 = v67;
                BOOL v102 = v65++ > 8;
              }
              while (!v102);
LABEL_289:
              uint64_t v66 = 0;
              goto LABEL_374;
            }
            char v191 = 0;
            unsigned int v192 = 0;
            uint64_t v66 = 0;
            if (v62 <= v61) {
              unint64_t v62 = *((void *)this + 1);
            }
            while (2)
            {
              if (v62 == v61)
              {
                uint64_t v66 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v193 = v61 + 1;
                char v194 = *(unsigned char *)(v63 + v61);
                *((void *)this + 1) = v193;
                v66 |= (unint64_t)(v194 & 0x7F) << v191;
                if (v194 < 0)
                {
                  v191 += 7;
                  unint64_t v61 = v193;
                  BOOL v102 = v192++ > 8;
                  if (v102) {
                    goto LABEL_289;
                  }
                  continue;
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v66 = 0;
                }
              }
              break;
            }
LABEL_374:
            *(void *)(a1 + 152) = v66;
            goto LABEL_455;
          case 'k':
            *(_WORD *)(a1 + 204) |= 0x100u;
            unint64_t v69 = *((void *)this + 1);
            if (v69 > 0xFFFFFFFFFFFFFFFBLL || v69 + 4 > *((void *)this + 2)) {
              break;
            }
            *(_DWORD *)(a1 + 180) = *(_DWORD *)(*(void *)this + v69);
            goto LABEL_454;
          case 'l':
            *(_WORD *)(a1 + 204) |= 0x80u;
            unint64_t v70 = *((void *)this + 1);
            if (v70 > 0xFFFFFFFFFFFFFFFBLL || v70 + 4 > *((void *)this + 2)) {
              break;
            }
            *(_DWORD *)(a1 + 176) = *(_DWORD *)(*(void *)this + v70);
            goto LABEL_454;
          case 'm':
            *(_WORD *)(a1 + 204) |= 0x40u;
            unint64_t v71 = *((void *)this + 1);
            if (v71 > 0xFFFFFFFFFFFFFFFBLL || v71 + 4 > *((void *)this + 2)) {
              break;
            }
            *(_DWORD *)(a1 + 172) = *(_DWORD *)(*(void *)this + v71);
            goto LABEL_454;
          default:
            if (v26 == 1)
            {
              *(_WORD *)(a1 + 204) |= 0x1000u;
              unint64_t v178 = *((void *)this + 1);
              if (v178 <= 0xFFFFFFFFFFFFFFFBLL && v178 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 196) = *(_DWORD *)(*(void *)this + v178);
                goto LABEL_454;
              }
            }
            else
            {
              if (v26 != 2)
              {
LABEL_256:
                if ((PB::Reader::skip(this, v26, v25, 0) & 1) == 0) {
                  return 0;
                }
                goto LABEL_455;
              }
              *(_WORD *)(a1 + 204) |= 0x800u;
              unint64_t v43 = *((void *)this + 1);
              if (v43 <= 0xFFFFFFFFFFFFFFFBLL && v43 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 192) = *(_DWORD *)(*(void *)this + v43);
LABEL_454:
                *((void *)this + 1) += 4;
                goto LABEL_455;
              }
            }
            break;
        }
      }
      *((unsigned char *)this + 24) = 1;
LABEL_455:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v17 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v22 = v2 + 1;
      char v23 = *(unsigned char *)(v14 + v2);
      *((void *)this + 1) = v22;
      v17 |= (unint64_t)(v23 & 0x7F) << v20;
      if ((v23 & 0x80) == 0) {
        goto LABEL_21;
      }
      v20 += 7;
      unint64_t v2 = v22;
      if (v21++ >= 9)
      {
LABEL_20:
        unint64_t v17 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_1016A5548(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 204);
  if ((v4 & 0x1000) != 0)
  {
    double result = PB::Writer::write(this, *(float *)(result + 196), 1u);
    __int16 v4 = *(_WORD *)(v3 + 204);
    if ((v4 & 0x800) == 0)
    {
LABEL_3:
      if ((v4 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_35;
    }
  }
  else if ((*(_WORD *)(result + 204) & 0x800) == 0)
  {
    goto LABEL_3;
  }
  double result = PB::Writer::write(this, *(float *)(v3 + 192), 2u);
  __int16 v4 = *(_WORD *)(v3 + 204);
  if ((v4 & 0x10) == 0)
  {
LABEL_4:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_36;
  }
LABEL_35:
  double result = PB::Writer::writeVarInt(this, *(void *)(v3 + 160), 0x65u);
  __int16 v4 = *(_WORD *)(v3 + 204);
  if ((v4 & 0x4000) == 0)
  {
LABEL_5:
    if ((v4 & 0x400) == 0) {
      goto LABEL_6;
    }
    goto LABEL_37;
  }
LABEL_36:
  double result = PB::Writer::write(this, *(unsigned char *)(v3 + 201), 0x66u);
  __int16 v4 = *(_WORD *)(v3 + 204);
  if ((v4 & 0x400) == 0)
  {
LABEL_6:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_38;
  }
LABEL_37:
  double result = PB::Writer::write(this, *(float *)(v3 + 188), 0x67u);
  __int16 v4 = *(_WORD *)(v3 + 204);
  if ((v4 & 0x2000) == 0)
  {
LABEL_7:
    if ((v4 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_39;
  }
LABEL_38:
  double result = PB::Writer::write(this, *(unsigned char *)(v3 + 200), 0x68u);
  __int16 v4 = *(_WORD *)(v3 + 204);
  if ((v4 & 4) == 0)
  {
LABEL_8:
    if ((v4 & 8) == 0) {
      goto LABEL_9;
    }
    goto LABEL_40;
  }
LABEL_39:
  double result = PB::Writer::writeVarInt(this, *(void *)(v3 + 144), 0x69u);
  __int16 v4 = *(_WORD *)(v3 + 204);
  if ((v4 & 8) == 0)
  {
LABEL_9:
    if ((v4 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_41;
  }
LABEL_40:
  double result = PB::Writer::writeVarInt(this, *(void *)(v3 + 152), 0x6Au);
  __int16 v4 = *(_WORD *)(v3 + 204);
  if ((v4 & 0x100) == 0)
  {
LABEL_10:
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_42;
  }
LABEL_41:
  double result = PB::Writer::write(this, *(float *)(v3 + 180), 0x6Bu);
  __int16 v4 = *(_WORD *)(v3 + 204);
  if ((v4 & 0x80) == 0)
  {
LABEL_11:
    if ((v4 & 0x40) == 0) {
      goto LABEL_12;
    }
    goto LABEL_43;
  }
LABEL_42:
  double result = PB::Writer::write(this, *(float *)(v3 + 176), 0x6Cu);
  __int16 v4 = *(_WORD *)(v3 + 204);
  if ((v4 & 0x40) == 0)
  {
LABEL_12:
    if ((v4 & 1) == 0) {
      goto LABEL_13;
    }
    goto LABEL_44;
  }
LABEL_43:
  double result = PB::Writer::write(this, *(float *)(v3 + 172), 0x6Du);
  __int16 v4 = *(_WORD *)(v3 + 204);
  if ((v4 & 1) == 0)
  {
LABEL_13:
    if ((v4 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_45;
  }
LABEL_44:
  double result = PB::Writer::writeVarInt(this, *(void *)(v3 + 128), 0xC9u);
  __int16 v4 = *(_WORD *)(v3 + 204);
  if ((v4 & 2) == 0)
  {
LABEL_14:
    if ((v4 & 0x200) == 0) {
      goto LABEL_15;
    }
LABEL_46:
    double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 184), 0xCBu);
    if ((*(_WORD *)(v3 + 204) & 0x20) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_45:
  double result = PB::Writer::writeVarInt(this, *(void *)(v3 + 136), 0xCAu);
  __int16 v4 = *(_WORD *)(v3 + 204);
  if ((v4 & 0x200) != 0) {
    goto LABEL_46;
  }
LABEL_15:
  if ((v4 & 0x20) != 0) {
LABEL_16:
  }
    double result = PB::Writer::write(this, *(float *)(v3 + 168), 0xCCu);
LABEL_17:
  __int16 v5 = *(unint64_t **)(v3 + 80);
  uint64_t v6 = *(unint64_t **)(v3 + 88);
  while (v5 != v6)
  {
    unint64_t v7 = *v5++;
    double result = PB::Writer::writeVarInt(this, v7, 0xCDu);
  }
  float v8 = *(unint64_t **)(v3 + 104);
  int v9 = *(unint64_t **)(v3 + 112);
  while (v8 != v9)
  {
    unint64_t v10 = *v8++;
    double result = PB::Writer::writeVarInt(this, v10, 0xCEu);
  }
  uint64_t v11 = *(float **)(v3 + 8);
  uint64_t v12 = *(float **)(v3 + 16);
  while (v11 != v12)
  {
    float v13 = *v11++;
    double result = PB::Writer::write(this, v13, 0xCFu);
  }
  uint64_t v14 = *(float **)(v3 + 56);
  char v15 = *(float **)(v3 + 64);
  while (v14 != v15)
  {
    float v16 = *v14++;
    double result = PB::Writer::write(this, v16, 0xD0u);
  }
  unint64_t v18 = *(float **)(v3 + 32);
  unint64_t v17 = *(float **)(v3 + 40);
  while (v18 != v17)
  {
    float v19 = *v18++;
    double result = PB::Writer::write(this, v19, 0xD1u);
  }
  return result;
}

uint64_t sub_1016A57B8(uint64_t result)
{
  *(void *)double result = &off_102334328;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void sub_1016A57E0(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_1016A5818(uint64_t result, uint64_t a2)
{
  *(void *)double result = &off_102334328;
  *(_DWORD *)(result + 32) = 0;
  char v2 = *(unsigned char *)(a2 + 32);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(result + 32) = 1;
    *(void *)(result + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 32) & 0x10) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 28);
    v3 |= 0x10u;
    *(unsigned char *)(result + 32) = v3;
    *(_DWORD *)(result + 28) = v5;
    char v2 = *(unsigned char *)(a2 + 32);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 20);
    v3 |= 4u;
    *(unsigned char *)(result + 32) = v3;
    *(_DWORD *)(result + 20) = v6;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 2) == 0)
    {
LABEL_8:
      if ((v2 & 8) == 0) {
        return result;
      }
LABEL_12:
      int v8 = *(_DWORD *)(a2 + 24);
      *(unsigned char *)(result + 32) = v3 | 8;
      *(_DWORD *)(result + 24) = v8;
      return result;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 16);
  v3 |= 2u;
  *(unsigned char *)(result + 32) = v3;
  *(_DWORD *)(result + 16) = v7;
  if ((*(unsigned char *)(a2 + 32) & 8) != 0) {
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_1016A58D0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "currentCadence", *(float *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 32);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a1 + 32) & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "deltaSteps", *(_DWORD *)(a1 + 20));
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(this, "pedometerArmConstrainedState", *(_DWORD *)(a1 + 24));
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 1) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(this, "stepCount", *(_DWORD *)(a1 + 28));
  if (*(unsigned char *)(a1 + 32)) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 8));
LABEL_7:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_1016A59B4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 32) |= 1u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v45 = 0;
                unsigned int v46 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_88;
                  }
                  unint64_t v47 = v20++;
                  char v48 = *(unsigned char *)(v21 + v47);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v48 & 0x7F) << v45;
                  if ((v48 & 0x80) == 0) {
                    break;
                  }
                  v45 += 7;
                  BOOL v14 = v46++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
                    goto LABEL_87;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
LABEL_87:
                unint64_t v2 = v47 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_88;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                uint64_t v24 = 0;
              }
LABEL_88:
              *(void *)(a1 + 8) = v24;
              goto LABEL_104;
            case 2u:
              *(unsigned char *)(a1 + 32) |= 0x10u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v49 = 0;
                unsigned int v50 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_93;
                  }
                  unint64_t v51 = v27++;
                  char v52 = *(unsigned char *)(v28 + v51);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v52 & 0x7F) << v49;
                  if ((v52 & 0x80) == 0) {
                    break;
                  }
                  v49 += 7;
                  BOOL v14 = v50++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_92:
                    unint64_t v2 = v51 + 1;
                    goto LABEL_93;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_92;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_93;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_93:
              *(_DWORD *)(a1 + 28) = v31;
              goto LABEL_104;
            case 3u:
              *(unsigned char *)(a1 + 32) |= 4u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v53 = 0;
                unsigned int v54 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_98;
                  }
                  unint64_t v55 = v33++;
                  char v56 = *(unsigned char *)(v34 + v55);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v56 & 0x7F) << v53;
                  if ((v56 & 0x80) == 0) {
                    break;
                  }
                  v53 += 7;
                  BOOL v14 = v54++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_97:
                    unint64_t v2 = v55 + 1;
                    goto LABEL_98;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_97;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_98;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              LODWORD(v37) = 0;
LABEL_98:
              *(_DWORD *)(a1 + 20) = v37;
              goto LABEL_104;
            case 4u:
              *(unsigned char *)(a1 + 32) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_104;
            case 5u:
              *(unsigned char *)(a1 + 32) |= 8u;
              unint64_t v39 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v40 = *(void *)this;
              if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
              {
                char v57 = 0;
                unsigned int v58 = 0;
                uint64_t v43 = 0;
                if (v2 <= v39) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v39)
                  {
                    LODWORD(v43) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_103;
                  }
                  unint64_t v59 = v39++;
                  char v60 = *(unsigned char *)(v40 + v59);
                  *((void *)this + 1) = v39;
                  v43 |= (unint64_t)(v60 & 0x7F) << v57;
                  if ((v60 & 0x80) == 0) {
                    break;
                  }
                  v57 += 7;
                  BOOL v14 = v58++ > 8;
                  if (v14)
                  {
                    LODWORD(v43) = 0;
LABEL_102:
                    unint64_t v2 = v59 + 1;
                    goto LABEL_103;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v43) = 0;
                }
                goto LABEL_102;
              }
              char v41 = 0;
              unsigned int v42 = 0;
              uint64_t v43 = 0;
              do
              {
                unint64_t v2 = v39 + 1;
                *((void *)this + 1) = v39 + 1;
                char v44 = *(unsigned char *)(v40 + v39);
                v43 |= (unint64_t)(v44 & 0x7F) << v41;
                if ((v44 & 0x80) == 0) {
                  goto LABEL_103;
                }
                v41 += 7;
                unint64_t v39 = v2;
                BOOL v14 = v42++ > 8;
              }
              while (!v14);
              LODWORD(v43) = 0;
LABEL_103:
              *(_DWORD *)(a1 + 24) = v43;
LABEL_104:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_104;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_1016A5F38(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 32);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(result + 8), 1u);
    char v4 = *(unsigned char *)(v3 + 32);
    if ((v4 & 0x10) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 32) & 0x10) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 28), 2u);
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 2) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16), 4u);
    if ((*(unsigned char *)(v3 + 32) & 8) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 20), 3u);
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 8) == 0) {
    return result;
  }
LABEL_11:
  unsigned int v5 = *(_DWORD *)(v3 + 24);

  return PB::Writer::writeVarInt(this, v5, 5u);
}

uint64_t sub_1016A5FFC(uint64_t result)
{
  *(void *)uint64_t result = &off_102334360;
  *(_DWORD *)(result + 60) = 0;
  return result;
}

void sub_1016A6024(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_1016A605C(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102334360;
  *(_DWORD *)(result + 60) = 0;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 8) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 32);
    __int16 v3 = 8;
    *(_WORD *)(result + 60) = 8;
    *(void *)(result + 32) = v4;
    __int16 v2 = *(_WORD *)(a2 + 60);
    if ((v2 & 0x100) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((*(_WORD *)(a2 + 60) & 0x100) != 0)
  {
LABEL_5:
    char v5 = *(unsigned char *)(a2 + 56);
    v3 |= 0x100u;
    *(_WORD *)(result + 60) = v3;
    *(unsigned char *)(result + 56) = v5;
    __int16 v2 = *(_WORD *)(a2 + 60);
  }
LABEL_6:
  if ((v2 & 0x80) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 52);
    v3 |= 0x80u;
    *(_WORD *)(result + 60) = v3;
    *(_DWORD *)(result + 52) = v6;
    __int16 v2 = *(_WORD *)(a2 + 60);
    if ((v2 & 0x20) == 0)
    {
LABEL_8:
      if ((v2 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_16;
    }
  }
  else if ((v2 & 0x20) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 44);
  v3 |= 0x20u;
  *(_WORD *)(result + 60) = v3;
  *(_DWORD *)(result + 44) = v7;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x10) == 0)
  {
LABEL_9:
    if ((v2 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_17;
  }
LABEL_16:
  int v8 = *(_DWORD *)(a2 + 40);
  v3 |= 0x10u;
  *(_WORD *)(result + 60) = v3;
  *(_DWORD *)(result + 40) = v8;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x40) == 0)
  {
LABEL_10:
    if ((v2 & 4) == 0) {
      goto LABEL_11;
    }
    goto LABEL_18;
  }
LABEL_17:
  int v9 = *(_DWORD *)(a2 + 48);
  v3 |= 0x40u;
  *(_WORD *)(result + 60) = v3;
  *(_DWORD *)(result + 48) = v9;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 4) == 0)
  {
LABEL_11:
    if ((v2 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t v10 = *(void *)(a2 + 24);
  v3 |= 4u;
  *(_WORD *)(result + 60) = v3;
  *(void *)(result + 24) = v10;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 1) == 0)
  {
LABEL_12:
    if ((v2 & 2) == 0) {
      return result;
    }
LABEL_20:
    uint64_t v12 = *(void *)(a2 + 16);
    *(_WORD *)(result + 60) = v3 | 2;
    *(void *)(result + 16) = v12;
    return result;
  }
LABEL_19:
  uint64_t v11 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(result + 60) = v3;
  *(void *)(result + 8) = v11;
  if ((*(_WORD *)(a2 + 60) & 2) != 0) {
    goto LABEL_20;
  }
  return result;
}

uint64_t sub_1016A6184(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x10) != 0)
  {
    PB::TextFormatter::format(this, "currentCadence", *(float *)(a1 + 40));
    __int16 v5 = *(_WORD *)(a1 + 60);
    if ((v5 & 0x20) == 0)
    {
LABEL_3:
      if ((v5 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v5 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "deltaSteps", *(float *)(a1 + 44));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 1) == 0)
  {
LABEL_4:
    if ((v5 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "epochFirstTimestamp", *(void *)(a1 + 8));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 2) == 0)
  {
LABEL_5:
    if ((v5 & 0x100) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  PB::TextFormatter::format(this, "epochLastTimestamp", *(void *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x100) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "hasSteps", *(unsigned char *)(a1 + 56));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x40) == 0)
  {
LABEL_7:
    if ((v5 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "pedometerArmConstrainedState", *(_DWORD *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x80) == 0)
  {
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "stepCount", *(float *)(a1 + 52));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 4) == 0)
  {
LABEL_9:
    if ((v5 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_21:
  PB::TextFormatter::format(this, "stepCountEventTimestamp", *(void *)(a1 + 24));
  if ((*(_WORD *)(a1 + 60) & 8) != 0) {
LABEL_10:
  }
    PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 32));
LABEL_11:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_1016A62E8(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          unint64_t v20 = v11 >> 3;
          switch((v11 >> 3))
          {
            case 'e':
              *(_WORD *)(a1 + 60) |= 8u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v54 = 0;
                unsigned int v55 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    uint64_t v25 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_115;
                  }
                  unint64_t v56 = v21++;
                  char v57 = *(unsigned char *)(v22 + v56);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v57 & 0x7F) << v54;
                  if ((v57 & 0x80) == 0) {
                    break;
                  }
                  v54 += 7;
                  BOOL v14 = v55++ > 8;
                  if (v14)
                  {
                    uint64_t v25 = 0;
                    goto LABEL_114;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v25 = 0;
                }
LABEL_114:
                unint64_t v2 = v56 + 1;
              }
              else
              {
                char v23 = 0;
                unsigned int v24 = 0;
                uint64_t v25 = 0;
                do
                {
                  unint64_t v2 = v21 + 1;
                  *((void *)this + 1) = v21 + 1;
                  char v26 = *(unsigned char *)(v22 + v21);
                  v25 |= (unint64_t)(v26 & 0x7F) << v23;
                  if ((v26 & 0x80) == 0) {
                    goto LABEL_115;
                  }
                  v23 += 7;
                  unint64_t v21 = v2;
                  BOOL v14 = v24++ > 8;
                }
                while (!v14);
                uint64_t v25 = 0;
              }
LABEL_115:
              *(void *)(a1 + 32) = v25;
              goto LABEL_136;
            case 'f':
              *(_WORD *)(a1 + 60) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v34 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v33 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v34 = v33 != 0;
              }
              *(unsigned char *)(a1 + 56) = v34;
              goto LABEL_136;
            case 'g':
              *(_WORD *)(a1 + 60) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_48;
              }
              *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_110;
            case 'h':
              *(_WORD *)(a1 + 60) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_48;
              }
              *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_110;
            case 'i':
              *(_WORD *)(a1 + 60) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
LABEL_110:
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_48:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_136;
            case 'j':
              *(_WORD *)(a1 + 60) |= 0x40u;
              unint64_t v35 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v36 = *(void *)this;
              if (v35 > 0xFFFFFFFFFFFFFFF5 || v35 + 10 > v2)
              {
                char v62 = 0;
                unsigned int v63 = 0;
                uint64_t v39 = 0;
                if (v2 <= v35) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v35)
                  {
                    LODWORD(v39) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_125;
                  }
                  unint64_t v64 = v35++;
                  char v65 = *(unsigned char *)(v36 + v64);
                  *((void *)this + 1) = v35;
                  v39 |= (unint64_t)(v65 & 0x7F) << v62;
                  if ((v65 & 0x80) == 0) {
                    break;
                  }
                  v62 += 7;
                  BOOL v14 = v63++ > 8;
                  if (v14)
                  {
                    LODWORD(v39) = 0;
LABEL_124:
                    unint64_t v2 = v64 + 1;
                    goto LABEL_125;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v39) = 0;
                }
                goto LABEL_124;
              }
              char v37 = 0;
              unsigned int v38 = 0;
              uint64_t v39 = 0;
              do
              {
                unint64_t v2 = v35 + 1;
                *((void *)this + 1) = v35 + 1;
                char v40 = *(unsigned char *)(v36 + v35);
                v39 |= (unint64_t)(v40 & 0x7F) << v37;
                if ((v40 & 0x80) == 0) {
                  goto LABEL_125;
                }
                v37 += 7;
                unint64_t v35 = v2;
                BOOL v14 = v38++ > 8;
              }
              while (!v14);
              LODWORD(v39) = 0;
LABEL_125:
              *(_DWORD *)(a1 + 48) = v39;
              goto LABEL_136;
            case 'k':
              *(_WORD *)(a1 + 60) |= 4u;
              unint64_t v41 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v42 = *(void *)this;
              if (v41 > 0xFFFFFFFFFFFFFFF5 || v41 + 10 > v2)
              {
                char v66 = 0;
                unsigned int v67 = 0;
                uint64_t v45 = 0;
                if (v2 <= v41) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v41)
                  {
                    uint64_t v45 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_130;
                  }
                  unint64_t v68 = v41++;
                  char v69 = *(unsigned char *)(v42 + v68);
                  *((void *)this + 1) = v41;
                  v45 |= (unint64_t)(v69 & 0x7F) << v66;
                  if ((v69 & 0x80) == 0) {
                    break;
                  }
                  v66 += 7;
                  BOOL v14 = v67++ > 8;
                  if (v14)
                  {
                    uint64_t v45 = 0;
LABEL_129:
                    unint64_t v2 = v68 + 1;
                    goto LABEL_130;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v45 = 0;
                }
                goto LABEL_129;
              }
              char v43 = 0;
              unsigned int v44 = 0;
              uint64_t v45 = 0;
              do
              {
                unint64_t v2 = v41 + 1;
                *((void *)this + 1) = v41 + 1;
                char v46 = *(unsigned char *)(v42 + v41);
                v45 |= (unint64_t)(v46 & 0x7F) << v43;
                if ((v46 & 0x80) == 0) {
                  goto LABEL_130;
                }
                v43 += 7;
                unint64_t v41 = v2;
                BOOL v14 = v44++ > 8;
              }
              while (!v14);
              uint64_t v45 = 0;
LABEL_130:
              *(void *)(a1 + 24) = v45;
              goto LABEL_136;
            default:
              if (v20 == 201)
              {
                *(_WORD *)(a1 + 60) |= 1u;
                unint64_t v47 = *((void *)this + 1);
                unint64_t v2 = *((void *)this + 2);
                uint64_t v48 = *(void *)this;
                if (v47 > 0xFFFFFFFFFFFFFFF5 || v47 + 10 > v2)
                {
                  char v70 = 0;
                  unsigned int v71 = 0;
                  uint64_t v51 = 0;
                  if (v2 <= v47) {
                    unint64_t v2 = *((void *)this + 1);
                  }
                  while (1)
                  {
                    if (v2 == v47)
                    {
                      uint64_t v51 = 0;
                      *((unsigned char *)this + 24) = 1;
                      goto LABEL_135;
                    }
                    unint64_t v72 = v47++;
                    char v73 = *(unsigned char *)(v48 + v72);
                    *((void *)this + 1) = v47;
                    v51 |= (unint64_t)(v73 & 0x7F) << v70;
                    if ((v73 & 0x80) == 0) {
                      break;
                    }
                    v70 += 7;
                    BOOL v14 = v71++ > 8;
                    if (v14)
                    {
                      uint64_t v51 = 0;
                      goto LABEL_134;
                    }
                  }
                  if (*((unsigned char *)this + 24)) {
                    uint64_t v51 = 0;
                  }
LABEL_134:
                  unint64_t v2 = v72 + 1;
                }
                else
                {
                  char v49 = 0;
                  unsigned int v50 = 0;
                  uint64_t v51 = 0;
                  while (1)
                  {
                    unint64_t v2 = v47 + 1;
                    *((void *)this + 1) = v47 + 1;
                    char v52 = *(unsigned char *)(v48 + v47);
                    v51 |= (unint64_t)(v52 & 0x7F) << v49;
                    if ((v52 & 0x80) == 0) {
                      break;
                    }
                    v49 += 7;
                    unint64_t v47 = v2;
                    BOOL v14 = v50++ > 8;
                    if (v14)
                    {
                      uint64_t v51 = 0;
                      break;
                    }
                  }
                }
LABEL_135:
                *(void *)(a1 + 8) = v51;
              }
              else if (v20 == 202)
              {
                *(_WORD *)(a1 + 60) |= 2u;
                unint64_t v27 = *((void *)this + 1);
                unint64_t v2 = *((void *)this + 2);
                uint64_t v28 = *(void *)this;
                if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
                {
                  char v58 = 0;
                  unsigned int v59 = 0;
                  uint64_t v31 = 0;
                  if (v2 <= v27) {
                    unint64_t v2 = *((void *)this + 1);
                  }
                  while (1)
                  {
                    if (v2 == v27)
                    {
                      uint64_t v31 = 0;
                      *((unsigned char *)this + 24) = 1;
                      goto LABEL_120;
                    }
                    unint64_t v60 = v27++;
                    char v61 = *(unsigned char *)(v28 + v60);
                    *((void *)this + 1) = v27;
                    v31 |= (unint64_t)(v61 & 0x7F) << v58;
                    if ((v61 & 0x80) == 0) {
                      break;
                    }
                    v58 += 7;
                    BOOL v14 = v59++ > 8;
                    if (v14)
                    {
                      uint64_t v31 = 0;
                      goto LABEL_119;
                    }
                  }
                  if (*((unsigned char *)this + 24)) {
                    uint64_t v31 = 0;
                  }
LABEL_119:
                  unint64_t v2 = v60 + 1;
                }
                else
                {
                  char v29 = 0;
                  unsigned int v30 = 0;
                  uint64_t v31 = 0;
                  while (1)
                  {
                    unint64_t v2 = v27 + 1;
                    *((void *)this + 1) = v27 + 1;
                    char v32 = *(unsigned char *)(v28 + v27);
                    v31 |= (unint64_t)(v32 & 0x7F) << v29;
                    if ((v32 & 0x80) == 0) {
                      break;
                    }
                    v29 += 7;
                    unint64_t v27 = v2;
                    BOOL v14 = v30++ > 8;
                    if (v14)
                    {
                      uint64_t v31 = 0;
                      break;
                    }
                  }
                }
LABEL_120:
                *(void *)(a1 + 16) = v31;
              }
              else
              {
                uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
                if (!result) {
                  return result;
                }
                unint64_t v2 = *((void *)this + 1);
              }
LABEL_136:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_1016A6A24(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 60);
  if ((v4 & 8) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(result + 32), 0x65u);
    __int16 v4 = *(_WORD *)(v3 + 60);
    if ((v4 & 0x100) == 0)
    {
LABEL_3:
      if ((v4 & 0x80) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((*(_WORD *)(result + 60) & 0x100) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 56), 0x66u);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x80) == 0)
  {
LABEL_4:
    if ((v4 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52), 0x67u);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x20) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44), 0x68u);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x10) == 0)
  {
LABEL_6:
    if ((v4 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40), 0x69u);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x40) == 0)
  {
LABEL_7:
    if ((v4 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 48), 0x6Au);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 4) == 0)
  {
LABEL_8:
    if ((v4 & 1) == 0) {
      goto LABEL_9;
    }
LABEL_18:
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 8), 0xC9u);
    if ((*(_WORD *)(v3 + 60) & 2) == 0) {
      return result;
    }
    goto LABEL_19;
  }
LABEL_17:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 24), 0x6Bu);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if (v4) {
    goto LABEL_18;
  }
LABEL_9:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_19:
  unint64_t v5 = *(void *)(v3 + 16);

  return PB::Writer::writeVarInt(this, v5, 0xCAu);
}

double sub_1016A6B58(uint64_t a1)
{
  *(void *)a1 = &off_102334398;
  *(_DWORD *)(a1 + 212) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)(a1 + 72) = 0;
  return result;
}

void sub_1016A6B94(PB::Base *this)
{
  *(void *)this = &off_102334398;
  unint64_t v2 = (void *)*((void *)this + 7);
  if (v2)
  {
    *((void *)this + 8) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 4);
  if (v3)
  {
    *((void *)this + 5) = v3;
    operator delete(v3);
  }
  __int16 v4 = (void *)*((void *)this + 1);
  if (v4)
  {
    *((void *)this + 2) = v4;
    operator delete(v4);
  }

  PB::Base::~Base(this);
}

void sub_1016A6C18(PB::Base *a1)
{
  sub_1016A6B94(a1);

  operator delete();
}

uint64_t sub_1016A6C50(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 8) = 0u;
  __int16 v4 = (char *)(a1 + 8);
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)a1 = &off_102334398;
  *(_DWORD *)(a1 + 212) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 72) = 0;
  int v5 = *(_DWORD *)(a2 + 212);
  if ((v5 & 4) != 0)
  {
    uint64_t v7 = *(void *)(a2 + 96);
    int v6 = 4;
    *(_DWORD *)(a1 + 212) = 4;
    *(void *)(a1 + 96) = v7;
    int v5 = *(_DWORD *)(a2 + 212);
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_6;
    }
  }
  else
  {
    int v6 = 0;
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_6;
    }
  }
  char v8 = *(unsigned char *)(a2 + 211);
  v6 |= 0x80000000;
  *(_DWORD *)(a1 + 212) = v6;
  *(unsigned char *)(a1 + 211) = v8;
  int v5 = *(_DWORD *)(a2 + 212);
LABEL_6:
  if (v5)
  {
    uint64_t v9 = *(void *)(a2 + 80);
    *(_DWORD *)(a1 + 212) = v6 | 1;
    *(void *)(a1 + 80) = v9;
  }
  if (a1 != a2)
  {
    sub_1002DD194(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
    sub_1000FB43C((char *)(a1 + 56), *(char **)(a2 + 56), *(void *)(a2 + 64), (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 2);
    sub_1000FB43C((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
  }
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x10000000) != 0)
  {
    char v13 = *(unsigned char *)(a2 + 208);
    *(_DWORD *)(a1 + 212) |= 0x10000000u;
    *(unsigned char *)(a1 + 208) = v13;
    int v10 = *(_DWORD *)(a2 + 212);
    if ((v10 & 0x20000000) == 0)
    {
LABEL_12:
      if ((v10 & 0x400000) == 0) {
        goto LABEL_13;
      }
      goto LABEL_43;
    }
  }
  else if ((v10 & 0x20000000) == 0)
  {
    goto LABEL_12;
  }
  char v14 = *(unsigned char *)(a2 + 209);
  *(_DWORD *)(a1 + 212) |= 0x20000000u;
  *(unsigned char *)(a1 + 209) = v14;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x400000) == 0)
  {
LABEL_13:
    if ((v10 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_44;
  }
LABEL_43:
  int v15 = *(_DWORD *)(a2 + 184);
  *(_DWORD *)(a1 + 212) |= 0x400000u;
  *(_DWORD *)(a1 + 184) = v15;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x10) == 0)
  {
LABEL_14:
    if ((v10 & 0x80000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_45;
  }
LABEL_44:
  int v16 = *(_DWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 212) |= 0x10u;
  *(_DWORD *)(a1 + 112) = v16;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x80000) == 0)
  {
LABEL_15:
    if ((v10 & 0x40000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_46;
  }
LABEL_45:
  int v17 = *(_DWORD *)(a2 + 172);
  *(_DWORD *)(a1 + 212) |= 0x80000u;
  *(_DWORD *)(a1 + 172) = v17;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x40000) == 0)
  {
LABEL_16:
    if ((v10 & 0x20000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_47;
  }
LABEL_46:
  int v18 = *(_DWORD *)(a2 + 168);
  *(_DWORD *)(a1 + 212) |= 0x40000u;
  *(_DWORD *)(a1 + 168) = v18;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x20000) == 0)
  {
LABEL_17:
    if ((v10 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_48;
  }
LABEL_47:
  int v19 = *(_DWORD *)(a2 + 164);
  *(_DWORD *)(a1 + 212) |= 0x20000u;
  *(_DWORD *)(a1 + 164) = v19;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x10000) == 0)
  {
LABEL_18:
    if ((v10 & 0x8000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_49;
  }
LABEL_48:
  int v20 = *(_DWORD *)(a2 + 160);
  *(_DWORD *)(a1 + 212) |= 0x10000u;
  *(_DWORD *)(a1 + 160) = v20;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x8000) == 0)
  {
LABEL_19:
    if ((v10 & 0x4000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_50;
  }
LABEL_49:
  int v21 = *(_DWORD *)(a2 + 156);
  *(_DWORD *)(a1 + 212) |= 0x8000u;
  *(_DWORD *)(a1 + 156) = v21;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x4000) == 0)
  {
LABEL_20:
    if ((v10 & 0x2000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_51;
  }
LABEL_50:
  int v22 = *(_DWORD *)(a2 + 152);
  *(_DWORD *)(a1 + 212) |= 0x4000u;
  *(_DWORD *)(a1 + 152) = v22;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x2000) == 0)
  {
LABEL_21:
    if ((v10 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_52;
  }
LABEL_51:
  int v23 = *(_DWORD *)(a2 + 148);
  *(_DWORD *)(a1 + 212) |= 0x2000u;
  *(_DWORD *)(a1 + 148) = v23;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x100000) == 0)
  {
LABEL_22:
    if ((v10 & 0x100) == 0) {
      goto LABEL_23;
    }
    goto LABEL_53;
  }
LABEL_52:
  int v24 = *(_DWORD *)(a2 + 176);
  *(_DWORD *)(a1 + 212) |= 0x100000u;
  *(_DWORD *)(a1 + 176) = v24;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x100) == 0)
  {
LABEL_23:
    if ((v10 & 0x1000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_54;
  }
LABEL_53:
  int v25 = *(_DWORD *)(a2 + 128);
  *(_DWORD *)(a1 + 212) |= 0x100u;
  *(_DWORD *)(a1 + 128) = v25;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x1000000) == 0)
  {
LABEL_24:
    if ((v10 & 0x20) == 0) {
      goto LABEL_25;
    }
    goto LABEL_55;
  }
LABEL_54:
  int v26 = *(_DWORD *)(a2 + 192);
  *(_DWORD *)(a1 + 212) |= 0x1000000u;
  *(_DWORD *)(a1 + 192) = v26;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x20) == 0)
  {
LABEL_25:
    if ((v10 & 8) == 0) {
      goto LABEL_26;
    }
    goto LABEL_56;
  }
LABEL_55:
  int v27 = *(_DWORD *)(a2 + 116);
  *(_DWORD *)(a1 + 212) |= 0x20u;
  *(_DWORD *)(a1 + 116) = v27;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 8) == 0)
  {
LABEL_26:
    if ((v10 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t v28 = *(void *)(a2 + 104);
  *(_DWORD *)(a1 + 212) |= 8u;
  *(void *)(a1 + 104) = v28;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v10 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_58;
  }
LABEL_57:
  int v29 = *(_DWORD *)(a2 + 196);
  *(_DWORD *)(a1 + 212) |= 0x2000000u;
  *(_DWORD *)(a1 + 196) = v29;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v10 & 0x8000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_59;
  }
LABEL_58:
  int v30 = *(_DWORD *)(a2 + 200);
  *(_DWORD *)(a1 + 212) |= 0x4000000u;
  *(_DWORD *)(a1 + 200) = v30;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v10 & 0x800) == 0) {
      goto LABEL_30;
    }
    goto LABEL_60;
  }
LABEL_59:
  int v31 = *(_DWORD *)(a2 + 204);
  *(_DWORD *)(a1 + 212) |= 0x8000000u;
  *(_DWORD *)(a1 + 204) = v31;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x800) == 0)
  {
LABEL_30:
    if ((v10 & 0x80) == 0) {
      goto LABEL_31;
    }
    goto LABEL_61;
  }
LABEL_60:
  int v32 = *(_DWORD *)(a2 + 140);
  *(_DWORD *)(a1 + 212) |= 0x800u;
  *(_DWORD *)(a1 + 140) = v32;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x80) == 0)
  {
LABEL_31:
    if ((v10 & 2) == 0) {
      goto LABEL_32;
    }
    goto LABEL_62;
  }
LABEL_61:
  int v33 = *(_DWORD *)(a2 + 124);
  *(_DWORD *)(a1 + 212) |= 0x80u;
  *(_DWORD *)(a1 + 124) = v33;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 2) == 0)
  {
LABEL_32:
    if ((v10 & 0x40000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_63;
  }
LABEL_62:
  uint64_t v34 = *(void *)(a2 + 88);
  *(_DWORD *)(a1 + 212) |= 2u;
  *(void *)(a1 + 88) = v34;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x40000000) == 0)
  {
LABEL_33:
    if ((v10 & 0x1000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_64;
  }
LABEL_63:
  char v35 = *(unsigned char *)(a2 + 210);
  *(_DWORD *)(a1 + 212) |= 0x40000000u;
  *(unsigned char *)(a1 + 210) = v35;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x1000) == 0)
  {
LABEL_34:
    if ((v10 & 0x200) == 0) {
      goto LABEL_35;
    }
    goto LABEL_65;
  }
LABEL_64:
  int v36 = *(_DWORD *)(a2 + 144);
  *(_DWORD *)(a1 + 212) |= 0x1000u;
  *(_DWORD *)(a1 + 144) = v36;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x200) == 0)
  {
LABEL_35:
    if ((v10 & 0x40) == 0) {
      goto LABEL_36;
    }
    goto LABEL_66;
  }
LABEL_65:
  int v37 = *(_DWORD *)(a2 + 132);
  *(_DWORD *)(a1 + 212) |= 0x200u;
  *(_DWORD *)(a1 + 132) = v37;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x40) == 0)
  {
LABEL_36:
    if ((v10 & 0x200000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_67;
  }
LABEL_66:
  int v38 = *(_DWORD *)(a2 + 120);
  *(_DWORD *)(a1 + 212) |= 0x40u;
  *(_DWORD *)(a1 + 120) = v38;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x200000) == 0)
  {
LABEL_37:
    if ((v10 & 0x400) == 0) {
      goto LABEL_38;
    }
LABEL_68:
    int v40 = *(_DWORD *)(a2 + 136);
    *(_DWORD *)(a1 + 212) |= 0x400u;
    *(_DWORD *)(a1 + 136) = v40;
    if ((*(_DWORD *)(a2 + 212) & 0x800000) == 0) {
      return a1;
    }
    goto LABEL_39;
  }
LABEL_67:
  int v39 = *(_DWORD *)(a2 + 180);
  *(_DWORD *)(a1 + 212) |= 0x200000u;
  *(_DWORD *)(a1 + 180) = v39;
  int v10 = *(_DWORD *)(a2 + 212);
  if ((v10 & 0x400) != 0) {
    goto LABEL_68;
  }
LABEL_38:
  if ((v10 & 0x800000) != 0)
  {
LABEL_39:
    int v11 = *(_DWORD *)(a2 + 188);
    *(_DWORD *)(a1 + 212) |= 0x800000u;
    *(_DWORD *)(a1 + 188) = v11;
  }
  return a1;
}

uint64_t sub_1016A70F8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 212);
  if (v5)
  {
    PB::TextFormatter::format(this, "avgHorizontalDecelMax", *(double *)(a1 + 80));
    int v5 = *(_DWORD *)(a1 + 212);
    if ((v5 & 0x10) == 0)
    {
LABEL_3:
      if ((v5 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_47;
    }
  }
  else if ((v5 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "avgHorizontalDecelThresholdCoupled", *(float *)(a1 + 112));
  int v5 = *(_DWORD *)(a1 + 212);
  if ((v5 & 0x20) == 0)
  {
LABEL_4:
    if ((v5 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_48;
  }
LABEL_47:
  PB::TextFormatter::format(this, "btHint", *(_DWORD *)(a1 + 116));
  int v5 = *(_DWORD *)(a1 + 212);
  if ((v5 & 2) == 0)
  {
LABEL_5:
    if ((v5 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(this, "companionAopTs", *(void *)(a1 + 88));
  int v5 = *(_DWORD *)(a1 + 212);
  if ((v5 & 0x40) == 0)
  {
LABEL_6:
    if ((v5 & 0x80) == 0) {
      goto LABEL_7;
    }
    goto LABEL_50;
  }
LABEL_49:
  PB::TextFormatter::format(this, "currentWindowMean", *(float *)(a1 + 120));
  int v5 = *(_DWORD *)(a1 + 212);
  if ((v5 & 0x80) == 0)
  {
LABEL_7:
    if ((v5 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_50:
  PB::TextFormatter::format(this, "enableMode", *(_DWORD *)(a1 + 124));
  if ((*(_DWORD *)(a1 + 212) & 0x100) != 0) {
LABEL_8:
  }
    PB::TextFormatter::format(this, "impactThresholdUncoupled", *(float *)(a1 + 128));
LABEL_9:
  int v6 = *(double **)(a1 + 8);
  uint64_t v7 = *(double **)(a1 + 16);
  while (v6 != v7)
  {
    double v8 = *v6++;
    PB::TextFormatter::format(this, "inertialAccel", v8);
  }
  int v9 = *(_DWORD *)(a1 + 212);
  if ((v9 & 0x10000000) != 0)
  {
    PB::TextFormatter::format(this, "isMounted", *(unsigned char *)(a1 + 208));
    int v9 = *(_DWORD *)(a1 + 212);
    if ((v9 & 0x20000000) == 0)
    {
LABEL_13:
      if ((v9 & 0x200) == 0) {
        goto LABEL_14;
      }
      goto LABEL_54;
    }
  }
  else if ((v9 & 0x20000000) == 0)
  {
    goto LABEL_13;
  }
  PB::TextFormatter::format(this, "isSimulated", *(unsigned char *)(a1 + 209));
  int v9 = *(_DWORD *)(a1 + 212);
  if ((v9 & 0x200) == 0)
  {
LABEL_14:
    if ((v9 & 0x400) == 0) {
      goto LABEL_15;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(this, "lastCompleted15sWindowMean", *(float *)(a1 + 132));
  int v9 = *(_DWORD *)(a1 + 212);
  if ((v9 & 0x400) == 0)
  {
LABEL_15:
    if ((v9 & 0x40000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_56;
  }
LABEL_55:
  PB::TextFormatter::format(this, "locallyArmedBitmap", *(_DWORD *)(a1 + 136));
  int v9 = *(_DWORD *)(a1 + 212);
  if ((v9 & 0x40000000) == 0)
  {
LABEL_16:
    if ((v9 & 0x800) == 0) {
      goto LABEL_17;
    }
    goto LABEL_57;
  }
LABEL_56:
  PB::TextFormatter::format(this, "martyIsBicycle", *(unsigned char *)(a1 + 210));
  int v9 = *(_DWORD *)(a1 + 212);
  if ((v9 & 0x800) == 0)
  {
LABEL_17:
    if ((v9 & 0x1000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_58;
  }
LABEL_57:
  PB::TextFormatter::format(this, "martyTriggerPathBitmap", *(_DWORD *)(a1 + 140));
  int v9 = *(_DWORD *)(a1 + 212);
  if ((v9 & 0x1000) == 0)
  {
LABEL_18:
    if ((v9 & 0x2000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_59;
  }
LABEL_58:
  PB::TextFormatter::format(this, "maxMeanTenMinPreTrigger", *(float *)(a1 + 144));
  int v9 = *(_DWORD *)(a1 + 212);
  if ((v9 & 0x2000) == 0)
  {
LABEL_19:
    if ((v9 & 0x4000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_60;
  }
LABEL_59:
  PB::TextFormatter::format(this, "nAccelGap", *(_DWORD *)(a1 + 148));
  int v9 = *(_DWORD *)(a1 + 212);
  if ((v9 & 0x4000) == 0)
  {
LABEL_20:
    if ((v9 & 0x8000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_61;
  }
LABEL_60:
  PB::TextFormatter::format(this, "nFullAccel", *(_DWORD *)(a1 + 152));
  int v9 = *(_DWORD *)(a1 + 212);
  if ((v9 & 0x8000) == 0)
  {
LABEL_21:
    if ((v9 & 0x10000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_62;
  }
LABEL_61:
  PB::TextFormatter::format(this, "nFullDM", *(_DWORD *)(a1 + 156));
  int v9 = *(_DWORD *)(a1 + 212);
  if ((v9 & 0x10000) == 0)
  {
LABEL_22:
    if ((v9 & 0x20000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_63;
  }
LABEL_62:
  PB::TextFormatter::format(this, "nOldAccel", *(_DWORD *)(a1 + 160));
  int v9 = *(_DWORD *)(a1 + 212);
  if ((v9 & 0x20000) == 0)
  {
LABEL_23:
    if ((v9 & 0x40000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_64;
  }
LABEL_63:
  PB::TextFormatter::format(this, "nOldDM", *(_DWORD *)(a1 + 164));
  int v9 = *(_DWORD *)(a1 + 212);
  if ((v9 & 0x40000) == 0)
  {
LABEL_24:
    if ((v9 & 0x80000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_65;
  }
LABEL_64:
  PB::TextFormatter::format(this, "nOldDt", *(_DWORD *)(a1 + 168));
  int v9 = *(_DWORD *)(a1 + 212);
  if ((v9 & 0x80000) == 0)
  {
LABEL_25:
    if ((v9 & 0x100000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_66;
  }
LABEL_65:
  PB::TextFormatter::format(this, "nPrecondition", *(_DWORD *)(a1 + 172));
  int v9 = *(_DWORD *)(a1 + 212);
  if ((v9 & 0x100000) == 0)
  {
LABEL_26:
    if ((v9 & 0x200000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_67;
  }
LABEL_66:
  PB::TextFormatter::format(this, "nUseNearest", *(_DWORD *)(a1 + 176));
  int v9 = *(_DWORD *)(a1 + 212);
  if ((v9 & 0x200000) == 0)
  {
LABEL_27:
    if ((v9 & 0x400000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_68;
  }
LABEL_67:
  PB::TextFormatter::format(this, "numMaxEnvelopes", *(_DWORD *)(a1 + 180));
  int v9 = *(_DWORD *)(a1 + 212);
  if ((v9 & 0x400000) == 0)
  {
LABEL_28:
    if ((v9 & 0x800000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_29;
  }
LABEL_68:
  PB::TextFormatter::format(this, "numResets", *(_DWORD *)(a1 + 184));
  if ((*(_DWORD *)(a1 + 212) & 0x800000) != 0) {
LABEL_29:
  }
    PB::TextFormatter::format(this, "overrideArmedBitmap", *(_DWORD *)(a1 + 188));
LABEL_30:
  int v10 = *(float **)(a1 + 32);
  int v11 = *(float **)(a1 + 40);
  while (v10 != v11)
  {
    float v12 = *v10++;
    PB::TextFormatter::format(this, "prevQ", v12);
  }
  char v13 = *(float **)(a1 + 56);
  char v14 = *(float **)(a1 + 64);
  while (v13 != v14)
  {
    float v15 = *v13++;
    PB::TextFormatter::format(this, "rawClampedAccel", v15);
  }
  int v16 = *(_DWORD *)(a1 + 212);
  if (v16 < 0)
  {
    PB::TextFormatter::format(this, "shouldTrigger", *(unsigned char *)(a1 + 211));
    int v16 = *(_DWORD *)(a1 + 212);
    if ((v16 & 4) == 0)
    {
LABEL_36:
      if ((v16 & 0x1000000) == 0) {
        goto LABEL_37;
      }
      goto LABEL_72;
    }
  }
  else if ((v16 & 4) == 0)
  {
    goto LABEL_36;
  }
  PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 96));
  int v16 = *(_DWORD *)(a1 + 212);
  if ((v16 & 0x1000000) == 0)
  {
LABEL_37:
    if ((v16 & 0x2000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_73;
  }
LABEL_72:
  PB::TextFormatter::format(this, "triggerPathBitmap", *(_DWORD *)(a1 + 192));
  int v16 = *(_DWORD *)(a1 + 212);
  if ((v16 & 0x2000000) == 0)
  {
LABEL_38:
    if ((v16 & 0x4000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_74;
  }
LABEL_73:
  PB::TextFormatter::format(this, "vehicleProbabilityLongTermMean0", *(float *)(a1 + 196));
  int v16 = *(_DWORD *)(a1 + 212);
  if ((v16 & 0x4000000) == 0)
  {
LABEL_39:
    if ((v16 & 0x8000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_75;
  }
LABEL_74:
  PB::TextFormatter::format(this, "vehicleProbabilityLongTermMean1", *(float *)(a1 + 200));
  int v16 = *(_DWORD *)(a1 + 212);
  if ((v16 & 0x8000000) == 0)
  {
LABEL_40:
    if ((v16 & 8) == 0) {
      goto LABEL_42;
    }
    goto LABEL_41;
  }
LABEL_75:
  PB::TextFormatter::format(this, "vehicleProbabilityLongTermMean2", *(float *)(a1 + 204));
  if ((*(_DWORD *)(a1 + 212) & 8) != 0) {
LABEL_41:
  }
    PB::TextFormatter::format(this, "vehicleProbabilityTs", *(void *)(a1 + 104));
LABEL_42:

  return PB::TextFormatter::endObject(this);
}

BOOL sub_1016A75D0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    double v8 = (void **)(a1 + 32);
    uint64_t v9 = a1 + 48;
    int v10 = (void **)(a1 + 56);
    uint64_t v11 = a1 + 72;
    float v12 = (void **)(a1 + 8);
    uint64_t v13 = a1 + 24;
    while (1)
    {
      uint64_t v14 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v17 = 0;
      while (1)
      {
        unint64_t v18 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v19 = *(unsigned char *)(v14 + v2);
        v17 |= (unint64_t)(v19 & 0x7F) << v15;
        if ((v19 & 0x80) == 0) {
          break;
        }
        v15 += 7;
        unint64_t v2 = v18;
        BOOL v20 = v16++ > 8;
        if (v20) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v26 = v17 & 7;
      if (v26 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v17 >> 3))
      {
        case 1u:
          *(_DWORD *)(a1 + 212) |= 4u;
          unint64_t v27 = *((void *)this + 1);
          unint64_t v28 = *((void *)this + 2);
          uint64_t v29 = *(void *)this;
          if (v27 <= 0xFFFFFFFFFFFFFFF5 && v27 + 10 <= v28)
          {
            char v30 = 0;
            unsigned int v31 = 0;
            uint64_t v32 = 0;
            do
            {
              unint64_t v33 = v27 + 1;
              *((void *)this + 1) = v27 + 1;
              char v34 = *(unsigned char *)(v29 + v27);
              v32 |= (unint64_t)(v34 & 0x7F) << v30;
              if ((v34 & 0x80) == 0) {
                goto LABEL_459;
              }
              v30 += 7;
              unint64_t v27 = v33;
              BOOL v20 = v31++ > 8;
            }
            while (!v20);
LABEL_271:
            uint64_t v32 = 0;
            goto LABEL_459;
          }
          char v246 = 0;
          unsigned int v247 = 0;
          uint64_t v32 = 0;
          if (v28 <= v27) {
            unint64_t v28 = *((void *)this + 1);
          }
          while (2)
          {
            if (v28 == v27)
            {
              uint64_t v32 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v248 = v27 + 1;
              char v249 = *(unsigned char *)(v29 + v27);
              *((void *)this + 1) = v248;
              v32 |= (unint64_t)(v249 & 0x7F) << v246;
              if (v249 < 0)
              {
                v246 += 7;
                unint64_t v27 = v248;
                BOOL v20 = v247++ > 8;
                if (v20) {
                  goto LABEL_271;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v32 = 0;
              }
            }
            break;
          }
LABEL_459:
          *(void *)(a1 + 96) = v32;
          goto LABEL_544;
        case 2u:
          *(_DWORD *)(a1 + 212) |= 0x80000000;
          unint64_t v35 = *((void *)this + 1);
          if (v35 >= *((void *)this + 2))
          {
            BOOL v38 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v36 = v35 + 1;
            int v37 = *(unsigned __int8 *)(*(void *)this + v35);
            *((void *)this + 1) = v36;
            BOOL v38 = v37 != 0;
          }
          *(unsigned char *)(a1 + 211) = v38;
          goto LABEL_544;
        case 3u:
          *(_DWORD *)(a1 + 212) |= 1u;
          unint64_t v39 = *((void *)this + 1);
          if (v39 > 0xFFFFFFFFFFFFFFF7 || v39 + 8 > *((void *)this + 2)) {
            goto LABEL_540;
          }
          *(void *)(a1 + 80) = *(void *)(*(void *)this + v39);
          goto LABEL_523;
        case 4u:
          if (v26 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v40 = *((void *)this + 1);
            unint64_t v41 = *((void *)this + 2);
            while (v40 < v41 && !*((unsigned char *)this + 24))
            {
              char v43 = *(char **)(a1 + 16);
              unint64_t v42 = *(void *)(a1 + 24);
              if ((unint64_t)v43 >= v42)
              {
                uint64_t v45 = (char *)*v12;
                uint64_t v46 = (v43 - (unsigned char *)*v12) >> 3;
                unint64_t v47 = v46 + 1;
                if ((unint64_t)(v46 + 1) >> 61) {
                  goto LABEL_554;
                }
                uint64_t v48 = v42 - (void)v45;
                if (v48 >> 2 > v47) {
                  unint64_t v47 = v48 >> 2;
                }
                if ((unint64_t)v48 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v49 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v49 = v47;
                }
                if (v49)
                {
                  unsigned int v50 = (char *)sub_1000DA54C(v13, v49);
                  uint64_t v45 = *(char **)(a1 + 8);
                  char v43 = *(char **)(a1 + 16);
                }
                else
                {
                  unsigned int v50 = 0;
                }
                uint64_t v51 = &v50[8 * v46];
                *(void *)uint64_t v51 = 0;
                unsigned int v44 = v51 + 8;
                while (v43 != v45)
                {
                  uint64_t v52 = *((void *)v43 - 1);
                  v43 -= 8;
                  *((void *)v51 - 1) = v52;
                  v51 -= 8;
                }
                *(void *)(a1 + 8) = v51;
                *(void *)(a1 + 16) = v44;
                *(void *)(a1 + 24) = &v50[8 * v49];
                if (v45) {
                  operator delete(v45);
                }
              }
              else
              {
                *(void *)char v43 = 0;
                unsigned int v44 = v43 + 8;
              }
              *(void *)(a1 + 16) = v44;
              unint64_t v53 = *((void *)this + 1);
              if (v53 > 0xFFFFFFFFFFFFFFF7 || v53 + 8 > *((void *)this + 2)) {
                goto LABEL_412;
              }
              *(v44 - 1) = *(void *)(*(void *)this + v53);
              unint64_t v41 = *((void *)this + 2);
              unint64_t v40 = *((void *)this + 1) + 8;
              *((void *)this + 1) = v40;
            }
            goto LABEL_413;
          }
          unsigned int v251 = *(char **)(a1 + 16);
          unint64_t v250 = *(void *)(a1 + 24);
          if ((unint64_t)v251 >= v250)
          {
            unint64_t v330 = (char *)*v12;
            uint64_t v331 = (v251 - (unsigned char *)*v12) >> 3;
            unint64_t v332 = v331 + 1;
            if ((unint64_t)(v331 + 1) >> 61) {
LABEL_554:
            }
              sub_1001D7FD4();
            uint64_t v333 = v250 - (void)v330;
            if (v333 >> 2 > v332) {
              unint64_t v332 = v333 >> 2;
            }
            if ((unint64_t)v333 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v334 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v334 = v332;
            }
            if (v334)
            {
              unint64_t v335 = (char *)sub_1000DA54C(v13, v334);
              unint64_t v330 = *(char **)(a1 + 8);
              unsigned int v251 = *(char **)(a1 + 16);
            }
            else
            {
              unint64_t v335 = 0;
            }
            unint64_t v348 = &v335[8 * v331];
            *(void *)unint64_t v348 = 0;
            int v252 = v348 + 8;
            while (v251 != v330)
            {
              uint64_t v349 = *((void *)v251 - 1);
              v251 -= 8;
              *((void *)v348 - 1) = v349;
              v348 -= 8;
            }
            *(void *)(a1 + 8) = v348;
            *(void *)(a1 + 16) = v252;
            *(void *)(a1 + 24) = &v335[8 * v334];
            if (v330) {
              operator delete(v330);
            }
          }
          else
          {
            *(void *)unsigned int v251 = 0;
            int v252 = v251 + 8;
          }
          *(void *)(a1 + 16) = v252;
          unint64_t v350 = *((void *)this + 1);
          if (v350 <= 0xFFFFFFFFFFFFFFF7 && v350 + 8 <= *((void *)this + 2))
          {
            *(v252 - 1) = *(void *)(*(void *)this + v350);
LABEL_523:
            uint64_t v351 = *((void *)this + 1) + 8;
            goto LABEL_543;
          }
          goto LABEL_540;
        case 5u:
          if (v26 != 2)
          {
            char v254 = *(char **)(a1 + 64);
            unint64_t v253 = *(void *)(a1 + 72);
            if ((unint64_t)v254 >= v253)
            {
              int v336 = (char *)*v10;
              uint64_t v337 = (v254 - (unsigned char *)*v10) >> 2;
              unint64_t v338 = v337 + 1;
              if ((unint64_t)(v337 + 1) >> 62) {
LABEL_555:
              }
                sub_1001D7FD4();
              uint64_t v339 = v253 - (void)v336;
              if (v339 >> 1 > v338) {
                unint64_t v338 = v339 >> 1;
              }
              if ((unint64_t)v339 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v340 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v340 = v338;
              }
              if (v340)
              {
                BOOL v341 = (char *)sub_10017EA34(v11, v340);
                int v336 = *(char **)(a1 + 56);
                char v254 = *(char **)(a1 + 64);
              }
              else
              {
                BOOL v341 = 0;
              }
              int v352 = &v341[4 * v337];
              *(_DWORD *)int v352 = 0;
              uint64_t v255 = v352 + 4;
              while (v254 != v336)
              {
                int v353 = *((_DWORD *)v254 - 1);
                v254 -= 4;
                *((_DWORD *)v352 - 1) = v353;
                v352 -= 4;
              }
              *(void *)(a1 + 56) = v352;
              *(void *)(a1 + 64) = v255;
              *(void *)(a1 + 72) = &v341[4 * v340];
              if (v336) {
                operator delete(v336);
              }
            }
            else
            {
              *(_DWORD *)char v254 = 0;
              uint64_t v255 = v254 + 4;
            }
            *(void *)(a1 + 64) = v255;
            goto LABEL_538;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v54 = *((void *)this + 1);
          unint64_t v55 = *((void *)this + 2);
          while (v54 < v55 && !*((unsigned char *)this + 24))
          {
            char v57 = *(char **)(a1 + 64);
            unint64_t v56 = *(void *)(a1 + 72);
            if ((unint64_t)v57 >= v56)
            {
              unsigned int v59 = (char *)*v10;
              uint64_t v60 = (v57 - (unsigned char *)*v10) >> 2;
              unint64_t v61 = v60 + 1;
              if ((unint64_t)(v60 + 1) >> 62) {
                goto LABEL_555;
              }
              uint64_t v62 = v56 - (void)v59;
              if (v62 >> 1 > v61) {
                unint64_t v61 = v62 >> 1;
              }
              if ((unint64_t)v62 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v63 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v63 = v61;
              }
              if (v63)
              {
                unint64_t v64 = (char *)sub_10017EA34(v11, v63);
                unsigned int v59 = *(char **)(a1 + 56);
                char v57 = *(char **)(a1 + 64);
              }
              else
              {
                unint64_t v64 = 0;
              }
              char v65 = &v64[4 * v60];
              *(_DWORD *)char v65 = 0;
              char v58 = v65 + 4;
              while (v57 != v59)
              {
                int v66 = *((_DWORD *)v57 - 1);
                v57 -= 4;
                *((_DWORD *)v65 - 1) = v66;
                v65 -= 4;
              }
              *(void *)(a1 + 56) = v65;
              *(void *)(a1 + 64) = v58;
              *(void *)(a1 + 72) = &v64[4 * v63];
              if (v59) {
                operator delete(v59);
              }
            }
            else
            {
              *(_DWORD *)char v57 = 0;
              char v58 = v57 + 4;
            }
            *(void *)(a1 + 64) = v58;
            unint64_t v67 = *((void *)this + 1);
            if (v67 > 0xFFFFFFFFFFFFFFFBLL || v67 + 4 > *((void *)this + 2)) {
              goto LABEL_412;
            }
            *(v58 - 1) = *(_DWORD *)(*(void *)this + v67);
            unint64_t v55 = *((void *)this + 2);
            unint64_t v54 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v54;
          }
          goto LABEL_413;
        case 6u:
          if (v26 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v68 = *((void *)this + 1);
            unint64_t v69 = *((void *)this + 2);
            while (v68 < v69 && !*((unsigned char *)this + 24))
            {
              unsigned int v71 = *(char **)(a1 + 40);
              unint64_t v70 = *(void *)(a1 + 48);
              if ((unint64_t)v71 >= v70)
              {
                char v73 = (char *)*v8;
                uint64_t v74 = (v71 - (unsigned char *)*v8) >> 2;
                unint64_t v75 = v74 + 1;
                if ((unint64_t)(v74 + 1) >> 62) {
                  goto LABEL_556;
                }
                uint64_t v76 = v70 - (void)v73;
                if (v76 >> 1 > v75) {
                  unint64_t v75 = v76 >> 1;
                }
                if ((unint64_t)v76 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v77 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v77 = v75;
                }
                if (v77)
                {
                  unint64_t v78 = (char *)sub_10017EA34(v9, v77);
                  char v73 = *(char **)(a1 + 32);
                  unsigned int v71 = *(char **)(a1 + 40);
                }
                else
                {
                  unint64_t v78 = 0;
                }
                char v79 = &v78[4 * v74];
                *(_DWORD *)char v79 = 0;
                unint64_t v72 = v79 + 4;
                while (v71 != v73)
                {
                  int v80 = *((_DWORD *)v71 - 1);
                  v71 -= 4;
                  *((_DWORD *)v79 - 1) = v80;
                  v79 -= 4;
                }
                *(void *)(a1 + 32) = v79;
                *(void *)(a1 + 40) = v72;
                *(void *)(a1 + 48) = &v78[4 * v77];
                if (v73) {
                  operator delete(v73);
                }
              }
              else
              {
                *(_DWORD *)unsigned int v71 = 0;
                unint64_t v72 = v71 + 4;
              }
              *(void *)(a1 + 40) = v72;
              unint64_t v81 = *((void *)this + 1);
              if (v81 > 0xFFFFFFFFFFFFFFFBLL || v81 + 4 > *((void *)this + 2))
              {
LABEL_412:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v72 - 1) = *(_DWORD *)(*(void *)this + v81);
              unint64_t v69 = *((void *)this + 2);
              unint64_t v68 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v68;
            }
LABEL_413:
            PB::Reader::recallMark();
          }
          else
          {
            char v257 = *(char **)(a1 + 40);
            unint64_t v256 = *(void *)(a1 + 48);
            if ((unint64_t)v257 >= v256)
            {
              unint64_t v342 = (char *)*v8;
              uint64_t v343 = (v257 - (unsigned char *)*v8) >> 2;
              unint64_t v344 = v343 + 1;
              if ((unint64_t)(v343 + 1) >> 62) {
LABEL_556:
              }
                sub_1001D7FD4();
              uint64_t v345 = v256 - (void)v342;
              if (v345 >> 1 > v344) {
                unint64_t v344 = v345 >> 1;
              }
              if ((unint64_t)v345 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v346 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v346 = v344;
              }
              if (v346)
              {
                uint64_t v347 = (char *)sub_10017EA34(v9, v346);
                unint64_t v342 = *(char **)(a1 + 32);
                char v257 = *(char **)(a1 + 40);
              }
              else
              {
                uint64_t v347 = 0;
              }
              unint64_t v354 = &v347[4 * v343];
              *(_DWORD *)unint64_t v354 = 0;
              uint64_t v255 = v354 + 4;
              while (v257 != v342)
              {
                int v355 = *((_DWORD *)v257 - 1);
                v257 -= 4;
                *((_DWORD *)v354 - 1) = v355;
                v354 -= 4;
              }
              *(void *)(a1 + 32) = v354;
              *(void *)(a1 + 40) = v255;
              *(void *)(a1 + 48) = &v347[4 * v346];
              if (v342) {
                operator delete(v342);
              }
            }
            else
            {
              *(_DWORD *)char v257 = 0;
              uint64_t v255 = v257 + 4;
            }
            *(void *)(a1 + 40) = v255;
LABEL_538:
            unint64_t v356 = *((void *)this + 1);
            if (v356 <= 0xFFFFFFFFFFFFFFFBLL && v356 + 4 <= *((void *)this + 2))
            {
              *(v255 - 1) = *(_DWORD *)(*(void *)this + v356);
LABEL_542:
              uint64_t v351 = *((void *)this + 1) + 4;
LABEL_543:
              *((void *)this + 1) = v351;
            }
            else
            {
LABEL_540:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_544:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        case 7u:
          *(_DWORD *)(a1 + 212) |= 0x10000000u;
          unint64_t v82 = *((void *)this + 1);
          if (v82 >= *((void *)this + 2))
          {
            BOOL v85 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v83 = v82 + 1;
            int v84 = *(unsigned __int8 *)(*(void *)this + v82);
            *((void *)this + 1) = v83;
            BOOL v85 = v84 != 0;
          }
          *(unsigned char *)(a1 + 208) = v85;
          goto LABEL_544;
        case 8u:
          *(_DWORD *)(a1 + 212) |= 0x20000000u;
          unint64_t v86 = *((void *)this + 1);
          if (v86 >= *((void *)this + 2))
          {
            BOOL v89 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v87 = v86 + 1;
            int v88 = *(unsigned __int8 *)(*(void *)this + v86);
            *((void *)this + 1) = v87;
            BOOL v89 = v88 != 0;
          }
          *(unsigned char *)(a1 + 209) = v89;
          goto LABEL_544;
        case 9u:
          *(_DWORD *)(a1 + 212) |= 0x400000u;
          unint64_t v90 = *((void *)this + 1);
          unint64_t v91 = *((void *)this + 2);
          uint64_t v92 = *(void *)this;
          if (v90 <= 0xFFFFFFFFFFFFFFF5 && v90 + 10 <= v91)
          {
            char v93 = 0;
            unsigned int v94 = 0;
            uint64_t v95 = 0;
            do
            {
              unint64_t v96 = v90 + 1;
              *((void *)this + 1) = v90 + 1;
              char v97 = *(unsigned char *)(v92 + v90);
              v95 |= (unint64_t)(v97 & 0x7F) << v93;
              if ((v97 & 0x80) == 0) {
                goto LABEL_462;
              }
              v93 += 7;
              unint64_t v90 = v96;
              BOOL v20 = v94++ > 8;
            }
            while (!v20);
LABEL_290:
            LODWORD(v95) = 0;
            goto LABEL_462;
          }
          char v258 = 0;
          unsigned int v259 = 0;
          uint64_t v95 = 0;
          if (v91 <= v90) {
            unint64_t v91 = *((void *)this + 1);
          }
          while (2)
          {
            if (v91 == v90)
            {
              LODWORD(v95) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v260 = v90 + 1;
              char v261 = *(unsigned char *)(v92 + v90);
              *((void *)this + 1) = v260;
              v95 |= (unint64_t)(v261 & 0x7F) << v258;
              if (v261 < 0)
              {
                v258 += 7;
                unint64_t v90 = v260;
                BOOL v20 = v259++ > 8;
                if (v20) {
                  goto LABEL_290;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v95) = 0;
              }
            }
            break;
          }
LABEL_462:
          *(_DWORD *)(a1 + 184) = v95;
          goto LABEL_544;
        case 0xAu:
          *(_DWORD *)(a1 + 212) |= 0x10u;
          unint64_t v98 = *((void *)this + 1);
          if (v98 > 0xFFFFFFFFFFFFFFFBLL || v98 + 4 > *((void *)this + 2)) {
            goto LABEL_540;
          }
          *(_DWORD *)(a1 + 112) = *(_DWORD *)(*(void *)this + v98);
          goto LABEL_542;
        case 0xBu:
          *(_DWORD *)(a1 + 212) |= 0x80000u;
          unint64_t v99 = *((void *)this + 1);
          unint64_t v100 = *((void *)this + 2);
          uint64_t v101 = *(void *)this;
          if (v99 <= 0xFFFFFFFFFFFFFFF5 && v99 + 10 <= v100)
          {
            char v102 = 0;
            unsigned int v103 = 0;
            uint64_t v104 = 0;
            do
            {
              unint64_t v105 = v99 + 1;
              *((void *)this + 1) = v99 + 1;
              char v106 = *(unsigned char *)(v101 + v99);
              v104 |= (unint64_t)(v106 & 0x7F) << v102;
              if ((v106 & 0x80) == 0) {
                goto LABEL_465;
              }
              v102 += 7;
              unint64_t v99 = v105;
              BOOL v20 = v103++ > 8;
            }
            while (!v20);
LABEL_297:
            LODWORD(v104) = 0;
            goto LABEL_465;
          }
          char v262 = 0;
          unsigned int v263 = 0;
          uint64_t v104 = 0;
          if (v100 <= v99) {
            unint64_t v100 = *((void *)this + 1);
          }
          while (2)
          {
            if (v100 == v99)
            {
              LODWORD(v104) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v264 = v99 + 1;
              char v265 = *(unsigned char *)(v101 + v99);
              *((void *)this + 1) = v264;
              v104 |= (unint64_t)(v265 & 0x7F) << v262;
              if (v265 < 0)
              {
                v262 += 7;
                unint64_t v99 = v264;
                BOOL v20 = v263++ > 8;
                if (v20) {
                  goto LABEL_297;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v104) = 0;
              }
            }
            break;
          }
LABEL_465:
          *(_DWORD *)(a1 + 172) = v104;
          goto LABEL_544;
        case 0xCu:
          *(_DWORD *)(a1 + 212) |= 0x40000u;
          unint64_t v107 = *((void *)this + 1);
          unint64_t v108 = *((void *)this + 2);
          uint64_t v109 = *(void *)this;
          if (v107 <= 0xFFFFFFFFFFFFFFF5 && v107 + 10 <= v108)
          {
            char v110 = 0;
            unsigned int v111 = 0;
            uint64_t v112 = 0;
            do
            {
              unint64_t v113 = v107 + 1;
              *((void *)this + 1) = v107 + 1;
              char v114 = *(unsigned char *)(v109 + v107);
              v112 |= (unint64_t)(v114 & 0x7F) << v110;
              if ((v114 & 0x80) == 0) {
                goto LABEL_468;
              }
              v110 += 7;
              unint64_t v107 = v113;
              BOOL v20 = v111++ > 8;
            }
            while (!v20);
LABEL_304:
            LODWORD(v112) = 0;
            goto LABEL_468;
          }
          char v266 = 0;
          unsigned int v267 = 0;
          uint64_t v112 = 0;
          if (v108 <= v107) {
            unint64_t v108 = *((void *)this + 1);
          }
          while (2)
          {
            if (v108 == v107)
            {
              LODWORD(v112) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v268 = v107 + 1;
              char v269 = *(unsigned char *)(v109 + v107);
              *((void *)this + 1) = v268;
              v112 |= (unint64_t)(v269 & 0x7F) << v266;
              if (v269 < 0)
              {
                v266 += 7;
                unint64_t v107 = v268;
                BOOL v20 = v267++ > 8;
                if (v20) {
                  goto LABEL_304;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v112) = 0;
              }
            }
            break;
          }
LABEL_468:
          *(_DWORD *)(a1 + 168) = v112;
          goto LABEL_544;
        case 0xDu:
          *(_DWORD *)(a1 + 212) |= 0x20000u;
          unint64_t v115 = *((void *)this + 1);
          unint64_t v116 = *((void *)this + 2);
          uint64_t v117 = *(void *)this;
          if (v115 <= 0xFFFFFFFFFFFFFFF5 && v115 + 10 <= v116)
          {
            char v118 = 0;
            unsigned int v119 = 0;
            uint64_t v120 = 0;
            do
            {
              unint64_t v121 = v115 + 1;
              *((void *)this + 1) = v115 + 1;
              char v122 = *(unsigned char *)(v117 + v115);
              v120 |= (unint64_t)(v122 & 0x7F) << v118;
              if ((v122 & 0x80) == 0) {
                goto LABEL_471;
              }
              v118 += 7;
              unint64_t v115 = v121;
              BOOL v20 = v119++ > 8;
            }
            while (!v20);
LABEL_311:
            LODWORD(v120) = 0;
            goto LABEL_471;
          }
          char v270 = 0;
          unsigned int v271 = 0;
          uint64_t v120 = 0;
          if (v116 <= v115) {
            unint64_t v116 = *((void *)this + 1);
          }
          while (2)
          {
            if (v116 == v115)
            {
              LODWORD(v120) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v272 = v115 + 1;
              char v273 = *(unsigned char *)(v117 + v115);
              *((void *)this + 1) = v272;
              v120 |= (unint64_t)(v273 & 0x7F) << v270;
              if (v273 < 0)
              {
                v270 += 7;
                unint64_t v115 = v272;
                BOOL v20 = v271++ > 8;
                if (v20) {
                  goto LABEL_311;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v120) = 0;
              }
            }
            break;
          }
LABEL_471:
          *(_DWORD *)(a1 + 164) = v120;
          goto LABEL_544;
        case 0xEu:
          *(_DWORD *)(a1 + 212) |= 0x10000u;
          unint64_t v123 = *((void *)this + 1);
          unint64_t v124 = *((void *)this + 2);
          uint64_t v125 = *(void *)this;
          if (v123 <= 0xFFFFFFFFFFFFFFF5 && v123 + 10 <= v124)
          {
            char v126 = 0;
            unsigned int v127 = 0;
            uint64_t v128 = 0;
            do
            {
              unint64_t v129 = v123 + 1;
              *((void *)this + 1) = v123 + 1;
              char v130 = *(unsigned char *)(v125 + v123);
              v128 |= (unint64_t)(v130 & 0x7F) << v126;
              if ((v130 & 0x80) == 0) {
                goto LABEL_474;
              }
              v126 += 7;
              unint64_t v123 = v129;
              BOOL v20 = v127++ > 8;
            }
            while (!v20);
LABEL_318:
            LODWORD(v128) = 0;
            goto LABEL_474;
          }
          char v274 = 0;
          unsigned int v275 = 0;
          uint64_t v128 = 0;
          if (v124 <= v123) {
            unint64_t v124 = *((void *)this + 1);
          }
          while (2)
          {
            if (v124 == v123)
            {
              LODWORD(v128) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v276 = v123 + 1;
              char v277 = *(unsigned char *)(v125 + v123);
              *((void *)this + 1) = v276;
              v128 |= (unint64_t)(v277 & 0x7F) << v274;
              if (v277 < 0)
              {
                v274 += 7;
                unint64_t v123 = v276;
                BOOL v20 = v275++ > 8;
                if (v20) {
                  goto LABEL_318;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v128) = 0;
              }
            }
            break;
          }
LABEL_474:
          *(_DWORD *)(a1 + 160) = v128;
          goto LABEL_544;
        case 0xFu:
          *(_DWORD *)(a1 + 212) |= 0x8000u;
          unint64_t v131 = *((void *)this + 1);
          unint64_t v132 = *((void *)this + 2);
          uint64_t v133 = *(void *)this;
          if (v131 <= 0xFFFFFFFFFFFFFFF5 && v131 + 10 <= v132)
          {
            char v134 = 0;
            unsigned int v135 = 0;
            uint64_t v136 = 0;
            do
            {
              unint64_t v137 = v131 + 1;
              *((void *)this + 1) = v131 + 1;
              char v138 = *(unsigned char *)(v133 + v131);
              v136 |= (unint64_t)(v138 & 0x7F) << v134;
              if ((v138 & 0x80) == 0) {
                goto LABEL_477;
              }
              v134 += 7;
              unint64_t v131 = v137;
              BOOL v20 = v135++ > 8;
            }
            while (!v20);
LABEL_325:
            LODWORD(v136) = 0;
            goto LABEL_477;
          }
          char v278 = 0;
          unsigned int v279 = 0;
          uint64_t v136 = 0;
          if (v132 <= v131) {
            unint64_t v132 = *((void *)this + 1);
          }
          while (2)
          {
            if (v132 == v131)
            {
              LODWORD(v136) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v280 = v131 + 1;
              char v281 = *(unsigned char *)(v133 + v131);
              *((void *)this + 1) = v280;
              v136 |= (unint64_t)(v281 & 0x7F) << v278;
              if (v281 < 0)
              {
                v278 += 7;
                unint64_t v131 = v280;
                BOOL v20 = v279++ > 8;
                if (v20) {
                  goto LABEL_325;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v136) = 0;
              }
            }
            break;
          }
LABEL_477:
          *(_DWORD *)(a1 + 156) = v136;
          goto LABEL_544;
        case 0x10u:
          *(_DWORD *)(a1 + 212) |= 0x4000u;
          unint64_t v139 = *((void *)this + 1);
          unint64_t v140 = *((void *)this + 2);
          uint64_t v141 = *(void *)this;
          if (v139 <= 0xFFFFFFFFFFFFFFF5 && v139 + 10 <= v140)
          {
            char v142 = 0;
            unsigned int v143 = 0;
            uint64_t v144 = 0;
            do
            {
              unint64_t v145 = v139 + 1;
              *((void *)this + 1) = v139 + 1;
              char v146 = *(unsigned char *)(v141 + v139);
              v144 |= (unint64_t)(v146 & 0x7F) << v142;
              if ((v146 & 0x80) == 0) {
                goto LABEL_480;
              }
              v142 += 7;
              unint64_t v139 = v145;
              BOOL v20 = v143++ > 8;
            }
            while (!v20);
LABEL_332:
            LODWORD(v144) = 0;
            goto LABEL_480;
          }
          char v282 = 0;
          unsigned int v283 = 0;
          uint64_t v144 = 0;
          if (v140 <= v139) {
            unint64_t v140 = *((void *)this + 1);
          }
          while (2)
          {
            if (v140 == v139)
            {
              LODWORD(v144) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v284 = v139 + 1;
              char v285 = *(unsigned char *)(v141 + v139);
              *((void *)this + 1) = v284;
              v144 |= (unint64_t)(v285 & 0x7F) << v282;
              if (v285 < 0)
              {
                v282 += 7;
                unint64_t v139 = v284;
                BOOL v20 = v283++ > 8;
                if (v20) {
                  goto LABEL_332;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v144) = 0;
              }
            }
            break;
          }
LABEL_480:
          *(_DWORD *)(a1 + 152) = v144;
          goto LABEL_544;
        case 0x11u:
          *(_DWORD *)(a1 + 212) |= 0x2000u;
          unint64_t v147 = *((void *)this + 1);
          unint64_t v148 = *((void *)this + 2);
          uint64_t v149 = *(void *)this;
          if (v147 <= 0xFFFFFFFFFFFFFFF5 && v147 + 10 <= v148)
          {
            char v150 = 0;
            unsigned int v151 = 0;
            uint64_t v152 = 0;
            do
            {
              unint64_t v153 = v147 + 1;
              *((void *)this + 1) = v147 + 1;
              char v154 = *(unsigned char *)(v149 + v147);
              v152 |= (unint64_t)(v154 & 0x7F) << v150;
              if ((v154 & 0x80) == 0) {
                goto LABEL_483;
              }
              v150 += 7;
              unint64_t v147 = v153;
              BOOL v20 = v151++ > 8;
            }
            while (!v20);
LABEL_339:
            LODWORD(v152) = 0;
            goto LABEL_483;
          }
          char v286 = 0;
          unsigned int v287 = 0;
          uint64_t v152 = 0;
          if (v148 <= v147) {
            unint64_t v148 = *((void *)this + 1);
          }
          while (2)
          {
            if (v148 == v147)
            {
              LODWORD(v152) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v288 = v147 + 1;
              char v289 = *(unsigned char *)(v149 + v147);
              *((void *)this + 1) = v288;
              v152 |= (unint64_t)(v289 & 0x7F) << v286;
              if (v289 < 0)
              {
                v286 += 7;
                unint64_t v147 = v288;
                BOOL v20 = v287++ > 8;
                if (v20) {
                  goto LABEL_339;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v152) = 0;
              }
            }
            break;
          }
LABEL_483:
          *(_DWORD *)(a1 + 148) = v152;
          goto LABEL_544;
        case 0x12u:
          *(_DWORD *)(a1 + 212) |= 0x100000u;
          unint64_t v155 = *((void *)this + 1);
          unint64_t v156 = *((void *)this + 2);
          uint64_t v157 = *(void *)this;
          if (v155 <= 0xFFFFFFFFFFFFFFF5 && v155 + 10 <= v156)
          {
            char v158 = 0;
            unsigned int v159 = 0;
            uint64_t v160 = 0;
            do
            {
              unint64_t v161 = v155 + 1;
              *((void *)this + 1) = v155 + 1;
              char v162 = *(unsigned char *)(v157 + v155);
              v160 |= (unint64_t)(v162 & 0x7F) << v158;
              if ((v162 & 0x80) == 0) {
                goto LABEL_486;
              }
              v158 += 7;
              unint64_t v155 = v161;
              BOOL v20 = v159++ > 8;
            }
            while (!v20);
LABEL_346:
            LODWORD(v160) = 0;
            goto LABEL_486;
          }
          char v290 = 0;
          unsigned int v291 = 0;
          uint64_t v160 = 0;
          if (v156 <= v155) {
            unint64_t v156 = *((void *)this + 1);
          }
          while (2)
          {
            if (v156 == v155)
            {
              LODWORD(v160) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v292 = v155 + 1;
              char v293 = *(unsigned char *)(v157 + v155);
              *((void *)this + 1) = v292;
              v160 |= (unint64_t)(v293 & 0x7F) << v290;
              if (v293 < 0)
              {
                v290 += 7;
                unint64_t v155 = v292;
                BOOL v20 = v291++ > 8;
                if (v20) {
                  goto LABEL_346;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v160) = 0;
              }
            }
            break;
          }
LABEL_486:
          *(_DWORD *)(a1 + 176) = v160;
          goto LABEL_544;
        case 0x13u:
          *(_DWORD *)(a1 + 212) |= 0x100u;
          unint64_t v163 = *((void *)this + 1);
          if (v163 > 0xFFFFFFFFFFFFFFFBLL || v163 + 4 > *((void *)this + 2)) {
            goto LABEL_540;
          }
          *(_DWORD *)(a1 + 128) = *(_DWORD *)(*(void *)this + v163);
          goto LABEL_542;
        case 0x14u:
          *(_DWORD *)(a1 + 212) |= 0x1000000u;
          unint64_t v164 = *((void *)this + 1);
          unint64_t v165 = *((void *)this + 2);
          uint64_t v166 = *(void *)this;
          if (v164 <= 0xFFFFFFFFFFFFFFF5 && v164 + 10 <= v165)
          {
            char v167 = 0;
            unsigned int v168 = 0;
            uint64_t v169 = 0;
            do
            {
              unint64_t v170 = v164 + 1;
              *((void *)this + 1) = v164 + 1;
              char v171 = *(unsigned char *)(v166 + v164);
              v169 |= (unint64_t)(v171 & 0x7F) << v167;
              if ((v171 & 0x80) == 0) {
                goto LABEL_489;
              }
              v167 += 7;
              unint64_t v164 = v170;
              BOOL v20 = v168++ > 8;
            }
            while (!v20);
LABEL_353:
            LODWORD(v169) = 0;
            goto LABEL_489;
          }
          char v294 = 0;
          unsigned int v295 = 0;
          uint64_t v169 = 0;
          if (v165 <= v164) {
            unint64_t v165 = *((void *)this + 1);
          }
          while (2)
          {
            if (v165 == v164)
            {
              LODWORD(v169) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v296 = v164 + 1;
              char v297 = *(unsigned char *)(v166 + v164);
              *((void *)this + 1) = v296;
              v169 |= (unint64_t)(v297 & 0x7F) << v294;
              if (v297 < 0)
              {
                v294 += 7;
                unint64_t v164 = v296;
                BOOL v20 = v295++ > 8;
                if (v20) {
                  goto LABEL_353;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v169) = 0;
              }
            }
            break;
          }
LABEL_489:
          *(_DWORD *)(a1 + 192) = v169;
          goto LABEL_544;
        case 0x15u:
          *(_DWORD *)(a1 + 212) |= 0x20u;
          unint64_t v172 = *((void *)this + 1);
          unint64_t v173 = *((void *)this + 2);
          uint64_t v174 = *(void *)this;
          if (v172 <= 0xFFFFFFFFFFFFFFF5 && v172 + 10 <= v173)
          {
            char v175 = 0;
            unsigned int v176 = 0;
            uint64_t v177 = 0;
            do
            {
              unint64_t v178 = v172 + 1;
              *((void *)this + 1) = v172 + 1;
              char v179 = *(unsigned char *)(v174 + v172);
              v177 |= (unint64_t)(v179 & 0x7F) << v175;
              if ((v179 & 0x80) == 0) {
                goto LABEL_492;
              }
              v175 += 7;
              unint64_t v172 = v178;
              BOOL v20 = v176++ > 8;
            }
            while (!v20);
LABEL_360:
            LODWORD(v177) = 0;
            goto LABEL_492;
          }
          char v298 = 0;
          unsigned int v299 = 0;
          uint64_t v177 = 0;
          if (v173 <= v172) {
            unint64_t v173 = *((void *)this + 1);
          }
          while (2)
          {
            if (v173 == v172)
            {
              LODWORD(v177) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v300 = v172 + 1;
              char v301 = *(unsigned char *)(v174 + v172);
              *((void *)this + 1) = v300;
              v177 |= (unint64_t)(v301 & 0x7F) << v298;
              if (v301 < 0)
              {
                v298 += 7;
                unint64_t v172 = v300;
                BOOL v20 = v299++ > 8;
                if (v20) {
                  goto LABEL_360;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v177) = 0;
              }
            }
            break;
          }
LABEL_492:
          *(_DWORD *)(a1 + 116) = v177;
          goto LABEL_544;
        case 0x16u:
          *(_DWORD *)(a1 + 212) |= 8u;
          unint64_t v180 = *((void *)this + 1);
          unint64_t v181 = *((void *)this + 2);
          uint64_t v182 = *(void *)this;
          if (v180 <= 0xFFFFFFFFFFFFFFF5 && v180 + 10 <= v181)
          {
            char v183 = 0;
            unsigned int v184 = 0;
            uint64_t v185 = 0;
            do
            {
              unint64_t v186 = v180 + 1;
              *((void *)this + 1) = v180 + 1;
              char v187 = *(unsigned char *)(v182 + v180);
              v185 |= (unint64_t)(v187 & 0x7F) << v183;
              if ((v187 & 0x80) == 0) {
                goto LABEL_495;
              }
              v183 += 7;
              unint64_t v180 = v186;
              BOOL v20 = v184++ > 8;
            }
            while (!v20);
LABEL_367:
            uint64_t v185 = 0;
            goto LABEL_495;
          }
          char v302 = 0;
          unsigned int v303 = 0;
          uint64_t v185 = 0;
          if (v181 <= v180) {
            unint64_t v181 = *((void *)this + 1);
          }
          while (2)
          {
            if (v181 == v180)
            {
              uint64_t v185 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v304 = v180 + 1;
              char v305 = *(unsigned char *)(v182 + v180);
              *((void *)this + 1) = v304;
              v185 |= (unint64_t)(v305 & 0x7F) << v302;
              if (v305 < 0)
              {
                v302 += 7;
                unint64_t v180 = v304;
                BOOL v20 = v303++ > 8;
                if (v20) {
                  goto LABEL_367;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v185 = 0;
              }
            }
            break;
          }
LABEL_495:
          *(void *)(a1 + 104) = v185;
          goto LABEL_544;
        case 0x17u:
          *(_DWORD *)(a1 + 212) |= 0x2000000u;
          unint64_t v188 = *((void *)this + 1);
          if (v188 > 0xFFFFFFFFFFFFFFFBLL || v188 + 4 > *((void *)this + 2)) {
            goto LABEL_540;
          }
          *(_DWORD *)(a1 + 196) = *(_DWORD *)(*(void *)this + v188);
          goto LABEL_542;
        case 0x18u:
          *(_DWORD *)(a1 + 212) |= 0x4000000u;
          unint64_t v189 = *((void *)this + 1);
          if (v189 > 0xFFFFFFFFFFFFFFFBLL || v189 + 4 > *((void *)this + 2)) {
            goto LABEL_540;
          }
          *(_DWORD *)(a1 + 200) = *(_DWORD *)(*(void *)this + v189);
          goto LABEL_542;
        case 0x19u:
          *(_DWORD *)(a1 + 212) |= 0x8000000u;
          unint64_t v190 = *((void *)this + 1);
          if (v190 > 0xFFFFFFFFFFFFFFFBLL || v190 + 4 > *((void *)this + 2)) {
            goto LABEL_540;
          }
          *(_DWORD *)(a1 + 204) = *(_DWORD *)(*(void *)this + v190);
          goto LABEL_542;
        case 0x1Au:
          *(_DWORD *)(a1 + 212) |= 0x800u;
          unint64_t v191 = *((void *)this + 1);
          unint64_t v192 = *((void *)this + 2);
          uint64_t v193 = *(void *)this;
          if (v191 <= 0xFFFFFFFFFFFFFFF5 && v191 + 10 <= v192)
          {
            char v194 = 0;
            unsigned int v195 = 0;
            uint64_t v196 = 0;
            do
            {
              unint64_t v197 = v191 + 1;
              *((void *)this + 1) = v191 + 1;
              char v198 = *(unsigned char *)(v193 + v191);
              v196 |= (unint64_t)(v198 & 0x7F) << v194;
              if ((v198 & 0x80) == 0) {
                goto LABEL_498;
              }
              v194 += 7;
              unint64_t v191 = v197;
              BOOL v20 = v195++ > 8;
            }
            while (!v20);
LABEL_374:
            LODWORD(v196) = 0;
            goto LABEL_498;
          }
          char v306 = 0;
          unsigned int v307 = 0;
          uint64_t v196 = 0;
          if (v192 <= v191) {
            unint64_t v192 = *((void *)this + 1);
          }
          while (2)
          {
            if (v192 == v191)
            {
              LODWORD(v196) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v308 = v191 + 1;
              char v309 = *(unsigned char *)(v193 + v191);
              *((void *)this + 1) = v308;
              v196 |= (unint64_t)(v309 & 0x7F) << v306;
              if (v309 < 0)
              {
                v306 += 7;
                unint64_t v191 = v308;
                BOOL v20 = v307++ > 8;
                if (v20) {
                  goto LABEL_374;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v196) = 0;
              }
            }
            break;
          }
LABEL_498:
          *(_DWORD *)(a1 + 140) = v196;
          goto LABEL_544;
        case 0x1Bu:
          *(_DWORD *)(a1 + 212) |= 0x80u;
          unint64_t v199 = *((void *)this + 1);
          unint64_t v200 = *((void *)this + 2);
          uint64_t v201 = *(void *)this;
          if (v199 <= 0xFFFFFFFFFFFFFFF5 && v199 + 10 <= v200)
          {
            char v202 = 0;
            unsigned int v203 = 0;
            uint64_t v204 = 0;
            do
            {
              unint64_t v205 = v199 + 1;
              *((void *)this + 1) = v199 + 1;
              char v206 = *(unsigned char *)(v201 + v199);
              v204 |= (unint64_t)(v206 & 0x7F) << v202;
              if ((v206 & 0x80) == 0) {
                goto LABEL_501;
              }
              v202 += 7;
              unint64_t v199 = v205;
              BOOL v20 = v203++ > 8;
            }
            while (!v20);
LABEL_381:
            LODWORD(v204) = 0;
            goto LABEL_501;
          }
          char v310 = 0;
          unsigned int v311 = 0;
          uint64_t v204 = 0;
          if (v200 <= v199) {
            unint64_t v200 = *((void *)this + 1);
          }
          while (2)
          {
            if (v200 == v199)
            {
              LODWORD(v204) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v312 = v199 + 1;
              char v313 = *(unsigned char *)(v201 + v199);
              *((void *)this + 1) = v312;
              v204 |= (unint64_t)(v313 & 0x7F) << v310;
              if (v313 < 0)
              {
                v310 += 7;
                unint64_t v199 = v312;
                BOOL v20 = v311++ > 8;
                if (v20) {
                  goto LABEL_381;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v204) = 0;
              }
            }
            break;
          }
LABEL_501:
          *(_DWORD *)(a1 + 124) = v204;
          goto LABEL_544;
        case 0x1Cu:
          *(_DWORD *)(a1 + 212) |= 2u;
          unint64_t v207 = *((void *)this + 1);
          unint64_t v208 = *((void *)this + 2);
          uint64_t v209 = *(void *)this;
          if (v207 <= 0xFFFFFFFFFFFFFFF5 && v207 + 10 <= v208)
          {
            char v210 = 0;
            unsigned int v211 = 0;
            uint64_t v212 = 0;
            do
            {
              unint64_t v213 = v207 + 1;
              *((void *)this + 1) = v207 + 1;
              char v214 = *(unsigned char *)(v209 + v207);
              v212 |= (unint64_t)(v214 & 0x7F) << v210;
              if ((v214 & 0x80) == 0) {
                goto LABEL_504;
              }
              v210 += 7;
              unint64_t v207 = v213;
              BOOL v20 = v211++ > 8;
            }
            while (!v20);
LABEL_388:
            uint64_t v212 = 0;
            goto LABEL_504;
          }
          char v314 = 0;
          unsigned int v315 = 0;
          uint64_t v212 = 0;
          if (v208 <= v207) {
            unint64_t v208 = *((void *)this + 1);
          }
          while (2)
          {
            if (v208 == v207)
            {
              uint64_t v212 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v316 = v207 + 1;
              char v317 = *(unsigned char *)(v209 + v207);
              *((void *)this + 1) = v316;
              v212 |= (unint64_t)(v317 & 0x7F) << v314;
              if (v317 < 0)
              {
                v314 += 7;
                unint64_t v207 = v316;
                BOOL v20 = v315++ > 8;
                if (v20) {
                  goto LABEL_388;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v212 = 0;
              }
            }
            break;
          }
LABEL_504:
          *(void *)(a1 + 88) = v212;
          goto LABEL_544;
        case 0x1Du:
          *(_DWORD *)(a1 + 212) |= 0x40000000u;
          unint64_t v215 = *((void *)this + 1);
          if (v215 >= *((void *)this + 2))
          {
            BOOL v218 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v216 = v215 + 1;
            int v217 = *(unsigned __int8 *)(*(void *)this + v215);
            *((void *)this + 1) = v216;
            BOOL v218 = v217 != 0;
          }
          *(unsigned char *)(a1 + 210) = v218;
          goto LABEL_544;
        case 0x1Eu:
          *(_DWORD *)(a1 + 212) |= 0x1000u;
          unint64_t v219 = *((void *)this + 1);
          if (v219 > 0xFFFFFFFFFFFFFFFBLL || v219 + 4 > *((void *)this + 2)) {
            goto LABEL_540;
          }
          *(_DWORD *)(a1 + 144) = *(_DWORD *)(*(void *)this + v219);
          goto LABEL_542;
        case 0x1Fu:
          *(_DWORD *)(a1 + 212) |= 0x200u;
          unint64_t v220 = *((void *)this + 1);
          if (v220 > 0xFFFFFFFFFFFFFFFBLL || v220 + 4 > *((void *)this + 2)) {
            goto LABEL_540;
          }
          *(_DWORD *)(a1 + 132) = *(_DWORD *)(*(void *)this + v220);
          goto LABEL_542;
        case 0x20u:
          *(_DWORD *)(a1 + 212) |= 0x40u;
          unint64_t v221 = *((void *)this + 1);
          if (v221 > 0xFFFFFFFFFFFFFFFBLL || v221 + 4 > *((void *)this + 2)) {
            goto LABEL_540;
          }
          *(_DWORD *)(a1 + 120) = *(_DWORD *)(*(void *)this + v221);
          goto LABEL_542;
        case 0x21u:
          *(_DWORD *)(a1 + 212) |= 0x200000u;
          unint64_t v222 = *((void *)this + 1);
          unint64_t v223 = *((void *)this + 2);
          uint64_t v224 = *(void *)this;
          if (v222 <= 0xFFFFFFFFFFFFFFF5 && v222 + 10 <= v223)
          {
            char v225 = 0;
            unsigned int v226 = 0;
            uint64_t v227 = 0;
            do
            {
              unint64_t v228 = v222 + 1;
              *((void *)this + 1) = v222 + 1;
              char v229 = *(unsigned char *)(v224 + v222);
              v227 |= (unint64_t)(v229 & 0x7F) << v225;
              if ((v229 & 0x80) == 0) {
                goto LABEL_507;
              }
              v225 += 7;
              unint64_t v222 = v228;
              BOOL v20 = v226++ > 8;
            }
            while (!v20);
LABEL_397:
            LODWORD(v227) = 0;
            goto LABEL_507;
          }
          char v318 = 0;
          unsigned int v319 = 0;
          uint64_t v227 = 0;
          if (v223 <= v222) {
            unint64_t v223 = *((void *)this + 1);
          }
          while (2)
          {
            if (v223 == v222)
            {
              LODWORD(v227) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v320 = v222 + 1;
              char v321 = *(unsigned char *)(v224 + v222);
              *((void *)this + 1) = v320;
              v227 |= (unint64_t)(v321 & 0x7F) << v318;
              if (v321 < 0)
              {
                v318 += 7;
                unint64_t v222 = v320;
                BOOL v20 = v319++ > 8;
                if (v20) {
                  goto LABEL_397;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v227) = 0;
              }
            }
            break;
          }
LABEL_507:
          *(_DWORD *)(a1 + 180) = v227;
          goto LABEL_544;
        case 0x22u:
          *(_DWORD *)(a1 + 212) |= 0x400u;
          unint64_t v230 = *((void *)this + 1);
          unint64_t v231 = *((void *)this + 2);
          uint64_t v232 = *(void *)this;
          if (v230 <= 0xFFFFFFFFFFFFFFF5 && v230 + 10 <= v231)
          {
            char v233 = 0;
            unsigned int v234 = 0;
            uint64_t v235 = 0;
            do
            {
              unint64_t v236 = v230 + 1;
              *((void *)this + 1) = v230 + 1;
              char v237 = *(unsigned char *)(v232 + v230);
              v235 |= (unint64_t)(v237 & 0x7F) << v233;
              if ((v237 & 0x80) == 0) {
                goto LABEL_510;
              }
              v233 += 7;
              unint64_t v230 = v236;
              BOOL v20 = v234++ > 8;
            }
            while (!v20);
LABEL_404:
            LODWORD(v235) = 0;
            goto LABEL_510;
          }
          char v322 = 0;
          unsigned int v323 = 0;
          uint64_t v235 = 0;
          if (v231 <= v230) {
            unint64_t v231 = *((void *)this + 1);
          }
          while (2)
          {
            if (v231 == v230)
            {
              LODWORD(v235) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v324 = v230 + 1;
              char v325 = *(unsigned char *)(v232 + v230);
              *((void *)this + 1) = v324;
              v235 |= (unint64_t)(v325 & 0x7F) << v322;
              if (v325 < 0)
              {
                v322 += 7;
                unint64_t v230 = v324;
                BOOL v20 = v323++ > 8;
                if (v20) {
                  goto LABEL_404;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v235) = 0;
              }
            }
            break;
          }
LABEL_510:
          *(_DWORD *)(a1 + 136) = v235;
          goto LABEL_544;
        case 0x23u:
          *(_DWORD *)(a1 + 212) |= 0x800000u;
          unint64_t v238 = *((void *)this + 1);
          unint64_t v239 = *((void *)this + 2);
          uint64_t v240 = *(void *)this;
          if (v238 <= 0xFFFFFFFFFFFFFFF5 && v238 + 10 <= v239)
          {
            char v241 = 0;
            unsigned int v242 = 0;
            uint64_t v243 = 0;
            do
            {
              unint64_t v244 = v238 + 1;
              *((void *)this + 1) = v238 + 1;
              char v245 = *(unsigned char *)(v240 + v238);
              v243 |= (unint64_t)(v245 & 0x7F) << v241;
              if ((v245 & 0x80) == 0) {
                goto LABEL_513;
              }
              v241 += 7;
              unint64_t v238 = v244;
              BOOL v20 = v242++ > 8;
            }
            while (!v20);
LABEL_411:
            LODWORD(v243) = 0;
            goto LABEL_513;
          }
          char v326 = 0;
          unsigned int v327 = 0;
          uint64_t v243 = 0;
          if (v239 <= v238) {
            unint64_t v239 = *((void *)this + 1);
          }
          while (2)
          {
            if (v239 == v238)
            {
              LODWORD(v243) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v328 = v238 + 1;
              char v329 = *(unsigned char *)(v240 + v238);
              *((void *)this + 1) = v328;
              v243 |= (unint64_t)(v329 & 0x7F) << v326;
              if (v329 < 0)
              {
                v326 += 7;
                unint64_t v238 = v328;
                BOOL v20 = v327++ > 8;
                if (v20) {
                  goto LABEL_411;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v243) = 0;
              }
            }
            break;
          }
LABEL_513:
          *(_DWORD *)(a1 + 188) = v243;
          goto LABEL_544;
        default:
          if ((PB::Reader::skip(this, v17 >> 3, v26, 0) & 1) == 0) {
            return 0;
          }
          goto LABEL_544;
      }
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v17 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v23 = v2 + 1;
      char v24 = *(unsigned char *)(v14 + v2);
      *((void *)this + 1) = v23;
      v17 |= (unint64_t)(v24 & 0x7F) << v21;
      if ((v24 & 0x80) == 0) {
        goto LABEL_21;
      }
      v21 += 7;
      unint64_t v2 = v23;
      if (v22++ >= 9)
      {
LABEL_20:
        unint64_t v17 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_1016A9208(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 212);
  if ((v4 & 4) == 0)
  {
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_3;
    }
LABEL_45:
    double result = PB::Writer::write(this, *(unsigned char *)(v3 + 211), 2u);
    if ((*(_DWORD *)(v3 + 212) & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  double result = PB::Writer::writeVarInt(this, *(void *)(result + 96), 1u);
  int v4 = *(_DWORD *)(v3 + 212);
  if (v4 < 0) {
    goto LABEL_45;
  }
LABEL_3:
  if (v4) {
LABEL_4:
  }
    double result = PB::Writer::write(this, *(double *)(v3 + 80), 3u);
LABEL_5:
  int v5 = *(double **)(v3 + 8);
  int v6 = *(double **)(v3 + 16);
  while (v5 != v6)
  {
    double v7 = *v5++;
    double result = PB::Writer::write(this, v7, 4u);
  }
  double v8 = *(float **)(v3 + 56);
  uint64_t v9 = *(float **)(v3 + 64);
  while (v8 != v9)
  {
    float v10 = *v8++;
    double result = PB::Writer::write(this, v10, 5u);
  }
  uint64_t v11 = *(float **)(v3 + 32);
  float v12 = *(float **)(v3 + 40);
  while (v11 != v12)
  {
    float v13 = *v11++;
    double result = PB::Writer::write(this, v13, 6u);
  }
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x10000000) != 0)
  {
    double result = PB::Writer::write(this, *(unsigned char *)(v3 + 208), 7u);
    int v14 = *(_DWORD *)(v3 + 212);
    if ((v14 & 0x20000000) == 0)
    {
LABEL_16:
      if ((v14 & 0x400000) == 0) {
        goto LABEL_17;
      }
      goto LABEL_49;
    }
  }
  else if ((v14 & 0x20000000) == 0)
  {
    goto LABEL_16;
  }
  double result = PB::Writer::write(this, *(unsigned char *)(v3 + 209), 8u);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x400000) == 0)
  {
LABEL_17:
    if ((v14 & 0x10) == 0) {
      goto LABEL_18;
    }
    goto LABEL_50;
  }
LABEL_49:
  double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 184), 9u);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x10) == 0)
  {
LABEL_18:
    if ((v14 & 0x80000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_51;
  }
LABEL_50:
  double result = PB::Writer::write(this, *(float *)(v3 + 112), 0xAu);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x80000) == 0)
  {
LABEL_19:
    if ((v14 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_52;
  }
LABEL_51:
  double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 172), 0xBu);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x40000) == 0)
  {
LABEL_20:
    if ((v14 & 0x20000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_53;
  }
LABEL_52:
  double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 168), 0xCu);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x20000) == 0)
  {
LABEL_21:
    if ((v14 & 0x10000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_54;
  }
LABEL_53:
  double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 164), 0xDu);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x10000) == 0)
  {
LABEL_22:
    if ((v14 & 0x8000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_55;
  }
LABEL_54:
  double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 160), 0xEu);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x8000) == 0)
  {
LABEL_23:
    if ((v14 & 0x4000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_56;
  }
LABEL_55:
  double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 156), 0xFu);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x4000) == 0)
  {
LABEL_24:
    if ((v14 & 0x2000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_57;
  }
LABEL_56:
  double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 152), 0x10u);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x2000) == 0)
  {
LABEL_25:
    if ((v14 & 0x100000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_58;
  }
LABEL_57:
  double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 148), 0x11u);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x100000) == 0)
  {
LABEL_26:
    if ((v14 & 0x100) == 0) {
      goto LABEL_27;
    }
    goto LABEL_59;
  }
LABEL_58:
  double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 176), 0x12u);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x100) == 0)
  {
LABEL_27:
    if ((v14 & 0x1000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_60;
  }
LABEL_59:
  double result = PB::Writer::write(this, *(float *)(v3 + 128), 0x13u);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x1000000) == 0)
  {
LABEL_28:
    if ((v14 & 0x20) == 0) {
      goto LABEL_29;
    }
    goto LABEL_61;
  }
LABEL_60:
  double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 192), 0x14u);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x20) == 0)
  {
LABEL_29:
    if ((v14 & 8) == 0) {
      goto LABEL_30;
    }
    goto LABEL_62;
  }
LABEL_61:
  double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 116), 0x15u);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 8) == 0)
  {
LABEL_30:
    if ((v14 & 0x2000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_63;
  }
LABEL_62:
  double result = PB::Writer::writeVarInt(this, *(void *)(v3 + 104), 0x16u);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x2000000) == 0)
  {
LABEL_31:
    if ((v14 & 0x4000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_64;
  }
LABEL_63:
  double result = PB::Writer::write(this, *(float *)(v3 + 196), 0x17u);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x4000000) == 0)
  {
LABEL_32:
    if ((v14 & 0x8000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_65;
  }
LABEL_64:
  double result = PB::Writer::write(this, *(float *)(v3 + 200), 0x18u);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x8000000) == 0)
  {
LABEL_33:
    if ((v14 & 0x800) == 0) {
      goto LABEL_34;
    }
    goto LABEL_66;
  }
LABEL_65:
  double result = PB::Writer::write(this, *(float *)(v3 + 204), 0x19u);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x800) == 0)
  {
LABEL_34:
    if ((v14 & 0x80) == 0) {
      goto LABEL_35;
    }
    goto LABEL_67;
  }
LABEL_66:
  double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 140), 0x1Au);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x80) == 0)
  {
LABEL_35:
    if ((v14 & 2) == 0) {
      goto LABEL_36;
    }
    goto LABEL_68;
  }
LABEL_67:
  double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 124), 0x1Bu);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 2) == 0)
  {
LABEL_36:
    if ((v14 & 0x40000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_69;
  }
LABEL_68:
  double result = PB::Writer::writeVarInt(this, *(void *)(v3 + 88), 0x1Cu);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x40000000) == 0)
  {
LABEL_37:
    if ((v14 & 0x1000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_70;
  }
LABEL_69:
  double result = PB::Writer::write(this, *(unsigned char *)(v3 + 210), 0x1Du);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x1000) == 0)
  {
LABEL_38:
    if ((v14 & 0x200) == 0) {
      goto LABEL_39;
    }
    goto LABEL_71;
  }
LABEL_70:
  double result = PB::Writer::write(this, *(float *)(v3 + 144), 0x1Eu);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x200) == 0)
  {
LABEL_39:
    if ((v14 & 0x40) == 0) {
      goto LABEL_40;
    }
    goto LABEL_72;
  }
LABEL_71:
  double result = PB::Writer::write(this, *(float *)(v3 + 132), 0x1Fu);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x40) == 0)
  {
LABEL_40:
    if ((v14 & 0x200000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_73;
  }
LABEL_72:
  double result = PB::Writer::write(this, *(float *)(v3 + 120), 0x20u);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x200000) == 0)
  {
LABEL_41:
    if ((v14 & 0x400) == 0) {
      goto LABEL_42;
    }
LABEL_74:
    double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 136), 0x22u);
    if ((*(_DWORD *)(v3 + 212) & 0x800000) == 0) {
      return result;
    }
    goto LABEL_75;
  }
LABEL_73:
  double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 180), 0x21u);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x400) != 0) {
    goto LABEL_74;
  }
LABEL_42:
  if ((v14 & 0x800000) == 0) {
    return result;
  }
LABEL_75:
  unsigned int v15 = *(_DWORD *)(v3 + 188);

  return PB::Writer::writeVarInt(this, v15, 0x23u);
}

uint64_t sub_1016A962C(uint64_t result)
{
  *(void *)double result = &off_1023343D0;
  *(_DWORD *)(result + 96) = 0;
  return result;
}

void sub_1016A9654(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_1016A968C(uint64_t result, uint64_t a2)
{
  *(void *)double result = &off_1023343D0;
  *(_DWORD *)(result + 96) = 0;
  __int16 v2 = *(_WORD *)(a2 + 96);
  if ((v2 & 0x1000) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 88);
    __int16 v3 = 4096;
    *(_WORD *)(result + 96) = 4096;
    *(_DWORD *)(result + 88) = v4;
    __int16 v2 = *(_WORD *)(a2 + 96);
    if ((v2 & 0x800) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((*(_WORD *)(a2 + 96) & 0x800) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 84);
    v3 |= 0x800u;
    *(_WORD *)(result + 96) = v3;
    *(_DWORD *)(result + 84) = v5;
    __int16 v2 = *(_WORD *)(a2 + 96);
  }
LABEL_6:
  if ((v2 & 0x100) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 72);
    v3 |= 0x100u;
    *(_WORD *)(result + 96) = v3;
    *(_DWORD *)(result + 72) = v6;
    __int16 v2 = *(_WORD *)(a2 + 96);
    if ((v2 & 0x80) == 0)
    {
LABEL_8:
      if ((v2 & 0x8000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_23;
    }
  }
  else if ((v2 & 0x80) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 64);
  v3 |= 0x80u;
  *(_WORD *)(result + 96) = v3;
  *(void *)(result + 64) = v7;
  __int16 v2 = *(_WORD *)(a2 + 96);
  if ((v2 & 0x8000) == 0)
  {
LABEL_9:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  char v8 = *(unsigned char *)(a2 + 94);
  v3 |= 0x8000u;
  *(_WORD *)(result + 96) = v3;
  *(unsigned char *)(result + 94) = v8;
  __int16 v2 = *(_WORD *)(a2 + 96);
  if ((v2 & 0x4000) == 0)
  {
LABEL_10:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  char v9 = *(unsigned char *)(a2 + 93);
  v3 |= 0x4000u;
  *(_WORD *)(result + 96) = v3;
  *(unsigned char *)(result + 93) = v9;
  __int16 v2 = *(_WORD *)(a2 + 96);
  if ((v2 & 0x2000) == 0)
  {
LABEL_11:
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_25:
  char v10 = *(unsigned char *)(a2 + 92);
  v3 |= 0x2000u;
  *(_WORD *)(result + 96) = v3;
  *(unsigned char *)(result + 92) = v10;
  __int16 v2 = *(_WORD *)(a2 + 96);
  if ((v2 & 2) == 0)
  {
LABEL_12:
    if ((v2 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v11 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_WORD *)(result + 96) = v3;
  *(void *)(result + 16) = v11;
  __int16 v2 = *(_WORD *)(a2 + 96);
  if ((v2 & 8) == 0)
  {
LABEL_13:
    if ((v2 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t v12 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_WORD *)(result + 96) = v3;
  *(void *)(result + 32) = v12;
  __int16 v2 = *(_WORD *)(a2 + 96);
  if ((v2 & 0x10) == 0)
  {
LABEL_14:
    if ((v2 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t v13 = *(void *)(a2 + 40);
  v3 |= 0x10u;
  *(_WORD *)(result + 96) = v3;
  *(void *)(result + 40) = v13;
  __int16 v2 = *(_WORD *)(a2 + 96);
  if ((v2 & 0x20) == 0)
  {
LABEL_15:
    if ((v2 & 0x40) == 0) {
      goto LABEL_16;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t v14 = *(void *)(a2 + 48);
  v3 |= 0x20u;
  *(_WORD *)(result + 96) = v3;
  *(void *)(result + 48) = v14;
  __int16 v2 = *(_WORD *)(a2 + 96);
  if ((v2 & 0x40) == 0)
  {
LABEL_16:
    if ((v2 & 1) == 0) {
      goto LABEL_17;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t v15 = *(void *)(a2 + 56);
  v3 |= 0x40u;
  *(_WORD *)(result + 96) = v3;
  *(void *)(result + 56) = v15;
  __int16 v2 = *(_WORD *)(a2 + 96);
  if ((v2 & 1) == 0)
  {
LABEL_17:
    if ((v2 & 0x400) == 0) {
      goto LABEL_18;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t v16 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(result + 96) = v3;
  *(void *)(result + 8) = v16;
  __int16 v2 = *(_WORD *)(a2 + 96);
  if ((v2 & 0x400) == 0)
  {
LABEL_18:
    if ((v2 & 0x200) == 0) {
      goto LABEL_19;
    }
    goto LABEL_33;
  }
LABEL_32:
  int v17 = *(_DWORD *)(a2 + 80);
  v3 |= 0x400u;
  *(_WORD *)(result + 96) = v3;
  *(_DWORD *)(result + 80) = v17;
  __int16 v2 = *(_WORD *)(a2 + 96);
  if ((v2 & 0x200) == 0)
  {
LABEL_19:
    if ((v2 & 4) == 0) {
      return result;
    }
LABEL_34:
    uint64_t v19 = *(void *)(a2 + 24);
    *(_WORD *)(result + 96) = v3 | 4;
    *(void *)(result + 24) = v19;
    return result;
  }
LABEL_33:
  int v18 = *(_DWORD *)(a2 + 76);
  v3 |= 0x200u;
  *(_WORD *)(result + 96) = v3;
  *(_DWORD *)(result + 76) = v18;
  if ((*(_WORD *)(a2 + 96) & 4) != 0) {
    goto LABEL_34;
  }
  return result;
}

uint64_t sub_1016A9878(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 96);
  if (v5)
  {
    PB::TextFormatter::format(this, "armedDuration", *(void *)(a1 + 8));
    __int16 v5 = *(_WORD *)(a1 + 96);
    if ((v5 & 0x100) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_23;
    }
  }
  else if ((*(_WORD *)(a1 + 96) & 0x100) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "armedDurationThreshold", *(float *)(a1 + 72));
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 2) == 0)
  {
LABEL_4:
    if ((v5 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "armedDurationThresholdTimestamp", *(void *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 4) == 0)
  {
LABEL_5:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "btHint", *(void *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 8) == 0)
  {
LABEL_6:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "epochFirstTimestamp", *(void *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 0x10) == 0)
  {
LABEL_7:
    if ((v5 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "epochLastTimestamp", *(void *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 0x20) == 0)
  {
LABEL_8:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(this, "firstTriggerTimestamp", *(void *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 0x2000) == 0)
  {
LABEL_9:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "isBTHintDetected", *(unsigned char *)(a1 + 92));
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 0x4000) == 0)
  {
LABEL_10:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(this, "isClusterInBeginningOfDrive", *(unsigned char *)(a1 + 93));
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 0x8000) == 0)
  {
LABEL_11:
    if ((v5 & 0x40) == 0) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "isTriggerCluster", *(unsigned char *)(a1 + 94));
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 0x40) == 0)
  {
LABEL_12:
    if ((v5 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(this, "lastTriggerTimestamp", *(void *)(a1 + 56));
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 0x200) == 0)
  {
LABEL_13:
    if ((v5 & 0x400) == 0) {
      goto LABEL_14;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(this, "numTriggersInEpoch", *(_DWORD *)(a1 + 76));
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 0x400) == 0)
  {
LABEL_14:
    if ((v5 & 0x800) == 0) {
      goto LABEL_15;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(this, "numTriggersInWindow", *(_DWORD *)(a1 + 80));
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 0x800) == 0)
  {
LABEL_15:
    if ((v5 & 0x80) == 0) {
      goto LABEL_16;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(this, "numTriggersThreshold", *(_DWORD *)(a1 + 84));
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 0x80) == 0)
  {
LABEL_16:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
LABEL_35:
  PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 64));
  if ((*(_WORD *)(a1 + 96) & 0x1000) != 0) {
LABEL_17:
  }
    PB::TextFormatter::format(this, "windowDuration", *(_DWORD *)(a1 + 88));
LABEL_18:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_1016A9ABC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((int)(v11 >> 3) > 300)
      {
        switch((int)v20)
        {
          case 301:
            *(_WORD *)(a1 + 96) |= 8u;
            unint64_t v27 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v28 = *(void *)this;
            if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
            {
              char v104 = 0;
              unsigned int v105 = 0;
              uint64_t v31 = 0;
              if (v2 <= v27) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v27)
                {
                  uint64_t v31 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_223;
                }
                unint64_t v106 = v27++;
                char v107 = *(unsigned char *)(v28 + v106);
                *((void *)this + 1) = v27;
                v31 |= (unint64_t)(v107 & 0x7F) << v104;
                if ((v107 & 0x80) == 0) {
                  break;
                }
                v104 += 7;
                BOOL v14 = v105++ > 8;
                if (v14)
                {
                  uint64_t v31 = 0;
LABEL_222:
                  unint64_t v2 = v106 + 1;
                  goto LABEL_223;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v31 = 0;
              }
              goto LABEL_222;
            }
            char v29 = 0;
            unsigned int v30 = 0;
            uint64_t v31 = 0;
            do
            {
              unint64_t v2 = v27 + 1;
              *((void *)this + 1) = v27 + 1;
              char v32 = *(unsigned char *)(v28 + v27);
              v31 |= (unint64_t)(v32 & 0x7F) << v29;
              if ((v32 & 0x80) == 0) {
                goto LABEL_223;
              }
              v29 += 7;
              unint64_t v27 = v2;
              BOOL v14 = v30++ > 8;
            }
            while (!v14);
            uint64_t v31 = 0;
LABEL_223:
            *(void *)(a1 + 32) = v31;
            break;
          case 302:
            *(_WORD *)(a1 + 96) |= 0x10u;
            unint64_t v45 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v46 = *(void *)this;
            if (v45 > 0xFFFFFFFFFFFFFFF5 || v45 + 10 > v2)
            {
              char v112 = 0;
              unsigned int v113 = 0;
              uint64_t v49 = 0;
              if (v2 <= v45) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v45)
                {
                  uint64_t v49 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_233;
                }
                unint64_t v114 = v45++;
                char v115 = *(unsigned char *)(v46 + v114);
                *((void *)this + 1) = v45;
                v49 |= (unint64_t)(v115 & 0x7F) << v112;
                if ((v115 & 0x80) == 0) {
                  break;
                }
                v112 += 7;
                BOOL v14 = v113++ > 8;
                if (v14)
                {
                  uint64_t v49 = 0;
LABEL_232:
                  unint64_t v2 = v114 + 1;
                  goto LABEL_233;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v49 = 0;
              }
              goto LABEL_232;
            }
            char v47 = 0;
            unsigned int v48 = 0;
            uint64_t v49 = 0;
            do
            {
              unint64_t v2 = v45 + 1;
              *((void *)this + 1) = v45 + 1;
              char v50 = *(unsigned char *)(v46 + v45);
              v49 |= (unint64_t)(v50 & 0x7F) << v47;
              if ((v50 & 0x80) == 0) {
                goto LABEL_233;
              }
              v47 += 7;
              unint64_t v45 = v2;
              BOOL v14 = v48++ > 8;
            }
            while (!v14);
            uint64_t v49 = 0;
LABEL_233:
            *(void *)(a1 + 40) = v49;
            break;
          case 303:
            *(_WORD *)(a1 + 96) |= 0x20u;
            unint64_t v51 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v52 = *(void *)this;
            if (v51 > 0xFFFFFFFFFFFFFFF5 || v51 + 10 > v2)
            {
              char v116 = 0;
              unsigned int v117 = 0;
              uint64_t v55 = 0;
              if (v2 <= v51) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v51)
                {
                  uint64_t v55 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_238;
                }
                unint64_t v118 = v51++;
                char v119 = *(unsigned char *)(v52 + v118);
                *((void *)this + 1) = v51;
                v55 |= (unint64_t)(v119 & 0x7F) << v116;
                if ((v119 & 0x80) == 0) {
                  break;
                }
                v116 += 7;
                BOOL v14 = v117++ > 8;
                if (v14)
                {
                  uint64_t v55 = 0;
LABEL_237:
                  unint64_t v2 = v118 + 1;
                  goto LABEL_238;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v55 = 0;
              }
              goto LABEL_237;
            }
            char v53 = 0;
            unsigned int v54 = 0;
            uint64_t v55 = 0;
            do
            {
              unint64_t v2 = v51 + 1;
              *((void *)this + 1) = v51 + 1;
              char v56 = *(unsigned char *)(v52 + v51);
              v55 |= (unint64_t)(v56 & 0x7F) << v53;
              if ((v56 & 0x80) == 0) {
                goto LABEL_238;
              }
              v53 += 7;
              unint64_t v51 = v2;
              BOOL v14 = v54++ > 8;
            }
            while (!v14);
            uint64_t v55 = 0;
LABEL_238:
            *(void *)(a1 + 48) = v55;
            break;
          case 304:
            *(_WORD *)(a1 + 96) |= 0x40u;
            unint64_t v57 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v58 = *(void *)this;
            if (v57 > 0xFFFFFFFFFFFFFFF5 || v57 + 10 > v2)
            {
              char v120 = 0;
              unsigned int v121 = 0;
              uint64_t v61 = 0;
              if (v2 <= v57) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v57)
                {
                  uint64_t v61 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_243;
                }
                unint64_t v122 = v57++;
                char v123 = *(unsigned char *)(v58 + v122);
                *((void *)this + 1) = v57;
                v61 |= (unint64_t)(v123 & 0x7F) << v120;
                if ((v123 & 0x80) == 0) {
                  break;
                }
                v120 += 7;
                BOOL v14 = v121++ > 8;
                if (v14)
                {
                  uint64_t v61 = 0;
LABEL_242:
                  unint64_t v2 = v122 + 1;
                  goto LABEL_243;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v61 = 0;
              }
              goto LABEL_242;
            }
            char v59 = 0;
            unsigned int v60 = 0;
            uint64_t v61 = 0;
            do
            {
              unint64_t v2 = v57 + 1;
              *((void *)this + 1) = v57 + 1;
              char v62 = *(unsigned char *)(v58 + v57);
              v61 |= (unint64_t)(v62 & 0x7F) << v59;
              if ((v62 & 0x80) == 0) {
                goto LABEL_243;
              }
              v59 += 7;
              unint64_t v57 = v2;
              BOOL v14 = v60++ > 8;
            }
            while (!v14);
            uint64_t v61 = 0;
LABEL_243:
            *(void *)(a1 + 56) = v61;
            break;
          case 305:
            *(_WORD *)(a1 + 96) |= 1u;
            unint64_t v63 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v64 = *(void *)this;
            if (v63 > 0xFFFFFFFFFFFFFFF5 || v63 + 10 > v2)
            {
              char v124 = 0;
              unsigned int v125 = 0;
              uint64_t v67 = 0;
              if (v2 <= v63) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v63)
                {
                  uint64_t v67 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_248;
                }
                unint64_t v126 = v63++;
                char v127 = *(unsigned char *)(v64 + v126);
                *((void *)this + 1) = v63;
                v67 |= (unint64_t)(v127 & 0x7F) << v124;
                if ((v127 & 0x80) == 0) {
                  break;
                }
                v124 += 7;
                BOOL v14 = v125++ > 8;
                if (v14)
                {
                  uint64_t v67 = 0;
LABEL_247:
                  unint64_t v2 = v126 + 1;
                  goto LABEL_248;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v67 = 0;
              }
              goto LABEL_247;
            }
            char v65 = 0;
            unsigned int v66 = 0;
            uint64_t v67 = 0;
            do
            {
              unint64_t v2 = v63 + 1;
              *((void *)this + 1) = v63 + 1;
              char v68 = *(unsigned char *)(v64 + v63);
              v67 |= (unint64_t)(v68 & 0x7F) << v65;
              if ((v68 & 0x80) == 0) {
                goto LABEL_248;
              }
              v65 += 7;
              unint64_t v63 = v2;
              BOOL v14 = v66++ > 8;
            }
            while (!v14);
            uint64_t v67 = 0;
LABEL_248:
            *(void *)(a1 + 8) = v67;
            break;
          case 306:
            *(_WORD *)(a1 + 96) |= 0x400u;
            unint64_t v69 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v70 = *(void *)this;
            if (v69 > 0xFFFFFFFFFFFFFFF5 || v69 + 10 > v2)
            {
              char v128 = 0;
              unsigned int v129 = 0;
              uint64_t v73 = 0;
              if (v2 <= v69) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v69)
                {
                  LODWORD(v73) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_253;
                }
                unint64_t v130 = v69++;
                char v131 = *(unsigned char *)(v70 + v130);
                *((void *)this + 1) = v69;
                v73 |= (unint64_t)(v131 & 0x7F) << v128;
                if ((v131 & 0x80) == 0) {
                  break;
                }
                v128 += 7;
                BOOL v14 = v129++ > 8;
                if (v14)
                {
                  LODWORD(v73) = 0;
LABEL_252:
                  unint64_t v2 = v130 + 1;
                  goto LABEL_253;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v73) = 0;
              }
              goto LABEL_252;
            }
            char v71 = 0;
            unsigned int v72 = 0;
            uint64_t v73 = 0;
            do
            {
              unint64_t v2 = v69 + 1;
              *((void *)this + 1) = v69 + 1;
              char v74 = *(unsigned char *)(v70 + v69);
              v73 |= (unint64_t)(v74 & 0x7F) << v71;
              if ((v74 & 0x80) == 0) {
                goto LABEL_253;
              }
              v71 += 7;
              unint64_t v69 = v2;
              BOOL v14 = v72++ > 8;
            }
            while (!v14);
            LODWORD(v73) = 0;
LABEL_253:
            *(_DWORD *)(a1 + 80) = v73;
            break;
          case 307:
            *(_WORD *)(a1 + 96) |= 0x200u;
            unint64_t v75 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v76 = *(void *)this;
            if (v75 > 0xFFFFFFFFFFFFFFF5 || v75 + 10 > v2)
            {
              char v132 = 0;
              unsigned int v133 = 0;
              uint64_t v79 = 0;
              if (v2 <= v75) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v75)
                {
                  LODWORD(v79) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_258;
                }
                unint64_t v134 = v75++;
                char v135 = *(unsigned char *)(v76 + v134);
                *((void *)this + 1) = v75;
                v79 |= (unint64_t)(v135 & 0x7F) << v132;
                if ((v135 & 0x80) == 0) {
                  break;
                }
                v132 += 7;
                BOOL v14 = v133++ > 8;
                if (v14)
                {
                  LODWORD(v79) = 0;
LABEL_257:
                  unint64_t v2 = v134 + 1;
                  goto LABEL_258;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v79) = 0;
              }
              goto LABEL_257;
            }
            char v77 = 0;
            unsigned int v78 = 0;
            uint64_t v79 = 0;
            do
            {
              unint64_t v2 = v75 + 1;
              *((void *)this + 1) = v75 + 1;
              char v80 = *(unsigned char *)(v76 + v75);
              v79 |= (unint64_t)(v80 & 0x7F) << v77;
              if ((v80 & 0x80) == 0) {
                goto LABEL_258;
              }
              v77 += 7;
              unint64_t v75 = v2;
              BOOL v14 = v78++ > 8;
            }
            while (!v14);
            LODWORD(v79) = 0;
LABEL_258:
            *(_DWORD *)(a1 + 76) = v79;
            break;
          case 308:
            *(_WORD *)(a1 + 96) |= 4u;
            unint64_t v81 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v82 = *(void *)this;
            if (v81 > 0xFFFFFFFFFFFFFFF5 || v81 + 10 > v2)
            {
              char v136 = 0;
              unsigned int v137 = 0;
              uint64_t v85 = 0;
              if (v2 <= v81) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v81)
                {
                  uint64_t v85 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_263;
                }
                unint64_t v138 = v81++;
                char v139 = *(unsigned char *)(v82 + v138);
                *((void *)this + 1) = v81;
                v85 |= (unint64_t)(v139 & 0x7F) << v136;
                if ((v139 & 0x80) == 0) {
                  break;
                }
                v136 += 7;
                BOOL v14 = v137++ > 8;
                if (v14)
                {
                  uint64_t v85 = 0;
LABEL_262:
                  unint64_t v2 = v138 + 1;
                  goto LABEL_263;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v85 = 0;
              }
              goto LABEL_262;
            }
            char v83 = 0;
            unsigned int v84 = 0;
            uint64_t v85 = 0;
            do
            {
              unint64_t v2 = v81 + 1;
              *((void *)this + 1) = v81 + 1;
              char v86 = *(unsigned char *)(v82 + v81);
              v85 |= (unint64_t)(v86 & 0x7F) << v83;
              if ((v86 & 0x80) == 0) {
                goto LABEL_263;
              }
              v83 += 7;
              unint64_t v81 = v2;
              BOOL v14 = v84++ > 8;
            }
            while (!v14);
            uint64_t v85 = 0;
LABEL_263:
            *(void *)(a1 + 24) = v85;
            break;
          default:
            goto LABEL_121;
        }
      }
      else if ((int)v20 <= 200)
      {
        switch(v20)
        {
          case 'e':
            *(_WORD *)(a1 + 96) |= 0x1000u;
            unint64_t v87 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v88 = *(void *)this;
            if (v87 > 0xFFFFFFFFFFFFFFF5 || v87 + 10 > v2)
            {
              char v140 = 0;
              unsigned int v141 = 0;
              uint64_t v91 = 0;
              if (v2 <= v87) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v87)
                {
                  LODWORD(v91) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_268;
                }
                unint64_t v142 = v87++;
                char v143 = *(unsigned char *)(v88 + v142);
                *((void *)this + 1) = v87;
                v91 |= (unint64_t)(v143 & 0x7F) << v140;
                if ((v143 & 0x80) == 0) {
                  break;
                }
                v140 += 7;
                BOOL v14 = v141++ > 8;
                if (v14)
                {
                  LODWORD(v91) = 0;
                  goto LABEL_267;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v91) = 0;
              }
LABEL_267:
              unint64_t v2 = v142 + 1;
            }
            else
            {
              char v89 = 0;
              unsigned int v90 = 0;
              uint64_t v91 = 0;
              while (1)
              {
                unint64_t v2 = v87 + 1;
                *((void *)this + 1) = v87 + 1;
                char v92 = *(unsigned char *)(v88 + v87);
                v91 |= (unint64_t)(v92 & 0x7F) << v89;
                if ((v92 & 0x80) == 0) {
                  break;
                }
                v89 += 7;
                unint64_t v87 = v2;
                BOOL v14 = v90++ > 8;
                if (v14)
                {
                  LODWORD(v91) = 0;
                  break;
                }
              }
            }
LABEL_268:
            *(_DWORD *)(a1 + 88) = v91;
            break;
          case 'f':
            *(_WORD *)(a1 + 96) |= 0x800u;
            unint64_t v93 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v94 = *(void *)this;
            if (v93 > 0xFFFFFFFFFFFFFFF5 || v93 + 10 > v2)
            {
              char v144 = 0;
              unsigned int v145 = 0;
              uint64_t v97 = 0;
              if (v2 <= v93) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v93)
                {
                  LODWORD(v97) = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_273;
                }
                unint64_t v146 = v93++;
                char v147 = *(unsigned char *)(v94 + v146);
                *((void *)this + 1) = v93;
                v97 |= (unint64_t)(v147 & 0x7F) << v144;
                if ((v147 & 0x80) == 0) {
                  break;
                }
                v144 += 7;
                BOOL v14 = v145++ > 8;
                if (v14)
                {
                  LODWORD(v97) = 0;
                  goto LABEL_272;
                }
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v97) = 0;
              }
LABEL_272:
              unint64_t v2 = v146 + 1;
            }
            else
            {
              char v95 = 0;
              unsigned int v96 = 0;
              uint64_t v97 = 0;
              while (1)
              {
                unint64_t v2 = v93 + 1;
                *((void *)this + 1) = v93 + 1;
                char v98 = *(unsigned char *)(v94 + v93);
                v97 |= (unint64_t)(v98 & 0x7F) << v95;
                if ((v98 & 0x80) == 0) {
                  break;
                }
                v95 += 7;
                unint64_t v93 = v2;
                BOOL v14 = v96++ > 8;
                if (v14)
                {
                  LODWORD(v97) = 0;
                  break;
                }
              }
            }
LABEL_273:
            *(_DWORD *)(a1 + 84) = v97;
            break;
          case 'g':
            *(_WORD *)(a1 + 96) |= 0x100u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
            {
              *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v2);
              unint64_t v2 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v2;
            }
            else
            {
              *((unsigned char *)this + 24) = 1;
            }
            break;
          default:
LABEL_121:
            uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
            if (!result) {
              return result;
            }
            unint64_t v2 = *((void *)this + 1);
            break;
        }
      }
      else
      {
        switch((int)v20)
        {
          case 201:
            *(_WORD *)(a1 + 96) |= 0x80u;
            unint64_t v21 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v22 = *(void *)this;
            if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
            {
              char v100 = 0;
              unsigned int v101 = 0;
              uint64_t v25 = 0;
              if (v2 <= v21) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v21)
                {
                  uint64_t v25 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_218;
                }
                unint64_t v102 = v21++;
                char v103 = *(unsigned char *)(v22 + v102);
                *((void *)this + 1) = v21;
                v25 |= (unint64_t)(v103 & 0x7F) << v100;
                if ((v103 & 0x80) == 0) {
                  break;
                }
                v100 += 7;
                BOOL v14 = v101++ > 8;
                if (v14)
                {
                  uint64_t v25 = 0;
LABEL_217:
                  unint64_t v2 = v102 + 1;
                  goto LABEL_218;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v25 = 0;
              }
              goto LABEL_217;
            }
            char v23 = 0;
            unsigned int v24 = 0;
            uint64_t v25 = 0;
            do
            {
              unint64_t v2 = v21 + 1;
              *((void *)this + 1) = v21 + 1;
              char v26 = *(unsigned char *)(v22 + v21);
              v25 |= (unint64_t)(v26 & 0x7F) << v23;
              if ((v26 & 0x80) == 0) {
                goto LABEL_218;
              }
              v23 += 7;
              unint64_t v21 = v2;
              BOOL v14 = v24++ > 8;
            }
            while (!v14);
            uint64_t v25 = 0;
LABEL_218:
            *(void *)(a1 + 64) = v25;
            break;
          case 202:
            *(_WORD *)(a1 + 96) |= 0x8000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 >= *((void *)this + 2))
            {
              BOOL v34 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              int v33 = *(unsigned __int8 *)(*(void *)this + v2++);
              *((void *)this + 1) = v2;
              BOOL v34 = v33 != 0;
            }
            *(unsigned char *)(a1 + 94) = v34;
            break;
          case 203:
            *(_WORD *)(a1 + 96) |= 0x4000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 >= *((void *)this + 2))
            {
              BOOL v36 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              int v35 = *(unsigned __int8 *)(*(void *)this + v2++);
              *((void *)this + 1) = v2;
              BOOL v36 = v35 != 0;
            }
            *(unsigned char *)(a1 + 93) = v36;
            break;
          case 204:
            *(_WORD *)(a1 + 96) |= 0x2000u;
            unint64_t v2 = *((void *)this + 1);
            if (v2 >= *((void *)this + 2))
            {
              BOOL v38 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              int v37 = *(unsigned __int8 *)(*(void *)this + v2++);
              *((void *)this + 1) = v2;
              BOOL v38 = v37 != 0;
            }
            *(unsigned char *)(a1 + 92) = v38;
            break;
          case 205:
            *(_WORD *)(a1 + 96) |= 2u;
            unint64_t v39 = *((void *)this + 1);
            unint64_t v2 = *((void *)this + 2);
            uint64_t v40 = *(void *)this;
            if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
            {
              char v108 = 0;
              unsigned int v109 = 0;
              uint64_t v43 = 0;
              if (v2 <= v39) {
                unint64_t v2 = *((void *)this + 1);
              }
              while (1)
              {
                if (v2 == v39)
                {
                  uint64_t v43 = 0;
                  *((unsigned char *)this + 24) = 1;
                  goto LABEL_228;
                }
                unint64_t v110 = v39++;
                char v111 = *(unsigned char *)(v40 + v110);
                *((void *)this + 1) = v39;
                v43 |= (unint64_t)(v111 & 0x7F) << v108;
                if ((v111 & 0x80) == 0) {
                  break;
                }
                v108 += 7;
                BOOL v14 = v109++ > 8;
                if (v14)
                {
                  uint64_t v43 = 0;
LABEL_227:
                  unint64_t v2 = v110 + 1;
                  goto LABEL_228;
                }
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v43 = 0;
              }
              goto LABEL_227;
            }
            char v41 = 0;
            unsigned int v42 = 0;
            uint64_t v43 = 0;
            do
            {
              unint64_t v2 = v39 + 1;
              *((void *)this + 1) = v39 + 1;
              char v44 = *(unsigned char *)(v40 + v39);
              v43 |= (unint64_t)(v44 & 0x7F) << v41;
              if ((v44 & 0x80) == 0) {
                goto LABEL_228;
              }
              v41 += 7;
              unint64_t v39 = v2;
              BOOL v14 = v42++ > 8;
            }
            while (!v14);
            uint64_t v43 = 0;
LABEL_228:
            *(void *)(a1 + 16) = v43;
            break;
          default:
            goto LABEL_121;
        }
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_1016AA8E0(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 96);
  if ((v4 & 0x1000) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(result + 88), 0x65u);
    __int16 v4 = *(_WORD *)(v3 + 96);
    if ((v4 & 0x800) == 0)
    {
LABEL_3:
      if ((v4 & 0x100) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((*(_WORD *)(result + 96) & 0x800) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 84), 0x66u);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 0x100) == 0)
  {
LABEL_4:
    if ((v4 & 0x80) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72), 0x67u);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 0x80) == 0)
  {
LABEL_5:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 64), 0xC9u);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 0x8000) == 0)
  {
LABEL_6:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 94), 0xCAu);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 0x4000) == 0)
  {
LABEL_7:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 93), 0xCBu);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 0x2000) == 0)
  {
LABEL_8:
    if ((v4 & 2) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 92), 0xCCu);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 2) == 0)
  {
LABEL_9:
    if ((v4 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 16), 0xCDu);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 8) == 0)
  {
LABEL_10:
    if ((v4 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 32), 0x12Du);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 0x10) == 0)
  {
LABEL_11:
    if ((v4 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 40), 0x12Eu);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 0x20) == 0)
  {
LABEL_12:
    if ((v4 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 48), 0x12Fu);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 0x40) == 0)
  {
LABEL_13:
    if ((v4 & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 56), 0x130u);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 1) == 0)
  {
LABEL_14:
    if ((v4 & 0x400) == 0) {
      goto LABEL_15;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 8), 0x131u);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 0x400) == 0)
  {
LABEL_15:
    if ((v4 & 0x200) == 0) {
      goto LABEL_16;
    }
LABEL_32:
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 76), 0x133u);
    if ((*(_WORD *)(v3 + 96) & 4) == 0) {
      return result;
    }
    goto LABEL_33;
  }
LABEL_31:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 80), 0x132u);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 0x200) != 0) {
    goto LABEL_32;
  }
LABEL_16:
  if ((v4 & 4) == 0) {
    return result;
  }
LABEL_33:
  unint64_t v5 = *(void *)(v3 + 24);

  return PB::Writer::writeVarInt(this, v5, 0x134u);
}

double sub_1016AAAD8(uint64_t a1)
{
  *(void *)a1 = &off_102334408;
  *(_DWORD *)(a1 + 120) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)(a1 + 72) = 0;
  return result;
}

void sub_1016AAB14(PB::Base *this)
{
  *(void *)this = &off_102334408;
  unint64_t v2 = (void *)*((void *)this + 7);
  if (v2)
  {
    *((void *)this + 8) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 4);
  if (v3)
  {
    *((void *)this + 5) = v3;
    operator delete(v3);
  }
  __int16 v4 = (void *)*((void *)this + 1);
  if (v4)
  {
    *((void *)this + 2) = v4;
    operator delete(v4);
  }

  PB::Base::~Base(this);
}

void sub_1016AAB98(PB::Base *a1)
{
  sub_1016AAB14(a1);

  operator delete();
}

uint64_t sub_1016AABD0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 8) = 0u;
  __int16 v4 = (char *)(a1 + 8);
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)a1 = &off_102334408;
  *(_DWORD *)(a1 + 120) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 72) = 0;
  __int16 v5 = *(_WORD *)(a2 + 120);
  if ((v5 & 2) != 0)
  {
    uint64_t v7 = *(void *)(a2 + 88);
    __int16 v6 = 2;
    *(_WORD *)(a1 + 120) = 2;
    *(void *)(a1 + 88) = v7;
    __int16 v5 = *(_WORD *)(a2 + 120);
    if ((v5 & 0x200) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v6 = 0;
  if ((*(_WORD *)(a2 + 120) & 0x200) != 0)
  {
LABEL_5:
    char v8 = *(unsigned char *)(a2 + 118);
    v6 |= 0x200u;
    *(_WORD *)(a1 + 120) = v6;
    *(unsigned char *)(a1 + 118) = v8;
    __int16 v5 = *(_WORD *)(a2 + 120);
  }
LABEL_6:
  if (v5)
  {
    uint64_t v9 = *(void *)(a2 + 80);
    *(_WORD *)(a1 + 120) = v6 | 1;
    *(void *)(a1 + 80) = v9;
  }
  if (a1 != a2)
  {
    sub_1002DD194(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
    sub_1000FB43C((char *)(a1 + 56), *(char **)(a2 + 56), *(void *)(a2 + 64), (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 2);
    sub_1000FB43C((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
  }
  __int16 v10 = *(_WORD *)(a2 + 120);
  if ((v10 & 0x80) != 0)
  {
    char v13 = *(unsigned char *)(a2 + 116);
    *(_WORD *)(a1 + 120) |= 0x80u;
    *(unsigned char *)(a1 + 116) = v13;
    __int16 v10 = *(_WORD *)(a2 + 120);
    if ((v10 & 0x100) == 0)
    {
LABEL_12:
      if ((v10 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_21;
    }
  }
  else if ((*(_WORD *)(a2 + 120) & 0x100) == 0)
  {
    goto LABEL_12;
  }
  char v14 = *(unsigned char *)(a2 + 117);
  *(_WORD *)(a1 + 120) |= 0x100u;
  *(unsigned char *)(a1 + 117) = v14;
  __int16 v10 = *(_WORD *)(a2 + 120);
  if ((v10 & 4) == 0)
  {
LABEL_13:
    if ((v10 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_22;
  }
LABEL_21:
  int v15 = *(_DWORD *)(a2 + 96);
  *(_WORD *)(a1 + 120) |= 4u;
  *(_DWORD *)(a1 + 96) = v15;
  __int16 v10 = *(_WORD *)(a2 + 120);
  if ((v10 & 8) == 0)
  {
LABEL_14:
    if ((v10 & 0x40) == 0) {
      goto LABEL_15;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v16 = *(_DWORD *)(a2 + 100);
  *(_WORD *)(a1 + 120) |= 8u;
  *(_DWORD *)(a1 + 100) = v16;
  __int16 v10 = *(_WORD *)(a2 + 120);
  if ((v10 & 0x40) == 0)
  {
LABEL_15:
    if ((v10 & 0x20) == 0) {
      goto LABEL_16;
    }
LABEL_24:
    int v18 = *(_DWORD *)(a2 + 108);
    *(_WORD *)(a1 + 120) |= 0x20u;
    *(_DWORD *)(a1 + 108) = v18;
    if ((*(_WORD *)(a2 + 120) & 0x10) == 0) {
      return a1;
    }
    goto LABEL_17;
  }
LABEL_23:
  int v17 = *(_DWORD *)(a2 + 112);
  *(_WORD *)(a1 + 120) |= 0x40u;
  *(_DWORD *)(a1 + 112) = v17;
  __int16 v10 = *(_WORD *)(a2 + 120);
  if ((v10 & 0x20) != 0) {
    goto LABEL_24;
  }
LABEL_16:
  if ((v10 & 0x10) != 0)
  {
LABEL_17:
    int v11 = *(_DWORD *)(a2 + 104);
    *(_WORD *)(a1 + 120) |= 0x10u;
    *(_DWORD *)(a1 + 104) = v11;
  }
  return a1;
}

uint64_t sub_1016AADB8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 120);
  if (v5)
  {
    PB::TextFormatter::format(this, "avgHorizontalDecelMax", *(double *)(a1 + 80));
    __int16 v5 = *(_WORD *)(a1 + 120);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v5 & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "avgHorizontalDecelThresholdCoupled", *(float *)(a1 + 96));
  if ((*(_WORD *)(a1 + 120) & 8) != 0) {
LABEL_4:
  }
    PB::TextFormatter::format(this, "impactThresholdUncoupled", *(float *)(a1 + 100));
LABEL_5:
  __int16 v6 = *(double **)(a1 + 8);
  uint64_t v7 = *(double **)(a1 + 16);
  while (v6 != v7)
  {
    double v8 = *v6++;
    PB::TextFormatter::format(this, "inertialAccel", v8);
  }
  __int16 v9 = *(_WORD *)(a1 + 120);
  if ((v9 & 0x80) != 0)
  {
    PB::TextFormatter::format(this, "isMounted", *(unsigned char *)(a1 + 116));
    __int16 v9 = *(_WORD *)(a1 + 120);
    if ((v9 & 0x100) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_28;
    }
  }
  else if ((*(_WORD *)(a1 + 120) & 0x100) == 0)
  {
    goto LABEL_9;
  }
  PB::TextFormatter::format(this, "isSimulated", *(unsigned char *)(a1 + 117));
  __int16 v9 = *(_WORD *)(a1 + 120);
  if ((v9 & 0x10) == 0)
  {
LABEL_10:
    if ((v9 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_28:
  PB::TextFormatter::format(this, "nAccelGap", *(_DWORD *)(a1 + 104));
  if ((*(_WORD *)(a1 + 120) & 0x20) != 0) {
LABEL_11:
  }
    PB::TextFormatter::format(this, "numResets", *(_DWORD *)(a1 + 108));
LABEL_12:
  __int16 v10 = *(float **)(a1 + 32);
  int v11 = *(float **)(a1 + 40);
  while (v10 != v11)
  {
    float v12 = *v10++;
    PB::TextFormatter::format(this, "prevQ", v12);
  }
  char v13 = *(float **)(a1 + 56);
  char v14 = *(float **)(a1 + 64);
  while (v13 != v14)
  {
    float v15 = *v13++;
    PB::TextFormatter::format(this, "rawClampedAccel", v15);
  }
  __int16 v16 = *(_WORD *)(a1 + 120);
  if ((v16 & 0x200) != 0)
  {
    PB::TextFormatter::format(this, "shouldTrigger", *(unsigned char *)(a1 + 118));
    __int16 v16 = *(_WORD *)(a1 + 120);
    if ((v16 & 2) == 0)
    {
LABEL_18:
      if ((v16 & 0x40) == 0) {
        goto LABEL_20;
      }
      goto LABEL_19;
    }
  }
  else if ((v16 & 2) == 0)
  {
    goto LABEL_18;
  }
  PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 88));
  if ((*(_WORD *)(a1 + 120) & 0x40) != 0) {
LABEL_19:
  }
    PB::TextFormatter::format(this, "triggerPathBitmap", *(_DWORD *)(a1 + 112));
LABEL_20:

  return PB::TextFormatter::endObject(this);
}

BOOL sub_1016AAFD0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    double v8 = (void **)(a1 + 32);
    uint64_t v9 = a1 + 48;
    __int16 v10 = (void **)(a1 + 56);
    uint64_t v11 = a1 + 72;
    float v12 = (void **)(a1 + 8);
    uint64_t v13 = a1 + 24;
    while (1)
    {
      uint64_t v14 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v17 = 0;
      while (1)
      {
        unint64_t v18 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v19 = *(unsigned char *)(v14 + v2);
        v17 |= (unint64_t)(v19 & 0x7F) << v15;
        if ((v19 & 0x80) == 0) {
          break;
        }
        v15 += 7;
        unint64_t v2 = v18;
        BOOL v20 = v16++ > 8;
        if (v20) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v26 = v17 & 7;
      if (v26 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v17 >> 3))
      {
        case 1u:
          *(_WORD *)(a1 + 120) |= 2u;
          unint64_t v27 = *((void *)this + 1);
          unint64_t v28 = *((void *)this + 2);
          uint64_t v29 = *(void *)this;
          if (v27 <= 0xFFFFFFFFFFFFFFF5 && v27 + 10 <= v28)
          {
            char v30 = 0;
            unsigned int v31 = 0;
            uint64_t v32 = 0;
            do
            {
              unint64_t v33 = v27 + 1;
              *((void *)this + 1) = v27 + 1;
              char v34 = *(unsigned char *)(v29 + v27);
              v32 |= (unint64_t)(v34 & 0x7F) << v30;
              if ((v34 & 0x80) == 0) {
                goto LABEL_212;
              }
              v30 += 7;
              unint64_t v27 = v33;
              BOOL v20 = v31++ > 8;
            }
            while (!v20);
LABEL_146:
            uint64_t v32 = 0;
            goto LABEL_212;
          }
          char v116 = 0;
          unsigned int v117 = 0;
          uint64_t v32 = 0;
          if (v28 <= v27) {
            unint64_t v28 = *((void *)this + 1);
          }
          while (2)
          {
            if (v28 == v27)
            {
              uint64_t v32 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v118 = v27 + 1;
              char v119 = *(unsigned char *)(v29 + v27);
              *((void *)this + 1) = v118;
              v32 |= (unint64_t)(v119 & 0x7F) << v116;
              if (v119 < 0)
              {
                v116 += 7;
                unint64_t v27 = v118;
                BOOL v20 = v117++ > 8;
                if (v20) {
                  goto LABEL_146;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v32 = 0;
              }
            }
            break;
          }
LABEL_212:
          *(void *)(a1 + 88) = v32;
          goto LABEL_252;
        case 2u:
          *(_WORD *)(a1 + 120) |= 0x200u;
          unint64_t v35 = *((void *)this + 1);
          if (v35 >= *((void *)this + 2))
          {
            BOOL v38 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v36 = v35 + 1;
            int v37 = *(unsigned __int8 *)(*(void *)this + v35);
            *((void *)this + 1) = v36;
            BOOL v38 = v37 != 0;
          }
          *(unsigned char *)(a1 + 118) = v38;
          goto LABEL_252;
        case 3u:
          *(_WORD *)(a1 + 120) |= 1u;
          unint64_t v39 = *((void *)this + 1);
          if (v39 > 0xFFFFFFFFFFFFFFF7 || v39 + 8 > *((void *)this + 2)) {
            goto LABEL_248;
          }
          *(void *)(a1 + 80) = *(void *)(*(void *)this + v39);
          goto LABEL_231;
        case 4u:
          if (v26 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v40 = *((void *)this + 1);
            unint64_t v41 = *((void *)this + 2);
            while (v40 < v41 && !*((unsigned char *)this + 24))
            {
              uint64_t v43 = *(char **)(a1 + 16);
              unint64_t v42 = *(void *)(a1 + 24);
              if ((unint64_t)v43 >= v42)
              {
                unint64_t v45 = (char *)*v12;
                uint64_t v46 = (v43 - (unsigned char *)*v12) >> 3;
                unint64_t v47 = v46 + 1;
                if ((unint64_t)(v46 + 1) >> 61) {
                  goto LABEL_262;
                }
                uint64_t v48 = v42 - (void)v45;
                if (v48 >> 2 > v47) {
                  unint64_t v47 = v48 >> 2;
                }
                if ((unint64_t)v48 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v49 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v49 = v47;
                }
                if (v49)
                {
                  char v50 = (char *)sub_1000DA54C(v13, v49);
                  unint64_t v45 = *(char **)(a1 + 8);
                  uint64_t v43 = *(char **)(a1 + 16);
                }
                else
                {
                  char v50 = 0;
                }
                unint64_t v51 = &v50[8 * v46];
                *(void *)unint64_t v51 = 0;
                char v44 = v51 + 8;
                while (v43 != v45)
                {
                  uint64_t v52 = *((void *)v43 - 1);
                  v43 -= 8;
                  *((void *)v51 - 1) = v52;
                  v51 -= 8;
                }
                *(void *)(a1 + 8) = v51;
                *(void *)(a1 + 16) = v44;
                *(void *)(a1 + 24) = &v50[8 * v49];
                if (v45) {
                  operator delete(v45);
                }
              }
              else
              {
                *(void *)uint64_t v43 = 0;
                char v44 = v43 + 8;
              }
              *(void *)(a1 + 16) = v44;
              unint64_t v53 = *((void *)this + 1);
              if (v53 > 0xFFFFFFFFFFFFFFF7 || v53 + 8 > *((void *)this + 2)) {
                goto LABEL_180;
              }
              *(v44 - 1) = *(void *)(*(void *)this + v53);
              unint64_t v41 = *((void *)this + 2);
              unint64_t v40 = *((void *)this + 1) + 8;
              *((void *)this + 1) = v40;
            }
            goto LABEL_181;
          }
          unsigned int v121 = *(char **)(a1 + 16);
          unint64_t v120 = *(void *)(a1 + 24);
          if ((unint64_t)v121 >= v120)
          {
            char v140 = (char *)*v12;
            uint64_t v141 = (v121 - (unsigned char *)*v12) >> 3;
            unint64_t v142 = v141 + 1;
            if ((unint64_t)(v141 + 1) >> 61) {
LABEL_262:
            }
              sub_1001D7FD4();
            uint64_t v143 = v120 - (void)v140;
            if (v143 >> 2 > v142) {
              unint64_t v142 = v143 >> 2;
            }
            if ((unint64_t)v143 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v144 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v144 = v142;
            }
            if (v144)
            {
              unsigned int v145 = (char *)sub_1000DA54C(v13, v144);
              char v140 = *(char **)(a1 + 8);
              unsigned int v121 = *(char **)(a1 + 16);
            }
            else
            {
              unsigned int v145 = 0;
            }
            char v158 = &v145[8 * v141];
            *(void *)char v158 = 0;
            unint64_t v122 = v158 + 8;
            while (v121 != v140)
            {
              uint64_t v159 = *((void *)v121 - 1);
              v121 -= 8;
              *((void *)v158 - 1) = v159;
              v158 -= 8;
            }
            *(void *)(a1 + 8) = v158;
            *(void *)(a1 + 16) = v122;
            *(void *)(a1 + 24) = &v145[8 * v144];
            if (v140) {
              operator delete(v140);
            }
          }
          else
          {
            *(void *)unsigned int v121 = 0;
            unint64_t v122 = v121 + 8;
          }
          *(void *)(a1 + 16) = v122;
          unint64_t v160 = *((void *)this + 1);
          if (v160 <= 0xFFFFFFFFFFFFFFF7 && v160 + 8 <= *((void *)this + 2))
          {
            *(v122 - 1) = *(void *)(*(void *)this + v160);
LABEL_231:
            uint64_t v161 = *((void *)this + 1) + 8;
            goto LABEL_251;
          }
          goto LABEL_248;
        case 5u:
          if (v26 != 2)
          {
            char v124 = *(char **)(a1 + 64);
            unint64_t v123 = *(void *)(a1 + 72);
            if ((unint64_t)v124 >= v123)
            {
              unint64_t v146 = (char *)*v10;
              uint64_t v147 = (v124 - (unsigned char *)*v10) >> 2;
              unint64_t v148 = v147 + 1;
              if ((unint64_t)(v147 + 1) >> 62) {
LABEL_263:
              }
                sub_1001D7FD4();
              uint64_t v149 = v123 - (void)v146;
              if (v149 >> 1 > v148) {
                unint64_t v148 = v149 >> 1;
              }
              if ((unint64_t)v149 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v150 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v150 = v148;
              }
              if (v150)
              {
                unsigned int v151 = (char *)sub_10017EA34(v11, v150);
                unint64_t v146 = *(char **)(a1 + 56);
                char v124 = *(char **)(a1 + 64);
              }
              else
              {
                unsigned int v151 = 0;
              }
              char v162 = &v151[4 * v147];
              *(_DWORD *)char v162 = 0;
              unsigned int v125 = v162 + 4;
              while (v124 != v146)
              {
                int v163 = *((_DWORD *)v124 - 1);
                v124 -= 4;
                *((_DWORD *)v162 - 1) = v163;
                v162 -= 4;
              }
              *(void *)(a1 + 56) = v162;
              *(void *)(a1 + 64) = v125;
              *(void *)(a1 + 72) = &v151[4 * v150];
              if (v146) {
                operator delete(v146);
              }
            }
            else
            {
              *(_DWORD *)char v124 = 0;
              unsigned int v125 = v124 + 4;
            }
            *(void *)(a1 + 64) = v125;
            goto LABEL_246;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v54 = *((void *)this + 1);
          unint64_t v55 = *((void *)this + 2);
          while (v54 < v55 && !*((unsigned char *)this + 24))
          {
            unint64_t v57 = *(char **)(a1 + 64);
            unint64_t v56 = *(void *)(a1 + 72);
            if ((unint64_t)v57 >= v56)
            {
              char v59 = (char *)*v10;
              uint64_t v60 = (v57 - (unsigned char *)*v10) >> 2;
              unint64_t v61 = v60 + 1;
              if ((unint64_t)(v60 + 1) >> 62) {
                goto LABEL_263;
              }
              uint64_t v62 = v56 - (void)v59;
              if (v62 >> 1 > v61) {
                unint64_t v61 = v62 >> 1;
              }
              if ((unint64_t)v62 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v63 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v63 = v61;
              }
              if (v63)
              {
                uint64_t v64 = (char *)sub_10017EA34(v11, v63);
                char v59 = *(char **)(a1 + 56);
                unint64_t v57 = *(char **)(a1 + 64);
              }
              else
              {
                uint64_t v64 = 0;
              }
              char v65 = &v64[4 * v60];
              *(_DWORD *)char v65 = 0;
              uint64_t v58 = v65 + 4;
              while (v57 != v59)
              {
                int v66 = *((_DWORD *)v57 - 1);
                v57 -= 4;
                *((_DWORD *)v65 - 1) = v66;
                v65 -= 4;
              }
              *(void *)(a1 + 56) = v65;
              *(void *)(a1 + 64) = v58;
              *(void *)(a1 + 72) = &v64[4 * v63];
              if (v59) {
                operator delete(v59);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v57 = 0;
              uint64_t v58 = v57 + 4;
            }
            *(void *)(a1 + 64) = v58;
            unint64_t v67 = *((void *)this + 1);
            if (v67 > 0xFFFFFFFFFFFFFFFBLL || v67 + 4 > *((void *)this + 2)) {
              goto LABEL_180;
            }
            *(v58 - 1) = *(_DWORD *)(*(void *)this + v67);
            unint64_t v55 = *((void *)this + 2);
            unint64_t v54 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v54;
          }
          goto LABEL_181;
        case 6u:
          if (v26 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v68 = *((void *)this + 1);
            unint64_t v69 = *((void *)this + 2);
            while (v68 < v69 && !*((unsigned char *)this + 24))
            {
              char v71 = *(char **)(a1 + 40);
              unint64_t v70 = *(void *)(a1 + 48);
              if ((unint64_t)v71 >= v70)
              {
                uint64_t v73 = (char *)*v8;
                uint64_t v74 = (v71 - (unsigned char *)*v8) >> 2;
                unint64_t v75 = v74 + 1;
                if ((unint64_t)(v74 + 1) >> 62) {
                  goto LABEL_264;
                }
                uint64_t v76 = v70 - (void)v73;
                if (v76 >> 1 > v75) {
                  unint64_t v75 = v76 >> 1;
                }
                if ((unint64_t)v76 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v77 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v77 = v75;
                }
                if (v77)
                {
                  unsigned int v78 = (char *)sub_10017EA34(v9, v77);
                  uint64_t v73 = *(char **)(a1 + 32);
                  char v71 = *(char **)(a1 + 40);
                }
                else
                {
                  unsigned int v78 = 0;
                }
                uint64_t v79 = &v78[4 * v74];
                *(_DWORD *)uint64_t v79 = 0;
                unsigned int v72 = v79 + 4;
                while (v71 != v73)
                {
                  int v80 = *((_DWORD *)v71 - 1);
                  v71 -= 4;
                  *((_DWORD *)v79 - 1) = v80;
                  v79 -= 4;
                }
                *(void *)(a1 + 32) = v79;
                *(void *)(a1 + 40) = v72;
                *(void *)(a1 + 48) = &v78[4 * v77];
                if (v73) {
                  operator delete(v73);
                }
              }
              else
              {
                *(_DWORD *)char v71 = 0;
                unsigned int v72 = v71 + 4;
              }
              *(void *)(a1 + 40) = v72;
              unint64_t v81 = *((void *)this + 1);
              if (v81 > 0xFFFFFFFFFFFFFFFBLL || v81 + 4 > *((void *)this + 2))
              {
LABEL_180:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v72 - 1) = *(_DWORD *)(*(void *)this + v81);
              unint64_t v69 = *((void *)this + 2);
              unint64_t v68 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v68;
            }
LABEL_181:
            PB::Reader::recallMark();
          }
          else
          {
            char v127 = *(char **)(a1 + 40);
            unint64_t v126 = *(void *)(a1 + 48);
            if ((unint64_t)v127 >= v126)
            {
              uint64_t v152 = (char *)*v8;
              uint64_t v153 = (v127 - (unsigned char *)*v8) >> 2;
              unint64_t v154 = v153 + 1;
              if ((unint64_t)(v153 + 1) >> 62) {
LABEL_264:
              }
                sub_1001D7FD4();
              uint64_t v155 = v126 - (void)v152;
              if (v155 >> 1 > v154) {
                unint64_t v154 = v155 >> 1;
              }
              if ((unint64_t)v155 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v156 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v156 = v154;
              }
              if (v156)
              {
                uint64_t v157 = (char *)sub_10017EA34(v9, v156);
                uint64_t v152 = *(char **)(a1 + 32);
                char v127 = *(char **)(a1 + 40);
              }
              else
              {
                uint64_t v157 = 0;
              }
              unint64_t v164 = &v157[4 * v153];
              *(_DWORD *)unint64_t v164 = 0;
              unsigned int v125 = v164 + 4;
              while (v127 != v152)
              {
                int v165 = *((_DWORD *)v127 - 1);
                v127 -= 4;
                *((_DWORD *)v164 - 1) = v165;
                v164 -= 4;
              }
              *(void *)(a1 + 32) = v164;
              *(void *)(a1 + 40) = v125;
              *(void *)(a1 + 48) = &v157[4 * v156];
              if (v152) {
                operator delete(v152);
              }
            }
            else
            {
              *(_DWORD *)char v127 = 0;
              unsigned int v125 = v127 + 4;
            }
            *(void *)(a1 + 40) = v125;
LABEL_246:
            unint64_t v166 = *((void *)this + 1);
            if (v166 <= 0xFFFFFFFFFFFFFFFBLL && v166 + 4 <= *((void *)this + 2))
            {
              *(v125 - 1) = *(_DWORD *)(*(void *)this + v166);
LABEL_250:
              uint64_t v161 = *((void *)this + 1) + 4;
LABEL_251:
              *((void *)this + 1) = v161;
            }
            else
            {
LABEL_248:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_252:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        case 7u:
          *(_WORD *)(a1 + 120) |= 0x80u;
          unint64_t v82 = *((void *)this + 1);
          if (v82 >= *((void *)this + 2))
          {
            BOOL v85 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v83 = v82 + 1;
            int v84 = *(unsigned __int8 *)(*(void *)this + v82);
            *((void *)this + 1) = v83;
            BOOL v85 = v84 != 0;
          }
          *(unsigned char *)(a1 + 116) = v85;
          goto LABEL_252;
        case 8u:
          *(_WORD *)(a1 + 120) |= 0x100u;
          unint64_t v86 = *((void *)this + 1);
          if (v86 >= *((void *)this + 2))
          {
            BOOL v89 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v87 = v86 + 1;
            int v88 = *(unsigned __int8 *)(*(void *)this + v86);
            *((void *)this + 1) = v87;
            BOOL v89 = v88 != 0;
          }
          *(unsigned char *)(a1 + 117) = v89;
          goto LABEL_252;
        case 9u:
          *(_WORD *)(a1 + 120) |= 4u;
          unint64_t v90 = *((void *)this + 1);
          if (v90 > 0xFFFFFFFFFFFFFFFBLL || v90 + 4 > *((void *)this + 2)) {
            goto LABEL_248;
          }
          *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v90);
          goto LABEL_250;
        case 0xAu:
          *(_WORD *)(a1 + 120) |= 8u;
          unint64_t v91 = *((void *)this + 1);
          if (v91 > 0xFFFFFFFFFFFFFFFBLL || v91 + 4 > *((void *)this + 2)) {
            goto LABEL_248;
          }
          *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v91);
          goto LABEL_250;
        case 0xBu:
          *(_WORD *)(a1 + 120) |= 0x40u;
          unint64_t v92 = *((void *)this + 1);
          unint64_t v93 = *((void *)this + 2);
          uint64_t v94 = *(void *)this;
          if (v92 <= 0xFFFFFFFFFFFFFFF5 && v92 + 10 <= v93)
          {
            char v95 = 0;
            unsigned int v96 = 0;
            uint64_t v97 = 0;
            do
            {
              unint64_t v98 = v92 + 1;
              *((void *)this + 1) = v92 + 1;
              char v99 = *(unsigned char *)(v94 + v92);
              v97 |= (unint64_t)(v99 & 0x7F) << v95;
              if ((v99 & 0x80) == 0) {
                goto LABEL_215;
              }
              v95 += 7;
              unint64_t v92 = v98;
              BOOL v20 = v96++ > 8;
            }
            while (!v20);
LABEL_165:
            LODWORD(v97) = 0;
            goto LABEL_215;
          }
          char v128 = 0;
          unsigned int v129 = 0;
          uint64_t v97 = 0;
          if (v93 <= v92) {
            unint64_t v93 = *((void *)this + 1);
          }
          while (2)
          {
            if (v93 == v92)
            {
              LODWORD(v97) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v130 = v92 + 1;
              char v131 = *(unsigned char *)(v94 + v92);
              *((void *)this + 1) = v130;
              v97 |= (unint64_t)(v131 & 0x7F) << v128;
              if (v131 < 0)
              {
                v128 += 7;
                unint64_t v92 = v130;
                BOOL v20 = v129++ > 8;
                if (v20) {
                  goto LABEL_165;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v97) = 0;
              }
            }
            break;
          }
LABEL_215:
          *(_DWORD *)(a1 + 112) = v97;
          goto LABEL_252;
        case 0xCu:
          *(_WORD *)(a1 + 120) |= 0x20u;
          unint64_t v100 = *((void *)this + 1);
          unint64_t v101 = *((void *)this + 2);
          uint64_t v102 = *(void *)this;
          if (v100 <= 0xFFFFFFFFFFFFFFF5 && v100 + 10 <= v101)
          {
            char v103 = 0;
            unsigned int v104 = 0;
            uint64_t v105 = 0;
            do
            {
              unint64_t v106 = v100 + 1;
              *((void *)this + 1) = v100 + 1;
              char v107 = *(unsigned char *)(v102 + v100);
              v105 |= (unint64_t)(v107 & 0x7F) << v103;
              if ((v107 & 0x80) == 0) {
                goto LABEL_218;
              }
              v103 += 7;
              unint64_t v100 = v106;
              BOOL v20 = v104++ > 8;
            }
            while (!v20);
LABEL_172:
            LODWORD(v105) = 0;
            goto LABEL_218;
          }
          char v132 = 0;
          unsigned int v133 = 0;
          uint64_t v105 = 0;
          if (v101 <= v100) {
            unint64_t v101 = *((void *)this + 1);
          }
          while (2)
          {
            if (v101 == v100)
            {
              LODWORD(v105) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v134 = v100 + 1;
              char v135 = *(unsigned char *)(v102 + v100);
              *((void *)this + 1) = v134;
              v105 |= (unint64_t)(v135 & 0x7F) << v132;
              if (v135 < 0)
              {
                v132 += 7;
                unint64_t v100 = v134;
                BOOL v20 = v133++ > 8;
                if (v20) {
                  goto LABEL_172;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v105) = 0;
              }
            }
            break;
          }
LABEL_218:
          *(_DWORD *)(a1 + 108) = v105;
          goto LABEL_252;
        case 0xDu:
          *(_WORD *)(a1 + 120) |= 0x10u;
          unint64_t v108 = *((void *)this + 1);
          unint64_t v109 = *((void *)this + 2);
          uint64_t v110 = *(void *)this;
          if (v108 <= 0xFFFFFFFFFFFFFFF5 && v108 + 10 <= v109)
          {
            char v111 = 0;
            unsigned int v112 = 0;
            uint64_t v113 = 0;
            do
            {
              unint64_t v114 = v108 + 1;
              *((void *)this + 1) = v108 + 1;
              char v115 = *(unsigned char *)(v110 + v108);
              v113 |= (unint64_t)(v115 & 0x7F) << v111;
              if ((v115 & 0x80) == 0) {
                goto LABEL_221;
              }
              v111 += 7;
              unint64_t v108 = v114;
              BOOL v20 = v112++ > 8;
            }
            while (!v20);
LABEL_179:
            LODWORD(v113) = 0;
            goto LABEL_221;
          }
          char v136 = 0;
          unsigned int v137 = 0;
          uint64_t v113 = 0;
          if (v109 <= v108) {
            unint64_t v109 = *((void *)this + 1);
          }
          while (2)
          {
            if (v109 == v108)
            {
              LODWORD(v113) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v138 = v108 + 1;
              char v139 = *(unsigned char *)(v110 + v108);
              *((void *)this + 1) = v138;
              v113 |= (unint64_t)(v139 & 0x7F) << v136;
              if (v139 < 0)
              {
                v136 += 7;
                unint64_t v108 = v138;
                BOOL v20 = v137++ > 8;
                if (v20) {
                  goto LABEL_179;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v113) = 0;
              }
            }
            break;
          }
LABEL_221:
          *(_DWORD *)(a1 + 104) = v113;
          goto LABEL_252;
        default:
          if ((PB::Reader::skip(this, v17 >> 3, v26, 0) & 1) == 0) {
            return 0;
          }
          goto LABEL_252;
      }
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v17 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v23 = v2 + 1;
      char v24 = *(unsigned char *)(v14 + v2);
      *((void *)this + 1) = v23;
      v17 |= (unint64_t)(v24 & 0x7F) << v21;
      if ((v24 & 0x80) == 0) {
        goto LABEL_21;
      }
      v21 += 7;
      unint64_t v2 = v23;
      if (v22++ >= 9)
      {
LABEL_20:
        unint64_t v17 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_1016ABC60(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 120);
  if ((v4 & 2) == 0)
  {
    if ((*(_WORD *)(result + 120) & 0x200) == 0) {
      goto LABEL_3;
    }
LABEL_23:
    double result = PB::Writer::write(this, *(unsigned char *)(v3 + 118), 2u);
    if ((*(_WORD *)(v3 + 120) & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  double result = PB::Writer::writeVarInt(this, *(void *)(result + 88), 1u);
  __int16 v4 = *(_WORD *)(v3 + 120);
  if ((v4 & 0x200) != 0) {
    goto LABEL_23;
  }
LABEL_3:
  if (v4) {
LABEL_4:
  }
    double result = PB::Writer::write(this, *(double *)(v3 + 80), 3u);
LABEL_5:
  __int16 v5 = *(double **)(v3 + 8);
  __int16 v6 = *(double **)(v3 + 16);
  while (v5 != v6)
  {
    double v7 = *v5++;
    double result = PB::Writer::write(this, v7, 4u);
  }
  double v8 = *(float **)(v3 + 56);
  uint64_t v9 = *(float **)(v3 + 64);
  while (v8 != v9)
  {
    float v10 = *v8++;
    double result = PB::Writer::write(this, v10, 5u);
  }
  uint64_t v11 = *(float **)(v3 + 32);
  float v12 = *(float **)(v3 + 40);
  while (v11 != v12)
  {
    float v13 = *v11++;
    double result = PB::Writer::write(this, v13, 6u);
  }
  __int16 v14 = *(_WORD *)(v3 + 120);
  if ((v14 & 0x80) != 0)
  {
    double result = PB::Writer::write(this, *(unsigned char *)(v3 + 116), 7u);
    __int16 v14 = *(_WORD *)(v3 + 120);
    if ((v14 & 0x100) == 0)
    {
LABEL_16:
      if ((v14 & 4) == 0) {
        goto LABEL_17;
      }
      goto LABEL_27;
    }
  }
  else if ((*(_WORD *)(v3 + 120) & 0x100) == 0)
  {
    goto LABEL_16;
  }
  double result = PB::Writer::write(this, *(unsigned char *)(v3 + 117), 8u);
  __int16 v14 = *(_WORD *)(v3 + 120);
  if ((v14 & 4) == 0)
  {
LABEL_17:
    if ((v14 & 8) == 0) {
      goto LABEL_18;
    }
    goto LABEL_28;
  }
LABEL_27:
  double result = PB::Writer::write(this, *(float *)(v3 + 96), 9u);
  __int16 v14 = *(_WORD *)(v3 + 120);
  if ((v14 & 8) == 0)
  {
LABEL_18:
    if ((v14 & 0x40) == 0) {
      goto LABEL_19;
    }
    goto LABEL_29;
  }
LABEL_28:
  double result = PB::Writer::write(this, *(float *)(v3 + 100), 0xAu);
  __int16 v14 = *(_WORD *)(v3 + 120);
  if ((v14 & 0x40) == 0)
  {
LABEL_19:
    if ((v14 & 0x20) == 0) {
      goto LABEL_20;
    }
LABEL_30:
    double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 108), 0xCu);
    if ((*(_WORD *)(v3 + 120) & 0x10) == 0) {
      return result;
    }
    goto LABEL_31;
  }
LABEL_29:
  double result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 112), 0xBu);
  __int16 v14 = *(_WORD *)(v3 + 120);
  if ((v14 & 0x20) != 0) {
    goto LABEL_30;
  }
LABEL_20:
  if ((v14 & 0x10) == 0) {
    return result;
  }
LABEL_31:
  unsigned int v15 = *(_DWORD *)(v3 + 104);

  return PB::Writer::writeVarInt(this, v15, 0xDu);
}

uint64_t sub_1016ABE1C(uint64_t result)
{
  *(void *)double result = &off_102334440;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void sub_1016ABE44(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_1016ABE7C(uint64_t result, uint64_t a2)
{
  *(void *)double result = &off_102334440;
  *(_DWORD *)(result + 16) = 0;
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v2 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 16) = 1;
    *(void *)(result + 8) = v2;
  }
  return result;
}

uint64_t sub_1016ABEB8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 16)) {
    PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 8));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_1016ABF18(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 16) |= 1u;
        unint64_t v20 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
        uint64_t v21 = *(void *)this;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v3)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v24 = 0;
          if (v3 <= v20) {
            unint64_t v2 = *((void *)this + 1);
          }
          else {
            unint64_t v2 = *((void *)this + 2);
          }
          while (1)
          {
            if (v2 == v20)
            {
              uint64_t v24 = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_43;
            }
            unint64_t v29 = v20++;
            char v30 = *(unsigned char *)(v21 + v29);
            *((void *)this + 1) = v20;
            v24 |= (unint64_t)(v30 & 0x7F) << v27;
            if ((v30 & 0x80) == 0) {
              break;
            }
            v27 += 7;
            BOOL v14 = v28++ > 8;
            if (v14)
            {
              uint64_t v24 = 0;
              goto LABEL_42;
            }
          }
          if (*((unsigned char *)this + 24)) {
            uint64_t v24 = 0;
          }
LABEL_42:
          unint64_t v2 = v29 + 1;
        }
        else
        {
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          while (1)
          {
            unint64_t v2 = v20 + 1;
            *((void *)this + 1) = v20 + 1;
            char v25 = *(unsigned char *)(v21 + v20);
            v24 |= (unint64_t)(v25 & 0x7F) << v22;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v22 += 7;
            unint64_t v20 = v2;
            BOOL v14 = v23++ > 8;
            if (v14)
            {
              uint64_t v24 = 0;
              break;
            }
          }
        }
LABEL_43:
        *(void *)(a1 + 8) = v24;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
      }
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_1016AC150(uint64_t result, PB::Writer *this)
{
  if (*(unsigned char *)(result + 16)) {
    return PB::Writer::writeVarInt(this, *(void *)(result + 8), 1u);
  }
  return result;
}

void *sub_1016AC170(void *result)
{
  *uint64_t result = &off_102334478;
  *(void *)((char *)result + 164) = 0;
  return result;
}

void sub_1016AC198(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_1016AC1D0(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102334478;
  *(void *)(result + 164) = 0;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x100000000) != 0)
  {
    char v4 = *(unsigned char *)(a2 + 160);
    unint64_t v3 = (unint64_t)&_mh_execute_header;
    *(void *)(result + 164) = &_mh_execute_header;
    *(unsigned char *)(result + 160) = v4;
    uint64_t v2 = *(void *)(a2 + 164);
    if ((v2 & 0x100000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  unint64_t v3 = 0;
  if ((v2 & 0x100000) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 112);
    v3 |= 0x100000uLL;
    *(void *)(result + 164) = v3;
    *(_DWORD *)(result + 112) = v5;
    uint64_t v2 = *(void *)(a2 + 164);
  }
LABEL_6:
  if ((v2 & 0x80000) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 108);
    v3 |= 0x80000uLL;
    *(void *)(result + 164) = v3;
    *(_DWORD *)(result + 108) = v6;
    uint64_t v2 = *(void *)(a2 + 164);
    if ((v2 & 0x1000000) == 0)
    {
LABEL_8:
      if ((v2 & 0x20000000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_40;
    }
  }
  else if ((v2 & 0x1000000) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 128);
  v3 |= 0x1000000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 128) = v7;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x20000000) == 0)
  {
LABEL_9:
    if ((v2 & 0x4000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_41;
  }
LABEL_40:
  int v8 = *(_DWORD *)(a2 + 148);
  v3 |= 0x20000000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 148) = v8;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_10:
    if ((v2 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_42;
  }
LABEL_41:
  int v9 = *(_DWORD *)(a2 + 136);
  v3 |= 0x4000000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 136) = v9;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x80000000) == 0)
  {
LABEL_11:
    if ((v2 & 0x10000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_43;
  }
LABEL_42:
  int v10 = *(_DWORD *)(a2 + 156);
  v3 |= 0x80000000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 156) = v10;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x10000000) == 0)
  {
LABEL_12:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_44;
  }
LABEL_43:
  int v11 = *(_DWORD *)(a2 + 144);
  v3 |= 0x10000000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 144) = v11;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x200000) == 0)
  {
LABEL_13:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_45;
  }
LABEL_44:
  int v12 = *(_DWORD *)(a2 + 116);
  v3 |= 0x200000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 116) = v12;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x400000) == 0)
  {
LABEL_14:
    if ((v2 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_46;
  }
LABEL_45:
  int v13 = *(_DWORD *)(a2 + 120);
  v3 |= 0x400000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 120) = v13;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t v14 = *(void *)(a2 + 40);
  v3 |= 0x10uLL;
  *(void *)(result + 164) = v3;
  *(void *)(result + 40) = v14;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 8) == 0)
  {
LABEL_16:
    if ((v2 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t v15 = *(void *)(a2 + 32);
  v3 |= 8uLL;
  *(void *)(result + 164) = v3;
  *(void *)(result + 32) = v15;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 4) == 0)
  {
LABEL_17:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t v16 = *(void *)(a2 + 24);
  v3 |= 4uLL;
  *(void *)(result + 164) = v3;
  *(void *)(result + 24) = v16;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x8000) == 0)
  {
LABEL_18:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_50;
  }
LABEL_49:
  int v17 = *(_DWORD *)(a2 + 92);
  v3 |= 0x8000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 92) = v17;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x20000) == 0)
  {
LABEL_19:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_51;
  }
LABEL_50:
  int v18 = *(_DWORD *)(a2 + 100);
  v3 |= 0x20000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 100) = v18;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x10000) == 0)
  {
LABEL_20:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_52;
  }
LABEL_51:
  int v19 = *(_DWORD *)(a2 + 96);
  v3 |= 0x10000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 96) = v19;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x40000) == 0)
  {
LABEL_21:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_53;
  }
LABEL_52:
  int v20 = *(_DWORD *)(a2 + 104);
  v3 |= 0x40000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 104) = v20;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x4000) == 0)
  {
LABEL_22:
    if ((v2 & 0x40) == 0) {
      goto LABEL_23;
    }
    goto LABEL_54;
  }
LABEL_53:
  int v21 = *(_DWORD *)(a2 + 88);
  v3 |= 0x4000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 88) = v21;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x40) == 0)
  {
LABEL_23:
    if ((v2 & 0x80) == 0) {
      goto LABEL_24;
    }
    goto LABEL_55;
  }
LABEL_54:
  int v22 = *(_DWORD *)(a2 + 56);
  v3 |= 0x40uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 56) = v22;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x80) == 0)
  {
LABEL_24:
    if ((v2 & 0x800) == 0) {
      goto LABEL_25;
    }
    goto LABEL_56;
  }
LABEL_55:
  int v23 = *(_DWORD *)(a2 + 60);
  v3 |= 0x80uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 60) = v23;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x800) == 0)
  {
LABEL_25:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_57;
  }
LABEL_56:
  int v24 = *(_DWORD *)(a2 + 76);
  v3 |= 0x800uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 76) = v24;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x1000) == 0)
  {
LABEL_26:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_58;
  }
LABEL_57:
  int v25 = *(_DWORD *)(a2 + 80);
  v3 |= 0x1000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 80) = v25;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x2000) == 0)
  {
LABEL_27:
    if ((v2 & 0x100) == 0) {
      goto LABEL_28;
    }
    goto LABEL_59;
  }
LABEL_58:
  int v26 = *(_DWORD *)(a2 + 84);
  v3 |= 0x2000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 84) = v26;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x100) == 0)
  {
LABEL_28:
    if ((v2 & 0x200) == 0) {
      goto LABEL_29;
    }
    goto LABEL_60;
  }
LABEL_59:
  int v27 = *(_DWORD *)(a2 + 64);
  v3 |= 0x100uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 64) = v27;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x200) == 0)
  {
LABEL_29:
    if ((v2 & 0x400) == 0) {
      goto LABEL_30;
    }
    goto LABEL_61;
  }
LABEL_60:
  int v28 = *(_DWORD *)(a2 + 68);
  v3 |= 0x200uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 68) = v28;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x400) == 0)
  {
LABEL_30:
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_62;
  }
LABEL_61:
  int v29 = *(_DWORD *)(a2 + 72);
  v3 |= 0x400uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 72) = v29;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x8000000) == 0)
  {
LABEL_31:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_63;
  }
LABEL_62:
  int v30 = *(_DWORD *)(a2 + 140);
  v3 |= 0x8000000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 140) = v30;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x800000) == 0)
  {
LABEL_32:
    if ((v2 & 0x20) == 0) {
      goto LABEL_33;
    }
    goto LABEL_64;
  }
LABEL_63:
  int v31 = *(_DWORD *)(a2 + 124);
  v3 |= 0x800000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 124) = v31;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x20) == 0)
  {
LABEL_33:
    if ((v2 & 0x2000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_65;
  }
LABEL_64:
  uint64_t v32 = *(void *)(a2 + 48);
  v3 |= 0x20uLL;
  *(void *)(result + 164) = v3;
  *(void *)(result + 48) = v32;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x2000000) == 0)
  {
LABEL_34:
    if ((v2 & 0x40000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_66;
  }
LABEL_65:
  int v33 = *(_DWORD *)(a2 + 132);
  v3 |= 0x2000000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 132) = v33;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 0x40000000) == 0)
  {
LABEL_35:
    if ((v2 & 1) == 0) {
      goto LABEL_36;
    }
    goto LABEL_67;
  }
LABEL_66:
  int v34 = *(_DWORD *)(a2 + 152);
  v3 |= 0x40000000uLL;
  *(void *)(result + 164) = v3;
  *(_DWORD *)(result + 152) = v34;
  uint64_t v2 = *(void *)(a2 + 164);
  if ((v2 & 1) == 0)
  {
LABEL_36:
    if ((v2 & 2) == 0) {
      return result;
    }
LABEL_68:
    uint64_t v36 = *(void *)(a2 + 16);
    *(void *)(result + 164) = v3 | 2;
    *(void *)(result + 16) = v36;
    return result;
  }
LABEL_67:
  uint64_t v35 = *(void *)(a2 + 8);
  v3 |= 1uLL;
  *(void *)(result + 164) = v3;
  *(void *)(result + 8) = v35;
  if ((*(void *)(a2 + 164) & 2) != 0) {
    goto LABEL_68;
  }
  return result;
}

uint64_t sub_1016AC598(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x40) != 0)
  {
    PB::TextFormatter::format(this, "configAccelThresholdNorm", *(float *)(a1 + 56));
    uint64_t v5 = *(void *)(a1 + 164);
    if ((v5 & 0x80) == 0)
    {
LABEL_3:
      if ((v5 & 0x100) == 0) {
        goto LABEL_4;
      }
      goto LABEL_40;
    }
  }
  else if ((v5 & 0x80) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "configHardware", *(_DWORD *)(a1 + 60));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x100) == 0)
  {
LABEL_4:
    if ((v5 & 0x200) == 0) {
      goto LABEL_5;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "configIx", *(float *)(a1 + 64));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x200) == 0)
  {
LABEL_5:
    if ((v5 & 0x400) == 0) {
      goto LABEL_6;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(this, "configIy", *(float *)(a1 + 68));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x400) == 0)
  {
LABEL_6:
    if ((v5 & 0x800) == 0) {
      goto LABEL_7;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(this, "configIz", *(float *)(a1 + 72));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x800) == 0)
  {
LABEL_7:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(this, "configLx", *(float *)(a1 + 76));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x1000) == 0)
  {
LABEL_8:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(this, "configLy", *(float *)(a1 + 80));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x2000) == 0)
  {
LABEL_9:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_46;
  }
LABEL_45:
  PB::TextFormatter::format(this, "configLz", *(float *)(a1 + 84));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x4000) == 0)
  {
LABEL_10:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_47;
  }
LABEL_46:
  PB::TextFormatter::format(this, "configZgThreshold", *(float *)(a1 + 88));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x8000) == 0)
  {
LABEL_11:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_48;
  }
LABEL_47:
  PB::TextFormatter::format(this, "debugCountOfAccelDataDrop", *(_DWORD *)(a1 + 92));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x10000) == 0)
  {
LABEL_12:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(this, "debugCountOfDmDataDrop", *(_DWORD *)(a1 + 96));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x20000) == 0)
  {
LABEL_13:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_50;
  }
LABEL_49:
  PB::TextFormatter::format(this, "debugMaxTimeBetweenAccelSample", *(float *)(a1 + 100));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x40000) == 0)
  {
LABEL_14:
    if ((v5 & 1) == 0) {
      goto LABEL_15;
    }
    goto LABEL_51;
  }
LABEL_50:
  PB::TextFormatter::format(this, "debugMaxTimeBetweenDmSample", *(float *)(a1 + 104));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 1) == 0)
  {
LABEL_15:
    if ((v5 & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_52;
  }
LABEL_51:
  PB::TextFormatter::format(this, "epochFirstTimestamp", *(void *)(a1 + 8));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 2) == 0)
  {
LABEL_16:
    if ((v5 & 0x100000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_53;
  }
LABEL_52:
  PB::TextFormatter::format(this, "epochLastTimestamp", *(void *)(a1 + 16));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x100000000) == 0)
  {
LABEL_17:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_54;
  }
LABEL_53:
  PB::TextFormatter::format(this, "freefallTpQualifier", *(unsigned char *)(a1 + 160));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x80000) == 0)
  {
LABEL_18:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(this, "metaCountOfFreefallImpactPassed", *(_DWORD *)(a1 + 108));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x100000) == 0)
  {
LABEL_19:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_56;
  }
LABEL_55:
  PB::TextFormatter::format(this, "metaCountOfFreefallTimePassed", *(_DWORD *)(a1 + 112));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x200000) == 0)
  {
LABEL_20:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_57;
  }
LABEL_56:
  PB::TextFormatter::format(this, "metaCountOfSigImpact", *(_DWORD *)(a1 + 116));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x400000) == 0)
  {
LABEL_21:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_58;
  }
LABEL_57:
  PB::TextFormatter::format(this, "metaCountOfZgSegment", *(_DWORD *)(a1 + 120));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x800000) == 0)
  {
LABEL_22:
    if ((v5 & 4) == 0) {
      goto LABEL_23;
    }
    goto LABEL_59;
  }
LABEL_58:
  PB::TextFormatter::format(this, "metaCrossingCount", *(_DWORD *)(a1 + 124));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 4) == 0)
  {
LABEL_23:
    if ((v5 & 8) == 0) {
      goto LABEL_24;
    }
    goto LABEL_60;
  }
LABEL_59:
  PB::TextFormatter::format(this, "metaDtBwFirstAndLastFreeFall", *(void *)(a1 + 24));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 8) == 0)
  {
LABEL_24:
    if ((v5 & 0x10) == 0) {
      goto LABEL_25;
    }
    goto LABEL_61;
  }
LABEL_60:
  PB::TextFormatter::format(this, "metaDtBwFirstFreeFall", *(void *)(a1 + 32));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x10) == 0)
  {
LABEL_25:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_62;
  }
LABEL_61:
  PB::TextFormatter::format(this, "metaDtBwFirstSigImpact", *(void *)(a1 + 40));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_63;
  }
LABEL_62:
  PB::TextFormatter::format(this, "metaFreefallTime", *(float *)(a1 + 128));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_64;
  }
LABEL_63:
  PB::TextFormatter::format(this, "metaFreefallTimeForImpact", *(float *)(a1 + 132));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_65;
  }
LABEL_64:
  PB::TextFormatter::format(this, "metaMaxOfAccel", *(float *)(a1 + 136));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_66;
  }
LABEL_65:
  PB::TextFormatter::format(this, "metaMaxPower", *(float *)(a1 + 140));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_30:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_67;
  }
LABEL_66:
  PB::TextFormatter::format(this, "metaMaxZgSegmentTime", *(float *)(a1 + 144));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v5 & 0x40000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_68;
  }
LABEL_67:
  PB::TextFormatter::format(this, "metaNormOfAccel", *(float *)(a1 + 148));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x40000000) == 0)
  {
LABEL_32:
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_69;
  }
LABEL_68:
  PB::TextFormatter::format(this, "metaNormOfImpact", *(float *)(a1 + 152));
  uint64_t v5 = *(void *)(a1 + 164);
  if ((v5 & 0x80000000) == 0)
  {
LABEL_33:
    if ((v5 & 0x20) == 0) {
      goto LABEL_35;
    }
    goto LABEL_34;
  }
LABEL_69:
  PB::TextFormatter::format(this, "metaTotalZgTime", *(float *)(a1 + 156));
  if ((*(void *)(a1 + 164) & 0x20) != 0) {
LABEL_34:
  }
    PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 48));
LABEL_35:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_1016AC9FC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          unint64_t v20 = v11 >> 3;
          switch((v11 >> 3))
          {
            case 1u:
              *(void *)(a1 + 164) |= (unint64_t)&_mh_execute_header;
              unint64_t v21 = *((void *)this + 1);
              if (v21 >= *((void *)this + 2))
              {
                BOOL v24 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                unint64_t v22 = v21 + 1;
                int v23 = *(unsigned __int8 *)(*(void *)this + v21);
                *((void *)this + 1) = v22;
                BOOL v24 = v23 != 0;
              }
              *(unsigned char *)(a1 + 160) = v24;
              goto LABEL_282;
            case 2u:
              *(void *)(a1 + 164) |= 0x100000uLL;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v34 = *((void *)this + 2);
              uint64_t v35 = *(void *)this;
              if (v33 <= 0xFFFFFFFFFFFFFFF5 && v33 + 10 <= v34)
              {
                char v36 = 0;
                unsigned int v37 = 0;
                uint64_t v38 = 0;
                do
                {
                  unint64_t v39 = v33 + 1;
                  *((void *)this + 1) = v33 + 1;
                  char v40 = *(unsigned char *)(v35 + v33);
                  v38 |= (unint64_t)(v40 & 0x7F) << v36;
                  if ((v40 & 0x80) == 0) {
                    goto LABEL_294;
                  }
                  v36 += 7;
                  unint64_t v33 = v39;
                  BOOL v14 = v37++ > 8;
                }
                while (!v14);
LABEL_195:
                LODWORD(v38) = 0;
                goto LABEL_294;
              }
              char v160 = 0;
              unsigned int v161 = 0;
              uint64_t v38 = 0;
              if (v34 <= v33) {
                unint64_t v34 = *((void *)this + 1);
              }
              while (2)
              {
                if (v34 == v33)
                {
                  LODWORD(v38) = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v162 = v33 + 1;
                  char v163 = *(unsigned char *)(v35 + v33);
                  *((void *)this + 1) = v162;
                  v38 |= (unint64_t)(v163 & 0x7F) << v160;
                  if (v163 < 0)
                  {
                    v160 += 7;
                    unint64_t v33 = v162;
                    BOOL v14 = v161++ > 8;
                    if (v14) {
                      goto LABEL_195;
                    }
                    continue;
                  }
                  if (*((unsigned char *)this + 24)) {
                    LODWORD(v38) = 0;
                  }
                }
                break;
              }
LABEL_294:
              *(_DWORD *)(a1 + 112) = v38;
              goto LABEL_282;
            case 3u:
              *(void *)(a1 + 164) |= 0x80000uLL;
              unint64_t v41 = *((void *)this + 1);
              unint64_t v42 = *((void *)this + 2);
              uint64_t v43 = *(void *)this;
              if (v41 <= 0xFFFFFFFFFFFFFFF5 && v41 + 10 <= v42)
              {
                char v44 = 0;
                unsigned int v45 = 0;
                uint64_t v46 = 0;
                do
                {
                  unint64_t v47 = v41 + 1;
                  *((void *)this + 1) = v41 + 1;
                  char v48 = *(unsigned char *)(v43 + v41);
                  v46 |= (unint64_t)(v48 & 0x7F) << v44;
                  if ((v48 & 0x80) == 0) {
                    goto LABEL_298;
                  }
                  v44 += 7;
                  unint64_t v41 = v47;
                  BOOL v14 = v45++ > 8;
                }
                while (!v14);
LABEL_202:
                LODWORD(v46) = 0;
                goto LABEL_298;
              }
              char v164 = 0;
              unsigned int v165 = 0;
              uint64_t v46 = 0;
              if (v42 <= v41) {
                unint64_t v42 = *((void *)this + 1);
              }
              while (2)
              {
                if (v42 == v41)
                {
                  LODWORD(v46) = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v166 = v41 + 1;
                  char v167 = *(unsigned char *)(v43 + v41);
                  *((void *)this + 1) = v166;
                  v46 |= (unint64_t)(v167 & 0x7F) << v164;
                  if (v167 < 0)
                  {
                    v164 += 7;
                    unint64_t v41 = v166;
                    BOOL v14 = v165++ > 8;
                    if (v14) {
                      goto LABEL_202;
                    }
                    continue;
                  }
                  if (*((unsigned char *)this + 24)) {
                    LODWORD(v46) = 0;
                  }
                }
                break;
              }
LABEL_298:
              *(_DWORD *)(a1 + 108) = v46;
              goto LABEL_282;
            case 4u:
              *(void *)(a1 + 164) |= 0x1000000uLL;
              unint64_t v49 = *((void *)this + 1);
              if (v49 > 0xFFFFFFFFFFFFFFFBLL || v49 + 4 > *((void *)this + 2)) {
                goto LABEL_170;
              }
              *(_DWORD *)(a1 + 128) = *(_DWORD *)(*(void *)this + v49);
              goto LABEL_281;
            case 5u:
              *(void *)(a1 + 164) |= 0x20000000uLL;
              unint64_t v50 = *((void *)this + 1);
              if (v50 > 0xFFFFFFFFFFFFFFFBLL || v50 + 4 > *((void *)this + 2)) {
                goto LABEL_170;
              }
              *(_DWORD *)(a1 + 148) = *(_DWORD *)(*(void *)this + v50);
              goto LABEL_281;
            case 6u:
              *(void *)(a1 + 164) |= 0x4000000uLL;
              unint64_t v51 = *((void *)this + 1);
              if (v51 > 0xFFFFFFFFFFFFFFFBLL || v51 + 4 > *((void *)this + 2)) {
                goto LABEL_170;
              }
              *(_DWORD *)(a1 + 136) = *(_DWORD *)(*(void *)this + v51);
              goto LABEL_281;
            case 7u:
              *(void *)(a1 + 164) |= 0x80000000uLL;
              unint64_t v52 = *((void *)this + 1);
              if (v52 > 0xFFFFFFFFFFFFFFFBLL || v52 + 4 > *((void *)this + 2)) {
                goto LABEL_170;
              }
              *(_DWORD *)(a1 + 156) = *(_DWORD *)(*(void *)this + v52);
              goto LABEL_281;
            case 8u:
              *(void *)(a1 + 164) |= 0x10000000uLL;
              unint64_t v53 = *((void *)this + 1);
              if (v53 > 0xFFFFFFFFFFFFFFFBLL || v53 + 4 > *((void *)this + 2)) {
                goto LABEL_170;
              }
              *(_DWORD *)(a1 + 144) = *(_DWORD *)(*(void *)this + v53);
              goto LABEL_281;
            case 9u:
              *(void *)(a1 + 164) |= 0x200000uLL;
              unint64_t v54 = *((void *)this + 1);
              unint64_t v55 = *((void *)this + 2);
              uint64_t v56 = *(void *)this;
              if (v54 <= 0xFFFFFFFFFFFFFFF5 && v54 + 10 <= v55)
              {
                char v57 = 0;
                unsigned int v58 = 0;
                uint64_t v59 = 0;
                do
                {
                  unint64_t v60 = v54 + 1;
                  *((void *)this + 1) = v54 + 1;
                  char v61 = *(unsigned char *)(v56 + v54);
                  v59 |= (unint64_t)(v61 & 0x7F) << v57;
                  if ((v61 & 0x80) == 0) {
                    goto LABEL_302;
                  }
                  v57 += 7;
                  unint64_t v54 = v60;
                  BOOL v14 = v58++ > 8;
                }
                while (!v14);
LABEL_209:
                LODWORD(v59) = 0;
                goto LABEL_302;
              }
              char v168 = 0;
              unsigned int v169 = 0;
              uint64_t v59 = 0;
              if (v55 <= v54) {
                unint64_t v55 = *((void *)this + 1);
              }
              while (2)
              {
                if (v55 == v54)
                {
                  LODWORD(v59) = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v170 = v54 + 1;
                  char v171 = *(unsigned char *)(v56 + v54);
                  *((void *)this + 1) = v170;
                  v59 |= (unint64_t)(v171 & 0x7F) << v168;
                  if (v171 < 0)
                  {
                    v168 += 7;
                    unint64_t v54 = v170;
                    BOOL v14 = v169++ > 8;
                    if (v14) {
                      goto LABEL_209;
                    }
                    continue;
                  }
                  if (*((unsigned char *)this + 24)) {
                    LODWORD(v59) = 0;
                  }
                }
                break;
              }
LABEL_302:
              *(_DWORD *)(a1 + 116) = v59;
              goto LABEL_282;
            case 0xAu:
              *(void *)(a1 + 164) |= 0x400000uLL;
              unint64_t v62 = *((void *)this + 1);
              unint64_t v63 = *((void *)this + 2);
              uint64_t v64 = *(void *)this;
              if (v62 <= 0xFFFFFFFFFFFFFFF5 && v62 + 10 <= v63)
              {
                char v65 = 0;
                unsigned int v66 = 0;
                uint64_t v67 = 0;
                do
                {
                  unint64_t v68 = v62 + 1;
                  *((void *)this + 1) = v62 + 1;
                  char v69 = *(unsigned char *)(v64 + v62);
                  v67 |= (unint64_t)(v69 & 0x7F) << v65;
                  if ((v69 & 0x80) == 0) {
                    goto LABEL_306;
                  }
                  v65 += 7;
                  unint64_t v62 = v68;
                  BOOL v14 = v66++ > 8;
                }
                while (!v14);
LABEL_216:
                LODWORD(v67) = 0;
                goto LABEL_306;
              }
              char v172 = 0;
              unsigned int v173 = 0;
              uint64_t v67 = 0;
              if (v63 <= v62) {
                unint64_t v63 = *((void *)this + 1);
              }
              while (2)
              {
                if (v63 == v62)
                {
                  LODWORD(v67) = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v174 = v62 + 1;
                  char v175 = *(unsigned char *)(v64 + v62);
                  *((void *)this + 1) = v174;
                  v67 |= (unint64_t)(v175 & 0x7F) << v172;
                  if (v175 < 0)
                  {
                    v172 += 7;
                    unint64_t v62 = v174;
                    BOOL v14 = v173++ > 8;
                    if (v14) {
                      goto LABEL_216;
                    }
                    continue;
                  }
                  if (*((unsigned char *)this + 24)) {
                    LODWORD(v67) = 0;
                  }
                }
                break;
              }
LABEL_306:
              *(_DWORD *)(a1 + 120) = v67;
              goto LABEL_282;
            case 0xBu:
              *(void *)(a1 + 164) |= 0x10uLL;
              unint64_t v70 = *((void *)this + 1);
              unint64_t v71 = *((void *)this + 2);
              uint64_t v72 = *(void *)this;
              if (v70 <= 0xFFFFFFFFFFFFFFF5 && v70 + 10 <= v71)
              {
                char v73 = 0;
                unsigned int v74 = 0;
                uint64_t v75 = 0;
                do
                {
                  unint64_t v76 = v70 + 1;
                  *((void *)this + 1) = v70 + 1;
                  char v77 = *(unsigned char *)(v72 + v70);
                  v75 |= (unint64_t)(v77 & 0x7F) << v73;
                  if ((v77 & 0x80) == 0) {
                    goto LABEL_310;
                  }
                  v73 += 7;
                  unint64_t v70 = v76;
                  BOOL v14 = v74++ > 8;
                }
                while (!v14);
LABEL_223:
                uint64_t v75 = 0;
                goto LABEL_310;
              }
              char v176 = 0;
              unsigned int v177 = 0;
              uint64_t v75 = 0;
              if (v71 <= v70) {
                unint64_t v71 = *((void *)this + 1);
              }
              while (2)
              {
                if (v71 == v70)
                {
                  uint64_t v75 = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v178 = v70 + 1;
                  char v179 = *(unsigned char *)(v72 + v70);
                  *((void *)this + 1) = v178;
                  v75 |= (unint64_t)(v179 & 0x7F) << v176;
                  if (v179 < 0)
                  {
                    v176 += 7;
                    unint64_t v70 = v178;
                    BOOL v14 = v177++ > 8;
                    if (v14) {
                      goto LABEL_223;
                    }
                    continue;
                  }
                  if (*((unsigned char *)this + 24)) {
                    uint64_t v75 = 0;
                  }
                }
                break;
              }
LABEL_310:
              *(void *)(a1 + 40) = v75;
              goto LABEL_282;
            case 0xCu:
              *(void *)(a1 + 164) |= 8uLL;
              unint64_t v78 = *((void *)this + 1);
              unint64_t v79 = *((void *)this + 2);
              uint64_t v80 = *(void *)this;
              if (v78 <= 0xFFFFFFFFFFFFFFF5 && v78 + 10 <= v79)
              {
                char v81 = 0;
                unsigned int v82 = 0;
                uint64_t v83 = 0;
                do
                {
                  unint64_t v84 = v78 + 1;
                  *((void *)this + 1) = v78 + 1;
                  char v85 = *(unsigned char *)(v80 + v78);
                  v83 |= (unint64_t)(v85 & 0x7F) << v81;
                  if ((v85 & 0x80) == 0) {
                    goto LABEL_314;
                  }
                  v81 += 7;
                  unint64_t v78 = v84;
                  BOOL v14 = v82++ > 8;
                }
                while (!v14);
LABEL_230:
                uint64_t v83 = 0;
                goto LABEL_314;
              }
              char v180 = 0;
              unsigned int v181 = 0;
              uint64_t v83 = 0;
              if (v79 <= v78) {
                unint64_t v79 = *((void *)this + 1);
              }
              while (2)
              {
                if (v79 == v78)
                {
                  uint64_t v83 = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v182 = v78 + 1;
                  char v183 = *(unsigned char *)(v80 + v78);
                  *((void *)this + 1) = v182;
                  v83 |= (unint64_t)(v183 & 0x7F) << v180;
                  if (v183 < 0)
                  {
                    v180 += 7;
                    unint64_t v78 = v182;
                    BOOL v14 = v181++ > 8;
                    if (v14) {
                      goto LABEL_230;
                    }
                    continue;
                  }
                  if (*((unsigned char *)this + 24)) {
                    uint64_t v83 = 0;
                  }
                }
                break;
              }
LABEL_314:
              *(void *)(a1 + 32) = v83;
              goto LABEL_282;
            case 0xDu:
              *(void *)(a1 + 164) |= 4uLL;
              unint64_t v86 = *((void *)this + 1);
              unint64_t v87 = *((void *)this + 2);
              uint64_t v88 = *(void *)this;
              if (v86 <= 0xFFFFFFFFFFFFFFF5 && v86 + 10 <= v87)
              {
                char v89 = 0;
                unsigned int v90 = 0;
                uint64_t v91 = 0;
                do
                {
                  unint64_t v92 = v86 + 1;
                  *((void *)this + 1) = v86 + 1;
                  char v93 = *(unsigned char *)(v88 + v86);
                  v91 |= (unint64_t)(v93 & 0x7F) << v89;
                  if ((v93 & 0x80) == 0) {
                    goto LABEL_318;
                  }
                  v89 += 7;
                  unint64_t v86 = v92;
                  BOOL v14 = v90++ > 8;
                }
                while (!v14);
LABEL_237:
                uint64_t v91 = 0;
                goto LABEL_318;
              }
              char v184 = 0;
              unsigned int v185 = 0;
              uint64_t v91 = 0;
              if (v87 <= v86) {
                unint64_t v87 = *((void *)this + 1);
              }
              while (2)
              {
                if (v87 == v86)
                {
                  uint64_t v91 = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v186 = v86 + 1;
                  char v187 = *(unsigned char *)(v88 + v86);
                  *((void *)this + 1) = v186;
                  v91 |= (unint64_t)(v187 & 0x7F) << v184;
                  if (v187 < 0)
                  {
                    v184 += 7;
                    unint64_t v86 = v186;
                    BOOL v14 = v185++ > 8;
                    if (v14) {
                      goto LABEL_237;
                    }
                    continue;
                  }
                  if (*((unsigned char *)this + 24)) {
                    uint64_t v91 = 0;
                  }
                }
                break;
              }
LABEL_318:
              *(void *)(a1 + 24) = v91;
              goto LABEL_282;
            case 0xEu:
              *(void *)(a1 + 164) |= 0x8000uLL;
              unint64_t v94 = *((void *)this + 1);
              unint64_t v95 = *((void *)this + 2);
              uint64_t v96 = *(void *)this;
              if (v94 <= 0xFFFFFFFFFFFFFFF5 && v94 + 10 <= v95)
              {
                char v97 = 0;
                unsigned int v98 = 0;
                uint64_t v99 = 0;
                do
                {
                  unint64_t v100 = v94 + 1;
                  *((void *)this + 1) = v94 + 1;
                  char v101 = *(unsigned char *)(v96 + v94);
                  v99 |= (unint64_t)(v101 & 0x7F) << v97;
                  if ((v101 & 0x80) == 0) {
                    goto LABEL_322;
                  }
                  v97 += 7;
                  unint64_t v94 = v100;
                  BOOL v14 = v98++ > 8;
                }
                while (!v14);
LABEL_244:
                LODWORD(v99) = 0;
                goto LABEL_322;
              }
              char v188 = 0;
              unsigned int v189 = 0;
              uint64_t v99 = 0;
              if (v95 <= v94) {
                unint64_t v95 = *((void *)this + 1);
              }
              while (2)
              {
                if (v95 == v94)
                {
                  LODWORD(v99) = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v190 = v94 + 1;
                  char v191 = *(unsigned char *)(v96 + v94);
                  *((void *)this + 1) = v190;
                  v99 |= (unint64_t)(v191 & 0x7F) << v188;
                  if (v191 < 0)
                  {
                    v188 += 7;
                    unint64_t v94 = v190;
                    BOOL v14 = v189++ > 8;
                    if (v14) {
                      goto LABEL_244;
                    }
                    continue;
                  }
                  if (*((unsigned char *)this + 24)) {
                    LODWORD(v99) = 0;
                  }
                }
                break;
              }
LABEL_322:
              *(_DWORD *)(a1 + 92) = v99;
              goto LABEL_282;
            case 0xFu:
              *(void *)(a1 + 164) |= 0x20000uLL;
              unint64_t v102 = *((void *)this + 1);
              if (v102 > 0xFFFFFFFFFFFFFFFBLL || v102 + 4 > *((void *)this + 2)) {
                goto LABEL_170;
              }
              *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v102);
              goto LABEL_281;
            case 0x10u:
              *(void *)(a1 + 164) |= 0x10000uLL;
              unint64_t v103 = *((void *)this + 1);
              unint64_t v104 = *((void *)this + 2);
              uint64_t v105 = *(void *)this;
              if (v103 <= 0xFFFFFFFFFFFFFFF5 && v103 + 10 <= v104)
              {
                char v106 = 0;
                unsigned int v107 = 0;
                uint64_t v108 = 0;
                do
                {
                  unint64_t v109 = v103 + 1;
                  *((void *)this + 1) = v103 + 1;
                  char v110 = *(unsigned char *)(v105 + v103);
                  v108 |= (unint64_t)(v110 & 0x7F) << v106;
                  if ((v110 & 0x80) == 0) {
                    goto LABEL_326;
                  }
                  v106 += 7;
                  unint64_t v103 = v109;
                  BOOL v14 = v107++ > 8;
                }
                while (!v14);
LABEL_251:
                LODWORD(v108) = 0;
                goto LABEL_326;
              }
              char v192 = 0;
              unsigned int v193 = 0;
              uint64_t v108 = 0;
              if (v104 <= v103) {
                unint64_t v104 = *((void *)this + 1);
              }
              while (2)
              {
                if (v104 == v103)
                {
                  LODWORD(v108) = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v194 = v103 + 1;
                  char v195 = *(unsigned char *)(v105 + v103);
                  *((void *)this + 1) = v194;
                  v108 |= (unint64_t)(v195 & 0x7F) << v192;
                  if (v195 < 0)
                  {
                    v192 += 7;
                    unint64_t v103 = v194;
                    BOOL v14 = v193++ > 8;
                    if (v14) {
                      goto LABEL_251;
                    }
                    continue;
                  }
                  if (*((unsigned char *)this + 24)) {
                    LODWORD(v108) = 0;
                  }
                }
                break;
              }
LABEL_326:
              *(_DWORD *)(a1 + 96) = v108;
              goto LABEL_282;
            case 0x11u:
              *(void *)(a1 + 164) |= 0x40000uLL;
              unint64_t v111 = *((void *)this + 1);
              if (v111 > 0xFFFFFFFFFFFFFFFBLL || v111 + 4 > *((void *)this + 2)) {
                goto LABEL_170;
              }
              *(_DWORD *)(a1 + 104) = *(_DWORD *)(*(void *)this + v111);
              goto LABEL_281;
            case 0x12u:
              *(void *)(a1 + 164) |= 0x4000uLL;
              unint64_t v112 = *((void *)this + 1);
              if (v112 > 0xFFFFFFFFFFFFFFFBLL || v112 + 4 > *((void *)this + 2)) {
                goto LABEL_170;
              }
              *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v112);
              goto LABEL_281;
            case 0x13u:
              *(void *)(a1 + 164) |= 0x40uLL;
              unint64_t v113 = *((void *)this + 1);
              if (v113 > 0xFFFFFFFFFFFFFFFBLL || v113 + 4 > *((void *)this + 2)) {
                goto LABEL_170;
              }
              *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v113);
              goto LABEL_281;
            case 0x14u:
              *(void *)(a1 + 164) |= 0x80uLL;
              unint64_t v114 = *((void *)this + 1);
              unint64_t v115 = *((void *)this + 2);
              uint64_t v116 = *(void *)this;
              if (v114 <= 0xFFFFFFFFFFFFFFF5 && v114 + 10 <= v115)
              {
                char v117 = 0;
                unsigned int v118 = 0;
                uint64_t v119 = 0;
                do
                {
                  unint64_t v120 = v114 + 1;
                  *((void *)this + 1) = v114 + 1;
                  char v121 = *(unsigned char *)(v116 + v114);
                  v119 |= (unint64_t)(v121 & 0x7F) << v117;
                  if ((v121 & 0x80) == 0) {
                    goto LABEL_330;
                  }
                  v117 += 7;
                  unint64_t v114 = v120;
                  BOOL v14 = v118++ > 8;
                }
                while (!v14);
LABEL_258:
                LODWORD(v119) = 0;
                goto LABEL_330;
              }
              char v196 = 0;
              unsigned int v197 = 0;
              uint64_t v119 = 0;
              if (v115 <= v114) {
                unint64_t v115 = *((void *)this + 1);
              }
              while (2)
              {
                if (v115 == v114)
                {
                  LODWORD(v119) = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v198 = v114 + 1;
                  char v199 = *(unsigned char *)(v116 + v114);
                  *((void *)this + 1) = v198;
                  v119 |= (unint64_t)(v199 & 0x7F) << v196;
                  if (v199 < 0)
                  {
                    v196 += 7;
                    unint64_t v114 = v198;
                    BOOL v14 = v197++ > 8;
                    if (v14) {
                      goto LABEL_258;
                    }
                    continue;
                  }
                  if (*((unsigned char *)this + 24)) {
                    LODWORD(v119) = 0;
                  }
                }
                break;
              }
LABEL_330:
              *(_DWORD *)(a1 + 60) = v119;
              goto LABEL_282;
            case 0x15u:
              *(void *)(a1 + 164) |= 0x800uLL;
              unint64_t v122 = *((void *)this + 1);
              if (v122 > 0xFFFFFFFFFFFFFFFBLL || v122 + 4 > *((void *)this + 2)) {
                goto LABEL_170;
              }
              *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v122);
              goto LABEL_281;
            case 0x16u:
              *(void *)(a1 + 164) |= 0x1000uLL;
              unint64_t v123 = *((void *)this + 1);
              if (v123 > 0xFFFFFFFFFFFFFFFBLL || v123 + 4 > *((void *)this + 2)) {
                goto LABEL_170;
              }
              *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v123);
              goto LABEL_281;
            case 0x17u:
              *(void *)(a1 + 164) |= 0x2000uLL;
              unint64_t v124 = *((void *)this + 1);
              if (v124 > 0xFFFFFFFFFFFFFFFBLL || v124 + 4 > *((void *)this + 2)) {
                goto LABEL_170;
              }
              *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v124);
              goto LABEL_281;
            case 0x18u:
              *(void *)(a1 + 164) |= 0x100uLL;
              unint64_t v125 = *((void *)this + 1);
              if (v125 > 0xFFFFFFFFFFFFFFFBLL || v125 + 4 > *((void *)this + 2)) {
                goto LABEL_170;
              }
              *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v125);
              goto LABEL_281;
            case 0x19u:
              *(void *)(a1 + 164) |= 0x200uLL;
              unint64_t v126 = *((void *)this + 1);
              if (v126 > 0xFFFFFFFFFFFFFFFBLL || v126 + 4 > *((void *)this + 2)) {
                goto LABEL_170;
              }
              *(_DWORD *)(a1 + 68) = *(_DWORD *)(*(void *)this + v126);
              goto LABEL_281;
            case 0x1Au:
              *(void *)(a1 + 164) |= 0x400uLL;
              unint64_t v127 = *((void *)this + 1);
              if (v127 > 0xFFFFFFFFFFFFFFFBLL || v127 + 4 > *((void *)this + 2)) {
                goto LABEL_170;
              }
              *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v127);
              goto LABEL_281;
            case 0x1Bu:
              *(void *)(a1 + 164) |= 0x8000000uLL;
              unint64_t v128 = *((void *)this + 1);
              if (v128 > 0xFFFFFFFFFFFFFFFBLL || v128 + 4 > *((void *)this + 2)) {
                goto LABEL_170;
              }
              *(_DWORD *)(a1 + 140) = *(_DWORD *)(*(void *)this + v128);
              goto LABEL_281;
            case 0x1Cu:
              *(void *)(a1 + 164) |= 0x800000uLL;
              unint64_t v129 = *((void *)this + 1);
              unint64_t v130 = *((void *)this + 2);
              uint64_t v131 = *(void *)this;
              if (v129 <= 0xFFFFFFFFFFFFFFF5 && v129 + 10 <= v130)
              {
                char v132 = 0;
                unsigned int v133 = 0;
                uint64_t v134 = 0;
                do
                {
                  unint64_t v135 = v129 + 1;
                  *((void *)this + 1) = v129 + 1;
                  char v136 = *(unsigned char *)(v131 + v129);
                  v134 |= (unint64_t)(v136 & 0x7F) << v132;
                  if ((v136 & 0x80) == 0) {
                    goto LABEL_334;
                  }
                  v132 += 7;
                  unint64_t v129 = v135;
                  BOOL v14 = v133++ > 8;
                }
                while (!v14);
LABEL_265:
                LODWORD(v134) = 0;
                goto LABEL_334;
              }
              char v200 = 0;
              unsigned int v201 = 0;
              uint64_t v134 = 0;
              if (v130 <= v129) {
                unint64_t v130 = *((void *)this + 1);
              }
              while (2)
              {
                if (v130 == v129)
                {
                  LODWORD(v134) = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v202 = v129 + 1;
                  char v203 = *(unsigned char *)(v131 + v129);
                  *((void *)this + 1) = v202;
                  v134 |= (unint64_t)(v203 & 0x7F) << v200;
                  if (v203 < 0)
                  {
                    v200 += 7;
                    unint64_t v129 = v202;
                    BOOL v14 = v201++ > 8;
                    if (v14) {
                      goto LABEL_265;
                    }
                    continue;
                  }
                  if (*((unsigned char *)this + 24)) {
                    LODWORD(v134) = 0;
                  }
                }
                break;
              }
LABEL_334:
              *(_DWORD *)(a1 + 124) = v134;
              goto LABEL_282;
            case 0x1Du:
              *(void *)(a1 + 164) |= 0x20uLL;
              unint64_t v137 = *((void *)this + 1);
              unint64_t v138 = *((void *)this + 2);
              uint64_t v139 = *(void *)this;
              if (v137 <= 0xFFFFFFFFFFFFFFF5 && v137 + 10 <= v138)
              {
                char v140 = 0;
                unsigned int v141 = 0;
                uint64_t v142 = 0;
                do
                {
                  unint64_t v143 = v137 + 1;
                  *((void *)this + 1) = v137 + 1;
                  char v144 = *(unsigned char *)(v139 + v137);
                  v142 |= (unint64_t)(v144 & 0x7F) << v140;
                  if ((v144 & 0x80) == 0) {
                    goto LABEL_338;
                  }
                  v140 += 7;
                  unint64_t v137 = v143;
                  BOOL v14 = v141++ > 8;
                }
                while (!v14);
LABEL_272:
                uint64_t v142 = 0;
                goto LABEL_338;
              }
              char v204 = 0;
              unsigned int v205 = 0;
              uint64_t v142 = 0;
              if (v138 <= v137) {
                unint64_t v138 = *((void *)this + 1);
              }
              while (2)
              {
                if (v138 == v137)
                {
                  uint64_t v142 = 0;
                  *((unsigned char *)this + 24) = 1;
                }
                else
                {
                  unint64_t v206 = v137 + 1;
                  char v207 = *(unsigned char *)(v139 + v137);
                  *((void *)this + 1) = v206;
                  v142 |= (unint64_t)(v207 & 0x7F) << v204;
                  if (v207 < 0)
                  {
                    v204 += 7;
                    unint64_t v137 = v206;
                    BOOL v14 = v205++ > 8;
                    if (v14) {
                      goto LABEL_272;
                    }
                    continue;
                  }
                  if (*((unsigned char *)this + 24)) {
                    uint64_t v142 = 0;
                  }
                }
                break;
              }
LABEL_338:
              *(void *)(a1 + 48) = v142;
              goto LABEL_282;
            case 0x1Eu:
              *(void *)(a1 + 164) |= 0x2000000uLL;
              unint64_t v145 = *((void *)this + 1);
              if (v145 > 0xFFFFFFFFFFFFFFFBLL || v145 + 4 > *((void *)this + 2)) {
                goto LABEL_170;
              }
              *(_DWORD *)(a1 + 132) = *(_DWORD *)(*(void *)this + v145);
              goto LABEL_281;
            case 0x1Fu:
              *(void *)(a1 + 164) |= 0x40000000uLL;
              unint64_t v146 = *((void *)this + 1);
              if (v146 <= 0xFFFFFFFFFFFFFFFBLL && v146 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 152) = *(_DWORD *)(*(void *)this + v146);
LABEL_281:
                *((void *)this + 1) += 4;
              }
              else
              {
LABEL_170:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_282;
            default:
              if (v20 == 201)
              {
                *(void *)(a1 + 164) |= 1uLL;
                unint64_t v147 = *((void *)this + 1);
                unint64_t v148 = *((void *)this + 2);
                uint64_t v149 = *(void *)this;
                if (v147 > 0xFFFFFFFFFFFFFFF5 || v147 + 10 > v148)
                {
                  char v208 = 0;
                  unsigned int v209 = 0;
                  uint64_t v152 = 0;
                  if (v148 <= v147) {
                    unint64_t v148 = *((void *)this + 1);
                  }
                  while (1)
                  {
                    if (v148 == v147)
                    {
                      uint64_t v152 = 0;
                      *((unsigned char *)this + 24) = 1;
                      goto LABEL_342;
                    }
                    unint64_t v210 = v147 + 1;
                    char v211 = *(unsigned char *)(v149 + v147);
                    *((void *)this + 1) = v210;
                    v152 |= (unint64_t)(v211 & 0x7F) << v208;
                    if ((v211 & 0x80) == 0) {
                      break;
                    }
                    v208 += 7;
                    unint64_t v147 = v210;
                    BOOL v14 = v209++ > 8;
                    if (v14)
                    {
LABEL_279:
                      uint64_t v152 = 0;
                      goto LABEL_342;
                    }
                  }
                  if (*((unsigned char *)this + 24)) {
                    uint64_t v152 = 0;
                  }
                }
                else
                {
                  char v150 = 0;
                  unsigned int v151 = 0;
                  uint64_t v152 = 0;
                  while (1)
                  {
                    unint64_t v153 = v147 + 1;
                    *((void *)this + 1) = v147 + 1;
                    char v154 = *(unsigned char *)(v149 + v147);
                    v152 |= (unint64_t)(v154 & 0x7F) << v150;
                    if ((v154 & 0x80) == 0) {
                      break;
                    }
                    v150 += 7;
                    unint64_t v147 = v153;
                    BOOL v14 = v151++ > 8;
                    if (v14) {
                      goto LABEL_279;
                    }
                  }
                }
LABEL_342:
                *(void *)(a1 + 8) = v152;
              }
              else if (v20 == 202)
              {
                *(void *)(a1 + 164) |= 2uLL;
                unint64_t v25 = *((void *)this + 1);
                unint64_t v26 = *((void *)this + 2);
                uint64_t v27 = *(void *)this;
                if (v25 > 0xFFFFFFFFFFFFFFF5 || v25 + 10 > v26)
                {
                  char v156 = 0;
                  unsigned int v157 = 0;
                  uint64_t v30 = 0;
                  if (v26 <= v25) {
                    unint64_t v26 = *((void *)this + 1);
                  }
                  while (1)
                  {
                    if (v26 == v25)
                    {
                      uint64_t v30 = 0;
                      *((unsigned char *)this + 24) = 1;
                      goto LABEL_290;
                    }
                    unint64_t v158 = v25 + 1;
                    char v159 = *(unsigned char *)(v27 + v25);
                    *((void *)this + 1) = v158;
                    v30 |= (unint64_t)(v159 & 0x7F) << v156;
                    if ((v159 & 0x80) == 0) {
                      break;
                    }
                    v156 += 7;
                    unint64_t v25 = v158;
                    BOOL v14 = v157++ > 8;
                    if (v14)
                    {
LABEL_188:
                      uint64_t v30 = 0;
                      goto LABEL_290;
                    }
                  }
                  if (*((unsigned char *)this + 24)) {
                    uint64_t v30 = 0;
                  }
                }
                else
                {
                  char v28 = 0;
                  unsigned int v29 = 0;
                  uint64_t v30 = 0;
                  while (1)
                  {
                    unint64_t v31 = v25 + 1;
                    *((void *)this + 1) = v25 + 1;
                    char v32 = *(unsigned char *)(v27 + v25);
                    v30 |= (unint64_t)(v32 & 0x7F) << v28;
                    if ((v32 & 0x80) == 0) {
                      break;
                    }
                    v28 += 7;
                    unint64_t v25 = v31;
                    BOOL v14 = v29++ > 8;
                    if (v14) {
                      goto LABEL_188;
                    }
                  }
                }
LABEL_290:
                *(void *)(a1 + 16) = v30;
              }
              else
              {
                uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
                if (!result) {
                  return result;
                }
              }
LABEL_282:
              unint64_t v2 = *((void *)this + 1);
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_1016ADCF0(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  uint64_t v4 = *(void *)(result + 164);
  if ((v4 & 0x100000000) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(unsigned char *)(result + 160), 1u);
    uint64_t v4 = *(void *)(v3 + 164);
    if ((v4 & 0x100000) == 0)
    {
LABEL_3:
      if ((v4 & 0x80000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_37;
    }
  }
  else if ((v4 & 0x100000) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 112), 2u);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x80000) == 0)
  {
LABEL_4:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 108), 3u);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_5:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 128), 4u);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_6:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 148), 5u);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_7:
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 136), 6u);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x80000000) == 0)
  {
LABEL_8:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 156), 7u);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_9:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 144), 8u);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x200000) == 0)
  {
LABEL_10:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 116), 9u);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x400000) == 0)
  {
LABEL_11:
    if ((v4 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 120), 0xAu);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x10) == 0)
  {
LABEL_12:
    if ((v4 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 40), 0xBu);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 8) == 0)
  {
LABEL_13:
    if ((v4 & 4) == 0) {
      goto LABEL_14;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 32), 0xCu);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 4) == 0)
  {
LABEL_14:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 24), 0xDu);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x8000) == 0)
  {
LABEL_15:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 92), 0xEu);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x20000) == 0)
  {
LABEL_16:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 100), 0xFu);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x10000) == 0)
  {
LABEL_17:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 96), 0x10u);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x40000) == 0)
  {
LABEL_18:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 104), 0x11u);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x4000) == 0)
  {
LABEL_19:
    if ((v4 & 0x40) == 0) {
      goto LABEL_20;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 88), 0x12u);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x40) == 0)
  {
LABEL_20:
    if ((v4 & 0x80) == 0) {
      goto LABEL_21;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56), 0x13u);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x80) == 0)
  {
LABEL_21:
    if ((v4 & 0x800) == 0) {
      goto LABEL_22;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 60), 0x14u);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x800) == 0)
  {
LABEL_22:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76), 0x15u);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x1000) == 0)
  {
LABEL_23:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80), 0x16u);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x2000) == 0)
  {
LABEL_24:
    if ((v4 & 0x100) == 0) {
      goto LABEL_25;
    }
    goto LABEL_58;
  }
LABEL_57:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 84), 0x17u);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x100) == 0)
  {
LABEL_25:
    if ((v4 & 0x200) == 0) {
      goto LABEL_26;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64), 0x18u);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x200) == 0)
  {
LABEL_26:
    if ((v4 & 0x400) == 0) {
      goto LABEL_27;
    }
    goto LABEL_60;
  }
LABEL_59:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 68), 0x19u);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x400) == 0)
  {
LABEL_27:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_61;
  }
LABEL_60:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72), 0x1Au);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_28:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 140), 0x1Bu);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x800000) == 0)
  {
LABEL_29:
    if ((v4 & 0x20) == 0) {
      goto LABEL_30;
    }
    goto LABEL_63;
  }
LABEL_62:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 124), 0x1Cu);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x20) == 0)
  {
LABEL_30:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_64;
  }
LABEL_63:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 48), 0x1Du);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_31:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_65;
  }
LABEL_64:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 132), 0x1Eu);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x40000000) == 0)
  {
LABEL_32:
    if ((v4 & 1) == 0) {
      goto LABEL_33;
    }
LABEL_66:
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 8), 0xC9u);
    if ((*(void *)(v3 + 164) & 2) == 0) {
      return result;
    }
    goto LABEL_67;
  }
LABEL_65:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 152), 0x1Fu);
  uint64_t v4 = *(void *)(v3 + 164);
  if (v4) {
    goto LABEL_66;
  }
LABEL_33:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_67:
  unint64_t v5 = *(void *)(v3 + 16);

  return PB::Writer::writeVarInt(this, v5, 0xCAu);
}

uint64_t sub_1016AE0C4(uint64_t result)
{
  *(void *)uint64_t result = &off_1023344B0;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_1016AE0EC(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_1016AE124(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_1023344B0;
  *(_DWORD *)(result + 20) = 0;
  if (*(unsigned char *)(a2 + 20))
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 20) = 1;
    *(void *)(result + 8) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 20) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 20) & 2) != 0)
  {
LABEL_5:
    char v4 = *(unsigned char *)(a2 + 16);
    *(unsigned char *)(result + 20) = v2;
    *(unsigned char *)(result + 16) = v4;
  }
  return result;
}

uint64_t sub_1016AE188(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "attached", *(unsigned char *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 20);
  }
  if (v5) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_1016AE204(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 >= *((void *)this + 2))
        {
          BOOL v22 = 0;
          *((unsigned char *)this + 24) = 1;
        }
        else
        {
          int v21 = *(unsigned __int8 *)(*(void *)this + v2++);
          *((void *)this + 1) = v2;
          BOOL v22 = v21 != 0;
        }
        *(unsigned char *)(a1 + 16) = v22;
      }
      else if (v20 == 1)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
        {
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_1016AE3EC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8), 1u);
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if ((v4 & 2) != 0)
  {
    char v5 = *(unsigned char *)(v3 + 16);
    return PB::Writer::write(this, v5, 2u);
  }
  return result;
}

uint64_t sub_1016AE458(uint64_t result)
{
  *(void *)uint64_t result = &off_1023344E8;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_1016AE480(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_1016AE4B8(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_1023344E8;
  *(_DWORD *)(result + 20) = 0;
  if (*(unsigned char *)(a2 + 20))
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 20) = 1;
    *(void *)(result + 8) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 20) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 20) & 2) != 0)
  {
LABEL_5:
    char v4 = *(unsigned char *)(a2 + 16);
    *(unsigned char *)(result + 20) = v2;
    *(unsigned char *)(result + 16) = v4;
  }
  return result;
}

uint64_t sub_1016AE51C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "keyPressedDown", *(unsigned char *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 20);
  }
  if (v5) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_1016AE598(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 >= *((void *)this + 2))
        {
          BOOL v22 = 0;
          *((unsigned char *)this + 24) = 1;
        }
        else
        {
          int v21 = *(unsigned __int8 *)(*(void *)this + v2++);
          *((void *)this + 1) = v2;
          BOOL v22 = v21 != 0;
        }
        *(unsigned char *)(a1 + 16) = v22;
      }
      else if (v20 == 1)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
        {
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}