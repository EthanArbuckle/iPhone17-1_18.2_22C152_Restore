ValueMetadata *type metadata accessor for OwnerTokenEnvelopeV1.CodingKeys()
{
  return &type metadata for OwnerTokenEnvelopeV1.CodingKeys;
}

unint64_t sub_1002087B8()
{
  unint64_t result = qword_1003F1E30;
  if (!qword_1003F1E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003F1E30);
  }
  return result;
}

unint64_t sub_100208810()
{
  unint64_t result = qword_1003F1E38;
  if (!qword_1003F1E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003F1E38);
  }
  return result;
}

unint64_t sub_100208868()
{
  unint64_t result = qword_1003F1E40;
  if (!qword_1003F1E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003F1E40);
  }
  return result;
}

unint64_t sub_1002088C0()
{
  unint64_t result = qword_1003F1E48;
  if (!qword_1003F1E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003F1E48);
  }
  return result;
}

unint64_t sub_100208918()
{
  unint64_t result = qword_1003F1E50;
  if (!qword_1003F1E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003F1E50);
  }
  return result;
}

uint64_t sub_10020896C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7079546572616873 && a2 == 0xE900000000000065 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574614465736162 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6553646572616873 && a2 == 0xEC00000074657263)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unsigned char *storeEnumTagSinglePayload for FriendSharingMessageType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100208C24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FriendSharingMessageType()
{
  return &type metadata for FriendSharingMessageType;
}

Swift::Int sub_100208C5C()
{
  Swift::UInt32 v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_100208CA4()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_100208CD0()
{
  Swift::UInt32 v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t sub_100208D14@<X0>(unsigned int *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100208FCC(*a1);
  *a2 = result;
  return result;
}

void sub_100208D40(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

void sub_100208D4C(void *a1@<X8>)
{
  *a1 = &off_1003DD718;
}

uint64_t sub_100208D5C()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100208DBC()
{
  return RawRepresentable<>.encode(to:)();
}

unint64_t sub_100208E10()
{
  unint64_t result = qword_1003F1E58;
  if (!qword_1003F1E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003F1E58);
  }
  return result;
}

unint64_t sub_100208E68()
{
  unint64_t result = qword_1003F1E60;
  if (!qword_1003F1E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003F1E60);
  }
  return result;
}

unint64_t sub_100208EC0()
{
  unint64_t result = qword_1003F1E68;
  if (!qword_1003F1E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003F1E68);
  }
  return result;
}

unint64_t sub_100208F18()
{
  unint64_t result = qword_1003F1E70;
  if (!qword_1003F1E70)
  {
    sub_10004AE58(&qword_1003F1E78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003F1E70);
  }
  return result;
}

unint64_t sub_100208F78()
{
  unint64_t result = qword_1003F1E80;
  if (!qword_1003F1E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003F1E80);
  }
  return result;
}

uint64_t sub_100208FCC(uint64_t result)
{
  if (result >= 7) {
    return 7;
  }
  else {
    return result;
  }
}

uint64_t sub_100208FDC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100052FAC(v0, qword_10040B810);
  uint64_t v1 = sub_100044058(v0, (uint64_t)qword_10040B810);
  if (qword_1003EC090 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100044058(v0, (uint64_t)qword_10040B828);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1002090A4()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_1002090C4, v0, 0);
}

uint64_t sub_1002090C4()
{
  v0[3] = *(void *)(v0[2] + 128);
  swift_retain();
  sub_100044014(&qword_1003F1D20);
  sub_10020AF0C();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[4] = v2;
  v0[5] = v1;
  return _swift_task_switch(sub_10020915C, v2, v1);
}

uint64_t sub_10020915C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  dispatch thunk of InternetMessaging.set(didDeliverCallback:)();
  swift_release();
  return _swift_task_switch(sub_1002091E4, v1, 0);
}

uint64_t sub_1002091E4()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  swift_retain();
  return _swift_task_switch(sub_10020925C, v1, v2);
}

uint64_t sub_10020925C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  dispatch thunk of InternetMessaging.set(messageReceivedCallback:)();
  swift_release();
  return _swift_task_switch(sub_1002092E4, v1, 0);
}

uint64_t sub_1002092E4()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  swift_retain();
  return _swift_task_switch(sub_10020935C, v1, v2);
}

uint64_t sub_10020935C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  dispatch thunk of InternetMessaging.set(dictionaryReceivedCallback:)();
  swift_release();
  return _swift_task_switch(sub_1002093E4, v1, 0);
}

uint64_t sub_1002093E4()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  swift_retain();
  return _swift_task_switch(sub_10020945C, v1, v2);
}

uint64_t sub_10020945C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  dispatch thunk of InternetMessaging.set(accountChangedCallback:)();
  swift_release();
  return _swift_task_switch(sub_1002094E4, v1, 0);
}

uint64_t sub_1002094E4()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  swift_retain();
  return _swift_task_switch(sub_10020955C, v1, v2);
}

uint64_t sub_10020955C()
{
  dispatch thunk of InternetMessaging.set(devicesChangedCallback:)();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002095E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return _swift_task_switch(sub_100209604, a4, 0);
}

uint64_t sub_100209604(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + 32);
  uint64_t v3 = *(void *)(v2 + 40);
  uint64_t v5 = sub_10020DB58(qword_1003F1FF0, a2, (void (*)(uint64_t))type metadata accessor for IDSTransportServiceFMF);
  uint64_t v6 = swift_task_alloc();
  *(void *)(v2 + 48) = v6;
  long long v7 = *(_OWORD *)(v2 + 16);
  *(void *)(v6 + 16) = v3;
  *(_OWORD *)(v6 + 24) = v7;
  *(void *)(v6 + 40) = v4;
  v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 56) = v8;
  void *v8 = v2;
  v8[1] = sub_100209734;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v8, (char *)&type metadata for () + 8, (char *)&type metadata for () + 8, v3, v5, &unk_1003F2120, v6, (char *)&type metadata for () + 8);
}

uint64_t sub_100209734()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_100178850, v1, 0);
}

uint64_t sub_100209860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return _swift_task_switch(sub_100209888, a6, 0);
}

uint64_t sub_100209888(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + 48);
  uint64_t v3 = *(void *)(v2 + 56);
  uint64_t v5 = sub_10020DB58(qword_1003F1FF0, a2, (void (*)(uint64_t))type metadata accessor for IDSTransportServiceFMF);
  uint64_t v6 = swift_task_alloc();
  *(void *)(v2 + 64) = v6;
  long long v7 = *(_OWORD *)(v2 + 16);
  long long v8 = *(_OWORD *)(v2 + 32);
  *(void *)(v6 + 16) = v3;
  *(_OWORD *)(v6 + 24) = v7;
  *(_OWORD *)(v6 + 40) = v8;
  *(void *)(v6 + 56) = v4;
  v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 72) = v9;
  void *v9 = v2;
  v9[1] = sub_1002099BC;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v9, (char *)&type metadata for () + 8, (char *)&type metadata for () + 8, v3, v5, &unk_1003F20F8, v6, (char *)&type metadata for () + 8);
}

uint64_t sub_1002099BC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_100178850, v1, 0);
}

uint64_t sub_100209AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return _swift_task_switch(sub_100209B10, a5, 0);
}

uint64_t sub_100209B10(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = sub_10020DB58(qword_1003F1FF0, a2, (void (*)(uint64_t))type metadata accessor for IDSTransportServiceFMF);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v2 + 56) = v5;
  long long v6 = *(_OWORD *)(v2 + 16);
  long long v7 = *(_OWORD *)(v2 + 32);
  *(void *)(v5 + 16) = v3;
  *(_OWORD *)(v5 + 24) = v6;
  *(_OWORD *)(v5 + 40) = v7;
  long long v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 64) = v8;
  void *v8 = v2;
  v8[1] = sub_100209C40;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v8, (char *)&type metadata for () + 8, (char *)&type metadata for () + 8, v3, v4, &unk_1003F20D0, v5, (char *)&type metadata for () + 8);
}

uint64_t sub_100209C40()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_100178850, v1, 0);
}

uint64_t sub_100209D6C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_100209D88, a2, 0);
}

uint64_t sub_100209D88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2[2];
  uint64_t v3 = v2[3];
  uint64_t v5 = sub_10020DB58(qword_1003F1FF0, a2, (void (*)(uint64_t))type metadata accessor for IDSTransportServiceFMF);
  uint64_t v6 = swift_task_alloc();
  v2[4] = v6;
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = v4;
  long long v7 = (void *)swift_task_alloc();
  v2[5] = v7;
  *long long v7 = v2;
  v7[1] = sub_100209EAC;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v7, (char *)&type metadata for () + 8, (char *)&type metadata for () + 8, v3, v5, &unk_1003F20A8, v6, (char *)&type metadata for () + 8);
}

uint64_t sub_100209EAC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 24);
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1001D6458, v1, 0);
}

uint64_t sub_100209FD8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_100209FF4, a2, 0);
}

uint64_t sub_100209FF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2[2];
  uint64_t v3 = v2[3];
  uint64_t v5 = sub_10020DB58(qword_1003F1FF0, a2, (void (*)(uint64_t))type metadata accessor for IDSTransportServiceFMF);
  uint64_t v6 = swift_task_alloc();
  v2[4] = v6;
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = v4;
  long long v7 = (void *)swift_task_alloc();
  v2[5] = v7;
  *long long v7 = v2;
  v7[1] = sub_10020A118;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v7, (char *)&type metadata for () + 8, (char *)&type metadata for () + 8, v3, v5, &unk_1003F2088, v6, (char *)&type metadata for () + 8);
}

uint64_t sub_10020A118()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 24);
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_100178850, v1, 0);
}

uint64_t sub_10020A244(uint64_t a1, uint64_t a2)
{
  v3[4] = a1;
  v3[5] = a2;
  uint64_t v4 = type metadata accessor for SystemVersionNumber();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  v3[9] = swift_task_alloc();
  return _swift_task_switch(sub_10020A314, v2, 0);
}

uint64_t sub_10020A314()
{
  v27 = v0;
  if (qword_1003EC088 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[4];
  uint64_t v3 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[5];
  uint64_t v7 = type metadata accessor for Logger();
  sub_100044058(v7, (uint64_t)qword_10040B810);
  long long v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v8(v2, v1, v4);
  v8(v3, v6, v4);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  BOOL v11 = os_log_type_enabled(v9, v10);
  uint64_t v13 = v0[8];
  uint64_t v12 = v0[9];
  uint64_t v15 = v0[6];
  uint64_t v14 = v0[7];
  if (v11)
  {
    uint64_t v25 = v0[8];
    uint64_t v16 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315394;
    sub_10020DB58(&qword_1003F0108, 255, (void (*)(uint64_t))&type metadata accessor for SystemVersionNumber);
    uint64_t v17 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[2] = sub_100037004(v17, v18, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v19 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v19(v12, v15);
    *(_WORD *)(v16 + 12) = 2080;
    uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[3] = sub_100037004(v20, v21, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v19(v25, v15);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "STUB: migrate from %s to %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    v22 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v22(v12, v15);
    v22(v13, v15);
  }

  swift_task_dealloc();
  swift_task_dealloc();
  v23 = (uint64_t (*)(void))v0[1];
  return v23();
}

uint64_t sub_10020A628(uint64_t a1, uint64_t a2)
{
  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  uint64_t v4 = type metadata accessor for UUID();
  v3[14] = v4;
  v3[15] = *(void *)(v4 - 8);
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  return _swift_task_switch(sub_10020A6FC, v2, 0);
}

uint64_t sub_10020A6FC()
{
  v24 = v0;
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[14];
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[12];
  UUID.init()();
  uint64_t v6 = v3;
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v7(v2, v1, v6);
  sub_100050C1C(v5, (uint64_t)(v0 + 2));
  swift_beginAccess();
  sub_10012BCB8((uint64_t)(v0 + 2), v2);
  swift_endAccess();
  if (qword_1003EC088 != -1) {
    swift_once();
  }
  uint64_t v8 = v0[16];
  uint64_t v9 = v0[14];
  uint64_t v10 = v0[11];
  uint64_t v11 = type metadata accessor for Logger();
  sub_100044058(v11, (uint64_t)qword_10040B810);
  v7(v8, v10, v9);
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.info.getter();
  BOOL v14 = os_log_type_enabled(v12, v13);
  uint64_t v16 = v0[15];
  uint64_t v15 = v0[16];
  uint64_t v17 = v0[14];
  if (v14)
  {
    unint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)unint64_t v18 = 136446210;
    sub_10020DB58(&qword_1003ECF68, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v19 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[10] = sub_100037004(v19, v20, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Added client: %{public}s", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v16 + 8))(v0[16], v0[14]);
  }

  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_10020A9E8()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for IDSTransportServiceFMF()
{
  return self;
}

uint64_t sub_10020AA64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  uint64_t v5 = type metadata accessor for IDSTransportServiceFMF();
  *uint64_t v4 = v2;
  v4[1] = sub_10004A274;
  return ActorServiceProtocol.initialLaunchProcessing()(v5, a2);
}

uint64_t sub_10020AB0C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10004A274;
  return sub_10020A244(a1, a2);
}

uint64_t sub_10020ABB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  uint64_t v5 = type metadata accessor for IDSTransportServiceFMF();
  *uint64_t v4 = v2;
  v4[1] = sub_10004A274;
  return ActorServiceProtocol.firstLaunchSinceReboot()(v5, a2);
}

uint64_t sub_10020AC58()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100018CD0;
  v2[2] = v0;
  return _swift_task_switch(sub_1002090C4, v0, 0);
}

uint64_t sub_10020ACFC()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_10020AD1C, v0, 0);
}

uint64_t sub_10020AD1C()
{
  *(void *)(v0 + 24) = *(void *)(*(void *)(v0 + 16) + 128);
  sub_100044014(&qword_1003F1D20);
  sub_10020AF0C();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10020ADB0, v2, v1);
}

uint64_t sub_10020ADB0()
{
  dispatch thunk of InternetMessaging.start()();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10020AE14()
{
  type metadata accessor for IDSTransportServiceFMF();
  sub_10020DB58(&qword_1003ECCB0, v0, (void (*)(uint64_t))type metadata accessor for IDSTransportServiceFMF);
  return ActorServiceProtocol.description.getter();
}

uint64_t sub_10020AE7C(uint64_t a1, uint64_t a2)
{
  return sub_10020DB58(&qword_1003F1FE8, a2, (void (*)(uint64_t))type metadata accessor for IDSTransportServiceFMF);
}

uint64_t sub_10020AEC4(uint64_t a1, uint64_t a2)
{
  return sub_10020DB58(qword_1003F1FF0, a2, (void (*)(uint64_t))type metadata accessor for IDSTransportServiceFMF);
}

unint64_t sub_10020AF0C()
{
  unint64_t result = qword_1003F2020;
  if (!qword_1003F2020)
  {
    sub_10004AE58(&qword_1003F1D20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003F2020);
  }
  return result;
}

uint64_t sub_10020AF68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[25] = a5;
  v6[26] = a6;
  v6[23] = a3;
  v6[24] = a4;
  v6[22] = a2;
  uint64_t v8 = type metadata accessor for Destination();
  v6[27] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v6[28] = v9;
  v6[29] = *(void *)(v9 + 64);
  v6[30] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for UUID();
  v6[31] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v6[32] = v11;
  v6[33] = *(void *)(v11 + 64);
  v6[34] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for Account();
  v6[35] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v6[36] = v13;
  v6[37] = *(void *)(v13 + 64);
  v6[38] = swift_task_alloc();
  sub_100044014((uint64_t *)&unk_1003F3C10);
  v6[39] = swift_task_alloc();
  v6[40] = swift_task_alloc();
  return _swift_task_switch(sub_10020B144, a3, 0);
}

uint64_t sub_10020B144()
{
  v44 = (long long *)(v0 + 16);
  v58 = (long long *)(v0 + 56);
  uint64_t v1 = *(void *)(v0 + 288);
  uint64_t v2 = *(void *)(v0 + 256);
  uint64_t v3 = *(void *)(v0 + 224);
  uint64_t v4 = *(void *)(v0 + 184);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 144);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v39 = v5 + 64;
  uint64_t v7 = -1;
  uint64_t v8 = -1 << *(unsigned char *)(v5 + 32);
  if (-v8 < 64) {
    uint64_t v7 = ~(-1 << -(char)v8);
  }
  unint64_t v9 = v7 & v6;
  int64_t v40 = (unint64_t)(63 - v8) >> 6;
  uint64_t v42 = v2;
  uint64_t v43 = v1;
  uint64_t v41 = v3;
  uint64_t v45 = *(void *)(v4 + 144);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  while (1)
  {
    if (v9)
    {
      uint64_t v46 = (v9 - 1) & v9;
      int64_t v47 = v11;
      unint64_t v13 = __clz(__rbit64(v9)) | (v11 << 6);
      goto LABEL_23;
    }
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      return result;
    }
    if (v14 >= v40) {
      goto LABEL_31;
    }
    unint64_t v15 = *(void *)(v39 + 8 * v14);
    int64_t v16 = v11 + 1;
    if (!v15)
    {
      int64_t v16 = v11 + 2;
      if (v11 + 2 >= v40) {
        goto LABEL_31;
      }
      unint64_t v15 = *(void *)(v39 + 8 * v16);
      if (!v15)
      {
        int64_t v16 = v11 + 3;
        if (v11 + 3 >= v40) {
          goto LABEL_31;
        }
        unint64_t v15 = *(void *)(v39 + 8 * v16);
        if (!v15)
        {
          int64_t v16 = v11 + 4;
          if (v11 + 4 >= v40) {
            goto LABEL_31;
          }
          unint64_t v15 = *(void *)(v39 + 8 * v16);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v46 = (v15 - 1) & v15;
    int64_t v47 = v16;
    unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
LABEL_23:
    uint64_t v18 = *(void *)(v0 + 320);
    uint64_t v57 = *(void *)(v0 + 312);
    uint64_t v19 = *(void *)(v0 + 304);
    uint64_t v55 = *(void *)(v0 + 296);
    uint64_t v21 = *(void *)(v0 + 272);
    uint64_t v20 = *(void *)(v0 + 280);
    uint64_t v23 = *(void *)(v0 + 240);
    uint64_t v22 = *(void *)(v0 + 248);
    uint64_t v51 = v21;
    uint64_t v56 = *(void *)(v0 + 264);
    uint64_t v24 = *(void *)(v0 + 216);
    uint64_t v52 = v24;
    uint64_t v53 = v23;
    uint64_t v49 = *(void *)(v0 + 200);
    uint64_t v50 = *(void *)(v0 + 208);
    uint64_t v48 = *(void *)(v0 + 192);
    sub_100050C1C(*(void *)(v45 + 56) + 40 * v13, (uint64_t)v44);
    uint64_t v25 = type metadata accessor for TaskPriority();
    uint64_t v54 = *(void *)(v25 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56))(v18, 1, 1, v25);
    sub_100022CC0(v44, (uint64_t)v58);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v19, v48, v20);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16))(v21, v49, v22);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v23, v50, v24);
    unint64_t v26 = (*(unsigned __int8 *)(v43 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
    unint64_t v27 = (v55 + *(unsigned __int8 *)(v42 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
    unint64_t v28 = (v56 + *(unsigned __int8 *)(v41 + 80) + v27) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = 0;
    *(void *)(v29 + 24) = 0;
    sub_100022CC0(v58, v29 + 32);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v43 + 32))(v29 + v26, v19, v20);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v42 + 32))(v29 + v27, v51, v22);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v41 + 32))(v29 + v28, v53, v52);
    sub_100081214(v18, v57);
    int v30 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v57, 1, v25);
    uint64_t v31 = *(void *)(v0 + 312);
    if (v30 == 1)
    {
      sub_100179DF0(*(void *)(v0 + 312));
    }
    else
    {
      TaskPriority.rawValue.getter();
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v31, v25);
    }
    unint64_t v9 = v46;
    int64_t v11 = v47;
    if (*(void *)(v29 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v32 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v34 = v33;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v32 = 0;
      uint64_t v34 = 0;
    }
    uint64_t v35 = **(void **)(v0 + 176);
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = &unk_1003F2130;
    *(void *)(v36 + 24) = v29;
    uint64_t v37 = v34 | v32;
    if (v34 | v32)
    {
      uint64_t v37 = v0 + 96;
      *(void *)(v0 + 96) = 0;
      *(void *)(v0 + 104) = 0;
      *(void *)(v0 + 112) = v32;
      *(void *)(v0 + 120) = v34;
    }
    uint64_t v12 = *(void *)(v0 + 320);
    *(void *)(v0 + 152) = 1;
    *(void *)(v0 + 160) = v37;
    *(void *)(v0 + 168) = v35;
    swift_task_create();
    swift_release();
    uint64_t result = sub_100179DF0(v12);
  }
  uint64_t v17 = v11 + 5;
  if (v11 + 5 < v40)
  {
    unint64_t v15 = *(void *)(v39 + 8 * v17);
    if (!v15)
    {
      while (1)
      {
        int64_t v16 = v17 + 1;
        if (__OFADD__(v17, 1)) {
          goto LABEL_35;
        }
        if (v16 >= v40) {
          goto LABEL_31;
        }
        unint64_t v15 = *(void *)(v39 + 8 * v16);
        ++v17;
        if (v15) {
          goto LABEL_22;
        }
      }
    }
    int64_t v16 = v11 + 5;
    goto LABEL_22;
  }
LABEL_31:
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v38 = *(uint64_t (**)(void))(v0 + 8);
  return v38();
}

uint64_t sub_10020B71C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  return _swift_task_switch(sub_10020B740, 0, 0);
}

uint64_t sub_10020B740()
{
  uint64_t v1 = (void *)v0[2];
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100042524(v1, v2);
  unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 24) + **(int **)(v3 + 24));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1000F4428;
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[3];
  return v9(v7, v5, v6, v2, v3);
}

uint64_t sub_10020B84C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[27] = a7;
  v8[28] = a8;
  v8[25] = a5;
  v8[26] = a6;
  v8[23] = a3;
  v8[24] = a4;
  v8[22] = a2;
  uint64_t v10 = type metadata accessor for MessageContext();
  v8[29] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v8[30] = v11;
  v8[31] = *(void *)(v11 + 64);
  v8[32] = swift_task_alloc();
  uint64_t v12 = sub_100044014(&qword_1003ECF50);
  v8[33] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v8[34] = v13;
  v8[35] = *(void *)(v13 + 64);
  v8[36] = swift_task_alloc();
  uint64_t v14 = type metadata accessor for Destination();
  v8[37] = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  v8[38] = v15;
  v8[39] = *(void *)(v15 + 64);
  v8[40] = swift_task_alloc();
  uint64_t v16 = type metadata accessor for Account();
  v8[41] = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  v8[42] = v17;
  v8[43] = *(void *)(v17 + 64);
  v8[44] = swift_task_alloc();
  sub_100044014((uint64_t *)&unk_1003F3C10);
  v8[45] = swift_task_alloc();
  v8[46] = swift_task_alloc();
  return _swift_task_switch(sub_10020BA94, a3, 0);
}

uint64_t sub_10020BA94()
{
  uint64_t v46 = (long long *)(v0 + 16);
  v65 = (long long *)(v0 + 56);
  uint64_t v1 = *(void *)(v0 + 336);
  uint64_t v2 = *(void *)(v0 + 304);
  uint64_t v4 = *(void *)(v0 + 272);
  uint64_t v3 = *(void *)(v0 + 280);
  uint64_t v5 = *(void *)(v0 + 240);
  uint64_t v6 = *(void *)(v0 + 184);
  swift_beginAccess();
  uint64_t v7 = *(void *)(v6 + 144);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v40 = v7 + 64;
  uint64_t v9 = -1;
  uint64_t v10 = -1 << *(unsigned char *)(v7 + 32);
  if (-v10 < 64) {
    uint64_t v9 = ~(-1 << -(char)v10);
  }
  unint64_t v11 = v9 & v8;
  int64_t v41 = (unint64_t)(63 - v10) >> 6;
  uint64_t v44 = v2;
  uint64_t v45 = v1;
  uint64_t v42 = v3 + 7;
  uint64_t v43 = v4;
  uint64_t v47 = *(void *)(v6 + 144);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  while (1)
  {
    if (v11)
    {
      uint64_t v48 = (v11 - 1) & v11;
      int64_t v49 = v13;
      unint64_t v15 = __clz(__rbit64(v11)) | (v13 << 6);
      goto LABEL_23;
    }
    int64_t v16 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      return result;
    }
    if (v16 >= v41) {
      goto LABEL_31;
    }
    unint64_t v17 = *(void *)(v40 + 8 * v16);
    int64_t v18 = v13 + 1;
    if (!v17)
    {
      int64_t v18 = v13 + 2;
      if (v13 + 2 >= v41) {
        goto LABEL_31;
      }
      unint64_t v17 = *(void *)(v40 + 8 * v18);
      if (!v17)
      {
        int64_t v18 = v13 + 3;
        if (v13 + 3 >= v41) {
          goto LABEL_31;
        }
        unint64_t v17 = *(void *)(v40 + 8 * v18);
        if (!v17)
        {
          int64_t v18 = v13 + 4;
          if (v13 + 4 >= v41) {
            goto LABEL_31;
          }
          unint64_t v17 = *(void *)(v40 + 8 * v18);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v48 = (v17 - 1) & v17;
    int64_t v49 = v18;
    unint64_t v15 = __clz(__rbit64(v17)) + (v18 << 6);
LABEL_23:
    uint64_t v20 = *(void *)(v0 + 368);
    uint64_t v62 = v20;
    uint64_t v64 = *(void *)(v0 + 360);
    uint64_t v21 = *(void *)(v0 + 352);
    uint64_t v57 = *(void *)(v0 + 344);
    uint64_t v23 = *(void *)(v0 + 320);
    uint64_t v22 = *(void *)(v0 + 328);
    uint64_t v24 = *(void *)(v0 + 288);
    uint64_t v25 = *(void *)(v0 + 296);
    uint64_t v54 = v25;
    uint64_t v55 = v23;
    uint64_t v26 = *(void *)(v0 + 264);
    uint64_t v56 = v26;
    uint64_t v58 = *(void *)(v0 + 312);
    uint64_t v66 = *(void *)(v0 + 232);
    uint64_t v67 = *(void *)(v0 + 256);
    uint64_t v53 = *(void *)(v0 + 224);
    uint64_t v63 = *(void *)(v0 + 216);
    uint64_t v51 = *(void *)(v0 + 200);
    uint64_t v52 = *(void *)(v0 + 208);
    uint64_t v50 = *(void *)(v0 + 192);
    sub_100050C1C(*(void *)(v47 + 56) + 40 * v15, (uint64_t)v46);
    uint64_t v60 = type metadata accessor for TaskPriority();
    uint64_t v61 = *(void *)(v60 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56))(v20, 1, 1, v60);
    sub_100022CC0(v46, (uint64_t)v65);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16))(v21, v50, v22);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v23, v51, v25);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v24, v52, v26);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v67, v53, v66);
    unint64_t v27 = (*(unsigned __int8 *)(v45 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
    unint64_t v28 = (v57 + *(unsigned __int8 *)(v44 + 80) + v27) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
    unint64_t v29 = (v58 + *(unsigned __int8 *)(v43 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
    unint64_t v59 = (v42 + v29) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v30 = (*(unsigned __int8 *)(v5 + 80) + v59 + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = 0;
    *(void *)(v31 + 24) = 0;
    sub_100022CC0(v65, v31 + 32);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v45 + 32))(v31 + v27, v21, v22);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v44 + 32))(v31 + v28, v55, v54);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v43 + 32))(v31 + v29, v24, v56);
    *(void *)(v31 + v59) = v63;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v31 + v30, v67, v66);
    sub_100081214(v62, v64);
    LODWORD(v27) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v64, 1, v60);
    swift_bridgeObjectRetain();
    uint64_t v32 = *(void *)(v0 + 360);
    if (v27 == 1)
    {
      sub_100179DF0(*(void *)(v0 + 360));
    }
    else
    {
      TaskPriority.rawValue.getter();
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v32, v60);
    }
    unint64_t v11 = v48;
    int64_t v13 = v49;
    if (*(void *)(v31 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v33 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v35 = v34;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v33 = 0;
      uint64_t v35 = 0;
    }
    uint64_t v36 = **(void **)(v0 + 176);
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = &unk_1003F2108;
    *(void *)(v37 + 24) = v31;
    uint64_t v38 = v35 | v33;
    if (v35 | v33)
    {
      uint64_t v38 = v0 + 96;
      *(void *)(v0 + 96) = 0;
      *(void *)(v0 + 104) = 0;
      *(void *)(v0 + 112) = v33;
      *(void *)(v0 + 120) = v35;
    }
    uint64_t v14 = *(void *)(v0 + 368);
    *(void *)(v0 + 152) = 1;
    *(void *)(v0 + 160) = v38;
    *(void *)(v0 + 168) = v36;
    swift_task_create();
    swift_release();
    uint64_t result = sub_100179DF0(v14);
  }
  uint64_t v19 = v13 + 5;
  if (v13 + 5 < v41)
  {
    unint64_t v17 = *(void *)(v40 + 8 * v19);
    if (!v17)
    {
      while (1)
      {
        int64_t v18 = v19 + 1;
        if (__OFADD__(v19, 1)) {
          goto LABEL_35;
        }
        if (v18 >= v41) {
          goto LABEL_31;
        }
        unint64_t v17 = *(void *)(v40 + 8 * v18);
        ++v19;
        if (v17) {
          goto LABEL_22;
        }
      }
    }
    int64_t v18 = v13 + 5;
    goto LABEL_22;
  }
LABEL_31:
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
  return v39();
}

uint64_t sub_10020C12C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[6] = a8;
  v8[7] = v10;
  v8[4] = a6;
  v8[5] = a7;
  v8[2] = a4;
  v8[3] = a5;
  return _swift_task_switch(sub_10020C15C, 0, 0);
}

uint64_t sub_10020C15C()
{
  uint64_t v1 = (void *)v0[2];
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100042524(v1, v2);
  unint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 32)
                                                                                              + **(int **)(v3 + 32));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[8] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10020C26C;
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[4];
  uint64_t v8 = v0[5];
  uint64_t v9 = v0[3];
  return v11(v9, v7, v8, v5, v6, v2, v3);
}

uint64_t sub_10020C26C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10020C360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[26] = a6;
  v7[27] = a7;
  v7[24] = a4;
  v7[25] = a5;
  v7[22] = a2;
  v7[23] = a3;
  uint64_t v9 = type metadata accessor for MessageContext();
  v7[28] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v7[29] = v10;
  v7[30] = *(void *)(v10 + 64);
  v7[31] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for Destination();
  v7[32] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v7[33] = v12;
  v7[34] = *(void *)(v12 + 64);
  v7[35] = swift_task_alloc();
  uint64_t v13 = type metadata accessor for Account();
  v7[36] = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  v7[37] = v14;
  v7[38] = *(void *)(v14 + 64);
  v7[39] = swift_task_alloc();
  sub_100044014((uint64_t *)&unk_1003F3C10);
  v7[40] = swift_task_alloc();
  v7[41] = swift_task_alloc();
  return _swift_task_switch(sub_10020C53C, a3, 0);
}

uint64_t sub_10020C53C()
{
  uint64_t v45 = (long long *)(v0 + 16);
  uint64_t v61 = (long long *)(v0 + 56);
  uint64_t v1 = *(void *)(v0 + 296);
  uint64_t v3 = *(void *)(v0 + 264);
  uint64_t v2 = *(void *)(v0 + 272);
  uint64_t v4 = *(void *)(v0 + 232);
  uint64_t v5 = *(void *)(v0 + 184);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 144);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v39 = v6 + 64;
  uint64_t v8 = -1;
  uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
  if (-v9 < 64) {
    uint64_t v8 = ~(-1 << -(char)v9);
  }
  unint64_t v10 = v8 & v7;
  int64_t v40 = (unint64_t)(63 - v9) >> 6;
  uint64_t v41 = v2 + 7;
  uint64_t v43 = v3;
  uint64_t v44 = v1;
  uint64_t v42 = v4;
  uint64_t v46 = *(void *)(v5 + 144);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  while (1)
  {
    if (v10)
    {
      uint64_t v47 = (v10 - 1) & v10;
      int64_t v48 = v12;
      unint64_t v14 = __clz(__rbit64(v10)) | (v12 << 6);
      goto LABEL_23;
    }
    int64_t v15 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      return result;
    }
    if (v15 >= v40) {
      goto LABEL_31;
    }
    unint64_t v16 = *(void *)(v39 + 8 * v15);
    int64_t v17 = v12 + 1;
    if (!v16)
    {
      int64_t v17 = v12 + 2;
      if (v12 + 2 >= v40) {
        goto LABEL_31;
      }
      unint64_t v16 = *(void *)(v39 + 8 * v17);
      if (!v16)
      {
        int64_t v17 = v12 + 3;
        if (v12 + 3 >= v40) {
          goto LABEL_31;
        }
        unint64_t v16 = *(void *)(v39 + 8 * v17);
        if (!v16)
        {
          int64_t v17 = v12 + 4;
          if (v12 + 4 >= v40) {
            goto LABEL_31;
          }
          unint64_t v16 = *(void *)(v39 + 8 * v17);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v47 = (v16 - 1) & v16;
    int64_t v48 = v17;
    unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
LABEL_23:
    uint64_t v19 = *(void *)(v0 + 328);
    uint64_t v58 = v19;
    uint64_t v60 = *(void *)(v0 + 320);
    uint64_t v20 = *(void *)(v0 + 312);
    uint64_t v21 = *(void *)(v0 + 280);
    uint64_t v22 = *(void *)(v0 + 288);
    uint64_t v23 = *(void *)(v0 + 248);
    uint64_t v24 = *(void *)(v0 + 256);
    uint64_t v52 = v24;
    uint64_t v54 = v23;
    uint64_t v55 = *(void *)(v0 + 304);
    uint64_t v25 = *(void *)(v0 + 224);
    uint64_t v53 = v25;
    uint64_t v51 = *(void *)(v0 + 216);
    uint64_t v59 = *(void *)(v0 + 208);
    uint64_t v49 = *(void *)(v0 + 192);
    uint64_t v50 = *(void *)(v0 + 200);
    sub_100050C1C(*(void *)(v46 + 56) + 40 * v14, (uint64_t)v45);
    uint64_t v56 = type metadata accessor for TaskPriority();
    uint64_t v57 = *(void *)(v56 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 56))(v19, 1, 1, v56);
    sub_100022CC0(v45, (uint64_t)v61);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v20, v49, v22);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v21, v50, v24);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16))(v23, v51, v25);
    unint64_t v26 = (*(unsigned __int8 *)(v44 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
    unint64_t v27 = (v55 + *(unsigned __int8 *)(v43 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
    unint64_t v28 = (v41 + v27) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v29 = (*(unsigned __int8 *)(v42 + 80) + v28 + 8) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = 0;
    *(void *)(v30 + 24) = 0;
    sub_100022CC0(v61, v30 + 32);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v44 + 32))(v30 + v26, v20, v22);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v43 + 32))(v30 + v27, v21, v52);
    *(void *)(v30 + v28) = v59;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v42 + 32))(v30 + v29, v54, v53);
    sub_100081214(v58, v60);
    LODWORD(v27) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v60, 1, v56);
    swift_bridgeObjectRetain();
    uint64_t v31 = *(void *)(v0 + 320);
    if (v27 == 1)
    {
      sub_100179DF0(*(void *)(v0 + 320));
    }
    else
    {
      TaskPriority.rawValue.getter();
      (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v31, v56);
    }
    unint64_t v10 = v47;
    int64_t v12 = v48;
    if (*(void *)(v30 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v32 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v34 = v33;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v32 = 0;
      uint64_t v34 = 0;
    }
    uint64_t v35 = **(void **)(v0 + 176);
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = &unk_1003F20E0;
    *(void *)(v36 + 24) = v30;
    uint64_t v37 = v34 | v32;
    if (v34 | v32)
    {
      uint64_t v37 = v0 + 96;
      *(void *)(v0 + 96) = 0;
      *(void *)(v0 + 104) = 0;
      *(void *)(v0 + 112) = v32;
      *(void *)(v0 + 120) = v34;
    }
    uint64_t v13 = *(void *)(v0 + 328);
    *(void *)(v0 + 152) = 1;
    *(void *)(v0 + 160) = v37;
    *(void *)(v0 + 168) = v35;
    swift_task_create();
    swift_release();
    uint64_t result = sub_100179DF0(v13);
  }
  uint64_t v18 = v12 + 5;
  if (v12 + 5 < v40)
  {
    unint64_t v16 = *(void *)(v39 + 8 * v18);
    if (!v16)
    {
      while (1)
      {
        int64_t v17 = v18 + 1;
        if (__OFADD__(v18, 1)) {
          goto LABEL_35;
        }
        if (v17 >= v40) {
          goto LABEL_31;
        }
        unint64_t v16 = *(void *)(v39 + 8 * v17);
        ++v18;
        if (v16) {
          goto LABEL_22;
        }
      }
    }
    int64_t v17 = v12 + 5;
    goto LABEL_22;
  }
LABEL_31:
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v38 = *(uint64_t (**)(void))(v0 + 8);
  return v38();
}

uint64_t sub_10020CB40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  return _swift_task_switch(sub_10020CB68, 0, 0);
}

uint64_t sub_10020CB68()
{
  uint64_t v1 = (void *)v0[2];
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100042524(v1, v2);
  unint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 40)
                                                                                     + **(int **)(v3 + 40));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[7] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10020CC74;
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  uint64_t v8 = v0[3];
  uint64_t v7 = v0[4];
  return v10(v8, v7, v5, v6, v2, v3);
}

uint64_t sub_10020CC74()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10020CD68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[23] = a3;
  v4[24] = a4;
  v4[22] = a2;
  sub_100044014((uint64_t *)&unk_1003F3C10);
  v4[25] = swift_task_alloc();
  v4[26] = swift_task_alloc();
  return _swift_task_switch(sub_10020CE14, a3, 0);
}

uint64_t sub_10020CE14()
{
  uint64_t v33 = (long long *)(v0 + 56);
  uint64_t v34 = (long long *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 184);
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 144);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v31 = v2 + 64;
  uint64_t v4 = -1;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  if (-v5 < 64) {
    uint64_t v4 = ~(-1 << -(char)v5);
  }
  unint64_t v6 = v4 & v3;
  int64_t v32 = (unint64_t)(63 - v5) >> 6;
  uint64_t v35 = *(void *)(v1 + 144);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      uint64_t v36 = (v6 - 1) & v6;
      int64_t v11 = v8;
      unint64_t v12 = v10 | (v8 << 6);
      goto LABEL_23;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      return result;
    }
    if (v13 >= v32) {
      goto LABEL_31;
    }
    unint64_t v14 = *(void *)(v31 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v32) {
        goto LABEL_31;
      }
      unint64_t v14 = *(void *)(v31 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v32) {
          goto LABEL_31;
        }
        unint64_t v14 = *(void *)(v31 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v32) {
            goto LABEL_31;
          }
          unint64_t v14 = *(void *)(v31 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v36 = (v14 - 1) & v14;
    int64_t v11 = v15;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_23:
    uint64_t v18 = *(void *)(v0 + 200);
    uint64_t v17 = *(void *)(v0 + 208);
    uint64_t v19 = *(void *)(v0 + 192);
    sub_100050C1C(*(void *)(v35 + 56) + 40 * v12, (uint64_t)v34);
    uint64_t v20 = type metadata accessor for TaskPriority();
    uint64_t v21 = *(void *)(v20 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v17, 1, 1, v20);
    sub_100022CC0(v34, (uint64_t)v33);
    uint64_t v22 = (void *)swift_allocObject();
    v22[2] = 0;
    v22[3] = 0;
    sub_100022CC0(v33, (uint64_t)(v22 + 4));
    v22[9] = v19;
    sub_100081214(v17, v18);
    LODWORD(v17) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20);
    swift_bridgeObjectRetain();
    uint64_t v23 = *(void *)(v0 + 200);
    if (v17 == 1)
    {
      sub_100179DF0(*(void *)(v0 + 200));
    }
    else
    {
      TaskPriority.rawValue.getter();
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v20);
    }
    int64_t v8 = v11;
    unint64_t v6 = v36;
    if (v22[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v24 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v26 = v25;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v24 = 0;
      uint64_t v26 = 0;
    }
    uint64_t v27 = **(void **)(v0 + 176);
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = &unk_1003F20B8;
    *(void *)(v28 + 24) = v22;
    uint64_t v29 = v26 | v24;
    if (v26 | v24)
    {
      uint64_t v29 = v0 + 96;
      *(void *)(v0 + 96) = 0;
      *(void *)(v0 + 104) = 0;
      *(void *)(v0 + 112) = v24;
      *(void *)(v0 + 120) = v26;
    }
    uint64_t v9 = *(void *)(v0 + 208);
    *(void *)(v0 + 152) = 1;
    *(void *)(v0 + 160) = v29;
    *(void *)(v0 + 168) = v27;
    swift_task_create();
    swift_release();
    uint64_t result = sub_100179DF0(v9);
  }
  uint64_t v16 = v8 + 5;
  if (v8 + 5 < v32)
  {
    unint64_t v14 = *(void *)(v31 + 8 * v16);
    if (!v14)
    {
      while (1)
      {
        int64_t v15 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_35;
        }
        if (v15 >= v32) {
          goto LABEL_31;
        }
        unint64_t v14 = *(void *)(v31 + 8 * v15);
        ++v16;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v15 = v8 + 5;
    goto LABEL_22;
  }
LABEL_31:
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
  return v30();
}

uint64_t sub_10020D25C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return _swift_task_switch(sub_10020D27C, 0, 0);
}

uint64_t sub_10020D27C()
{
  uint64_t v1 = (void *)v0[2];
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100042524(v1, v2);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 48) + **(int **)(v3 + 48));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[4] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10011C724;
  uint64_t v5 = v0[3];
  return v7(v5, v2, v3);
}

uint64_t sub_10020D384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[23] = a3;
  v4[24] = a4;
  v4[22] = a2;
  sub_100044014((uint64_t *)&unk_1003F3C10);
  v4[25] = swift_task_alloc();
  v4[26] = swift_task_alloc();
  return _swift_task_switch(sub_10020D430, a3, 0);
}

uint64_t sub_10020D430()
{
  uint64_t v33 = (long long *)(v0 + 56);
  uint64_t v34 = (long long *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 184);
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 144);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v31 = v2 + 64;
  uint64_t v4 = -1;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  if (-v5 < 64) {
    uint64_t v4 = ~(-1 << -(char)v5);
  }
  unint64_t v6 = v4 & v3;
  int64_t v32 = (unint64_t)(63 - v5) >> 6;
  uint64_t v35 = *(void *)(v1 + 144);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      uint64_t v36 = (v6 - 1) & v6;
      int64_t v11 = v8;
      unint64_t v12 = v10 | (v8 << 6);
      goto LABEL_23;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      return result;
    }
    if (v13 >= v32) {
      goto LABEL_31;
    }
    unint64_t v14 = *(void *)(v31 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v32) {
        goto LABEL_31;
      }
      unint64_t v14 = *(void *)(v31 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v32) {
          goto LABEL_31;
        }
        unint64_t v14 = *(void *)(v31 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v32) {
            goto LABEL_31;
          }
          unint64_t v14 = *(void *)(v31 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v36 = (v14 - 1) & v14;
    int64_t v11 = v15;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_23:
    uint64_t v18 = *(void *)(v0 + 200);
    uint64_t v17 = *(void *)(v0 + 208);
    uint64_t v19 = *(void *)(v0 + 192);
    sub_100050C1C(*(void *)(v35 + 56) + 40 * v12, (uint64_t)v34);
    uint64_t v20 = type metadata accessor for TaskPriority();
    uint64_t v21 = *(void *)(v20 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v17, 1, 1, v20);
    sub_100022CC0(v34, (uint64_t)v33);
    uint64_t v22 = (void *)swift_allocObject();
    v22[2] = 0;
    v22[3] = 0;
    sub_100022CC0(v33, (uint64_t)(v22 + 4));
    v22[9] = v19;
    sub_100081214(v17, v18);
    LODWORD(v17) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20);
    swift_bridgeObjectRetain();
    uint64_t v23 = *(void *)(v0 + 200);
    if (v17 == 1)
    {
      sub_100179DF0(*(void *)(v0 + 200));
    }
    else
    {
      TaskPriority.rawValue.getter();
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v20);
    }
    int64_t v8 = v11;
    unint64_t v6 = v36;
    if (v22[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v24 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v26 = v25;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v24 = 0;
      uint64_t v26 = 0;
    }
    uint64_t v27 = **(void **)(v0 + 176);
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = &unk_1003F2098;
    *(void *)(v28 + 24) = v22;
    uint64_t v29 = v26 | v24;
    if (v26 | v24)
    {
      uint64_t v29 = v0 + 96;
      *(void *)(v0 + 96) = 0;
      *(void *)(v0 + 104) = 0;
      *(void *)(v0 + 112) = v24;
      *(void *)(v0 + 120) = v26;
    }
    uint64_t v9 = *(void *)(v0 + 208);
    *(void *)(v0 + 152) = 1;
    *(void *)(v0 + 160) = v29;
    *(void *)(v0 + 168) = v27;
    swift_task_create();
    swift_release();
    uint64_t result = sub_100179DF0(v9);
  }
  uint64_t v16 = v8 + 5;
  if (v8 + 5 < v32)
  {
    unint64_t v14 = *(void *)(v31 + 8 * v16);
    if (!v14)
    {
      while (1)
      {
        int64_t v15 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_35;
        }
        if (v15 >= v32) {
          goto LABEL_31;
        }
        unint64_t v14 = *(void *)(v31 + 8 * v15);
        ++v16;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v15 = v8 + 5;
    goto LABEL_22;
  }
LABEL_31:
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
  return v30();
}

uint64_t sub_10020D878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return _swift_task_switch(sub_10020D898, 0, 0);
}

uint64_t sub_10020D898()
{
  uint64_t v1 = (void *)v0[2];
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100042524(v1, v2);
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_100246A1C(v4);
  v0[4] = v5;
  swift_bridgeObjectRelease();
  int64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 56) + **(int **)(v3 + 56));
  unint64_t v6 = (void *)swift_task_alloc();
  v0[5] = v6;
  *unint64_t v6 = v0;
  v6[1] = sub_10020D9C4;
  return v8(v5, v2, v3);
}

uint64_t sub_10020D9C4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10020DAD4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100052FAC(v0, qword_10040B828);
  sub_100044058(v0, (uint64_t)qword_10040B828);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_10020DB58(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10020DBA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  void *v8 = v4;
  v8[4] = a3;
  v8[5] = v3;
  v8[2] = a1;
  v8[3] = a2;
  v8[1] = sub_10004A274;
  return _swift_task_switch(sub_100209604, v3, 0);
}

uint64_t sub_10020DC60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  *unint64_t v12 = v6;
  v12[6] = a5;
  v12[7] = v5;
  v12[4] = a3;
  v12[5] = a4;
  v12[2] = a1;
  v12[3] = a2;
  v12[1] = sub_10004A274;
  return _swift_task_switch(sub_100209888, v5, 0);
}

uint64_t sub_10020DD34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[5] = a4;
  v10[6] = v4;
  v10[3] = a2;
  v10[4] = a3;
  v10[1] = sub_10004A274;
  v10[2] = a1;
  return _swift_task_switch(sub_100209B10, v4, 0);
}

uint64_t sub_10020DE00(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_10004A274;
  return _swift_task_switch(sub_100209D88, v1, 0);
}

uint64_t sub_10020DEAC(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_10004A274;
  return _swift_task_switch(sub_100209FF4, v1, 0);
}

uint64_t sub_10020DF58(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  int64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  void *v8 = v3;
  v8[1] = sub_10004A274;
  return sub_10020D384(a1, a2, v7, v6);
}

uint64_t sub_10020E010()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[2] = v2;
  v4[3] = v3;
  v4[1] = sub_10004A274;
  return _swift_task_switch(sub_10020D898, 0, 0);
}

uint64_t sub_10020E0C0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10020E0F8(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  int64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  void *v8 = v3;
  v8[1] = sub_100018CD0;
  return sub_10020CD68(a1, a2, v7, v6);
}

uint64_t sub_10020E1B0()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[2] = v2;
  v4[3] = v3;
  v4[1] = sub_10004A274;
  return _swift_task_switch(sub_10020D27C, 0, 0);
}

uint64_t sub_10020E260(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v10 = v2[6];
  int64_t v11 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v11;
  *int64_t v11 = v3;
  v11[1] = sub_10004A274;
  return sub_10020C360(a1, a2, v6, v7, v8, v9, v10);
}

uint64_t sub_10020E338()
{
  uint64_t v17 = type metadata accessor for Account();
  uint64_t v1 = *(void *)(v17 - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v14 = (v2 + 72) & ~v2;
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v16 = type metadata accessor for Destination();
  uint64_t v4 = *(void *)(v16 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (v14 + v3 + v5) & ~v5;
  unint64_t v7 = (*(void *)(v4 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = type metadata accessor for MessageContext();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = (v7 + v10 + 8) & ~v10;
  uint64_t v15 = v11 + *(void *)(v9 + 64);
  uint64_t v12 = v2 | v5 | v10 | 7;
  swift_unknownObjectRelease();
  sub_1000233E4(v0 + 32);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + v14, v17);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v6, v16);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0 + v11, v8);

  return _swift_deallocObject(v0, v15, v12);
}

uint64_t sub_10020E53C()
{
  uint64_t v2 = *(void *)(type metadata accessor for Account() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(type metadata accessor for Destination() - 8);
  unint64_t v6 = (v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(type metadata accessor for MessageContext() - 8) + 80);
  uint64_t v9 = v7 + v8 + 8;
  uint64_t v10 = v0 + 32;
  uint64_t v11 = v0 + v3;
  uint64_t v12 = v0 + v6;
  uint64_t v13 = *(void *)(v0 + v7);
  uint64_t v14 = v0 + (v9 & ~v8);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v15;
  *uint64_t v15 = v1;
  v15[5] = v13;
  v15[6] = v14;
  v15[3] = v11;
  v15[4] = v12;
  v15[1] = sub_10004A274;
  v15[2] = v10;
  return _swift_task_switch(sub_10020CB68, 0, 0);
}

uint64_t sub_10020E700(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v11 = v2[6];
  uint64_t v10 = v2[7];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v12;
  *uint64_t v12 = v3;
  v12[1] = sub_10004A274;
  return sub_10020B84C(a1, a2, v6, v7, v8, v9, v11, v10);
}

uint64_t sub_10020E7DC()
{
  uint64_t v23 = type metadata accessor for Account();
  uint64_t v1 = *(void *)(v23 - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v19 = (v2 + 72) & ~v2;
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v22 = type metadata accessor for Destination();
  uint64_t v4 = *(void *)(v22 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (v19 + v3 + v5) & ~v5;
  uint64_t v17 = v6;
  uint64_t v7 = *(void *)(v4 + 64);
  uint64_t v21 = sub_100044014(&qword_1003ECF50);
  uint64_t v8 = *(void *)(v21 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (v6 + v7 + v9) & ~v9;
  unint64_t v16 = (*(void *)(v8 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = type metadata accessor for MessageContext();
  uint64_t v11 = *(void *)(v20 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = (v16 + v12 + 8) & ~v12;
  uint64_t v18 = v13 + *(void *)(v11 + 64);
  uint64_t v14 = v2 | v5 | v12 | v9 | 7;
  swift_unknownObjectRelease();
  sub_1000233E4(v0 + 32);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + v19, v23);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v17, v22);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v10, v21);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0 + v13, v20);

  return _swift_deallocObject(v0, v18, v14);
}

uint64_t sub_10020EA70()
{
  uint64_t v2 = *(void *)(type metadata accessor for Account() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(type metadata accessor for Destination() - 8);
  unint64_t v6 = (v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_100044014(&qword_1003ECF50) - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v10 = (*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(unsigned __int8 *)(*(void *)(type metadata accessor for MessageContext() - 8) + 80);
  uint64_t v12 = v10 + v11 + 8;
  uint64_t v13 = v0 + 32;
  uint64_t v14 = v0 + v3;
  uint64_t v15 = v0 + v6;
  uint64_t v16 = v0 + v9;
  uint64_t v17 = *(void *)(v0 + v10);
  uint64_t v18 = v0 + (v12 & ~v11);
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v19;
  *uint64_t v19 = v1;
  v19[6] = v17;
  v19[7] = v18;
  v19[4] = v15;
  v19[5] = v16;
  v19[2] = v13;
  v19[3] = v14;
  v19[1] = sub_10004A274;
  return _swift_task_switch(sub_10020C15C, 0, 0);
}

uint64_t sub_10020EC98(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v9 = v2[4];
  uint64_t v8 = v2[5];
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  *unint64_t v10 = v3;
  v10[1] = sub_10004A274;
  return sub_10020AF68(a1, a2, v6, v7, v9, v8);
}

uint64_t sub_10020ED60()
{
  uint64_t v17 = type metadata accessor for Account();
  uint64_t v1 = *(void *)(v17 - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 72) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v16 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v16 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v3 + v4 + v6) & ~v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = type metadata accessor for Destination();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (v7 + v8 + v11) & ~v11;
  uint64_t v15 = v12 + *(void *)(v10 + 64);
  uint64_t v13 = v2 | v6 | v11 | 7;
  swift_unknownObjectRelease();
  sub_1000233E4(v0 + 32);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + v3, v17);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v7, v16);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v12, v9);

  return _swift_deallocObject(v0, v15, v13);
}

uint64_t sub_10020EF48()
{
  uint64_t v2 = *(void *)(type metadata accessor for Account() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v6 = (v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(type metadata accessor for Destination() - 8) + 80);
  unint64_t v9 = v6 + v7 + v8;
  uint64_t v10 = v0 + 32;
  uint64_t v11 = v0 + v3;
  uint64_t v12 = v0 + v6;
  uint64_t v13 = v0 + (v9 & ~v8);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v14;
  *uint64_t v14 = v1;
  v14[4] = v12;
  v14[5] = v13;
  v14[2] = v10;
  v14[3] = v11;
  v14[1] = sub_10004A274;
  return _swift_task_switch(sub_10020B740, 0, 0);
}

unsigned char *storeEnumTagSinglePayload for LocalMessageType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10020F1D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalMessageType()
{
  return &type metadata for LocalMessageType;
}

uint64_t sub_10020F208@<X0>(unsigned int *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10020F4B4(*a1);
  *a2 = result;
  return result;
}

void sub_10020F234(void *a1@<X8>)
{
  *a1 = &off_1003DD740;
}

uint64_t sub_10020F244()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_10020F2A4()
{
  return RawRepresentable<>.encode(to:)();
}

unint64_t sub_10020F2F8()
{
  unint64_t result = qword_1003F2140;
  if (!qword_1003F2140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003F2140);
  }
  return result;
}

unint64_t sub_10020F350()
{
  unint64_t result = qword_1003F2148;
  if (!qword_1003F2148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003F2148);
  }
  return result;
}

unint64_t sub_10020F3A8()
{
  unint64_t result = qword_1003F2150;
  if (!qword_1003F2150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003F2150);
  }
  return result;
}

unint64_t sub_10020F400()
{
  unint64_t result = qword_1003F2158;
  if (!qword_1003F2158)
  {
    sub_10004AE58(&qword_1003F2160);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003F2158);
  }
  return result;
}

unint64_t sub_10020F460()
{
  unint64_t result = qword_1003F2168;
  if (!qword_1003F2168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003F2168);
  }
  return result;
}

uint64_t sub_10020F4B4(uint64_t result)
{
  if (result >= 4) {
    return 4;
  }
  else {
    return result;
  }
}

uint64_t sub_10020F4C4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100052FAC(v0, qword_10040B840);
  uint64_t v1 = sub_100044058(v0, (uint64_t)qword_10040B840);
  if (qword_1003EC0A0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100044058(v0, (uint64_t)qword_10040B858);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10020F58C()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_10020F5AC, v0, 0);
}

uint64_t sub_10020F5AC()
{
  v0[3] = *(void *)(v0[2] + 128);
  swift_retain();
  sub_100044014(&qword_1003F1D28);
  sub_100210DF8();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[4] = v2;
  v0[5] = v1;
  return _swift_task_switch(sub_10020F644, v2, v1);
}

uint64_t sub_10020F644()
{
  uint64_t v1 = *(void *)(v0 + 16);
  dispatch thunk of LocalMessaging.set(didDeliverCallback:)();
  swift_release();
  return _swift_task_switch(sub_10020F6CC, v1, 0);
}

uint64_t sub_10020F6CC()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  swift_retain();
  return _swift_task_switch(sub_10020F744, v1, v2);
}

uint64_t sub_10020F744()
{
  uint64_t v1 = *(void *)(v0 + 16);
  dispatch thunk of LocalMessaging.set(messageReceivedCallback:)();
  swift_release();
  return _swift_task_switch(sub_10020F7CC, v1, 0);
}

uint64_t sub_10020F7CC()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  swift_retain();
  return _swift_task_switch(sub_10020F844, v1, v2);
}

uint64_t sub_10020F844()
{
  uint64_t v1 = *(void *)(v0 + 16);
  dispatch thunk of LocalMessaging.set(accountChangedCallback:)();
  swift_release();
  return _swift_task_switch(sub_10020F8CC, v1, 0);
}

uint64_t sub_10020F8CC()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  swift_retain();
  return _swift_task_switch(sub_10020F944, v1, v2);
}

uint64_t sub_10020F944()
{
  uint64_t v1 = *(void *)(v0 + 16);
  dispatch thunk of LocalMessaging.set(devicesChangedCallback:)();
  swift_release();
  return _swift_task_switch(sub_10020F9CC, v1, 0);
}

uint64_t sub_10020F9CC()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  swift_retain();
  return _swift_task_switch(sub_10020FA44, v1, v2);
}

uint64_t sub_10020FA44()
{
  dispatch thunk of LocalMessaging.set(connectedDevicesChangedCallback:)();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10020FAC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return _swift_task_switch(sub_10020FAEC, a4, 0);
}

uint64_t sub_10020FAEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + 32);
  uint64_t v3 = *(void *)(v2 + 40);
  uint64_t v5 = sub_1002132C8(qword_1003F22C0, a2, (void (*)(uint64_t))type metadata accessor for LocalMessagingService);
  uint64_t v6 = swift_task_alloc();
  *(void *)(v2 + 48) = v6;
  long long v7 = *(_OWORD *)(v2 + 16);
  *(void *)(v6 + 16) = v3;
  *(_OWORD *)(v6 + 24) = v7;
  *(void *)(v6 + 40) = v4;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 56) = v8;
  void *v8 = v2;
  v8[1] = sub_100209734;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v8, (char *)&type metadata for () + 8, (char *)&type metadata for () + 8, v3, v5, &unk_1003F23F0, v6, (char *)&type metadata for () + 8);
}

uint64_t sub_10020FC1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return _swift_task_switch(sub_10020FC44, a6, 0);
}

uint64_t sub_10020FC44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + 48);
  uint64_t v3 = *(void *)(v2 + 56);
  uint64_t v5 = sub_1002132C8(qword_1003F22C0, a2, (void (*)(uint64_t))type metadata accessor for LocalMessagingService);
  uint64_t v6 = swift_task_alloc();
  *(void *)(v2 + 64) = v6;
  long long v7 = *(_OWORD *)(v2 + 16);
  long long v8 = *(_OWORD *)(v2 + 32);
  *(void *)(v6 + 16) = v3;
  *(_OWORD *)(v6 + 24) = v7;
  *(_OWORD *)(v6 + 40) = v8;
  *(void *)(v6 + 56) = v4;
  unint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 72) = v9;
  void *v9 = v2;
  v9[1] = sub_1002099BC;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v9, (char *)&type metadata for () + 8, (char *)&type metadata for () + 8, v3, v5, &unk_1003F23C0, v6, (char *)&type metadata for () + 8);
}

uint64_t sub_10020FD78(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_10020FD94, a2, 0);
}

uint64_t sub_10020FD94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2[2];
  uint64_t v3 = v2[3];
  uint64_t v5 = sub_1002132C8(qword_1003F22C0, a2, (void (*)(uint64_t))type metadata accessor for LocalMessagingService);
  uint64_t v6 = swift_task_alloc();
  v2[4] = v6;
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = v4;
  long long v7 = (void *)swift_task_alloc();
  v2[5] = v7;
  *long long v7 = v2;
  v7[1] = sub_100209EAC;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v7, (char *)&type metadata for () + 8, (char *)&type metadata for () + 8, v3, v5, &unk_1003F2398, v6, (char *)&type metadata for () + 8);
}

uint64_t sub_10020FEB8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_10020FED4, a2, 0);
}

uint64_t sub_10020FED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2[2];
  uint64_t v3 = v2[3];
  uint64_t v5 = sub_1002132C8(qword_1003F22C0, a2, (void (*)(uint64_t))type metadata accessor for LocalMessagingService);
  uint64_t v6 = swift_task_alloc();
  v2[4] = v6;
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = v4;
  long long v7 = (void *)swift_task_alloc();
  v2[5] = v7;
  *long long v7 = v2;
  v7[1] = sub_10020A118;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v7, (char *)&type metadata for () + 8, (char *)&type metadata for () + 8, v3, v5, &unk_1003F2370, v6, (char *)&type metadata for () + 8);
}

uint64_t sub_10020FFF8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_100210014, a2, 0);
}

uint64_t sub_100210014(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2[2];
  uint64_t v3 = v2[3];
  uint64_t v5 = sub_1002132C8(qword_1003F22C0, a2, (void (*)(uint64_t))type metadata accessor for LocalMessagingService);
  uint64_t v6 = swift_task_alloc();
  v2[4] = v6;
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = v4;
  long long v7 = (void *)swift_task_alloc();
  v2[5] = v7;
  *long long v7 = v2;
  v7[1] = sub_100209EAC;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v7, (char *)&type metadata for () + 8, (char *)&type metadata for () + 8, v3, v5, &unk_1003F2350, v6, (char *)&type metadata for () + 8);
}

uint64_t sub_100210138(uint64_t a1, uint64_t a2)
{
  v3[4] = a1;
  v3[5] = a2;
  uint64_t v4 = type metadata accessor for SystemVersionNumber();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  v3[9] = swift_task_alloc();
  return _swift_task_switch(sub_100210208, v2, 0);
}

uint64_t sub_100210208()
{
  uint64_t v27 = v0;
  if (qword_1003EC098 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[4];
  uint64_t v3 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[5];
  uint64_t v7 = type metadata accessor for Logger();
  sub_100044058(v7, (uint64_t)qword_10040B840);
  long long v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v8(v2, v1, v4);
  v8(v3, v6, v4);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  BOOL v11 = os_log_type_enabled(v9, v10);
  uint64_t v13 = v0[8];
  uint64_t v12 = v0[9];
  uint64_t v15 = v0[6];
  uint64_t v14 = v0[7];
  if (v11)
  {
    uint64_t v25 = v0[8];
    uint64_t v16 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315394;
    sub_1002132C8(&qword_1003F0108, 255, (void (*)(uint64_t))&type metadata accessor for SystemVersionNumber);
    uint64_t v17 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[2] = sub_100037004(v17, v18, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v19(v12, v15);
    *(_WORD *)(v16 + 12) = 2080;
    uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[3] = sub_100037004(v20, v21, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v19(v25, v15);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "STUB: migrate from %s to %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v22(v12, v15);
    v22(v13, v15);
  }

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
  return v23();
}

uint64_t sub_10021051C(uint64_t a1, uint64_t a2)
{
  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  uint64_t v4 = type metadata accessor for UUID();
  v3[14] = v4;
  v3[15] = *(void *)(v4 - 8);
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  return _swift_task_switch(sub_1002105F0, v2, 0);
}

uint64_t sub_1002105F0()
{
  uint64_t v24 = v0;
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[14];
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[12];
  UUID.init()();
  uint64_t v6 = v3;
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v7(v2, v1, v6);
  sub_100050C1C(v5, (uint64_t)(v0 + 2));
  swift_beginAccess();
  sub_10012C41C((uint64_t)(v0 + 2), v2);
  swift_endAccess();
  if (qword_1003EC098 != -1) {
    swift_once();
  }
  uint64_t v8 = v0[16];
  uint64_t v9 = v0[14];
  uint64_t v10 = v0[11];
  uint64_t v11 = type metadata accessor for Logger();
  sub_100044058(v11, (uint64_t)qword_10040B840);
  v7(v8, v10, v9);
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.info.getter();
  BOOL v14 = os_log_type_enabled(v12, v13);
  uint64_t v16 = v0[15];
  uint64_t v15 = v0[16];
  uint64_t v17 = v0[14];
  if (v14)
  {
    unint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)unint64_t v18 = 136446210;
    sub_1002132C8(&qword_1003ECF68, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v19 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[10] = sub_100037004(v19, v20, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Added client: %{public}s", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v16 + 8))(v0[16], v0[14]);
  }

  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_1002108DC()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for LocalMessagingService()
{
  return self;
}

uint64_t sub_100210950(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  uint64_t v5 = type metadata accessor for LocalMessagingService();
  *uint64_t v4 = v2;
  v4[1] = sub_10004A274;
  return ActorServiceProtocol.initialLaunchProcessing()(v5, a2);
}

uint64_t sub_1002109F8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10004A274;
  return sub_100210138(a1, a2);
}

uint64_t sub_100210A9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  uint64_t v5 = type metadata accessor for LocalMessagingService();
  *uint64_t v4 = v2;
  v4[1] = sub_10004A274;
  return ActorServiceProtocol.firstLaunchSinceReboot()(v5, a2);
}

uint64_t sub_100210B44()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100018CD0;
  v2[2] = v0;
  return _swift_task_switch(sub_10020F5AC, v0, 0);
}

uint64_t sub_100210BE8()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_100210C08, v0, 0);
}

uint64_t sub_100210C08()
{
  *(void *)(v0 + 24) = *(void *)(*(void *)(v0 + 16) + 128);
  sub_100044014(&qword_1003F1D28);
  sub_100210DF8();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100210C9C, v2, v1);
}

uint64_t sub_100210C9C()
{
  dispatch thunk of LocalMessaging.start()();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100210D00()
{
  type metadata accessor for LocalMessagingService();
  sub_1002132C8(&qword_1003F1D30, v0, (void (*)(uint64_t))type metadata accessor for LocalMessagingService);
  return ActorServiceProtocol.description.getter();
}

uint64_t sub_100210D68(uint64_t a1, uint64_t a2)
{
  return sub_1002132C8(&qword_1003F22B8, a2, (void (*)(uint64_t))type metadata accessor for LocalMessagingService);
}

uint64_t sub_100210DB0(uint64_t a1, uint64_t a2)
{
  return sub_1002132C8(qword_1003F22C0, a2, (void (*)(uint64_t))type metadata accessor for LocalMessagingService);
}

unint64_t sub_100210DF8()
{
  unint64_t result = qword_1003F22F0;
  if (!qword_1003F22F0)
  {
    sub_10004AE58(&qword_1003F1D28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1003F22F0);
  }
  return result;
}

uint64_t sub_100210E54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[25] = a5;
  v6[26] = a6;
  v6[23] = a3;
  v6[24] = a4;
  v6[22] = a2;
  uint64_t v8 = type metadata accessor for Destination();
  v6[27] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v6[28] = v9;
  v6[29] = *(void *)(v9 + 64);
  v6[30] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for UUID();
  v6[31] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v6[32] = v11;
  v6[33] = *(void *)(v11 + 64);
  v6[34] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for Account();
  v6[35] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v6[36] = v13;
  v6[37] = *(void *)(v13 + 64);
  v6[38] = swift_task_alloc();
  sub_100044014((uint64_t *)&unk_1003F3C10);
  v6[39] = swift_task_alloc();
  v6[40] = swift_task_alloc();
  return _swift_task_switch(sub_100211030, a3, 0);
}

uint64_t sub_100211030()
{
  uint64_t v44 = (long long *)(v0 + 16);
  uint64_t v58 = (long long *)(v0 + 56);
  uint64_t v1 = *(void *)(v0 + 288);
  uint64_t v2 = *(void *)(v0 + 256);
  uint64_t v3 = *(void *)(v0 + 224);
  uint64_t v4 = *(void *)(v0 + 184);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 136);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v39 = v5 + 64;
  uint64_t v7 = -1;
  uint64_t v8 = -1 << *(unsigned char *)(v5 + 32);
  if (-v8 < 64) {
    uint64_t v7 = ~(-1 << -(char)v8);
  }
  unint64_t v9 = v7 & v6;
  int64_t v40 = (unint64_t)(63 - v8) >> 6;
  uint64_t v42 = v2;
  uint64_t v43 = v1;
  uint64_t v41 = v3;
  uint64_t v45 = *(void *)(v4 + 136);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  while (1)
  {
    if (v9)
    {
      uint64_t v46 = (v9 - 1) & v9;
      int64_t v47 = v11;
      unint64_t v13 = __clz(__rbit64(v9)) | (v11 << 6);
      goto LABEL_23;
    }
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      return result;
    }
    if (v14 >= v40) {
      goto LABEL_31;
    }
    unint64_t v15 = *(void *)(v39 + 8 * v14);
    int64_t v16 = v11 + 1;
    if (!v15)
    {
      int64_t v16 = v11 + 2;
      if (v11 + 2 >= v40) {
        goto LABEL_31;
      }
      unint64_t v15 = *(void *)(v39 + 8 * v16);
      if (!v15)
      {
        int64_t v16 = v11 + 3;
        if (v11 + 3 >= v40) {
          goto LABEL_31;
        }
        unint64_t v15 = *(void *)(v39 + 8 * v16);
        if (!v15)
        {
          int64_t v16 = v11 + 4;
          if (v11 + 4 >= v40) {
            goto LABEL_31;
          }
          unint64_t v15 = *(void *)(v39 + 8 * v16);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v46 = (v15 - 1) & v15;
    int64_t v47 = v16;
    unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
LABEL_23:
    uint64_t v18 = *(void *)(v0 + 320);
    uint64_t v57 = *(void *)(v0 + 312);
    uint64_t v19 = *(void *)(v0 + 304);
    uint64_t v55 = *(void *)(v0 + 296);
    uint64_t v21 = *(void *)(v0 + 272);
    uint64_t v20 = *(void *)(v0 + 280);
    uint64_t v23 = *(void *)(v0 + 240);
    uint64_t v22 = *(void *)(v0 + 248);
    uint64_t v51 = v21;
    uint64_t v56 = *(void *)(v0 + 264);
    uint64_t v24 = *(void *)(v0 + 216);
    uint64_t v52 = v24;
    uint64_t v53 = v23;
    uint64_t v49 = *(void *)(v0 + 200);
    uint64_t v50 = *(void *)(v0 + 208);
    uint64_t v48 = *(void *)(v0 + 192);
    sub_100050C1C(*(void *)(v45 + 56) + 40 * v13, (uint64_t)v44);
    uint64_t v25 = type metadata accessor for TaskPriority();
    uint64_t v54 = *(void *)(v25 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56))(v18, 1, 1, v25);
    sub_100022CC0(v44, (uint64_t)v58);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v19, v48, v20);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16))(v21, v49, v22);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v23, v50, v24);
    unint64_t v26 = (*(unsigned __int8 *)(v43 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
    unint64_t v27 = (v55 + *(unsigned __int8 *)(v42 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
    unint64_t v28 = (v56 + *(unsigned __int8 *)(v41 + 80) + v27) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = 0;
    *(void *)(v29 + 24) = 0;
    sub_100022CC0(v58, v29 + 32);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v43 + 32))(v29 + v26, v19, v20);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v42 + 32))(v29 + v27, v51, v22);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v41 + 32))(v29 + v28, v53, v52);
    sub_100081214(v18, v57);
    int v30 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v57, 1, v25);
    uint64_t v31 = *(void *)(v0 + 312);
    if (v30 == 1)
    {
      sub_100179DF0(*(void *)(v0 + 312));
    }
    else
    {
      TaskPriority.rawValue.getter();
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v31, v25);
    }
    unint64_t v9 = v46;
    int64_t v11 = v47;
    if (*(void *)(v29 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v32 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v34 = v33;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v32 = 0;
      uint64_t v34 = 0;
    }
    uint64_t v35 = **(void **)(v0 + 176);
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = &unk_1003F2400;
    *(void *)(v36 + 24) = v29;
    uint64_t v37 = v34 | v32;
    if (v34 | v32)
    {
      uint64_t v37 = v0 + 96;
      *(void *)(v0 + 96) = 0;
      *(void *)(v0 + 104) = 0;
      *(void *)(v0 + 112) = v32;
      *(void *)(v0 + 120) = v34;
    }
    uint64_t v12 = *(void *)(v0 + 320);
    *(void *)(v0 + 152) = 1;
    *(void *)(v0 + 160) = v37;
    *(void *)(v0 + 168) = v35;
    swift_task_create();
    swift_release();
    uint64_t result = sub_100179DF0(v12);
  }
  uint64_t v17 = v11 + 5;
  if (v11 + 5 < v40)
  {
    unint64_t v15 = *(void *)(v39 + 8 * v17);
    if (!v15)
    {
      while (1)
      {
        int64_t v16 = v17 + 1;
        if (__OFADD__(v17, 1)) {
          goto LABEL_35;
        }
        if (v16 >= v40) {
          goto LABEL_31;
        }
        unint64_t v15 = *(void *)(v39 + 8 * v16);
        ++v17;
        if (v15) {
          goto LABEL_22;
        }
      }
    }
    int64_t v16 = v11 + 5;
    goto LABEL_22;
  }
LABEL_31:
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v38 = *(uint64_t (**)(void))(v0 + 8);
  return v38();
}

uint64_t sub_100211608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  return _swift_task_switch(sub_10021162C, 0, 0);
}

uint64_t sub_10021162C()
{
  sub_100042524(*(void **)(v0 + 16), *(void *)(*(void *)(v0 + 16) + 24));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000F4428;
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 24);
  return sub_1002CD2C4(v4, v2, v3);
}

uint64_t sub_1002116D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[27] = a7;
  v8[28] = a8;
  v8[25] = a5;
  v8[26] = a6;
  v8[23] = a3;
  v8[24] = a4;
  v8[22] = a2;
  uint64_t v10 = type metadata accessor for MessageContext();
  v8[29] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v8[30] = v11;
  v8[31] = *(void *)(v11 + 64);
  v8[32] = swift_task_alloc();
  uint64_t v12 = sub_100044014(&qword_1003F23C8);
  v8[33] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v8[34] = v13;
  v8[35] = *(void *)(v13 + 64);
  v8[36] = swift_task_alloc();
  uint64_t v14 = type metadata accessor for Destination();
  v8[37] = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  v8[38] = v15;
  v8[39] = *(void *)(v15 + 64);
  v8[40] = swift_task_alloc();
  uint64_t v16 = type metadata accessor for Account();
  v8[41] = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  v8[42] = v17;
  v8[43] = *(void *)(v17 + 64);
  v8[44] = swift_task_alloc();
  sub_100044014((uint64_t *)&unk_1003F3C10);
  v8[45] = swift_task_alloc();
  v8[46] = swift_task_alloc();
  return _swift_task_switch(sub_10021191C, a3, 0);
}

uint64_t sub_10021191C()
{
  uint64_t v46 = (long long *)(v0 + 16);
  v65 = (long long *)(v0 + 56);
  uint64_t v1 = *(void *)(v0 + 336);
  uint64_t v2 = *(void *)(v0 + 304);
  uint64_t v4 = *(void *)(v0 + 272);
  uint64_t v3 = *(void *)(v0 + 280);
  uint64_t v5 = *(void *)(v0 + 240);
  uint64_t v6 = *(void *)(v0 + 184);
  swift_beginAccess();
  uint64_t v7 = *(void *)(v6 + 136);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v40 = v7 + 64;
  uint64_t v9 = -1;
  uint64_t v10 = -1 << *(unsigned char *)(v7 + 32);
  if (-v10 < 64) {
    uint64_t v9 = ~(-1 << -(char)v10);
  }
  unint64_t v11 = v9 & v8;
  int64_t v41 = (unint64_t)(63 - v10) >> 6;
  uint64_t v44 = v2;
  uint64_t v45 = v1;
  uint64_t v42 = v3 + 7;
  uint64_t v43 = v4;
  uint64_t v47 = *(void *)(v6 + 136);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  while (1)
  {
    if (v11)
    {
      uint64_t v48 = (v11 - 1) & v11;
      int64_t v49 = v13;
      unint64_t v15 = __clz(__rbit64(v11)) | (v13 << 6);
      goto LABEL_23;
    }
    int64_t v16 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      return result;
    }
    if (v16 >= v41) {
      goto LABEL_31;
    }
    unint64_t v17 = *(void *)(v40 + 8 * v16);
    int64_t v18 = v13 + 1;
    if (!v17)
    {
      int64_t v18 = v13 + 2;
      if (v13 + 2 >= v41) {
        goto LABEL_31;
      }
      unint64_t v17 = *(void *)(v40 + 8 * v18);
      if (!v17)
      {
        int64_t v18 = v13 + 3;
        if (v13 + 3 >= v41) {
          goto LABEL_31;
        }
        unint64_t v17 = *(void *)(v40 + 8 * v18);
        if (!v17)
        {
          int64_t v18 = v13 + 4;
          if (v13 + 4 >= v41) {
            goto LABEL_31;
          }
          unint64_t v17 = *(void *)(v40 + 8 * v18);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v48 = (v17 - 1) & v17;
    int64_t v49 = v18;
    unint64_t v15 = __clz(__rbit64(v17)) + (v18 << 6);
LABEL_23:
    uint64_t v20 = *(void *)(v0 + 368);
    uint64_t v62 = v20;
    uint64_t v64 = *(void *)(v0 + 360);
    uint64_t v21 = *(void *)(v0 + 352);
    uint64_t v57 = *(void *)(v0 + 344);
    uint64_t v23 = *(void *)(v0 + 320);
    uint64_t v22 = *(void *)(v0 + 328);
    uint64_t v24 = *(void *)(v0 + 288);
    uint64_t v25 = *(void *)(v0 + 296);
    uint64_t v54 = v25;
    uint64_t v55 = v23;
    uint64_t v26 = *(void *)(v0 + 264);
    uint64_t v56 = v26;
    uint64_t v58 = *(void *)(v0 + 312);
    uint64_t v66 = *(void *)(v0 + 232);
    uint64_t v67 = *(void *)(v0 + 256);
    uint64_t v53 = *(void *)(v0 + 224);
    uint64_t v63 = *(void *)(v0 + 216);
    uint64_t v51 = *(void *)(v0 + 200);
    uint64_t v52 = *(void *)(v0 + 208);
    uint64_t v50 = *(void *)(v0 + 192);
    sub_100050C1C(*(void *)(v47 + 56) + 40 * v15, (uint64_t)v46);
    uint64_t v60 = type metadata accessor for TaskPriority();
    uint64_t v61 = *(void *)(v60 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56))(v20, 1, 1, v60);
    sub_100022CC0(v46, (uint64_t)v65);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16))(v21, v50, v22);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v23, v51, v25);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v24, v52, v26);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v67, v53, v66);
    unint64_t v27 = (*(unsigned __int8 *)(v45 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
    unint64_t v28 = (v57 + *(unsigned __int8 *)(v44 + 80) + v27) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
    unint64_t v29 = (v58 + *(unsigned __int8 *)(v43 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
    unint64_t v59 = (v42 + v29) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v30 = (*(unsigned __int8 *)(v5 + 80) + v59 + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = 0;
    *(void *)(v31 + 24) = 0;
    sub_100022CC0(v65, v31 + 32);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v45 + 32))(v31 + v27, v21, v22);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v44 + 32))(v31 + v28, v55, v54);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v43 + 32))(v31 + v29, v24, v56);
    *(void *)(v31 + v59) = v63;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v31 + v30, v67, v66);
    sub_100081214(v62, v64);
    LODWORD(v27) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v64, 1, v60);
    swift_bridgeObjectRetain();
    uint64_t v32 = *(void *)(v0 + 360);
    if (v27 == 1)
    {
      sub_100179DF0(*(void *)(v0 + 360));
    }
    else
    {
      TaskPriority.rawValue.getter();
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v32, v60);
    }
    unint64_t v11 = v48;
    int64_t v13 = v49;
    if (*(void *)(v31 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v33 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v35 = v34;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v33 = 0;
      uint64_t v35 = 0;
    }
    uint64_t v36 = **(void **)(v0 + 176);
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = &unk_1003F23D8;
    *(void *)(v37 + 24) = v31;
    uint64_t v38 = v35 | v33;
    if (v35 | v33)
    {
      uint64_t v38 = v0 + 96;
      *(void *)(v0 + 96) = 0;
      *(void *)(v0 + 104) = 0;
      *(void *)(v0 + 112) = v33;
      *(void *)(v0 + 120) = v35;
    }
    uint64_t v14 = *(void *)(v0 + 368);
    *(void *)(v0 + 152) = 1;
    *(void *)(v0 + 160) = v38;
    *(void *)(v0 + 168) = v36;
    swift_task_create();
    swift_release();
    uint64_t result = sub_100179DF0(v14);
  }
  uint64_t v19 = v13 + 5;
  if (v13 + 5 < v41)
  {
    unint64_t v17 = *(void *)(v40 + 8 * v19);
    if (!v17)
    {
      while (1)
      {
        int64_t v18 = v19 + 1;
        if (__OFADD__(v19, 1)) {
          goto LABEL_35;
        }
        if (v18 >= v41) {
          goto LABEL_31;
        }
        unint64_t v17 = *(void *)(v40 + 8 * v18);
        ++v19;
        if (v17) {
          goto LABEL_22;
        }
      }
    }
    int64_t v18 = v13 + 5;
    goto LABEL_22;
  }
LABEL_31:
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
  return v39();
}

uint64_t sub_100211FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[5] = a7;
  v7[6] = v9;
  v7[3] = a5;
  v7[4] = a6;
  v7[2] = a4;
  return _swift_task_switch(sub_100211FE4, 0, 0);
}

uint64_t sub_100211FE4()
{
  sub_100042524(*(void **)(v0 + 16), *(void *)(*(void *)(v0 + 16) + 24));
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1003F43A8 + dword_1003F43A8);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10020CC74;
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  return v6(v4, v3, v2);
}

uint64_t sub_1002120A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[23] = a3;
  v4[24] = a4;
  v4[22] = a2;
  sub_100044014((uint64_t *)&unk_1003F3C10);
  v4[25] = swift_task_alloc();
  v4[26] = swift_task_alloc();
  return _swift_task_switch(sub_10021214C, a3, 0);
}

uint64_t sub_10021214C()
{
  uint64_t v33 = (long long *)(v0 + 56);
  uint64_t v34 = (long long *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 184);
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 136);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v31 = v2 + 64;
  uint64_t v4 = -1;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  if (-v5 < 64) {
    uint64_t v4 = ~(-1 << -(char)v5);
  }
  unint64_t v6 = v4 & v3;
  int64_t v32 = (unint64_t)(63 - v5) >> 6;
  uint64_t v35 = *(void *)(v1 + 136);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      uint64_t v36 = (v6 - 1) & v6;
      int64_t v11 = v8;
      unint64_t v12 = v10 | (v8 << 6);
      goto LABEL_23;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      return result;
    }
    if (v13 >= v32) {
      goto LABEL_31;
    }
    unint64_t v14 = *(void *)(v31 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v32) {
        goto LABEL_31;
      }
      unint64_t v14 = *(void *)(v31 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v32) {
          goto LABEL_31;
        }
        unint64_t v14 = *(void *)(v31 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v32) {
            goto LABEL_31;
          }
          unint64_t v14 = *(void *)(v31 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v36 = (v14 - 1) & v14;
    int64_t v11 = v15;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_23:
    uint64_t v18 = *(void *)(v0 + 200);
    uint64_t v17 = *(void *)(v0 + 208);
    uint64_t v19 = *(void *)(v0 + 192);
    sub_100050C1C(*(void *)(v35 + 56) + 40 * v12, (uint64_t)v34);
    uint64_t v20 = type metadata accessor for TaskPriority();
    uint64_t v21 = *(void *)(v20 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v17, 1, 1, v20);
    sub_100022CC0(v34, (uint64_t)v33);
    uint64_t v22 = (void *)swift_allocObject();
    v22[2] = 0;
    v22[3] = 0;
    sub_100022CC0(v33, (uint64_t)(v22 + 4));
    v22[9] = v19;
    sub_100081214(v17, v18);
    LODWORD(v17) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20);
    swift_bridgeObjectRetain();
    uint64_t v23 = *(void *)(v0 + 200);
    if (v17 == 1)
    {
      sub_100179DF0(*(void *)(v0 + 200));
    }
    else
    {
      TaskPriority.rawValue.getter();
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v20);
    }
    int64_t v8 = v11;
    unint64_t v6 = v36;
    if (v22[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v24 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v26 = v25;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v24 = 0;
      uint64_t v26 = 0;
    }
    uint64_t v27 = **(void **)(v0 + 176);
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = &unk_1003F23A8;
    *(void *)(v28 + 24) = v22;
    uint64_t v29 = v26 | v24;
    if (v26 | v24)
    {
      uint64_t v29 = v0 + 96;
      *(void *)(v0 + 96) = 0;
      *(void *)(v0 + 104) = 0;
      *(void *)(v0 + 112) = v24;
      *(void *)(v0 + 120) = v26;
    }
    uint64_t v9 = *(void *)(v0 + 208);
    *(void *)(v0 + 152) = 1;
    *(void *)(v0 + 160) = v29;
    *(void *)(v0 + 168) = v27;
    swift_task_create();
    swift_release();
    uint64_t result = sub_100179DF0(v9);
  }
  uint64_t v16 = v8 + 5;
  if (v8 + 5 < v32)
  {
    unint64_t v14 = *(void *)(v31 + 8 * v16);
    if (!v14)
    {
      while (1)
      {
        int64_t v15 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_35;
        }
        if (v15 >= v32) {
          goto LABEL_31;
        }
        unint64_t v14 = *(void *)(v31 + 8 * v15);
        ++v16;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v15 = v8 + 5;
    goto LABEL_22;
  }
LABEL_31:
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
  return v30();
}

uint64_t sub_100212594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return _swift_task_switch(sub_1002125B4, 0, 0);
}

uint64_t sub_1002125B4()
{
  sub_100042524(*(void **)(v0 + 16), *(void *)(*(void *)(v0 + 16) + 24));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10011C724;
  uint64_t v2 = *(void *)(v0 + 24);
  return sub_1002CE814(v2);
}

uint64_t sub_100212658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[23] = a3;
  v4[24] = a4;
  v4[22] = a2;
  sub_100044014((uint64_t *)&unk_1003F3C10);
  v4[25] = swift_task_alloc();
  v4[26] = swift_task_alloc();
  return _swift_task_switch(sub_100212704, a3, 0);
}

uint64_t sub_100212704()
{
  uint64_t v33 = (long long *)(v0 + 56);
  uint64_t v34 = (long long *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 184);
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 136);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v31 = v2 + 64;
  uint64_t v4 = -1;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  if (-v5 < 64) {
    uint64_t v4 = ~(-1 << -(char)v5);
  }
  unint64_t v6 = v4 & v3;
  int64_t v32 = (unint64_t)(63 - v5) >> 6;
  uint64_t v35 = *(void *)(v1 + 136);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      uint64_t v36 = (v6 - 1) & v6;
      int64_t v11 = v8;
      unint64_t v12 = v10 | (v8 << 6);
      goto LABEL_23;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      return result;
    }
    if (v13 >= v32) {
      goto LABEL_31;
    }
    unint64_t v14 = *(void *)(v31 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v32) {
        goto LABEL_31;
      }
      unint64_t v14 = *(void *)(v31 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v32) {
          goto LABEL_31;
        }
        unint64_t v14 = *(void *)(v31 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v32) {
            goto LABEL_31;
          }
          unint64_t v14 = *(void *)(v31 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v36 = (v14 - 1) & v14;
    int64_t v11 = v15;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_23:
    uint64_t v18 = *(void *)(v0 + 200);
    uint64_t v17 = *(void *)(v0 + 208);
    uint64_t v19 = *(void *)(v0 + 192);
    sub_100050C1C(*(void *)(v35 + 56) + 40 * v12, (uint64_t)v34);
    uint64_t v20 = type metadata accessor for TaskPriority();
    uint64_t v21 = *(void *)(v20 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v17, 1, 1, v20);
    sub_100022CC0(v34, (uint64_t)v33);
    uint64_t v22 = (void *)swift_allocObject();
    v22[2] = 0;
    v22[3] = 0;
    sub_100022CC0(v33, (uint64_t)(v22 + 4));
    v22[9] = v19;
    sub_100081214(v17, v18);
    LODWORD(v17) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20);
    swift_bridgeObjectRetain();
    uint64_t v23 = *(void *)(v0 + 200);
    if (v17 == 1)
    {
      sub_100179DF0(*(void *)(v0 + 200));
    }
    else
    {
      TaskPriority.rawValue.getter();
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v20);
    }
    int64_t v8 = v11;
    unint64_t v6 = v36;
    if (v22[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v24 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v26 = v25;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v24 = 0;
      uint64_t v26 = 0;
    }
    uint64_t v27 = **(void **)(v0 + 176);
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = &unk_1003F2380;
    *(void *)(v28 + 24) = v22;
    uint64_t v29 = v26 | v24;
    if (v26 | v24)
    {
      uint64_t v29 = v0 + 96;
      *(void *)(v0 + 96) = 0;
      *(void *)(v0 + 104) = 0;
      *(void *)(v0 + 112) = v24;
      *(void *)(v0 + 120) = v26;
    }
    uint64_t v9 = *(void *)(v0 + 208);
    *(void *)(v0 + 152) = 1;
    *(void *)(v0 + 160) = v29;
    *(void *)(v0 + 168) = v27;
    swift_task_create();
    swift_release();
    uint64_t result = sub_100179DF0(v9);
  }
  uint64_t v16 = v8 + 5;
  if (v8 + 5 < v32)
  {
    unint64_t v14 = *(void *)(v31 + 8 * v16);
    if (!v14)
    {
      while (1)
      {
        int64_t v15 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_35;
        }
        if (v15 >= v32) {
          goto LABEL_31;
        }
        unint64_t v14 = *(void *)(v31 + 8 * v15);
        ++v16;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v15 = v8 + 5;
    goto LABEL_22;
  }
LABEL_31:
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
  return v30();
}

uint64_t sub_100212B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return _swift_task_switch(sub_100212B6C, 0, 0);
}

uint64_t sub_100212B6C()
{
  sub_100042524(*(void **)(v0 + 16), *(void *)(*(void *)(v0 + 16) + 24));
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_100246A1C(v1);
  *(void *)(v0 + 32) = v2;
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10020D9C4;
  return sub_1002CEAC8(v2);
}

uint64_t sub_100212C34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[23] = a3;
  v4[24] = a4;
  v4[22] = a2;
  sub_100044014((uint64_t *)&unk_1003F3C10);
  v4[25] = swift_task_alloc();
  v4[26] = swift_task_alloc();
  return _swift_task_switch(sub_100212CE0, a3, 0);
}

uint64_t sub_100212CE0()
{
  uint64_t v33 = (long long *)(v0 + 56);
  uint64_t v34 = (long long *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 184);
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 136);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v31 = v2 + 64;
  uint64_t v4 = -1;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  if (-v5 < 64) {
    uint64_t v4 = ~(-1 << -(char)v5);
  }
  unint64_t v6 = v4 & v3;
  int64_t v32 = (unint64_t)(63 - v5) >> 6;
  uint64_t v35 = *(void *)(v1 + 136);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      uint64_t v36 = (v6 - 1) & v6;
      int64_t v11 = v8;
      unint64_t v12 = v10 | (v8 << 6);
      goto LABEL_23;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      return result;
    }
    if (v13 >= v32) {
      goto LABEL_31;
    }
    unint64_t v14 = *(void *)(v31 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v32) {
        goto LABEL_31;
      }
      unint64_t v14 = *(void *)(v31 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v32) {
          goto LABEL_31;
        }
        unint64_t v14 = *(void *)(v31 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v32) {
            goto LABEL_31;
          }
          unint64_t v14 = *(void *)(v31 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v36 = (v14 - 1) & v14;
    int64_t v11 = v15;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_23:
    uint64_t v18 = *(void *)(v0 + 200);
    uint64_t v17 = *(void *)(v0 + 208);
    uint64_t v19 = *(void *)(v0 + 192);
    sub_100050C1C(*(void *)(v35 + 56) + 40 * v12, (uint64_t)v34);
    uint64_t v20 = type metadata accessor for TaskPriority();
    uint64_t v21 = *(void *)(v20 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v17, 1, 1, v20);
    sub_100022CC0(v34, (uint64_t)v33);
    uint64_t v22 = (void *)swift_allocObject();
    v22[2] = 0;
    v22[3] = 0;
    sub_100022CC0(v33, (uint64_t)(v22 + 4));
    v22[9] = v19;
    sub_100081214(v17, v18);
    LODWORD(v17) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20);
    swift_bridgeObjectRetain();
    uint64_t v23 = *(void *)(v0 + 200);
    if (v17 == 1)
    {
      sub_100179DF0(*(void *)(v0 + 200));
    }
    else
    {
      TaskPriority.rawValue.getter();
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v20);
    }
    int64_t v8 = v11;
    unint64_t v6 = v36;
    if (v22[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v24 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v26 = v25;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v24 = 0;
      uint64_t v26 = 0;
    }
    uint64_t v27 = **(void **)(v0 + 176);
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = &unk_1003F2360;
    *(void *)(v28 + 24) = v22;
    uint64_t v29 = v26 | v24;
    if (v26 | v24)
    {
      uint64_t v29 = v0 + 96;
      *(void *)(v0 + 96) = 0;
      *(void *)(v0 + 104) = 0;
      *(void *)(v0 + 112) = v24;
      *(void *)(v0 + 120) = v26;
    }
    uint64_t v9 = *(void *)(v0 + 208);
    *(void *)(v0 + 152) = 1;
    *(void *)(v0 + 160) = v29;
    *(void *)(v0 + 168) = v27;
    swift_task_create();
    swift_release();
    uint64_t result = sub_100179DF0(v9);
  }
  uint64_t v16 = v8 + 5;
  if (v8 + 5 < v32)
  {
    unint64_t v14 = *(void *)(v31 + 8 * v16);
    if (!v14)
    {
      while (1)
      {
        int64_t v15 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_35;
        }
        if (v15 >= v32) {
          goto LABEL_31;
        }
        unint64_t v14 = *(void *)(v31 + 8 * v15);
        ++v16;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v15 = v8 + 5;
    goto LABEL_22;
  }
LABEL_31:
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
  return v30();
}

uint64_t sub_100213128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return _swift_task_switch(sub_100213148, 0, 0);
}

uint64_t sub_100213148()
{
  uint64_t v1 = sub_100042524(*(void **)(v0 + 16), *(void *)(*(void *)(v0 + 16) + 24));
  *(void *)(v0 + 32) = v1;
  uint64_t v2 = swift_bridgeObjectRetain();
  *(void *)(v0 + 40) = sub_100246A1C(v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = *v1;
  return _swift_task_switch(sub_1002131D4, v3, 0);
}

uint64_t sub_1002131D4()
{
  sub_1002CED9C(*(void *)(v0 + 40));
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100213244()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100052FAC(v0, qword_10040B858);
  sub_100044058(v0, (uint64_t)qword_10040B858);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_1002132C8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100213310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  void *v8 = v4;
  v8[4] = a3;
  v8[5] = v3;
  v8[2] = a1;
  v8[3] = a2;
  v8[1] = sub_10004A274;
  return _swift_task_switch(sub_10020FAEC, v3, 0);
}

uint64_t sub_1002133D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  *unint64_t v12 = v6;
  v12[6] = a5;
  v12[7] = v5;
  v12[4] = a3;
  v12[5] = a4;
  v12[2] = a1;
  v12[3] = a2;
  v12[1] = sub_10004A274;
  return _swift_task_switch(sub_10020FC44, v5, 0);
}

uint64_t sub_1002134A4(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_10004A274;
  return _swift_task_switch(sub_10020FD94, v1, 0);
}

uint64_t sub_100213550(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_10004A274;
  return _swift_task_switch(sub_10020FED4, v1, 0);
}

uint64_t sub_1002135FC(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_10004A274;
  return _swift_task_switch(sub_100210014, v1, 0);
}

uint64_t sub_1002136A8(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  int64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  void *v8 = v3;
  v8[1] = sub_10004A274;
  return sub_100212C34(a1, a2, v7, v6);
}

uint64_t sub_100213760()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[2] = v2;
  v4[3] = v3;
  v4[1] = sub_10004A274;
  return _swift_task_switch(sub_100213148, 0, 0);
}

uint64_t sub_100213810()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100213848(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  int64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  void *v8 = v3;
  v8[1] = sub_10004A274;
  return sub_100212658(a1, a2, v7, v6);
}

uint64_t sub_100213900()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[2] = v2;
  v4[3] = v3;
  v4[1] = sub_10004A274;
  return _swift_task_switch(sub_100212B6C, 0, 0);
}

uint64_t sub_1002139B0(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  int64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  void *v8 = v3;
  v8[1] = sub_100018CD0;
  return sub_1002120A0(a1, a2, v7, v6);
}

uint64_t sub_100213A68()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[2] = v2;
  v4[3] = v3;
  v4[1] = sub_10004A274;
  return _swift_task_switch(sub_1002125B4, 0, 0);
}

uint64_t sub_100213B18(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v11 = v2[6];
  uint64_t v10 = v2[7];
  unint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v12;
  *unint64_t v12 = v3;
  v12[1] = sub_10004A274;
  return sub_1002116D4(a1, a2, v6, v7, v8, v9, v11, v10);
}

uint64_t sub_100213BF4()
{
  uint64_t v23 = type metadata accessor for Account();
  uint64_t v1 = *(void *)(v23 - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v19 = (v2 + 72) & ~v2;
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v22 = type metadata accessor for Destination();
  uint64_t v4 = *(void *)(v22 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (v19 + v3 + v5) & ~v5;
  uint64_t v17 = v6;
  uint64_t v7 = *(void *)(v4 + 64);
  uint64_t v21 = sub_100044014(&qword_1003F23C8);
  uint64_t v8 = *(void *)(v21 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (v6 + v7 + v9) & ~v9;
  unint64_t v16 = (*(void *)(v8 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = type metadata accessor for MessageContext();
  uint64_t v11 = *(void *)(v20 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = (v16 + v12 + 8) & ~v12;
  uint64_t v18 = v13 + *(void *)(v11 + 64);
  uint64_t v14 = v2 | v5 | v12 | v9 | 7;
  swift_unknownObjectRelease();
  sub_1000233E4(v0 + 32);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + v19, v23);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v17, v22);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v10, v21);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0 + v13, v20);

  return _swift_deallocObject(v0, v18, v14);
}

uint64_t sub_100213E88()
{
  uint64_t v2 = *(void *)(type metadata accessor for Account() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(type metadata accessor for Destination() - 8);
  unint64_t v6 = (v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_100044014(&qword_1003F23C8) - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v10 = (*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(unsigned __int8 *)(*(void *)(type metadata accessor for MessageContext() - 8) + 80);
  uint64_t v12 = v10 + v11 + 8;
  uint64_t v13 = v0 + 32;
  uint64_t v14 = v0 + v3;
  uint64_t v15 = v0 + v6;
  uint64_t v16 = v0 + v9;
  uint64_t v17 = v0 + (v12 & ~v11);
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v18;
  *uint64_t v18 = v1;
  v18[5] = v16;
  v18[6] = v17;
  v18[3] = v14;
  v18[4] = v15;
  v18[1] = sub_10004A274;
  v18[2] = v13;
  return _swift_task_switch(sub_100211FE4, 0, 0);
}

uint64_t sub_1002140A8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v9 = v2[4];
  uint64_t v8 = v2[5];
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  *unint64_t v10 = v3;
  v10[1] = sub_10004A274;
  return sub_100210E54(a1, a2, v6, v7, v9, v8);
}

uint64_t sub_100214170()
{
  uint64_t v17 = type metadata accessor for Account();
  uint64_t v1 = *(void *)(v17 - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 72) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v16 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v16 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v3 + v4 + v6) & ~v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = type metadata accessor for Destination();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (v7 + v8 + v11) & ~v11;
  uint64_t v15 = v12 + *(void *)(v10 + 64);
  uint64_t v13 = v2 | v6 | v11 | 7;
  swift_unknownObjectRelease();
  sub_1000233E4(v0 + 32);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + v3, v17);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v7, v16);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v12, v9);

  return _swift_deallocObject(v0, v15, v13);
}

uint64_t sub_100214358()
{
  uint64_t v2 = *(void *)(type metadata accessor for Account() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v6 = (v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(type metadata accessor for Destination() - 8) + 80);
  unint64_t v9 = v6 + v7 + v8;
  uint64_t v10 = v0 + 32;
  uint64_t v11 = v0 + v3;
  uint64_t v12 = v0 + v6;
  uint64_t v13 = v0 + (v9 & ~v8);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v14;
  *uint64_t v14 = v1;
  v14[4] = v12;
  v14[5] = v13;
  v14[2] = v10;
  v14[3] = v11;
  v14[1] = sub_10004A274;
  return _swift_task_switch(sub_10021162C, 0, 0);
}

uint64_t sub_100214514()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100052FAC(v0, qword_1003F2410);
  uint64_t v1 = sub_100044058(v0, (uint64_t)qword_1003F2410);
  if (qword_1003EC3F8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100044058(v0, (uint64_t)qword_10040C260);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1002145DC(uint64_t a1)
{
  return sub_1000E6C80(a1, qword_10040B870);
}

uint64_t sub_100214600(uint64_t a1)
{
  return sub_1000E6C80(a1, qword_10040B888);
}

uint64_t sub_100214620(uint64_t a1)
{
  return sub_1000E6C80(a1, qword_10040B8A0);
}

uint64_t sub_100214640(uint64_t a1)
{
  return sub_1000E6C80(a1, qword_10040B8B8);
}

uint64_t sub_10021466C(uint64_t a1)
{
  return sub_1000E6C80(a1, qword_10040B8D0);
}

uint64_t sub_100214690(uint64_t a1)
{
  return sub_1000E6C80(a1, qword_10040B8E8);
}

uint64_t sub_1002146AC(uint64_t a1)
{
  return sub_1000E6C80(a1, qword_10040B900);
}

uint64_t sub_1002146D8(uint64_t a1, char a2)
{
  uint64_t v4 = v2;
  v3[2] = a1;
  v3[3] = v2;
  uint64_t v7 = type metadata accessor for DatabaseState();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = swift_task_alloc();
  v3[4] = v9;
  swift_defaultActor_initialize();
  (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v9, enum case for DatabaseState.unavailable(_:), v7);
  sub_100044014(&qword_1003EF2D8);
  uint64_t v10 = swift_allocObject();
  *(_DWORD *)(v10 + ((*(unsigned int *)(*(void *)v10 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v10 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v10 + 16), v9, v7);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v7);
  *(void *)(v4 + 112) = v10;
  sub_100044014(&qword_1003EF2E0);
  swift_allocObject();
  *(void *)(v4 + 120) = AsyncStreamProvider.init()();
  *(void *)(v4 + 128) = 0;
  *(unsigned char *)(v4 + 136) = 0;
  *(_DWORD *)(v4 + OBJC_IVAR____TtC13findmylocated20LocalStorageDatabase_currentVersion) = 6;
  uint64_t v11 = v4 + OBJC_IVAR____TtC13findmylocated20LocalStorageDatabase_baseContainerURL;
  uint64_t v12 = type metadata accessor for URL();
  v3[5] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v3[6] = v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v11, a1, v12);
  *(unsigned char *)(v4 + OBJC_IVAR____TtC13findmylocated20LocalStorageDatabase_temporary) = a2;
  return _swift_task_switch(sub_1000E7014, v4, 0);
}

uint64_t sub_100214970()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC13findmylocated20LocalStorageDatabase_baseContainerURL;
  uint64_t v2 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_100214A04()
{
  return type metadata accessor for LocalStorageDatabase();
}

uint64_t sub_100214A0C()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100214ADC()
{
  return sub_100215AB0((unint64_t *)&unk_1003F2550, (void (*)(uint64_t))type metadata accessor for LocalStorageDatabase);
}

uint64_t sub_100214B24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC13findmylocated20LocalStorageDatabase_baseContainerURL;
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_100214B98(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 128) = a1;
  return swift_release();
}

uint64_t (*sub_100214BE0())()
{
  return j__swift_endAccess;
}

uint64_t sub_100214C34()
{
  return 6;
}

uint64_t sub_100214C3C()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC13findmylocated20LocalStorageDatabase_temporary);
}

uint64_t sub_100214C4C()
{
  return sub_10021C5F0();
}

uint64_t sub_100214C64()
{
  return URL.appendingPathComponent(_:isDirectory:)();
}

void sub_100214D10()
{
}

uint64_t sub_100214D48()
{
  uint64_t v1 = type metadata accessor for DatabaseState();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + 112);
  uint64_t v6 = v5 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v5 + 16);
  uint64_t v7 = (os_unfair_lock_s *)(v5 + ((*(unsigned int *)(*(void *)v5 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v7);
  sub_1000E808C(v6);
  os_unfair_lock_unlock(v7);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for DatabaseState.available(_:), v1);
  AsyncStreamProvider.yield(value:transaction:)();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

void sub_100214EC0(int a1, int a2, uint64_t a3)
{
}

void sub_100214ED8(int a1, int a2, uint64_t a3)
{
  uint64_t v28 = a3;
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  uint64_t v27 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1003EC0A8 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_100044058(v11, (uint64_t)qword_1003F2410);
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = v8;
    uint64_t v15 = v7;
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 67109376;
    LODWORD(v29) = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v16 + 8) = 1024;
    LODWORD(v29) = a2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Migrate schema %d -> %d", (uint8_t *)v16, 0xEu);
    uint64_t v7 = v15;
    uint64_t v8 = v14;
    swift_slowDealloc();
  }

  uint64_t v18 = v28;
  switch(a2)
  {
    case 1:
      v19._countAndFlagsBits = 0xD00000000000001FLL;
      v19._object = (void *)0x8000000100375570;
      Connection.execute(_:)(v19);
      if (!v20)
      {
        v21._countAndFlagsBits = 0xD000000000000018;
        v21._object = (void *)0x8000000100375590;
        Connection.execute(_:)(v21);
        if (!v22) {
          goto LABEL_10;
        }
      }
      return;
    case 2:
    case 3:
    case 6:
LABEL_10:
      __chkstk_darwin(v17);
      uint64_t v24 = v18;
      uint64_t v25 = v7;
      UUID.init()();
      UUID.uuidString.getter();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v27);
      break;
    case 4:
    case 5:
      __chkstk_darwin(v17);
      *(&v26 - 4) = v18;
      *(&v26 - 3) = (uint64_t)v4;
      uint64_t v24 = v7;
      UUID.init()();
      UUID.uuidString.getter();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v27);
      break;
    default:
      unint64_t v29 = 0;
      unint64_t v30 = 0xE000000000000000;
      _StringGuts.grow(_:)(21);
      swift_bridgeObjectRelease();
      unint64_t v29 = 0xD000000000000013;
      unint64_t v30 = 0x8000000100375550;
      int v31 = a2;
      v23._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v23);
      swift_bridgeObjectRelease();
      LODWORD(v25) = 0;
      uint64_t v24 = 274;
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      JUMPOUT(0x1002154E0);
  }
  Connection.savepoint(_:block:)();
  swift_bridgeObjectRelease();
}

void sub_1002154F8()
{
}

void sub_100215530()
{
}

void sub_100215568()
{
}

uint64_t sub_1002155A0()
{
  return Database.description.getter();
}

uint64_t sub_10021560C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  uint64_t v2 = type metadata accessor for LocalStorageDatabase();
  uint64_t v3 = sub_100215AB0(&qword_1003F2578, (void (*)(uint64_t))type metadata accessor for LocalStorageDatabase);
  *uint64_t v1 = v0;
  v1[1] = sub_1000E7F20;
  return Database.isolatedDescription.getter(v2, v3);
}

uint64_t sub_1002156F0()
{
  return sub_100215AB0(&qword_1003F2560, (void (*)(uint64_t))type metadata accessor for LocalStorageDatabase);
}

uint64_t sub_100215738()
{
  return sub_100215AB0(&qword_1003F2568, (void (*)(uint64_t))type metadata accessor for LocalStorageDatabase);
}

void sub_100215780()
{
  uint64_t v0 = type metadata accessor for SystemInfo.DeviceLockState();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v13 - v5;
  static SystemInfo.lockState.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for SystemInfo.DeviceLockState.beforeFirstUnlock(_:), v0);
  sub_100215AB0(&qword_1003F2570, (void (*)(uint64_t))&type metadata accessor for SystemInfo.DeviceLockState);
  char v7 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  v8(v6, v0);
  if (v7)
  {
    if (qword_1003EC0A8 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_100044058(v9, (uint64_t)qword_1003F2410);
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136446210;
      uint64_t v13 = sub_100037004(0x7261745365666173, 0xED00002928707574, &v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "%{public}s Not starting up before first unlock!", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
  else
  {
    type metadata accessor for LocalStorageDatabase();
    sub_100215AB0(&qword_1003F2578, (void (*)(uint64_t))type metadata accessor for LocalStorageDatabase);
    Database.startup()();
  }
}

uint64_t sub_100215AB0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100215AF8()
{
  if (qword_1003EC0B0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Table();
  sub_100044058(v1, (uint64_t)qword_10040B870);
  Table.create(temporary:ifNotExists:withoutRowid:block:)();
  Connection.run(_:_:)();
  if (v0) {
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_1003EC0B8 != -1) {
    swift_once();
  }
  sub_100044058(v1, (uint64_t)qword_10040B888);
  Table.create(temporary:ifNotExists:withoutRowid:block:)();
  Connection.run(_:_:)();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_100215C84()
{
  uint64_t v0 = sub_100044014(&qword_1003EF258);
  __chkstk_darwin(v0 - 8);
  uint64_t v36 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_100044014(&qword_1003EF260);
  __chkstk_darwin(v2 - 8);
  uint64_t v33 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100044014(&qword_1003EF250);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100044014(&qword_1003EF2B8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100044014(&qword_1003EF268);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100044014(&qword_1003EF270);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1003EC0E8 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_100044014(&qword_1003EF240);
  uint64_t v17 = sub_100044058(v16, (uint64_t)qword_10040B930);
  uint64_t v18 = sub_100044014(&qword_1003EF278);
  Swift::String v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v15, 1, 1, v18);
  uint64_t v32 = *(void *)(v16 - 8);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56);
  uint64_t v35 = v16;
  v20(v12, 1, 1, v16);
  type metadata accessor for UUID();
  uint64_t v34 = v17;
  TableBuilder.column<A>(_:primaryKey:check:defaultValue:)();
  sub_10000A520((uint64_t)v12, &qword_1003EF268);
  sub_10000A520((uint64_t)v15, &qword_1003EF270);
  if (qword_1003EC0F0 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_100044014(&qword_1003EF220);
  sub_100044058(v21, (uint64_t)qword_10040B948);
  v19(v15, 1, 1, v18);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v9, 1, 1, v21);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v9, &qword_1003EF2B8);
  sub_10000A520((uint64_t)v15, &qword_1003EF270);
  if (qword_1003EC108 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_100044014(&qword_1003EF290);
  sub_100044058(v22, (uint64_t)qword_10040B990);
  v19(v15, 1, 1, v18);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v6, 1, 1, v22);
  type metadata accessor for Date();
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v6, &qword_1003EF250);
  sub_10000A520((uint64_t)v15, &qword_1003EF270);
  if (qword_1003EC0F8 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_100044014(&qword_1003EF280);
  sub_100044058(v23, (uint64_t)qword_10040B960);
  v19(v15, 1, 1, v18);
  uint64_t v24 = (uint64_t)v33;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v33, 1, 1, v23);
  sub_1000EA3C8();
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520(v24, &qword_1003EF260);
  sub_10000A520((uint64_t)v15, &qword_1003EF270);
  if (qword_1003EC100 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_100044014(&qword_1003EF1F0);
  sub_100044058(v25, (uint64_t)qword_10040B978);
  v19(v15, 1, 1, v18);
  uint64_t v26 = (uint64_t)v36;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v36, 1, 1, v25);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520(v26, &qword_1003EF258);
  sub_10000A520((uint64_t)v15, &qword_1003EF270);
  sub_100044014(&qword_1003EF298);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_100367D70;
  uint64_t v28 = v35;
  *(void *)(v27 + 56) = v35;
  *(void *)(v27 + 64) = sub_10021C5A0(&qword_1003EF2A0, &qword_1003EF240);
  unint64_t v29 = sub_10003E0F4((uint64_t *)(v27 + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v32 + 16))(v29, v34, v28);
  TableBuilder.unique(_:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1002163E8()
{
  uint64_t v0 = sub_100044014(&qword_1003F2580);
  __chkstk_darwin(v0 - 8);
  v79 = (char *)&v69 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_100044014(&qword_1003EF258);
  __chkstk_darwin(v2 - 8);
  v89 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100044014(&qword_1003F2588);
  __chkstk_darwin(v4 - 8);
  v82 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100044014(&qword_1003EF2B8);
  __chkstk_darwin(v6 - 8);
  v81 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100044014(&qword_1003EF2B0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100044014(&qword_1003EF270);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  v87 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v69 - v14;
  if (qword_1003EC110 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_100044014(&qword_1003EF230);
  uint64_t v17 = sub_100044058(v16, (uint64_t)qword_10040B9A8);
  uint64_t v18 = sub_100044014(&qword_1003EF278);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
  uint64_t v21 = v19 + 56;
  v20(v15, 1, 1, v18);
  uint64_t v77 = *(void *)(v16 - 8);
  uint64_t v22 = v77 + 56;
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v77 + 56);
  v23(v10, 1, 1, v16);
  uint64_t v78 = v17;
  TableBuilder.column<A>(_:primaryKey:check:defaultValue:)();
  sub_10000A520((uint64_t)v10, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v15, &qword_1003EF270);
  if (qword_1003EC118 != -1) {
    swift_once();
  }
  uint64_t v92 = sub_100044014(&qword_1003F2590);
  sub_100044058(v92, (uint64_t)qword_10040B9C0);
  v20(v15, 1, 1, v18);
  uint64_t v93 = v16;
  v23(v10, 1, 1, v16);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v10, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v15, &qword_1003EF270);
  if (qword_1003EC120 != -1) {
    swift_once();
  }
  uint64_t v72 = sub_100044014(&qword_1003F2598);
  sub_100044058(v72, (uint64_t)qword_10040B9D8);
  v20(v15, 1, 1, v18);
  uint64_t v24 = sub_100044014(&qword_1003EF220);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56);
  uint64_t v27 = (uint64_t)v81;
  uint64_t v71 = v24;
  v70 = v26;
  uint64_t v69 = v25 + 56;
  ((void (*)(char *, uint64_t, uint64_t))v26)(v81, 1, 1);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520(v27, &qword_1003EF2B8);
  sub_10000A520((uint64_t)v15, &qword_1003EF270);
  if (qword_1003EC128 != -1) {
    swift_once();
  }
  sub_100044058(v92, (uint64_t)qword_10040B9F0);
  v20(v15, 1, 1, v18);
  uint64_t v28 = v93;
  v23(v10, 1, 1, v93);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v10, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v15, &qword_1003EF270);
  if (qword_1003EC130 != -1) {
    swift_once();
  }
  uint64_t v90 = v22;
  v91 = v23;
  uint64_t v29 = sub_100044014(&qword_1003F25A0);
  sub_100044058(v29, (uint64_t)qword_10040BA08);
  v20(v15, 1, 1, v18);
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = (uint64_t)v82;
  v75 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56);
  uint64_t v76 = v29;
  uint64_t v74 = v30 + 56;
  v75(v82, 1, 1, v29);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520(v31, &qword_1003F2588);
  sub_10000A520((uint64_t)v15, &qword_1003EF270);
  if (qword_1003EC138 != -1) {
    swift_once();
  }
  uint64_t v32 = v92;
  sub_100044058(v92, (uint64_t)qword_10040BA20);
  v20(v15, 1, 1, v18);
  uint64_t v33 = v91;
  v91(v10, 1, 1, v28);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v10, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v15, &qword_1003EF270);
  if (qword_1003EC140 != -1) {
    swift_once();
  }
  sub_100044058(v32, (uint64_t)qword_10040BA38);
  v20(v15, 1, 1, v18);
  v33(v10, 1, 1, v93);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v10, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v15, &qword_1003EF270);
  uint64_t v34 = v18;
  if (qword_1003EC148 != -1) {
    swift_once();
  }
  uint64_t v73 = sub_100044014(&qword_1003F25A8);
  sub_100044058(v73, (uint64_t)qword_10040BA50);
  v20(v15, 1, 1, v18);
  uint64_t v35 = (uint64_t)v87;
  v20(v87, 1, 1, v34);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520(v35, &qword_1003EF270);
  sub_10000A520((uint64_t)v15, &qword_1003EF270);
  if (qword_1003EC150 != -1) {
    swift_once();
  }
  uint64_t v80 = sub_100044014(&qword_1003EF200);
  sub_100044058(v80, (uint64_t)qword_10040BA68);
  v20(v15, 1, 1, v34);
  uint64_t v36 = sub_100044014(&qword_1003EF1F0);
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = (uint64_t)v89;
  v85 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 56);
  uint64_t v86 = v36;
  uint64_t v84 = v37 + 56;
  v85(v89, 1, 1);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520(v38, &qword_1003EF258);
  sub_10000A520((uint64_t)v15, &qword_1003EF270);
  uint64_t v39 = v34;
  if (qword_1003EC158 != -1) {
    swift_once();
  }
  uint64_t v40 = v92;
  sub_100044058(v92, (uint64_t)qword_10040BA80);
  v20(v15, 1, 1, v39);
  uint64_t v83 = v21;
  uint64_t v41 = v93;
  v88 = v20;
  v91(v10, 1, 1, v93);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v10, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v15, &qword_1003EF270);
  if (qword_1003EC160 != -1) {
    swift_once();
  }
  sub_100044058(v40, (uint64_t)qword_10040BA98);
  uint64_t v42 = v88;
  v88(v15, 1, 1, v39);
  v91(v10, 1, 1, v41);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v10, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v15, &qword_1003EF270);
  if (qword_1003EC170 != -1) {
    swift_once();
  }
  sub_100044058(v40, (uint64_t)qword_10040BAC8);
  v42(v15, 1, 1, v39);
  uint64_t v43 = v91;
  v91(v10, 1, 1, v41);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v10, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v15, &qword_1003EF270);
  if (qword_1003EC168 != -1) {
    swift_once();
  }
  sub_100044058(v41, (uint64_t)qword_10040BAB0);
  v42(v15, 1, 1, v39);
  v43(v10, 1, 1, v41);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v10, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v15, &qword_1003EF270);
  if (qword_1003EC178 != -1) {
    swift_once();
  }
  uint64_t v44 = v92;
  sub_100044058(v92, (uint64_t)qword_10040BAE0);
  v88(v15, 1, 1, v39);
  v43(v10, 1, 1, v41);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v10, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v15, &qword_1003EF270);
  if (qword_1003EC180 != -1) {
    swift_once();
  }
  sub_100044058(v44, (uint64_t)qword_10040BAF8);
  v88(v15, 1, 1, v39);
  uint64_t v45 = v41;
  v43(v10, 1, 1, v41);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v10, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v15, &qword_1003EF270);
  uint64_t v46 = v39;
  if (qword_1003EC188 != -1) {
    swift_once();
  }
  sub_100044058(v72, (uint64_t)qword_10040BB10);
  uint64_t v47 = v88;
  v88(v15, 1, 1, v39);
  uint64_t v48 = (uint64_t)v81;
  v70(v81, 1, 1, v71);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520(v48, &qword_1003EF2B8);
  sub_10000A520((uint64_t)v15, &qword_1003EF270);
  if (qword_1003EC190 != -1) {
    swift_once();
  }
  sub_100044058(v92, (uint64_t)qword_10040BB28);
  v47(v15, 1, 1, v46);
  v43(v10, 1, 1, v45);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v10, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v15, &qword_1003EF270);
  if (qword_1003EC198 != -1) {
    swift_once();
  }
  sub_100044058(v80, (uint64_t)qword_10040BB40);
  v47(v15, 1, 1, v46);
  uint64_t v49 = (uint64_t)v89;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v85)(v89, 1, 1, v86);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520(v49, &qword_1003EF258);
  sub_10000A520((uint64_t)v15, &qword_1003EF270);
  if (qword_1003EC1A0 != -1) {
    swift_once();
  }
  uint64_t v50 = sub_100044014(&qword_1003F25B0);
  sub_100044058(v50, (uint64_t)qword_10040BB58);
  v47(v15, 1, 1, v46);
  uint64_t v51 = (uint64_t)v82;
  v75(v82, 1, 1, v76);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520(v51, &qword_1003F2588);
  sub_10000A520((uint64_t)v15, &qword_1003EF270);
  uint64_t v52 = v93;
  if (qword_1003EC1A8 != -1) {
    swift_once();
  }
  uint64_t v53 = v92;
  sub_100044058(v92, (uint64_t)qword_10040BB70);
  v47(v15, 1, 1, v46);
  uint64_t v54 = v91;
  v91(v10, 1, 1, v52);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v10, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v15, &qword_1003EF270);
  if (qword_1003EC1B0 != -1) {
    swift_once();
  }
  sub_100044058(v53, (uint64_t)qword_10040BB88);
  v47(v15, 1, 1, v46);
  v54(v10, 1, 1, v93);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v10, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v15, &qword_1003EF270);
  if (qword_1003EC1B8 != -1) {
    swift_once();
  }
  sub_100044058(v73, (uint64_t)qword_10040BBA0);
  v47(v15, 1, 1, v46);
  uint64_t v55 = (uint64_t)v87;
  v47(v87, 1, 1, v46);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520(v55, &qword_1003EF270);
  sub_10000A520((uint64_t)v15, &qword_1003EF270);
  if (qword_1003EC1C0 != -1) {
    swift_once();
  }
  sub_100044058(v80, (uint64_t)qword_10040BBB8);
  v47(v15, 1, 1, v46);
  uint64_t v56 = (uint64_t)v89;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v85)(v89, 1, 1, v86);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520(v56, &qword_1003EF258);
  sub_10000A520((uint64_t)v15, &qword_1003EF270);
  if (qword_1003EC1C8 != -1) {
    swift_once();
  }
  uint64_t v57 = v92;
  sub_100044058(v92, (uint64_t)qword_10040BBD0);
  v47(v15, 1, 1, v46);
  uint64_t v58 = v93;
  unint64_t v59 = v91;
  v91(v10, 1, 1, v93);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v10, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v15, &qword_1003EF270);
  if (qword_1003EC1D0 != -1) {
    swift_once();
  }
  sub_100044058(v57, (uint64_t)qword_10040BBE8);
  v47(v15, 1, 1, v46);
  v59(v10, 1, 1, v58);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v10, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v15, &qword_1003EF270);
  if (qword_1003EC1D8 != -1) {
    swift_once();
  }
  sub_100044058(v57, (uint64_t)qword_10040BC00);
  v47(v15, 1, 1, v46);
  v59(v10, 1, 1, v58);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v10, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v15, &qword_1003EF270);
  if (qword_1003EC1E0 != -1) {
    swift_once();
  }
  sub_100044058(v46, (uint64_t)qword_10040BC18);
  v47(v15, 1, 1, v46);
  uint64_t v60 = (uint64_t)v87;
  v47(v87, 1, 1, v46);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520(v60, &qword_1003EF270);
  sub_10000A520((uint64_t)v15, &qword_1003EF270);
  if (qword_1003EC1E8 != -1) {
    swift_once();
  }
  sub_100044058(v46, (uint64_t)qword_10040BC30);
  v47(v15, 1, 1, v46);
  v47((char *)v60, 1, 1, v46);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520(v60, &qword_1003EF270);
  sub_10000A520((uint64_t)v15, &qword_1003EF270);
  if (qword_1003EC1F0 != -1) {
    swift_once();
  }
  sub_100044058(v46, (uint64_t)qword_10040BC48);
  v47(v15, 1, 1, v46);
  v47((char *)v60, 1, 1, v46);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520(v60, &qword_1003EF270);
  sub_10000A520((uint64_t)v15, &qword_1003EF270);
  if (qword_1003EC1F8 != -1) {
    swift_once();
  }
  sub_100044058(v46, (uint64_t)qword_10040BC60);
  v47(v15, 1, 1, v46);
  v47((char *)v60, 1, 1, v46);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520(v60, &qword_1003EF270);
  sub_10000A520((uint64_t)v15, &qword_1003EF270);
  if (qword_1003EC200 != -1) {
    swift_once();
  }
  uint64_t v61 = v86;
  sub_100044058(v86, (uint64_t)qword_10040BC78);
  v47(v15, 1, 1, v46);
  uint64_t v62 = (uint64_t)v89;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v85)(v89, 1, 1, v61);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520(v62, &qword_1003EF258);
  sub_10000A520((uint64_t)v15, &qword_1003EF270);
  if (qword_1003EC208 != -1) {
    swift_once();
  }
  uint64_t v63 = sub_100044014(&qword_1003F25B8);
  sub_100044058(v63, (uint64_t)qword_10040BC90);
  v47(v15, 1, 1, v46);
  uint64_t v64 = (uint64_t)v79;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v79, 1, 1, v63);
  sub_100046560();
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520(v64, &qword_1003F2580);
  sub_10000A520((uint64_t)v15, &qword_1003EF270);
  sub_100044014(&qword_1003EF298);
  uint64_t v65 = swift_allocObject();
  *(_OWORD *)(v65 + 16) = xmmword_100367D70;
  uint64_t v66 = v93;
  *(void *)(v65 + 56) = v93;
  *(void *)(v65 + 64) = sub_10021C5A0(&qword_1003F25C8, &qword_1003EF230);
  uint64_t v67 = sub_10003E0F4((uint64_t *)(v65 + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v77 + 16))(v67, v78, v66);
  TableBuilder.unique(_:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100218108()
{
  uint64_t v0 = sub_100044014(&qword_1003EF2B0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100044014(&qword_1003EF270);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v13 - v7;
  if (qword_1003EC210 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_100044014(&qword_1003EF230);
  sub_100044058(v9, (uint64_t)qword_10040BCA8);
  uint64_t v10 = sub_100044014(&qword_1003EF278);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  v11(v8, 1, 1, v10);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
  v14(v2, 1, 1, v9);
  TableBuilder.column<A>(_:primaryKey:check:defaultValue:)();
  sub_10000A520((uint64_t)v2, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v8, &qword_1003EF270);
  if (qword_1003EC218 != -1) {
    swift_once();
  }
  sub_100044058(v9, (uint64_t)qword_10040BCC0);
  v11(v8, 1, 1, v10);
  v14(v2, 1, 1, v9);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v2, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v8, &qword_1003EF270);
  if (qword_1003EC220 != -1) {
    swift_once();
  }
  sub_100044058(v9, (uint64_t)qword_10040BCD8);
  v11(v8, 1, 1, v10);
  v14(v2, 1, 1, v9);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v2, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v8, &qword_1003EF270);
  if (qword_1003EC228 != -1) {
    swift_once();
  }
  sub_100044058(v10, (uint64_t)qword_10040BCF0);
  v11(v8, 1, 1, v10);
  v11(v6, 1, 1, v10);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v6, &qword_1003EF270);
  sub_10000A520((uint64_t)v8, &qword_1003EF270);
  if (qword_1003EC230 != -1) {
    swift_once();
  }
  sub_100044058(v10, (uint64_t)qword_10040BD08);
  v11(v8, 1, 1, v10);
  v11(v6, 1, 1, v10);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v6, &qword_1003EF270);
  sub_10000A520((uint64_t)v8, &qword_1003EF270);
  if (qword_1003EC238 != -1) {
    swift_once();
  }
  sub_100044058(v10, (uint64_t)qword_10040BD20);
  v11(v8, 1, 1, v10);
  v11(v6, 1, 1, v10);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v6, &qword_1003EF270);
  sub_10000A520((uint64_t)v8, &qword_1003EF270);
  if (qword_1003EC240 != -1) {
    swift_once();
  }
  sub_100044058(v10, (uint64_t)qword_10040BD38);
  v11(v8, 1, 1, v10);
  v11(v6, 1, 1, v10);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v6, &qword_1003EF270);
  return sub_10000A520((uint64_t)v8, &qword_1003EF270);
}

uint64_t sub_1002187A0()
{
  if (qword_1003EC0C8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Table();
  sub_100044058(v1, (uint64_t)qword_10040B8B8);
  SchemaType.drop(ifExists:)(0);
  Connection.run(_:_:)();
  if (v0)
  {
    swift_bridgeObjectRelease();
    if (qword_1003EC0A8 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_100044058(v2, (uint64_t)qword_1003F2410);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 136446210;
      swift_errorRetain();
      sub_100044014(&qword_1003F4B30);
      uint64_t v6 = String.init<A>(describing:)();
      sub_100037004(v6, v7, &v9);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "serverSettings drop error %{public}s", v5, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  Table.create(temporary:ifNotExists:withoutRowid:block:)();
  Connection.run(_:_:)();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_100218AAC()
{
  uint64_t v0 = sub_100044014(&qword_1003EF258);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100044014(&qword_1003EF2B8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100044014(&qword_1003EF270);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1003EC248 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_100044014(&qword_1003EF220);
  sub_100044058(v9, (uint64_t)qword_10040BD50);
  uint64_t v10 = sub_100044014(&qword_1003EF278);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  v11(v8, 1, 1, v10);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 1, 1, v9);
  TableBuilder.column<A>(_:primaryKey:check:defaultValue:)();
  sub_10000A520((uint64_t)v5, &qword_1003EF2B8);
  sub_10000A520((uint64_t)v8, &qword_1003EF270);
  if (qword_1003EC258 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_100044014(&qword_1003EF200);
  sub_100044058(v12, (uint64_t)qword_10040BD80);
  v11(v8, 1, 1, v10);
  uint64_t v13 = sub_100044014(&qword_1003EF1F0);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  uint64_t v17 = v11;
  v14(v2, 1, 1, v13);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v2, &qword_1003EF258);
  sub_10000A520((uint64_t)v8, &qword_1003EF270);
  if (qword_1003EC260 != -1) {
    swift_once();
  }
  sub_100044058(v12, (uint64_t)qword_10040BD98);
  v17(v8, 1, 1, v10);
  v14(v2, 1, 1, v13);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v2, &qword_1003EF258);
  sub_10000A520((uint64_t)v8, &qword_1003EF270);
  if (qword_1003EC268 != -1) {
    swift_once();
  }
  sub_100044058(v12, (uint64_t)qword_10040BDB0);
  v17(v8, 1, 1, v10);
  v14(v2, 1, 1, v13);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v2, &qword_1003EF258);
  return sub_10000A520((uint64_t)v8, &qword_1003EF270);
}

uint64_t sub_100218F64(uint64_t a1, uint64_t a2)
{
  if (qword_1003EC0C8 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Table();
  sub_100044058(v4, (uint64_t)qword_10040B8B8);
  SchemaType.drop(ifExists:)(0);
  Connection.run(_:_:)();
  if (v2)
  {
    swift_bridgeObjectRelease();
    if (qword_1003EC0A8 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_100044058(v5, (uint64_t)qword_1003F2410);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 138543362;
      swift_errorRetain();
      uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v10 = v11;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "serverSettings drop error %{public}@", v8, 0xCu);
      sub_100044014(&qword_1003ECCC8);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  Table.create(temporary:ifNotExists:withoutRowid:block:)();
  Connection.run(_:_:)();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  *(unsigned char *)(a2 + 136) = 1;
  return result;
}

uint64_t sub_100219268()
{
  uint64_t v0 = sub_100044014(&qword_1003EF258);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100044014(&qword_1003EF2B8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100044014(&qword_1003EF270);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1003EC248 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_100044014(&qword_1003EF220);
  sub_100044058(v9, (uint64_t)qword_10040BD50);
  uint64_t v10 = sub_100044014(&qword_1003EF278);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  v11(v8, 1, 1, v10);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 1, 1, v9);
  TableBuilder.column<A>(_:primaryKey:check:defaultValue:)();
  sub_10000A520((uint64_t)v5, &qword_1003EF2B8);
  sub_10000A520((uint64_t)v8, &qword_1003EF270);
  if (qword_1003EC250 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_100044014(&qword_1003EF1F0);
  sub_100044058(v12, (uint64_t)qword_10040BD68);
  v11(v8, 1, 1, v10);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  uint64_t v17 = v11;
  v13(v2, 1, 1, v12);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v2, &qword_1003EF258);
  sub_10000A520((uint64_t)v8, &qword_1003EF270);
  if (qword_1003EC258 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_100044014(&qword_1003EF200);
  sub_100044058(v14, (uint64_t)qword_10040BD80);
  v17(v8, 1, 1, v10);
  v13(v2, 1, 1, v12);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v2, &qword_1003EF258);
  sub_10000A520((uint64_t)v8, &qword_1003EF270);
  if (qword_1003EC260 != -1) {
    swift_once();
  }
  sub_100044058(v14, (uint64_t)qword_10040BD98);
  v17(v8, 1, 1, v10);
  v13(v2, 1, 1, v12);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v2, &qword_1003EF258);
  sub_10000A520((uint64_t)v8, &qword_1003EF270);
  if (qword_1003EC268 != -1) {
    swift_once();
  }
  sub_100044058(v14, (uint64_t)qword_10040BDB0);
  v17(v8, 1, 1, v10);
  v13(v2, 1, 1, v12);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v2, &qword_1003EF258);
  return sub_10000A520((uint64_t)v8, &qword_1003EF270);
}

uint64_t sub_1002197E0(uint64_t a1, uint64_t a2)
{
  if (qword_1003EC0D0 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Table();
  sub_100044058(v4, (uint64_t)qword_10040B8D0);
  Table.create(temporary:ifNotExists:withoutRowid:block:)();
  Connection.run(_:_:)();
  if (v2) {
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_1003EC0D8 != -1) {
    swift_once();
  }
  sub_100044058(v4, (uint64_t)qword_10040B8E8);
  Table.create(temporary:ifNotExists:withoutRowid:block:)();
  Connection.run(_:_:)();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  *(unsigned char *)(a2 + 136) = 1;
  return result;
}

uint64_t sub_100219978()
{
  uint64_t v0 = sub_100044014(&qword_1003EF258);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100044014(&qword_1003EF2B0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100044014(&qword_1003EF270);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1003EC270 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_100044014(&qword_1003EF230);
  sub_100044058(v9, (uint64_t)qword_10040BDC8);
  uint64_t v10 = sub_100044014(&qword_1003EF278);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  v11(v8, 1, 1, v10);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 1, 1, v9);
  TableBuilder.column<A>(_:primaryKey:check:defaultValue:)();
  sub_10000A520((uint64_t)v5, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v8, &qword_1003EF270);
  if (qword_1003EC278 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_100044014(&qword_1003EF1F0);
  sub_100044058(v12, (uint64_t)qword_10040BDE0);
  v11(v8, 1, 1, v10);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v2, 1, 1, v12);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v2, &qword_1003EF258);
  return sub_10000A520((uint64_t)v8, &qword_1003EF270);
}

uint64_t sub_100219C90()
{
  uint64_t v0 = sub_100044014(&qword_1003F25D0);
  __chkstk_darwin(v0 - 8);
  uint64_t v73 = (char *)v68 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_100044014(&qword_1003F2588);
  __chkstk_darwin(v2 - 8);
  v75 = (char *)v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100044014(&qword_1003EF258);
  __chkstk_darwin(v4 - 8);
  v81 = (char *)v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100044014(&qword_1003EF2B0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100044014(&qword_1003EF270);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v74 = (char *)v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v68 - v12;
  if (qword_1003EC2C8 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_100044014(&qword_1003EF230);
  sub_100044058(v14, (uint64_t)qword_10040BED0);
  uint64_t v15 = sub_100044014(&qword_1003EF278);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 56);
  uint64_t v18 = v16 + 56;
  uint64_t v83 = v15;
  v17(v13, 1, 1);
  uint64_t v19 = *(void *)(v14 - 8);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
  uint64_t v21 = v19 + 56;
  v20(v8, 1, 1, v14);
  TableBuilder.column<A>(_:primaryKey:check:defaultValue:)();
  sub_10000A520((uint64_t)v8, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  if (qword_1003EC280 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_100044014(&qword_1003F2590);
  sub_100044058(v22, (uint64_t)qword_10040BDF8);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v17)(v13, 1, 1, v83);
  v20(v8, 1, 1, v14);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v8, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  if (qword_1003EC288 != -1) {
    swift_once();
  }
  sub_100044058(v22, (uint64_t)qword_10040BE10);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v17)(v13, 1, 1, v83);
  v20(v8, 1, 1, v14);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v8, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  if (qword_1003EC290 != -1) {
    swift_once();
  }
  sub_100044058(v22, (uint64_t)qword_10040BE28);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v17)(v13, 1, 1, v83);
  v20(v8, 1, 1, v14);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v8, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  if (qword_1003EC298 != -1) {
    swift_once();
  }
  sub_100044058(v22, (uint64_t)qword_10040BE40);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v17)(v13, 1, 1, v83);
  v20(v8, 1, 1, v14);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v8, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  if (qword_1003EC2A0 != -1) {
    swift_once();
  }
  sub_100044058(v22, (uint64_t)qword_10040BE58);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v17)(v13, 1, 1, v83);
  uint64_t v84 = v14;
  v85 = v20;
  v20(v8, 1, 1, v14);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v8, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  if (qword_1003EC2A8 != -1) {
    swift_once();
  }
  uint64_t v80 = sub_100044014(&qword_1003EF200);
  sub_100044058(v80, (uint64_t)qword_10040BE70);
  uint64_t v23 = v83;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v17)(v13, 1, 1, v83);
  uint64_t v24 = sub_100044014(&qword_1003EF1F0);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = (uint64_t)v81;
  uint64_t v78 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 56);
  uint64_t v79 = v24;
  uint64_t v77 = v25 + 56;
  v78(v81, 1, 1);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520(v26, &qword_1003EF258);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  if (qword_1003EC2B0 != -1) {
    swift_once();
  }
  sub_100044058(v22, (uint64_t)qword_10040BE88);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v17)(v13, 1, 1, v23);
  v85(v8, 1, 1, v84);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v8, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  if (qword_1003EC2B8 != -1) {
    swift_once();
  }
  sub_100044058(v80, (uint64_t)qword_10040BEA0);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v17)(v13, 1, 1, v23);
  uint64_t v27 = (uint64_t)v81;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v78)(v81, 1, 1, v79);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520(v27, &qword_1003EF258);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  if (qword_1003EC2C0 != -1) {
    swift_once();
  }
  sub_100044058(v22, (uint64_t)qword_10040BEB8);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v17)(v13, 1, 1, v23);
  v85(v8, 1, 1, v84);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v8, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  if (qword_1003EC2D0 != -1) {
    swift_once();
  }
  uint64_t v82 = v21;
  uint64_t v72 = sub_100044014(&qword_1003F25A8);
  sub_100044058(v72, (uint64_t)qword_10040BEE8);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v17)(v13, 1, 1, v23);
  uint64_t v28 = (uint64_t)v74;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v17)(v74, 1, 1, v23);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520(v28, &qword_1003EF270);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  if (qword_1003EC2D8 != -1) {
    swift_once();
  }
  sub_100044058(v22, (uint64_t)qword_10040BF00);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v17)(v13, 1, 1, v23);
  uint64_t v87 = v18;
  uint64_t v29 = v23;
  uint64_t v31 = v84;
  uint64_t v30 = v85;
  v85(v8, 1, 1, v84);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v8, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  if (qword_1003EC2E0 != -1) {
    swift_once();
  }
  uint64_t v76 = v22;
  sub_100044058(v22, (uint64_t)qword_10040BF18);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v17)(v13, 1, 1, v29);
  v30(v8, 1, 1, v31);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v8, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  if (qword_1003EC2E8 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_100044014(&qword_1003F25B0);
  sub_100044058(v32, (uint64_t)qword_10040BF30);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v17)(v13, 1, 1, v29);
  uint64_t v33 = sub_100044014(&qword_1003F25A0);
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56);
  uint64_t v36 = v34 + 56;
  uint64_t v37 = (uint64_t)v75;
  v35(v75, 1, 1, v33);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520(v37, &qword_1003F2588);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  if (qword_1003EC2F0 != -1) {
    swift_once();
  }
  uint64_t v71 = v32;
  sub_100044058(v32, (uint64_t)qword_10040BF48);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v17)(v13, 1, 1, v83);
  v68[1] = v36;
  uint64_t v69 = v35;
  v35((char *)v37, 1, 1, v33);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520(v37, &qword_1003F2588);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  uint64_t v38 = v84;
  if (qword_1003EC2F8 != -1) {
    swift_once();
  }
  uint64_t v70 = v33;
  uint64_t v39 = v76;
  sub_100044058(v76, (uint64_t)qword_10040BF60);
  uint64_t v40 = v83;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v17)(v13, 1, 1, v83);
  v85(v8, 1, 1, v38);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v8, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  uint64_t v41 = v40;
  uint64_t v42 = v17;
  if (qword_1003EC300 != -1) {
    swift_once();
  }
  sub_100044058(v72, (uint64_t)qword_10040BF78);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v17)(v13, 1, 1, v41);
  uint64_t v43 = (uint64_t)v74;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v17)(v74, 1, 1, v41);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520(v43, &qword_1003EF270);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  if (qword_1003EC308 != -1) {
    swift_once();
  }
  sub_100044058(v80, (uint64_t)qword_10040BF90);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v17)(v13, 1, 1, v41);
  uint64_t v44 = (uint64_t)v81;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v78)(v81, 1, 1, v79);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520(v44, &qword_1003EF258);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  if (qword_1003EC310 != -1) {
    swift_once();
  }
  sub_100044058(v39, (uint64_t)qword_10040BFA8);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v17)(v13, 1, 1, v41);
  v85(v8, 1, 1, v84);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v8, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  if (qword_1003EC318 != -1) {
    swift_once();
  }
  sub_100044058(v71, (uint64_t)qword_10040BFC0);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v17)(v13, 1, 1, v41);
  uint64_t v45 = (uint64_t)v75;
  v69(v75, 1, 1, v70);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520(v45, &qword_1003F2588);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  if (qword_1003EC320 != -1) {
    swift_once();
  }
  sub_100044058(v39, (uint64_t)qword_10040BFD8);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v17)(v13, 1, 1, v41);
  uint64_t v46 = v85;
  uint64_t v86 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v42;
  uint64_t v47 = v84;
  ((void (*)(char *, uint64_t, uint64_t))v85)(v8, 1, 1);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v8, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  if (qword_1003EC328 != -1) {
    swift_once();
  }
  sub_100044058(v39, (uint64_t)qword_10040BFF0);
  v86(v13, 1, 1, v41);
  v46(v8, 1, 1, v47);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v8, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  if (qword_1003EC330 != -1) {
    swift_once();
  }
  sub_100044058(v39, (uint64_t)qword_10040C008);
  v86(v13, 1, 1, v41);
  v46(v8, 1, 1, v47);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v8, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  if (qword_1003EC338 != -1) {
    swift_once();
  }
  sub_100044058(v39, (uint64_t)qword_10040C020);
  v86(v13, 1, 1, v41);
  v46(v8, 1, 1, v47);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v8, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  if (qword_1003EC340 != -1) {
    swift_once();
  }
  uint64_t v48 = sub_100044014(&qword_1003F25D8);
  sub_100044058(v48, (uint64_t)qword_10040C038);
  uint64_t v49 = v86;
  v86(v13, 1, 1, v41);
  uint64_t v50 = sub_100044014(&qword_1003F25E0);
  uint64_t v51 = (uint64_t)v73;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v73, 1, 1, v50);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520(v51, &qword_1003F25D0);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  uint64_t v52 = v41;
  if (qword_1003EC348 != -1) {
    swift_once();
  }
  uint64_t v53 = v76;
  sub_100044058(v76, (uint64_t)qword_10040C050);
  v49(v13, 1, 1, v52);
  uint64_t v54 = v52;
  uint64_t v55 = v84;
  uint64_t v56 = v85;
  v85(v8, 1, 1, v84);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v8, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  if (qword_1003EC350 != -1) {
    swift_once();
  }
  sub_100044058(v53, (uint64_t)qword_10040C068);
  v86(v13, 1, 1, v52);
  v56(v8, 1, 1, v55);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v8, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  if (qword_1003EC358 != -1) {
    swift_once();
  }
  sub_100044058(v53, (uint64_t)qword_10040C080);
  uint64_t v57 = v86;
  v86(v13, 1, 1, v52);
  v56(v8, 1, 1, v55);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v8, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  if (qword_1003EC360 != -1) {
    swift_once();
  }
  sub_100044058(v80, (uint64_t)qword_10040C098);
  v57(v13, 1, 1, v52);
  uint64_t v58 = (uint64_t)v81;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v78)(v81, 1, 1, v79);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520(v58, &qword_1003EF258);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  unint64_t v59 = v57;
  if (qword_1003EC368 != -1) {
    swift_once();
  }
  uint64_t v60 = v76;
  sub_100044058(v76, (uint64_t)qword_10040C0B0);
  v59(v13, 1, 1, v54);
  uint64_t v61 = v84;
  uint64_t v62 = v85;
  v85(v8, 1, 1, v84);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v8, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  if (qword_1003EC370 != -1) {
    swift_once();
  }
  sub_100044058(v60, (uint64_t)qword_10040C0C8);
  v86(v13, 1, 1, v54);
  v62(v8, 1, 1, v61);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v8, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  uint64_t v63 = v60;
  if (qword_1003EC378 != -1) {
    swift_once();
  }
  sub_100044058(v60, (uint64_t)qword_10040C0E0);
  v86(v13, 1, 1, v54);
  v62(v8, 1, 1, v61);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v8, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  uint64_t v64 = v54;
  if (qword_1003EC380 != -1) {
    swift_once();
  }
  sub_100044058(v63, (uint64_t)qword_10040C0F8);
  uint64_t v65 = v54;
  uint64_t v66 = v86;
  v86(v13, 1, 1, v65);
  v62(v8, 1, 1, v61);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v8, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  if (qword_1003EC388 != -1) {
    swift_once();
  }
  sub_100044058(v63, (uint64_t)qword_10040C110);
  v66(v13, 1, 1, v64);
  v62(v8, 1, 1, v61);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v8, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  if (qword_1003EC390 != -1) {
    swift_once();
  }
  sub_100044058(v63, (uint64_t)qword_10040C128);
  v66(v13, 1, 1, v64);
  v62(v8, 1, 1, v61);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v8, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  if (qword_1003EC398 != -1) {
    swift_once();
  }
  sub_100044058(v63, (uint64_t)qword_10040C140);
  v66(v13, 1, 1, v64);
  v62(v8, 1, 1, v61);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v8, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  if (qword_1003EC3A0 != -1) {
    swift_once();
  }
  sub_100044058(v63, (uint64_t)qword_10040C158);
  v66(v13, 1, 1, v64);
  v62(v8, 1, 1, v61);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v8, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  if (qword_1003EC3A8 != -1) {
    swift_once();
  }
  sub_100044058(v63, (uint64_t)qword_10040C170);
  v66(v13, 1, 1, v64);
  v62(v8, 1, 1, v61);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v8, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  if (qword_1003EC3B0 != -1) {
    swift_once();
  }
  sub_100044058(v63, (uint64_t)qword_10040C188);
  v66(v13, 1, 1, v64);
  v62(v8, 1, 1, v61);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v8, &qword_1003EF2B0);
  sub_10000A520((uint64_t)v13, &qword_1003EF270);
  if (qword_1003EC3B8 != -1) {
    swift_once();
  }
  sub_100044058(v63, (uint64_t)qword_10040C1A0);
  v66(v13, 1, 1, v64);
  v62(v8, 1, 1, v61);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v8, &qword_1003EF2B0);
  return sub_10000A520((uint64_t)v13, &qword_1003EF270);
}

uint64_t sub_10021BE90(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  if (*a3 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Table();
  sub_100044058(v6, a4);
  Table.create(temporary:ifNotExists:withoutRowid:block:)();
  Connection.run(_:_:)();
  if (v4) {
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_10021BF54()
{
  uint64_t v0 = sub_100044014(&qword_1003EF250);
  __chkstk_darwin(v0 - 8);
  uint64_t v22 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_100044014(&qword_1003EF258);
  __chkstk_darwin(v2 - 8);
  uint64_t v21 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100044014(&qword_1003EF268);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100044014(&qword_1003EF270);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1003EC3C0 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_100044014(&qword_1003EF240);
  sub_100044058(v10, (uint64_t)qword_10040C1B8);
  uint64_t v11 = sub_100044014(&qword_1003EF278);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v23 = v12 + 56;
  v13(v9, 1, 1, v11);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  v14(v6, 1, 1, v10);
  type metadata accessor for UUID();
  TableBuilder.column<A>(_:primaryKey:check:defaultValue:)();
  sub_10000A520((uint64_t)v6, &qword_1003EF268);
  sub_10000A520((uint64_t)v9, &qword_1003EF270);
  if (qword_1003EC3C8 != -1) {
    swift_once();
  }
  sub_100044058(v10, (uint64_t)qword_10040C1D0);
  v13(v9, 1, 1, v11);
  v14(v6, 1, 1, v10);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520((uint64_t)v6, &qword_1003EF268);
  sub_10000A520((uint64_t)v9, &qword_1003EF270);
  if (qword_1003EC3D0 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_100044014(&qword_1003EF1F0);
  sub_100044058(v15, (uint64_t)qword_10040C1E8);
  v13(v9, 1, 1, v11);
  uint64_t v16 = (uint64_t)v21;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v21, 1, 1, v15);
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520(v16, &qword_1003EF258);
  sub_10000A520((uint64_t)v9, &qword_1003EF270);
  if (qword_1003EC3D8 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_100044014(&qword_1003EF290);
  sub_100044058(v17, (uint64_t)qword_10040C200);
  v13(v9, 1, 1, v11);
  uint64_t v18 = (uint64_t)v22;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v22, 1, 1, v17);
  type metadata accessor for Date();
  TableBuilder.column<A>(_:unique:check:defaultValue:)();
  sub_10000A520(v18, &qword_1003EF250);
  return sub_10000A520((uint64_t)v9, &qword_1003EF270);
}

uint64_t sub_10021C488()
{
  return sub_10021BE90(*(void *)(v0 + 16), *(void *)(v0 + 24), &qword_1003EC0E0, (uint64_t)qword_10040B900);
}

uint64_t sub_10021C4D8()
{
  return sub_1002197E0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10021C4F8()
{
  return sub_100218F64(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10021C518()
{
  return sub_1002187A0();
}

uint64_t sub_10021C534()
{
  return sub_10021BE90(*(void *)(v0 + 16), *(void *)(v0 + 24), &qword_1003EC0C0, (uint64_t)qword_10040B8A0);
}

uint64_t sub_10021C584()
{
  return sub_100215AF8();
}

uint64_t sub_10021C5A0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10004AE58(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10021C5F0()
{
  uint64_t v2 = type metadata accessor for Keychain.DataProtectionClass();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = static Keychain.data(account:service:)();
  if (!v0)
  {
    if (v7 >> 60 == 15)
    {
      uint64_t v1 = static Data.random(bytes:)();
      unint64_t v9 = v8;
      sub_100022C64(v1, v8);
      if (qword_1003EC0A8 != -1) {
        swift_once();
      }
      uint64_t v10 = type metadata accessor for Logger();
      sub_100044058(v10, (uint64_t)qword_1003F2410);
      uint64_t v11 = Logger.logObject.getter();
      os_log_type_t v12 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = (uint8_t *)swift_slowAlloc();
        uint64_t v17 = swift_slowAlloc();
        v18[0] = v17;
        uint64_t v16 = v13;
        *(_DWORD *)uint64_t v13 = 136446210;
        v15[1] = v13 + 4;
        v18[3] = sub_100037004(0x6974707972636E65, 0xEF292879654B6E6FLL, v18);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "%{public}s Generating a new key...", v16, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      v18[0] = v1;
      v18[1] = v9;
      (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Keychain.DataProtectionClass.c(_:), v2);
      sub_10004F4EC();
      static Keychain.set<A>(data:account:service:dataProtectionClass:)();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      sub_100044090(v1, v9);
    }
    else
    {
      return v6;
    }
  }
  return v1;
}

uint64_t sub_10021C96C()
{
  uint64_t v0 = sub_100044014(&qword_1003EF240);
  sub_100052FAC(v0, qword_10040B930);
  sub_100044058(v0, (uint64_t)qword_10040B930);
  sub_10021FEB8(&qword_1003EF248, &qword_1003EF240);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021C9EC()
{
  uint64_t v0 = sub_100044014(&qword_1003EF220);
  sub_100052FAC(v0, qword_10040B948);
  sub_100044058(v0, (uint64_t)qword_10040B948);
  sub_10021FEB8(&qword_1003EF228, &qword_1003EF220);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021CA78()
{
  uint64_t v0 = sub_100044014(&qword_1003EF280);
  sub_100052FAC(v0, qword_10040B960);
  sub_100044058(v0, (uint64_t)qword_10040B960);
  sub_10021FEB8(&qword_1003EF2A8, &qword_1003EF280);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021CB08()
{
  uint64_t v0 = sub_100044014(&qword_1003EF1F0);
  sub_100052FAC(v0, qword_10040B978);
  sub_100044058(v0, (uint64_t)qword_10040B978);
  sub_10021FEB8(&qword_1003EF1F8, &qword_1003EF1F0);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021CB98()
{
  uint64_t v0 = sub_100044014(&qword_1003EF290);
  sub_100052FAC(v0, qword_10040B990);
  sub_100044058(v0, (uint64_t)qword_10040B990);
  sub_10021FEB8(&qword_1003F2630, &qword_1003EF290);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021CC24()
{
  uint64_t v0 = sub_100044014(&qword_1003EF230);
  sub_100052FAC(v0, qword_10040B9A8);
  sub_100044058(v0, (uint64_t)qword_10040B9A8);
  sub_10021FEB8(&qword_1003EF238, &qword_1003EF230);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021CCB4()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040B9C0);
  sub_100044058(v0, (uint64_t)qword_10040B9C0);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021CD44()
{
  uint64_t v0 = sub_100044014(&qword_1003F2598);
  sub_100052FAC(v0, qword_10040B9D8);
  sub_100044058(v0, (uint64_t)qword_10040B9D8);
  sub_10021FEB8(&qword_1003F2620, &qword_1003F2598);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021CDDC()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040B9F0);
  sub_100044058(v0, (uint64_t)qword_10040B9F0);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021CE6C()
{
  uint64_t v0 = sub_100044014(&qword_1003F25A0);
  sub_100052FAC(v0, qword_10040BA08);
  sub_100044058(v0, (uint64_t)qword_10040BA08);
  sub_10021FEB8(&qword_1003F2628, &qword_1003F25A0);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021CEFC()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040BA20);
  sub_100044058(v0, (uint64_t)qword_10040BA20);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021CF8C()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040BA38);
  sub_100044058(v0, (uint64_t)qword_10040BA38);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021D01C()
{
  uint64_t v0 = sub_100044014(&qword_1003F25A8);
  sub_100052FAC(v0, qword_10040BA50);
  sub_100044058(v0, (uint64_t)qword_10040BA50);
  sub_10021FEB8(&qword_1003F2610, &qword_1003F25A8);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021D0B4()
{
  uint64_t v0 = sub_100044014(&qword_1003EF200);
  sub_100052FAC(v0, qword_10040BA68);
  sub_100044058(v0, (uint64_t)qword_10040BA68);
  sub_10021FEB8(&qword_1003EF208, &qword_1003EF200);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021D144()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040BA80);
  sub_100044058(v0, (uint64_t)qword_10040BA80);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021D1D4()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040BA98);
  sub_100044058(v0, (uint64_t)qword_10040BA98);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021D264()
{
  uint64_t v0 = sub_100044014(&qword_1003EF230);
  sub_100052FAC(v0, qword_10040BAB0);
  sub_100044058(v0, (uint64_t)qword_10040BAB0);
  sub_10021FEB8(&qword_1003EF238, &qword_1003EF230);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021D2F4()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040BAC8);
  sub_100044058(v0, (uint64_t)qword_10040BAC8);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021D384()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040BAE0);
  sub_100044058(v0, (uint64_t)qword_10040BAE0);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021D414()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040BAF8);
  sub_100044058(v0, (uint64_t)qword_10040BAF8);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021D4A4()
{
  uint64_t v0 = sub_100044014(&qword_1003F2598);
  sub_100052FAC(v0, qword_10040BB10);
  sub_100044058(v0, (uint64_t)qword_10040BB10);
  sub_10021FEB8(&qword_1003F2620, &qword_1003F2598);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021D534()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040BB28);
  sub_100044058(v0, (uint64_t)qword_10040BB28);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021D5CC()
{
  uint64_t v0 = sub_100044014(&qword_1003EF200);
  sub_100052FAC(v0, qword_10040BB40);
  sub_100044058(v0, (uint64_t)qword_10040BB40);
  sub_10021FEB8(&qword_1003EF208, &qword_1003EF200);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021D65C()
{
  uint64_t v0 = sub_100044014(&qword_1003F25B0);
  sub_100052FAC(v0, qword_10040BB58);
  sub_100044058(v0, (uint64_t)qword_10040BB58);
  sub_10021FEB8(&qword_1003F2608, &qword_1003F25B0);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021D6EC()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040BB70);
  sub_100044058(v0, (uint64_t)qword_10040BB70);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021D77C()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040BB88);
  sub_100044058(v0, (uint64_t)qword_10040BB88);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021D80C()
{
  uint64_t v0 = sub_100044014(&qword_1003F25A8);
  sub_100052FAC(v0, qword_10040BBA0);
  sub_100044058(v0, (uint64_t)qword_10040BBA0);
  sub_10021FEB8(&qword_1003F2610, &qword_1003F25A8);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021D89C()
{
  uint64_t v0 = sub_100044014(&qword_1003EF200);
  sub_100052FAC(v0, qword_10040BBB8);
  sub_100044058(v0, (uint64_t)qword_10040BBB8);
  sub_10021FEB8(&qword_1003EF208, &qword_1003EF200);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021D92C()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040BBD0);
  sub_100044058(v0, (uint64_t)qword_10040BBD0);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021D9BC()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040BBE8);
  sub_100044058(v0, (uint64_t)qword_10040BBE8);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021DA4C()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040BC00);
  sub_100044058(v0, (uint64_t)qword_10040BC00);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021DADC()
{
  uint64_t v0 = sub_100044014(&qword_1003EF278);
  sub_100052FAC(v0, qword_10040BC18);
  sub_100044058(v0, (uint64_t)qword_10040BC18);
  sub_10021FEB8(&qword_1003F25F0, &qword_1003EF278);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021DB6C()
{
  uint64_t v0 = sub_100044014(&qword_1003EF278);
  sub_100052FAC(v0, qword_10040BC30);
  sub_100044058(v0, (uint64_t)qword_10040BC30);
  sub_10021FEB8(&qword_1003F25F0, &qword_1003EF278);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021DBFC()
{
  uint64_t v0 = sub_100044014(&qword_1003EF278);
  sub_100052FAC(v0, qword_10040BC48);
  sub_100044058(v0, (uint64_t)qword_10040BC48);
  sub_10021FEB8(&qword_1003F25F0, &qword_1003EF278);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021DC8C()
{
  uint64_t v0 = sub_100044014(&qword_1003EF278);
  sub_100052FAC(v0, qword_10040BC60);
  sub_100044058(v0, (uint64_t)qword_10040BC60);
  sub_10021FEB8(&qword_1003F25F0, &qword_1003EF278);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021DD1C()
{
  uint64_t v0 = sub_100044014(&qword_1003EF1F0);
  sub_100052FAC(v0, qword_10040BC78);
  sub_100044058(v0, (uint64_t)qword_10040BC78);
  sub_10021FEB8(&qword_1003EF1F8, &qword_1003EF1F0);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021DDAC()
{
  uint64_t v0 = sub_100044014(&qword_1003F25B8);
  sub_100052FAC(v0, qword_10040BC90);
  sub_100044058(v0, (uint64_t)qword_10040BC90);
  sub_10021FEB8(&qword_1003F2618, &qword_1003F25B8);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021DE34()
{
  uint64_t v0 = sub_100044014(&qword_1003EF230);
  sub_100052FAC(v0, qword_10040BCA8);
  sub_100044058(v0, (uint64_t)qword_10040BCA8);
  sub_10021FEB8(&qword_1003EF238, &qword_1003EF230);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021DEC4()
{
  uint64_t v0 = sub_100044014(&qword_1003EF230);
  sub_100052FAC(v0, qword_10040BCC0);
  sub_100044058(v0, (uint64_t)qword_10040BCC0);
  sub_10021FEB8(&qword_1003EF238, &qword_1003EF230);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021DF54()
{
  uint64_t v0 = sub_100044014(&qword_1003EF230);
  sub_100052FAC(v0, qword_10040BCD8);
  sub_100044058(v0, (uint64_t)qword_10040BCD8);
  sub_10021FEB8(&qword_1003EF238, &qword_1003EF230);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021DFE8()
{
  uint64_t v0 = sub_100044014(&qword_1003EF278);
  sub_100052FAC(v0, qword_10040BCF0);
  sub_100044058(v0, (uint64_t)qword_10040BCF0);
  sub_10021FEB8(&qword_1003F25F0, &qword_1003EF278);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021E080()
{
  uint64_t v0 = sub_100044014(&qword_1003EF278);
  sub_100052FAC(v0, qword_10040BD08);
  sub_100044058(v0, (uint64_t)qword_10040BD08);
  sub_10021FEB8(&qword_1003F25F0, &qword_1003EF278);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021E114()
{
  uint64_t v0 = sub_100044014(&qword_1003EF278);
  sub_100052FAC(v0, qword_10040BD20);
  sub_100044058(v0, (uint64_t)qword_10040BD20);
  sub_10021FEB8(&qword_1003F25F0, &qword_1003EF278);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021E1A4()
{
  uint64_t v0 = sub_100044014(&qword_1003EF278);
  sub_100052FAC(v0, qword_10040BD38);
  sub_100044058(v0, (uint64_t)qword_10040BD38);
  sub_10021FEB8(&qword_1003F25F0, &qword_1003EF278);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021E234()
{
  uint64_t v0 = sub_100044014(&qword_1003EF220);
  sub_100052FAC(v0, qword_10040BD50);
  sub_100044058(v0, (uint64_t)qword_10040BD50);
  sub_10021FEB8(&qword_1003EF228, &qword_1003EF220);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021E2C8()
{
  uint64_t v0 = sub_100044014(&qword_1003EF1F0);
  sub_100052FAC(v0, qword_10040BD68);
  sub_100044058(v0, (uint64_t)qword_10040BD68);
  sub_10021FEB8(&qword_1003EF1F8, &qword_1003EF1F0);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021E350()
{
  uint64_t v0 = sub_100044014(&qword_1003EF200);
  sub_100052FAC(v0, qword_10040BD80);
  sub_100044058(v0, (uint64_t)qword_10040BD80);
  sub_10021FEB8(&qword_1003EF208, &qword_1003EF200);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021E3E8()
{
  uint64_t v0 = sub_100044014(&qword_1003EF200);
  sub_100052FAC(v0, qword_10040BD98);
  sub_100044058(v0, (uint64_t)qword_10040BD98);
  sub_10021FEB8(&qword_1003EF208, &qword_1003EF200);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021E47C()
{
  uint64_t v0 = sub_100044014(&qword_1003EF200);
  sub_100052FAC(v0, qword_10040BDB0);
  sub_100044058(v0, (uint64_t)qword_10040BDB0);
  sub_10021FEB8(&qword_1003EF208, &qword_1003EF200);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021E50C()
{
  uint64_t v0 = sub_100044014(&qword_1003EF230);
  sub_100052FAC(v0, qword_10040BDC8);
  sub_100044058(v0, (uint64_t)qword_10040BDC8);
  sub_10021FEB8(&qword_1003EF238, &qword_1003EF230);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021E5A4()
{
  uint64_t v0 = sub_100044014(&qword_1003EF1F0);
  sub_100052FAC(v0, qword_10040BDE0);
  sub_100044058(v0, (uint64_t)qword_10040BDE0);
  sub_10021FEB8(&qword_1003EF1F8, &qword_1003EF1F0);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021E634()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040BDF8);
  sub_100044058(v0, (uint64_t)qword_10040BDF8);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021E6C4()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040BE10);
  sub_100044058(v0, (uint64_t)qword_10040BE10);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021E750()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040BE28);
  sub_100044058(v0, (uint64_t)qword_10040BE28);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021E7E4()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040BE40);
  sub_100044058(v0, (uint64_t)qword_10040BE40);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021E874()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040BE58);
  sub_100044058(v0, (uint64_t)qword_10040BE58);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021E908()
{
  uint64_t v0 = sub_100044014(&qword_1003EF200);
  sub_100052FAC(v0, qword_10040BE70);
  sub_100044058(v0, (uint64_t)qword_10040BE70);
  sub_10021FEB8(&qword_1003EF208, &qword_1003EF200);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021E990()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040BE88);
  sub_100044058(v0, (uint64_t)qword_10040BE88);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021EA1C()
{
  uint64_t v0 = sub_100044014(&qword_1003EF200);
  sub_100052FAC(v0, qword_10040BEA0);
  sub_100044058(v0, (uint64_t)qword_10040BEA0);
  sub_10021FEB8(&qword_1003EF208, &qword_1003EF200);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021EAB0()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040BEB8);
  sub_100044058(v0, (uint64_t)qword_10040BEB8);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021EB3C()
{
  uint64_t v0 = sub_100044014(&qword_1003EF230);
  sub_100052FAC(v0, qword_10040BED0);
  sub_100044058(v0, (uint64_t)qword_10040BED0);
  sub_10021FEB8(&qword_1003EF238, &qword_1003EF230);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021EBBC()
{
  uint64_t v0 = sub_100044014(&qword_1003F25A8);
  sub_100052FAC(v0, qword_10040BEE8);
  sub_100044058(v0, (uint64_t)qword_10040BEE8);
  sub_10021FEB8(&qword_1003F2610, &qword_1003F25A8);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021EC40()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040BF00);
  sub_100044058(v0, (uint64_t)qword_10040BF00);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021ECC8()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040BF18);
  sub_100044058(v0, (uint64_t)qword_10040BF18);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021ED58()
{
  uint64_t v0 = sub_100044014(&qword_1003F25B0);
  sub_100052FAC(v0, qword_10040BF30);
  sub_100044058(v0, (uint64_t)qword_10040BF30);
  sub_10021FEB8(&qword_1003F2608, &qword_1003F25B0);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021EDE4()
{
  uint64_t v0 = sub_100044014(&qword_1003F25B0);
  sub_100052FAC(v0, qword_10040BF48);
  sub_100044058(v0, (uint64_t)qword_10040BF48);
  sub_10021FEB8(&qword_1003F2608, &qword_1003F25B0);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021EE74()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040BF60);
  sub_100044058(v0, (uint64_t)qword_10040BF60);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021EF08()
{
  uint64_t v0 = sub_100044014(&qword_1003F25A8);
  sub_100052FAC(v0, qword_10040BF78);
  sub_100044058(v0, (uint64_t)qword_10040BF78);
  sub_10021FEB8(&qword_1003F2610, &qword_1003F25A8);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021EF9C()
{
  uint64_t v0 = sub_100044014(&qword_1003EF200);
  sub_100052FAC(v0, qword_10040BF90);
  sub_100044058(v0, (uint64_t)qword_10040BF90);
  sub_10021FEB8(&qword_1003EF208, &qword_1003EF200);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021F030()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040BFA8);
  sub_100044058(v0, (uint64_t)qword_10040BFA8);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021F0C8()
{
  uint64_t v0 = sub_100044014(&qword_1003F25B0);
  sub_100052FAC(v0, qword_10040BFC0);
  sub_100044058(v0, (uint64_t)qword_10040BFC0);
  sub_10021FEB8(&qword_1003F2608, &qword_1003F25B0);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021F150()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040BFD8);
  sub_100044058(v0, (uint64_t)qword_10040BFD8);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021F1D8()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040BFF0);
  sub_100044058(v0, (uint64_t)qword_10040BFF0);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021F268()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040C008);
  sub_100044058(v0, (uint64_t)qword_10040C008);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021F2F4()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040C020);
  sub_100044058(v0, (uint64_t)qword_10040C020);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021F378()
{
  uint64_t v0 = sub_100044014(&qword_1003F25D8);
  sub_100052FAC(v0, qword_10040C038);
  sub_100044058(v0, (uint64_t)qword_10040C038);
  sub_10021FEB8(&qword_1003F2600, &qword_1003F25D8);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021F410()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040C050);
  sub_100044058(v0, (uint64_t)qword_10040C050);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021F4A0()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040C068);
  sub_100044058(v0, (uint64_t)qword_10040C068);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021F530()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040C080);
  sub_100044058(v0, (uint64_t)qword_10040C080);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021F5C0()
{
  uint64_t v0 = sub_100044014(&qword_1003EF200);
  sub_100052FAC(v0, qword_10040C098);
  sub_100044058(v0, (uint64_t)qword_10040C098);
  sub_10021FEB8(&qword_1003EF208, &qword_1003EF200);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021F650()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040C0B0);
  sub_100044058(v0, (uint64_t)qword_10040C0B0);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021F6E0()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040C0C8);
  sub_100044058(v0, (uint64_t)qword_10040C0C8);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021F770()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040C0E0);
  sub_100044058(v0, (uint64_t)qword_10040C0E0);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021F800()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040C0F8);
  sub_100044058(v0, (uint64_t)qword_10040C0F8);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021F890()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040C110);
  sub_100044058(v0, (uint64_t)qword_10040C110);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021F920()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040C128);
  sub_100044058(v0, (uint64_t)qword_10040C128);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021F9B0()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040C140);
  sub_100044058(v0, (uint64_t)qword_10040C140);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021FA40()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040C158);
  sub_100044058(v0, (uint64_t)qword_10040C158);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021FAD0()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040C170);
  sub_100044058(v0, (uint64_t)qword_10040C170);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021FB60()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040C188);
  sub_100044058(v0, (uint64_t)qword_10040C188);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021FBF0()
{
  uint64_t v0 = sub_100044014(&qword_1003F2590);
  sub_100052FAC(v0, qword_10040C1A0);
  sub_100044058(v0, (uint64_t)qword_10040C1A0);
  sub_10021FEB8(&qword_1003F25F8, &qword_1003F2590);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021FC80()
{
  uint64_t v0 = sub_100044014(&qword_1003EF240);
  sub_100052FAC(v0, qword_10040C1B8);
  sub_100044058(v0, (uint64_t)qword_10040C1B8);
  sub_10021FEB8(&qword_1003EF248, &qword_1003EF240);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021FD0C()
{
  uint64_t v0 = sub_100044014(&qword_1003EF240);
  sub_100052FAC(v0, qword_10040C1D0);
  sub_100044058(v0, (uint64_t)qword_10040C1D0);
  sub_10021FEB8(&qword_1003EF248, &qword_1003EF240);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021FD9C()
{
  uint64_t v0 = sub_100044014(&qword_1003EF1F0);
  sub_100052FAC(v0, qword_10040C1E8);
  sub_100044058(v0, (uint64_t)qword_10040C1E8);
  sub_10021FEB8(&qword_1003EF1F8, &qword_1003EF1F0);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021FE34()
{
  uint64_t v0 = sub_100044014(&qword_1003EF290);
  sub_100052FAC(v0, qword_10040C200);
  sub_100044058(v0, (uint64_t)qword_10040C200);
  sub_10021FEB8(&qword_1003F2630, &qword_1003EF290);
  return ExpressionType.init(_:)();
}

uint64_t sub_10021FEB8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10004AE58(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10021FF08(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  return _swift_task_switch(sub_10021FF50, v1, 0);
}

uint64_t sub_10021FF50(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  uint64_t v5 = v2[2];
  uint64_t v6 = sub_10003D430(&qword_1003F0330, a2, (void (*)(uint64_t))type metadata accessor for LocalStorageService);
  unint64_t v7 = (void *)swift_task_alloc();
  v2[5] = v7;
  v7[2] = v5;
  v7[3] = v3;
  v7[4] = v4;
  unint64_t v8 = (void *)swift_task_alloc();
  v2[6] = v8;
  void *v8 = v2;
  v8[1] = sub_100220094;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v8, v3, v6, 0x7266286574697277, 0xEF293A73646E6569, sub_10022A6F4, v7, (char *)&type metadata for () + 8);
}

uint64_t sub_100220094()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 24);
    uint64_t v4 = sub_10022C550;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 24);
    swift_task_dealloc();
    uint64_t v4 = sub_1001D6460;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1002201BC(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  return _swift_task_switch(sub_100220204, v1, 0);
}

uint64_t sub_100220204(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  uint64_t v5 = v2[2];
  uint64_t v6 = sub_10003D430(&qword_1003F0330, a2, (void (*)(uint64_t))type metadata accessor for LocalStorageService);
  uint64_t v7 = (void *)swift_task_alloc();
  v2[5] = v7;
  v7[2] = v5;
  v7[3] = v3;
  v7[4] = v4;
  unint64_t v8 = (void *)swift_task_alloc();
  v2[6] = v8;
  void *v8 = v2;
  v8[1] = sub_100220094;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v8, v3, v6, 0x7728657461647075, 0xED0000293A687469, sub_10022A838, v7, (char *)&type metadata for () + 8);
}

uint64_t sub_100220348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = *v3;
  return _swift_task_switch(sub_100220394, 0, 0);
}

uint64_t sub_100220394()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  long long v4 = *(_OWORD *)(v0 + 24);
  *(void *)(v3 + 16) = v2;
  *(_OWORD *)(v3 + 24) = v4;
  *(void *)(v3 + 40) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v5;
  uint64_t v6 = sub_100044014(&qword_1003ECFE8);
  *uint64_t v5 = v0;
  v5[1] = sub_1002204A0;
  uint64_t v7 = *(void *)(v0 + 16);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v7, 0, 0, 0xD000000000000012, 0x8000000100378500, sub_10022C178, v3, v6);
}

uint64_t sub_1002204A0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1002205DC, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1002205DC()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100220640()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_10022065C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002206C0()
{
  uint64_t v1 = *(void *)(v0 + 880);
  sub_100013B50(v0 + 16, v0 + 448, &qword_1003ECCD0);
  sub_100013B50(v0 + 448, v1, &qword_1003ECCD0);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100220760()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002207C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = type metadata accessor for Date();
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  v4[9] = sub_100044014(&qword_1003F0D58);
  v4[10] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for FenceTriggerRecord();
  v4[11] = v6;
  v4[12] = *(void *)(v6 - 8);
  v4[13] = swift_task_alloc();
  return _swift_task_switch(sub_100220918, v3, 0);
}

uint64_t sub_100220918(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2[5];
  uint64_t v4 = v2[3];
  uint64_t v5 = sub_10003D430(&qword_1003F0330, a2, (void (*)(uint64_t))type metadata accessor for LocalStorageService);
  uint64_t v6 = swift_task_alloc();
  v2[14] = v6;
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = v4;
  uint64_t v7 = (void *)swift_task_alloc();
  v2[15] = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100220A44;
  uint64_t v9 = v2[9];
  uint64_t v8 = v2[10];
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v8, v3, v5, 0xD000000000000011, 0x8000000100377140, sub_10022AF4C, v6, v9);
}

uint64_t sub_100220A44()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = sub_100220CFC;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 40);
    swift_task_dealloc();
    uint64_t v4 = sub_100220B6C;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100220B6C()
{
  uint64_t v1 = v0[10];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[12] + 48))(v1, 1, v0[11]) == 1)
  {
    sub_10000A520(v1, &qword_1003F0D58);
  }
  else
  {
    uint64_t v3 = v0[7];
    uint64_t v2 = v0[8];
    uint64_t v4 = v0[6];
    sub_10003E000(v1, v0[13], (uint64_t (*)(void))type metadata accessor for FenceTriggerRecord);
    sub_1000D4030(v2);
    char v5 = DateInterval.contains(_:)();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    uint64_t v6 = v0[13];
    if (v5)
    {
      sub_10003E000(v6, v0[2], (uint64_t (*)(void))type metadata accessor for FenceTriggerRecord);
      uint64_t v7 = 0;
      goto LABEL_7;
    }
    sub_10003D91C(v6, (uint64_t (*)(void))type metadata accessor for FenceTriggerRecord);
  }
  uint64_t v7 = 1;
LABEL_7:
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[12] + 56))(v0[2], v7, 1, v0[11]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100220CFC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100220D88()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100052FAC(v0, qword_10040C218);
  uint64_t v1 = sub_100044058(v0, (uint64_t)qword_10040C218);
  if (qword_1003EC3E8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100044058(v0, (uint64_t)qword_10040C230);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100220E50()
{
  v1[2] = v0;
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = swift_task_alloc();
  v1[3] = v4;
  type metadata accessor for UUID();
  v1[4] = swift_task_alloc();
  swift_defaultActor_initialize();
  v0[14] = 0xD000000000000013;
  v0[15] = 0x8000000100370730;
  type metadata accessor for WorkItemQueue();
  UUID.init()();
  v0[17] = WorkItemQueue.__allocating_init(identifier:)();
  UUID.init()();
  v0[18] = WorkItemQueue.__allocating_init(identifier:)();
  UUID.init()();
  v0[19] = WorkItemQueue.__allocating_init(identifier:)();
  UUID.init()();
  v0[20] = WorkItemQueue.__allocating_init(identifier:)();
  UUID.init()();
  v0[21] = WorkItemQueue.__allocating_init(identifier:)();
  UUID.init()();
  v0[22] = WorkItemQueue.__allocating_init(identifier:)();
  UUID.init()();
  v0[23] = WorkItemQueue.__allocating_init(identifier:)();
  if (qword_1003EC4C8 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100044058(v2, (uint64_t)qword_10040C478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v4, v5, v2);
  type metadata accessor for LocalStorageDatabase();
  swift_allocObject();
  uint64_t v6 = (void *)swift_task_alloc();
  v1[5] = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_1002210C0;
  return sub_1002146D8(v4, 0);
}

uint64_t sub_1002210C0(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    type metadata accessor for LocalStorageService();
    swift_defaultActor_destroy();
    swift_deallocPartialClassInstance();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 48) = a1;
    type metadata accessor for LocalStorageStore();
    uint64_t v8 = (void *)swift_allocObject();
    *(void *)(v4 + 56) = v8;
    swift_retain();
    swift_defaultActor_initialize();
    v8[15] = 0xD000000000000011;
    v8[16] = 0x8000000100378520;
    v8[14] = a1;
    return _swift_task_switch(sub_1002212D8, v8, 0);
  }
}

uint64_t sub_1002212D8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v1 + 128) = *(void *)(v0 + 56);
  return _swift_task_switch(sub_1002212FC, v1, 0);
}

uint64_t sub_1002212FC()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 16);
  return v1(v2);
}

uint64_t sub_100221378()
{
  *(void *)(v1 + 24) = v0;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 32) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10022140C;
  return daemon.getter();
}

uint64_t sub_10022140C(uint64_t a1)
{
  uint64_t v2 = (void *)*v1;
  uint64_t v9 = (void *)*v1;
  v2[5] = a1;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  v2[6] = v3;
  uint64_t v4 = type metadata accessor for Daemon();
  v2[7] = v4;
  uint64_t UnlockService = type metadata accessor for FirstUnlockService();
  uint64_t v6 = sub_10003D430(&qword_1003ECCA8, 255, (void (*)(uint64_t))&type metadata accessor for Daemon);
  v2[8] = v6;
  uint64_t v7 = sub_10003D430(&qword_1003EF448, 255, (void (*)(uint64_t))&type metadata accessor for FirstUnlockService);
  *uint64_t v3 = v9;
  v3[1] = sub_1002215F4;
  return ActorServiceDaemon.getService<A>()(v4, UnlockService, v6, v7);
}

uint64_t sub_1002215F4(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v3[9] = a1;
  v3[10] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v3[3];
    return _swift_task_switch(sub_100222814, v5, 0);
  }
  else
  {
    swift_release();
    uint64_t v8 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of FirstUnlockService.waitForFirstUnlock()
                           + async function pointer to dispatch thunk of FirstUnlockService.waitForFirstUnlock());
    uint64_t v6 = (void *)swift_task_alloc();
    v3[11] = v6;
    *uint64_t v6 = v4;
    v6[1] = sub_100221798;
    return v8();
  }
}

uint64_t sub_100221798()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 24);
  swift_task_dealloc();
  return _swift_task_switch(sub_1002218A8, v1, 0);
}

uint64_t sub_1002218A8()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) + 128);
  *(void *)(v0 + 96) = v1;
  return _swift_task_switch(sub_1002218CC, v1, 0);
}

uint64_t sub_1002218CC()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 96) + 112);
  *(void *)(v0 + 104) = v1;
  return _swift_task_switch(sub_1002218F0, v1, 0);
}

uint64_t sub_1002218F0()
{
  uint64_t v1 = v0[10];
  sub_100215780();
  if (v1)
  {
    v0[16] = v1;
    uint64_t v2 = v0[3];
    return _swift_task_switch(sub_100221DD4, v2, 0);
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    v0[14] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1002219D8;
    return sub_10023FDE0();
  }
}

uint64_t sub_1002219D8()
{
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v2[16] = v0;
    uint64_t v3 = v2[3];
    uint64_t v4 = sub_100221DD4;
  }
  else
  {
    uint64_t v3 = v2[12];
    uint64_t v4 = sub_100221AFC;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100221AFC()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 96) + 112);
  *(void *)(v0 + 120) = v1;
  return _swift_task_switch(sub_100221B20, v1, 0);
}

uint64_t sub_100221B20()
{
  uint64_t v1 = *(void *)(v0 + 24);
  *(unsigned char *)(v0 + 232) = *(unsigned char *)(*(void *)(v0 + 120) + 136);
  return _swift_task_switch(sub_100221B48, v1, 0);
}

uint64_t sub_100221B48()
{
  if (*(unsigned char *)(v0 + 232) == 1)
  {
    if (qword_1003EC3E0 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    *(void *)(v0 + 136) = sub_100044058(v1, (uint64_t)qword_10040C218);
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "There's localDB migration performed, forceRefreshClientIfNeeded", v4, 2u);
      swift_slowDealloc();
    }

    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_100221E38;
    uint64_t v6 = *(void **)(v0 + 24);
    v5[384] = v6;
    v5[385] = *v6;
    return _swift_task_switch(sub_100222C50, v6, 0);
  }
  else
  {
    if (qword_1003EC3E0 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_100044058(v7, (uint64_t)qword_10040C218);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "There's no localDB migration performed, not force refreshClient", v10, 2u);
      swift_slowDealloc();
    }

    swift_release();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
}

uint64_t sub_100221DD4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100221E38()
{
  uint64_t v2 = (void *)*v1;
  v2[19] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[3];
    return _swift_task_switch(sub_100222878, v3, 0);
  }
  else
  {
    uint64_t v4 = (void *)swift_task_alloc();
    v2[20] = v4;
    *uint64_t v4 = v2;
    v4[1] = sub_100221FA4;
    return daemon.getter();
  }
}

uint64_t sub_100221FA4(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  *(void *)(v3 + 168) = a1;
  swift_task_dealloc();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 176) = v5;
  uint64_t v6 = type metadata accessor for DataManager(0);
  uint64_t v7 = sub_10003D430(&qword_1003ECCC0, 255, (void (*)(uint64_t))type metadata accessor for DataManager);
  *uint64_t v5 = v4;
  v5[1] = sub_10022215C;
  uint64_t v8 = *(void *)(v2 + 64);
  uint64_t v9 = *(void *)(v2 + 56);
  return ActorServiceDaemon.getService<A>()(v9, v6, v8, v7);
}

uint64_t sub_10022215C(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[23] = a1;
  v3[24] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = v3[3];
    uint64_t v5 = sub_1002228DC;
  }
  else
  {
    uint64_t v6 = v3[3];
    swift_release();
    uint64_t v5 = sub_100222284;
    uint64_t v4 = v6;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_100222284(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 24);
  uint64_t v4 = sub_10003D430(&qword_1003F0330, a2, (void (*)(uint64_t))type metadata accessor for LocalStorageService);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 200) = v5;
  uint64_t v6 = sub_100044014(&qword_1003EE360);
  *uint64_t v5 = v2;
  v5[1] = sub_1002223B0;
  uint64_t v7 = *(void *)(v2 + 24);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v2 + 16, v3, v4, 0x65636E65466C6C61, 0xEB00000000292873, sub_100146B34, v7, v6);
}

uint64_t sub_1002223B0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 208) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 24);
  if (v0) {
    uint64_t v4 = sub_100222718;
  }
  else {
    uint64_t v4 = sub_1002224DC;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1002224DC()
{
  uint64_t v1 = v0[2];
  v0[27] = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[28] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10022257C;
  return sub_10013C2D8(v1, v1);
}

uint64_t sub_10022257C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 24);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1002226A8, v1, 0);
}

uint64_t sub_1002226A8()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100222718()
{
  swift_release();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Failed to repairCKFences after database migration.", v3, 2u);
    swift_slowDealloc();
  }
  swift_release();
  swift_errorRelease();

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100222814()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100222878()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002228DC()
{
  swift_release();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Failed to repairCKFences after database migration.", v3, 2u);
    swift_slowDealloc();
  }
  swift_release();
  swift_errorRelease();

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1002229D8()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_1002229F8, v0, 0);
}

uint64_t sub_1002229F8()
{
  if (qword_1003EC3E0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100044058(v1, (uint64_t)qword_10040C218);
  os_log_type_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Reset Local DB", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = *(void *)(v0 + 16);

  uint64_t v6 = *(void *)(v5 + 128);
  *(void *)(v0 + 24) = v6;
  return _swift_task_switch(sub_100222B1C, v6, 0);
}

uint64_t sub_100222B1C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) + 112);
  *(void *)(v0 + 32) = v1;
  return _swift_task_switch(sub_100222B40, v1, 0);
}

uint64_t sub_100222B40()
{
  type metadata accessor for LocalStorageDatabase();
  sub_10003D430(&qword_1003F2578, 255, (void (*)(uint64_t))type metadata accessor for LocalStorageDatabase);
  Database.reset()();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100222C08()
{
  *(void *)(v1 + 3072) = v0;
  *(void *)(v1 + 3080) = *v0;
  return _swift_task_switch(sub_100222C50, v0, 0);
}

uint64_t sub_100222C50(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2[385];
  uint64_t v4 = v2[384];
  uint64_t v5 = sub_10003D430(&qword_1003F0330, a2, (void (*)(uint64_t))type metadata accessor for LocalStorageService);
  uint64_t v6 = swift_task_alloc();
  v2[386] = v6;
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v3;
  uint64_t v7 = (void *)swift_task_alloc();
  v2[387] = v7;
  uint64_t v8 = sub_100044014(&qword_1003ECCD0);
  v2[388] = v8;
  *uint64_t v7 = v2;
  v7[1] = sub_100222D9C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v2 + 74, v4, v5, 0xD000000000000014, 0x80000001003784C0, sub_10022C558, v6, v8);
}

uint64_t sub_100222D9C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 3112) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 3072);
  if (v0) {
    uint64_t v4 = sub_10022332C;
  }
  else {
    uint64_t v4 = sub_100222EB4;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100222EB4()
{
  uint64_t v16 = v0;
  sub_100013B50(v0 + 592, v0 + 1456, &qword_1003ECCD0);
  sub_100013B50(v0 + 1456, v0 + 1024, &qword_1003ECCD0);
  if (sub_10005F070(v0 + 1024) == 1)
  {
    BOOL v1 = 1;
  }
  else
  {
    sub_100013B50(v0 + 1280, v0 + 2912, &qword_1003ECCD8);
    BOOL v1 = sub_10005F088(v0 + 2912) == 1
      && (sub_100013B50(v0 + 1456, v0 + 2320, &qword_1003ECCD0),
          sub_100013B50(v0 + 2416, v0 + 2752, &qword_1003ED068),
          sub_100085654(v0 + 2752) == 1)
      && *(void *)(v0 + 2728) == 0;
  }
  if (qword_1003EC3E0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100044058(v2, (uint64_t)qword_10040C218);
  sub_100036F58(v0 + 1456, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100037568);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    BOOL v14 = v1;
    uint64_t v5 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 67240707;
    *(_DWORD *)(v0 + 3168) = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v5 + 8) = 2160;
    *(void *)(v0 + 3064) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v5 + 18) = 2081;
    sub_100013B50(v0 + 1456, v0 + 1888, &qword_1003ECCD0);
    sub_100036F58(v0 + 1456, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100037568);
    uint64_t v6 = String.init<A>(describing:)();
    *(void *)(v0 + 3056) = sub_100037004(v6, v7, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100036F58(v0 + 1456, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100037378);
    sub_100036F58(v0 + 1456, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100037378);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "LocalStorageService shouldForceRefreshClient: %{BOOL,public}dsettings %{private,mask.hash}s", (uint8_t *)v5, 0x1Cu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (!v14)
    {
LABEL_11:
      uint64_t v8 = Logger.logObject.getter();
      os_log_type_t v9 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v8, v9))
      {
        uint64_t v10 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v10 = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "serverSettings is not nil after migrating local DB version, not force refreshClient", v10, 2u);
        swift_slowDealloc();
      }

      swift_task_dealloc();
      uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
      return v11();
    }
  }
  else
  {
    sub_100036F58(v0 + 1456, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100037378);
    sub_100036F58(v0 + 1456, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100037378);

    if (!v1) {
      goto LABEL_11;
    }
  }
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 3120) = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_100223390;
  return daemon.getter();
}

uint64_t sub_10022332C()
{
  swift_task_dealloc();
  BOOL v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100223390(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v9 = *v1;
  *(void *)(v2 + 3128) = a1;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 3136) = v3;
  uint64_t v4 = type metadata accessor for Daemon();
  uint64_t v5 = type metadata accessor for DataManager(0);
  uint64_t v6 = sub_10003D430(&qword_1003ECCA8, 255, (void (*)(uint64_t))&type metadata accessor for Daemon);
  uint64_t v7 = sub_10003D430(&qword_1003ECCC0, 255, (void (*)(uint64_t))type metadata accessor for DataManager);
  *uint64_t v3 = v9;
  v3[1] = sub_100223574;
  return ActorServiceDaemon.getService<A>()(v4, v5, v6, v7);
}

uint64_t sub_100223574(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 3144) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = v4[384];
    return _swift_task_switch(sub_100223890, v6, 0);
  }
  else
  {
    swift_release();
    v4[394] = a1;
    uint64_t v7 = (void *)swift_task_alloc();
    v4[395] = v7;
    *uint64_t v7 = v5;
    v7[1] = sub_100223708;
    return sub_10010B8B8((uint64_t)(v4 + 2));
  }
}

uint64_t sub_100223708()
{
  uint64_t v1 = *(void *)v0 + 16;
  uint64_t v2 = *(void *)(*(void *)v0 + 3072);
  swift_task_dealloc();
  sub_10015F0A4(v1);
  return _swift_task_switch(sub_100223824, v2, 0);
}

uint64_t sub_100223824()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100223890()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100223900(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  return _swift_task_switch(sub_100223948, 0, 0);
}

uint64_t sub_100223948()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = swift_task_alloc();
  v0[5] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  uint64_t v5 = sub_100044014(&qword_1003F29E0);
  *uint64_t v4 = v0;
  v4[1] = sub_100223A48;
  uint64_t v6 = v0[2];
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v6, 0, 0, 0xD000000000000019, 0x80000001003784E0, sub_10022BDE8, v3, v5);
}

uint64_t sub_100223A48()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_10022065C, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_100223B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v15 = a3;
  uint64_t v5 = type metadata accessor for UUID();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_100044014(&qword_1003F29E8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a2 + 160);
  type metadata accessor for WorkItemQueue.WorkItem();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v11 = (v8 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v12 + v10, v9, v6);
  *(void *)(v12 + v11) = a2;
  *(void *)(v12 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)) = v15;
  swift_retain();
  UUID.init()();
  WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
  dispatch thunk of WorkItemQueue.enqueue(_:)();
  return swift_release();
}

uint64_t sub_100223D88(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  sub_100044014(&qword_1003F29E0);
  v2[8] = swift_task_alloc();
  return _swift_task_switch(sub_100223E1C, 0, 0);
}

uint64_t sub_100223E1C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100223EB8;
  uint64_t v2 = *(void *)(v0 + 64);
  return sub_10022C55C(v2);
}

uint64_t sub_100223EB8()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100224050;
  }
  else {
    uint64_t v2 = sub_100223FCC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100223FCC()
{
  sub_100044014(&qword_1003F29E8);
  CheckedContinuation.resume(returning:)();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100224050()
{
  uint64_t v12 = v0;
  if (qword_1003EC3E0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100044058(v1, (uint64_t)qword_10040C218);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[10];
  if (v4)
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446466;
    v0[3] = sub_100037004(0xD000000000000019, 0x80000001003784E0, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v6 + 12) = 2082;
    v0[4] = v5;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v7 = String.init<A>(describing:)();
    v0[5] = sub_100037004(v7, v8, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%{public}s error: %{public}s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  v0[2] = v0[10];
  sub_100044014(&qword_1003F29E8);
  CheckedContinuation.resume(throwing:)();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1002242D8(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  return _swift_task_switch(sub_100224320, v1, 0);
}

uint64_t sub_100224320(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  uint64_t v5 = v2[2];
  uint64_t v6 = sub_10003D430(&qword_1003F0330, a2, (void (*)(uint64_t))type metadata accessor for LocalStorageService);
  uint64_t v7 = (void *)swift_task_alloc();
  v2[5] = v7;
  v7[2] = v3;
  v7[3] = v5;
  v7[4] = v4;
  unint64_t v8 = (void *)swift_task_alloc();
  v2[6] = v8;
  void *v8 = v2;
  v8[1] = sub_100220094;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v8, v3, v6, 0x7228747265736E69, 0xEF293A64726F6365, sub_10022BA7C, v7, (char *)&type metadata for () + 8);
}

uint64_t sub_100224464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v25 = a4;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v6 = type metadata accessor for UUID();
  __chkstk_darwin(v6 - 8);
  uint64_t v24 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100044014(&qword_1003F2828);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = type metadata accessor for OwnerSharedSecretsRecord();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *(void *)(a2 + 160);
  uint64_t v22 = type metadata accessor for WorkItemQueue.WorkItem();
  sub_10003D3C8(v21, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for OwnerSharedSecretsRecord);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v16 = (v13 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = (*(unsigned __int8 *)(v9 + 80) + v16 + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v18 = swift_allocObject();
  sub_10003E000((uint64_t)v14, v18 + v15, (uint64_t (*)(void))type metadata accessor for OwnerSharedSecretsRecord);
  *(void *)(v18 + v16) = v20;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v18 + v17, (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  *(void *)(v18 + ((v10 + v17 + 7) & 0xFFFFFFFFFFFFFFF8)) = v25;
  swift_retain();
  UUID.init()();
  WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
  dispatch thunk of WorkItemQueue.enqueue(_:)();
  return swift_release();
}

uint64_t sub_100224734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  v3[9] = type metadata accessor for OwnerSharedSecretsRecord();
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  return _swift_task_switch(sub_1002247DC, 0, 0);
}

uint64_t sub_1002247DC()
{
  unint64_t v16 = v0;
  if (qword_1003EC3E0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[11];
  uint64_t v3 = type metadata accessor for Logger();
  v0[12] = sub_100044058(v3, (uint64_t)qword_10040C218);
  sub_10003D3C8(v1, v2, (uint64_t (*)(void))type metadata accessor for OwnerSharedSecretsRecord);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = v0[11];
  if (v6)
  {
    uint64_t v8 = v0[10];
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    sub_10003D3C8(v7, v8, (uint64_t (*)(void))type metadata accessor for OwnerSharedSecretsRecord);
    uint64_t v10 = String.init<A>(describing:)();
    v0[5] = sub_100037004(v10, v11, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10003D91C(v7, (uint64_t (*)(void))type metadata accessor for OwnerSharedSecretsRecord);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Inserting OwnerSharedSecretsRecord: %s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10003D91C(v0[11], (uint64_t (*)(void))type metadata accessor for OwnerSharedSecretsRecord);
  }

  uint64_t v12 = (void *)swift_task_alloc();
  v0[13] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_100224A6C;
  uint64_t v13 = v0[6];
  return sub_10022D108(v13);
}

uint64_t sub_100224A6C()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100224C04;
  }
  else {
    uint64_t v2 = sub_100224B80;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100224B80()
{
  sub_100044014(&qword_1003F2828);
  CheckedContinuation.resume(returning:)();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100224C04()
{
  unint64_t v11 = v0;
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[14];
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    uint64_t v10 = v5;
    v0[3] = v3;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v6 = String.init<A>(describing:)();
    v0[4] = sub_100037004(v6, v7, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Unable to insert OwnerSharedSecretsRecord: %{public}s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  v0[2] = v0[14];
  sub_100044014(&qword_1003F2828);
  CheckedContinuation.resume(throwing:)();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100224E10()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_100224E78()
{
  sub_100224E10();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_100224EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  uint64_t v5 = type metadata accessor for LocalStorageService();
  *uint64_t v4 = v2;
  v4[1] = sub_10004A274;
  return ActorServiceProtocol.initialLaunchProcessing()(v5, a2);
}

uint64_t sub_100224F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for LocalStorageService();
  void *v8 = v4;
  v8[1] = sub_10004A274;
  return ActorServiceProtocol.migrate(from:to:)(a1, a2, v9, a4);
}

uint64_t sub_100225010(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  uint64_t v5 = type metadata accessor for LocalStorageService();
  *uint64_t v4 = v2;
  v4[1] = sub_100018CD0;
  return ActorServiceProtocol.firstLaunchSinceReboot()(v5, a2);
}

uint64_t sub_1002250B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  uint64_t v5 = type metadata accessor for LocalStorageService();
  *uint64_t v4 = v2;
  v4[1] = sub_10004A274;
  return ActorServiceProtocol.startup()(v5, a2);
}

uint64_t sub_100225160()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100018CD0;
  return sub_100221378();
}

uint64_t sub_1002251EC()
{
  type metadata accessor for LocalStorageService();
  sub_10003D430(&qword_1003F01F8, v0, (void (*)(uint64_t))type metadata accessor for LocalStorageService);
  return ActorServiceProtocol.description.getter();
}

uint64_t sub_100225254(uint64_t a1, uint64_t a2)
{
  return sub_10003D430(qword_1003F2778, a2, (void (*)(uint64_t))type metadata accessor for LocalStorageService);
}

uint64_t sub_10022529C(uint64_t a1, uint64_t a2)
{
  return sub_10003D430(&qword_1003F0330, a2, (void (*)(uint64_t))type metadata accessor for LocalStorageService);
}

uint64_t sub_1002252E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_100044014(&qword_1003F2800);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  type metadata accessor for WorkItemQueue.WorkItem();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v11 + v10, (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  swift_bridgeObjectRetain();
  swift_retain();
  UUID.init()();
  WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
  dispatch thunk of WorkItemQueue.enqueue(_:)();
  return swift_release();
}

uint64_t sub_1002254C8()
{
  uint64_t v1 = v0[17];
  (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
  v0[2] = v1;
  sub_100044014(&qword_1003F2800);
  CheckedContinuation.resume(throwing:)();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_100225570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v35 = a5;
  uint64_t v32 = a4;
  uint64_t v33 = a2;
  uint64_t v29 = a3;
  uint64_t v31 = a1;
  uint64_t v5 = type metadata accessor for UUID();
  __chkstk_darwin(v5 - 8);
  uint64_t v34 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for HandleType();
  uint64_t v7 = *(void *)(v36 - 8);
  uint64_t v28 = *(void *)(v7 + 64);
  __chkstk_darwin(v36);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = v9;
  uint64_t v10 = sub_100044014(&qword_1003F2A30);
  uint64_t v25 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  uint64_t v26 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Handle();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v13);
  unint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for WorkItemQueue.WorkItem();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v29, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v31, v10);
  uint64_t v24 = v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v32, v36);
  unint64_t v17 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v18 = (v15 + *(unsigned __int8 *)(v11 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v19 = (v12 + *(unsigned __int8 *)(v7 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v20 = (v28 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v33;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v21 + v17, v16, v13);
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v21 + v18, v26, v25);
  (*(void (**)(unint64_t, char *, uint64_t))(v24 + 32))(v21 + v19, v27, v36);
  *(void *)(v21 + v20) = v35;
  swift_retain();
  UUID.init()();
  WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
  dispatch thunk of WorkItemQueue.enqueue(_:)();
  return swift_release();
}

uint64_t sub_10022591C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  sub_100044014(&qword_1003ECFE8);
  v4[9] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Handle();
  v4[10] = v5;
  v4[11] = *(void *)(v5 - 8);
  v4[12] = swift_task_alloc();
  sub_100044014(&qword_1003F03B8);
  v4[13] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for FriendRecord(0);
  v4[14] = v6;
  v4[15] = *(void *)(v6 - 8);
  v4[16] = swift_task_alloc();
  return _swift_task_switch(sub_100225A9C, 0, 0);
}

uint64_t sub_100225A9C()
{
  uint64_t v1 = Handle.identifier.getter();
  uint64_t v3 = v2;
  v0[17] = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[18] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100225B5C;
  uint64_t v5 = v0[13];
  return sub_10022D6B0(v5, v1, v3);
}

uint64_t sub_100225B5C()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100225FE4;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_100225C78;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100225C78()
{
  uint64_t v24 = v0;
  uint64_t v1 = v0[13];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[15] + 48))(v1, 1, v0[14]) == 1)
  {
    sub_10000A520(v1, &qword_1003F03B8);
    if (qword_1003EC3E0 != -1) {
      swift_once();
    }
    uint64_t v3 = v0[11];
    uint64_t v2 = v0[12];
    uint64_t v4 = v0[10];
    uint64_t v5 = v0[6];
    uint64_t v6 = type metadata accessor for Logger();
    sub_100044058(v6, (uint64_t)qword_10040C218);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    BOOL v9 = os_log_type_enabled(v7, v8);
    uint64_t v11 = v0[11];
    uint64_t v10 = v0[12];
    if (v9)
    {
      uint64_t v22 = v0[10];
      uint64_t v12 = swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 141558275;
      v0[3] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v12 + 12) = 2081;
      uint64_t v13 = Handle.identifier.getter();
      v0[4] = sub_100037004(v13, v14, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v22);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "No friend matching handle %{private,mask.hash}s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(void, void))(v11 + 8))(v0[12], v0[10]);
    }

    uint64_t v18 = v0[9];
    uint64_t v19 = type metadata accessor for Friend();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
    sub_100044014(&qword_1003F2A30);
    CheckedContinuation.resume(returning:)();
  }
  else
  {
    uint64_t v15 = v0[16];
    uint64_t v17 = v0[8];
    uint64_t v16 = v0[9];
    sub_10003E000(v1, v15, type metadata accessor for FriendRecord);
    sub_10004415C(v17, v16);
    sub_100044014(&qword_1003F2A30);
    CheckedContinuation.resume(returning:)();
    sub_10003D91C(v15, type metadata accessor for FriendRecord);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_100225FE4()
{
  uint64_t v1 = v0[19];
  swift_bridgeObjectRelease();
  v0[2] = v1;
  sub_100044014(&qword_1003F2A30);
  CheckedContinuation.resume(throwing:)();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1002260A0()
{
  v0[2] = v0[18];
  sub_100044014(&qword_1003F2800);
  CheckedContinuation.resume(throwing:)();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100226150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return _swift_task_switch(sub_100226174, 0, 0);
}

uint64_t sub_100226174()
{
  uint64_t v12 = v0;
  if (qword_1003EC3E0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[9] = sub_100044058(v1, (uint64_t)qword_10040C218);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    type metadata accessor for Friend();
    swift_bridgeObjectRetain();
    uint64_t v5 = Array.description.getter();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    v0[5] = sub_100037004(v5, v7, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "LocalStorage Service write with friends: %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  os_log_type_t v8 = (void *)swift_task_alloc();
  v0[10] = v8;
  void *v8 = v0;
  v8[1] = sub_1002263D8;
  uint64_t v9 = v0[6];
  return sub_10022DD40(v9);
}

uint64_t sub_1002263D8()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1002264EC;
  }
  else {
    uint64_t v2 = sub_10022C54C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002264EC()
{
  uint64_t v11 = v0;
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[11];
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    uint64_t v10 = v5;
    v0[3] = v3;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v6 = String.init<A>(describing:)();
    v0[4] = sub_100037004(v6, v7, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "LocalStorage Service write with friends error:%{public}s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  v0[2] = v0[11];
  sub_100044014(&qword_1003F2828);
  CheckedContinuation.resume(throwing:)();
  os_log_type_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1002266E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return _swift_task_switch(sub_10022670C, 0, 0);
}

uint64_t sub_10022670C()
{
  uint64_t v12 = v0;
  if (qword_1003EC3E0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[9] = sub_100044058(v1, (uint64_t)qword_10040C218);
  swift_bridgeObjectRetain_n();
  os_log_type_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    type metadata accessor for Friend();
    type metadata accessor for FriendshipAction();
    sub_10003D430(&qword_1003EEC00, 255, (void (*)(uint64_t))&type metadata accessor for Friend);
    swift_bridgeObjectRetain();
    uint64_t v5 = Dictionary.description.getter();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    v0[5] = sub_100037004(v5, v7, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "LocalStorage Service update with changes: %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  os_log_type_t v8 = (void *)swift_task_alloc();
  v0[10] = v8;
  void *v8 = v0;
  v8[1] = sub_1002269C0;
  uint64_t v9 = v0[6];
  return sub_10022E9BC(v9);
}

uint64_t sub_1002269C0()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_100226AD4;
  }
  else {
    os_log_type_t v2 = sub_10022C54C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100226AD4()
{
  uint64_t v11 = v0;
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[11];
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    uint64_t v10 = v5;
    v0[3] = v3;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v6 = String.init<A>(describing:)();
    v0[4] = sub_100037004(v6, v7, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "LocalStorage Service update with changes error:%{public}s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  v0[2] = v0[11];
  sub_100044014(&qword_1003F2828);
  CheckedContinuation.resume(throwing:)();
  os_log_type_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100226CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v15 = a4;
  uint64_t v7 = type metadata accessor for UUID();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_100044014(&qword_1003F2828);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  type metadata accessor for WorkItemQueue.WorkItem();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v12 + v11, (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  *(void *)(v12 + ((v10 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v15;
  swift_bridgeObjectRetain();
  swift_retain();
  UUID.init()();
  WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
  dispatch thunk of WorkItemQueue.enqueue(_:)();
  return swift_release();
}

uint64_t sub_100226ED0()
{
  unint64_t v11 = v0;
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[11];
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    uint64_t v10 = v5;
    v0[3] = v3;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v6 = String.init<A>(describing:)();
    v0[4] = sub_100037004(v6, v7, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "LocalStorage Service write with devices error:%{public}s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  v0[2] = v0[11];
  sub_100044014(&qword_1003F2828);
  CheckedContinuation.resume(throwing:)();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1002270CC(uint64_t a1)
{
  return sub_10001AD24(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1002270D4()
{
  unint64_t v11 = v0;
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[10];
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    uint64_t v10 = v5;
    v0[3] = v3;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v6 = String.init<A>(describing:)();
    v0[4] = sub_100037004(v6, v7, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "LocalStorage Service read with devices error:%{public}s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  v0[2] = v0[10];
  sub_100044014(&qword_1003F27B8);
  CheckedContinuation.resume(throwing:)();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1002272D0()
{
  return sub_100022728(&qword_1003F27B8);
}

uint64_t sub_1002272DC()
{
  unint64_t v11 = v0;
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[10];
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    uint64_t v10 = v5;
    v0[3] = v3;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v6 = String.init<A>(describing:)();
    v0[4] = sub_100037004(v6, v7, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "LocalStorage Service write serverSettings:%{public}s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  v0[2] = v0[10];
  sub_100044014(&qword_1003F2828);
  CheckedContinuation.resume(throwing:)();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1002274D8()
{
  uint64_t v10 = v0;
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[616];
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    v0[611] = v3;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v5 = String.init<A>(describing:)();
    v0[610] = sub_100037004(v5, v6, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "LocalStorage Service write with serverSettings error:%{public}s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  v0[604] = v0[616];
  sub_100044014(&qword_1003F28E8);
  CheckedContinuation.resume(throwing:)();
  unint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1002276E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_100044014(&qword_1003F27D8);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  type metadata accessor for WorkItemQueue.WorkItem();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v9 + v8, (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  swift_retain();
  UUID.init()();
  WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
  dispatch thunk of WorkItemQueue.enqueue(_:)();
  return swift_release();
}

uint64_t sub_1002278BC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return _swift_task_switch(sub_1002278DC, 0, 0);
}

uint64_t sub_1002278DC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100227970;
  return sub_1002383F8();
}

uint64_t sub_100227970(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 56) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_100227B1C;
  }
  else
  {
    *(void *)(v4 + 64) = a1;
    uint64_t v5 = sub_100227A98;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100227A98()
{
  v0[3] = v0[8];
  sub_100044014(&qword_1003F27D8);
  CheckedContinuation.resume(returning:)();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100227B1C()
{
  v0[2] = v0[7];
  sub_100044014(&qword_1003F27D8);
  CheckedContinuation.resume(throwing:)();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100227BA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100227F14(a1, a2, a3, &qword_1003F2828, (uint64_t)&unk_1003E32F8, (uint64_t)&unk_1003F2968, (uint64_t)&unk_1003F2970);
}

uint64_t sub_100227BDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  return _swift_task_switch(sub_100227C00, 0, 0);
}

uint64_t sub_100227C00()
{
  uint64_t v1 = Fence.ID.uuidString.getter();
  uint64_t v3 = v2;
  *(void *)(v0 + 48) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100227CB8;
  return sub_100238D24(v1, v3);
}

uint64_t sub_100227CB8()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100227E48;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_100227DD4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100227DD4()
{
  sub_100044014(&qword_1003F2828);
  CheckedContinuation.resume(returning:)();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100227E48()
{
  uint64_t v1 = v0[8];
  swift_bridgeObjectRelease();
  v0[2] = v1;
  sub_100044014(&qword_1003F2828);
  CheckedContinuation.resume(throwing:)();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_100227ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100227F14(a1, a2, a3, &qword_1003F2990, (uint64_t)&unk_1003E3348, (uint64_t)&unk_1003F29A0, (uint64_t)&unk_1003F29A8);
}

uint64_t sub_100227F14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v28 = a6;
  uint64_t v29 = a7;
  uint64_t v25 = a3;
  uint64_t v26 = a5;
  uint64_t v10 = type metadata accessor for UUID();
  __chkstk_darwin(v10 - 8);
  uint64_t v27 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100044014(a4);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Fence.ID();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for WorkItemQueue.WorkItem();
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v25, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  unint64_t v20 = (*(unsigned __int8 *)(v17 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v21 = (v18 + *(unsigned __int8 *)(v13 + 80) + v20) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(v22 + v20, v19, v16);
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v22 + v21, v15, v12);
  swift_retain();
  UUID.init()();
  WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
  dispatch thunk of WorkItemQueue.enqueue(_:)();
  return swift_release();
}

uint64_t sub_1002281A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[151] = a3;
  v3[150] = a2;
  v3[149] = a1;
  return _swift_task_switch(sub_1002281C8, 0, 0);
}

uint64_t sub_1002281C8()
{
  uint64_t v1 = Fence.ID.uuidString.getter();
  uint64_t v3 = v2;
  *(void *)(v0 + 1216) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 1224) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100228290;
  return sub_100239868(v0 + 16, v1, v3);
}

uint64_t sub_100228290()
{
  *(void *)(*(void *)v1 + 1232) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10022843C;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1002283AC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002283AC()
{
  sub_100013B50(v0 + 16, v0 + 600, &qword_1003F03D0);
  sub_100044014(&qword_1003F2990);
  CheckedContinuation.resume(returning:)();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10022843C()
{
  uint64_t v1 = v0[154];
  swift_bridgeObjectRelease();
  v0[148] = v1;
  sub_100044014(&qword_1003F2990);
  CheckedContinuation.resume(throwing:)();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1002284D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_100044014(&qword_1003F2828);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  type metadata accessor for WorkItemQueue.WorkItem();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v11 + v10, (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  swift_retain();
  swift_bridgeObjectRetain();
  UUID.init()();
  WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
  dispatch thunk of WorkItemQueue.enqueue(_:)();
  return swift_release();
}

uint64_t sub_1002286B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  return _swift_task_switch(sub_1002286D8, 0, 0);
}

uint64_t sub_1002286D8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100228774;
  uint64_t v2 = *(void *)(v0 + 32);
  return sub_10023A5EC(v2);
}

uint64_t sub_100228774()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10022C548;
  }
  else {
    uint64_t v2 = sub_10022C554;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100228888(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_100044014(&qword_1003F2A08);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  type metadata accessor for WorkItemQueue.WorkItem();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v9 + v8, (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  swift_retain();
  UUID.init()();
  WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
  dispatch thunk of WorkItemQueue.enqueue(_:)();
  return swift_release();
}

uint64_t sub_100228A60(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return _swift_task_switch(sub_100228A80, 0, 0);
}

uint64_t sub_100228A80()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100228B14;
  return sub_10023A9FC();
}

uint64_t sub_100228B14(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 56) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_100228CC0;
  }
  else
  {
    *(void *)(v4 + 64) = a1;
    uint64_t v5 = sub_100228C3C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100228C3C()
{
  v0[3] = v0[8];
  sub_100044014(&qword_1003F2A08);
  CheckedContinuation.resume(returning:)();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100228CC0()
{
  v0[2] = v0[7];
  sub_100044014(&qword_1003F2A08);
  CheckedContinuation.resume(throwing:)();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100228D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v27 = a4;
  unint64_t v28 = a5;
  uint64_t v25 = a2;
  uint64_t v7 = type metadata accessor for UUID();
  __chkstk_darwin(v7 - 8);
  uint64_t v26 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100044014(&qword_1003F2828);
  v24[0] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24[1] = type metadata accessor for WorkItemQueue.WorkItem();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a3, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  unint64_t v16 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v17 = (v14 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (*(unsigned __int8 *)(v10 + 80) + v17 + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v25;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v19 + v16, v15, v12);
  unint64_t v20 = (uint64_t *)(v19 + v17);
  uint64_t v22 = v27;
  unint64_t v21 = v28;
  *unint64_t v20 = v27;
  v20[1] = v21;
  (*(void (**)(unint64_t, char *, void))(v10 + 32))(v19 + v18, (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v24[0]);
  swift_retain();
  sub_100022C64(v22, v21);
  UUID.init()();
  WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
  dispatch thunk of WorkItemQueue.enqueue(_:)();
  return swift_release();
}

uint64_t sub_100229024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  return _swift_task_switch(sub_10022904C, 0, 0);
}

uint64_t sub_10022904C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1002290EC;
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[4];
  return sub_10023BBB0(v4, v2, v3);
}

uint64_t sub_1002290EC()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100229200;
  }
  else {
    uint64_t v2 = sub_100009630;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100229200()
{
  v0[2] = v0[9];
  sub_100044014(&qword_1003F2828);
  CheckedContinuation.resume(throwing:)();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100229284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v19 = a2;
  uint64_t v5 = type metadata accessor for UUID();
  __chkstk_darwin(v5 - 8);
  unint64_t v20 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100044014(&qword_1003F2828);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = type metadata accessor for WorkItemQueue.WorkItem();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v15 = (v12 + *(unsigned __int8 *)(v8 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v19;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v16 + v14, v13, v10);
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v16 + v15, (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  swift_retain();
  UUID.init()();
  WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
  dispatch thunk of WorkItemQueue.enqueue(_:)();
  return swift_release();
}

uint64_t sub_100229538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  return _swift_task_switch(sub_10022955C, 0, 0);
}

uint64_t sub_10022955C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100228774;
  uint64_t v2 = *(void *)(v0 + 32);
  return sub_10023C430(v2);
}

uint64_t sub_1002295F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100229D64(a1, a2, a3, &qword_1003F2940, (uint64_t)&unk_1003E32D0, (uint64_t)&unk_1003F2950, (uint64_t)&unk_1003F2958);
}

uint64_t sub_100229634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  sub_100044014(&qword_1003F0D58);
  v3[6] = swift_task_alloc();
  v3[7] = swift_task_alloc();
  return _swift_task_switch(sub_1002296DC, 0, 0);
}

uint64_t sub_1002296DC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10022977C;
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[4];
  return sub_10023CAE8(v2, v3);
}

uint64_t sub_10022977C()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100229940;
  }
  else {
    uint64_t v2 = sub_100229890;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100229890()
{
  uint64_t v1 = v0[7];
  sub_10022B100(v1, v0[6]);
  sub_100044014(&qword_1003F2940);
  CheckedContinuation.resume(returning:)();
  sub_10000A520(v1, &qword_1003F0D58);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_100229940()
{
  v0[2] = v0[9];
  sub_100044014(&qword_1003F2940);
  CheckedContinuation.resume(throwing:)();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1002299D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a3;
  uint64_t v19 = a1;
  uint64_t v4 = type metadata accessor for UUID();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_100044014(&qword_1003F2828);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FenceTriggerRecord();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[1] = type metadata accessor for WorkItemQueue.WorkItem();
  sub_10003D3C8(v18, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FenceTriggerRecord);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v19, v5);
  unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v14 = (v11 + *(unsigned __int8 *)(v6 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  sub_10003E000((uint64_t)v12, v15 + v13, (uint64_t (*)(void))type metadata accessor for FenceTriggerRecord);
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v15 + v14, v8, v5);
  swift_retain();
  UUID.init()();
  WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
  dispatch thunk of WorkItemQueue.enqueue(_:)();
  return swift_release();
}

uint64_t sub_100229C68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  return _swift_task_switch(sub_100229C8C, 0, 0);
}

uint64_t sub_100229C8C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100228774;
  uint64_t v2 = *(void *)(v0 + 32);
  return sub_10023D870(v2);
}

uint64_t sub_100229D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100229D64(a1, a2, a3, &qword_1003F2828, (uint64_t)&unk_1003E3370, (uint64_t)&unk_1003F29B8, (uint64_t)&unk_1003F29C0);
}

uint64_t sub_100229D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v28 = a6;
  uint64_t v29 = a7;
  uint64_t v25 = a3;
  uint64_t v26 = a5;
  uint64_t v10 = type metadata accessor for UUID();
  __chkstk_darwin(v10 - 8);
  uint64_t v27 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100044014(a4);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Fence.ID();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for WorkItemQueue.WorkItem();
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v25, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  unint64_t v20 = (*(unsigned __int8 *)(v17 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v21 = (v18 + *(unsigned __int8 *)(v13 + 80) + v20) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(v22 + v20, v19, v16);
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v22 + v21, v15, v12);
  swift_retain();
  UUID.init()();
  WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
  dispatch thunk of WorkItemQueue.enqueue(_:)();
  return swift_release();
}

uint64_t sub_100229FF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  return _swift_task_switch(sub_10022A014, 0, 0);
}

uint64_t sub_10022A014()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10022A0B0;
  uint64_t v2 = *(void *)(v0 + 32);
  return sub_10023E6C4(v2);
}

uint64_t sub_10022A0B0()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10022A1C4;
  }
  else {
    uint64_t v2 = sub_10022C554;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10022A1C4()
{
  v0[2] = v0[7];
  sub_100044014(&qword_1003F2828);
  CheckedContinuation.resume(throwing:)();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_10022A248()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100052FAC(v0, qword_10040C230);
  sub_100044058(v0, (uint64_t)qword_10040C230);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_10022A2CC()
{
  return sub_10022BFC4(&qword_1003F27D8);
}

uint64_t sub_10022A2D8()
{
  uint64_t v2 = *(void *)(sub_100044014(&qword_1003F27D8) - 8);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_10004A274;
  v5[4] = v3;
  v5[5] = v4;
  return _swift_task_switch(sub_1002278DC, 0, 0);
}

uint64_t sub_10022A3C4(uint64_t a1)
{
  return sub_10001A9F4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10022A3CC()
{
  return sub_100022728(&qword_1003F2800);
}

uint64_t sub_10022A3D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10004415C(a1, a2);
}

uint64_t sub_10022A404(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = a2;
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v4 = *(v3 - 1);
      Swift::Int v5 = *v3;
      swift_bridgeObjectRetain();
      sub_10003B9E4(&v7, v4, v5);
      swift_bridgeObjectRelease();
      v3 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return a2;
}

uint64_t sub_10022A484()
{
  return sub_10022A9C0(&qword_1003F2828, (void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_10022A4B8()
{
  uint64_t v2 = *(void *)(sub_100044014(&qword_1003F2828) - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v0 + 16);
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_10004A274;
  *(void *)(v4 + 40) = v3;
  *(_OWORD *)(v4 + 24) = v5;
  return _swift_task_switch(sub_1002286D8, 0, 0);
}

uint64_t sub_10022A5A8(uint64_t a1)
{
  return sub_100011C4C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_10022A5B4()
{
  uint64_t v1 = sub_100044014(&qword_1003F2828);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 160))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 432))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = (v3 + 456) & ~v3;
  unint64_t v6 = ((v4 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v5, v1);

  return _swift_deallocObject(v0, v6, v3 | 7);
}

uint64_t sub_10022A6F4(uint64_t a1)
{
  return sub_100011FC0(a1, v1[2], v1[3], v1[4], (uint64_t)&unk_1003E31B8, (uint64_t)&unk_1003F2878, (uint64_t)&unk_1003F2880);
}

uint64_t sub_10022A748()
{
  uint64_t v2 = *(void *)(sub_100044014(&qword_1003F2828) - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v0 + 16);
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_10004A274;
  *(void *)(v4 + 64) = v3;
  *(_OWORD *)(v4 + 48) = v5;
  return _swift_task_switch(sub_100226174, 0, 0);
}

uint64_t sub_10022A838(uint64_t a1)
{
  return sub_100011FC0(a1, v1[2], v1[3], v1[4], (uint64_t)&unk_1003E31E0, (uint64_t)&unk_1003F2898, (uint64_t)&unk_1003F28A0);
}

uint64_t sub_10022A88C()
{
  uint64_t v2 = *(void *)(sub_100044014(&qword_1003F2828) - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v0 + 16);
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_10004A274;
  *(void *)(v4 + 64) = v3;
  *(_OWORD *)(v4 + 48) = v5;
  return _swift_task_switch(sub_10022670C, 0, 0);
}

uint64_t sub_10022A97C(uint64_t a1)
{
  return sub_100226CD0(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10022A98C()
{
  return sub_10022A9C0(&qword_1003F2800, (void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_10022A9C0(uint64_t *a1, void (*a2)(void), void (*a3)(void))
{
  uint64_t v6 = sub_100044014(a1);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v8 + 32) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v8 | 7;
  a2(*(void *)(v3 + 16));
  a3(*(void *)(v3 + 24));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3 + v9, v6);

  return _swift_deallocObject(v3, v10, v11);
}

uint64_t sub_10022AAA8@<X0>(uint64_t a1@<X8>)
{
  return sub_10004415C(*(void *)(v1 + 16), a1);
}

uint64_t sub_10022AADC(uint64_t a1)
{
  return sub_100021A04(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10022AAE4()
{
  return sub_100022728(&qword_1003F28E8);
}

uint64_t sub_10022AAF0()
{
  return sub_10022B7C4((uint64_t (*)(void))&type metadata accessor for URL, &qword_1003F2828);
}

uint64_t sub_10022AB10()
{
  uint64_t v2 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(sub_100044014(&qword_1003F2828) - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v8 = v0 + v3;
  uint64_t v9 = v0 + v6;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v10;
  *uint64_t v10 = v1;
  v10[1] = sub_10004A274;
  v10[4] = v8;
  v10[5] = v9;
  v10[3] = v7;
  return _swift_task_switch(sub_10022955C, 0, 0);
}

uint64_t sub_10022AC64()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = sub_100044014(&qword_1003F2828);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8 + 16) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  sub_100044090(*(void *)(v0 + v5), *(void *)(v0 + v5 + 8));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

uint64_t sub_10022ADD8()
{
  uint64_t v2 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(sub_100044014(&qword_1003F2828) - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v8 = v0 + v3;
  uint64_t v9 = v0 + v4;
  uint64_t v10 = *(void *)(v0 + v4);
  uint64_t v11 = *(void *)(v9 + 8);
  uint64_t v12 = v0 + v6;
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v13;
  *uint64_t v13 = v1;
  v13[1] = sub_10004A274;
  v13[6] = v11;
  v13[7] = v12;
  v13[4] = v8;
  v13[5] = v10;
  v13[3] = v7;
  return _swift_task_switch(sub_10022904C, 0, 0);
}

uint64_t sub_10022AF4C(uint64_t a1)
{
  return sub_100229D64(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), &qword_1003F2940, (uint64_t)&unk_1003E32D0, (uint64_t)&unk_1003F2950, (uint64_t)&unk_1003F2958);
}

uint64_t sub_10022AFA0()
{
  return sub_10022B7C4((uint64_t (*)(void))&type metadata accessor for Fence.ID, &qword_1003F2940);
}

uint64_t sub_10022AFC0()
{
  uint64_t v2 = *(void *)(type metadata accessor for Fence.ID() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(sub_100044014(&qword_1003F2940) - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v8 = v0 + v3;
  uint64_t v9 = v0 + v6;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v10;
  *uint64_t v10 = v1;
  v10[1] = sub_10004A274;
  return sub_100229634(v7, v8, v9);
}

uint64_t sub_10022B100(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100044014(&qword_1003F0D58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10022B168()
{
  return sub_10022B7C4((uint64_t (*)(void))&type metadata accessor for Fence.ID, &qword_1003F2828);
}

uint64_t sub_10022B188()
{
  uint64_t v2 = *(void *)(type metadata accessor for Fence.ID() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(sub_100044014(&qword_1003F2828) - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v8 = v0 + v3;
  uint64_t v9 = v0 + v6;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v10;
  *uint64_t v10 = v1;
  v10[1] = sub_10004A274;
  v10[4] = v8;
  v10[5] = v9;
  v10[3] = v7;
  return _swift_task_switch(sub_100227C00, 0, 0);
}

uint64_t sub_10022B2DC()
{
  uint64_t v1 = (int *)(type metadata accessor for FenceTriggerRecord() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = sub_100044014(&qword_1003F2828);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v4 + v7) & ~v7;
  uint64_t v9 = v8 + *(void *)(v6 + 64);
  uint64_t v10 = v2 | v7 | 7;
  swift_release();
  uint64_t v11 = v0 + v3;
  uint64_t v12 = type metadata accessor for Fence.ID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = v11 + v1[7];
  uint64_t v14 = type metadata accessor for Fence.TriggerID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = v11 + v1[8];
  uint64_t v16 = type metadata accessor for Fence.TriggerPosition();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v5);

  return _swift_deallocObject(v0, v9, v10);
}

uint64_t sub_10022B4D8()
{
  uint64_t v2 = *(void *)(type metadata accessor for FenceTriggerRecord() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(sub_100044014(&qword_1003F2828) - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v8 = v0 + v3;
  uint64_t v9 = v0 + v6;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v10;
  *uint64_t v10 = v1;
  v10[1] = sub_10004A274;
  v10[4] = v8;
  v10[5] = v9;
  v10[3] = v7;
  return _swift_task_switch(sub_100229C8C, 0, 0);
}

uint64_t sub_10022B62C()
{
  return sub_10022B7C4((uint64_t (*)(void))&type metadata accessor for Fence.ID, &qword_1003F2990);
}

uint64_t sub_10022B64C()
{
  uint64_t v2 = *(void *)(type metadata accessor for Fence.ID() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(sub_100044014(&qword_1003F2990) - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v8 = v0 + v3;
  uint64_t v9 = v0 + v6;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v10;
  *uint64_t v10 = v1;
  v10[1] = sub_10004A274;
  v10[151] = v9;
  v10[150] = v8;
  v10[149] = v7;
  return _swift_task_switch(sub_1002281C8, 0, 0);
}

uint64_t sub_10022B7A4()
{
  return sub_10022B7C4((uint64_t (*)(void))&type metadata accessor for Fence.ID, &qword_1003F2828);
}

uint64_t sub_10022B7C4(uint64_t (*a1)(void), uint64_t *a2)
{
  uint64_t v4 = a1(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v6 + 24) & ~v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = sub_100044014(a2);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (v7 + v8 + v11) & ~v11;
  uint64_t v13 = v12 + *(void *)(v10 + 64);
  uint64_t v14 = v6 | v11 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2 + v7, v4);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v2 + v12, v9);

  return _swift_deallocObject(v2, v13, v14);
}

uint64_t sub_10022B928()
{
  uint64_t v2 = *(void *)(type metadata accessor for Fence.ID() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(sub_100044014(&qword_1003F2828) - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v8 = v0 + v3;
  uint64_t v9 = v0 + v6;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v10;
  *uint64_t v10 = v1;
  v10[1] = sub_10004A274;
  v10[4] = v8;
  v10[5] = v9;
  v10[3] = v7;
  return _swift_task_switch(sub_10022A014, 0, 0);
}

uint64_t sub_10022BA7C(uint64_t a1)
{
  return sub_100224464(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10022BA88()
{
  uint64_t v1 = (int *)(type metadata accessor for OwnerSharedSecretsRecord() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  unint64_t v4 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = sub_100044014(&qword_1003F2828);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v4 + v7 + 8) & ~v7;
  uint64_t v9 = v2 | v7 | 7;
  unint64_t v10 = ((*(void *)(v6 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v11 = v0 + v3;
  uint64_t v12 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  sub_100044090(*(void *)(v11 + v1[8]), *(void *)(v11 + v1[8] + 8));
  uint64_t v13 = v11 + v1[9];
  uint64_t v14 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v5);

  return _swift_deallocObject(v0, v10, v9);
}

uint64_t sub_10022BC6C()
{
  uint64_t v2 = *(void *)(type metadata accessor for OwnerSharedSecretsRecord() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(sub_100044014(&qword_1003F2828) - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v0 + v4);
  uint64_t v8 = v0 + v6;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v9;
  void *v9 = v1;
  v9[1] = sub_10004A274;
  return sub_100224734(v0 + v3, v7, v8);
}

uint64_t sub_10022BDE8(uint64_t a1)
{
  return sub_100223B84(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10022BDF0()
{
  uint64_t v1 = sub_100044014(&qword_1003F29E8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10022BEA0()
{
  uint64_t v2 = *(void *)(sub_100044014(&qword_1003F29E8) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = v0 + v3;
  uint64_t v5 = *(void *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *unint64_t v6 = v1;
  v6[1] = sub_10004A274;
  return sub_100223D88(v4, v5);
}

uint64_t sub_10022BFB8()
{
  return sub_10022BFC4(&qword_1003F2A08);
}

uint64_t sub_10022BFC4(uint64_t *a1)
{
  uint64_t v2 = sub_100044014(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 24) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return _swift_deallocObject(v1, v6, v7);
}

uint64_t sub_10022C08C()
{
  uint64_t v2 = *(void *)(sub_100044014(&qword_1003F2A08) - 8);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_10004A274;
  v5[4] = v3;
  v5[5] = v4;
  return _swift_task_switch(sub_100228A80, 0, 0);
}

uint64_t sub_10022C178(uint64_t a1)
{
  return sub_100225570(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_10022C184()
{
  uint64_t v17 = type metadata accessor for Handle();
  uint64_t v1 = *(void *)(v17 - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v16 = sub_100044014(&qword_1003F2A30);
  uint64_t v5 = *(void *)(v16 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v4 + v6) & ~v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = type metadata accessor for HandleType();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (v7 + v8 + v11) & ~v11;
  uint64_t v13 = v2 | v11 | v6 | 7;
  unint64_t v14 = ((*(void *)(v10 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + v3, v17);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v7, v16);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v12, v9);

  return _swift_deallocObject(v0, v14, v13);
}

uint64_t sub_10022C370()
{
  uint64_t v2 = *(void *)(type metadata accessor for Handle() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(sub_100044014(&qword_1003F2A30) - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(type metadata accessor for HandleType() - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v0 + 16);
  uint64_t v11 = v0 + v9;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v12;
  *uint64_t v12 = v1;
  v12[1] = sub_10004A274;
  return sub_10022591C(v10, v0 + v3, v0 + v6, v11);
}

uint64_t sub_10022C55C(uint64_t a1)
{
  v2[7] = a1;
  v2[8] = v1;
  sub_100044014(&qword_1003EF6D8);
  v2[9] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Row();
  v2[10] = v3;
  v2[11] = *(void *)(v3 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Table();
  v2[14] = v4;
  v2[15] = *(void *)(v4 - 8);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  return _swift_task_switch(sub_10022C6D4, v1, 0);
}

uint64_t sub_10022C6D4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 64) + 112);
  *(void *)(v0 + 152) = v1;
  return _swift_task_switch(sub_10022C6F8, v1, 0);
}

uint64_t sub_10022C6F8()
{
  sub_100215780();
  *(void *)(v0 + 160) = 0;
  uint64_t v1 = *(void *)(v0 + 152);
  return _swift_task_switch(sub_10022C800, v1, 0);
}

uint64_t sub_10022C800()
{
  uint64_t v1 = *(void *)(v0 + 64);
  type metadata accessor for LocalStorageDatabase();
  sub_100017ACC(&qword_1003F2578, (void (*)(uint64_t))type metadata accessor for LocalStorageDatabase);
  *(void *)(v0 + 168) = Database.readConnection.getter();
  return _swift_task_switch(sub_10022C8C0, v1, 0);
}

uint64_t sub_10022C8C0()
{
  if (v0[21])
  {
    if (qword_1003EC0B0 != -1) {
      swift_once();
    }
    uint64_t v1 = v0[18];
    uint64_t v2 = v0[14];
    uint64_t v3 = v0[15];
    uint64_t v4 = sub_100044058(v2, (uint64_t)qword_10040B870);
    uint64_t v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    v56(v1, v4, v2);
    sub_100044014(&qword_1003EF298);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_100367790;
    if (qword_1003EC0E8 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_100044014(&qword_1003EF240);
    uint64_t v7 = sub_100044058(v6, (uint64_t)qword_10040B930);
    *(void *)(v5 + 56) = v6;
    *(void *)(v5 + 64) = sub_100014FFC(&qword_1003EF2A0, &qword_1003EF240);
    uint64_t v8 = sub_10003E0F4((uint64_t *)(v5 + 32));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(v8, v7, v6);
    if (qword_1003EC108 != -1) {
      swift_once();
    }
    uint64_t v55 = v0 + 2;
    uint64_t v9 = sub_100044014(&qword_1003EF290);
    uint64_t v10 = sub_100044058(v9, (uint64_t)qword_10040B990);
    *(void *)(v5 + 96) = v9;
    *(void *)(v5 + 104) = sub_100014FFC(&qword_1003F2C78, &qword_1003EF290);
    uint64_t v11 = sub_10003E0F4((uint64_t *)(v5 + 72));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v11, v10, v9);
    if (qword_1003EC0F8 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_100044014(&qword_1003EF280);
    uint64_t v13 = sub_100044058(v12, (uint64_t)qword_10040B960);
    *(void *)(v5 + 136) = v12;
    *(void *)(v5 + 144) = sub_100014FFC(&qword_1003F2C80, &qword_1003EF280);
    uint64_t v14 = sub_10003E0F4((uint64_t *)(v5 + 112));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v14, v13, v12);
    if (qword_1003EC100 != -1) {
      swift_once();
    }
    uint64_t v53 = v0[17];
    uint64_t v54 = v0[20];
    uint64_t v15 = v0[15];
    uint64_t v16 = v0[16];
    uint64_t v17 = v0[14];
    uint64_t v18 = sub_100044014(&qword_1003EF1F0);
    uint64_t v19 = sub_100044058(v18, (uint64_t)qword_10040B978);
    *(void *)(v5 + 176) = v18;
    *(void *)(v5 + 184) = sub_100014FFC(&qword_1003F2C88, &qword_1003EF1F0);
    unint64_t v20 = sub_10003E0F4((uint64_t *)(v5 + 152));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v20, v19, v18);
    SchemaType.select(_:)();
    swift_bridgeObjectRelease();
    QueryType.limit(_:)();
    unint64_t v21 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v21(v16, v17);
    v0[5] = v17;
    v0[6] = &protocol witness table for Table;
    uint64_t v22 = sub_10003E0F4(v55);
    v56((uint64_t)v22, v53, v17);
    Connection.prepare(_:)();
    if (!v54)
    {
      sub_1000233E4((uint64_t)v55);
      uint64_t v30 = dispatch thunk of _AnySequenceBox.__copyToContiguousArray()();
      swift_release();
      if (*(void *)(v30 + 16))
      {
        (*(void (**)(void, unint64_t, void))(v0[11] + 16))(v0[9], v30 + ((*(unsigned __int8 *)(v0[11] + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0[11] + 80)), v0[10]);
        uint64_t v31 = 0;
      }
      else
      {
        uint64_t v31 = 1;
      }
      uint64_t v32 = v0[10];
      uint64_t v33 = v0[11];
      uint64_t v34 = v0[9];
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56))(v34, v31, 1, v32);
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v34, 1, v32) == 1)
      {
        uint64_t v35 = v0[17];
        uint64_t v36 = v0[18];
        uint64_t v37 = v0[14];
        uint64_t v38 = v0[9];
        swift_release();
        v21(v35, v37);
        v21(v36, v37);
        sub_10000A520(v38, &qword_1003EF6D8);
        uint64_t v39 = 1;
      }
      else
      {
        uint64_t v40 = v0[12];
        uint64_t v41 = v0[13];
        uint64_t v42 = v0[10];
        uint64_t v43 = v0[11];
        uint64_t v44 = v0[7];
        (*(void (**)(uint64_t, void, uint64_t))(v43 + 32))(v41, v0[9], v42);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v40, v41, v42);
        sub_10023F4E0(v40, v44);
        uint64_t v45 = v0[17];
        uint64_t v46 = v0[18];
        uint64_t v48 = v0[13];
        uint64_t v47 = v0[14];
        uint64_t v49 = v0[10];
        uint64_t v50 = v0[11];
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
        v21(v45, v47);
        v21(v46, v47);
        uint64_t v39 = 0;
      }
      uint64_t v51 = v0[7];
      uint64_t v52 = type metadata accessor for OwnerSharedSecretsRecord();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v51, v39, 1, v52);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v28 = (uint64_t (*)(void))v0[1];
      goto LABEL_16;
    }
    uint64_t v23 = v0[17];
    uint64_t v24 = v0[18];
    uint64_t v25 = v0[14];
    swift_release();
    v21(v23, v25);
    v21(v24, v25);
    sub_1000233E4((uint64_t)v55);
  }
  else
  {
    uint64_t v26 = type metadata accessor for DatabaseError();
    sub_100017ACC(&qword_1003EF6D0, (void (*)(uint64_t))&type metadata accessor for DatabaseError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, enum case for DatabaseError.notConnected(_:), v26);
    swift_willThrow();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v28();
}

uint64_t sub_10022D108(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = type metadata accessor for Insert();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return _swift_task_switch(sub_10022D1C8, v1, 0);
}

uint64_t sub_10022D1C8()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) + 112);
  *(void *)(v0 + 56) = v1;
  return _swift_task_switch(sub_10022D1EC, v1, 0);
}

uint64_t sub_10022D1EC()
{
  sub_100215780();
  *(void *)(v0 + 64) = 0;
  uint64_t v1 = *(void *)(v0 + 56);
  return _swift_task_switch(sub_10022D2A8, v1, 0);
}

uint64_t sub_10022D2A8()
{
  uint64_t v1 = *(void *)(v0 + 24);
  type metadata accessor for LocalStorageDatabase();
  sub_100017ACC(&qword_1003F2578, (void (*)(uint64_t))type metadata accessor for LocalStorageDatabase);
  *(void *)(v0 + 72) = Database.writeConnection.getter();
  return _swift_task_switch(sub_10022D368, v1, 0);
}

uint64_t sub_10022D368()
{
  if (v0[9])
  {
    uint64_t v1 = (void *)swift_task_alloc();
    v0[10] = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_10022D4EC;
    uint64_t v2 = v0[6];
    uint64_t v3 = v0[2];
    return sub_10023F844(v2, v3);
  }
  else
  {
    uint64_t v5 = type metadata accessor for DatabaseError();
    sub_100017ACC(&qword_1003EF6D0, (void (*)(uint64_t))&type metadata accessor for DatabaseError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v5 - 8) + 104))(v6, enum case for DatabaseError.notConnected(_:), v5);
    swift_willThrow();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_10022D4EC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 24);
  swift_task_dealloc();
  return _swift_task_switch(sub_10022D5FC, v1, 0);
}

uint64_t sub_10022D5FC()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = v0[4];
  Connection.run(_:)();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_release();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10022D6B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[11] = a3;
  v4[12] = v3;
  v4[9] = a1;
  v4[10] = a2;
  uint64_t v5 = sub_100044014(&qword_1003EF278);
  v4[13] = v5;
  v4[14] = *(void *)(v5 - 8);
  v4[15] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Table();
  v4[16] = v6;
  v4[17] = *(void *)(v6 - 8);
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  return _swift_task_switch(sub_10022D7E4, 0, 0);
}

uint64_t sub_10022D7E4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 96) + 112);
  *(void *)(v0 + 160) = v1;
  return _swift_task_switch(sub_10022D808, v1, 0);
}

uint64_t sub_10022D808()
{
  sub_100215780();
  *(void *)(v0 + 168) = 0;
  uint64_t v1 = *(void *)(v0 + 160);
  return _swift_task_switch(sub_10022D8D8, v1, 0);
}

uint64_t sub_10022D8D8()
{
  type metadata accessor for LocalStorageDatabase();
  sub_100017ACC(&qword_1003F2578, (void (*)(uint64_t))type metadata accessor for LocalStorageDatabase);
  *(void *)(v0 + 176) = Database.readConnection.getter();
  return _swift_task_switch(sub_10022D98C, 0, 0);
}

uint64_t sub_10022D98C()
{
  if (!*(void *)(v0 + 176))
  {
    uint64_t v14 = type metadata accessor for DatabaseError();
    sub_100017ACC(&qword_1003EF6D0, (void (*)(uint64_t))&type metadata accessor for DatabaseError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v14 - 8) + 104))(v15, enum case for DatabaseError.notConnected(_:), v14);
    swift_willThrow();
    goto LABEL_9;
  }
  if (qword_1003EC0B8 != -1) {
    swift_once();
  }
  uint64_t v23 = (uint64_t *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v4 = sub_100044058(v3, (uint64_t)qword_10040B888);
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v22(v1, v4, v3);
  if (qword_1003EC110 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v19 = *(void *)(v0 + 152);
  uint64_t v7 = *(void *)(v0 + 128);
  uint64_t v6 = *(void *)(v0 + 136);
  uint64_t v8 = *(void *)(v0 + 112);
  uint64_t v9 = *(void *)(v0 + 120);
  uint64_t v20 = *(void *)(v0 + 104);
  uint64_t v21 = *(void *)(v0 + 168);
  uint64_t v10 = sub_100044014(&qword_1003EF230);
  sub_100044058(v10, (uint64_t)qword_10040B9A8);
  *(Swift::String *)(v0 + 56) = String.lowercased()();
  == infix<A>(_:_:)();
  swift_bridgeObjectRelease();
  QueryType.filter(_:)();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v20);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v11(v5, v7);
  *(void *)(v0 + 40) = v7;
  *(void *)(v0 + 48) = &protocol witness table for Table;
  uint64_t v12 = sub_10003E0F4(v23);
  v22((uint64_t)v12, v19, v7);
  sub_10003D9C4();
  uint64_t v13 = *(void *)(v0 + 152);
  if (v21)
  {
    v11(*(void *)(v0 + 152), *(void *)(v0 + 128));
    swift_release();
    sub_1000233E4((uint64_t)v23);
LABEL_9:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_11;
  }
  uint64_t v17 = *(void *)(v0 + 128);
  sub_1000233E4((uint64_t)v23);
  dispatch thunk of _AnySequenceBox._makeIterator()();
  swift_release();
  dispatch thunk of _AnyIteratorBoxBase.next()();
  swift_release();
  swift_release();
  v11(v13, v17);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
LABEL_11:
  return v16();
}

uint64_t sub_10022DD40(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = type metadata accessor for Insert();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for FriendRecord(0);
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Delete();
  v2[12] = v5;
  v2[13] = *(void *)(v5 - 8);
  v2[14] = swift_task_alloc();
  return _swift_task_switch(sub_10022DEB8, v1, 0);
}

uint64_t sub_10022DEB8()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + 112);
  *(void *)(v0 + 120) = v1;
  return _swift_task_switch(sub_10022DEDC, v1, 0);
}

uint64_t sub_10022DEDC()
{
  sub_100215780();
  *(void *)(v0 + 128) = 0;
  uint64_t v1 = *(void *)(v0 + 120);
  return _swift_task_switch(sub_10022DFB0, v1, 0);
}

uint64_t sub_10022DFB0()
{
  uint64_t v1 = *(void *)(v0 + 40);
  type metadata accessor for LocalStorageDatabase();
  sub_100017ACC(&qword_1003F2578, (void (*)(uint64_t))type metadata accessor for LocalStorageDatabase);
  *(void *)(v0 + 136) = Database.writeConnection.getter();
  return _swift_task_switch(sub_10022E070, v1, 0);
}

uint64_t sub_10022E070()
{
  uint64_t v29 = v0;
  if (!*(void *)(v0 + 136))
  {
    uint64_t v6 = type metadata accessor for DatabaseError();
    sub_100017ACC(&qword_1003EF6D0, (void (*)(uint64_t))&type metadata accessor for DatabaseError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v6 - 8) + 104))(v7, enum case for DatabaseError.notConnected(_:), v6);
    swift_willThrow();
    goto LABEL_7;
  }
  if (qword_1003EC0B8 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = type metadata accessor for Table();
  sub_100044058(v2, (uint64_t)qword_10040B888);
  QueryType.delete()();
  Connection.run(_:)();
  if (v1)
  {
    uint64_t v4 = *(void *)(v0 + 104);
    uint64_t v3 = *(void *)(v0 + 112);
    uint64_t v5 = *(void *)(v0 + 96);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
LABEL_7:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
LABEL_8:
    return v8();
  }
  uint64_t v10 = sub_100246D2C(*(void *)(v0 + 32));
  *(void *)(v0 + 144) = v10;
  if (qword_1003EC3F0 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_100044058(v11, (uint64_t)qword_10040C248);
  swift_bridgeObjectRetain_n();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 141558275;
    *(void *)(v0 + 16) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v14 + 12) = 2081;
    swift_bridgeObjectRetain();
    uint64_t v15 = Array.description.getter();
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 24) = sub_100037004(v15, v17, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "LocalStorageSerivice write friendRecords: %{private,mask.hash}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v18 = *(void *)(v10 + 16);
  *(void *)(v0 + 152) = v18;
  if (!v18)
  {
    swift_bridgeObjectRelease();
    uint64_t v26 = *(void *)(v0 + 104);
    uint64_t v25 = *(void *)(v0 + 112);
    uint64_t v27 = *(void *)(v0 + 96);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_8;
  }
  uint64_t v20 = *(void *)(v0 + 80);
  uint64_t v19 = *(void *)(v0 + 88);
  int v21 = *(_DWORD *)(v20 + 80);
  *(_DWORD *)(v0 + 192) = v21;
  *(void *)(v0 + 160) = *(void *)(v20 + 72);
  *(void *)(v0 + 168) = 0;
  sub_100045728(*(void *)(v0 + 144) + ((v21 + 32) & ~(unint64_t)v21), v19, type metadata accessor for FriendRecord);
  uint64_t v22 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v22;
  *uint64_t v22 = v0;
  v22[1] = sub_10022E544;
  uint64_t v23 = *(void *)(v0 + 88);
  uint64_t v24 = *(void *)(v0 + 64);
  return sub_1002435A0(v24, v23);
}

uint64_t sub_10022E544()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 40);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_10022E8F4;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 40);
    uint64_t v4 = sub_10022E66C;
  }
  return _swift_task_switch(v4, v5, 0);
}

uint64_t sub_10022E66C()
{
  uint64_t v1 = *(void *)(v0 + 184);
  Connection.run(_:)();
  if (v1)
  {
    uint64_t v3 = *(void *)(v0 + 104);
    uint64_t v2 = *(void *)(v0 + 112);
    uint64_t v5 = *(void *)(v0 + 88);
    uint64_t v4 = *(void *)(v0 + 96);
    uint64_t v7 = *(void *)(v0 + 56);
    uint64_t v6 = *(void *)(v0 + 64);
    uint64_t v8 = *(void *)(v0 + 48);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    sub_100044BDC(v5, type metadata accessor for FriendRecord);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
LABEL_5:
    return v9();
  }
  uint64_t v10 = *(void *)(v0 + 152);
  uint64_t v11 = *(void *)(v0 + 88);
  uint64_t v12 = *(void *)(v0 + 168) + 1;
  (*(void (**)(void, void))(*(void *)(v0 + 56) + 8))(*(void *)(v0 + 64), *(void *)(v0 + 48));
  sub_100044BDC(v11, type metadata accessor for FriendRecord);
  if (v12 == v10)
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void *)(v0 + 104);
    uint64_t v13 = *(void *)(v0 + 112);
    uint64_t v15 = *(void *)(v0 + 96);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_5;
  }
  uint64_t v17 = *(void *)(v0 + 160);
  uint64_t v18 = *(void *)(v0 + 168) + 1;
  *(void *)(v0 + 168) = v18;
  sub_100045728(*(void *)(v0 + 144)+ ((*(unsigned __int8 *)(v0 + 192) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 192))+ v17 * v18, *(void *)(v0 + 88), type metadata accessor for FriendRecord);
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_10022E544;
  uint64_t v20 = *(void *)(v0 + 88);
  uint64_t v21 = *(void *)(v0 + 64);
  return sub_1002435A0(v21, v20);
}

uint64_t sub_10022E8F4()
{
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v4 = v0[11];
  uint64_t v3 = v0[12];
  swift_release();
  sub_100044BDC(v4, type metadata accessor for FriendRecord);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_10022E9BC(uint64_t a1)
{
  v2[50] = a1;
  v2[51] = v1;
  uint64_t v3 = type metadata accessor for Insert();
  v2[52] = v3;
  v2[53] = *(void *)(v3 - 8);
  v2[54] = swift_task_alloc();
  v2[55] = swift_task_alloc();
  v2[56] = swift_task_alloc();
  v2[57] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Logger();
  v2[58] = v4;
  v2[59] = *(void *)(v4 - 8);
  v2[60] = swift_task_alloc();
  v2[61] = swift_task_alloc();
  uint64_t v5 = sub_100044014(&qword_1003EF230);
  v2[62] = v5;
  v2[63] = *(void *)(v5 - 8);
  v2[64] = swift_task_alloc();
  uint64_t v6 = sub_100044014(&qword_1003EF278);
  v2[65] = v6;
  v2[66] = *(void *)(v6 - 8);
  v2[67] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Delete();
  v2[68] = v7;
  v2[69] = *(void *)(v7 - 8);
  v2[70] = swift_task_alloc();
  v2[71] = swift_task_alloc();
  v2[72] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for HandleType();
  v2[73] = v8;
  v2[74] = *(void *)(v8 - 8);
  v2[75] = swift_task_alloc();
  v2[76] = swift_task_alloc();
  v2[77] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for Handle();
  v2[78] = v9;
  v2[79] = *(void *)(v9 - 8);
  v2[80] = swift_task_alloc();
  v2[81] = swift_task_alloc();
  sub_100044014(&qword_1003F03B8);
  v2[82] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for FriendRecord(0);
  v2[83] = v10;
  v2[84] = *(void *)(v10 - 8);
  v2[85] = swift_task_alloc();
  v2[86] = swift_task_alloc();
  v2[87] = swift_task_alloc();
  v2[88] = swift_task_alloc();
  v2[89] = swift_task_alloc();
  v2[90] = swift_task_alloc();
  v2[91] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for FriendshipAction();
  v2[92] = v11;
  v2[93] = *(void *)(v11 - 8);
  v2[94] = swift_task_alloc();
  v2[95] = swift_task_alloc();
  v2[96] = swift_task_alloc();
  v2[97] = swift_task_alloc();
  v2[98] = swift_task_alloc();
  v2[99] = swift_task_alloc();
  v2[100] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for Friend();
  v2[101] = v12;
  v2[102] = *(void *)(v12 - 8);
  v2[103] = swift_task_alloc();
  v2[104] = swift_task_alloc();
  v2[105] = swift_task_alloc();
  v2[106] = swift_task_alloc();
  v2[107] = swift_task_alloc();
  sub_100044014(&qword_1003EFEA0);
  v2[108] = swift_task_alloc();
  v2[109] = swift_task_alloc();
  uint64_t v13 = type metadata accessor for Table();
  v2[110] = v13;
  v2[111] = *(void *)(v13 - 8);
  v2[112] = swift_task_alloc();
  v2[113] = swift_task_alloc();
  return _swift_task_switch(sub_10022EFE8, v1, 0);
}

uint64_t sub_10022EFE8()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 408) + 112);
  *(void *)(v0 + 912) = v1;
  return _swift_task_switch(sub_10022F00C, v1, 0);
}

uint64_t sub_10022F00C()
{
  sub_100215780();
  uint64_t v1 = *(void *)(v0 + 912);
  return _swift_task_switch(sub_10022F2FC, v1, 0);
}

uint64_t sub_10022F2FC()
{
  uint64_t v1 = *(void *)(v0 + 408);
  type metadata accessor for LocalStorageDatabase();
  sub_100017ACC(&qword_1003F2578, (void (*)(uint64_t))type metadata accessor for LocalStorageDatabase);
  *(void *)(v0 + 920) = Database.writeConnection.getter();
  return _swift_task_switch(sub_10022F3BC, v1, 0);
}

uint64_t sub_10022F3BC()
{
  if (!*(void *)(v0 + 920))
  {
    uint64_t v19 = type metadata accessor for DatabaseError();
    sub_100017ACC(&qword_1003EF6D0, (void (*)(uint64_t))&type metadata accessor for DatabaseError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v19 - 8) + 104))(v20, enum case for DatabaseError.notConnected(_:), v19);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
LABEL_18:
    return v21();
  }
  if (qword_1003EC0B8 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 904);
  uint64_t v2 = *(void *)(v0 + 888);
  uint64_t v3 = *(void *)(v0 + 880);
  uint64_t v4 = *(void *)(v0 + 400);
  uint64_t v5 = sub_100044058(v3, (uint64_t)qword_10040B888);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v5, v3);
  char v6 = *(unsigned char *)(v4 + 32);
  *(unsigned char *)(v0 + 1136) = v6;
  uint64_t v7 = -1;
  uint64_t v8 = -1 << v6;
  if (-(-1 << v6) < 64) {
    uint64_t v7 = ~(-1 << -(char)(-1 << v6));
  }
  unint64_t v9 = v7 & *(void *)(v4 + 64);
  *(_DWORD *)(v0 + 1104) = enum case for HandleType.follower(_:);
  *(_DWORD *)(v0 + 1108) = enum case for HandleType.following(_:);
  *(_DWORD *)(v0 + 1112) = enum case for HandleType.futureFollower(_:);
  *(_DWORD *)(v0 + 1116) = enum case for HandleType.futureFollowing(_:);
  *(_DWORD *)(v0 + 1120) = enum case for HandleType.pendingOffer(_:);
  *(_DWORD *)(v0 + 1124) = enum case for FriendshipAction.remove(_:);
  *(_DWORD *)(v0 + 1128) = enum case for FriendshipAction.add(_:);
  *(_DWORD *)(v0 + 1132) = enum case for FriendshipAction.modify(_:);
  swift_bridgeObjectRetain();
  if (v9)
  {
    uint64_t v10 = 0;
    unint64_t v11 = __clz(__rbit64(v9));
    uint64_t v12 = (v9 - 1) & v9;
    uint64_t v13 = *(void **)(v0 + 400);
LABEL_8:
    uint64_t v14 = *(void *)(v0 + 864);
    uint64_t v15 = *(void *)(v0 + 744);
    uint64_t v16 = *(void *)(v0 + 736);
    (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v0 + 816) + 16))(v14, v13[6] + *(void *)(*(void *)(v0 + 816) + 72) * v11, *(void *)(v0 + 808));
    unint64_t v17 = v13[7] + *(void *)(v15 + 72) * v11;
    uint64_t v18 = sub_100044014(&qword_1003EEBF0);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v15 + 16))(v14 + *(int *)(v18 + 48), v17, v16);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v14, 0, 1, v18);
    goto LABEL_16;
  }
  unint64_t v22 = 63 - v8;
  if ((unint64_t)(63 - v8) <= 0x7F)
  {
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v13 = *(void **)(v0 + 400);
    unint64_t v23 = v13[9];
    if (v23)
    {
      uint64_t v10 = 1;
LABEL_13:
      uint64_t v12 = (v23 - 1) & v23;
      unint64_t v11 = __clz(__rbit64(v23)) + (v10 << 6);
      goto LABEL_8;
    }
    if (v22 < 0xC0)
    {
      uint64_t v10 = 1;
    }
    else
    {
      unint64_t v23 = v13[10];
      if (v23)
      {
        uint64_t v10 = 2;
        goto LABEL_13;
      }
      if (v22 < 0x100)
      {
        uint64_t v10 = 2;
      }
      else
      {
        unint64_t v23 = v13[11];
        if (v23)
        {
          uint64_t v10 = 3;
          goto LABEL_13;
        }
        if (v22 < 0x140)
        {
          uint64_t v10 = 3;
        }
        else
        {
          unint64_t v23 = v13[12];
          if (v23)
          {
            uint64_t v10 = 4;
            goto LABEL_13;
          }
          uint64_t v45 = 0;
          uint64_t v10 = (v22 >> 6) - 1;
          while ((v22 >> 6) - 5 != v45)
          {
            unint64_t v23 = v13[v45++ + 13];
            if (v23)
            {
              uint64_t v10 = v45 + 4;
              goto LABEL_13;
            }
          }
        }
      }
    }
  }
  uint64_t v24 = *(void *)(v0 + 864);
  uint64_t v25 = sub_100044014(&qword_1003EEBF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 1, 1, v25);
  uint64_t v12 = 0;
LABEL_16:
  *(void *)(v0 + 936) = v12;
  *(void *)(v0 + 928) = v10;
  uint64_t v26 = *(void *)(v0 + 872);
  sub_100013B50(*(void *)(v0 + 864), v26, &qword_1003EFEA0);
  uint64_t v27 = sub_100044014(&qword_1003EEBF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v26, 1, v27) == 1)
  {
    uint64_t v28 = *(void *)(v0 + 904);
    uint64_t v29 = *(void *)(v0 + 888);
    uint64_t v30 = *(void *)(v0 + 880);
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_18;
  }
  uint64_t v32 = *(void *)(v0 + 800);
  uint64_t v33 = *(void *)(v0 + 744);
  uint64_t v34 = *(void *)(v0 + 736);
  uint64_t v35 = *(void *)(v0 + 648);
  uint64_t v36 = *(void *)(v0 + 632);
  uint64_t v37 = *(void *)(v0 + 624);
  uint64_t v38 = *(void *)(v0 + 872) + *(int *)(v27 + 48);
  (*(void (**)(void))(*(void *)(v0 + 816) + 32))(*(void *)(v0 + 856));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 32))(v32, v38, v34);
  Friend.handle.getter();
  uint64_t v39 = Handle.identifier.getter();
  uint64_t v41 = v40;
  *(void *)(v0 + 944) = v40;
  uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
  *(void *)(v0 + 952) = v42;
  *(void *)(v0 + 960) = (v36 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v42(v35, v37);
  uint64_t v43 = (void *)swift_task_alloc();
  *(void *)(v0 + 968) = v43;
  *uint64_t v43 = v0;
  v43[1] = sub_10022FDF8;
  uint64_t v44 = *(void *)(v0 + 656);
  return sub_10022D6B0(v44, v39, v41);
}

uint64_t sub_10022FDF8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 976) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 408);
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v4 = sub_100235734;
  }
  else {
    uint64_t v4 = sub_10022FF40;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10022FF40()
{
  uint64_t v280 = v0;
  uint64_t v1 = *(void *)(v0 + 656);
  v278 = (void (*)(uint64_t, uint64_t))(v0 + 384);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 672) + 48))(v1, 1, *(void *)(v0 + 664)) == 1)
  {
    uint64_t v2 = *(unsigned int *)(v0 + 1124);
    uint64_t v3 = *(void *)(v0 + 768);
    uint64_t v4 = *(void *)(v0 + 744);
    uint64_t v5 = *(void *)(v0 + 736);
    sub_10000A520(v1, &qword_1003F03B8);
    v273 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 104);
    v273(v3, v2, v5);
    sub_100017ACC(&qword_1003F0518, (void (*)(uint64_t))&type metadata accessor for FriendshipAction);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    if (*(void *)(v0 + 256) == *(void *)(v0 + 272) && *(void *)(v0 + 264) == *(void *)(v0 + 280)) {
      char v6 = 1;
    }
    else {
      char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    uint64_t v14 = *(void *)(v0 + 768);
    uint64_t v15 = *(void *)(v0 + 744);
    uint64_t v16 = *(void *)(v0 + 736);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v17 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    *(void *)(v0 + 1072) = v17;
    *(void *)(v0 + 1080) = (v15 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v17(v14, v16);
    if (v6)
    {
      if (qword_1003EC3F0 != -1) {
        swift_once();
      }
      sub_100044058(*(void *)(v0 + 464), (uint64_t)qword_10040C248);
      uint64_t v18 = Logger.logObject.getter();
      os_log_type_t v19 = static os_log_type_t.error.getter();
      BOOL v20 = os_log_type_enabled(v18, v19);
      uint64_t v21 = *(void *)(v0 + 856);
      uint64_t v22 = *(void *)(v0 + 816);
      uint64_t v23 = *(void *)(v0 + 808);
      uint64_t v24 = *(void *)(v0 + 800);
      uint64_t v25 = *(void *)(v0 + 736);
      if (v20)
      {
        v278 = v17;
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v26 = 0;
        uint64_t v27 = "Local storage try to remove friend record that not exist";
LABEL_13:
        _os_log_impl((void *)&_mh_execute_header, v18, v19, v27, v26, 2u);
        swift_slowDealloc();

        v278(v24, v25);
LABEL_79:
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
        goto LABEL_80;
      }
      goto LABEL_78;
    }
    v273(*(void *)(v0 + 760), *(unsigned int *)(v0 + 1128), *(void *)(v0 + 736));
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    uint64_t v28 = *(void *)(v0 + 760);
    uint64_t v29 = *(void *)(v0 + 736);
    if (*(void *)(v0 + 288) == *(void *)(v0 + 304) && *(void *)(v0 + 296) == *(void *)(v0 + 312))
    {
      swift_bridgeObjectRelease_n();
      v17(v28, v29);
    }
    else
    {
      char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v17(v28, v29);
      if ((v30 & 1) == 0)
      {
        v273(*(void *)(v0 + 752), *(unsigned int *)(v0 + 1132), *(void *)(v0 + 736));
        dispatch thunk of RawRepresentable.rawValue.getter();
        dispatch thunk of RawRepresentable.rawValue.getter();
        uint64_t v45 = *(void *)(v0 + 752);
        uint64_t v46 = *(void *)(v0 + 736);
        if (*(void *)(v0 + 112) == *(void *)(v0 + 128) && *(void *)(v0 + 120) == *(void *)(v0 + 136))
        {
          swift_bridgeObjectRelease_n();
          v17(v45, v46);
        }
        else
        {
          char v173 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v17(v45, v46);
          if ((v173 & 1) == 0)
          {
            uint64_t v236 = *(void *)(v0 + 856);
            uint64_t v237 = *(void *)(v0 + 816);
            uint64_t v238 = *(void *)(v0 + 808);
            v17(*(void *)(v0 + 800), *(void *)(v0 + 736));
            (*(void (**)(uint64_t, uint64_t))(v237 + 8))(v236, v238);
            goto LABEL_80;
          }
        }
        if (qword_1003EC3F0 != -1) {
          swift_once();
        }
        sub_100044058(*(void *)(v0 + 464), (uint64_t)qword_10040C248);
        uint64_t v18 = Logger.logObject.getter();
        os_log_type_t v19 = static os_log_type_t.error.getter();
        BOOL v174 = os_log_type_enabled(v18, v19);
        uint64_t v21 = *(void *)(v0 + 856);
        uint64_t v22 = *(void *)(v0 + 816);
        uint64_t v23 = *(void *)(v0 + 808);
        uint64_t v24 = *(void *)(v0 + 800);
        uint64_t v25 = *(void *)(v0 + 736);
        if (v174)
        {
          v278 = v17;
          uint64_t v26 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v26 = 0;
          uint64_t v27 = "Local storage try to modified friend record that not exist";
          goto LABEL_13;
        }
LABEL_78:

        v17(v24, v25);
        goto LABEL_79;
      }
    }
    uint64_t v31 = *(void *)(v0 + 824);
    uint64_t v32 = *(Swift::String **)(v0 + 688);
    (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 816) + 16))(v31, *(void *)(v0 + 856), *(void *)(v0 + 808));
    sub_1000D7270(v31, v32);
    if (qword_1003EC3F0 != -1) {
      swift_once();
    }
    uint64_t v33 = *(void *)(v0 + 688);
    uint64_t v34 = *(void *)(v0 + 680);
    sub_100044058(*(void *)(v0 + 464), (uint64_t)qword_10040C248);
    sub_100045728(v33, v34, type metadata accessor for FriendRecord);
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = *(void *)(v0 + 720);
      uint64_t v38 = *(void *)(v0 + 680);
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      v279[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v39 = 136315138;
      sub_100045728(v38, v37, type metadata accessor for FriendRecord);
      uint64_t v40 = String.init<A>(describing:)();
      *(void *)(v0 + 384) = sub_100037004(v40, v41, v279);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100044BDC(v38, type metadata accessor for FriendRecord);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "LocalStorage add a new record: %s", v39, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100044BDC(*(void *)(v0 + 680), type metadata accessor for FriendRecord);
    }

    uint64_t v42 = (void *)swift_task_alloc();
    *(void *)(v0 + 1088) = v42;
    *uint64_t v42 = v0;
    v42[1] = sub_1002348E8;
    uint64_t v43 = *(void *)(v0 + 688);
    uint64_t v44 = *(void *)(v0 + 432);
    goto LABEL_109;
  }
  int v7 = *(_DWORD *)(v0 + 1104);
  uint64_t v8 = *(void *)(v0 + 616);
  uint64_t v9 = *(void *)(v0 + 608);
  uint64_t v10 = *(void *)(v0 + 592);
  uint64_t v11 = *(void *)(v0 + 584);
  sub_10003E068(v1, *(void *)(v0 + 728), type metadata accessor for FriendRecord);
  Friend.type.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v9, v8, v11);
  int v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 88))(v9, v11);
  if (v12 == v7)
  {
    uint64_t v13 = 2;
  }
  else if (v12 == *(_DWORD *)(v0 + 1108))
  {
    uint64_t v13 = 4;
  }
  else if (v12 == *(_DWORD *)(v0 + 1112))
  {
    uint64_t v13 = 8;
  }
  else if (v12 == *(_DWORD *)(v0 + 1116))
  {
    uint64_t v13 = 16;
  }
  else
  {
    if (v12 != *(_DWORD *)(v0 + 1120)) {
      return _assertionFailure(_:_:file:line:flags:)();
    }
    uint64_t v13 = 32;
  }
  uint64_t v268 = v13;
  uint64_t v47 = *(unsigned int *)(v0 + 1124);
  uint64_t v48 = *(void *)(v0 + 792);
  uint64_t v49 = *(void *)(v0 + 744);
  uint64_t v50 = *(void *)(v0 + 736);
  v271 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 592) + 8);
  v271(*(void *)(v0 + 616), *(void *)(v0 + 584));
  uint64_t v51 = *(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 104);
  v51(v48, v47, v50);
  sub_100017ACC(&qword_1003F0518, (void (*)(uint64_t))&type metadata accessor for FriendshipAction);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  if (*(void *)(v0 + 160) == *(void *)(v0 + 176) && *(void *)(v0 + 168) == *(void *)(v0 + 184)) {
    char v52 = 1;
  }
  else {
    char v52 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  uint64_t v53 = *(void *)(v0 + 792);
  uint64_t v54 = *(void *)(v0 + 744);
  uint64_t v55 = *(void *)(v0 + 736);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 8);
  *(void *)(v0 + 984) = v56;
  *(void *)(v0 + 992) = (v54 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v273 = v56;
  ((void (*)(uint64_t, uint64_t))v56)(v53, v55);
  if (v52)
  {
    uint64_t v57 = *(void *)(v0 + 728);
    uint64_t v58 = *(void *)(v0 + 664);
    swift_beginAccess();
    uint64_t v59 = *(int *)(v58 + 140);
    uint64_t v60 = *(void *)(v57 + v59);
    if ((v60 & v268) != 0) {
      *(void *)(v57 + v59) = v60 & ~v268;
    }
    uint64_t v61 = *(void (**)(uint64_t, uint64_t))(v0 + 976);
    uint64_t v62 = *(void *)(v0 + 856);
    uint64_t v63 = *(void *)(v0 + 728);
    uint64_t v64 = *(void *)(v0 + 664);
    uint64_t v65 = *(int *)(v64 + 136);
    uint64_t v66 = *(void *)(v63 + v65);
    uint64_t v67 = swift_task_alloc();
    *(void *)(v67 + 16) = v62;
    swift_bridgeObjectRetain();
    uint64_t v68 = sub_100245F28((uint64_t)sub_1002475EC, v67, v66);
    swift_task_dealloc();
    *(void *)(v63 + v65) = v68;
    swift_endAccess();
    swift_bridgeObjectRelease();
    if (!*(void *)(v63 + *(int *)(v64 + 140)))
    {
      v278 = v61;
      if (qword_1003EC110 == -1) {
        goto LABEL_56;
      }
      goto LABEL_125;
    }
    if (qword_1003EC3F0 != -1) {
      swift_once();
    }
    uint64_t v69 = *(void *)(v0 + 856);
    uint64_t v70 = *(void *)(v0 + 848);
    uint64_t v71 = *(void *)(v0 + 816);
    uint64_t v72 = *(void *)(v0 + 808);
    uint64_t v73 = *(void *)(v0 + 488);
    uint64_t v74 = *(void *)(v0 + 464);
    uint64_t v75 = *(void *)(v0 + 472);
    uint64_t v76 = sub_100044058(v74, (uint64_t)qword_10040C248);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 16))(v73, v76, v74);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 16))(v70, v69, v72);
    uint64_t v77 = Logger.logObject.getter();
    os_log_type_t v78 = static os_log_type_t.default.getter();
    BOOL v79 = os_log_type_enabled(v77, v78);
    uint64_t v80 = *(void *)(v0 + 848);
    uint64_t v81 = *(void *)(v0 + 816);
    if (v79)
    {
      os_log_type_t v260 = v78;
      uint64_t v82 = *(void *)(v0 + 728);
      uint64_t v83 = *(void *)(v0 + 720);
      uint64_t v84 = *(void *)(v0 + 600);
      uint64_t v253 = *(void *)(v0 + 584);
      uint64_t v255 = *(void *)(v0 + 808);
      uint64_t v269 = *(void *)(v0 + 472);
      uint64_t v274 = *(void *)(v0 + 464);
      uint64_t v276 = *(void *)(v0 + 488);
      uint64_t v85 = swift_slowAlloc();
      v279[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v85 = 136315394;
      sub_100045728(v82, v83, type metadata accessor for FriendRecord);
      uint64_t v86 = String.init<A>(describing:)();
      *(void *)(v0 + 368) = sub_100037004(v86, v87, v279);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v85 + 12) = 2080;
      Friend.type.getter();
      sub_100017ACC(&qword_1003EFEB0, (void (*)(uint64_t))&type metadata accessor for HandleType);
      uint64_t v88 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v90 = v89;
      v271(v84, v253);
      *(void *)(v0 + 376) = sub_100037004(v88, v90, v279);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v91 = *(void (**)(uint64_t, uint64_t))(v81 + 8);
      v91(v80, v255);
      _os_log_impl((void *)&_mh_execute_header, v77, v260, "LocalStorage update a record: %s by removing type: %s", (uint8_t *)v85, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v269 + 8))(v276, v274);
    }
    else
    {
      uint64_t v154 = *(void *)(v0 + 488);
      uint64_t v155 = *(void *)(v0 + 464);
      uint64_t v156 = *(void *)(v0 + 472);
      v91 = *(void (**)(uint64_t, uint64_t))(v81 + 8);
      v91(*(void *)(v0 + 848), *(void *)(v0 + 808));

      (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v154, v155);
    }
    *(void *)(v0 + 1000) = v91;
    sub_100045728(*(void *)(v0 + 728), *(void *)(v0 + 712), type metadata accessor for FriendRecord);
    v157 = (void *)swift_task_alloc();
    *(void *)(v0 + 1008) = v157;
    void *v157 = v0;
    v157[1] = sub_100232710;
    uint64_t v43 = *(void *)(v0 + 712);
    uint64_t v44 = *(void *)(v0 + 456);
    goto LABEL_109;
  }
  v51(*(void *)(v0 + 784), *(unsigned int *)(v0 + 1128), *(void *)(v0 + 736));
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  uint64_t v92 = *(void *)(v0 + 784);
  uint64_t v93 = *(void *)(v0 + 736);
  if (*(void *)(v0 + 192) == *(void *)(v0 + 208) && *(void *)(v0 + 200) == *(void *)(v0 + 216))
  {
    swift_bridgeObjectRelease_n();
    ((void (*)(uint64_t, uint64_t))v273)(v92, v93);
LABEL_51:
    if (qword_1003EC3F0 != -1) {
      swift_once();
    }
    uint64_t v95 = *(void *)(v0 + 856);
    uint64_t v96 = *(void *)(v0 + 840);
    uint64_t v97 = *(void *)(v0 + 816);
    uint64_t v98 = *(void *)(v0 + 808);
    uint64_t v100 = *(void *)(v0 + 472);
    uint64_t v99 = *(void *)(v0 + 480);
    sub_100044058(*(void *)(v0 + 464), (uint64_t)qword_10040C248);
    (*(void (**)(uint64_t))(v100 + 16))(v99);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v97 + 16))(v96, v95, v98);
    v101 = Logger.logObject.getter();
    os_log_type_t v102 = static os_log_type_t.default.getter();
    BOOL v103 = os_log_type_enabled(v101, v102);
    uint64_t v104 = *(void *)(v0 + 816);
    if (v103)
    {
      os_log_type_t type = v102;
      uint64_t v105 = *(void *)(v0 + 728);
      uint64_t v106 = *(void *)(v0 + 720);
      uint64_t v107 = *(void *)(v0 + 600);
      uint64_t v244 = *(void *)(v0 + 840);
      uint64_t v245 = *(void *)(v0 + 584);
      uint64_t v264 = *(void *)(v0 + 480);
      uint64_t v254 = *(void *)(v0 + 472);
      uint64_t v256 = *(void *)(v0 + 464);
      uint64_t v247 = *(void *)(v0 + 808);
      uint64_t v108 = swift_slowAlloc();
      v279[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v108 = 136315394;
      swift_beginAccess();
      sub_100045728(v105, v106, type metadata accessor for FriendRecord);
      uint64_t v109 = String.init<A>(describing:)();
      *(void *)(v0 + 344) = sub_100037004(v109, v110, v279);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v108 + 12) = 2080;
      Friend.type.getter();
      sub_100017ACC(&qword_1003EFEB0, (void (*)(uint64_t))&type metadata accessor for HandleType);
      uint64_t v111 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v113 = v112;
      uint64_t v114 = v107;
      v115 = v271;
      v271(v114, v245);
      *(void *)(v0 + 352) = sub_100037004(v111, v113, v279);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v116 = *(void (**)(uint64_t, uint64_t))(v104 + 8);
      v116(v244, v247);
      _os_log_impl((void *)&_mh_execute_header, v101, type, "LocalStorage update a record: %s by adding type: %s", (uint8_t *)v108, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v254 + 8))(v264, v256);
    }
    else
    {
      uint64_t v141 = *(void *)(v0 + 472);
      uint64_t v140 = *(void *)(v0 + 480);
      uint64_t v142 = *(void *)(v0 + 464);
      v116 = *(void (**)(uint64_t, uint64_t))(v104 + 8);
      v116(*(void *)(v0 + 840), *(void *)(v0 + 808));

      (*(void (**)(uint64_t, uint64_t))(v141 + 8))(v140, v142);
      v115 = v271;
    }
    *(void *)(v0 + 1024) = v116;
    v143 = *(char **)(v0 + 856);
    uint64_t v144 = *(void *)(v0 + 600);
    uint64_t v145 = *(void *)(v0 + 584);
    Friend.type.getter();
    swift_beginAccess();
    sub_1000D8790(v143, v144);
    swift_endAccess();
    v115(v144, v145);
    v146 = Logger.logObject.getter();
    os_log_type_t v147 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v146, v147))
    {
      v148 = (uint8_t *)swift_slowAlloc();
      uint64_t v149 = swift_slowAlloc();
      *(_DWORD *)v148 = 136315138;
      v279[0] = v149;
      type metadata accessor for FriendInfoOption(0);
      sub_100017ACC(&qword_1003F2820, (void (*)(uint64_t))type metadata accessor for FriendInfoOption);
      swift_bridgeObjectRetain();
      uint64_t v150 = Set.description.getter();
      unint64_t v152 = v151;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 328) = sub_100037004(v150, v152, v279);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v146, v147, "LocalStorage record info : %s", v148, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_100045728(*(void *)(v0 + 728), *(void *)(v0 + 704), type metadata accessor for FriendRecord);
    v153 = (void *)swift_task_alloc();
    *(void *)(v0 + 1032) = v153;
    void *v153 = v0;
    v153[1] = sub_100233258;
    uint64_t v43 = *(void *)(v0 + 704);
    uint64_t v44 = *(void *)(v0 + 448);
LABEL_109:
    return sub_1002435A0(v44, v43);
  }
  char v94 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  ((void (*)(uint64_t, uint64_t))v273)(v92, v93);
  if (v94) {
    goto LABEL_51;
  }
  v51(*(void *)(v0 + 776), *(unsigned int *)(v0 + 1132), *(void *)(v0 + 736));
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  uint64_t v158 = *(void *)(v0 + 776);
  uint64_t v159 = *(void *)(v0 + 736);
  if (*(void *)(v0 + 224) == *(void *)(v0 + 240) && *(void *)(v0 + 232) == *(void *)(v0 + 248))
  {
    swift_bridgeObjectRelease_n();
    ((void (*)(uint64_t, uint64_t))v273)(v158, v159);
LABEL_98:
    if (qword_1003EC3F0 != -1) {
      swift_once();
    }
    uint64_t v212 = *(void *)(v0 + 856);
    uint64_t v213 = *(void *)(v0 + 832);
    uint64_t v214 = *(void *)(v0 + 816);
    uint64_t v215 = *(void *)(v0 + 808);
    sub_100044058(*(void *)(v0 + 464), (uint64_t)qword_10040C248);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v214 + 16))(v213, v212, v215);
    v216 = Logger.logObject.getter();
    os_log_type_t v217 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v216, v217))
    {
      v250 = *(void (**)(uint64_t, uint64_t))(v0 + 952);
      uint64_t v246 = *(void *)(v0 + 832);
      uint64_t v218 = *(void *)(v0 + 816);
      uint64_t v275 = *(void *)(v0 + 808);
      uint64_t v219 = *(void *)(v0 + 640);
      uint64_t v248 = *(void *)(v0 + 624);
      uint64_t v220 = swift_slowAlloc();
      v279[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v220 = 141558275;
      *(void *)(v0 + 336) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v220 + 12) = 2081;
      Friend.handle.getter();
      uint64_t v221 = Handle.identifier.getter();
      unint64_t v223 = v222;
      v250(v219, v248);
      *(void *)(v0 + 320) = sub_100037004(v221, v223, v279);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v224 = *(void (**)(uint64_t, uint64_t))(v218 + 8);
      v224(v246, v275);
      _os_log_impl((void *)&_mh_execute_header, v216, v217, "Local storage modify friend %{private,mask.hash}s", (uint8_t *)v220, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      v224 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 816) + 8);
      v224(*(void *)(v0 + 832), *(void *)(v0 + 808));
    }

    *(void *)(v0 + 1048) = v224;
    v225 = *(char **)(v0 + 856);
    uint64_t v226 = *(void *)(v0 + 600);
    uint64_t v227 = *(void *)(v0 + 584);
    Friend.type.getter();
    swift_beginAccess();
    sub_1000D8790(v225, v226);
    swift_endAccess();
    v271(v226, v227);
    v228 = Logger.logObject.getter();
    os_log_type_t v229 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v228, v229))
    {
      v230 = (uint8_t *)swift_slowAlloc();
      uint64_t v231 = swift_slowAlloc();
      *(_DWORD *)v230 = 136315138;
      v279[0] = v231;
      type metadata accessor for FriendInfoOption(0);
      sub_100017ACC(&qword_1003F2820, (void (*)(uint64_t))type metadata accessor for FriendInfoOption);
      swift_bridgeObjectRetain();
      uint64_t v232 = Set.description.getter();
      unint64_t v234 = v233;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 360) = sub_100037004(v232, v234, v279);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v228, v229, "LocalStorage record info : %s", v230, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_100045728(*(void *)(v0 + 728), *(void *)(v0 + 696), type metadata accessor for FriendRecord);
    v235 = (void *)swift_task_alloc();
    *(void *)(v0 + 1056) = v235;
    void *v235 = v0;
    v235[1] = sub_100233DA0;
    uint64_t v43 = *(void *)(v0 + 696);
    uint64_t v44 = *(void *)(v0 + 440);
    goto LABEL_109;
  }
  char v211 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  ((void (*)(uint64_t, uint64_t))v273)(v158, v159);
  if (v211) {
    goto LABEL_98;
  }
  uint64_t v239 = *(void *)(v0 + 856);
  uint64_t v240 = *(void *)(v0 + 816);
  uint64_t v241 = *(void *)(v0 + 808);
  uint64_t v242 = *(void *)(v0 + 728);
  ((void (*)(void, void))v273)(*(void *)(v0 + 800), *(void *)(v0 + 736));
  (*(void (**)(uint64_t, uint64_t))(v240 + 8))(v239, v241);
  sub_100044BDC(v242, type metadata accessor for FriendRecord);
  while (1)
  {
LABEL_80:
    unint64_t v175 = *(void *)(v0 + 936);
    int64_t v176 = *(void *)(v0 + 928);
    if (v175)
    {
      uint64_t v177 = (v175 - 1) & v175;
      unint64_t v178 = __clz(__rbit64(v175)) | (v176 << 6);
      uint64_t v179 = *(void *)(v0 + 400);
      goto LABEL_82;
    }
    int64_t v186 = v176 + 1;
    if (!__OFADD__(v176, 1)) {
      break;
    }
    __break(1u);
LABEL_125:
    swift_once();
LABEL_56:
    typea = *(void (**)(uint64_t, uint64_t))(v0 + 952);
    uint64_t v117 = *(void *)(v0 + 888);
    uint64_t v258 = *(void *)(v0 + 880);
    uint64_t v261 = *(void *)(v0 + 896);
    uint64_t v118 = *(void *)(v0 + 640);
    uint64_t v249 = *(void *)(v0 + 624);
    uint64_t v119 = *(void *)(v0 + 536);
    uint64_t v257 = *(void *)(v0 + 528);
    uint64_t v265 = *(void *)(v0 + 520);
    uint64_t v120 = *(void *)(v0 + 504);
    uint64_t v121 = *(void *)(v0 + 512);
    uint64_t v122 = *(void *)(v0 + 496);
    uint64_t v123 = sub_100044058(v122, (uint64_t)qword_10040B9A8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v120 + 16))(v121, v123, v122);
    Friend.handle.getter();
    Handle.identifier.getter();
    typea(v118, v249);
    Swift::String v124 = String.lowercased()();
    swift_bridgeObjectRelease();
    *(Swift::String *)(v0 + 144) = v124;
    == infix<A>(_:_:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v121, v122);
    QueryType.filter(_:)();
    (*(void (**)(uint64_t, uint64_t))(v257 + 8))(v119, v265);
    QueryType.delete()();
    v272 = *(void (**)(uint64_t, uint64_t))(v117 + 8);
    v272(v261, v258);
    if (qword_1003EC3F0 != -1) {
      swift_once();
    }
    uint64_t v125 = *(void *)(v0 + 576);
    uint64_t v126 = *(void *)(v0 + 568);
    uint64_t v127 = *(void *)(v0 + 552);
    uint64_t v128 = *(void *)(v0 + 544);
    sub_100044058(*(void *)(v0 + 464), (uint64_t)qword_10040C248);
    v129 = *(void (**)(uint64_t, uint64_t, uint64_t))(v127 + 16);
    v129(v126, v125, v128);
    v130 = Logger.logObject.getter();
    os_log_type_t v131 = static os_log_type_t.default.getter();
    BOOL v132 = os_log_type_enabled(v130, v131);
    uint64_t v133 = *(void *)(v0 + 568);
    if (v132)
    {
      uint64_t v134 = *(void *)(v0 + 560);
      uint64_t v262 = *(void *)(v0 + 552);
      uint64_t v135 = *(void *)(v0 + 544);
      v266 = v130;
      v136 = (uint8_t *)swift_slowAlloc();
      v279[0] = swift_slowAlloc();
      *(_DWORD *)v136 = 136315138;
      v129(v134, v133, v135);
      uint64_t v137 = String.init<A>(describing:)();
      *(void *)(v0 + 392) = sub_100037004(v137, v138, v279);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v139 = *(void (**)(uint64_t, uint64_t))(v262 + 8);
      v139(v133, v135);
      _os_log_impl((void *)&_mh_execute_header, v266, v131, "LocalStorage delete a record: %s", v136, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      v139 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 552) + 8);
      v139(*(void *)(v0 + 568), *(void *)(v0 + 544));
    }
    Connection.run(_:)();
    if (v278)
    {
      uint64_t v277 = *(void *)(v0 + 904);
      v160 = v139;
      uint64_t v161 = *(void *)(v0 + 816);
      uint64_t v259 = *(void *)(v0 + 808);
      uint64_t v263 = *(void *)(v0 + 856);
      uint64_t v162 = *(void *)(v0 + 800);
      uint64_t v163 = *(void *)(v0 + 736);
      uint64_t v267 = *(void *)(v0 + 728);
      uint64_t v270 = *(void *)(v0 + 880);
      uint64_t v164 = *(void *)(v0 + 576);
      uint64_t v165 = *(void *)(v0 + 544);
      swift_release();
      v160(v164, v165);
      ((void (*)(uint64_t, uint64_t))v273)(v162, v163);
      (*(void (**)(uint64_t, uint64_t))(v161 + 8))(v263, v259);
      swift_release();
      v272(v277, v270);
      sub_100044BDC(v267, type metadata accessor for FriendRecord);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      v166 = *(uint64_t (**)(void))(v0 + 8);
LABEL_91:
      return v166();
    }
    uint64_t v167 = *(void *)(v0 + 856);
    uint64_t v168 = *(void *)(v0 + 816);
    uint64_t v169 = *(void *)(v0 + 808);
    uint64_t v170 = *(void *)(v0 + 800);
    uint64_t v171 = *(void *)(v0 + 736);
    uint64_t v172 = *(void *)(v0 + 728);
    v139(*(void *)(v0 + 576), *(void *)(v0 + 544));
    ((void (*)(uint64_t, uint64_t))v273)(v170, v171);
    (*(void (**)(uint64_t, uint64_t))(v168 + 8))(v167, v169);
    sub_100044BDC(v172, type metadata accessor for FriendRecord);
  }
  int64_t v187 = (unint64_t)((1 << *(unsigned char *)(v0 + 1136)) + 63) >> 6;
  if (v186 >= v187)
  {
    int64_t v185 = *(void *)(v0 + 928);
  }
  else
  {
    uint64_t v179 = *(void *)(v0 + 400);
    uint64_t v188 = v179 + 64;
    unint64_t v189 = *(void *)(v179 + 64 + 8 * v186);
    if (v189) {
      goto LABEL_86;
    }
    int64_t v185 = v176 + 1;
    if (v176 + 2 < v187)
    {
      unint64_t v189 = *(void *)(v188 + 8 * (v176 + 2));
      if (v189)
      {
        int64_t v186 = v176 + 2;
        goto LABEL_86;
      }
      int64_t v185 = v176 + 2;
      if (v176 + 3 < v187)
      {
        unint64_t v189 = *(void *)(v188 + 8 * (v176 + 3));
        if (v189)
        {
          int64_t v186 = v176 + 3;
          goto LABEL_86;
        }
        int64_t v186 = v176 + 4;
        int64_t v185 = v176 + 3;
        if (v176 + 4 < v187)
        {
          unint64_t v189 = *(void *)(v188 + 8 * v186);
          if (!v189)
          {
            int64_t v185 = v187 - 1;
            int64_t v243 = v187 - 5;
            while (v243 != v176)
            {
              unint64_t v189 = *(void *)(v179 + 104 + 8 * v176++);
              if (v189)
              {
                int64_t v186 = v176 + 4;
                goto LABEL_86;
              }
            }
            goto LABEL_88;
          }
LABEL_86:
          uint64_t v177 = (v189 - 1) & v189;
          unint64_t v178 = __clz(__rbit64(v189)) + (v186 << 6);
          int64_t v176 = v186;
LABEL_82:
          uint64_t v180 = *(void *)(v0 + 864);
          uint64_t v181 = *(void *)(v0 + 744);
          uint64_t v182 = *(void *)(v0 + 736);
          (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v0 + 816) + 16))(v180, *(void *)(v179 + 48) + *(void *)(*(void *)(v0 + 816) + 72) * v178, *(void *)(v0 + 808));
          unint64_t v183 = *(void *)(v179 + 56) + *(void *)(v181 + 72) * v178;
          uint64_t v184 = sub_100044014(&qword_1003EEBF0);
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v181 + 16))(v180 + *(int *)(v184 + 48), v183, v182);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v184 - 8) + 56))(v180, 0, 1, v184);
          int64_t v185 = v176;
          goto LABEL_89;
        }
      }
    }
  }
LABEL_88:
  uint64_t v190 = *(void *)(v0 + 864);
  uint64_t v191 = sub_100044014(&qword_1003EEBF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v191 - 8) + 56))(v190, 1, 1, v191);
  uint64_t v177 = 0;
LABEL_89:
  *(void *)(v0 + 936) = v177;
  *(void *)(v0 + 928) = v185;
  uint64_t v192 = *(void *)(v0 + 872);
  sub_100013B50(*(void *)(v0 + 864), v192, &qword_1003EFEA0);
  uint64_t v193 = sub_100044014(&qword_1003EEBF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v193 - 8) + 48))(v192, 1, v193) == 1)
  {
    uint64_t v194 = *(void *)(v0 + 904);
    uint64_t v195 = *(void *)(v0 + 888);
    uint64_t v196 = *(void *)(v0 + 880);
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v195 + 8))(v194, v196);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v166 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_91;
  }
  uint64_t v198 = *(void *)(v0 + 800);
  uint64_t v199 = *(void *)(v0 + 744);
  uint64_t v200 = *(void *)(v0 + 736);
  uint64_t v201 = *(void *)(v0 + 648);
  uint64_t v202 = *(void *)(v0 + 632);
  uint64_t v203 = *(void *)(v0 + 624);
  uint64_t v204 = *(void *)(v0 + 872) + *(int *)(v193 + 48);
  (*(void (**)(void))(*(void *)(v0 + 816) + 32))(*(void *)(v0 + 856));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v199 + 32))(v198, v204, v200);
  Friend.handle.getter();
  uint64_t v205 = Handle.identifier.getter();
  uint64_t v207 = v206;
  *(void *)(v0 + 944) = v206;
  v208 = *(void (**)(uint64_t, uint64_t))(v202 + 8);
  *(void *)(v0 + 952) = v208;
  *(void *)(v0 + 960) = (v202 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v208(v201, v203);
  v209 = (void *)swift_task_alloc();
  *(void *)(v0 + 968) = v209;
  void *v209 = v0;
  v209[1] = sub_10022FDF8;
  uint64_t v210 = *(void *)(v0 + 656);
  return sub_10022D6B0(v210, v205, v207);
}

uint64_t sub_100232710()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1016) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 712);
  uint64_t v4 = *(void *)(v2 + 408);
  sub_100044BDC(v3, type metadata accessor for FriendRecord);
  if (v0) {
    uint64_t v5 = sub_100235A58;
  }
  else {
    uint64_t v5 = sub_10023286C;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_10023286C()
{
  uint64_t v1 = *(void *)(v0 + 1016);
  Connection.run(_:)();
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(v0 + 1000);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v0 + 984);
  if (v1)
  {
    uint64_t v4 = *(void *)(v0 + 888);
    uint64_t v58 = *(void *)(v0 + 880);
    uint64_t v59 = *(void *)(v0 + 904);
    uint64_t v55 = *(void *)(v0 + 808);
    uint64_t v56 = *(void *)(v0 + 856);
    uint64_t v5 = *(void *)(v0 + 800);
    uint64_t v6 = *(void *)(v0 + 736);
    uint64_t v57 = *(void *)(v0 + 728);
    uint64_t v7 = *(void *)(v0 + 456);
    uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v0 + 1000);
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v0 + 984);
    uint64_t v10 = *(void *)(v0 + 416);
    uint64_t v9 = *(void *)(v0 + 424);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v10);
    v8(v5, v6);
    v54(v56, v55);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v59, v58);
    sub_100044BDC(v57, type metadata accessor for FriendRecord);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
LABEL_14:
    return v11();
  }
  uint64_t v12 = *(void *)(v0 + 856);
  uint64_t v13 = *(void *)(v0 + 808);
  uint64_t v14 = *(void *)(v0 + 800);
  uint64_t v15 = *(void *)(v0 + 736);
  uint64_t v16 = *(void *)(v0 + 728);
  (*(void (**)(void, void))(*(void *)(v0 + 424) + 8))(*(void *)(v0 + 456), *(void *)(v0 + 416));
  v3(v14, v15);
  v2(v12, v13);
  uint64_t result = sub_100044BDC(v16, type metadata accessor for FriendRecord);
  unint64_t v18 = *(void *)(v0 + 936);
  int64_t v19 = *(void *)(v0 + 928);
  if (v18)
  {
    uint64_t v20 = (v18 - 1) & v18;
    unint64_t v21 = __clz(__rbit64(v18)) | (v19 << 6);
    uint64_t v22 = *(void *)(v0 + 400);
LABEL_5:
    uint64_t v23 = *(void *)(v0 + 864);
    uint64_t v24 = *(void *)(v0 + 744);
    uint64_t v25 = *(void *)(v0 + 736);
    (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v0 + 816) + 16))(v23, *(void *)(v22 + 48) + *(void *)(*(void *)(v0 + 816) + 72) * v21, *(void *)(v0 + 808));
    unint64_t v26 = *(void *)(v22 + 56) + *(void *)(v24 + 72) * v21;
    uint64_t v27 = sub_100044014(&qword_1003EEBF0);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v24 + 16))(v23 + *(int *)(v27 + 48), v26, v25);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v23, 0, 1, v27);
    int64_t v28 = v19;
    goto LABEL_12;
  }
  int64_t v29 = v19 + 1;
  if (__OFADD__(v19, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v30 = (unint64_t)((1 << *(unsigned char *)(v0 + 1136)) + 63) >> 6;
  if (v29 >= v30)
  {
    int64_t v28 = *(void *)(v0 + 928);
  }
  else
  {
    uint64_t v22 = *(void *)(v0 + 400);
    uint64_t v31 = v22 + 64;
    unint64_t v32 = *(void *)(v22 + 64 + 8 * v29);
    if (v32)
    {
LABEL_9:
      uint64_t v20 = (v32 - 1) & v32;
      unint64_t v21 = __clz(__rbit64(v32)) + (v29 << 6);
      int64_t v19 = v29;
      goto LABEL_5;
    }
    int64_t v28 = v19 + 1;
    if (v19 + 2 < v30)
    {
      unint64_t v32 = *(void *)(v31 + 8 * (v19 + 2));
      if (v32)
      {
        int64_t v29 = v19 + 2;
        goto LABEL_9;
      }
      int64_t v28 = v19 + 2;
      if (v19 + 3 < v30)
      {
        unint64_t v32 = *(void *)(v31 + 8 * (v19 + 3));
        if (v32)
        {
          int64_t v29 = v19 + 3;
          goto LABEL_9;
        }
        int64_t v29 = v19 + 4;
        int64_t v28 = v19 + 3;
        if (v19 + 4 < v30)
        {
          unint64_t v32 = *(void *)(v31 + 8 * v29);
          if (v32) {
            goto LABEL_9;
          }
          int64_t v28 = v30 - 1;
          int64_t v53 = v30 - 5;
          while (v53 != v19)
          {
            unint64_t v32 = *(void *)(v22 + 104 + 8 * v19++);
            if (v32)
            {
              int64_t v29 = v19 + 4;
              goto LABEL_9;
            }
          }
        }
      }
    }
  }
  uint64_t v33 = *(void *)(v0 + 864);
  uint64_t v34 = sub_100044014(&qword_1003EEBF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v33, 1, 1, v34);
  uint64_t v20 = 0;
LABEL_12:
  *(void *)(v0 + 936) = v20;
  *(void *)(v0 + 928) = v28;
  uint64_t v35 = *(void *)(v0 + 872);
  sub_100013B50(*(void *)(v0 + 864), v35, &qword_1003EFEA0);
  uint64_t v36 = sub_100044014(&qword_1003EEBF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 48))(v35, 1, v36) == 1)
  {
    uint64_t v37 = *(void *)(v0 + 904);
    uint64_t v38 = *(void *)(v0 + 888);
    uint64_t v39 = *(void *)(v0 + 880);
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_14;
  }
  uint64_t v40 = *(void *)(v0 + 800);
  uint64_t v41 = *(void *)(v0 + 744);
  uint64_t v42 = *(void *)(v0 + 736);
  uint64_t v43 = *(void *)(v0 + 648);
  uint64_t v44 = *(void *)(v0 + 632);
  uint64_t v45 = *(void *)(v0 + 624);
  uint64_t v46 = *(void *)(v0 + 872) + *(int *)(v36 + 48);
  (*(void (**)(void))(*(void *)(v0 + 816) + 32))(*(void *)(v0 + 856));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 32))(v40, v46, v42);
  Friend.handle.getter();
  uint64_t v47 = Handle.identifier.getter();
  uint64_t v49 = v48;
  *(void *)(v0 + 944) = v48;
  uint64_t v50 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
  *(void *)(v0 + 952) = v50;
  *(void *)(v0 + 960) = (v44 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v50(v43, v45);
  uint64_t v51 = (void *)swift_task_alloc();
  *(void *)(v0 + 968) = v51;
  *uint64_t v51 = v0;
  v51[1] = sub_10022FDF8;
  uint64_t v52 = *(void *)(v0 + 656);
  return sub_10022D6B0(v52, v47, v49);
}

uint64_t sub_100233258()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1040) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 704);
  uint64_t v4 = *(void *)(v2 + 408);
  sub_100044BDC(v3, type metadata accessor for FriendRecord);
  if (v0) {
    uint64_t v5 = sub_100235D9C;
  }
  else {
    uint64_t v5 = sub_1002333B4;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_1002333B4()
{
  uint64_t v1 = *(void *)(v0 + 1040);
  Connection.run(_:)();
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(v0 + 1024);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v0 + 984);
  if (v1)
  {
    uint64_t v4 = *(void *)(v0 + 888);
    uint64_t v58 = *(void *)(v0 + 880);
    uint64_t v59 = *(void *)(v0 + 904);
    uint64_t v55 = *(void *)(v0 + 808);
    uint64_t v56 = *(void *)(v0 + 856);
    uint64_t v5 = *(void *)(v0 + 800);
    uint64_t v6 = *(void *)(v0 + 736);
    uint64_t v57 = *(void *)(v0 + 728);
    uint64_t v7 = *(void *)(v0 + 448);
    uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v0 + 1024);
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v0 + 984);
    uint64_t v10 = *(void *)(v0 + 416);
    uint64_t v9 = *(void *)(v0 + 424);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v10);
    v8(v5, v6);
    v54(v56, v55);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v59, v58);
    sub_100044BDC(v57, type metadata accessor for FriendRecord);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
LABEL_14:
    return v11();
  }
  uint64_t v12 = *(void *)(v0 + 856);
  uint64_t v13 = *(void *)(v0 + 808);
  uint64_t v14 = *(void *)(v0 + 800);
  uint64_t v15 = *(void *)(v0 + 736);
  uint64_t v16 = *(void *)(v0 + 728);
  (*(void (**)(void, void))(*(void *)(v0 + 424) + 8))(*(void *)(v0 + 448), *(void *)(v0 + 416));
  v3(v14, v15);
  v2(v12, v13);
  uint64_t result = sub_100044BDC(v16, type metadata accessor for FriendRecord);
  unint64_t v18 = *(void *)(v0 + 936);
  int64_t v19 = *(void *)(v0 + 928);
  if (v18)
  {
    uint64_t v20 = (v18 - 1) & v18;
    unint64_t v21 = __clz(__rbit64(v18)) | (v19 << 6);
    uint64_t v22 = *(void *)(v0 + 400);
LABEL_5:
    uint64_t v23 = *(void *)(v0 + 864);
    uint64_t v24 = *(void *)(v0 + 744);
    uint64_t v25 = *(void *)(v0 + 736);
    (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v0 + 816) + 16))(v23, *(void *)(v22 + 48) + *(void *)(*(void *)(v0 + 816) + 72) * v21, *(void *)(v0 + 808));
    unint64_t v26 = *(void *)(v22 + 56) + *(void *)(v24 + 72) * v21;
    uint64_t v27 = sub_100044014(&qword_1003EEBF0);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v24 + 16))(v23 + *(int *)(v27 + 48), v26, v25);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v23, 0, 1, v27);
    int64_t v28 = v19;
    goto LABEL_12;
  }
  int64_t v29 = v19 + 1;
  if (__OFADD__(v19, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v30 = (unint64_t)((1 << *(unsigned char *)(v0 + 1136)) + 63) >> 6;
  if (v29 >= v30)
  {
    int64_t v28 = *(void *)(v0 + 928);
  }
  else
  {
    uint64_t v22 = *(void *)(v0 + 400);
    uint64_t v31 = v22 + 64;
    unint64_t v32 = *(void *)(v22 + 64 + 8 * v29);
    if (v32)
    {
LABEL_9:
      uint64_t v20 = (v32 - 1) & v32;
      unint64_t v21 = __clz(__rbit64(v32)) + (v29 << 6);
      int64_t v19 = v29;
      goto LABEL_5;
    }
    int64_t v28 = v19 + 1;
    if (v19 + 2 < v30)
    {
      unint64_t v32 = *(void *)(v31 + 8 * (v19 + 2));
      if (v32)
      {
        int64_t v29 = v19 + 2;
        goto LABEL_9;
      }
      int64_t v28 = v19 + 2;
      if (v19 + 3 < v30)
      {
        unint64_t v32 = *(void *)(v31 + 8 * (v19 + 3));
        if (v32)
        {
          int64_t v29 = v19 + 3;
          goto LABEL_9;
        }
        int64_t v29 = v19 + 4;
        int64_t v28 = v19 + 3;
        if (v19 + 4 < v30)
        {
          unint64_t v32 = *(void *)(v31 + 8 * v29);
          if (v32) {
            goto LABEL_9;
          }
          int64_t v28 = v30 - 1;
          int64_t v53 = v30 - 5;
          while (v53 != v19)
          {
            unint64_t v32 = *(void *)(v22 + 104 + 8 * v19++);
            if (v32)
            {
              int64_t v29 = v19 + 4;
              goto LABEL_9;
            }
          }
        }
      }
    }
  }
  uint64_t v33 = *(void *)(v0 + 864);
  uint64_t v34 = sub_100044014(&qword_1003EEBF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v33, 1, 1, v34);
  uint64_t v20 = 0;
LABEL_12:
  *(void *)(v0 + 936) = v20;
  *(void *)(v0 + 928) = v28;
  uint64_t v35 = *(void *)(v0 + 872);
  sub_100013B50(*(void *)(v0 + 864), v35, &qword_1003EFEA0);
  uint64_t v36 = sub_100044014(&qword_1003EEBF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 48))(v35, 1, v36) == 1)
  {
    uint64_t v37 = *(void *)(v0 + 904);
    uint64_t v38 = *(void *)(v0 + 888);
    uint64_t v39 = *(void *)(v0 + 880);
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_14;
  }
  uint64_t v40 = *(void *)(v0 + 800);
  uint64_t v41 = *(void *)(v0 + 744);
  uint64_t v42 = *(void *)(v0 + 736);
  uint64_t v43 = *(void *)(v0 + 648);
  uint64_t v44 = *(void *)(v0 + 632);
  uint64_t v45 = *(void *)(v0 + 624);
  uint64_t v46 = *(void *)(v0 + 872) + *(int *)(v36 + 48);
  (*(void (**)(void))(*(void *)(v0 + 816) + 32))(*(void *)(v0 + 856));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 32))(v40, v46, v42);
  Friend.handle.getter();
  uint64_t v47 = Handle.identifier.getter();
  uint64_t v49 = v48;
  *(void *)(v0 + 944) = v48;
  uint64_t v50 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
  *(void *)(v0 + 952) = v50;
  *(void *)(v0 + 960) = (v44 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v50(v43, v45);
  uint64_t v51 = (void *)swift_task_alloc();
  *(void *)(v0 + 968) = v51;
  *uint64_t v51 = v0;
  v51[1] = sub_10022FDF8;
  uint64_t v52 = *(void *)(v0 + 656);
  return sub_10022D6B0(v52, v47, v49);
}

uint64_t sub_100233DA0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1064) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 696);
  uint64_t v4 = *(void *)(v2 + 408);
  sub_100044BDC(v3, type metadata accessor for FriendRecord);
  if (v0) {
    uint64_t v5 = sub_1002360E0;
  }
  else {
    uint64_t v5 = sub_100233EFC;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_100233EFC()
{
  uint64_t v1 = *(void *)(v0 + 1064);
  Connection.run(_:)();
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(v0 + 1048);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v0 + 984);
  if (v1)
  {
    uint64_t v4 = *(void *)(v0 + 888);
    uint64_t v58 = *(void *)(v0 + 880);
    uint64_t v59 = *(void *)(v0 + 904);
    uint64_t v55 = *(void *)(v0 + 808);
    uint64_t v56 = *(void *)(v0 + 856);
    uint64_t v5 = *(void *)(v0 + 800);
    uint64_t v6 = *(void *)(v0 + 736);
    uint64_t v57 = *(void *)(v0 + 728);
    uint64_t v7 = *(void *)(v0 + 440);
    uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v0 + 1048);
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v0 + 984);
    uint64_t v10 = *(void *)(v0 + 416);
    uint64_t v9 = *(void *)(v0 + 424);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v10);
    v8(v5, v6);
    v54(v56, v55);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v59, v58);
    sub_100044BDC(v57, type metadata accessor for FriendRecord);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
LABEL_14:
    return v11();
  }
  uint64_t v12 = *(void *)(v0 + 856);
  uint64_t v13 = *(void *)(v0 + 808);
  uint64_t v14 = *(void *)(v0 + 800);
  uint64_t v15 = *(void *)(v0 + 736);
  uint64_t v16 = *(void *)(v0 + 728);
  (*(void (**)(void, void))(*(void *)(v0 + 424) + 8))(*(void *)(v0 + 440), *(void *)(v0 + 416));
  v3(v14, v15);
  v2(v12, v13);
  uint64_t result = sub_100044BDC(v16, type metadata accessor for FriendRecord);
  unint64_t v18 = *(void *)(v0 + 936);
  int64_t v19 = *(void *)(v0 + 928);
  if (v18)
  {
    uint64_t v20 = (v18 - 1) & v18;
    unint64_t v21 = __clz(__rbit64(v18)) | (v19 << 6);
    uint64_t v22 = *(void *)(v0 + 400);
LABEL_5:
    uint64_t v23 = *(void *)(v0 + 864);
    uint64_t v24 = *(void *)(v0 + 744);
    uint64_t v25 = *(void *)(v0 + 736);
    (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v0 + 816) + 16))(v23, *(void *)(v22 + 48) + *(void *)(*(void *)(v0 + 816) + 72) * v21, *(void *)(v0 + 808));
    unint64_t v26 = *(void *)(v22 + 56) + *(void *)(v24 + 72) * v21;
    uint64_t v27 = sub_100044014(&qword_1003EEBF0);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v24 + 16))(v23 + *(int *)(v27 + 48), v26, v25);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v23, 0, 1, v27);
    int64_t v28 = v19;
    goto LABEL_12;
  }
  int64_t v29 = v19 + 1;
  if (__OFADD__(v19, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v30 = (unint64_t)((1 << *(unsigned char *)(v0 + 1136)) + 63) >> 6;
  if (v29 >= v30)
  {
    int64_t v28 = *(void *)(v0 + 928);
  }
  else
  {
    uint64_t v22 = *(void *)(v0 + 400);
    uint64_t v31 = v22 + 64;
    unint64_t v32 = *(void *)(v22 + 64 + 8 * v29);
    if (v32)
    {
LABEL_9:
      uint64_t v20 = (v32 - 1) & v32;
      unint64_t v21 = __clz(__rbit64(v32)) + (v29 << 6);
      int64_t v19 = v29;
      goto LABEL_5;
    }
    int64_t v28 = v19 + 1;
    if (v19 + 2 < v30)
    {
      unint64_t v32 = *(void *)(v31 + 8 * (v19 + 2));
      if (v32)
      {
        int64_t v29 = v19 + 2;
        goto LABEL_9;
      }
      int64_t v28 = v19 + 2;
      if (v19 + 3 < v30)
      {
        unint64_t v32 = *(void *)(v31 + 8 * (v19 + 3));
        if (v32)
        {
          int64_t v29 = v19 + 3;
          goto LABEL_9;
        }
        int64_t v29 = v19 + 4;
        int64_t v28 = v19 + 3;
        if (v19 + 4 < v30)
        {
          unint64_t v32 = *(void *)(v31 + 8 * v29);
          if (v32) {
            goto LABEL_9;
          }
          int64_t v28 = v30 - 1;
          int64_t v53 = v30 - 5;
          while (v53 != v19)
          {
            unint64_t v32 = *(void *)(v22 + 104 + 8 * v19++);
            if (v32)
            {
              int64_t v29 = v19 + 4;
              goto LABEL_9;
            }
          }
        }
      }
    }
  }
  uint64_t v33 = *(void *)(v0 + 864);
  uint64_t v34 = sub_100044014(&qword_1003EEBF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v33, 1, 1, v34);
  uint64_t v20 = 0;
LABEL_12:
  *(void *)(v0 + 936) = v20;
  *(void *)(v0 + 928) = v28;
  uint64_t v35 = *(void *)(v0 + 872);
  sub_100013B50(*(void *)(v0 + 864), v35, &qword_1003EFEA0);
  uint64_t v36 = sub_100044014(&qword_1003EEBF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 48))(v35, 1, v36) == 1)
  {
    uint64_t v37 = *(void *)(v0 + 904);
    uint64_t v38 = *(void *)(v0 + 888);
    uint64_t v39 = *(void *)(v0 + 880);
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_14;
  }
  uint64_t v40 = *(void *)(v0 + 800);
  uint64_t v41 = *(void *)(v0 + 744);
  uint64_t v42 = *(void *)(v0 + 736);
  uint64_t v43 = *(void *)(v0 + 648);
  uint64_t v44 = *(void *)(v0 + 632);
  uint64_t v45 = *(void *)(v0 + 624);
  uint64_t v46 = *(void *)(v0 + 872) + *(int *)(v36 + 48);
  (*(void (**)(void))(*(void *)(v0 + 816) + 32))(*(void *)(v0 + 856));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 32))(v40, v46, v42);
  Friend.handle.getter();
  uint64_t v47 = Handle.identifier.getter();
  uint64_t v49 = v48;
  *(void *)(v0 + 944) = v48;
  uint64_t v50 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
  *(void *)(v0 + 952) = v50;
  *(void *)(v0 + 960) = (v44 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v50(v43, v45);
  uint64_t v51 = (void *)swift_task_alloc();
  *(void *)(v0 + 968) = v51;
  *uint64_t v51 = v0;
  v51[1] = sub_10022FDF8;
  uint64_t v52 = *(void *)(v0 + 656);
  return sub_10022D6B0(v52, v47, v49);
}

uint64_t sub_1002348E8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1096) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 408);
  if (v0) {
    uint64_t v4 = sub_1002353F4;
  }
  else {
    uint64_t v4 = sub_100234A14;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100234A14()
{
  uint64_t v1 = *(void *)(v0 + 1096);
  Connection.run(_:)();
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(v0 + 1072);
  if (v1)
  {
    uint64_t v3 = *(void *)(v0 + 888);
    uint64_t v58 = *(void *)(v0 + 880);
    uint64_t v59 = *(void *)(v0 + 904);
    uint64_t v4 = *(void *)(v0 + 816);
    uint64_t v56 = *(void *)(v0 + 808);
    uint64_t v57 = *(void *)(v0 + 856);
    uint64_t v5 = *(void *)(v0 + 736);
    uint64_t v6 = *(void *)(v0 + 688);
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v0 + 1072);
    uint64_t v8 = *(void *)(v0 + 424);
    uint64_t v9 = *(void *)(v0 + 432);
    uint64_t v10 = *(void *)(v0 + 416);
    uint64_t v55 = *(void *)(v0 + 800);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v10);
    sub_100044BDC(v6, type metadata accessor for FriendRecord);
    v7(v55, v5);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v57, v56);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v59, v58);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
LABEL_14:
    return v11();
  }
  uint64_t v12 = *(void *)(v0 + 856);
  uint64_t v13 = *(void *)(v0 + 816);
  uint64_t v14 = *(void *)(v0 + 808);
  uint64_t v15 = *(void *)(v0 + 800);
  uint64_t v16 = *(void *)(v0 + 736);
  uint64_t v17 = *(void *)(v0 + 688);
  (*(void (**)(void, void))(*(void *)(v0 + 424) + 8))(*(void *)(v0 + 432), *(void *)(v0 + 416));
  sub_100044BDC(v17, type metadata accessor for FriendRecord);
  v2(v15, v16);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  unint64_t v19 = *(void *)(v0 + 936);
  int64_t v20 = *(void *)(v0 + 928);
  if (v19)
  {
    uint64_t v21 = (v19 - 1) & v19;
    unint64_t v22 = __clz(__rbit64(v19)) | (v20 << 6);
    uint64_t v23 = *(void *)(v0 + 400);
LABEL_5:
    uint64_t v24 = *(void *)(v0 + 864);
    uint64_t v25 = *(void *)(v0 + 744);
    uint64_t v26 = *(void *)(v0 + 736);
    (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v0 + 816) + 16))(v24, *(void *)(v23 + 48) + *(void *)(*(void *)(v0 + 816) + 72) * v22, *(void *)(v0 + 808));
    unint64_t v27 = *(void *)(v23 + 56) + *(void *)(v25 + 72) * v22;
    uint64_t v28 = sub_100044014(&qword_1003EEBF0);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v25 + 16))(v24 + *(int *)(v28 + 48), v27, v26);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v24, 0, 1, v28);
    int64_t v29 = v20;
    goto LABEL_12;
  }
  int64_t v30 = v20 + 1;
  if (__OFADD__(v20, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v31 = (unint64_t)((1 << *(unsigned char *)(v0 + 1136)) + 63) >> 6;
  if (v30 >= v31)
  {
    int64_t v29 = *(void *)(v0 + 928);
  }
  else
  {
    uint64_t v23 = *(void *)(v0 + 400);
    uint64_t v32 = v23 + 64;
    unint64_t v33 = *(void *)(v23 + 64 + 8 * v30);
    if (v33)
    {
LABEL_9:
      uint64_t v21 = (v33 - 1) & v33;
      unint64_t v22 = __clz(__rbit64(v33)) + (v30 << 6);
      int64_t v20 = v30;
      goto LABEL_5;
    }
    int64_t v29 = v20 + 1;
    if (v20 + 2 < v31)
    {
      unint64_t v33 = *(void *)(v32 + 8 * (v20 + 2));
      if (v33)
      {
        int64_t v30 = v20 + 2;
        goto LABEL_9;
      }
      int64_t v29 = v20 + 2;
      if (v20 + 3 < v31)
      {
        unint64_t v33 = *(void *)(v32 + 8 * (v20 + 3));
        if (v33)
        {
          int64_t v30 = v20 + 3;
          goto LABEL_9;
        }
        int64_t v30 = v20 + 4;
        int64_t v29 = v20 + 3;
        if (v20 + 4 < v31)
        {
          unint64_t v33 = *(void *)(v32 + 8 * v30);
          if (v33) {
            goto LABEL_9;
          }
          int64_t v29 = v31 - 1;
          int64_t v54 = v31 - 5;
          while (v54 != v20)
          {
            unint64_t v33 = *(void *)(v23 + 104 + 8 * v20++);
            if (v33)
            {
              int64_t v30 = v20 + 4;
              goto LABEL_9;
            }
          }
        }
      }
    }
  }
  uint64_t v34 = *(void *)(v0 + 864);
  uint64_t v35 = sub_100044014(&qword_1003EEBF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 1, 1, v35);
  uint64_t v21 = 0;
LABEL_12:
  *(void *)(v0 + 936) = v21;
  *(void *)(v0 + 928) = v29;
  uint64_t v36 = *(void *)(v0 + 872);
  sub_100013B50(*(void *)(v0 + 864), v36, &qword_1003EFEA0);
  uint64_t v37 = sub_100044014(&qword_1003EEBF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 48))(v36, 1, v37) == 1)
  {
    uint64_t v38 = *(void *)(v0 + 904);
    uint64_t v39 = *(void *)(v0 + 888);
    uint64_t v40 = *(void *)(v0 + 880);
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_14;
  }
  uint64_t v41 = *(void *)(v0 + 800);
  uint64_t v42 = *(void *)(v0 + 744);
  uint64_t v43 = *(void *)(v0 + 736);
  uint64_t v44 = *(void *)(v0 + 648);
  uint64_t v45 = *(void *)(v0 + 632);
  uint64_t v46 = *(void *)(v0 + 624);
  uint64_t v47 = *(void *)(v0 + 872) + *(int *)(v37 + 48);
  (*(void (**)(void))(*(void *)(v0 + 816) + 32))(*(void *)(v0 + 856));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 32))(v41, v47, v43);
  Friend.handle.getter();
  uint64_t v48 = Handle.identifier.getter();
  uint64_t v50 = v49;
  *(void *)(v0 + 944) = v49;
  uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
  *(void *)(v0 + 952) = v51;
  *(void *)(v0 + 960) = (v45 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v51(v44, v46);
  uint64_t v52 = (void *)swift_task_alloc();
  *(void *)(v0 + 968) = v52;
  *uint64_t v52 = v0;
  v52[1] = sub_10022FDF8;
  uint64_t v53 = *(void *)(v0 + 656);
  return sub_10022D6B0(v53, v48, v50);
}

uint64_t sub_1002353F4()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[134];
  uint64_t v12 = v0[113];
  uint64_t v2 = v0[111];
  uint64_t v11 = v0[110];
  uint64_t v3 = v0[107];
  uint64_t v4 = v0[102];
  uint64_t v5 = v0[101];
  uint64_t v6 = v0[100];
  uint64_t v7 = v0[92];
  uint64_t v8 = v0[86];
  swift_release();
  sub_100044BDC(v8, type metadata accessor for FriendRecord);
  v1(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v12, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100235734()
{
  uint64_t v11 = v0[113];
  uint64_t v1 = v0[111];
  uint64_t v2 = v0[110];
  uint64_t v3 = v0[107];
  uint64_t v4 = v0[102];
  uint64_t v5 = v0[101];
  uint64_t v6 = v0[100];
  uint64_t v7 = v0[93];
  uint64_t v8 = v0[92];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v11, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100235A58()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[123];
  uint64_t v2 = v0[111];
  uint64_t v11 = v0[110];
  uint64_t v12 = v0[113];
  uint64_t v3 = v0[107];
  uint64_t v4 = v0[101];
  uint64_t v5 = v0[100];
  uint64_t v6 = v0[92];
  uint64_t v9 = (void (*)(uint64_t, uint64_t))v0[125];
  uint64_t v10 = v0[91];
  swift_release();
  v1(v5, v6);
  v9(v3, v4);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v12, v11);
  sub_100044BDC(v10, type metadata accessor for FriendRecord);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100235D9C()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[123];
  uint64_t v2 = v0[111];
  uint64_t v11 = v0[110];
  uint64_t v12 = v0[113];
  uint64_t v3 = v0[107];
  uint64_t v4 = v0[101];
  uint64_t v5 = v0[100];
  uint64_t v6 = v0[92];
  uint64_t v9 = (void (*)(uint64_t, uint64_t))v0[128];
  uint64_t v10 = v0[91];
  swift_release();
  v1(v5, v6);
  v9(v3, v4);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v12, v11);
  sub_100044BDC(v10, type metadata accessor for FriendRecord);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1002360E0()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[123];
  uint64_t v2 = v0[111];
  uint64_t v11 = v0[110];
  uint64_t v12 = v0[113];
  uint64_t v3 = v0[107];
  uint64_t v4 = v0[101];
  uint64_t v5 = v0[100];
  uint64_t v6 = v0[92];
  uint64_t v9 = (void (*)(uint64_t, uint64_t))v0[131];
  uint64_t v10 = v0[91];
  swift_release();
  v1(v5, v6);
  v9(v3, v4);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v12, v11);
  sub_100044BDC(v10, type metadata accessor for FriendRecord);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100236424()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 80) + 112);
  *(void *)(v0 + 304) = v1;
  return _swift_task_switch(sub_10004C920, v1, 0);
}

uint64_t sub_100236448()
{
  type metadata accessor for LocalStorageDatabase();
  sub_100017ACC(&qword_1003F2578, (void (*)(uint64_t))type metadata accessor for LocalStorageDatabase);
  *(void *)(v0 + 312) = Database.writeConnection.getter();
  return _swift_task_switch(sub_10004C644, 0, 0);
}

uint64_t sub_1002364FC(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 336) = a1;
  *(void *)(v3 + 344) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_10023805C;
  }
  else
  {
    uint64_t v4 = sub_100236618;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_100236618()
{
  uint64_t v170 = countAndFlagsBits;
  swift_retain();
  uint64_t v1 = dispatch thunk of _AnySequenceBox.__copyToContiguousArray()();
  swift_release();
  uint64_t v2 = sub_1000287F8(v1);
  swift_release();
  if (qword_1003EC3F0 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  countAndFlagsBits[22]._countAndFlagsBits = sub_100044058(v3, (uint64_t)qword_10040C248);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  uint64_t v167 = countAndFlagsBits;
  if (!os_log_type_enabled(v4, v5))
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    object = countAndFlagsBits[21]._object;
    goto LABEL_32;
  }
  os_log_type_t v146 = v5;
  log = v4;
  uint64_t v6 = countAndFlagsBits[21]._object;
  uint64_t v7 = swift_slowAlloc();
  uint64_t v168 = swift_slowAlloc();
  *(_DWORD *)uint64_t v7 = 141558787;
  countAndFlagsBits[2]._object = (void *)1752392040;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  uint64_t v152 = v7;
  *(_WORD *)(v7 + 12) = 2081;
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v154 = v2;
  uint64_t v9 = sub_1000411C4(v8);
  uint64_t v149 = v6;
  int64_t v10 = *(void *)(v9 + 16);
  if (!v10)
  {
    swift_release();
LABEL_18:
    uint64_t v31 = Array.description.getter();
    unint64_t v33 = v32;
    swift_bridgeObjectRelease();
    countAndFlagsBits[3]._countAndFlagsBits = sub_100037004(v31, v33, &v168);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v152 + 22) = 2160;
    countAndFlagsBits[3]._object = (void *)1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v152 + 32) = 2081;
    uint64_t v34 = swift_bridgeObjectRetain();
    uint64_t v35 = sub_1000411C4(v34);
    int64_t v36 = *(void *)(v35 + 16);
    if (v36)
    {
      countAndFlagsBits = (Swift::String *)countAndFlagsBits[13]._countAndFlagsBits;
      v169[0] = (uint64_t)&_swiftEmptyArrayStorage;
      sub_10003CB84(0, v36, 0);
      uint64_t v11 = (void *)sub_100041B1C(v35);
      int64_t v37 = (int64_t)v11;
      int v39 = v38;
      char v41 = v40 & 1;
      uint64_t v160 = v35;
      uint64_t v164 = v35 + 56;
      unint64_t p_object = (unint64_t)&countAndFlagsBits->_object;
      while ((v37 & 0x8000000000000000) == 0)
      {
        unint64_t p_object = 1 << *(unsigned char *)(v35 + 32);
        if (v37 >= (uint64_t)p_object) {
          break;
        }
        unint64_t p_object = *(void *)(v164 + (((unint64_t)v37 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v37;
        if ((p_object & 1) == 0) {
          goto LABEL_87;
        }
        unint64_t p_object = *(unsigned int *)(v35 + 36);
        if (p_object != v39) {
          goto LABEL_88;
        }
        uint64_t v43 = v167[16]._countAndFlagsBits;
        uint64_t v42 = v167[16]._object;
        uint64_t v44 = v167[12]._object;
        ((void (*)(void *, int64_t, void *))countAndFlagsBits[1]._countAndFlagsBits)(v42, *(void *)(v35 + 48) + (int64_t)countAndFlagsBits[4]._object * v37, v44);
        ((void (*)(uint64_t, void *, void *))countAndFlagsBits[2]._countAndFlagsBits)(v43, v42, v44);
        uint64_t v45 = Device.identifier.getter();
        uint64_t v47 = v46;
        ((void (*)(uint64_t, void *))countAndFlagsBits->_object)(v43, v44);
        uint64_t v48 = v169[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10003CB84(0, *(void *)(v48 + 16) + 1, 1);
          uint64_t v48 = v169[0];
        }
        unint64_t v50 = *(void *)(v48 + 16);
        unint64_t v49 = *(void *)(v48 + 24);
        if (v50 >= v49 >> 1)
        {
          sub_10003CB84(v49 > 1, v50 + 1, 1);
          uint64_t v48 = v169[0];
        }
        *(void *)(v48 + 16) = v50 + 1;
        uint64_t v51 = v48 + 16 * v50;
        *(void *)(v51 + 32) = v45;
        *(void *)(v51 + 40) = v47;
        uint64_t v35 = v160;
        uint64_t v11 = (void *)sub_10004178C(v37, v39, v41 & 1, v160);
        int64_t v37 = (int64_t)v11;
        int v39 = v52;
        char v41 = v53 & 1;
        if (!--v36)
        {
          sub_10015F040((uint64_t)v11, v52, v53 & 1);
          swift_release();
          countAndFlagsBits = v167;
          goto LABEL_31;
        }
      }
      goto LABEL_86;
    }
    swift_release();
LABEL_31:
    uint64_t v54 = Array.description.getter();
    unint64_t v56 = v55;
    swift_bridgeObjectRelease();
    countAndFlagsBits[4]._countAndFlagsBits = sub_100037004(v54, v56, &v168);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, log, v146, "cached active Devices: %{private,mask.hash}s\ncurrent active Devices: %{private,mask.hash}s", (uint8_t *)v152, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v2 = v154;
    object = v149;
LABEL_32:
    p_countAndFlagsBits = &countAndFlagsBits[2]._countAndFlagsBits;
    uint64_t v165 = (char *)countAndFlagsBits[17]._object;
    uint64_t v58 = countAndFlagsBits[13]._countAndFlagsBits;
    uint64_t v59 = (char *)countAndFlagsBits[10]._object;
    uint64_t v60 = countAndFlagsBits[9]._countAndFlagsBits;
    uint64_t v61 = (void (**)(uint64_t, uint64_t))countAndFlagsBits[7]._object;
    v169[0] = countAndFlagsBits[20]._countAndFlagsBits;
    uint64_t v57 = v169[0];
    swift_bridgeObjectRetain();
    sub_10002DA98(v2);
    uint64_t v62 = v169[0];
    swift_bridgeObjectRetain();
    uint64_t v63 = swift_bridgeObjectRetain();
    uint64_t v64 = sub_1000415B4(v63, v57, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_100009DE4);
    swift_bridgeObjectRelease();
    uint64_t v139 = sub_1000415B4(v62, v57, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_100008F40);
    countAndFlagsBits[22]._object = (void *)v139;
    uint64_t v11 = (void *)swift_bridgeObjectRelease();
    int64_t v65 = 0;
    uint64_t v66 = *(void *)(v64 + 56);
    uint64_t v141 = v64 + 56;
    uint64_t v67 = -1;
    uint64_t v151 = v64;
    uint64_t v68 = -1 << *(unsigned char *)(v64 + 32);
    if (-v68 < 64) {
      uint64_t v67 = ~(-1 << -(char)v68);
    }
    unint64_t v69 = v67 & v66;
    int64_t v142 = (unint64_t)(63 - v68) >> 6;
    uint64_t v144 = (void (**)(void *, void *))(v60 + 8);
    uint64_t v150 = (void (**)(uint64_t, uint64_t))(v165 + 8);
    v143 = (void (**)(void *, uint64_t, uint64_t))(v59 + 16);
    v166 = (void (**)(void *, uint64_t))(v59 + 8);
    uint64_t v145 = (void (**)(uint64_t, void *))(v58 + 8);
    uint64_t v147 = v58;
    int v140 = 136315138;
    uint64_t v161 = (uint64_t)object;
    if ((v67 & v66) == 0) {
      goto LABEL_36;
    }
LABEL_35:
    uint64_t v153 = (v69 - 1) & v69;
    int64_t v155 = v65;
    for (unint64_t i = __clz(__rbit64(v69)) | (v65 << 6); ; unint64_t i = __clz(__rbit64(v71)) + (v72 << 6))
    {
      uint64_t v73 = countAndFlagsBits[15]._countAndFlagsBits;
      uint64_t v74 = countAndFlagsBits[15]._object;
      uint64_t v75 = countAndFlagsBits[12]._object;
      (*(void (**)(void *, unint64_t, void *))(v147 + 16))(v74, *(void *)(v151 + 48) + *(void *)(v147 + 72) * i, v75);
      (*(void (**)(uint64_t, void *, void *))(v147 + 32))(v73, v74, v75);
      if (qword_1003EC210 != -1) {
        swift_once();
      }
      uint64_t v76 = countAndFlagsBits[18]._countAndFlagsBits;
      uint64_t v77 = countAndFlagsBits[17]._countAndFlagsBits;
      uint64_t v78 = v167[12]._countAndFlagsBits;
      uint64_t v156 = v167[11]._object;
      uint64_t v157 = v167[10]._countAndFlagsBits;
      BOOL v79 = v167[9]._object;
      uint64_t v80 = v167[8]._object;
      uint64_t v81 = v167[8]._countAndFlagsBits;
      uint64_t v82 = v167[7]._countAndFlagsBits;
      sub_100044058(v82, (uint64_t)qword_10040BCA8);
      sub_100014FFC(&qword_1003EF238, &qword_1003EF230);
      ExpressionType<>.lowercaseString.getter();
      Device.identifier.getter();
      Swift::String v83 = String.lowercased()();
      swift_bridgeObjectRelease();
      v167[1] = v83;
      == infix<A>(_:_:)();
      swift_bridgeObjectRelease();
      v61[1](v81, v82);
      QueryType.filter(_:)();
      (*v144)(v79, v80);
      QueryType.delete()();
      uint64_t v84 = *v150;
      (*v150)(v76, v77);
      uint64_t v85 = *v143;
      countAndFlagsBits = v167;
      (*v143)(v156, v78, v157);
      uint64_t v86 = Logger.logObject.getter();
      os_log_type_t v87 = static os_log_type_t.default.getter();
      BOOL v88 = os_log_type_enabled(v86, v87);
      unint64_t v89 = v167[11]._object;
      if (v88)
      {
        uint64_t v90 = v167[11]._countAndFlagsBits;
        uint64_t v91 = v167[10]._countAndFlagsBits;
        uint64_t v92 = swift_slowAlloc();
        v169[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v92 = 136315138;
        v85((void *)v90, (uint64_t)v89, v91);
        countAndFlagsBits = v167;
        uint64_t v93 = String.init<A>(describing:)();
        *(void *)(v92 + 4) = sub_100037004(v93, v94, v169);
        swift_bridgeObjectRelease();
        uint64_t v95 = *v166;
        (*v166)(v89, v91);
        _os_log_impl((void *)&_mh_execute_header, v86, v87, "LocalStorage delete a device record: %s", (uint8_t *)v92, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        uint64_t v95 = *v166;
        (*v166)(v167[11]._object, v167[10]._countAndFlagsBits);
      }

      Connection.run(_:)();
      if (v161)
      {
        uint64_t v158 = countAndFlagsBits[17]._countAndFlagsBits;
        uint64_t v162 = countAndFlagsBits[18]._object;
        uint64_t v98 = countAndFlagsBits[15]._countAndFlagsBits;
        uint64_t v99 = countAndFlagsBits[12]._countAndFlagsBits;
        uint64_t v100 = countAndFlagsBits[12]._object;
        uint64_t v101 = countAndFlagsBits[10]._countAndFlagsBits;
        swift_release();
        swift_release();
        swift_release();
        v95((void *)v99, v101);
        (*v145)(v98, v100);
        swift_release();
        v84((uint64_t)v162, v158);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        os_log_type_t v102 = (uint64_t (*)(void))countAndFlagsBits->_object;
        goto LABEL_59;
      }
      uint64_t v96 = countAndFlagsBits[15]._countAndFlagsBits;
      uint64_t v97 = countAndFlagsBits[12]._object;
      v95((void *)countAndFlagsBits[12]._countAndFlagsBits, countAndFlagsBits[10]._countAndFlagsBits);
      uint64_t v11 = (void *)((uint64_t (*)(uint64_t, void *))*v145)(v96, v97);
      uint64_t v161 = 0;
      unint64_t v69 = v153;
      int64_t v65 = v155;
      if (v153) {
        goto LABEL_35;
      }
LABEL_36:
      unint64_t p_object = v65 + 1;
      if (__OFADD__(v65, 1)) {
        goto LABEL_89;
      }
      if ((uint64_t)p_object >= v142) {
        break;
      }
      unint64_t v71 = *(void *)(v141 + 8 * p_object);
      int64_t v72 = v65 + 1;
      if (!v71)
      {
        int64_t v72 = v65 + 2;
        if (v65 + 2 >= v142) {
          break;
        }
        unint64_t v71 = *(void *)(v141 + 8 * v72);
        if (!v71)
        {
          int64_t v72 = v65 + 3;
          if (v65 + 3 >= v142) {
            break;
          }
          unint64_t v71 = *(void *)(v141 + 8 * v72);
          if (!v71)
          {
            unint64_t p_object = v65 + 4;
            if (v65 + 4 >= v142) {
              break;
            }
            unint64_t v71 = *(void *)(v141 + 8 * p_object);
            if (!v71)
            {
              while (1)
              {
                int64_t v72 = p_object + 1;
                if (__OFADD__(p_object, 1)) {
                  goto LABEL_90;
                }
                if (v72 >= v142) {
                  goto LABEL_62;
                }
                unint64_t v71 = *(void *)(v141 + 8 * v72);
                ++p_object;
                if (v71) {
                  goto LABEL_49;
                }
              }
            }
            int64_t v72 = v65 + 4;
          }
        }
      }
LABEL_49:
      uint64_t v153 = (v71 - 1) & v71;
      int64_t v155 = v72;
    }
LABEL_62:
    swift_release();
    char v104 = *(unsigned char *)(v139 + 32);
    LOBYTE(countAndFlagsBits[25]._object) = v104;
    uint64_t v105 = -1 << v104;
    uint64_t v106 = *(void *)(v139 + 56);
    if (-v105 < 64) {
      uint64_t v107 = ~(-1 << -(char)v105);
    }
    else {
      uint64_t v107 = -1;
    }
    countAndFlagsBits[23]._countAndFlagsBits = v161;
    unint64_t v108 = v107 & v106;
    if (v108)
    {
      uint64_t v109 = 0;
      unint64_t v110 = __clz(__rbit64(v108));
      uint64_t v111 = (v108 - 1) & v108;
      uint64_t v11 = countAndFlagsBits[22]._object;
      goto LABEL_67;
    }
    unint64_t p_object = 63 - v105;
    uint64_t v11 = countAndFlagsBits[22]._object;
    if (p_object > 0x7F)
    {
      unint64_t v131 = v11[8];
      if (v131)
      {
        uint64_t v109 = 1;
        goto LABEL_76;
      }
      if (p_object >= 0xC0)
      {
        unint64_t v131 = v11[9];
        if (v131)
        {
          uint64_t v109 = 2;
          goto LABEL_76;
        }
        if (p_object >= 0x100)
        {
          unint64_t v131 = v11[10];
          if (!v131) {
            goto LABEL_91;
          }
          uint64_t v109 = 3;
          goto LABEL_76;
        }
      }
    }
LABEL_100:
    uint64_t v135 = countAndFlagsBits[18]._object;
    uint64_t v136 = countAndFlagsBits[17]._countAndFlagsBits;
    uint64_t v137 = (void (**)(void *, uint64_t))countAndFlagsBits[17]._object;
    swift_release();
    swift_release();
    swift_release();
    v137[1](v135, v136);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v102 = (uint64_t (*)(void))countAndFlagsBits->_object;
LABEL_59:
    return v102();
  }
  countAndFlagsBits = (Swift::String *)countAndFlagsBits[13]._countAndFlagsBits;
  v169[0] = (uint64_t)&_swiftEmptyArrayStorage;
  sub_10003CB84(0, v10, 0);
  uint64_t v11 = (void *)sub_100041B1C(v9);
  int64_t v12 = (int64_t)v11;
  int v14 = v13;
  char v16 = v15 & 1;
  uint64_t v159 = v9;
  uint64_t v163 = v9 + 56;
  unint64_t p_object = (unint64_t)&countAndFlagsBits->_object;
  while ((v12 & 0x8000000000000000) == 0)
  {
    unint64_t p_object = 1 << *(unsigned char *)(v9 + 32);
    if (v12 >= (uint64_t)p_object) {
      break;
    }
    unint64_t p_object = *(void *)(v163 + (((unint64_t)v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v12;
    if ((p_object & 1) == 0) {
      goto LABEL_84;
    }
    unint64_t p_object = *(unsigned int *)(v9 + 36);
    if (p_object != v14) {
      goto LABEL_85;
    }
    uint64_t v18 = v167[16]._countAndFlagsBits;
    unint64_t v19 = v167[16]._object;
    int64_t v20 = v167[12]._object;
    ((void (*)(void *, int64_t, void *))countAndFlagsBits[1]._countAndFlagsBits)(v19, *(void *)(v9 + 48) + (int64_t)countAndFlagsBits[4]._object * v12, v20);
    ((void (*)(uint64_t, void *, void *))countAndFlagsBits[2]._countAndFlagsBits)(v18, v19, v20);
    uint64_t v21 = Device.identifier.getter();
    uint64_t v23 = v22;
    ((void (*)(uint64_t, void *))countAndFlagsBits->_object)(v18, v20);
    uint64_t v24 = v169[0];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_10003CB84(0, *(void *)(v169[0] + 16) + 1, 1);
      uint64_t v24 = v169[0];
    }
    unint64_t v26 = *(void *)(v24 + 16);
    unint64_t v25 = *(void *)(v24 + 24);
    if (v26 >= v25 >> 1)
    {
      sub_10003CB84(v25 > 1, v26 + 1, 1);
      uint64_t v24 = v169[0];
    }
    *(void *)(v24 + 16) = v26 + 1;
    uint64_t v27 = v24 + 16 * v26;
    *(void *)(v27 + 32) = v21;
    *(void *)(v27 + 40) = v23;
    uint64_t v9 = v159;
    uint64_t v11 = (void *)sub_10004178C(v12, v14, v16 & 1, v159);
    int64_t v12 = (int64_t)v11;
    int v14 = v28;
    char v16 = v29 & 1;
    if (!--v10)
    {
      sub_10015F040((uint64_t)v11, v28, v29 & 1);
      swift_release();
      countAndFlagsBits = v167;
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  __break(1u);
LABEL_91:
  if (p_object < 0x140) {
    goto LABEL_100;
  }
  unint64_t v131 = v11[11];
  if (!v131)
  {
    uint64_t v132 = 0;
    uint64_t v133 = p_object >> 6;
    if (v133 <= 5) {
      uint64_t v133 = 5;
    }
    uint64_t v134 = v133 - 5;
    while (v134 != v132)
    {
      unint64_t v131 = v11[v132++ + 12];
      if (v131)
      {
        uint64_t v109 = v132 + 4;
        goto LABEL_76;
      }
    }
    goto LABEL_100;
  }
  uint64_t v109 = 4;
LABEL_76:
  uint64_t v111 = (v131 - 1) & v131;
  unint64_t v110 = __clz(__rbit64(v131)) + (v109 << 6);
LABEL_67:
  countAndFlagsBits[23]._object = (void *)v109;
  countAndFlagsBits[24]._countAndFlagsBits = v111;
  uint64_t v112 = countAndFlagsBits[14]._countAndFlagsBits;
  unint64_t v113 = countAndFlagsBits[14]._object;
  uint64_t v115 = countAndFlagsBits[13]._countAndFlagsBits;
  uint64_t v114 = countAndFlagsBits[13]._object;
  v116 = countAndFlagsBits[12]._object;
  uint64_t v117 = *(void (**)(void *, unint64_t, void *))(v115 + 16);
  v117(v113, v11[6] + *(void *)(v115 + 72) * v110, v116);
  (*(void (**)(uint64_t, void *, void *))(v115 + 32))(v112, v113, v116);
  v117(v114, v112, v116);
  uint64_t v118 = Logger.logObject.getter();
  os_log_type_t v119 = static os_log_type_t.default.getter();
  BOOL v120 = os_log_type_enabled(v118, v119);
  uint64_t v122 = countAndFlagsBits[13]._countAndFlagsBits;
  uint64_t v121 = countAndFlagsBits[13]._object;
  uint64_t v123 = countAndFlagsBits[12]._object;
  if (v120)
  {
    Swift::String v124 = (uint8_t *)swift_slowAlloc();
    v169[0] = swift_slowAlloc();
    *(_DWORD *)Swift::String v124 = v140;
    sub_100017ACC(&qword_1003F2C08, (void (*)(uint64_t))&type metadata accessor for Device);
    uint64_t v125 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t *p_countAndFlagsBits = sub_100037004(v125, v126, v169);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    countAndFlagsBits = v167;
    swift_bridgeObjectRelease();
    uint64_t v127 = *(void (**)(void *, void *))(v122 + 8);
    v127(v121, v123);
    _os_log_impl((void *)&_mh_execute_header, v118, v119, "LocalStorage added a device: %s", v124, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v127 = *(void (**)(void *, void *))(v122 + 8);
    v127(countAndFlagsBits[13]._object, countAndFlagsBits[12]._object);
  }

  countAndFlagsBits[24]._object = v127;
  uint64_t v128 = (void *)swift_task_alloc();
  countAndFlagsBits[25]._countAndFlagsBits = (uint64_t)v128;
  *uint64_t v128 = countAndFlagsBits;
  v128[1] = sub_100237920;
  uint64_t v129 = countAndFlagsBits[14]._countAndFlagsBits;
  uint64_t v130 = (uint64_t)countAndFlagsBits[6]._object;
  return sub_10024048C(v130, v129);
}

uint64_t sub_100237920()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100237A1C, 0, 0);
}

uint64_t sub_100237A1C()
{
  uint64_t v47 = v0;
  uint64_t v1 = *(void *)(v0 + 368);
  Connection.run(_:)();
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(v0 + 392);
  if (v1)
  {
    uint64_t v45 = *(void *)(v0 + 296);
    uint64_t v3 = *(void *)(v0 + 280);
    uint64_t v44 = *(void *)(v0 + 272);
    uint64_t v4 = *(void *)(v0 + 224);
    uint64_t v5 = *(void *)(v0 + 200);
    uint64_t v6 = *(void *)(v0 + 96);
    uint64_t v7 = *(void *)(v0 + 104);
    uint64_t v8 = *(void *)(v0 + 88);
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
    v2(v4, v5);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v45, v44);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
LABEL_3:
    return v9();
  }
  uint64_t v11 = *(void *)(v0 + 224);
  uint64_t v12 = *(void *)(v0 + 200);
  (*(void (**)(void, void))(*(void *)(v0 + 96) + 8))(*(void *)(v0 + 104), *(void *)(v0 + 88));
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v2)(v11, v12);
  int64_t v13 = *(void *)(v0 + 376);
  unint64_t v14 = *(void *)(v0 + 384);
  *(void *)(v0 + 368) = 0;
  if (!v14)
  {
    int64_t v36 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
    }
    else
    {
      int64_t v37 = (unint64_t)((1 << *(unsigned char *)(v0 + 408)) + 63) >> 6;
      uint64_t result = *(void *)(v0 + 360);
      if (v36 >= v37) {
        goto LABEL_28;
      }
      uint64_t v38 = result + 56;
      unint64_t v39 = *(void *)(result + 56 + 8 * v36);
      ++v13;
      if (v39)
      {
LABEL_17:
        uint64_t v15 = (v39 - 1) & v39;
        unint64_t v16 = __clz(__rbit64(v39)) + (v13 << 6);
        goto LABEL_8;
      }
      int64_t v13 = v36 + 1;
      if (v36 + 1 >= v37) {
        goto LABEL_28;
      }
      unint64_t v39 = *(void *)(v38 + 8 * v13);
      if (v39) {
        goto LABEL_17;
      }
      int64_t v13 = v36 + 2;
      if (v36 + 2 >= v37) {
        goto LABEL_28;
      }
      unint64_t v39 = *(void *)(v38 + 8 * v13);
      if (v39) {
        goto LABEL_17;
      }
      int64_t v40 = v36 + 3;
      if (v40 >= v37)
      {
LABEL_28:
        uint64_t v41 = *(void *)(v0 + 296);
        uint64_t v42 = *(void *)(v0 + 272);
        uint64_t v43 = *(void *)(v0 + 280);
        swift_release();
        swift_release();
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
        goto LABEL_3;
      }
      unint64_t v39 = *(void *)(v38 + 8 * v40);
      if (v39)
      {
        int64_t v13 = v40;
        goto LABEL_17;
      }
      while (1)
      {
        int64_t v13 = v40 + 1;
        if (__OFADD__(v40, 1)) {
          break;
        }
        if (v13 >= v37) {
          goto LABEL_28;
        }
        unint64_t v39 = *(void *)(v38 + 8 * v13);
        ++v40;
        if (v39) {
          goto LABEL_17;
        }
      }
    }
    __break(1u);
    return result;
  }
  uint64_t v15 = (v14 - 1) & v14;
  unint64_t v16 = __clz(__rbit64(v14)) | (v13 << 6);
  uint64_t result = *(void *)(v0 + 360);
LABEL_8:
  *(void *)(v0 + 376) = v13;
  *(void *)(v0 + 384) = v15;
  unint64_t v18 = *(void *)(v0 + 224);
  uint64_t v17 = *(void *)(v0 + 232);
  uint64_t v20 = *(void *)(v0 + 208);
  uint64_t v19 = *(void *)(v0 + 216);
  uint64_t v21 = *(void *)(v0 + 200);
  uint64_t v22 = *(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 16);
  v22(v17, *(void *)(result + 48) + *(void *)(v20 + 72) * v16, v21);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v20 + 32))(v18, v17, v21);
  v22(v19, v18, v21);
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.default.getter();
  BOOL v25 = os_log_type_enabled(v23, v24);
  uint64_t v27 = *(void *)(v0 + 208);
  uint64_t v26 = *(void *)(v0 + 216);
  uint64_t v28 = *(void *)(v0 + 200);
  if (v25)
  {
    char v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    *(_DWORD *)char v29 = 136315138;
    sub_100017ACC(&qword_1003F2C08, (void (*)(uint64_t))&type metadata accessor for Device);
    uint64_t v30 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 32) = sub_100037004(v30, v31, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    unint64_t v32 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v32(v26, v28);
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "LocalStorage added a device: %s", v29, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    unint64_t v32 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v32(*(void *)(v0 + 216), *(void *)(v0 + 200));
  }

  *(void *)(v0 + 392) = v32;
  unint64_t v33 = (void *)swift_task_alloc();
  *(void *)(v0 + 400) = v33;
  *unint64_t v33 = v0;
  v33[1] = sub_100237920;
  uint64_t v34 = *(void *)(v0 + 224);
  uint64_t v35 = *(void *)(v0 + 104);
  return sub_10024048C(v35, v34);
}

uint64_t sub_10023805C()
{
  uint64_t v1 = v0[37];
  uint64_t v2 = v0[34];
  uint64_t v3 = v0[35];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1002381AC()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1002382A8, 0, 0);
}

uint64_t sub_1002382A8()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[4];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    swift_release();
    sub_10000A520(v3, &qword_1003F2B70);
  }
  else
  {
    uint64_t v4 = v0[7];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v4, v3, v1);
    Connection.run(_:)();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v4, v1);
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1002383F8()
{
  v1[153] = v0;
  sub_100044014(&qword_1003EF6D8);
  v1[154] = swift_task_alloc();
  v1[155] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for Row();
  v1[156] = v2;
  v1[157] = *(void *)(v2 - 8);
  v1[158] = swift_task_alloc();
  v1[159] = swift_task_alloc();
  v1[160] = swift_task_alloc();
  return _swift_task_switch(sub_100238514, 0, 0);
}

uint64_t sub_100238514()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 1224) + 112);
  *(void *)(v0 + 1288) = v1;
  return _swift_task_switch(sub_100238538, v1, 0);
}

uint64_t sub_100238538()
{
  sub_100215780();
  *(void *)(v0 + 1296) = 0;
  uint64_t v1 = *(void *)(v0 + 1288);
  return _swift_task_switch(sub_100238630, v1, 0);
}

uint64_t sub_100238630()
{
  type metadata accessor for LocalStorageDatabase();
  sub_100017ACC(&qword_1003F2578, (void (*)(uint64_t))type metadata accessor for LocalStorageDatabase);
  *(void *)(v0 + 1304) = Database.readConnection.getter();
  return _swift_task_switch(sub_1002386E4, 0, 0);
}

uint64_t sub_1002386E4()
{
  if (!v0[163])
  {
    uint64_t v5 = type metadata accessor for DatabaseError();
    sub_100017ACC(&qword_1003EF6D0, (void (*)(uint64_t))&type metadata accessor for DatabaseError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v5 - 8) + 104))(v6, enum case for DatabaseError.notConnected(_:), v5);
    swift_willThrow();
    goto LABEL_27;
  }
  if (qword_1003EC0D8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[162];
  uint64_t v2 = type metadata accessor for Table();
  uint64_t v3 = sub_100044058(v2, (uint64_t)qword_10040B8E8);
  v0[151] = v2;
  v0[152] = (uint64_t)&protocol witness table for Table;
  uint64_t v4 = sub_10003E0F4(v0 + 148);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v4, v3, v2);
  Connection.prepare(_:)();
  if (v1)
  {
    swift_release();
    sub_1000233E4((uint64_t)(v0 + 148));
LABEL_27:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v32 = (uint64_t (*)(void))v0[1];
    return v32();
  }
  sub_1000233E4((uint64_t)(v0 + 148));
  uint64_t v7 = dispatch thunk of _AnySequenceBox._underestimatedCount.getter();
  sub_100245E68(0, v7 & ~(v7 >> 63), 0);
  swift_retain();
  dispatch thunk of _AnySequenceBox._makeIterator()();
  uint64_t result = swift_release();
  if (v7 < 0)
  {
    __break(1u);
LABEL_31:
    __break(1u);
    return result;
  }
  if (v7)
  {
    uint64_t v9 = v0[157];
    int64_t v10 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    uint64_t v11 = (void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
    uint64_t v35 = (void (**)(uint64_t, uint64_t))(v9 + 8);
    do
    {
      uint64_t v12 = v0[156];
      uint64_t v13 = v0[154];
      dispatch thunk of _AnyIteratorBoxBase.next()();
      uint64_t result = (*v10)(v13, 1, v12);
      if (result == 1) {
        goto LABEL_31;
      }
      uint64_t v14 = v0[158];
      (*v11)(v14, v0[154], v0[156]);
      sub_100247888(v14, v0 + 2);
      (*v35)(v0[154], v0[156]);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_100245E68(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v16 = _swiftEmptyArrayStorage[2];
      unint64_t v15 = _swiftEmptyArrayStorage[3];
      if (v16 >= v15 >> 1) {
        sub_100245E68(v15 > 1, v16 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v16 + 1;
      memcpy(&_swiftEmptyArrayStorage[73 * v16 + 4], v0 + 2, 0x241uLL);
    }
    while (--v7);
  }
  uint64_t v17 = v0[157];
  uint64_t v18 = v0[156];
  uint64_t v19 = v0[155];
  dispatch thunk of _AnyIteratorBoxBase.next()();
  uint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  if (v34(v19, 1, v18) != 1)
  {
    uint64_t v22 = v0[157];
    unint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32);
    uint64_t v23 = (void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16);
    os_log_type_t v24 = (void (**)(uint64_t, uint64_t))(v22 + 8);
    do
    {
      uint64_t v25 = v0[160];
      uint64_t v26 = v0[159];
      uint64_t v27 = v0[156];
      v33(v25, v0[155], v27);
      (*v23)(v26, v25, v27);
      sub_100247888(v26, v0 + 75);
      (*v24)(v0[160], v0[156]);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_100245E68(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v29 = _swiftEmptyArrayStorage[2];
      unint64_t v28 = _swiftEmptyArrayStorage[3];
      if (v29 >= v28 >> 1) {
        sub_100245E68(v28 > 1, v29 + 1, 1);
      }
      uint64_t v30 = v0[156];
      uint64_t v31 = v0[155];
      _swiftEmptyArrayStorage[2] = v29 + 1;
      memcpy(&_swiftEmptyArrayStorage[73 * v29 + 4], v0 + 75, 0x241uLL);
      dispatch thunk of _AnyIteratorBoxBase.next()();
    }
    while (v34(v31, 1, v30) != 1);
  }
  uint64_t v20 = v0[155];
  swift_release();
  sub_10000A520(v20, &qword_1003EF6D8);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(void *))v0[1];
  return v21(_swiftEmptyArrayStorage);
}

uint64_t sub_100238D24(uint64_t a1, uint64_t a2)
{
  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  uint64_t v4 = sub_100044014(&qword_1003EF230);
  v3[11] = v4;
  v3[12] = *(void *)(v4 - 8);
  v3[13] = swift_task_alloc();
  uint64_t v5 = sub_100044014(&qword_1003EF278);
  v3[14] = v5;
  v3[15] = *(void *)(v5 - 8);
  v3[16] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Table();
  v3[17] = v6;
  v3[18] = *(void *)(v6 - 8);
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Delete();
  v3[21] = v7;
  v3[22] = *(void *)(v7 - 8);
  v3[23] = swift_task_alloc();
  return _swift_task_switch(sub_100238F14, 0, 0);
}

uint64_t sub_100238F14()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 80) + 112);
  *(void *)(v0 + 192) = v1;
  return _swift_task_switch(sub_100238F38, v1, 0);
}

uint64_t sub_100238F38()
{
  sub_100215780();
  *(void *)(v0 + 200) = 0;
  uint64_t v1 = *(void *)(v0 + 192);
  return _swift_task_switch(sub_10023902C, v1, 0);
}

uint64_t sub_10023902C()
{
  type metadata accessor for LocalStorageDatabase();
  sub_100017ACC(&qword_1003F2578, (void (*)(uint64_t))type metadata accessor for LocalStorageDatabase);
  *(void *)(v0 + 208) = Database.writeConnection.getter();
  return _swift_task_switch(sub_1002390E0, 0, 0);
}

uint64_t sub_1002390E0()
{
  uint64_t v48 = v0;
  if (!v0[13]._countAndFlagsBits)
  {
    uint64_t v15 = type metadata accessor for DatabaseError();
    sub_100017ACC(&qword_1003EF6D0, (void (*)(uint64_t))&type metadata accessor for DatabaseError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v15 - 8) + 104))(v16, enum case for DatabaseError.notConnected(_:), v15);
    swift_willThrow();
    goto LABEL_9;
  }
  if (qword_1003EC0D8 != -1) {
    swift_once();
  }
  uint64_t countAndFlagsBits = v0[9]._countAndFlagsBits;
  object = v0[9]._object;
  uint64_t v3 = (uint64_t)v0[8]._object;
  uint64_t v4 = sub_100044058(v3, (uint64_t)qword_10040B8E8);
  (*(void (**)(void *, uint64_t, uint64_t))(countAndFlagsBits + 16))(object, v4, v3);
  if (qword_1003EC2C8 != -1) {
    swift_once();
  }
  p_uint64_t countAndFlagsBits = &v0[4]._countAndFlagsBits;
  uint64_t v44 = v0[12]._object;
  uint64_t v46 = v0;
  uint64_t v38 = v0[10]._countAndFlagsBits;
  uint64_t v6 = v0[9]._countAndFlagsBits;
  unint64_t v39 = v0[9]._object;
  uint64_t v7 = v0[8]._countAndFlagsBits;
  uint64_t v8 = v0[8]._object;
  uint64_t v9 = (void (**)(uint64_t, uint64_t))v0[7]._object;
  uint64_t v40 = v0[7]._countAndFlagsBits;
  uint64_t v11 = v0[6]._countAndFlagsBits;
  int64_t v10 = v0[6]._object;
  uint64_t v12 = (uint64_t)v0[5]._object;
  sub_100044058(v12, (uint64_t)qword_10040BED0);
  sub_100014FFC(&qword_1003EF238, &qword_1003EF230);
  ExpressionType<>.lowercaseString.getter();
  v0[1] = String.lowercased()();
  == infix<A>(_:_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(void *, uint64_t))(v11 + 8))(v10, v12);
  QueryType.filter(_:)();
  v9[1](v7, v40);
  uint64_t v13 = *(void (**)(void *, void *))(v6 + 8);
  v13(v39, v8);
  QueryType.delete()();
  v13((void *)v38, v8);
  uint64_t v14 = Connection.run(_:)();
  if (v44)
  {
    uint64_t v0 = v46;
    (*(void (**)(void *, void *))(v46[11]._countAndFlagsBits + 8))(v46[11]._object, v46[10]._object);
    swift_release();
LABEL_9:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(void))v0->_object;
    goto LABEL_22;
  }
  uint64_t v18 = v14;
  uint64_t v19 = v46;
  if (v14 == 1)
  {
    if (qword_1003EC3F0 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_100044058(v20, (uint64_t)qword_10040C248);
    swift_bridgeObjectRetain_n();
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.default.getter();
    BOOL v23 = os_log_type_enabled(v21, v22);
    uint64_t v25 = v46[11]._countAndFlagsBits;
    os_log_type_t v24 = v46[11]._object;
    uint64_t v26 = v46[10]._object;
    unint64_t v27 = (unint64_t)v46[4]._object;
    if (v23)
    {
      uint64_t v45 = v46[11]._object;
      uint64_t v41 = *p_countAndFlagsBits;
      uint64_t v42 = v46[10]._object;
      uint64_t v28 = swift_slowAlloc();
      v47[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136446466;
      v46[3]._uint64_t countAndFlagsBits = sub_100037004(0xD00000000000001CLL, 0x8000000100378590, v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v28 + 12) = 2082;
      swift_bridgeObjectRetain();
      v46[3]._object = (void *)sub_100037004(v41, v27, v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "%{public}s: fence deleted: %{public}s", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v19 = v46;
      swift_slowDealloc();
      swift_release();

      (*(void (**)(void *, void *))(v25 + 8))(v45, v42);
    }
    else
    {
      swift_release();

      swift_bridgeObjectRelease_n();
      (*(void (**)(void *, void *))(v25 + 8))(v24, v26);
    }
  }
  else
  {
    if (qword_1003EC3F0 != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    sub_100044058(v29, (uint64_t)qword_10040C248);
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.error.getter();
    BOOL v32 = os_log_type_enabled(v30, v31);
    uint64_t v34 = v46[11]._countAndFlagsBits;
    unint64_t v33 = v46[11]._object;
    uint64_t v35 = v46[10]._object;
    if (v32)
    {
      uint64_t v43 = v46[10]._object;
      uint64_t v36 = swift_slowAlloc();
      v47[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v36 = 136446466;
      v46[2]._uint64_t countAndFlagsBits = sub_100037004(0xD00000000000001CLL, 0x8000000100378590, v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v36 + 12) = 2050;
      v46[2]._object = (void *)v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "%{public}s: did not delete fence. DeletedRows: %{public}ld", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_release();

      (*(void (**)(void *, void *))(v34 + 8))(v33, v43);
    }
    else
    {
      swift_release();

      (*(void (**)(void *, void *))(v34 + 8))(v33, v35);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v19->_object;
LABEL_22:
  return v17();
}

uint64_t sub_100239868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[450] = v3;
  v4[449] = a3;
  v4[448] = a2;
  v4[447] = a1;
  sub_100044014(&qword_1003EF6D8);
  v4[451] = swift_task_alloc();
  v4[452] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Row();
  v4[453] = v5;
  v4[454] = *(void *)(v5 - 8);
  v4[455] = swift_task_alloc();
  v4[456] = swift_task_alloc();
  v4[457] = swift_task_alloc();
  uint64_t v6 = sub_100044014(&qword_1003EF230);
  v4[458] = v6;
  v4[459] = *(void *)(v6 - 8);
  v4[460] = swift_task_alloc();
  uint64_t v7 = sub_100044014(&qword_1003EF278);
  v4[461] = v7;
  v4[462] = *(void *)(v7 - 8);
  v4[463] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Table();
  v4[464] = v8;
  v4[465] = *(void *)(v8 - 8);
  v4[466] = swift_task_alloc();
  v4[467] = swift_task_alloc();
  return _swift_task_switch(sub_100239ABC, 0, 0);
}

uint64_t sub_100239ABC()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 3600) + 112);
  *(void *)(v0 + 3744) = v1;
  return _swift_task_switch(sub_100239AE0, v1, 0);
}

uint64_t sub_100239AE0()
{
  sub_100215780();
  *(void *)(v0 + 3752) = 0;
  uint64_t v1 = *(void *)(v0 + 3744);
  return _swift_task_switch(sub_100239C20, v1, 0);
}

uint64_t sub_100239C20()
{
  type metadata accessor for LocalStorageDatabase();
  sub_100017ACC(&qword_1003F2578, (void (*)(uint64_t))type metadata accessor for LocalStorageDatabase);
  *(void *)(v0 + 3760) = Database.readConnection.getter();
  return _swift_task_switch(sub_100239CD4, 0, 0);
}

uint64_t sub_100239CD4()
{
  if (*(void *)(v0 + 3760))
  {
    if (qword_1003EC0D8 != -1) {
      swift_once();
    }
    char v53 = (uint64_t *)(v0 + 3520);
    uint64_t v1 = *(void *)(v0 + 3728);
    uint64_t v2 = *(void *)(v0 + 3720);
    uint64_t v3 = *(void *)(v0 + 3712);
    uint64_t v4 = sub_100044058(v3, (uint64_t)qword_10040B8E8);
    uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
    v49(v1, v4, v3);
    if (qword_1003EC2C8 != -1) {
      swift_once();
    }
    uint64_t v48 = *(void *)(v0 + 3752);
    uint64_t v44 = *(void *)(v0 + 3736);
    uint64_t v45 = *(void *)(v0 + 3728);
    uint64_t v51 = *(void *)(v0 + 3720);
    uint64_t v5 = *(void *)(v0 + 3712);
    uint64_t v6 = *(void *)(v0 + 3704);
    uint64_t v7 = *(void *)(v0 + 3696);
    __src = *(void **)(v0 + 3688);
    uint64_t v8 = *(void *)(v0 + 3680);
    uint64_t v9 = *(void *)(v0 + 3672);
    uint64_t v10 = *(void *)(v0 + 3664);
    sub_100044058(v10, (uint64_t)qword_10040BED0);
    sub_100014FFC(&qword_1003EF238, &qword_1003EF230);
    ExpressionType<>.lowercaseString.getter();
    *(Swift::String *)(v0 + 3560) = String.lowercased()();
    == infix<A>(_:_:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    QueryType.filter(_:)();
    (*(void (**)(uint64_t, void *))(v7 + 8))(v6, __src);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
    v11(v45, v5);
    *(void *)(v0 + 3544) = v5;
    *(void *)(v0 + 3552) = &protocol witness table for Table;
    uint64_t v12 = sub_10003E0F4(v53);
    v49((uint64_t)v12, v44, v5);
    Connection.prepare(_:)();
    if (!v48)
    {
      sub_1000233E4((uint64_t)v53);
      uint64_t v15 = dispatch thunk of _AnySequenceBox._underestimatedCount.getter();
      sub_100245E68(0, v15 & ~(v15 >> 63), 0);
      swift_retain();
      dispatch thunk of _AnySequenceBox._makeIterator()();
      uint64_t result = swift_release();
      if (v15 < 0)
      {
        __break(1u);
      }
      else
      {
        if (!v15)
        {
LABEL_18:
          uint64_t v25 = *(void *)(v0 + 3632);
          uint64_t v26 = *(void *)(v0 + 3624);
          uint64_t v27 = *(void *)(v0 + 3616);
          dispatch thunk of _AnyIteratorBoxBase.next()();
          unint64_t v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
          if (v50(v27, 1, v26) != 1)
          {
            uint64_t v30 = (void *)(v0 + 600);
            uint64_t v31 = *(void *)(v0 + 3632);
            uint64_t v47 = *(void (**)(uint64_t, void, uint64_t))(v31 + 32);
            BOOL v32 = (void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16);
            unint64_t v33 = (void (**)(void, void))(v31 + 8);
            do
            {
              uint64_t v34 = *(void *)(v0 + 3656);
              uint64_t v35 = *(void *)(v0 + 3648);
              uint64_t v36 = *(void *)(v0 + 3624);
              v47(v34, *(void *)(v0 + 3616), v36);
              (*v32)(v35, v34, v36);
              sub_100247888(v35, v30);
              (*v33)(*(void *)(v0 + 3656), *(void *)(v0 + 3624));
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                sub_100245E68(0, _swiftEmptyArrayStorage[2] + 1, 1);
              }
              unint64_t v38 = _swiftEmptyArrayStorage[2];
              unint64_t v37 = _swiftEmptyArrayStorage[3];
              if (v38 >= v37 >> 1) {
                sub_100245E68(v37 > 1, v38 + 1, 1);
              }
              uint64_t v39 = *(void *)(v0 + 3624);
              uint64_t v40 = *(void *)(v0 + 3616);
              _swiftEmptyArrayStorage[2] = v38 + 1;
              uint64_t v41 = &_swiftEmptyArrayStorage[73 * v38 + 4];
              uint64_t v30 = (void *)(v0 + 600);
              memcpy(v41, (const void *)(v0 + 600), 0x241uLL);
              dispatch thunk of _AnyIteratorBoxBase.next()();
            }
            while (v50(v40, 1, v39) != 1);
          }
          uint64_t v28 = *(void *)(v0 + 3616);
          swift_release();
          sub_10000A520(v28, &qword_1003EF6D8);
          swift_release();
          if (_swiftEmptyArrayStorage[2])
          {
            memcpy((void *)(v0 + 1768), &_swiftEmptyArrayStorage[4], 0x241uLL);
            memmove((void *)(v0 + 2936), &_swiftEmptyArrayStorage[4], 0x241uLL);
            nullsub_1(v0 + 2936);
            sub_1000621F0(v0 + 1768);
            swift_release();
            swift_release();
            uint64_t v29 = v0 + 2936;
          }
          else
          {
            swift_release();
            swift_release();
            sub_10024760C((_OWORD *)(v0 + 1184));
            uint64_t v29 = v0 + 1184;
          }
          sub_100013B50(v29, v0 + 2352, &qword_1003F03D0);
          uint64_t v42 = *(void *)(v0 + 3576);
          v11(*(void *)(v0 + 3736), *(void *)(v0 + 3712));
          sub_100013B50(v0 + 2352, v42, &qword_1003F03D0);
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v43 = *(uint64_t (**)(void))(v0 + 8);
          goto LABEL_31;
        }
        uint64_t v17 = *(void *)(v0 + 3632);
        uint64_t v18 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
        uint64_t v19 = (void (**)(uint64_t, void, void))(v17 + 16);
        uint64_t v52 = (void (**)(void, void))(v17 + 8);
        while (1)
        {
          uint64_t v20 = *(void *)(v0 + 3624);
          uint64_t v21 = *(void *)(v0 + 3608);
          dispatch thunk of _AnyIteratorBoxBase.next()();
          uint64_t result = (*v18)(v21, 1, v20);
          if (result == 1) {
            break;
          }
          uint64_t v22 = *(void *)(v0 + 3640);
          (*v19)(v22, *(void *)(v0 + 3608), *(void *)(v0 + 3624));
          sub_100247888(v22, (void *)(v0 + 16));
          (*v52)(*(void *)(v0 + 3608), *(void *)(v0 + 3624));
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_100245E68(0, _swiftEmptyArrayStorage[2] + 1, 1);
          }
          unint64_t v24 = _swiftEmptyArrayStorage[2];
          unint64_t v23 = _swiftEmptyArrayStorage[3];
          if (v24 >= v23 >> 1) {
            sub_100245E68(v23 > 1, v24 + 1, 1);
          }
          _swiftEmptyArrayStorage[2] = v24 + 1;
          memcpy(&_swiftEmptyArrayStorage[73 * v24 + 4], (const void *)(v0 + 16), 0x241uLL);
          if (!--v15) {
            goto LABEL_18;
          }
        }
      }
      __break(1u);
      return result;
    }
    v11(*(void *)(v0 + 3736), *(void *)(v0 + 3712));
    swift_release();
    sub_1000233E4((uint64_t)v53);
  }
  else
  {
    uint64_t v13 = type metadata accessor for DatabaseError();
    sub_100017ACC(&qword_1003EF6D0, (void (*)(uint64_t))&type metadata accessor for DatabaseError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v13 - 8) + 104))(v14, enum case for DatabaseError.notConnected(_:), v13);
    swift_willThrow();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v43 = *(uint64_t (**)(void))(v0 + 8);
LABEL_31:
  return v43();
}

uint64_t sub_10023A5EC(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = type metadata accessor for Connection.TransactionMode();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return _swift_task_switch(sub_10023A6AC, 0, 0);
}

uint64_t sub_10023A6AC()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) + 112);
  *(void *)(v0 + 56) = v1;
  return _swift_task_switch(sub_10023A6D0, v1, 0);
}

uint64_t sub_10023A6D0()
{
  sub_100215780();
  *(void *)(v0 + 64) = 0;
  uint64_t v1 = *(void *)(v0 + 56);
  return _swift_task_switch(sub_10023A78C, v1, 0);
}

uint64_t sub_10023A78C()
{
  type metadata accessor for LocalStorageDatabase();
  sub_100017ACC(&qword_1003F2578, (void (*)(uint64_t))type metadata accessor for LocalStorageDatabase);
  *(void *)(v0 + 72) = Database.writeConnection.getter();
  return _swift_task_switch(sub_10023A840, 0, 0);
}

uint64_t sub_10023A840()
{
  uint64_t v1 = *(void *)(v0 + 72);
  if (v1)
  {
    uint64_t v3 = *(void *)(v0 + 40);
    uint64_t v2 = *(void *)(v0 + 48);
    uint64_t v4 = *(void *)(v0 + 32);
    uint64_t v5 = swift_task_alloc();
    long long v6 = *(_OWORD *)(v0 + 16);
    *(void *)(v5 + 16) = v1;
    *(_OWORD *)(v5 + 24) = v6;
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v2, enum case for Connection.TransactionMode.deferred(_:), v4);
    Connection.transaction(_:block:)();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    swift_release();
    swift_task_dealloc();
  }
  else
  {
    uint64_t v7 = type metadata accessor for DatabaseError();
    sub_100017ACC(&qword_1003EF6D0, (void (*)(uint64_t))&type metadata accessor for DatabaseError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v7 - 8) + 104))(v8, enum case for DatabaseError.notConnected(_:), v7);
    swift_willThrow();
  }
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_10023A9FC()
{
  v1[19] = v0;
  sub_100044014(&qword_1003F1868);
  v1[20] = swift_task_alloc();
  v1[21] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for URL();
  v1[22] = v2;
  v1[23] = *(void *)(v2 - 8);
  v1[24] = swift_task_alloc();
  v1[25] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for ShareInvitationRecord();
  v1[26] = v3;
  v1[27] = *(void *)(v3 - 8);
  v1[28] = swift_task_alloc();
  v1[29] = swift_task_alloc();
  sub_100044014(&qword_1003EF6D8);
  v1[30] = swift_task_alloc();
  v1[31] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Row();
  v1[32] = v4;
  v1[33] = *(void *)(v4 - 8);
  v1[34] = swift_task_alloc();
  v1[35] = swift_task_alloc();
  v1[36] = swift_task_alloc();
  return _swift_task_switch(sub_10023AC30, 0, 0);
}

uint64_t sub_10023AC30()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 152) + 112);
  *(void *)(v0 + 296) = v1;
  return _swift_task_switch(sub_10023AC54, v1, 0);
}

uint64_t sub_10023AC54()
{
  sub_100215780();
  *(void *)(v0 + 304) = 0;
  uint64_t v1 = *(void *)(v0 + 296);
  return _swift_task_switch(sub_10023ADA0, v1, 0);
}

uint64_t sub_10023ADA0()
{
  type metadata accessor for LocalStorageDatabase();
  sub_100017ACC(&qword_1003F2578, (void (*)(uint64_t))type metadata accessor for LocalStorageDatabase);
  *(void *)(v0 + 312) = Database.readConnection.getter();
  return _swift_task_switch(sub_10023AE54, 0, 0);
}

uint64_t sub_10023AE54()
{
  if (!*(void *)(v0 + 312))
  {
    uint64_t v5 = type metadata accessor for DatabaseError();
    sub_100017ACC(&qword_1003EF6D0, (void (*)(uint64_t))&type metadata accessor for DatabaseError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v5 - 8) + 104))(v6, enum case for DatabaseError.notConnected(_:), v5);
    swift_willThrow();
    goto LABEL_40;
  }
  if (qword_1003EC0D0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 304);
  uint64_t v2 = type metadata accessor for Table();
  uint64_t v3 = sub_100044058(v2, (uint64_t)qword_10040B8D0);
  *(void *)(v0 + 40) = v2;
  *(void *)(v0 + 48) = &protocol witness table for Table;
  uint64_t v4 = sub_10003E0F4((uint64_t *)(v0 + 16));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v4, v3, v2);
  Connection.prepare(_:)();
  if (v1)
  {
    swift_release();
    sub_1000233E4(v0 + 16);
LABEL_40:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v76 = *(uint64_t (**)(void))(v0 + 8);
    return v76();
  }
  sub_1000233E4(v0 + 16);
  uint64_t v7 = dispatch thunk of _AnySequenceBox._underestimatedCount.getter();
  sub_100245E88(0, v7 & ~(v7 >> 63), 0);
  swift_retain();
  dispatch thunk of _AnySequenceBox._makeIterator()();
  uint64_t result = swift_release();
  if (v7 < 0)
  {
    __break(1u);
LABEL_44:
    __break(1u);
    return result;
  }
  if (v7)
  {
    uint64_t v9 = *(void *)(v0 + 264);
    uint64_t v93 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    uint64_t v10 = *(void *)(v0 + 184);
    uint64_t v90 = (void (**)(void, void, void))(v9 + 16);
    BOOL v88 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    uint64_t v84 = (void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    uint64_t v86 = (void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
    uint64_t v80 = *(void *)(v0 + 208);
    uint64_t v82 = *(void *)(v0 + 216);
    uint64_t v92 = (void (**)(uint64_t, uint64_t))(v9 + 8);
    uint64_t v78 = (void (**)(uint64_t, uint64_t))(v10 + 8);
    do
    {
      uint64_t v11 = *(void *)(v0 + 256);
      uint64_t v12 = *(void *)(v0 + 240);
      dispatch thunk of _AnyIteratorBoxBase.next()();
      uint64_t result = (*v93)(v12, 1, v11);
      if (result == 1) {
        goto LABEL_44;
      }
      (*v90)(*(void *)(v0 + 272), *(void *)(v0 + 240), *(void *)(v0 + 256));
      if (qword_1003EC270 != -1) {
        swift_once();
      }
      uint64_t v13 = *(void *)(v0 + 176);
      uint64_t v14 = *(void *)(v0 + 160);
      uint64_t v15 = sub_100044014(&qword_1003EF230);
      sub_100044058(v15, (uint64_t)qword_10040BDC8);
      Row.subscript.getter();
      URL.init(string:)();
      swift_bridgeObjectRelease();
      int v16 = (*v88)(v14, 1, v13);
      uint64_t v17 = *(void *)(v0 + 160);
      if (v16 == 1)
      {
        uint64_t v63 = *(void *)(v0 + 272);
        uint64_t v64 = *(void *)(v0 + 256);
        uint64_t v96 = *(void *)(v0 + 240);
        sub_10000A520(v17, &qword_1003F1868);
        uint64_t v65 = type metadata accessor for GenericError();
        sub_100017ACC((unint64_t *)&qword_1003ECD00, (void (*)(uint64_t))&type metadata accessor for GenericError);
        swift_allocError();
        uint64_t v67 = v66;
        _StringGuts.grow(_:)(27);
        swift_bridgeObjectRelease();
        Row.subscript.getter();
        String.append(_:)(*(Swift::String *)(v0 + 72));
        swift_bridgeObjectRelease();
        *uint64_t v67 = 0xD000000000000019;
        v67[1] = 0x80000001003785B0;
        (*(void (**)(void *, void, uint64_t))(*(void *)(v65 - 8) + 104))(v67, enum case for GenericError.error(_:), v65);
        swift_willThrow();
        uint64_t v68 = *v92;
        (*v92)(v63, v64);
        swift_release();
        swift_release();
        v68(v96, v64);
        goto LABEL_39;
      }
      uint64_t v95 = v7;
      uint64_t v18 = *(void *)(v0 + 224);
      uint64_t v19 = *(void *)(v0 + 192);
      uint64_t v20 = *(void *)(v0 + 176);
      (*v86)(v19, v17, v20);
      (*v84)(v18, v19, v20);
      if (qword_1003EC278 != -1) {
        swift_once();
      }
      uint64_t v21 = *(void *)(v0 + 272);
      uint64_t v22 = *(void *)(v0 + 256);
      uint64_t v23 = *(void *)(v0 + 240);
      uint64_t v24 = *(void *)(v0 + 224);
      uint64_t v25 = *(void *)(v0 + 192);
      uint64_t v26 = *(void *)(v0 + 176);
      uint64_t v27 = sub_100044014(&qword_1003EF1F0);
      sub_100044058(v27, (uint64_t)qword_10040BDE0);
      Row.subscript.getter();
      uint64_t v28 = *v92;
      (*v92)(v21, v22);
      (*v78)(v25, v26);
      *(_OWORD *)(v24 + *(int *)(v80 + 20)) = *(_OWORD *)(v0 + 88);
      v28(v23, v22);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_100245E88(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v30 = _swiftEmptyArrayStorage[2];
      unint64_t v29 = _swiftEmptyArrayStorage[3];
      if (v30 >= v29 >> 1) {
        sub_100245E88(v29 > 1, v30 + 1, 1);
      }
      uint64_t v31 = *(void *)(v0 + 224);
      _swiftEmptyArrayStorage[2] = v30 + 1;
      sub_10003E068(v31, (uint64_t)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80))+ *(void *)(v82 + 72) * v30, (uint64_t (*)(void))type metadata accessor for ShareInvitationRecord);
      uint64_t v7 = v95 - 1;
    }
    while (v95 != 1);
  }
  uint64_t v32 = *(void *)(v0 + 256);
  uint64_t v33 = *(void *)(v0 + 264);
  uint64_t v34 = *(void *)(v0 + 248);
  dispatch thunk of _AnyIteratorBoxBase.next()();
  unint64_t v94 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
  if (v94(v34, 1, v32) != 1)
  {
    uint64_t v37 = *(void *)(v0 + 264);
    unint64_t v38 = *(void (**)(uint64_t, void, uint64_t))(v37 + 32);
    v37 += 32;
    unint64_t v89 = (void (**)(uint64_t, uint64_t, uint64_t))(v37 - 16);
    uint64_t v91 = v38;
    uint64_t v39 = *(void *)(v0 + 184);
    os_log_type_t v87 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48);
    Swift::String v83 = (void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16);
    uint64_t v85 = (void (**)(uint64_t, void, uint64_t))(v39 + 32);
    uint64_t v79 = *(void *)(v0 + 208);
    uint64_t v81 = *(void *)(v0 + 216);
    uint64_t v40 = (void (**)(uint64_t, uint64_t))(v37 - 24);
    uint64_t v77 = (void (**)(uint64_t, uint64_t))(v39 + 8);
    while (1)
    {
      uint64_t v41 = *(void *)(v0 + 280);
      uint64_t v42 = *(void *)(v0 + 288);
      uint64_t v43 = *(void *)(v0 + 256);
      v91(v42, *(void *)(v0 + 248), v43);
      (*v89)(v41, v42, v43);
      if (qword_1003EC270 != -1) {
        swift_once();
      }
      uint64_t v45 = *(void *)(v0 + 168);
      uint64_t v44 = *(void *)(v0 + 176);
      uint64_t v46 = sub_100044014(&qword_1003EF230);
      sub_100044058(v46, (uint64_t)qword_10040BDC8);
      Row.subscript.getter();
      URL.init(string:)();
      swift_bridgeObjectRelease();
      if ((*v87)(v45, 1, v44) == 1) {
        break;
      }
      uint64_t v47 = *(void *)(v0 + 232);
      uint64_t v48 = *(void *)(v0 + 200);
      uint64_t v49 = *(void *)(v0 + 176);
      (*v85)(v48, *(void *)(v0 + 168), v49);
      (*v83)(v47, v48, v49);
      if (qword_1003EC278 != -1) {
        swift_once();
      }
      uint64_t v51 = *(void *)(v0 + 280);
      uint64_t v50 = *(void *)(v0 + 288);
      uint64_t v52 = *(void *)(v0 + 256);
      uint64_t v53 = *(void *)(v0 + 232);
      uint64_t v54 = *(void *)(v0 + 200);
      uint64_t v55 = *(void *)(v0 + 176);
      uint64_t v56 = sub_100044014(&qword_1003EF1F0);
      sub_100044058(v56, (uint64_t)qword_10040BDE0);
      Row.subscript.getter();
      uint64_t v57 = *v40;
      (*v40)(v51, v52);
      (*v77)(v54, v55);
      *(_OWORD *)(v53 + *(int *)(v79 + 20)) = *(_OWORD *)(v0 + 136);
      v57(v50, v52);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_100245E88(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v59 = _swiftEmptyArrayStorage[2];
      unint64_t v58 = _swiftEmptyArrayStorage[3];
      if (v59 >= v58 >> 1) {
        sub_100245E88(v58 > 1, v59 + 1, 1);
      }
      uint64_t v61 = *(void *)(v0 + 248);
      uint64_t v60 = *(void *)(v0 + 256);
      uint64_t v62 = *(void *)(v0 + 232);
      _swiftEmptyArrayStorage[2] = v59 + 1;
      sub_10003E068(v62, (uint64_t)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80))+ *(void *)(v81 + 72) * v59, (uint64_t (*)(void))type metadata accessor for ShareInvitationRecord);
      dispatch thunk of _AnyIteratorBoxBase.next()();
      if (v94(v61, 1, v60) == 1) {
        goto LABEL_22;
      }
    }
    uint64_t v69 = *(void *)(v0 + 280);
    uint64_t v70 = *(void *)(v0 + 288);
    uint64_t v71 = *(void *)(v0 + 256);
    sub_10000A520(*(void *)(v0 + 168), &qword_1003F1868);
    uint64_t v72 = type metadata accessor for GenericError();
    sub_100017ACC((unint64_t *)&qword_1003ECD00, (void (*)(uint64_t))&type metadata accessor for GenericError);
    swift_allocError();
    uint64_t v74 = v73;
    _StringGuts.grow(_:)(27);
    swift_bridgeObjectRelease();
    Row.subscript.getter();
    String.append(_:)(*(Swift::String *)(v0 + 120));
    swift_bridgeObjectRelease();
    *uint64_t v74 = 0xD000000000000019;
    v74[1] = 0x80000001003785B0;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v72 - 8) + 104))(v74, enum case for GenericError.error(_:), v72);
    swift_willThrow();
    uint64_t v75 = *v40;
    (*v40)(v69, v71);
    v75(v70, v71);
    swift_release();
    swift_release();
LABEL_39:
    swift_release();
    swift_release();
    goto LABEL_40;
  }
LABEL_22:
  uint64_t v35 = *(void *)(v0 + 248);
  swift_release();
  sub_10000A520(v35, &qword_1003EF6D8);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v36 = *(uint64_t (**)(void *))(v0 + 8);
  return v36(_swiftEmptyArrayStorage);
}

uint64_t sub_10023BBB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[8] = a3;
  v4[9] = v3;
  v4[6] = a1;
  v4[7] = a2;
  uint64_t v5 = type metadata accessor for OnConflict();
  v4[10] = v5;
  v4[11] = *(void *)(v5 - 8);
  v4[12] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Table();
  v4[13] = v6;
  v4[14] = *(void *)(v6 - 8);
  v4[15] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Insert();
  v4[16] = v7;
  v4[17] = *(void *)(v7 - 8);
  v4[18] = swift_task_alloc();
  v4[19] = type metadata accessor for ShareInvitationRecord();
  v4[20] = swift_task_alloc();
  return _swift_task_switch(sub_10023BD5C, 0, 0);
}

uint64_t sub_10023BD5C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 72) + 112);
  *(void *)(v0 + 168) = v1;
  return _swift_task_switch(sub_10023BD80, v1, 0);
}

uint64_t sub_10023BD80()
{
  sub_100215780();
  *(void *)(v0 + 176) = 0;
  uint64_t v1 = *(void *)(v0 + 168);
  return _swift_task_switch(sub_10023BE6C, v1, 0);
}

uint64_t sub_10023BE6C()
{
  type metadata accessor for LocalStorageDatabase();
  sub_100017ACC(&qword_1003F2578, (void (*)(uint64_t))type metadata accessor for LocalStorageDatabase);
  *(void *)(v0 + 184) = Database.writeConnection.getter();
  return _swift_task_switch(sub_10023BF20, 0, 0);
}

uint64_t sub_10023BF20()
{
  if (!*(void *)(v0 + 184))
  {
    uint64_t v28 = type metadata accessor for DatabaseError();
    sub_100017ACC(&qword_1003EF6D0, (void (*)(uint64_t))&type metadata accessor for DatabaseError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v28 - 8) + 104))(v29, enum case for DatabaseError.notConnected(_:), v28);
    swift_willThrow();
    goto LABEL_11;
  }
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v4 = *(void *)(v0 + 56);
  unint64_t v3 = *(void *)(v0 + 64);
  uint64_t v5 = *(void *)(v0 + 48);
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(v2, v5, v6);
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(v1 + 20));
  *uint64_t v7 = v4;
  v7[1] = v3;
  uint64_t v33 = v7;
  sub_100022C64(v4, v3);
  if (qword_1003EC0D0 != -1) {
    swift_once();
  }
  uint64_t v8 = *(void *)(v0 + 112);
  uint64_t v9 = *(void *)(v0 + 120);
  uint64_t v11 = *(void *)(v0 + 96);
  uint64_t v10 = *(void *)(v0 + 104);
  uint64_t v13 = *(void *)(v0 + 80);
  uint64_t v12 = *(void *)(v0 + 88);
  uint64_t v14 = sub_100044058(v10, (uint64_t)qword_10040B8D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v9, v14, v10);
  (*(void (**)(uint64_t, void, uint64_t))(v12 + 104))(v11, enum case for OnConflict.replace(_:), v13);
  sub_100044014(&qword_1003EF7C8);
  type metadata accessor for Setter();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1003677A0;
  if (qword_1003EC270 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_100044014(&qword_1003EF230);
  sub_100044058(v15, (uint64_t)qword_10040BDC8);
  *(void *)(v0 + 16) = URL.absoluteString.getter();
  *(void *)(v0 + 24) = v16;
  <- infix<A>(_:_:)();
  swift_bridgeObjectRelease();
  if (qword_1003EC278 != -1) {
    swift_once();
  }
  uint64_t v32 = *(void *)(v0 + 176);
  uint64_t v17 = *(void *)(v0 + 112);
  uint64_t v18 = *(void *)(v0 + 120);
  uint64_t v20 = *(void *)(v0 + 96);
  uint64_t v19 = *(void *)(v0 + 104);
  uint64_t v21 = *(void *)(v0 + 80);
  uint64_t v22 = *(void *)(v0 + 88);
  uint64_t v23 = sub_100044014(&qword_1003EF1F0);
  sub_100044058(v23, (uint64_t)qword_10040BDE0);
  *(_OWORD *)(v0 + 32) = *(_OWORD *)v33;
  <- infix<A>(_:_:)();
  QueryType.insert(or:_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v19);
  Connection.run(_:)();
  uint64_t v24 = *(void *)(v0 + 160);
  uint64_t v25 = *(void *)(v0 + 136);
  uint64_t v26 = *(void *)(v0 + 144);
  uint64_t v27 = *(void *)(v0 + 128);
  if (v32)
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v26, v27);
    sub_100044BDC(v24, (uint64_t (*)(void))type metadata accessor for ShareInvitationRecord);
LABEL_11:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_13;
  }
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v26, v27);
  sub_100044BDC(v24, (uint64_t (*)(void))type metadata accessor for ShareInvitationRecord);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
LABEL_13:
  return v30();
}

uint64_t sub_10023C430(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = sub_100044014(&qword_1003EF278);
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Table();
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Delete();
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  return _swift_task_switch(sub_10023C5BC, 0, 0);
}

uint64_t sub_10023C5BC()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + 112);
  *(void *)(v0 + 128) = v1;
  return _swift_task_switch(sub_10023C5E0, v1, 0);
}

uint64_t sub_10023C5E0()
{
  sub_100215780();
  *(void *)(v0 + 136) = 0;
  uint64_t v1 = *(void *)(v0 + 128);
  return _swift_task_switch(sub_10023C6C8, v1, 0);
}

uint64_t sub_10023C6C8()
{
  type metadata accessor for LocalStorageDatabase();
  sub_100017ACC(&qword_1003F2578, (void (*)(uint64_t))type metadata accessor for LocalStorageDatabase);
  *(void *)(v0 + 144) = Database.writeConnection.getter();
  return _swift_task_switch(sub_10023C77C, 0, 0);
}

uint64_t sub_10023C77C()
{
  if (!v0[18])
  {
    uint64_t v16 = type metadata accessor for DatabaseError();
    sub_100017ACC(&qword_1003EF6D0, (void (*)(uint64_t))&type metadata accessor for DatabaseError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v16 - 8) + 104))(v17, enum case for DatabaseError.notConnected(_:), v16);
    swift_willThrow();
    goto LABEL_9;
  }
  if (qword_1003EC0D0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[9];
  uint64_t v4 = sub_100044058(v3, (uint64_t)qword_10040B8D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v2, v4, v3);
  if (qword_1003EC270 != -1) {
    swift_once();
  }
  uint64_t v6 = v0[11];
  uint64_t v5 = v0[12];
  uint64_t v8 = v0[9];
  uint64_t v7 = v0[10];
  uint64_t v9 = v0[7];
  uint64_t v10 = v0[8];
  uint64_t v20 = v0[6];
  uint64_t v21 = v0[17];
  uint64_t v11 = sub_100044014(&qword_1003EF230);
  sub_100044058(v11, (uint64_t)qword_10040BDC8);
  v0[2] = URL.absoluteString.getter();
  v0[3] = v12;
  == infix<A>(_:_:)();
  swift_bridgeObjectRelease();
  QueryType.filter(_:)();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v20);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v13(v6, v8);
  QueryType.delete()();
  v13(v5, v8);
  Connection.run(_:)();
  uint64_t v14 = v0[14];
  uint64_t v15 = v0[13];
  if (v21)
  {
    (*(void (**)(void, uint64_t))(v14 + 8))(v0[15], v15);
    swift_release();
LABEL_9:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    goto LABEL_11;
  }
  (*(void (**)(void, uint64_t))(v14 + 8))(v0[15], v15);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
LABEL_11:
  return v18();
}

uint64_t sub_10023CAE8(uint64_t a1, uint64_t a2)
{
  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  uint64_t v4 = type metadata accessor for FenceTriggerRecord();
  v3[10] = v4;
  v3[11] = *(void *)(v4 - 8);
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  sub_100044014(&qword_1003EF6D8);
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Row();
  v3[16] = v5;
  v3[17] = *(void *)(v5 - 8);
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for UUID();
  v3[21] = v6;
  v3[22] = *(void *)(v6 - 8);
  v3[23] = swift_task_alloc();
  uint64_t v7 = sub_100044014(&qword_1003EF278);
  v3[24] = v7;
  v3[25] = *(void *)(v7 - 8);
  v3[26] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Table();
  v3[27] = v8;
  v3[28] = *(void *)(v8 - 8);
  v3[29] = swift_task_alloc();
  v3[30] = swift_task_alloc();
  return _swift_task_switch(sub_10023CD9C, 0, 0);
}

uint64_t sub_10023CD9C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 72) + 112);
  *(void *)(v0 + 248) = v1;
  return _swift_task_switch(sub_10023CDC0, v1, 0);
}

uint64_t sub_10023CDC0()
{
  sub_100215780();
  *(void *)(v0 + 256) = 0;
  uint64_t v1 = *(void *)(v0 + 248);
  return _swift_task_switch(sub_10023CF10, v1, 0);
}

uint64_t sub_10023CF10()
{
  type metadata accessor for LocalStorageDatabase();
  sub_100017ACC(&qword_1003F2578, (void (*)(uint64_t))type metadata accessor for LocalStorageDatabase);
  *(void *)(v0 + 264) = Database.readConnection.getter();
  return _swift_task_switch(sub_10023CFC4, 0, 0);
}

uint64_t sub_10023CFC4()
{
  if (v0[33])
  {
    if (qword_1003EC0E0 != -1) {
      swift_once();
    }
    uint64_t v62 = v0 + 2;
    uint64_t v2 = v0[28];
    uint64_t v1 = v0[29];
    uint64_t v3 = v0[27];
    uint64_t v4 = sub_100044058(v3, (uint64_t)qword_10040B900);
    uint64_t v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
    v60(v1, v4, v3);
    if (qword_1003EC3C0 != -1) {
      swift_once();
    }
    uint64_t v51 = v0[30];
    uint64_t v53 = v0[29];
    uint64_t v5 = v0[27];
    uint64_t v56 = v0[28];
    uint64_t v57 = v0[32];
    uint64_t v6 = v0[25];
    uint64_t v7 = v0[26];
    uint64_t v8 = v0[23];
    uint64_t v55 = v0[24];
    uint64_t v9 = v0[21];
    uint64_t v10 = v0[22];
    uint64_t v11 = sub_100044014(&qword_1003EF240);
    sub_100044058(v11, (uint64_t)qword_10040C1B8);
    Fence.ID.uuid.getter();
    == infix<A>(_:_:)();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    QueryType.where(_:)();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v55);
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
    v12(v53, v5);
    v0[5] = v5;
    v0[6] = &protocol witness table for Table;
    uint64_t v13 = sub_10003E0F4(v62);
    v60((uint64_t)v13, v51, v5);
    Connection.prepare(_:)();
    if (!v57)
    {
      uint64_t v50 = v12;
      sub_1000233E4((uint64_t)v62);
      uint64_t v16 = dispatch thunk of _AnySequenceBox._underestimatedCount.getter();
      sub_100245EA8(0, v16 & ~(v16 >> 63), 0);
      swift_retain();
      dispatch thunk of _AnySequenceBox._makeIterator()();
      uint64_t result = swift_release();
      if (v16 < 0)
      {
        __break(1u);
      }
      else
      {
        if (!v16)
        {
LABEL_18:
          uint64_t v28 = v0[16];
          uint64_t v29 = v0[17];
          uint64_t v30 = v0[15];
          dispatch thunk of _AnyIteratorBoxBase.next()();
          unint64_t v59 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
          if (v59(v30, 1, v28) != 1)
          {
            uint64_t v34 = v0[17];
            uint64_t v35 = *(void (**)(uint64_t, void, uint64_t))(v34 + 32);
            v34 += 32;
            uint64_t v52 = v0[11];
            uint64_t v54 = v35;
            uint64_t v36 = (void (**)(uint64_t, uint64_t, uint64_t))(v34 - 16);
            uint64_t v37 = (void (**)(void, void))(v34 - 24);
            do
            {
              uint64_t v38 = v0[19];
              uint64_t v39 = v0[20];
              uint64_t v40 = v0[16];
              uint64_t v41 = v0[13];
              v54(v39, v0[15], v40);
              (*v36)(v38, v39, v40);
              sub_1002491C8(v38, v41);
              (*v37)(v0[20], v0[16]);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                sub_100245EA8(0, _swiftEmptyArrayStorage[2] + 1, 1);
              }
              unint64_t v43 = _swiftEmptyArrayStorage[2];
              unint64_t v42 = _swiftEmptyArrayStorage[3];
              if (v43 >= v42 >> 1) {
                sub_100245EA8(v42 > 1, v43 + 1, 1);
              }
              uint64_t v45 = v0[15];
              uint64_t v44 = v0[16];
              uint64_t v46 = v0[13];
              _swiftEmptyArrayStorage[2] = v43 + 1;
              sub_10003E068(v46, (uint64_t)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(void *)(v52 + 72) * v43, (uint64_t (*)(void))type metadata accessor for FenceTriggerRecord);
              dispatch thunk of _AnyIteratorBoxBase.next()();
            }
            while (v59(v45, 1, v44) != 1);
          }
          uint64_t v31 = v0[15];
          swift_release();
          sub_10000A520(v31, &qword_1003EF6D8);
          swift_release();
          if (_swiftEmptyArrayStorage[2])
          {
            uint64_t v32 = *(unsigned __int8 *)(v0[11] + 80);
            sub_100045728((uint64_t)_swiftEmptyArrayStorage + ((v32 + 32) & ~v32), v0[7], (uint64_t (*)(void))type metadata accessor for FenceTriggerRecord);
            uint64_t v33 = 0;
          }
          else
          {
            uint64_t v33 = 1;
          }
          uint64_t v47 = v0[30];
          uint64_t v48 = v0[27];
          (*(void (**)(void, uint64_t, uint64_t, void))(v0[11] + 56))(v0[7], v33, 1, v0[10]);
          swift_release();
          swift_release();
          v50(v47, v48);
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v49 = (uint64_t (*)(void))v0[1];
          goto LABEL_31;
        }
        uint64_t v18 = v0[17];
        uint64_t v19 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
        uint64_t v20 = (void (**)(uint64_t, void, void))(v18 + 16);
        uint64_t v58 = v0[11];
        uint64_t v61 = (void (**)(void, void))(v18 + 8);
        while (1)
        {
          uint64_t v21 = v0[16];
          uint64_t v22 = v0[14];
          dispatch thunk of _AnyIteratorBoxBase.next()();
          uint64_t result = (*v19)(v22, 1, v21);
          if (result == 1) {
            break;
          }
          uint64_t v23 = v0[18];
          uint64_t v24 = v0[12];
          (*v20)(v23, v0[14], v0[16]);
          sub_1002491C8(v23, v24);
          (*v61)(v0[14], v0[16]);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_100245EA8(0, _swiftEmptyArrayStorage[2] + 1, 1);
          }
          unint64_t v26 = _swiftEmptyArrayStorage[2];
          unint64_t v25 = _swiftEmptyArrayStorage[3];
          if (v26 >= v25 >> 1) {
            sub_100245EA8(v25 > 1, v26 + 1, 1);
          }
          uint64_t v27 = v0[12];
          _swiftEmptyArrayStorage[2] = v26 + 1;
          sub_10003E068(v27, (uint64_t)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80))+ *(void *)(v58 + 72) * v26, (uint64_t (*)(void))type metadata accessor for FenceTriggerRecord);
          if (!--v16) {
            goto LABEL_18;
          }
        }
      }
      __break(1u);
      return result;
    }
    v12(v0[30], v0[27]);
    swift_release();
    sub_1000233E4((uint64_t)v62);
  }
  else
  {
    uint64_t v14 = type metadata accessor for DatabaseError();
    sub_100017ACC(&qword_1003EF6D0, (void (*)(uint64_t))&type metadata accessor for DatabaseError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v14 - 8) + 104))(v15, enum case for DatabaseError.notConnected(_:), v14);
    swift_willThrow();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v49 = (uint64_t (*)(void))v0[1];
LABEL_31:
  return v49();
}

uint64_t sub_10023D870(uint64_t a1)
{
  v2[7] = a1;
  v2[8] = v1;
  v2[9] = type metadata accessor for FenceTriggerRecord();
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Date();
  v2[12] = v3;
  v2[13] = *(void *)(v3 - 8);
  v2[14] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for UUID();
  v2[15] = v4;
  v2[16] = *(void *)(v4 - 8);
  v2[17] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for OnConflict();
  v2[18] = v5;
  v2[19] = *(void *)(v5 - 8);
  v2[20] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Table();
  v2[21] = v6;
  v2[22] = *(void *)(v6 - 8);
  v2[23] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Insert();
  v2[24] = v7;
  v2[25] = *(void *)(v7 - 8);
  v2[26] = swift_task_alloc();
  return _swift_task_switch(sub_10023DAE0, 0, 0);
}

uint64_t sub_10023DAE0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 64) + 112);
  *(void *)(v0 + 216) = v1;
  return _swift_task_switch(sub_10023DB04, v1, 0);
}

uint64_t sub_10023DB04()
{
  sub_100215780();
  *(void *)(v0 + 224) = 0;
  uint64_t v1 = *(void *)(v0 + 216);
  return _swift_task_switch(sub_10023DC1C, v1, 0);
}

uint64_t sub_10023DC1C()
{
  type metadata accessor for LocalStorageDatabase();
  sub_100017ACC(&qword_1003F2578, (void (*)(uint64_t))type metadata accessor for LocalStorageDatabase);
  *(void *)(v0 + 232) = Database.writeConnection.getter();
  return _swift_task_switch(sub_10023DCD0, 0, 0);
}

uint64_t sub_10023DCD0()
{
  uint64_t v55 = v0;
  if (!v0[29])
  {
    uint64_t v5 = type metadata accessor for DatabaseError();
    sub_100017ACC(&qword_1003EF6D0, (void (*)(uint64_t))&type metadata accessor for DatabaseError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v5 - 8) + 104))(v6, enum case for DatabaseError.notConnected(_:), v5);
    swift_willThrow();
    goto LABEL_16;
  }
  uint64_t v1 = v0[28];
  type metadata accessor for PropertyListEncoder();
  swift_allocObject();
  PropertyListEncoder.init()();
  type metadata accessor for Fence.TriggerPosition();
  sub_100017ACC(&qword_1003F2C40, (void (*)(uint64_t))&type metadata accessor for Fence.TriggerPosition);
  uint64_t v2 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  unint64_t v4 = v3;
  swift_release();
  if (v1)
  {
    swift_release();
LABEL_16:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v28 = (uint64_t (*)(void))v0[1];
    goto LABEL_17;
  }
  uint64_t v51 = v2;
  unint64_t v52 = v4;
  if (qword_1003EC0E0 != -1) {
    swift_once();
  }
  uint64_t v8 = v0[22];
  uint64_t v7 = v0[23];
  uint64_t v10 = v0[20];
  uint64_t v9 = v0[21];
  uint64_t v11 = v0[18];
  uint64_t v12 = v0[19];
  uint64_t v13 = sub_100044058(v9, (uint64_t)qword_10040B900);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v13, v9);
  (*(void (**)(uint64_t, void, uint64_t))(v12 + 104))(v10, enum case for OnConflict.replace(_:), v11);
  sub_100044014(&qword_1003EF7C8);
  type metadata accessor for Setter();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100367790;
  if (qword_1003EC3C0 != -1) {
    swift_once();
  }
  uint64_t v15 = v0[16];
  uint64_t v14 = v0[17];
  uint64_t v16 = v0[15];
  uint64_t v17 = sub_100044014(&qword_1003EF240);
  sub_100044058(v17, (uint64_t)qword_10040C1B8);
  Fence.ID.uuid.getter();
  <- infix<A>(_:_:)();
  uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  v47(v14, v16);
  if (qword_1003EC3C8 != -1) {
    swift_once();
  }
  uint64_t v18 = v0[17];
  uint64_t v19 = v0[15];
  sub_100044058(v17, (uint64_t)qword_10040C1D0);
  Fence.TriggerID.uuid.getter();
  <- infix<A>(_:_:)();
  v47(v18, v19);
  if (qword_1003EC3D0 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_100044014(&qword_1003EF1F0);
  sub_100044058(v20, (uint64_t)qword_10040C1E8);
  v0[2] = v51;
  v0[3] = v52;
  <- infix<A>(_:_:)();
  if (qword_1003EC3D8 != -1) {
    swift_once();
  }
  uint64_t v21 = v0[22];
  uint64_t v22 = v0[20];
  uint64_t v46 = v0[21];
  uint64_t v23 = v0[19];
  uint64_t v48 = v0[23];
  uint64_t v49 = v0[18];
  uint64_t v25 = v0[13];
  uint64_t v24 = v0[14];
  uint64_t v26 = v0[12];
  uint64_t v27 = sub_100044014(&qword_1003EF290);
  sub_100044058(v27, (uint64_t)qword_10040C200);
  sub_10019A184(v24);
  <- infix<A>(_:_:)();
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
  QueryType.insert(or:_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v49);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v48, v46);
  Connection.run(_:)();
  if (qword_1003EC3F0 != -1) {
    swift_once();
  }
  uint64_t v30 = v0[10];
  uint64_t v31 = v0[11];
  uint64_t v32 = v0[7];
  uint64_t v33 = type metadata accessor for Logger();
  sub_100044058(v33, (uint64_t)qword_10040C248);
  sub_100045728(v32, v31, (uint64_t (*)(void))type metadata accessor for FenceTriggerRecord);
  sub_100045728(v32, v30, (uint64_t (*)(void))type metadata accessor for FenceTriggerRecord);
  uint64_t v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.default.getter();
  BOOL v36 = os_log_type_enabled(v34, v35);
  uint64_t v37 = v0[25];
  uint64_t v53 = v0[26];
  uint64_t v38 = v0[24];
  uint64_t v40 = v0[10];
  uint64_t v39 = v0[11];
  if (v36)
  {
    uint64_t v50 = v0[24];
    uint64_t v41 = swift_slowAlloc();
    v54[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v41 = 136446722;
    v0[4] = sub_100037004(0xD000000000000015, 0x80000001003770F0, v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v41 + 12) = 2082;
    type metadata accessor for Fence.ID();
    sub_100017ACC(&qword_1003EEA50, (void (*)(uint64_t))&type metadata accessor for Fence.ID);
    uint64_t v42 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[5] = sub_100037004(v42, v43, v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100044BDC(v39, (uint64_t (*)(void))type metadata accessor for FenceTriggerRecord);
    *(_WORD *)(v41 + 22) = 2082;
    sub_100017ACC(&qword_1003EEA60, (void (*)(uint64_t))&type metadata accessor for Fence.TriggerPosition);
    uint64_t v44 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[6] = sub_100037004(v44, v45, v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100044BDC(v40, (uint64_t (*)(void))type metadata accessor for FenceTriggerRecord);
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "%{public}s: inserted fenceTrigger for fence id %{public}s, position: %{public}s", (uint8_t *)v41, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    sub_100044090(v51, v52);
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v53, v50);
  }
  else
  {
    sub_100044090(v51, v52);
    swift_release();

    sub_100044BDC(v40, (uint64_t (*)(void))type metadata accessor for FenceTriggerRecord);
    sub_100044BDC(v39, (uint64_t (*)(void))type metadata accessor for FenceTriggerRecord);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v53, v38);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = (uint64_t (*)(void))v0[1];
LABEL_17:
  return v28();
}

uint64_t sub_10023E6C4(uint64_t a1)
{
  v2[6] = a1;
  v2[7] = v1;
  uint64_t v3 = type metadata accessor for Fence.ID();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for UUID();
  v2[12] = v4;
  v2[13] = *(void *)(v4 - 8);
  v2[14] = swift_task_alloc();
  uint64_t v5 = sub_100044014(&qword_1003EF278);
  v2[15] = v5;
  v2[16] = *(void *)(v5 - 8);
  v2[17] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Table();
  v2[18] = v6;
  v2[19] = *(void *)(v6 - 8);
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Delete();
  v2[22] = v7;
  v2[23] = *(void *)(v7 - 8);
  v2[24] = swift_task_alloc();
  return _swift_task_switch(sub_10023E918, 0, 0);
}

uint64_t sub_10023E918()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 56) + 112);
  *(void *)(v0 + 200) = v1;
  return _swift_task_switch(sub_10023E93C, v1, 0);
}

uint64_t sub_10023E93C()
{
  sub_100215780();
  *(void *)(v0 + 208) = 0;
  uint64_t v1 = *(void *)(v0 + 200);
  return _swift_task_switch(sub_10023EA54, v1, 0);
}

uint64_t sub_10023EA54()
{
  type metadata accessor for LocalStorageDatabase();
  sub_100017ACC(&qword_1003F2578, (void (*)(uint64_t))type metadata accessor for LocalStorageDatabase);
  *(void *)(v0 + 216) = Database.writeConnection.getter();
  return _swift_task_switch(sub_10023EB08, 0, 0);
}

uint64_t sub_10023EB08()
{
  uint64_t v66 = v0;
  if (!v0[27])
  {
    uint64_t v16 = type metadata accessor for DatabaseError();
    sub_100017ACC(&qword_1003EF6D0, (void (*)(uint64_t))&type metadata accessor for DatabaseError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v16 - 8) + 104))(v17, enum case for DatabaseError.notConnected(_:), v16);
    swift_willThrow();
    goto LABEL_9;
  }
  if (qword_1003EC0E0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[18];
  uint64_t v4 = sub_100044058(v3, (uint64_t)qword_10040B900);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v2, v4, v3);
  if (qword_1003EC3C0 != -1) {
    swift_once();
  }
  uint64_t v5 = v0 + 6;
  uint64_t v62 = v0[26];
  uint64_t v6 = v0[19];
  uint64_t v55 = v0[21];
  uint64_t v57 = v0[20];
  uint64_t v8 = v0[17];
  uint64_t v7 = v0[18];
  uint64_t v64 = v0;
  uint64_t v9 = v0[16];
  *(void *)typeb = v0[15];
  uint64_t v11 = v0[13];
  uint64_t v10 = v5[8];
  uint64_t v12 = v5[6];
  uint64_t v13 = sub_100044014(&qword_1003EF240);
  sub_100044058(v13, (uint64_t)qword_10040C1B8);
  Fence.ID.uuid.getter();
  == infix<A>(_:_:)();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  QueryType.where(_:)();
  (*(void (**)(uint64_t, os_log_type_t *))(v9 + 8))(v8, *(os_log_type_t **)typeb);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v14(v57, v7);
  QueryType.delete()();
  v14(v55, v7);
  uint64_t v15 = Connection.run(_:)();
  if (v62)
  {
    uint64_t v0 = v64;
    (*(void (**)(void, void))(v64[23] + 8))(v64[24], v64[22]);
    swift_release();
LABEL_9:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(BOOL))v0[1];
    BOOL v19 = 0;
    goto LABEL_23;
  }
  uint64_t v20 = v15;
  uint64_t v21 = v64;
  if (v15 < 1)
  {
    if (qword_1003EC3F0 != -1) {
      swift_once();
    }
    uint64_t v39 = v64[9];
    uint64_t v38 = v64[10];
    uint64_t v40 = v64[8];
    uint64_t v41 = v64[6];
    uint64_t v42 = type metadata accessor for Logger();
    sub_100044058(v42, (uint64_t)qword_10040C248);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v38, v41, v40);
    unint64_t v43 = Logger.logObject.getter();
    os_log_type_t typea = static os_log_type_t.default.getter();
    BOOL v44 = os_log_type_enabled(v43, typea);
    uint64_t v46 = v64[23];
    uint64_t v45 = v64[24];
    uint64_t v47 = v64[22];
    uint64_t v49 = v64[9];
    uint64_t v48 = v64[10];
    uint64_t v50 = v64[8];
    if (v44)
    {
      uint64_t v56 = v64[22];
      uint64_t v51 = swift_slowAlloc();
      v65[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v51 = 136446466;
      v64[2] = sub_100037004(0xD000000000000017, 0x8000000100376FF0, v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v51 + 12) = 2082;
      sub_100017ACC(&qword_1003EEA50, (void (*)(uint64_t))&type metadata accessor for Fence.ID);
      uint64_t v52 = dispatch thunk of CustomStringConvertible.description.getter();
      v64[3] = sub_100037004(v52, v53, v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v50);
      _os_log_impl((void *)&_mh_execute_header, v43, typea, "%{public}s: no fenceTrigger deleted for fence id %{public}s", (uint8_t *)v51, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v21 = v64;
      swift_slowDealloc();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v56);
    }
    else
    {
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v50);
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
    }
  }
  else
  {
    uint64_t v63 = v15;
    if (qword_1003EC3F0 != -1) {
      swift_once();
    }
    uint64_t v22 = v64[11];
    uint64_t v23 = v64[8];
    uint64_t v24 = v64[9];
    uint64_t v25 = v64[6];
    uint64_t v26 = type metadata accessor for Logger();
    sub_100044058(v26, (uint64_t)qword_10040C248);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v22, v25, v23);
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t type = static os_log_type_t.default.getter();
    BOOL v28 = os_log_type_enabled(v27, type);
    uint64_t v30 = v64[23];
    uint64_t v29 = v64[24];
    uint64_t v31 = v64[22];
    uint64_t v32 = v64[11];
    uint64_t v33 = v64[8];
    uint64_t v34 = v64[9];
    if (v28)
    {
      uint64_t v58 = v64[22];
      uint64_t v35 = swift_slowAlloc();
      v65[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 136446466;
      v64[4] = sub_100037004(0xD000000000000017, 0x8000000100376FF0, v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v35 + 12) = 2082;
      sub_100017ACC(&qword_1003EEA50, (void (*)(uint64_t))&type metadata accessor for Fence.ID);
      uint64_t v36 = dispatch thunk of CustomStringConvertible.description.getter();
      v64[5] = sub_100037004(v36, v37, v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
      _os_log_impl((void *)&_mh_execute_header, v27, type, "%{public}s: deleted fenceTrigger for fence id %{public}s", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v58);
    }
    else
    {
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
    }
    uint64_t v20 = v63;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(BOOL))v21[1];
  BOOL v19 = v20 > 0;
LABEL_23:
  return v18(v19);
}

uint64_t sub_10023F3B4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100052FAC(v0, qword_10040C248);
  uint64_t v1 = sub_100044058(v0, (uint64_t)qword_10040C248);
  if (qword_1003EC3F8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100044058(v0, (uint64_t)qword_10040C260);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10023F47C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for LocalStorageStore()
{
  return self;
}

uint64_t sub_10023F4E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_1003EC100 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_100044014(&qword_1003EF1F0);
  sub_100044058(v4, (uint64_t)qword_10040B978);
  Row.subscript.getter();
  switch(v20 >> 62)
  {
    case 1uLL:
      LODWORD(v5) = HIDWORD(v19) - v19;
      if (__OFSUB__(HIDWORD(v19), v19))
      {
        __break(1u);
LABEL_18:
        __break(1u);
        JUMPOUT(0x10023F834);
      }
      uint64_t v5 = (int)v5;
LABEL_8:
      if (v5 == 32)
      {
        if (qword_1003EC0E8 != -1) {
          swift_once();
        }
        uint64_t v9 = sub_100044014(&qword_1003EF240);
        sub_100044058(v9, (uint64_t)qword_10040B930);
        type metadata accessor for UUID();
        Row.subscript.getter();
        if (qword_1003EC108 != -1) {
          swift_once();
        }
        uint64_t v10 = sub_100044014(&qword_1003EF290);
        sub_100044058(v10, (uint64_t)qword_10040B990);
        uint64_t v11 = type metadata accessor for OwnerSharedSecretsRecord();
        type metadata accessor for Date();
        Row.subscript.getter();
        if (qword_1003EC0F8 != -1) {
          swift_once();
        }
        uint64_t v12 = sub_100044014(&qword_1003EF280);
        sub_100044058(v12, (uint64_t)qword_10040B960);
        sub_1000EA3C8();
        Row.subscript.getter();
        uint64_t v13 = type metadata accessor for Row();
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a1, v13);
        *(unsigned char *)(a2 + *(int *)(v11 + 20)) = v19 == 1;
        uint64_t v15 = (uint64_t *)(a2 + *(int *)(v11 + 24));
        *uint64_t v15 = v19;
        v15[1] = v20;
      }
      else
      {
LABEL_16:
        sub_100044090(v19, v20);
        id v16 = objc_allocWithZone((Class)NSError);
        NSString v17 = String._bridgeToObjectiveC()();
        [v16 initWithDomain:v17 code:0 userInfo:0];

        swift_willThrow();
        uint64_t v18 = type metadata accessor for Row();
        return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(a1, v18);
      }
      return result;
    case 2uLL:
      uint64_t v7 = *(void *)(v19 + 16);
      uint64_t v6 = *(void *)(v19 + 24);
      BOOL v8 = __OFSUB__(v6, v7);
      uint64_t v5 = v6 - v7;
      if (!v8) {
        goto LABEL_8;
      }
      goto LABEL_18;
    case 3uLL:
      goto LABEL_16;
    default:
      uint64_t v5 = BYTE6(v20);
      goto LABEL_8;
  }
}

uint64_t sub_10023F844(uint64_t a1, uint64_t a2)
{
  v3[5] = a1;
  v3[6] = a2;
  uint64_t v4 = type metadata accessor for OnConflict();
  v3[7] = v4;
  v3[8] = *(void *)(v4 - 8);
  v3[9] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Table();
  v3[10] = v5;
  v3[11] = *(void *)(v5 - 8);
  v3[12] = swift_task_alloc();
  return _swift_task_switch(sub_10023F960, v2, 0);
}

uint64_t sub_10023F960()
{
  if (qword_1003EC0B0 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v6 = *(void *)(v0 + 64);
  uint64_t v7 = sub_100044058(v3, (uint64_t)qword_10040B870);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v7, v3);
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v4, enum case for OnConflict.replace(_:), v5);
  sub_100044014(&qword_1003EF7C8);
  type metadata accessor for Setter();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1003677B0;
  if (qword_1003EC0E8 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100044014(&qword_1003EF240);
  sub_100044058(v8, (uint64_t)qword_10040B930);
  type metadata accessor for UUID();
  <- infix<A>(_:_:)();
  if (qword_1003EC0F0 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_100044014(&qword_1003EF220);
  sub_100044058(v9, (uint64_t)qword_10040B948);
  *(void *)(v0 + 32) = 1;
  <- infix<A>(_:_:)();
  if (qword_1003EC108 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_100044014(&qword_1003EF290);
  sub_100044058(v10, (uint64_t)qword_10040B990);
  uint64_t v11 = type metadata accessor for OwnerSharedSecretsRecord();
  type metadata accessor for Date();
  <- infix<A>(_:_:)();
  if (qword_1003EC0F8 != -1) {
    swift_once();
  }
  uint64_t v12 = *(void *)(v0 + 48);
  uint64_t v13 = sub_100044014(&qword_1003EF280);
  sub_100044058(v13, (uint64_t)qword_10040B960);
  *(unsigned char *)(v0 + 104) = *(unsigned char *)(v12 + *(int *)(v11 + 20));
  sub_1000EA3C8();
  <- infix<A>(_:_:)();
  if (qword_1003EC100 != -1) {
    swift_once();
  }
  uint64_t v15 = *(void *)(v0 + 88);
  uint64_t v14 = *(void *)(v0 + 96);
  uint64_t v16 = *(void *)(v0 + 72);
  uint64_t v17 = *(void *)(v0 + 80);
  uint64_t v18 = *(void *)(v0 + 64);
  uint64_t v23 = *(void *)(v0 + 56);
  uint64_t v19 = *(void *)(v0 + 48);
  uint64_t v20 = sub_100044014(&qword_1003EF1F0);
  sub_100044058(v20, (uint64_t)qword_10040B978);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v19 + *(int *)(v11 + 24));
  <- infix<A>(_:_:)();
  QueryType.insert(or:_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v23);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v17);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
  return v21();
}

uint64_t sub_10023FDE0()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_10023FE00, v0, 0);
}

uint64_t sub_10023FE00()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 112);
  *(void *)(v0 + 24) = v1;
  return _swift_task_switch(sub_10023FE24, v1, 0);
}

uint64_t sub_10023FE24()
{
  uint64_t v1 = v0[2];
  v0[4] = type metadata accessor for LocalStorageDatabase();
  v0[5] = sub_100017ACC(&qword_1003F2578, (void (*)(uint64_t))type metadata accessor for LocalStorageDatabase);
  v0[6] = Database.readConnection.getter();
  return _swift_task_switch(sub_10023FEE8, v1, 0);
}

uint64_t sub_10023FEE8()
{
  if (v0[6])
  {
    uint64_t v1 = v0[3];
    return _swift_task_switch(sub_10024002C, v1, 0);
  }
  else
  {
    uint64_t v2 = type metadata accessor for DatabaseError();
    sub_100017ACC(&qword_1003EF6D0, (void (*)(uint64_t))&type metadata accessor for DatabaseError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v2 - 8) + 104))(v3, enum case for DatabaseError.notConnected(_:), v2);
    swift_willThrow();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_10024002C()
{
  v0[7] = Database.columnNames(connection:tableName:)();
  v0[8] = 0;
  uint64_t v1 = v0[2];
  return _swift_task_switch(sub_1002400D0, v1, 0);
}

uint64_t sub_1002400D0()
{
  uint64_t v1 = sub_1002466DC(v0[7]);
  swift_bridgeObjectRelease();
  char v2 = sub_100022CD8(0xD000000000000018, 0x8000000100375190, v1);
  swift_bridgeObjectRelease();
  if (v2)
  {
    if (qword_1003EC3F0 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100044058(v3, (uint64_t)qword_10040C248);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "LocalStorage.db is good", v6, 2u);
      swift_slowDealloc();
      swift_release();
    }
    else
    {

      swift_release();
    }
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
  else
  {
    if (qword_1003EC3F0 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_100044058(v7, (uint64_t)qword_10040C248);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "LocalStorage.db is missing handleSiblingIdentifiers -- needs to be reset", v10, 2u);
      swift_slowDealloc();
    }
    uint64_t v11 = v0[3];

    return _swift_task_switch(sub_100240334, v11, 0);
  }
}

uint64_t sub_100240334()
{
  Database.reset()();
  *(void *)(v0 + 72) = v1;
  uint64_t v2 = *(void *)(v0 + 16);
  if (v1) {
    uint64_t v3 = sub_100240428;
  }
  else {
    uint64_t v3 = sub_1000F0314;
  }
  return _swift_task_switch(v3, v2, 0);
}

uint64_t sub_1002403C4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100240428()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10024048C(uint64_t a1, uint64_t a2)
{
  v2[8] = a1;
  v2[9] = a2;
  uint64_t v3 = type metadata accessor for OnConflict();
  v2[10] = v3;
  v2[11] = *(void *)(v3 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Table();
  v2[13] = v4;
  v2[14] = *(void *)(v4 - 8);
  v2[15] = swift_task_alloc();
  return _swift_task_switch(sub_1002405A8, 0, 0);
}

uint64_t sub_1002405A8()
{
  if (qword_1003EC0C0 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v5 = *(void *)(v0 + 80);
  uint64_t v6 = *(void *)(v0 + 88);
  uint64_t v7 = sub_100044058(v3, (uint64_t)qword_10040B8A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v7, v3);
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v4, enum case for OnConflict.replace(_:), v5);
  sub_100044014(&qword_1003EF7C8);
  type metadata accessor for Setter();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1003677D0;
  if (qword_1003EC210 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100044014(&qword_1003EF230);
  sub_100044058(v8, (uint64_t)qword_10040BCA8);
  *(void *)(v0 + 16) = Device.identifier.getter();
  *(void *)(v0 + 24) = v9;
  <- infix<A>(_:_:)();
  swift_bridgeObjectRelease();
  if (qword_1003EC218 != -1) {
    swift_once();
  }
  sub_100044058(v8, (uint64_t)qword_10040BCC0);
  *(void *)(v0 + 32) = Device.deviceName.getter();
  *(void *)(v0 + 40) = v10;
  <- infix<A>(_:_:)();
  swift_bridgeObjectRelease();
  if (qword_1003EC220 != -1) {
    swift_once();
  }
  sub_100044058(v8, (uint64_t)qword_10040BCD8);
  *(void *)(v0 + 48) = Device.idsDeviceId.getter();
  *(void *)(v0 + 56) = v11;
  <- infix<A>(_:_:)();
  swift_bridgeObjectRelease();
  if (qword_1003EC228 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_100044014(&qword_1003EF278);
  sub_100044058(v12, (uint64_t)qword_10040BCF0);
  *(unsigned char *)(v0 + 128) = Device.isActive.getter() & 1;
  <- infix<A>(_:_:)();
  if (qword_1003EC230 != -1) {
    swift_once();
  }
  sub_100044058(v12, (uint64_t)qword_10040BD08);
  *(unsigned char *)(v0 + 129) = Device.isThisDevice.getter() & 1;
  <- infix<A>(_:_:)();
  if (qword_1003EC238 != -1) {
    swift_once();
  }
  sub_100044058(v12, (uint64_t)qword_10040BD20);
  *(unsigned char *)(v0 + 130) = Device.isCompanion.getter() & 1;
  <- infix<A>(_:_:)();
  if (qword_1003EC240 != -1) {
    swift_once();
  }
  uint64_t v13 = *(void *)(v0 + 112);
  uint64_t v14 = *(void *)(v0 + 120);
  uint64_t v15 = *(void *)(v0 + 96);
  uint64_t v16 = *(void *)(v0 + 104);
  uint64_t v17 = *(void *)(v0 + 88);
  uint64_t v20 = *(void *)(v0 + 80);
  sub_100044058(v12, (uint64_t)qword_10040BD38);
  *(unsigned char *)(v0 + 131) = Device.isAutoMeCapable.getter() & 1;
  <- infix<A>(_:_:)();
  QueryType.insert(or:_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v20);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_100240B50()
{
  uint64_t v13 = v0;
  uint64_t v1 = v0[664];
  if (qword_1003EC3F0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100044058(v2, (uint64_t)qword_10040C248);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446466;
    v0[654] = sub_100037004(0xD000000000000017, 0x8000000100378570, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v5 + 12) = 2082;
    v0[651] = v1;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v6 = String.init<A>(describing:)();
    v0[653] = sub_100037004(v6, v7, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%{public}s error: %{public}s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v8 = v0[655];
  uint64_t v9 = type metadata accessor for Insert();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_100240E18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v26 = a3;
  uint64_t v5 = type metadata accessor for Insert();
  uint64_t v23 = *(void *)(v5 - 8);
  uint64_t v24 = v5;
  __chkstk_darwin(v5);
  unint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Delete();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1003EC0D8 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Table();
  sub_100044058(v12, (uint64_t)qword_10040B8E8);
  QueryType.delete()();
  Connection.run(_:)();
  if (!v3)
  {
    uint64_t v14 = a2;
    uint64_t v15 = *(void *)(a2 + 16);
    if (v15)
    {
      uint64_t v20 = v11;
      uint64_t v21 = v9;
      uint64_t v22 = v8;
      uint64_t v16 = (void (**)(char *, uint64_t))(v23 + 8);
      uint64_t v17 = v14;
      swift_bridgeObjectRetain();
      uint64_t v18 = 32;
      do
      {
        memcpy(v25, (const void *)(v17 + v18), 0x241uLL);
        sub_1000621F0((uint64_t)v25);
        sub_1002410EC((uint64_t)v25);
        sub_10006257C((uint64_t)v25);
        Connection.run(_:)();
        (*v16)(v7, v24);
        v18 += 584;
        --v15;
      }
      while (v15);
      swift_bridgeObjectRelease();
      uint64_t v9 = v21;
      uint64_t v8 = v22;
      uint64_t v11 = v20;
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1002410EC(uint64_t a1)
{
  uint64_t v2 = (void *)__chkstk_darwin(a1);
  uint64_t v145 = v3;
  uint64_t v4 = sub_100044014(&qword_1003F2590);
  uint64_t v159 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v158 = (char *)v129 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v151 = (char *)v129 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v144 = (char *)v129 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v150 = (char *)v129 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  v143 = (char *)v129 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v149 = (char *)v129 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  int64_t v142 = (char *)v129 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  v148 = (char *)v129 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v141 = (char *)v129 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v147 = (char *)v129 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  int v140 = (char *)v129 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  os_log_type_t v146 = (char *)v129 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v139 = (char *)v129 - v30;
  __chkstk_darwin(v29);
  unint64_t v138 = (char *)v129 - v31;
  uint64_t v32 = type metadata accessor for OnConflict();
  uint64_t v156 = *(void *)(v32 - 8);
  uint64_t v157 = v32;
  __chkstk_darwin(v32);
  uint64_t v154 = (char *)v129 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = type metadata accessor for Table();
  uint64_t v153 = *(void *)(v155 - 8);
  __chkstk_darwin(v155);
  uint64_t v152 = (char *)v129 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PropertyListEncoder();
  swift_allocObject();
  uint64_t v35 = PropertyListEncoder.init()();
  if (v2[10])
  {
    *(void *)&long long v160 = v2[10];
    swift_bridgeObjectRetain();
    sub_100044014(&qword_1003ED230);
    sub_100032194((unint64_t *)&qword_1003ED238);
    uint64_t v36 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
    if (v1)
    {
LABEL_18:
      swift_release();
      return swift_bridgeObjectRelease();
    }
    uint64_t v38 = v36;
    unint64_t v39 = v37;
    swift_bridgeObjectRelease();
    uint64_t v40 = v2[13];
    if (!v40) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v38 = 0;
    unint64_t v39 = 0xF000000000000000;
    uint64_t v40 = v2[13];
    if (!v40)
    {
LABEL_4:
      uint64_t v136 = 0;
      unint64_t v41 = 0xF000000000000000;
      goto LABEL_8;
    }
  }
  *(void *)&long long v160 = v40;
  swift_bridgeObjectRetain();
  sub_100044014(&qword_1003ED230);
  sub_100032194((unint64_t *)&qword_1003ED238);
  uint64_t v42 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  if (v1)
  {
LABEL_17:
    sub_1000440E8(v38, v39);
    goto LABEL_18;
  }
  unint64_t v41 = v43;
  uint64_t v136 = v42;
  swift_bridgeObjectRelease();
LABEL_8:
  uint64_t v44 = v2[58];
  unint64_t v137 = v41;
  if (v44)
  {
    *(void *)&long long v160 = v44;
    swift_bridgeObjectRetain();
    sub_100044014(&qword_1003ED230);
    sub_100032194((unint64_t *)&qword_1003ED238);
    uint64_t v45 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
    if (v1)
    {
LABEL_16:
      sub_1000440E8(v136, v137);
      goto LABEL_17;
    }
    *(void *)&long long v135 = v45;
    *((void *)&v135 + 1) = v46;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)&long long v135 = 0;
    *((void *)&v135 + 1) = 0xF000000000000000;
  }
  sub_100013B50((uint64_t)(v2 + 16), (uint64_t)v182, &qword_1003ECD28);
  sub_100013B50((uint64_t)v182, (uint64_t)v197, &qword_1003ECD28);
  if (sub_10006289C((uint64_t)v197) == 1 || !v198)
  {
    unint64_t v132 = 0xF000000000000000;
    uint64_t v133 = 0;
  }
  else
  {
    *(void *)&long long v160 = v198;
    swift_bridgeObjectRetain();
    sub_100044014(&qword_1003ED230);
    sub_100032194((unint64_t *)&qword_1003ED238);
    uint64_t v47 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
    if (v1)
    {
      sub_1000440E8(v135, *((unint64_t *)&v135 + 1));
      goto LABEL_16;
    }
    unint64_t v132 = v48;
    uint64_t v133 = v47;
    swift_bridgeObjectRelease();
  }
  sub_100013B50((uint64_t)(v2 + 45), (uint64_t)v181, &qword_1003ED120);
  sub_100013B50((uint64_t)v181, (uint64_t)&v199, &qword_1003ED120);
  uint64_t v134 = v38;
  if (*((void *)&v199 + 1))
  {
    v129[3] = v1;
    long long v200 = v199;
    if (qword_1003EC0D8 != -1) {
      swift_once();
    }
    unint64_t v130 = v39;
    uint64_t v50 = v155;
    uint64_t v51 = sub_100044058(v155, (uint64_t)qword_10040B8E8);
    (*(void (**)(char *, uint64_t, uint64_t))(v153 + 16))(v152, v51, v50);
    (*(void (**)(char *, void, uint64_t))(v156 + 104))(v154, enum case for OnConflict.replace(_:), v157);
    sub_100044014(&qword_1003EF7C8);
    uint64_t v52 = *(void *)(type metadata accessor for Setter() - 8);
    uint64_t v53 = *(void *)(v52 + 72);
    unint64_t v54 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
    uint64_t v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = xmmword_100370820;
    v129[1] = v55;
    unint64_t v56 = v55 + v54;
    if (qword_1003EC280 != -1) {
      swift_once();
    }
    v129[2] = v35;
    sub_100044058(v4, (uint64_t)qword_10040BDF8);
    sub_100013B50((uint64_t)v2, (uint64_t)v180, &qword_1003ED120);
    sub_100013B50((uint64_t)v180, (uint64_t)&v160, &qword_1003ED120);
    <- infix<A>(_:_:)();
    if (qword_1003EC288 != -1) {
      swift_once();
    }
    sub_100044058(v4, (uint64_t)qword_10040BE10);
    sub_100013B50((uint64_t)(v2 + 2), (uint64_t)v179, &qword_1003ED120);
    sub_100013B50((uint64_t)v179, (uint64_t)&v160, &qword_1003ED120);
    <- infix<A>(_:_:)();
    uint64_t v57 = v134;
    if (qword_1003EC290 != -1) {
      swift_once();
    }
    sub_100044058(v4, (uint64_t)qword_10040BE28);
    sub_100013B50((uint64_t)(v2 + 4), (uint64_t)v178, &qword_1003ED120);
    sub_100013B50((uint64_t)v178, (uint64_t)&v160, &qword_1003ED120);
    <- infix<A>(_:_:)();
    if (qword_1003EC298 != -1) {
      swift_once();
    }
    sub_100044058(v4, (uint64_t)qword_10040BE40);
    sub_100013B50((uint64_t)(v2 + 6), (uint64_t)v177, &qword_1003ED120);
    sub_100013B50((uint64_t)v177, (uint64_t)&v160, &qword_1003ED120);
    <- infix<A>(_:_:)();
    if (qword_1003EC2A0 != -1) {
      swift_once();
    }
    sub_100044058(v4, (uint64_t)qword_10040BE58);
    sub_100013B50((uint64_t)(v2 + 8), (uint64_t)v176, &qword_1003ED120);
    sub_100013B50((uint64_t)v176, (uint64_t)&v160, &qword_1003ED120);
    <- infix<A>(_:_:)();
    if (qword_1003EC2A8 != -1) {
      swift_once();
    }
    uint64_t v131 = sub_100044014(&qword_1003EF200);
    sub_100044058(v131, (uint64_t)qword_10040BE70);
    *(void *)&long long v160 = v57;
    *((void *)&v160 + 1) = v130;
    <- infix<A>(_:_:)();
    if (qword_1003EC2B0 != -1) {
      swift_once();
    }
    sub_100044058(v4, (uint64_t)qword_10040BE88);
    sub_100013B50((uint64_t)(v2 + 11), (uint64_t)v175, &qword_1003ED120);
    sub_100013B50((uint64_t)v175, (uint64_t)&v160, &qword_1003ED120);
    <- infix<A>(_:_:)();
    v129[4] = v56 - v53;
    uint64_t v58 = v136;
    if (qword_1003EC2B8 != -1) {
      swift_once();
    }
    sub_100044058(v131, (uint64_t)qword_10040BEA0);
    *(void *)&long long v160 = v58;
    *((void *)&v160 + 1) = v137;
    <- infix<A>(_:_:)();
    if (qword_1003EC2C0 != -1) {
      swift_once();
    }
    sub_100044058(v4, (uint64_t)qword_10040BEB8);
    sub_100013B50((uint64_t)(v2 + 14), (uint64_t)v174, &qword_1003ED120);
    sub_100013B50((uint64_t)v174, (uint64_t)&v160, &qword_1003ED120);
    <- infix<A>(_:_:)();
    if (qword_1003EC2C8 != -1) {
      swift_once();
    }
    uint64_t v59 = sub_100044014(&qword_1003EF230);
    sub_100044058(v59, (uint64_t)qword_10040BED0);
    long long v160 = v200;
    <- infix<A>(_:_:)();
    if (qword_1003EC2D0 != -1) {
      swift_once();
    }
    v129[0] = sub_100044014(&qword_1003F25A8);
    sub_100044058(v129[0], (uint64_t)qword_10040BEE8);
    sub_100013B50((uint64_t)(v2 + 47), (uint64_t)&v202, &qword_1003F2B58);
    sub_100013B50((uint64_t)&v202, (uint64_t)&v160, &qword_1003F2B58);
    <- infix<A>(_:_:)();
    if (qword_1003EC2D8 != -1) {
      swift_once();
    }
    sub_100044058(v4, (uint64_t)qword_10040BF00);
    sub_100013B50((uint64_t)(v2 + 48), (uint64_t)v173, &qword_1003ED120);
    sub_100013B50((uint64_t)v173, (uint64_t)&v160, &qword_1003ED120);
    <- infix<A>(_:_:)();
    if (qword_1003EC2E0 != -1) {
      swift_once();
    }
    sub_100044058(v4, (uint64_t)qword_10040BF18);
    sub_100013B50((uint64_t)(v2 + 50), (uint64_t)v172, &qword_1003ED120);
    sub_100013B50((uint64_t)v172, (uint64_t)&v160, &qword_1003ED120);
    <- infix<A>(_:_:)();
    if (qword_1003EC2E8 != -1) {
      swift_once();
    }
    uint64_t v60 = sub_100044014(&qword_1003F25B0);
    sub_100044058(v60, (uint64_t)qword_10040BF30);
    sub_100013B50((uint64_t)(v2 + 52), (uint64_t)v171, &qword_1003EE048);
    sub_100013B50((uint64_t)v171, (uint64_t)&v160, &qword_1003EE048);
    <- infix<A>(_:_:)();
    if (qword_1003EC2F0 != -1) {
      swift_once();
    }
    sub_100044058(v60, (uint64_t)qword_10040BF48);
    sub_100013B50((uint64_t)(v2 + 56), (uint64_t)v170, &qword_1003EE048);
    sub_100013B50((uint64_t)v170, (uint64_t)&v160, &qword_1003EE048);
    <- infix<A>(_:_:)();
    if (qword_1003EC2F8 != -1) {
      swift_once();
    }
    sub_100044058(v4, (uint64_t)qword_10040BF60);
    sub_100013B50((uint64_t)(v2 + 54), (uint64_t)v169, &qword_1003ED120);
    sub_100013B50((uint64_t)v169, (uint64_t)&v160, &qword_1003ED120);
    <- infix<A>(_:_:)();
    if (qword_1003EC300 != -1) {
      swift_once();
    }
    sub_100044058(v129[0], (uint64_t)qword_10040BF78);
    sub_100013B50((uint64_t)v2 + 457, (uint64_t)&v201, &qword_1003F2B58);
    sub_100013B50((uint64_t)&v201, (uint64_t)&v160, &qword_1003F2B58);
    <- infix<A>(_:_:)();
    if (qword_1003EC308 != -1) {
      swift_once();
    }
    sub_100044058(v131, (uint64_t)qword_10040BF90);
    long long v160 = v135;
    <- infix<A>(_:_:)();
    if (qword_1003EC310 != -1) {
      swift_once();
    }
    sub_100044058(v4, (uint64_t)qword_10040BFA8);
    sub_100013B50((uint64_t)(v2 + 59), (uint64_t)v168, &qword_1003ED120);
    sub_100013B50((uint64_t)v168, (uint64_t)&v160, &qword_1003ED120);
    <- infix<A>(_:_:)();
    if (qword_1003EC318 != -1) {
      swift_once();
    }
    sub_100044058(v60, (uint64_t)qword_10040BFC0);
    sub_100013B50((uint64_t)(v2 + 61), (uint64_t)v167, &qword_1003EE048);
    sub_100013B50((uint64_t)v167, (uint64_t)&v160, &qword_1003EE048);
    <- infix<A>(_:_:)();
    uint64_t v61 = v139;
    if (qword_1003EC320 != -1) {
      swift_once();
    }
    sub_100044058(v4, (uint64_t)qword_10040BFD8);
    sub_100013B50((uint64_t)(v2 + 63), (uint64_t)v166, &qword_1003ED120);
    sub_100013B50((uint64_t)v166, (uint64_t)&v160, &qword_1003ED120);
    <- infix<A>(_:_:)();
    if (qword_1003EC328 != -1) {
      swift_once();
    }
    sub_100044058(v4, (uint64_t)qword_10040BFF0);
    sub_100013B50((uint64_t)(v2 + 65), (uint64_t)v165, &qword_1003ED120);
    sub_100013B50((uint64_t)v165, (uint64_t)&v160, &qword_1003ED120);
    <- infix<A>(_:_:)();
    if (qword_1003EC330 != -1) {
      swift_once();
    }
    sub_100044058(v4, (uint64_t)qword_10040C008);
    sub_100013B50((uint64_t)(v2 + 67), (uint64_t)v164, &qword_1003ED120);
    sub_100013B50((uint64_t)v164, (uint64_t)&v160, &qword_1003ED120);
    <- infix<A>(_:_:)();
    if (qword_1003EC338 != -1) {
      swift_once();
    }
    sub_100044058(v4, (uint64_t)qword_10040C020);
    sub_100013B50((uint64_t)(v2 + 69), (uint64_t)v163, &qword_1003ED120);
    sub_100013B50((uint64_t)v163, (uint64_t)&v160, &qword_1003ED120);
    <- infix<A>(_:_:)();
    if (qword_1003EC340 != -1) {
      swift_once();
    }
    uint64_t v62 = sub_100044014(&qword_1003F25D8);
    sub_100044058(v62, (uint64_t)qword_10040C038);
    sub_100013B50((uint64_t)(v2 + 71), (uint64_t)v162, &qword_1003F2B60);
    sub_100013B50((uint64_t)v162, (uint64_t)&v160, &qword_1003F2B60);
    <- infix<A>(_:_:)();
    if (qword_1003EC348 != -1) {
      swift_once();
    }
    uint64_t v63 = sub_100044058(v4, (uint64_t)qword_10040C050);
    uint64_t v64 = *(void (**)(char *, uint64_t, uint64_t))(v159 + 16);
    uint64_t v65 = v138;
    v64(v138, v63, v4);
    sub_100013B50((uint64_t)v182, (uint64_t)v196, &qword_1003ECD28);
    if (sub_10006289C((uint64_t)v196) == 1)
    {
      uint64_t v66 = 0;
      uint64_t v67 = 0;
    }
    else
    {
      uint64_t v66 = v196[0];
      uint64_t v67 = v196[1];
      swift_bridgeObjectRetain();
    }
    *(void *)&long long v160 = v66;
    *((void *)&v160 + 1) = v67;
    <- infix<A>(_:_:)();
    swift_bridgeObjectRelease();
    uint64_t v73 = *(void (**)(char *, uint64_t))(v159 + 8);
    v159 += 8;
    v73(v65, v4);
    if (qword_1003EC350 != -1) {
      swift_once();
    }
    uint64_t v74 = sub_100044058(v4, (uint64_t)qword_10040C068);
    v64(v61, v74, v4);
    sub_100013B50((uint64_t)v182, (uint64_t)v195, &qword_1003ECD28);
    if (sub_10006289C((uint64_t)v195) == 1)
    {
      uint64_t v75 = 0;
      uint64_t v76 = 0;
    }
    else
    {
      uint64_t v75 = v195[2];
      uint64_t v76 = v195[3];
      swift_bridgeObjectRetain();
    }
    *(void *)&long long v160 = v75;
    *((void *)&v160 + 1) = v76;
    <- infix<A>(_:_:)();
    swift_bridgeObjectRelease();
    v73(v61, v4);
    if (qword_1003EC358 != -1) {
      swift_once();
    }
    uint64_t v77 = sub_100044058(v4, (uint64_t)qword_10040C080);
    v64(v146, v77, v4);
    sub_100013B50((uint64_t)v182, (uint64_t)v194, &qword_1003ECD28);
    if (sub_10006289C((uint64_t)v194) == 1)
    {
      uint64_t v78 = 0;
      uint64_t v79 = 0;
    }
    else
    {
      uint64_t v78 = v194[4];
      uint64_t v79 = v194[5];
      swift_bridgeObjectRetain();
    }
    *(void *)&long long v160 = v78;
    *((void *)&v160 + 1) = v79;
    uint64_t v80 = v146;
    <- infix<A>(_:_:)();
    swift_bridgeObjectRelease();
    v73(v80, v4);
    if (qword_1003EC360 != -1) {
      swift_once();
    }
    sub_100044058(v131, (uint64_t)qword_10040C098);
    *(void *)&long long v160 = v133;
    *((void *)&v160 + 1) = v132;
    <- infix<A>(_:_:)();
    uint64_t v81 = v140;
    if (qword_1003EC368 != -1) {
      swift_once();
    }
    uint64_t v82 = sub_100044058(v4, (uint64_t)qword_10040C0B0);
    v64(v81, v82, v4);
    sub_100013B50((uint64_t)v182, (uint64_t)v193, &qword_1003ECD28);
    if (sub_10006289C((uint64_t)v193) == 1)
    {
      uint64_t v83 = 0;
      uint64_t v84 = 0;
    }
    else
    {
      uint64_t v83 = v193[7];
      uint64_t v84 = v193[8];
      swift_bridgeObjectRetain();
    }
    *(void *)&long long v160 = v83;
    *((void *)&v160 + 1) = v84;
    <- infix<A>(_:_:)();
    swift_bridgeObjectRelease();
    v73(v81, v4);
    if (qword_1003EC370 != -1) {
      swift_once();
    }
    uint64_t v85 = sub_100044058(v4, (uint64_t)qword_10040C0C8);
    v64(v147, v85, v4);
    sub_100013B50((uint64_t)v182, (uint64_t)v192, &qword_1003ECD28);
    if (sub_10006289C((uint64_t)v192) == 1)
    {
      uint64_t v86 = 0;
      uint64_t v87 = 0;
    }
    else
    {
      uint64_t v86 = v192[9];
      uint64_t v87 = v192[10];
      swift_bridgeObjectRetain();
    }
    *(void *)&long long v160 = v86;
    *((void *)&v160 + 1) = v87;
    BOOL v88 = v147;
    <- infix<A>(_:_:)();
    swift_bridgeObjectRelease();
    v73(v88, v4);
    if (qword_1003EC378 != -1) {
      swift_once();
    }
    uint64_t v89 = sub_100044058(v4, (uint64_t)qword_10040C0E0);
    uint64_t v90 = v141;
    v64(v141, v89, v4);
    sub_100013B50((uint64_t)v182, (uint64_t)v191, &qword_1003ECD28);
    if (sub_10006289C((uint64_t)v191) == 1)
    {
      uint64_t v91 = 0;
      uint64_t v92 = 0;
    }
    else
    {
      uint64_t v91 = v191[11];
      uint64_t v92 = v191[12];
      swift_bridgeObjectRetain();
    }
    *(void *)&long long v160 = v91;
    *((void *)&v160 + 1) = v92;
    <- infix<A>(_:_:)();
    swift_bridgeObjectRelease();
    v73(v90, v4);
    if (qword_1003EC380 != -1) {
      swift_once();
    }
    uint64_t v93 = sub_100044058(v4, (uint64_t)qword_10040C0F8);
    v64(v148, v93, v4);
    sub_100013B50((uint64_t)v182, (uint64_t)v190, &qword_1003ECD28);
    if (sub_10006289C((uint64_t)v190) == 1)
    {
      uint64_t v94 = 0;
      uint64_t v95 = 0;
    }
    else
    {
      uint64_t v94 = v190[13];
      uint64_t v95 = v190[14];
      swift_bridgeObjectRetain();
    }
    *(void *)&long long v160 = v94;
    *((void *)&v160 + 1) = v95;
    uint64_t v96 = v148;
    <- infix<A>(_:_:)();
    swift_bridgeObjectRelease();
    v73(v96, v4);
    if (qword_1003EC388 != -1) {
      swift_once();
    }
    uint64_t v97 = sub_100044058(v4, (uint64_t)qword_10040C110);
    uint64_t v98 = v142;
    v64(v142, v97, v4);
    sub_100013B50((uint64_t)v182, (uint64_t)v189, &qword_1003ECD28);
    if (sub_10006289C((uint64_t)v189) == 1)
    {
      uint64_t v99 = 0;
      uint64_t v100 = 0;
    }
    else
    {
      uint64_t v99 = v189[15];
      uint64_t v100 = v189[16];
      swift_bridgeObjectRetain();
    }
    *(void *)&long long v160 = v99;
    *((void *)&v160 + 1) = v100;
    <- infix<A>(_:_:)();
    swift_bridgeObjectRelease();
    v73(v98, v4);
    if (qword_1003EC390 != -1) {
      swift_once();
    }
    uint64_t v101 = sub_100044058(v4, (uint64_t)qword_10040C128);
    v64(v149, v101, v4);
    sub_100013B50((uint64_t)v182, (uint64_t)v188, &qword_1003ECD28);
    if (sub_10006289C((uint64_t)v188) == 1)
    {
      uint64_t v102 = 0;
      uint64_t v103 = 0;
    }
    else
    {
      uint64_t v102 = v188[17];
      uint64_t v103 = v188[18];
      swift_bridgeObjectRetain();
    }
    *(void *)&long long v160 = v102;
    *((void *)&v160 + 1) = v103;
    char v104 = v149;
    <- infix<A>(_:_:)();
    swift_bridgeObjectRelease();
    v73(v104, v4);
    if (qword_1003EC398 != -1) {
      swift_once();
    }
    uint64_t v105 = sub_100044058(v4, (uint64_t)qword_10040C140);
    uint64_t v106 = v143;
    v64(v143, v105, v4);
    sub_100013B50((uint64_t)v182, (uint64_t)v187, &qword_1003ECD28);
    if (sub_10006289C((uint64_t)v187) == 1)
    {
      uint64_t v107 = 0;
      uint64_t v108 = 0;
    }
    else
    {
      uint64_t v107 = v187[19];
      uint64_t v108 = v187[20];
      swift_bridgeObjectRetain();
    }
    *(void *)&long long v160 = v107;
    *((void *)&v160 + 1) = v108;
    <- infix<A>(_:_:)();
    swift_bridgeObjectRelease();
    v73(v106, v4);
    if (qword_1003EC3A0 != -1) {
      swift_once();
    }
    uint64_t v109 = sub_100044058(v4, (uint64_t)qword_10040C158);
    v64(v150, v109, v4);
    sub_100013B50((uint64_t)v182, (uint64_t)v186, &qword_1003ECD28);
    if (sub_10006289C((uint64_t)v186) == 1)
    {
      uint64_t v110 = 0;
      uint64_t v111 = 0;
    }
    else
    {
      uint64_t v110 = v186[21];
      uint64_t v111 = v186[22];
      swift_bridgeObjectRetain();
    }
    *(void *)&long long v160 = v110;
    *((void *)&v160 + 1) = v111;
    uint64_t v112 = v150;
    <- infix<A>(_:_:)();
    swift_bridgeObjectRelease();
    v73(v112, v4);
    if (qword_1003EC3A8 != -1) {
      swift_once();
    }
    uint64_t v113 = sub_100044058(v4, (uint64_t)qword_10040C170);
    uint64_t v114 = v144;
    v64(v144, v113, v4);
    sub_100013B50((uint64_t)v182, (uint64_t)v185, &qword_1003ECD28);
    if (sub_10006289C((uint64_t)v185) == 1)
    {
      uint64_t v115 = 0;
      uint64_t v116 = 0;
    }
    else
    {
      uint64_t v115 = v185[23];
      uint64_t v116 = v185[24];
      swift_bridgeObjectRetain();
    }
    *(void *)&long long v160 = v115;
    *((void *)&v160 + 1) = v116;
    <- infix<A>(_:_:)();
    swift_bridgeObjectRelease();
    v73(v114, v4);
    if (qword_1003EC3B0 != -1) {
      swift_once();
    }
    uint64_t v117 = sub_100044058(v4, (uint64_t)qword_10040C188);
    v64(v151, v117, v4);
    sub_100013B50((uint64_t)v182, (uint64_t)v184, &qword_1003ECD28);
    if (sub_10006289C((uint64_t)v184) == 1)
    {
      uint64_t v118 = 0;
      uint64_t v119 = 0;
    }
    else
    {
      uint64_t v118 = v184[25];
      uint64_t v119 = v184[26];
      swift_bridgeObjectRetain();
    }
    *(void *)&long long v160 = v118;
    *((void *)&v160 + 1) = v119;
    BOOL v120 = v151;
    <- infix<A>(_:_:)();
    swift_bridgeObjectRelease();
    v73(v120, v4);
    if (qword_1003EC3B8 != -1) {
      swift_once();
    }
    uint64_t v121 = sub_100044058(v4, (uint64_t)qword_10040C1A0);
    v64(v158, v121, v4);
    sub_100013B50((uint64_t)v182, (uint64_t)v183, &qword_1003ECD28);
    if (sub_10006289C((uint64_t)v183) == 1)
    {
      uint64_t v122 = 0;
      uint64_t v123 = 0;
    }
    else
    {
      uint64_t v122 = v183[27];
      uint64_t v123 = v183[28];
      swift_bridgeObjectRetain();
    }
    unint64_t v124 = v130;
    *(void *)&long long v160 = v122;
    *((void *)&v160 + 1) = v123;
    uint64_t v125 = v158;
    <- infix<A>(_:_:)();
    swift_bridgeObjectRelease();
    v73(v125, v4);
    uint64_t v127 = v154;
    uint64_t v126 = v155;
    uint64_t v128 = v152;
    QueryType.insert(or:_:)();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1000440E8(v133, v132);
    sub_1000440E8(v135, *((unint64_t *)&v135 + 1));
    sub_1000440E8(v136, v137);
    sub_1000440E8(v134, v124);
    (*(void (**)(char *, uint64_t))(v156 + 8))(v127, v157);
    return (*(uint64_t (**)(char *, uint64_t))(v153 + 8))(v128, v126);
  }
  else
  {
    if (qword_1003EC3F0 != -1) {
      swift_once();
    }
    uint64_t v68 = type metadata accessor for Logger();
    sub_100044058(v68, (uint64_t)qword_10040C248);
    uint64_t v69 = Logger.logObject.getter();
    os_log_type_t v70 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v69, v70))
    {
      uint64_t v71 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v160 = swift_slowAlloc();
      *(_DWORD *)uint64_t v71 = 136446210;
      uint64_t v161 = sub_100037004(0x6628747265736E69, 0xEE00293A65636E65, (uint64_t *)&v160);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v69, v70, "%{public}s: encounted fence with no ID.", v71, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_10024738C();
    swift_allocError();
    *uint64_t v72 = xmmword_100368320;
    swift_willThrow();
    sub_1000440E8(v133, v132);
    sub_1000440E8(v135, *((unint64_t *)&v135 + 1));
    sub_1000440E8(v136, v137);
    sub_1000440E8(v134, v39);
    return swift_release();
  }
}

uint64_t sub_1002435A0(uint64_t a1, uint64_t a2)
{
  v3[56] = a1;
  v3[57] = a2;
  uint64_t v4 = sub_100044014(&qword_1003F25A8);
  v3[58] = v4;
  v3[59] = *(void *)(v4 - 8);
  v3[60] = swift_task_alloc();
  uint64_t v5 = sub_100044014(&qword_1003F25B0);
  v3[61] = v5;
  v3[62] = *(void *)(v5 - 8);
  v3[63] = swift_task_alloc();
  uint64_t v6 = sub_100044014(&qword_1003F2590);
  v3[64] = v6;
  v3[65] = *(void *)(v6 - 8);
  v3[66] = swift_task_alloc();
  v3[67] = swift_task_alloc();
  v3[68] = swift_task_alloc();
  v3[69] = swift_task_alloc();
  v3[70] = swift_task_alloc();
  v3[71] = swift_task_alloc();
  v3[72] = swift_task_alloc();
  v3[73] = swift_task_alloc();
  sub_100044014(&qword_1003EEBD0);
  v3[74] = swift_task_alloc();
  v3[75] = swift_task_alloc();
  uint64_t v7 = sub_100044014(&qword_1003F2598);
  v3[76] = v7;
  v3[77] = *(void *)(v7 - 8);
  v3[78] = swift_task_alloc();
  v3[79] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for OnConflict();
  v3[80] = v8;
  v3[81] = *(void *)(v8 - 8);
  v3[82] = swift_task_alloc();
  sub_100044014(&qword_1003F3B30);
  v3[83] = swift_task_alloc();
  v3[84] = swift_task_alloc();
  v3[85] = swift_task_alloc();
  v3[86] = swift_task_alloc();
  v3[87] = swift_task_alloc();
  v3[88] = swift_task_alloc();
  v3[89] = swift_task_alloc();
  v3[90] = swift_task_alloc();
  v3[91] = swift_task_alloc();
  v3[92] = swift_task_alloc();
  v3[93] = swift_task_alloc();
  v3[94] = swift_task_alloc();
  v3[95] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for Table();
  v3[96] = v9;
  v3[97] = *(void *)(v9 - 8);
  v3[98] = swift_task_alloc();
  return _swift_task_switch(sub_1002439A8, v2, 0);
}

uint64_t sub_1002439A8()
{
  if (qword_1003EC0B8 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 784);
  uint64_t v2 = *(void *)(v0 + 776);
  uint64_t v3 = *(void *)(v0 + 768);
  uint64_t v4 = *(void *)(v0 + 456);
  uint64_t v5 = sub_100044058(v3, (uint64_t)qword_10040B888);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v5, v3);
  type metadata accessor for PropertyListEncoder();
  swift_allocObject();
  PropertyListEncoder.init()();
  v224 = (int *)type metadata accessor for FriendRecord(0);
  *(void *)(v0 + 400) = *(void *)(v4 + v224[12]);
  swift_bridgeObjectRetain();
  sub_100044014(&qword_1003ED258);
  sub_10024744C();
  uint64_t v218 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  unint64_t v219 = v6;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v7 = *(void *)(v0 + 760);
  uint64_t v8 = *(void *)(v0 + 456);
  swift_allocObject();
  PropertyListEncoder.init()();
  uint64_t v226 = v8 + v224[36];
  sub_100013210(v226, v7, &qword_1003F3B30);
  uint64_t v9 = type metadata accessor for Handle();
  uint64_t v10 = *(void *)(v9 - 8);
  v225 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  int v11 = v225(v7, 1, v9);
  uint64_t v12 = *(void *)(v0 + 760);
  uint64_t v223 = v10;
  if (v11 == 1)
  {
    sub_10000A520(v12, &qword_1003F3B30);
    uint64_t v13 = 0;
  }
  else
  {
    uint64_t v13 = Handle.pushIdentifiers.getter();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v14 = v9;
  *(void *)(v0 + 408) = v13;
  uint64_t v15 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  unint64_t v17 = v16;
  swift_release();
  uint64_t v216 = v15;
  unint64_t v217 = v17;
  uint64_t v18 = *(void *)(v0 + 752);
  swift_bridgeObjectRelease();
  swift_allocObject();
  PropertyListEncoder.init()();
  sub_100013210(v226, v18, &qword_1003F3B30);
  int v19 = v225(v18, 1, v14);
  uint64_t v20 = *(void *)(v0 + 752);
  if (v19 == 1)
  {
    sub_10000A520(*(void *)(v0 + 752), &qword_1003F3B30);
    uint64_t v21 = 0;
  }
  else
  {
    uint64_t v21 = Handle.expiresByGroupId.getter();
    (*(void (**)(uint64_t, uint64_t))(v223 + 8))(v20, v14);
  }
  *(void *)(v0 + 440) = v21;
  sub_100044014(&qword_1003F2BD8);
  sub_1002473E0(&qword_1003F2BE0, &qword_1003F2BD8, (void (*)(void))sub_1000D5930);
  uint64_t v22 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  unint64_t v24 = v23;
  swift_release();
  unint64_t v215 = v24;
  uint64_t v214 = v22;
  uint64_t v25 = *(void *)(v0 + 456);
  swift_bridgeObjectRelease();
  swift_allocObject();
  PropertyListEncoder.init()();
  *(void *)(v0 + 432) = *(void *)(v25 + v224[34]);
  swift_bridgeObjectRetain();
  sub_100044014(&qword_1003EED50);
  sub_1002474E4();
  uint64_t v26 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  unint64_t v212 = v27;
  uint64_t v213 = v26;
  uint64_t v28 = *(void *)(v0 + 656);
  uint64_t v29 = *(void *)(v0 + 648);
  uint64_t v30 = *(void *)(v0 + 640);
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, void, uint64_t))(v29 + 104))(v28, enum case for OnConflict.replace(_:), v30);
  sub_100044014(&qword_1003EF7C8);
  type metadata accessor for Setter();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100370830;
  if (qword_1003EC110 != -1) {
    swift_once();
  }
  uint64_t v222 = sub_100044014(&qword_1003EF230);
  sub_100044058(v222, (uint64_t)qword_10040B9A8);
  *(Swift::String *)(v0 + 80) = String.lowercased()();
  <- infix<A>(_:_:)();
  swift_bridgeObjectRelease();
  if (qword_1003EC118 != -1) {
    swift_once();
  }
  uint64_t v31 = *(void *)(v0 + 456);
  sub_100044058(*(void *)(v0 + 512), (uint64_t)qword_10040B9C0);
  *(_OWORD *)(v0 + 96) = *(_OWORD *)(v31 + 16);
  <- infix<A>(_:_:)();
  if (qword_1003EC120 != -1) {
    swift_once();
  }
  uint64_t v32 = *(void *)(v0 + 632);
  uint64_t v33 = *(void *)(v0 + 616);
  uint64_t v34 = *(void *)(v0 + 608);
  uint64_t v35 = *(void *)(v0 + 600);
  uint64_t v36 = *(void *)(v0 + 456);
  uint64_t v37 = sub_100044058(v34, (uint64_t)qword_10040B9D8);
  uint64_t v207 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16);
  v207(v32, v37, v34);
  sub_100013210(v36 + v224[6], v35, &qword_1003EEBD0);
  uint64_t v38 = type metadata accessor for IDSStatus();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v206 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 48);
  int v40 = v206(v35, 1, v38);
  uint64_t v41 = *(void *)(v0 + 600);
  uint64_t v209 = v38;
  uint64_t v210 = v14;
  uint64_t v205 = v39;
  if (v40 == 1)
  {
    sub_10000A520(v41, &qword_1003EEBD0);
    uint64_t v42 = 0;
  }
  else
  {
    uint64_t v42 = IDSStatus.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v41, v38);
  }
  BOOL v43 = v40 == 1;
  uint64_t v44 = *(void *)(v0 + 632);
  uint64_t v45 = *(void *)(v0 + 616);
  uint64_t v46 = *(void *)(v0 + 608);
  *(void *)(v0 + 384) = v42;
  *(unsigned char *)(v0 + 392) = v43;
  <- infix<A>(_:_:)();
  v208 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
  v208(v44, v46);
  if (qword_1003EC128 != -1) {
    swift_once();
  }
  uint64_t v47 = *(void *)(v0 + 456);
  sub_100044058(*(void *)(v0 + 512), (uint64_t)qword_10040B9F0);
  *(_OWORD *)(v0 + 128) = *(_OWORD *)(v47 + v224[7]);
  <- infix<A>(_:_:)();
  if (qword_1003EC130 != -1) {
    swift_once();
  }
  uint64_t v48 = *(void *)(v0 + 456);
  uint64_t v49 = sub_100044014(&qword_1003F25A0);
  sub_100044058(v49, (uint64_t)qword_10040BA08);
  *(void *)(v0 + 424) = *(void *)(v48 + v224[8]);
  <- infix<A>(_:_:)();
  if (qword_1003EC138 != -1) {
    swift_once();
  }
  uint64_t v50 = *(void *)(v0 + 456);
  sub_100044058(*(void *)(v0 + 512), (uint64_t)qword_10040BA20);
  *(_OWORD *)(v0 + 160) = *(_OWORD *)(v50 + v224[9]);
  <- infix<A>(_:_:)();
  if (qword_1003EC140 != -1) {
    swift_once();
  }
  uint64_t v51 = *(void *)(v0 + 456);
  sub_100044058(*(void *)(v0 + 512), (uint64_t)qword_10040BA38);
  *(_OWORD *)(v0 + 176) = *(_OWORD *)(v51 + v224[10]);
  <- infix<A>(_:_:)();
  if (qword_1003EC148 != -1) {
    swift_once();
  }
  uint64_t v52 = *(void *)(v0 + 456);
  sub_100044058(*(void *)(v0 + 464), (uint64_t)qword_10040BA50);
  *(unsigned char *)(v0 + 364) = *(unsigned char *)(v52 + v224[11]);
  <- infix<A>(_:_:)();
  if (qword_1003EC150 != -1) {
    swift_once();
  }
  uint64_t v211 = sub_100044014(&qword_1003EF200);
  sub_100044058(v211, (uint64_t)qword_10040BA68);
  *(void *)(v0 + 208) = v218;
  *(void *)(v0 + 216) = v219;
  <- infix<A>(_:_:)();
  if (qword_1003EC158 != -1) {
    swift_once();
  }
  uint64_t v53 = *(void *)(v0 + 456);
  sub_100044058(*(void *)(v0 + 512), (uint64_t)qword_10040BA80);
  *(_OWORD *)(v0 + 224) = *(_OWORD *)(v53 + v224[13]);
  <- infix<A>(_:_:)();
  if (qword_1003EC160 != -1) {
    swift_once();
  }
  uint64_t v54 = *(void *)(v0 + 456);
  sub_100044058(*(void *)(v0 + 512), (uint64_t)qword_10040BA98);
  *(_OWORD *)(v0 + 240) = *(_OWORD *)(v54 + v224[14]);
  <- infix<A>(_:_:)();
  if (qword_1003EC170 != -1) {
    swift_once();
  }
  uint64_t v55 = *(void *)(v0 + 456);
  sub_100044058(*(void *)(v0 + 512), (uint64_t)qword_10040BAC8);
  *(_OWORD *)(v0 + 256) = *(_OWORD *)(v55 + v224[16]);
  <- infix<A>(_:_:)();
  if (qword_1003EC168 != -1) {
    swift_once();
  }
  uint64_t v56 = *(void *)(v0 + 456);
  sub_100044058(v222, (uint64_t)qword_10040BAB0);
  uint64_t v57 = (uint64_t *)(v56 + v224[15]);
  uint64_t v59 = *v57;
  uint64_t v58 = v57[1];
  *(void *)(v0 + 272) = v59;
  *(void *)(v0 + 280) = v58;
  <- infix<A>(_:_:)();
  if (qword_1003EC178 != -1) {
    swift_once();
  }
  uint64_t v60 = *(void *)(v0 + 744);
  uint64_t v61 = *(void *)(v0 + 584);
  uint64_t v62 = *(void *)(v0 + 520);
  uint64_t v63 = *(void *)(v0 + 512);
  uint64_t v64 = sub_100044058(v63, (uint64_t)qword_10040BAE0);
  uint64_t v221 = *(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 16);
  v221(v61, v64, v63);
  sub_100013210(v226, v60, &qword_1003F3B30);
  int v65 = v225(v60, 1, v210);
  uint64_t v66 = *(void *)(v0 + 744);
  if (v65 == 1)
  {
    sub_10000A520(*(void *)(v0 + 744), &qword_1003F3B30);
    uint64_t v67 = 0;
    uint64_t v68 = 0;
  }
  else
  {
    uint64_t v67 = Handle.identifier.getter();
    uint64_t v68 = v69;
    (*(void (**)(uint64_t, uint64_t))(v223 + 8))(v66, v210);
  }
  uint64_t v70 = *(void *)(v0 + 584);
  uint64_t v71 = *(void *)(v0 + 520);
  uint64_t v72 = *(void *)(v0 + 512);
  *(void *)(v0 + 288) = v67;
  *(void *)(v0 + 296) = v68;
  <- infix<A>(_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v220 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
  v220(v70, v72);
  if (qword_1003EC180 != -1) {
    swift_once();
  }
  uint64_t v73 = *(void *)(v0 + 736);
  uint64_t v74 = *(void *)(v0 + 576);
  uint64_t v75 = *(void *)(v0 + 512);
  uint64_t v76 = sub_100044058(v75, (uint64_t)qword_10040BAF8);
  v221(v74, v76, v75);
  sub_100013210(v226, v73, &qword_1003F3B30);
  int v77 = v225(v73, 1, v210);
  uint64_t v78 = *(void *)(v0 + 736);
  if (v77 == 1)
  {
    sub_10000A520(*(void *)(v0 + 736), &qword_1003F3B30);
    uint64_t v79 = 0;
    uint64_t v80 = 0;
  }
  else
  {
    uint64_t v79 = Handle.qualifiedIdentifier.getter();
    uint64_t v80 = v81;
    (*(void (**)(uint64_t, uint64_t))(v223 + 8))(v78, v210);
  }
  uint64_t v82 = *(void *)(v0 + 576);
  uint64_t v83 = *(void *)(v0 + 512);
  *(void *)(v0 + 16) = v79;
  *(void *)(v0 + 24) = v80;
  <- infix<A>(_:_:)();
  swift_bridgeObjectRelease();
  v220(v82, v83);
  if (qword_1003EC188 != -1) {
    swift_once();
  }
  uint64_t v84 = *(void *)(v0 + 728);
  uint64_t v85 = *(void *)(v0 + 624);
  uint64_t v86 = *(void *)(v0 + 608);
  uint64_t v87 = sub_100044058(v86, (uint64_t)qword_10040BB10);
  v207(v85, v87, v86);
  sub_100013210(v226, v84, &qword_1003F3B30);
  int v88 = v225(v84, 1, v210);
  uint64_t v89 = *(void *)(v0 + 728);
  if (v88 == 1)
  {
    uint64_t v90 = &qword_1003F3B30;
    uint64_t v91 = *(void *)(v0 + 728);
LABEL_54:
    sub_10000A520(v91, v90);
    uint64_t v95 = 0;
    char v96 = 1;
    goto LABEL_56;
  }
  uint64_t v92 = *(void *)(v0 + 592);
  Handle.idsStatus.getter();
  (*(void (**)(uint64_t, uint64_t))(v223 + 8))(v89, v210);
  int v93 = v206(v92, 1, v209);
  uint64_t v94 = *(void *)(v0 + 592);
  if (v93 == 1)
  {
    uint64_t v90 = &qword_1003EEBD0;
    uint64_t v91 = *(void *)(v0 + 592);
    goto LABEL_54;
  }
  uint64_t v95 = IDSStatus.rawValue.getter();
  (*(void (**)(uint64_t, uint64_t))(v205 + 8))(v94, v209);
  char v96 = 0;
LABEL_56:
  uint64_t v97 = *(void *)(v0 + 624);
  uint64_t v98 = *(void *)(v0 + 608);
  *(void *)(v0 + 368) = v95;
  *(unsigned char *)(v0 + 376) = v96;
  <- infix<A>(_:_:)();
  v208(v97, v98);
  if (qword_1003EC190 != -1) {
    swift_once();
  }
  uint64_t v99 = *(void *)(v0 + 720);
  uint64_t v100 = *(void *)(v0 + 568);
  uint64_t v101 = *(void *)(v0 + 512);
  uint64_t v102 = sub_100044058(v101, (uint64_t)qword_10040BB28);
  v221(v100, v102, v101);
  sub_100013210(v226, v99, &qword_1003F3B30);
  int v103 = v225(v99, 1, v210);
  uint64_t v104 = *(void *)(v0 + 720);
  if (v103 == 1)
  {
    sub_10000A520(*(void *)(v0 + 720), &qword_1003F3B30);
    uint64_t v105 = 0;
    uint64_t v106 = 0;
  }
  else
  {
    uint64_t v105 = Handle.dsid.getter();
    uint64_t v106 = v107;
    (*(void (**)(uint64_t, uint64_t))(v223 + 8))(v104, v210);
  }
  uint64_t v108 = *(void *)(v0 + 568);
  uint64_t v109 = *(void *)(v0 + 512);
  *(void *)(v0 + 336) = v105;
  *(void *)(v0 + 344) = v106;
  <- infix<A>(_:_:)();
  swift_bridgeObjectRelease();
  v220(v108, v109);
  if (qword_1003EC1A0 != -1) {
    swift_once();
  }
  uint64_t v110 = *(void *)(v0 + 712);
  uint64_t v112 = *(void *)(v0 + 496);
  uint64_t v111 = *(void *)(v0 + 504);
  uint64_t v113 = *(void *)(v0 + 488);
  uint64_t v114 = sub_100044058(v113, (uint64_t)qword_10040BB58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v112 + 16))(v111, v114, v113);
  sub_100013210(v226, v110, &qword_1003F3B30);
  int v115 = v225(v110, 1, v210);
  uint64_t v116 = *(void *)(v0 + 712);
  if (v115 == 1)
  {
    sub_10000A520(*(void *)(v0 + 712), &qword_1003F3B30);
    uint64_t v117 = 0;
  }
  else
  {
    Handle.trackingTimestamp.getter();
    uint64_t v117 = v118;
    (*(void (**)(uint64_t, uint64_t))(v223 + 8))(v116, v210);
  }
  BOOL v119 = v115 == 1;
  uint64_t v121 = *(void *)(v0 + 496);
  uint64_t v120 = *(void *)(v0 + 504);
  uint64_t v122 = *(void *)(v0 + 488);
  *(void *)(v0 + 352) = v117;
  *(unsigned char *)(v0 + 360) = v119;
  <- infix<A>(_:_:)();
  (*(void (**)(uint64_t, uint64_t))(v121 + 8))(v120, v122);
  if (qword_1003EC1A8 != -1) {
    swift_once();
  }
  uint64_t v123 = *(void *)(v0 + 704);
  uint64_t v124 = *(void *)(v0 + 560);
  uint64_t v125 = *(void *)(v0 + 512);
  uint64_t v126 = sub_100044058(v125, (uint64_t)qword_10040BB70);
  v221(v124, v126, v125);
  sub_100013210(v226, v123, &qword_1003F3B30);
  int v127 = v225(v123, 1, v210);
  uint64_t v128 = *(void *)(v0 + 704);
  if (v127 == 1)
  {
    sub_10000A520(*(void *)(v0 + 704), &qword_1003F3B30);
    uint64_t v129 = 0;
    uint64_t v130 = 0;
  }
  else
  {
    uint64_t v129 = Handle.hashedDSID.getter();
    uint64_t v130 = v131;
    (*(void (**)(uint64_t, uint64_t))(v223 + 8))(v128, v210);
  }
  uint64_t v132 = *(void *)(v0 + 560);
  uint64_t v133 = *(void *)(v0 + 512);
  *(void *)(v0 + 320) = v129;
  *(void *)(v0 + 328) = v130;
  <- infix<A>(_:_:)();
  swift_bridgeObjectRelease();
  v220(v132, v133);
  if (qword_1003EC1B0 != -1) {
    swift_once();
  }
  uint64_t v134 = *(void *)(v0 + 696);
  uint64_t v135 = *(void *)(v0 + 552);
  uint64_t v136 = *(void *)(v0 + 512);
  uint64_t v137 = sub_100044058(v136, (uint64_t)qword_10040BB88);
  v221(v135, v137, v136);
  sub_100013210(v226, v134, &qword_1003F3B30);
  int v138 = v225(v134, 1, v210);
  uint64_t v139 = *(void *)(v0 + 696);
  if (v138 == 1)
  {
    sub_10000A520(*(void *)(v0 + 696), &qword_1003F3B30);
    uint64_t v140 = 0;
    uint64_t v141 = 0;
  }
  else
  {
    uint64_t v140 = Handle.favoriteOrder.getter();
    uint64_t v141 = v142;
    (*(void (**)(uint64_t, uint64_t))(v223 + 8))(v139, v210);
  }
  uint64_t v143 = *(void *)(v0 + 552);
  uint64_t v144 = *(void *)(v0 + 512);
  *(void *)(v0 + 112) = v140;
  *(void *)(v0 + 120) = v141;
  <- infix<A>(_:_:)();
  swift_bridgeObjectRelease();
  v220(v143, v144);
  if (qword_1003EC198 != -1) {
    swift_once();
  }
  sub_100044058(v211, (uint64_t)qword_10040BB40);
  *(void *)(v0 + 304) = v214;
  *(void *)(v0 + 312) = v215;
  <- infix<A>(_:_:)();
  if (qword_1003EC1B8 != -1) {
    swift_once();
  }
  uint64_t v145 = *(void *)(v0 + 688);
  uint64_t v147 = *(void *)(v0 + 472);
  uint64_t v146 = *(void *)(v0 + 480);
  uint64_t v148 = *(void *)(v0 + 464);
  uint64_t v149 = sub_100044058(v148, (uint64_t)qword_10040BBA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v147 + 16))(v146, v149, v148);
  sub_100013210(v226, v145, &qword_1003F3B30);
  int v150 = v225(v145, 1, v210);
  uint64_t v151 = *(void *)(v0 + 688);
  if (v150 == 1)
  {
    sub_10000A520(*(void *)(v0 + 688), &qword_1003F3B30);
    char v152 = 2;
  }
  else
  {
    char v152 = Handle.reachable.getter();
    (*(void (**)(uint64_t, uint64_t))(v223 + 8))(v151, v210);
  }
  uint64_t v154 = *(void *)(v0 + 472);
  uint64_t v153 = *(void *)(v0 + 480);
  uint64_t v155 = *(void *)(v0 + 464);
  *(unsigned char *)(v0 + 365) = v152;
  <- infix<A>(_:_:)();
  (*(void (**)(uint64_t, uint64_t))(v154 + 8))(v153, v155);
  if (qword_1003EC1C0 != -1) {
    swift_once();
  }
  sub_100044058(v211, (uint64_t)qword_10040BBB8);
  *(void *)(v0 + 192) = v216;
  *(void *)(v0 + 200) = v217;
  <- infix<A>(_:_:)();
  if (qword_1003EC1C8 != -1) {
    swift_once();
  }
  uint64_t v156 = *(void *)(v0 + 680);
  uint64_t v157 = *(void *)(v0 + 544);
  uint64_t v158 = *(void *)(v0 + 512);
  uint64_t v159 = sub_100044058(v158, (uint64_t)qword_10040BBD0);
  v221(v157, v159, v158);
  sub_100013210(v226, v156, &qword_1003F3B30);
  int v160 = v225(v156, 1, v210);
  uint64_t v161 = *(void *)(v0 + 680);
  if (v160 == 1)
  {
    sub_10000A520(*(void *)(v0 + 680), &qword_1003F3B30);
    uint64_t v162 = 0;
    uint64_t v163 = 0;
  }
  else
  {
    uint64_t v162 = Handle.prettyName.getter();
    uint64_t v163 = v164;
    (*(void (**)(uint64_t, uint64_t))(v223 + 8))(v161, v210);
  }
  uint64_t v165 = *(void *)(v0 + 544);
  uint64_t v166 = *(void *)(v0 + 512);
  *(void *)(v0 + 144) = v162;
  *(void *)(v0 + 152) = v163;
  <- infix<A>(_:_:)();
  swift_bridgeObjectRelease();
  v220(v165, v166);
  if (qword_1003EC1D0 != -1) {
    swift_once();
  }
  uint64_t v167 = *(void *)(v0 + 672);
  uint64_t v168 = *(void *)(v0 + 536);
  uint64_t v169 = *(void *)(v0 + 512);
  uint64_t v170 = sub_100044058(v169, (uint64_t)qword_10040BBE8);
  v221(v168, v170, v169);
  sub_100013210(v226, v167, &qword_1003F3B30);
  int v171 = v225(v167, 1, v210);
  uint64_t v172 = *(void *)(v0 + 672);
  if (v171 == 1)
  {
    sub_10000A520(*(void *)(v0 + 672), &qword_1003F3B30);
    uint64_t v173 = 0;
    uint64_t v174 = 0;
  }
  else
  {
    uint64_t v173 = Handle.contactIdentifier.getter();
    uint64_t v174 = v175;
    (*(void (**)(uint64_t, uint64_t))(v223 + 8))(v172, v210);
  }
  uint64_t v176 = *(void *)(v0 + 536);
  uint64_t v177 = *(void *)(v0 + 512);
  *(void *)(v0 + 64) = v173;
  *(void *)(v0 + 72) = v174;
  <- infix<A>(_:_:)();
  swift_bridgeObjectRelease();
  v220(v176, v177);
  if (qword_1003EC1D8 != -1) {
    swift_once();
  }
  uint64_t v178 = *(void *)(v0 + 664);
  uint64_t v179 = *(void *)(v0 + 528);
  uint64_t v180 = *(void *)(v0 + 512);
  uint64_t v181 = sub_100044058(v180, (uint64_t)qword_10040BC00);
  v221(v179, v181, v180);
  sub_100013210(v226, v178, &qword_1003F3B30);
  int v182 = v225(v178, 1, v210);
  uint64_t v183 = *(void *)(v0 + 664);
  if (v182 == 1)
  {
    sub_10000A520(*(void *)(v0 + 664), &qword_1003F3B30);
    uint64_t v184 = 0;
    uint64_t v185 = 0;
  }
  else
  {
    uint64_t v184 = Handle.serverID.getter();
    uint64_t v185 = v186;
    (*(void (**)(uint64_t, uint64_t))(v223 + 8))(v183, v210);
  }
  uint64_t v187 = *(void *)(v0 + 528);
  uint64_t v188 = *(void *)(v0 + 512);
  *(void *)(v0 + 48) = v184;
  *(void *)(v0 + 56) = v185;
  <- infix<A>(_:_:)();
  swift_bridgeObjectRelease();
  v220(v187, v188);
  if (qword_1003EC1E8 != -1) {
    swift_once();
  }
  uint64_t v189 = *(void *)(v0 + 456);
  uint64_t v190 = sub_100044014(&qword_1003EF278);
  sub_100044058(v190, (uint64_t)qword_10040BC30);
  *(unsigned char *)(v0 + 361) = *(unsigned char *)(v189 + v224[31]);
  <- infix<A>(_:_:)();
  if (qword_1003EC1F0 != -1) {
    swift_once();
  }
  uint64_t v191 = *(void *)(v0 + 456);
  sub_100044058(v190, (uint64_t)qword_10040BC48);
  *(unsigned char *)(v0 + 362) = *(unsigned char *)(v191 + v224[32]);
  <- infix<A>(_:_:)();
  if (qword_1003EC1F8 != -1) {
    swift_once();
  }
  uint64_t v192 = *(void *)(v0 + 456);
  sub_100044058(v190, (uint64_t)qword_10040BC60);
  *(unsigned char *)(v0 + 363) = *(unsigned char *)(v192 + v224[33]);
  <- infix<A>(_:_:)();
  if (qword_1003EC208 != -1) {
    swift_once();
  }
  uint64_t v193 = *(void *)(v0 + 456);
  uint64_t v194 = sub_100044014(&qword_1003F25B8);
  sub_100044058(v194, (uint64_t)qword_10040BC90);
  *(void *)(v0 + 416) = *(void *)(v193 + v224[35]);
  sub_100046560();
  <- infix<A>(_:_:)();
  if (qword_1003EC200 != -1) {
    swift_once();
  }
  uint64_t v227 = v190;
  uint64_t v195 = sub_100044014(&qword_1003EF1F0);
  sub_100044058(v195, (uint64_t)qword_10040BC78);
  *(void *)(v0 + 32) = v213;
  *(void *)(v0 + 40) = v212;
  <- infix<A>(_:_:)();
  if (qword_1003EC1E0 != -1) {
    swift_once();
  }
  uint64_t v196 = *(void *)(v0 + 784);
  uint64_t v197 = *(void *)(v0 + 776);
  uint64_t v198 = *(void *)(v0 + 768);
  uint64_t v199 = *(void *)(v0 + 656);
  uint64_t v200 = *(void *)(v0 + 648);
  uint64_t v204 = *(void *)(v0 + 640);
  uint64_t v201 = *(void *)(v0 + 456);
  sub_100044058(v227, (uint64_t)qword_10040BC18);
  *(unsigned char *)(v0 + 366) = *(unsigned char *)(v201 + v224[30]);
  <- infix<A>(_:_:)();
  QueryType.insert(or:_:)();
  swift_bridgeObjectRelease();
  sub_100044090(v213, v212);
  sub_1000440E8(v214, v215);
  sub_1000440E8(v216, v217);
  sub_1000440E8(v218, v219);
  (*(void (**)(uint64_t, uint64_t))(v200 + 8))(v199, v204);
  (*(void (**)(uint64_t, uint64_t))(v197 + 8))(v196, v198);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v202 = *(uint64_t (**)(void))(v0 + 8);
  return v202();
}

uint64_t sub_100245CE4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100052FAC(v0, qword_10040C260);
  sub_100044058(v0, (uint64_t)qword_10040C260);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_100245D68(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001584B4(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100245D88(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100158514(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100245DA8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100158534(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100245DC8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100158554(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100245DE8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001586F8(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100245E08(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100158718(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100245E28(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100158738(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100245E48(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100158758(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100245E68(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100158778(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100245E88(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10015894C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100245EA8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10015896C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100245EC8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10015898C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100245EE8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001589A0(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100245F08(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100158B44(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100245F28(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (uint64_t (*)(char *))isStackAllocationSafe;
  char v6 = *(unsigned char *)(a3 + 32);
  unint64_t v7 = (unint64_t)((1 << v6) + 63) >> 6;
  size_t v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    uint64_t v9 = sub_1002460AC((unint64_t *)((char *)&v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a3, v5);
    swift_release();
    if (v3) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    uint64_t v9 = sub_1002460AC((unint64_t *)v10, v7, a3, v5);
    swift_release();
    swift_slowDealloc();
  }
  return v9;
}

uint64_t sub_1002460AC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *))
{
  uint64_t v31 = a4;
  uint64_t v26 = a2;
  unint64_t v27 = a1;
  uint64_t v6 = type metadata accessor for FriendInfoOption(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = __chkstk_darwin(v6 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = 0;
  uint64_t v12 = a3;
  uint64_t v13 = *(void *)(a3 + 56);
  uint64_t v28 = 0;
  uint64_t v29 = a3 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v30 = (unint64_t)(v14 + 63) >> 6;
  while (v16)
  {
    unint64_t v17 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    unint64_t v18 = v17 | (v11 << 6);
LABEL_17:
    sub_100045728(*(void *)(v12 + 48) + *(void *)(v7 + 72) * v18, (uint64_t)v10, type metadata accessor for FriendInfoOption);
    char v22 = v31(v10);
    uint64_t result = sub_100044BDC((uint64_t)v10, type metadata accessor for FriendInfoOption);
    if (v4) {
      return result;
    }
    if (v22)
    {
      *(unint64_t *)((char *)v27 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      BOOL v19 = __OFADD__(v28++, 1);
      if (v19) {
        goto LABEL_30;
      }
    }
  }
  BOOL v19 = __OFADD__(v11++, 1);
  if (v19)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v11 >= v30) {
    goto LABEL_27;
  }
  unint64_t v20 = *(void *)(v29 + 8 * v11);
  if (v20)
  {
LABEL_16:
    unint64_t v16 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
    goto LABEL_17;
  }
  int64_t v21 = v11 + 1;
  if (v11 + 1 >= v30) {
    goto LABEL_27;
  }
  unint64_t v20 = *(void *)(v29 + 8 * v21);
  if (v20) {
    goto LABEL_15;
  }
  int64_t v21 = v11 + 2;
  if (v11 + 2 >= v30) {
    goto LABEL_27;
  }
  unint64_t v20 = *(void *)(v29 + 8 * v21);
  if (v20) {
    goto LABEL_15;
  }
  int64_t v21 = v11 + 3;
  if (v11 + 3 >= v30)
  {
LABEL_27:
    uint64_t v23 = v26;
    uint64_t v24 = v28;
    swift_retain();
    return sub_100246354(v27, v23, v24, v12);
  }
  unint64_t v20 = *(void *)(v29 + 8 * v21);
  if (v20)
  {
LABEL_15:
    int64_t v11 = v21;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v11 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v11 >= v30) {
      goto LABEL_27;
    }
    unint64_t v20 = *(void *)(v29 + 8 * v11);
    ++v21;
    if (v20) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_100246354(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for FriendInfoOption(0);
  uint64_t v33 = *(void *)(v8 - 8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return (uint64_t)&_swiftEmptySetSingleton;
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  sub_100044014(&qword_1003F04C0);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  uint64_t v11 = result;
  uint64_t v31 = a1;
  uint64_t v32 = a2;
  if (a2 < 1) {
    unint64_t v13 = 0;
  }
  else {
    unint64_t v13 = *a1;
  }
  uint64_t v14 = 0;
  uint64_t v15 = result + 56;
  while (1)
  {
    if (v13)
    {
      unint64_t v16 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v17 = v16 | (v14 << 6);
    }
    else
    {
      uint64_t v18 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        goto LABEL_40;
      }
      if (v18 >= v32)
      {
LABEL_37:
        swift_release();
        return v11;
      }
      unint64_t v19 = v31[v18];
      ++v14;
      if (!v19)
      {
        uint64_t v14 = v18 + 1;
        if (v18 + 1 >= v32) {
          goto LABEL_37;
        }
        unint64_t v19 = v31[v14];
        if (!v19)
        {
          uint64_t v14 = v18 + 2;
          if (v18 + 2 >= v32) {
            goto LABEL_37;
          }
          unint64_t v19 = v31[v14];
          if (!v19)
          {
            uint64_t v20 = v18 + 3;
            if (v20 >= v32) {
              goto LABEL_37;
            }
            unint64_t v19 = v31[v20];
            if (!v19)
            {
              while (1)
              {
                uint64_t v14 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v14 >= v32) {
                  goto LABEL_37;
                }
                unint64_t v19 = v31[v14];
                ++v20;
                if (v19) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v14 = v20;
          }
        }
      }
LABEL_24:
      unint64_t v13 = (v19 - 1) & v19;
      unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
    }
    uint64_t v21 = *(void *)(v33 + 72);
    sub_100045728(*(void *)(a4 + 48) + v21 * v17, (uint64_t)v10, type metadata accessor for FriendInfoOption);
    Hasher.init(_seed:)();
    type metadata accessor for HandleType();
    sub_100017ACC(&qword_1003EEA68, (void (*)(uint64_t))&type metadata accessor for HandleType);
    dispatch thunk of Hashable.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v22 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v15 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v25 = __clz(__rbit64((-1 << v23) & ~*(void *)(v15 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v28 = v24 == v27;
        if (v24 == v27) {
          unint64_t v24 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v15 + 8 * v24);
      }
      while (v29 == -1);
      unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
    }
    *(void *)(v15 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    uint64_t result = sub_10003E068((uint64_t)v10, *(void *)(v11 + 48) + v25 * v21, type metadata accessor for FriendInfoOption);
    ++*(void *)(v11 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    if (!a3) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1002466C8(unint64_t a1)
{
  return sub_10013E2F0(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_1002466DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_10003B9E4(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_100246774(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  BOOL v28 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v27 = (char *)v21 - v6;
  uint64_t v7 = sub_100044014(&qword_1003ECFB8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  sub_100017ACC(&qword_1003EE920, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v29 = Set.init(minimumCapacity:)();
  if (v10)
  {
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = v11 + 40;
    unint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 32);
    unint64_t v25 = v12;
    uint64_t v22 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v23 = v14;
    uint64_t v26 = v11;
    unint64_t v16 = (void (**)(uint64_t, uint64_t))(v11 - 8);
    v21[1] = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v18 = (uint64_t)v27;
    unint64_t v17 = v28;
    while (1)
    {
      v25(v9, v13, v2);
      unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v9, 0, 1, v2);
      if ((*v24)(v9, 1, v2) == 1) {
        break;
      }
      (*v22)(v17, v9, v2);
      sub_100154694(v18, v17);
      (*v16)(v18, v2);
      v13 += v23;
      if (!--v10) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_7:
    v19(v9, 1, 1, v2);
  }
  return v29;
}

uint64_t sub_100246A1C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Device();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_100017ACC(&qword_1003ECEA0, (void (*)(uint64_t))&type metadata accessor for Device);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v17 = result;
  if (v9)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v15 = *(void *)(v11 + 56);
    do
    {
      v12(v6, v14, v2);
      sub_1001549B8((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v11 - 8))(v8, v2);
      v14 += v15;
      --v9;
    }
    while (v9);
    return v17;
  }
  return result;
}

uint64_t sub_100246BB8(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  sub_10015F194();
  sub_100017ACC(&qword_1003F2C58, (void (*)(uint64_t))sub_10015F194);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return v10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      return v10;
    }
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        uint64_t v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        sub_100154CDC(&v9, v6);
      }
    }
    else
    {
      uint64_t v7 = (void **)(a1 + 32);
      do
      {
        uint64_t v8 = *v7++;
        sub_100154CDC(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100246D2C(uint64_t a1)
{
  uint64_t v43 = type metadata accessor for HandleType();
  uint64_t v2 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v42 = (char *)v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FriendRecord(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4 - 8);
  uint64_t v55 = (uint64_t)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v54 = (Swift::String *)((char *)v40 - v9);
  __chkstk_darwin(v8);
  uint64_t v49 = (uint64_t)v40 - v10;
  uint64_t v59 = type metadata accessor for Handle();
  uint64_t v11 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v58 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Friend();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v44 = (char *)v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v40 - v17;
  uint64_t v53 = *(void *)(a1 + 16);
  if (!v53) {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v19 = v14 + 16;
  uint64_t v20 = v21;
  uint64_t v52 = a1 + ((*(unsigned __int8 *)(v19 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 64));
  uint64_t v22 = *(void *)(v19 + 56);
  uint64_t v57 = (void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v41 = (void (**)(uint64_t, uint64_t))(v2 + 8);
  uint64_t v50 = (void (**)(char *, uint64_t))(v19 - 8);
  uint64_t v51 = v22;
  v40[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v23 = 0;
  unint64_t v24 = _swiftEmptyArrayStorage;
  uint64_t v47 = v13;
  uint64_t v48 = v5;
  uint64_t v45 = v21;
  uint64_t v46 = v19;
  while (1)
  {
    v20(v18, v52 + v51 * v23, v13);
    uint64_t v61 = v24[2];
    if (!v61)
    {
LABEL_14:
      uint64_t v34 = (uint64_t)v44;
      v20(v44, (uint64_t)v18, v13);
      uint64_t v35 = v54;
      sub_1000D7270(v34, v54);
      sub_100045728((uint64_t)v35, v55, type metadata accessor for FriendRecord);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v24 = (void *)sub_10013E2F0(0, v24[2] + 1, 1, (unint64_t)v24);
      }
      unint64_t v37 = v24[2];
      unint64_t v36 = v24[3];
      if (v37 >= v36 >> 1) {
        unint64_t v24 = (void *)sub_10013E2F0(v36 > 1, v37 + 1, 1, (unint64_t)v24);
      }
      void v24[2] = v37 + 1;
      sub_10003E068(v55, (uint64_t)v24+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v37, type metadata accessor for FriendRecord);
      sub_100044BDC((uint64_t)v54, type metadata accessor for FriendRecord);
      goto LABEL_4;
    }
    uint64_t v56 = v23;
    unint64_t v25 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    swift_bridgeObjectRetain();
    unint64_t v26 = 0;
    uint64_t v60 = *(void *)(v5 + 72);
    while (1)
    {
      unint64_t v27 = v24;
      uint64_t v28 = *(void *)((char *)v24 + v25);
      uint64_t v29 = *(void **)((char *)v24 + v25 + 8);
      int64_t v30 = v58;
      Friend.handle.getter();
      Handle.identifier.getter();
      (*v57)(v30, v59);
      Swift::String v31 = String.lowercased()();
      swift_bridgeObjectRelease();
      if (v28 == v31._countAndFlagsBits && v29 == v31._object)
      {
        unint64_t v24 = v27;
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
      char v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v33) {
        break;
      }
      ++v26;
      v25 += v60;
      unint64_t v24 = v27;
      if (v61 == v26)
      {
        swift_bridgeObjectRelease();
        uint64_t v13 = v47;
        uint64_t v5 = v48;
        uint64_t v20 = v45;
        uint64_t v23 = v56;
        goto LABEL_14;
      }
    }
    unint64_t v24 = v27;
LABEL_20:
    uint64_t result = swift_bridgeObjectRelease();
    if (v26 >= v24[2]) {
      break;
    }
    sub_100045728((uint64_t)v24 + v25, v49, type metadata accessor for FriendRecord);
    uint64_t v39 = (uint64_t)v42;
    Friend.type.getter();
    sub_1000D8790(v18, v39);
    (*v41)(v39, v43);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1002466C8((unint64_t)v24);
      unint64_t v24 = (void *)result;
    }
    uint64_t v5 = v48;
    if (v26 >= v24[2]) {
      goto LABEL_29;
    }
    sub_100247588(v49, (uint64_t)v24 + v25);
    uint64_t v13 = v47;
    uint64_t v20 = v45;
    uint64_t v23 = v56;
LABEL_4:
    ++v23;
    (*v50)(v18, v13);
    if (v23 == v53)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v24;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_10024736C()
{
  return sub_100240E18(v0[2], v0[3], v0[4]);
}

unint64_t sub_10024738C()
{
  unint64_t result = qword_1003F2B50;
  if (!qword_1003F2B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003F2B50);
  }
  return result;
}

uint64_t sub_1002473E0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10004AE58(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10024744C()
{
  unint64_t result = qword_1003F2BD0;
  if (!qword_1003F2BD0)
  {
    sub_10004AE58(&qword_1003ED258);
    sub_100032194((unint64_t *)&qword_1003ED238);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003F2BD0);
  }
  return result;
}

unint64_t sub_1002474E4()
{
  unint64_t result = qword_1003EED78;
  if (!qword_1003EED78)
  {
    sub_10004AE58(&qword_1003EED50);
    sub_100017ACC(&qword_1003EED80, (void (*)(uint64_t))type metadata accessor for FriendInfoOption);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003EED78);
  }
  return result;
}

uint64_t sub_100247588(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FriendRecord(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

BOOL sub_1002475EC(uint64_t a1)
{
  return sub_1000D93C4(a1);
}

void sub_10024760C(_OWORD *a1)
{
  *a1 = xmmword_100368320;
  bzero(a1 + 1, 0x231uLL);
}

unint64_t destroy for LocalStorageStore.Error(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s13findmylocated17LocalStorageStoreC5ErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for LocalStorageStore.Error(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LocalStorageStore.Error(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalStorageStore.Error(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for LocalStorageStore.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_100247840(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_100247858(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalStorageStore.Error()
{
  return &type metadata for LocalStorageStore.Error;
}

void *sub_100247888@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  PropertyListDecoder.init()();
  if (qword_1003EC280 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100044014(&qword_1003F2590);
  sub_100044058(v5, (uint64_t)qword_10040BDF8);
  Row.subscript.getter();
  uint64_t v69 = *(void *)&__src[0];
  if (qword_1003EC288 != -1) {
    swift_once();
  }
  sub_100044058(v5, (uint64_t)qword_10040BE10);
  Row.subscript.getter();
  long long v6 = __src[0];
  if (qword_1003EC290 != -1) {
    swift_once();
  }
  sub_100044058(v5, (uint64_t)qword_10040BE28);
  Row.subscript.getter();
  long long v7 = __src[0];
  if (qword_1003EC298 != -1) {
    swift_once();
  }
  sub_100044058(v5, (uint64_t)qword_10040BE40);
  Row.subscript.getter();
  long long v8 = __src[0];
  if (qword_1003EC2A0 != -1) {
    swift_once();
  }
  sub_100044058(v5, (uint64_t)qword_10040BE58);
  Row.subscript.getter();
  long long v9 = __src[0];
  if (qword_1003EC2A8 != -1) {
    swift_once();
  }
  uint64_t v94 = sub_100044014(&qword_1003EF200);
  sub_100044058(v94, (uint64_t)qword_10040BE70);
  Row.subscript.getter();
  if (*((void *)&__src[0] + 1) >> 60 == 15)
  {
    __dst = a2;
    uint64_t v71 = 0;
  }
  else
  {
    sub_100044014(&qword_1003ED230);
    sub_100022C64(*(uint64_t *)&__src[0], *((unint64_t *)&__src[0] + 1));
    sub_10024915C();
    dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
    if (v2)
    {
      sub_1000440E8(*(uint64_t *)&__src[0], *((unint64_t *)&__src[0] + 1));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v10 = type metadata accessor for Row();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(a1, v10);
      swift_release();
      unint64_t v12 = *((void *)&__src[0] + 1);
      uint64_t v11 = *(void *)&__src[0];
      return (void *)sub_1000440E8(v11, v12);
    }
    __dst = a2;
    sub_1000440E8(*(uint64_t *)&__src[0], *((unint64_t *)&__src[0] + 1));
    uint64_t v71 = *(void *)&__src[0];
  }
  if (qword_1003EC2B0 != -1) {
    swift_once();
  }
  sub_100044058(v5, (uint64_t)qword_10040BE88);
  Row.subscript.getter();
  uint64_t v70 = *((void *)&__src[0] + 1);
  if (qword_1003EC2B8 != -1) {
    swift_once();
  }
  sub_100044058(v94, (uint64_t)qword_10040BEA0);
  Row.subscript.getter();
  if (*((void *)&__src[0] + 1) >> 60 == 15)
  {
    *(void *)&long long v67 = 0;
    *((void *)&v67 + 1) = *((void *)&__src[0] + 1);
  }
  else
  {
    sub_100044014(&qword_1003ED230);
    sub_100022C64(*(uint64_t *)&__src[0], *((unint64_t *)&__src[0] + 1));
    sub_10024915C();
    dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
    if (v2)
    {
      sub_1000440E8(*(uint64_t *)&__src[0], *((unint64_t *)&__src[0] + 1));
      sub_1000440E8(*(uint64_t *)&__src[0], *((unint64_t *)&__src[0] + 1));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = type metadata accessor for Row();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a1, v13);
      swift_release();
      return (void *)sub_1000440E8(*(uint64_t *)&__src[0], *((unint64_t *)&__src[0] + 1));
    }
    sub_1000440E8(*(uint64_t *)&__src[0], *((unint64_t *)&__src[0] + 1));
    long long v67 = __src[0];
  }
  if (qword_1003EC2C0 != -1) {
    swift_once();
  }
  sub_100044058(v5, (uint64_t)qword_10040BEB8);
  Row.subscript.getter();
  long long v15 = __src[0];
  if (qword_1003EC2C8 != -1) {
    swift_once();
  }
  uint64_t v68 = *((void *)&__src[0] + 1);
  uint64_t v16 = sub_100044014(&qword_1003EF230);
  sub_100044058(v16, (uint64_t)qword_10040BED0);
  Row.subscript.getter();
  long long v17 = __src[0];
  if (qword_1003EC2D0 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_100044014(&qword_1003F25A8);
  sub_100044058(v18, (uint64_t)qword_10040BEE8);
  Row.subscript.getter();
  char v64 = __src[0];
  if (qword_1003EC2D8 != -1) {
    swift_once();
  }
  sub_100044058(v5, (uint64_t)qword_10040BF00);
  Row.subscript.getter();
  long long v19 = __src[0];
  if (qword_1003EC2E0 != -1) {
    swift_once();
  }
  uint64_t v65 = *(void *)&__src[0];
  sub_100044058(v5, (uint64_t)qword_10040BF18);
  Row.subscript.getter();
  long long v20 = __src[0];
  if (qword_1003EC2E8 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_100044014(&qword_1003F25B0);
  sub_100044058(v21, (uint64_t)qword_10040BF30);
  Row.subscript.getter();
  uint64_t v63 = *(void *)&__src[0];
  char v62 = BYTE8(__src[0]);
  if (qword_1003EC2F8 != -1) {
    swift_once();
  }
  sub_100044058(v5, (uint64_t)qword_10040BF60);
  Row.subscript.getter();
  long long v22 = __src[0];
  if (qword_1003EC2F0 != -1) {
    swift_once();
  }
  sub_100044058(v21, (uint64_t)qword_10040BF48);
  Row.subscript.getter();
  uint64_t v61 = *(void *)&__src[0];
  char v60 = BYTE8(__src[0]);
  if (qword_1003EC300 != -1) {
    swift_once();
  }
  sub_100044058(v18, (uint64_t)qword_10040BF78);
  Row.subscript.getter();
  char v59 = __src[0];
  if (qword_1003EC308 != -1) {
    swift_once();
  }
  sub_100044058(v94, (uint64_t)qword_10040BF90);
  Row.subscript.getter();
  unint64_t v23 = *((void *)&__src[0] + 1);
  uint64_t v24 = *(void *)&__src[0];
  if (*((void *)&__src[0] + 1) >> 60 == 15)
  {
    uint64_t v58 = 0;
  }
  else
  {
    sub_100044014(&qword_1003ED230);
    sub_100022C64(*(uint64_t *)&__src[0], *((unint64_t *)&__src[0] + 1));
    sub_10024915C();
    dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
    if (v2)
    {
      sub_1000440E8(*(uint64_t *)&__src[0], *((unint64_t *)&__src[0] + 1));
      sub_1000440E8(*(uint64_t *)&__src[0], *((unint64_t *)&v67 + 1));
      sub_1000440E8(*(uint64_t *)&__src[0], *((unint64_t *)&__src[0] + 1));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_78:
      swift_bridgeObjectRelease();
      uint64_t v30 = type metadata accessor for Row();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(a1, v30);
      swift_release();
      uint64_t v11 = v24;
      unint64_t v12 = v23;
      return (void *)sub_1000440E8(v11, v12);
    }
    sub_1000440E8(*(uint64_t *)&__src[0], *((unint64_t *)&__src[0] + 1));
    uint64_t v58 = *(void *)&__src[0];
  }
  if (qword_1003EC310 != -1) {
    swift_once();
  }
  sub_100044058(v5, (uint64_t)qword_10040BFA8);
  Row.subscript.getter();
  long long v25 = __src[0];
  if (qword_1003EC318 != -1) {
    swift_once();
  }
  sub_100044058(v21, (uint64_t)qword_10040BFC0);
  Row.subscript.getter();
  uint64_t v57 = *(void *)&__src[0];
  char v56 = BYTE8(__src[0]);
  if (qword_1003EC320 != -1) {
    swift_once();
  }
  sub_100044058(v5, (uint64_t)qword_10040BFD8);
  Row.subscript.getter();
  uint64_t v55 = *(void *)&__src[0];
  if (qword_1003EC328 != -1) {
    swift_once();
  }
  sub_100044058(v5, (uint64_t)qword_10040BFF0);
  Row.subscript.getter();
  long long v26 = __src[0];
  if (qword_1003EC330 != -1) {
    swift_once();
  }
  sub_100044058(v5, (uint64_t)qword_10040C008);
  Row.subscript.getter();
  long long v27 = __src[0];
  if (qword_1003EC338 != -1) {
    swift_once();
  }
  sub_100044058(v5, (uint64_t)qword_10040C020);
  Row.subscript.getter();
  long long v28 = __src[0];
  if (qword_1003EC340 != -1) {
    swift_once();
  }
  uint64_t v29 = sub_100044014(&qword_1003F25D8);
  sub_100044058(v29, (uint64_t)qword_10040C038);
  Row.subscript.getter();
  uint64_t v54 = *(void *)&__src[0];
  char v53 = BYTE8(__src[0]);
  if (qword_1003EC348 != -1) {
    swift_once();
  }
  sub_100044058(v5, (uint64_t)qword_10040C050);
  Row.subscript.getter();
  if (qword_1003EC350 != -1) {
    swift_once();
  }
  sub_100044058(v5, (uint64_t)qword_10040C068);
  Row.subscript.getter();
  if (qword_1003EC358 != -1) {
    swift_once();
  }
  sub_100044058(v5, (uint64_t)qword_10040C080);
  Row.subscript.getter();
  if (qword_1003EC360 != -1) {
    swift_once();
  }
  sub_100044058(v94, (uint64_t)qword_10040C098);
  Row.subscript.getter();
  unint64_t v23 = *((void *)&__src[0] + 1);
  uint64_t v24 = *(void *)&__src[0];
  if (*((void *)&__src[0] + 1) >> 60 != 15)
  {
    sub_100044014(&qword_1003ED230);
    sub_100022C64(*(uint64_t *)&__src[0], *((unint64_t *)&__src[0] + 1));
    sub_10024915C();
    dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
    if (!v2)
    {
      sub_1000440E8(*(uint64_t *)&__src[0], *((unint64_t *)&__src[0] + 1));
      uint64_t v35 = *(void *)&__src[0];
      goto LABEL_81;
    }
    sub_1000440E8(*(uint64_t *)&__src[0], *((unint64_t *)&__src[0] + 1));
    sub_1000440E8(*(uint64_t *)&__src[0], *((unint64_t *)&__src[0] + 1));
    sub_1000440E8(*(uint64_t *)&__src[0], *((unint64_t *)&v67 + 1));
    sub_1000440E8(*(uint64_t *)&__src[0], *((unint64_t *)&__src[0] + 1));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_78;
  }
  uint64_t v35 = 0;
LABEL_81:
  if (qword_1003EC368 != -1) {
    swift_once();
  }
  sub_100044058(v5, (uint64_t)qword_10040C0B0);
  Row.subscript.getter();
  uint64_t v50 = *((void *)&v72[0] + 1);
  uint64_t v51 = *(void *)&v72[0];
  if (qword_1003EC370 != -1) {
    swift_once();
  }
  sub_100044058(v5, (uint64_t)qword_10040C0C8);
  Row.subscript.getter();
  uint64_t v48 = *((void *)&v72[0] + 1);
  uint64_t v49 = *(void *)&v72[0];
  if (qword_1003EC378 != -1) {
    swift_once();
  }
  sub_100044058(v5, (uint64_t)qword_10040C0E0);
  Row.subscript.getter();
  uint64_t v46 = *((void *)&v72[0] + 1);
  uint64_t v47 = *(void *)&v72[0];
  if (qword_1003EC380 != -1) {
    swift_once();
  }
  sub_100044058(v5, (uint64_t)qword_10040C0F8);
  Row.subscript.getter();
  uint64_t v44 = *((void *)&v72[0] + 1);
  uint64_t v45 = *(void *)&v72[0];
  if (qword_1003EC388 != -1) {
    swift_once();
  }
  sub_100044058(v5, (uint64_t)qword_10040C110);
  Row.subscript.getter();
  uint64_t v42 = *((void *)&v72[0] + 1);
  uint64_t v43 = *(void *)&v72[0];
  if (qword_1003EC390 != -1) {
    swift_once();
  }
  sub_100044058(v5, (uint64_t)qword_10040C128);
  Row.subscript.getter();
  uint64_t v40 = *((void *)&v72[0] + 1);
  uint64_t v41 = *(void *)&v72[0];
  if (qword_1003EC398 != -1) {
    swift_once();
  }
  sub_100044058(v5, (uint64_t)qword_10040C140);
  Row.subscript.getter();
  uint64_t v38 = *((void *)&v72[0] + 1);
  uint64_t v39 = *(void *)&v72[0];
  if (qword_1003EC3A0 != -1) {
    swift_once();
  }
  uint64_t v94 = v2;
  sub_100044058(v5, (uint64_t)qword_10040C158);
  Row.subscript.getter();
  uint64_t v36 = *((void *)&v72[0] + 1);
  uint64_t v37 = *(void *)&v72[0];
  if (qword_1003EC3A8 != -1) {
    swift_once();
  }
  uint64_t v52 = *((void *)&__src[0] + 1);
  sub_100044058(v5, (uint64_t)qword_10040C170);
  Row.subscript.getter();
  long long v31 = v72[0];
  if (qword_1003EC3B0 != -1) {
    swift_once();
  }
  sub_100044058(v5, (uint64_t)qword_10040C188);
  Row.subscript.getter();
  long long v32 = v72[0];
  if (qword_1003EC3B8 != -1) {
    swift_once();
  }
  sub_100044058(v5, (uint64_t)qword_10040C1A0);
  Row.subscript.getter();
  swift_release();
  sub_1000440E8(*(uint64_t *)&__src[0], *((unint64_t *)&__src[0] + 1));
  sub_1000440E8(*(uint64_t *)&__src[0], *((unint64_t *)&__src[0] + 1));
  sub_1000440E8(*(uint64_t *)&__src[0], *((unint64_t *)&v67 + 1));
  sub_1000440E8(*(uint64_t *)&__src[0], *((unint64_t *)&__src[0] + 1));
  uint64_t v33 = type metadata accessor for Row();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(a1, v33);
  long long v34 = v72[0];
  v72[0] = __src[0];
  v72[1] = __src[0];
  v72[2] = __src[0];
  uint64_t v73 = v35;
  uint64_t v74 = v51;
  uint64_t v75 = v50;
  uint64_t v76 = v49;
  uint64_t v77 = v48;
  uint64_t v78 = v47;
  uint64_t v79 = v46;
  uint64_t v80 = v45;
  uint64_t v81 = v44;
  uint64_t v82 = v43;
  uint64_t v83 = v42;
  uint64_t v84 = v41;
  uint64_t v85 = v40;
  uint64_t v86 = v39;
  uint64_t v87 = v38;
  uint64_t v88 = v37;
  uint64_t v89 = v36;
  long long v90 = v31;
  long long v91 = v32;
  long long v92 = v34;
  nullsub_1(v72);
  *(void *)&__src[0] = v69;
  *((void *)&__src[0] + 1) = v68;
  __src[1] = v6;
  __src[2] = v7;
  __src[3] = v8;
  __src[4] = v9;
  *(void *)&__src[5] = v71;
  *((void *)&__src[5] + 1) = v65;
  *(void *)&__src[6] = v70;
  *((void *)&__src[6] + 1) = v67;
  __src[7] = v15;
  sub_100062514((uint64_t)v72, (uint64_t)&__src[8]);
  *(_OWORD *)((char *)&__src[22] + 8) = v17;
  BYTE8(__src[23]) = v64;
  __src[24] = v19;
  __src[25] = v20;
  BYTE8(__src[26]) = v62;
  *(void *)&__src[26] = v63;
  __src[27] = v22;
  *(void *)&__src[28] = v61;
  BYTE8(__src[28]) = v60;
  BYTE9(__src[28]) = v59;
  *(void *)&__src[29] = v58;
  *(_OWORD *)((char *)&__src[29] + 8) = v25;
  *((void *)&__src[30] + 1) = v57;
  LOBYTE(__src[31]) = v56;
  *((void *)&__src[31] + 1) = v55;
  *(void *)&__src[32] = v52;
  *(_OWORD *)((char *)&__src[32] + 8) = v26;
  *(_OWORD *)((char *)&__src[33] + 8) = v27;
  *(_OWORD *)((char *)&__src[34] + 8) = v28;
  *((void *)&__src[35] + 1) = v54;
  LOBYTE(__src[36]) = v53;
  return memcpy(__dst, __src, 0x241uLL);
}

unint64_t sub_10024915C()
{
  unint64_t result = qword_1003ED618;
  if (!qword_1003ED618)
  {
    sub_10004AE58(&qword_1003ED230);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003ED618);
  }
  return result;
}

uint64_t sub_1002491C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v38 = type metadata accessor for Fence.TriggerID();
  uint64_t v45 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v44 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Fence.ID();
  uint64_t v42 = *(void *)(v4 - 8);
  uint64_t v43 = v4;
  __chkstk_darwin(v4);
  uint64_t v46 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Fence.TriggerPosition();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  long long v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v36 - v10;
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v39 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v52 = (char *)&v36 - v17;
  __chkstk_darwin(v16);
  long long v19 = (char *)&v36 - v18;
  if (qword_1003EC3C0 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_100044014(&qword_1003EF240);
  sub_100044058(v20, (uint64_t)qword_10040C1B8);
  Row.subscript.getter();
  if (qword_1003EC3C8 != -1) {
    swift_once();
  }
  uint64_t v49 = v19;
  sub_100044058(v20, (uint64_t)qword_10040C1D0);
  Row.subscript.getter();
  if (qword_1003EC3D0 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_100044014(&qword_1003EF1F0);
  sub_100044058(v21, (uint64_t)qword_10040C1E8);
  Row.subscript.getter();
  uint64_t v22 = v50;
  unint64_t v23 = v51;
  uint64_t v47 = a1;
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  sub_100022C64(v22, v23);
  PropertyListDecoder.init()();
  sub_1002497E4();
  uint64_t v24 = v48;
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  if (v24)
  {
    sub_100044090(v22, v23);
    swift_release();
    sub_100044090(v22, v23);
    uint64_t v25 = type metadata accessor for Row();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v47, v25);
    long long v26 = *(void (**)(char *, uint64_t))(v13 + 8);
    v26(v52, v12);
    return ((uint64_t (*)(char *, uint64_t))v26)(v49, v12);
  }
  else
  {
    uint64_t v36 = v6;
    sub_100044090(v22, v23);
    swift_release();
    uint64_t v37 = v11;
    uint64_t v40 = *(void *)(v40 + 32);
    ((void (*)(char *, char *, uint64_t))v40)(v11, v9, v6);
    long long v28 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    uint64_t v48 = 0;
    uint64_t v29 = v39;
    v28(v39, v49, v12);
    Fence.ID.init(id:)();
    uint64_t v30 = v52;
    v28(v29, v52, v12);
    long long v31 = v44;
    Fence.TriggerID.init(id:)();
    sub_100044090(v22, v23);
    uint64_t v32 = type metadata accessor for Row();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v47, v32);
    uint64_t v33 = *(void (**)(char *, uint64_t))(v13 + 8);
    v33(v30, v12);
    v33(v49, v12);
    uint64_t v34 = type metadata accessor for FenceTriggerRecord();
    uint64_t v35 = v41;
    ((void (*)(uint64_t, char *, uint64_t))v40)(v41 + *(int *)(v34 + 24), v37, v36);
    (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v35, v46, v43);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v45 + 32))(v35 + *(int *)(v34 + 20), v31, v38);
  }
}

unint64_t sub_1002497E4()
{
  unint64_t result = qword_1003F2CA0;
  if (!qword_1003F2CA0)
  {
    type metadata accessor for Fence.TriggerPosition();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003F2CA0);
  }
  return result;
}

uint64_t sub_10024983C(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  unint64_t v3 = sub_1001220A4(a1);
  if ((v4 & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(void *)(*(void *)(a2 + 56) + 24 * v3);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_1002498BC(uint64_t a1)
{
  uint64_t v58 = sub_100044014(&qword_1003F3210);
  uint64_t v3 = __chkstk_darwin(v58);
  uint64_t v57 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  char v56 = (char *)&v48 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v55 = (uint64_t)&v48 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v54 = (char *)&v48 - v10;
  __chkstk_darwin(v9);
  char v53 = (char *)&v48 - v11;
  int64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = _swiftEmptyArrayStorage;
  if (!v12) {
    return (uint64_t)v13;
  }
  uint64_t v48 = v1;
  char v64 = _swiftEmptyArrayStorage;
  sub_10003CB84(0, v12, 0);
  uint64_t result = sub_1000FF0BC(a1);
  unint64_t v16 = result;
  uint64_t v17 = 0;
  uint64_t v18 = a1 + 64;
  uint64_t v59 = a1 + 80;
  uint64_t v51 = a1 + 64;
  uint64_t v52 = a1;
  int64_t v49 = v12;
  uint64_t v50 = v15;
  uint64_t v19 = v58;
  while ((v16 & 0x8000000000000000) == 0 && (uint64_t)v16 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v21 = v16 >> 6;
    if ((*(void *)(v18 + 8 * (v16 >> 6)) & (1 << v16)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v15) {
      goto LABEL_26;
    }
    uint64_t v60 = v17;
    uint64_t v61 = 1 << v16;
    uint64_t v22 = *(int *)(v19 + 48);
    uint64_t v23 = *(void *)(a1 + 48);
    uint64_t v24 = type metadata accessor for Handle();
    uint64_t v62 = *(void *)(v24 - 8);
    uint64_t v25 = *(void (**)(char *, unint64_t, uint64_t))(v62 + 16);
    uint64_t v26 = (uint64_t)v53;
    v25(v53, v23 + *(void *)(v62 + 72) * v16, v24);
    uint64_t v27 = *(void *)(a1 + 56);
    unint64_t v63 = v16;
    uint64_t v28 = *(void *)(v27 + 8 * v16);
    *(void *)(v26 + v22) = v28;
    uint64_t v29 = (uint64_t)v54;
    v25(v54, v26, v24);
    *(void *)(v29 + *(int *)(v19 + 48)) = v28;
    uint64_t v30 = v55;
    sub_100013B50(v29, v55, &qword_1003F3210);
    swift_bridgeObjectRetain_n();
    sub_10000A520(v26, &qword_1003F3210);
    uint64_t v31 = *(int *)(v19 + 48);
    uint64_t v32 = v56;
    v25(v56, v30, v24);
    uint64_t v33 = *(void *)(v30 + v31);
    uint64_t v34 = *(int *)(v19 + 48);
    uint64_t v35 = (uint64_t)v57;
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v57, v32, v24);
    *(void *)(v35 + v34) = v33;
    swift_bridgeObjectRetain();
    uint64_t v36 = Handle.identifier.getter();
    uint64_t v38 = v37;
    sub_10000A520(v35, &qword_1003F3210);
    sub_10000A520(v30, &qword_1003F3210);
    uint64_t v13 = v64;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_10003CB84(0, v13[2] + 1, 1);
      uint64_t v13 = v64;
    }
    unint64_t v40 = v13[2];
    unint64_t v39 = v13[3];
    int64_t v41 = v63;
    if (v40 >= v39 >> 1)
    {
      uint64_t result = sub_10003CB84(v39 > 1, v40 + 1, 1);
      uint64_t v13 = v64;
    }
    v13[2] = v40 + 1;
    uint64_t v42 = &v13[2 * v40];
    v42[4] = v36;
    v42[5] = v38;
    a1 = v52;
    unint64_t v16 = 1 << *(unsigned char *)(v52 + 32);
    if (v41 >= (uint64_t)v16) {
      goto LABEL_27;
    }
    uint64_t v18 = v51;
    uint64_t v43 = *(void *)(v51 + 8 * v21);
    if ((v43 & v61) == 0) {
      goto LABEL_28;
    }
    LODWORD(v15) = v50;
    if (*(_DWORD *)(v52 + 36) != v50) {
      goto LABEL_29;
    }
    unint64_t v44 = v43 & (-2 << (v41 & 0x3F));
    if (v44)
    {
      unint64_t v16 = __clz(__rbit64(v44)) | v41 & 0xFFFFFFFFFFFFFFC0;
      int64_t v20 = v49;
    }
    else
    {
      unint64_t v45 = v21 + 1;
      unint64_t v46 = (v16 + 63) >> 6;
      int64_t v20 = v49;
      if (v21 + 1 < v46)
      {
        unint64_t v47 = *(void *)(v51 + 8 * v45);
        if (v47)
        {
LABEL_22:
          unint64_t v16 = __clz(__rbit64(v47)) + (v45 << 6);
        }
        else
        {
          while (v46 - 2 != v21)
          {
            unint64_t v47 = *(void *)(v59 + 8 * v21++);
            if (v47)
            {
              unint64_t v45 = v21 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    uint64_t v17 = v60 + 1;
    if (v60 + 1 == v20) {
      return (uint64_t)v13;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void *sub_100249D50(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_100245EC8(0, v1, 0);
  uint64_t result = (void *)sub_1000FF0C0(a1);
  uint64_t v5 = (uint64_t)result;
  uint64_t v6 = 0;
  uint64_t v7 = a1 + 64;
  int64_t v19 = v1;
  int v20 = v4;
  uint64_t v21 = a1 + 64;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v10 = (unint64_t)v5 >> 6;
    if ((*(void *)(v7 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v4) {
      goto LABEL_24;
    }
    uint64_t v11 = *(void *)(*(void *)(a1 + 56) + 24 * v5);
    unint64_t v12 = _swiftEmptyArrayStorage[2];
    unint64_t v13 = _swiftEmptyArrayStorage[3];
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v12 >= v13 >> 1) {
      uint64_t result = (void *)sub_100245EC8(v13 > 1, v12 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v12 + 1;
    _swiftEmptyArrayStorage[v12 + 4] = v11;
    int64_t v8 = 1 << *(unsigned char *)(a1 + 32);
    if (v5 >= v8) {
      goto LABEL_25;
    }
    uint64_t v7 = a1 + 64;
    uint64_t v14 = *(void *)(v21 + 8 * v10);
    if ((v14 & (1 << v5)) == 0) {
      goto LABEL_26;
    }
    int v4 = v20;
    if (*(_DWORD *)(a1 + 36) != v20) {
      goto LABEL_27;
    }
    unint64_t v15 = v14 & (-2 << (v5 & 0x3F));
    if (v15)
    {
      int64_t v8 = __clz(__rbit64(v15)) | v5 & 0xFFFFFFFFFFFFFFC0;
      int64_t v9 = v19;
    }
    else
    {
      unint64_t v16 = v10 + 1;
      unint64_t v17 = (unint64_t)(v8 + 63) >> 6;
      int64_t v9 = v19;
      if (v10 + 1 < v17)
      {
        unint64_t v18 = *(void *)(v21 + 8 * v16);
        if (v18)
        {
LABEL_20:
          int64_t v8 = __clz(__rbit64(v18)) + (v16 << 6);
        }
        else
        {
          while (v17 - 2 != v10)
          {
            unint64_t v18 = *(void *)(a1 + 80 + 8 * v10++);
            if (v18)
            {
              unint64_t v16 = v10 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v6;
    uint64_t v5 = v8;
    if (v6 == v9) {
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_100249F58(uint64_t a1)
{
  uint64_t v74 = sub_100044014(&qword_1003F3308);
  uint64_t v3 = __chkstk_darwin(v74);
  unint64_t v63 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v62 = (char *)&v51 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v61 = (char *)&v51 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v60 = (char *)&v51 - v10;
  __chkstk_darwin(v9);
  uint64_t v59 = (char *)&v51 - v11;
  uint64_t v75 = type metadata accessor for Handle();
  uint64_t v12 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v15 = *(void *)(a1 + 16);
  unint64_t v16 = _swiftEmptyArrayStorage;
  if (!v15) {
    return (uint64_t)v16;
  }
  uint64_t v51 = v1;
  uint64_t v76 = _swiftEmptyArrayStorage;
  sub_100020D44(0, v15, 0);
  uint64_t result = sub_1000FF0BC(a1);
  unint64_t v19 = result;
  uint64_t v20 = 0;
  uint64_t v21 = a1 + 64;
  uint64_t v55 = v12 + 16;
  char v56 = v14;
  uint64_t v73 = v12 + 32;
  uint64_t v64 = a1 + 80;
  uint64_t v57 = v12;
  uint64_t v58 = a1;
  int64_t v52 = v15;
  uint64_t v53 = v18;
  uint64_t v54 = a1 + 64;
  uint64_t v22 = (uint64_t)v61;
  while ((v19 & 0x8000000000000000) == 0 && (uint64_t)v19 < 1 << *(unsigned char *)(a1 + 32))
  {
    if ((*(void *)(v21 + 8 * (v19 >> 6)) & (1 << v19)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v18) {
      goto LABEL_26;
    }
    uint64_t v66 = 1 << v19;
    unint64_t v67 = v19 >> 6;
    uint64_t v65 = v20;
    uint64_t v24 = (uint64_t)v59;
    uint64_t v68 = &v59[*(int *)(v74 + 48)];
    uint64_t v25 = v68;
    uint64_t v26 = *(void *)(a1 + 48);
    uint64_t v71 = *(void *)(v12 + 72);
    uint64_t v27 = *(void (**)(char *, unint64_t, uint64_t))(v12 + 16);
    v27(v59, v26 + v71 * v19, v75);
    uint64_t v28 = *(void *)(a1 + 56);
    uint64_t v29 = type metadata accessor for Location();
    uint64_t v70 = *(void *)(v29 - 8);
    uint64_t v30 = *(void *)(v70 + 72);
    int64_t v72 = v19;
    uint64_t v31 = *(void (**)(char *, unint64_t, uint64_t))(v70 + 16);
    v31(v25, v28 + v30 * v19, v29);
    uint64_t v32 = (uint64_t)v60;
    uint64_t v69 = (void (*)(char *, uint64_t, uint64_t))v27;
    v27(v60, v24, v75);
    uint64_t v33 = v74;
    v31((char *)(v32 + *(int *)(v74 + 48)), (unint64_t)v68, v29);
    sub_100013B50(v32, v22, &qword_1003F3308);
    sub_10000A520(v24, &qword_1003F3308);
    uint64_t v34 = *(int *)(v33 + 48);
    uint64_t v35 = v62;
    uint64_t v36 = &v62[v34];
    unint64_t v37 = v22 + v34;
    v27(v62, v22, v75);
    v31(v36, v37, v29);
    uint64_t v12 = v57;
    uint64_t v38 = (uint64_t)v63;
    unint64_t v39 = &v63[*(int *)(v74 + 48)];
    unint64_t v40 = *(void (**)(char *, char *, uint64_t))(v57 + 32);
    v40(v63, v35, v75);
    int64_t v41 = v39;
    uint64_t v42 = v56;
    (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v41, v36, v29);
    v69(v42, v38, v75);
    sub_10000A520(v38, &qword_1003F3308);
    sub_10000A520(v22, &qword_1003F3308);
    unint64_t v16 = v76;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_100020D44(0, v16[2] + 1, 1);
      unint64_t v16 = v76;
    }
    unint64_t v44 = v16[2];
    unint64_t v43 = v16[3];
    if (v44 >= v43 >> 1)
    {
      sub_100020D44(v43 > 1, v44 + 1, 1);
      unint64_t v16 = v76;
    }
    v16[2] = v44 + 1;
    uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v40)((char *)v16+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ v44 * v71, v42, v75);
    uint64_t v76 = v16;
    a1 = v58;
    unint64_t v19 = 1 << *(unsigned char *)(v58 + 32);
    if (v72 >= (uint64_t)v19) {
      goto LABEL_27;
    }
    uint64_t v21 = v54;
    unint64_t v45 = v67;
    uint64_t v46 = *(void *)(v54 + 8 * v67);
    if ((v46 & v66) == 0) {
      goto LABEL_28;
    }
    LODWORD(v18) = v53;
    if (*(_DWORD *)(v58 + 36) != v53) {
      goto LABEL_29;
    }
    unint64_t v47 = v46 & (-2 << (v72 & 0x3F));
    if (v47)
    {
      unint64_t v19 = __clz(__rbit64(v47)) | v72 & 0xFFFFFFFFFFFFFFC0;
      int64_t v23 = v52;
    }
    else
    {
      unint64_t v48 = v67 + 1;
      unint64_t v49 = (v19 + 63) >> 6;
      int64_t v23 = v52;
      if (v67 + 1 < v49)
      {
        unint64_t v50 = *(void *)(v54 + 8 * v48);
        if (v50)
        {
LABEL_22:
          unint64_t v19 = __clz(__rbit64(v50)) + (v48 << 6);
        }
        else
        {
          while (v49 - 2 != v45)
          {
            unint64_t v50 = *(void *)(v64 + 8 * v45++);
            if (v50)
            {
              unint64_t v48 = v45 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    uint64_t v20 = v65 + 1;
    if (v65 + 1 == v23) {
      return (uint64_t)v16;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_10024A540(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Handle();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v48 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_100044014(&qword_1003F3308);
  uint64_t v5 = __chkstk_darwin(v43);
  uint64_t v46 = (uint64_t)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v42 = (char *)v37 - v7;
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v39 = a1 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  uint64_t v12 = v3 + 16;
  uint64_t v44 = v3;
  uint64_t v45 = a1;
  int64_t v40 = (unint64_t)(v9 + 63) >> 6;
  int64_t v41 = (void (**)(char *, uint64_t))(v3 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v14 = 0;
  *(void *)&long long v15 = 141558275;
  long long v38 = v15;
  v37[1] = (char *)&type metadata for Any + 8;
  while (1)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      int64_t v47 = v14;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v40) {
      return swift_release();
    }
    unint64_t v19 = *(void *)(v39 + 8 * v18);
    int64_t v20 = v14 + 1;
    if (!v19)
    {
      int64_t v20 = v14 + 2;
      if (v14 + 2 >= v40) {
        return swift_release();
      }
      unint64_t v19 = *(void *)(v39 + 8 * v20);
      if (!v19)
      {
        int64_t v20 = v14 + 3;
        if (v14 + 3 >= v40) {
          return swift_release();
        }
        unint64_t v19 = *(void *)(v39 + 8 * v20);
        if (!v19)
        {
          int64_t v20 = v14 + 4;
          if (v14 + 4 >= v40) {
            return swift_release();
          }
          unint64_t v19 = *(void *)(v39 + 8 * v20);
          if (!v19) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v19 - 1) & v19;
    int64_t v47 = v20;
    unint64_t v17 = __clz(__rbit64(v19)) + (v20 << 6);
LABEL_24:
    uint64_t v22 = v45;
    int64_t v23 = *(void (**)(char *, unint64_t, uint64_t))(v44 + 16);
    uint64_t v24 = (uint64_t)v42;
    v23(v42, *(void *)(v45 + 48) + *(void *)(v44 + 72) * v17, v2);
    uint64_t v25 = *(void *)(v22 + 56);
    uint64_t v26 = type metadata accessor for Location();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24 + *(int *)(v43 + 48), v25 + *(void *)(*(void *)(v26 - 8) + 72) * v17, v26);
    uint64_t v27 = v46;
    sub_100013B50(v24, v46, &qword_1003F3308);
    if (qword_1003EC408 != -1) {
      swift_once();
    }
    uint64_t v28 = type metadata accessor for Logger();
    sub_100044058(v28, (uint64_t)qword_10040C290);
    uint64_t v29 = v12;
    v23(v48, v27, v2);
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v33 = v48;
      uint64_t v34 = v32;
      uint64_t v49 = swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = v38;
      *(void *)(v34 + 4) = 1752392040;
      *(_WORD *)(v34 + 12) = 2081;
      uint64_t v35 = Handle.identifier.getter();
      *(void *)(v34 + 14) = sub_100037004(v35, v36, &v49);
      swift_bridgeObjectRelease();
      (*v41)(v33, v2);
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "LocationService: send location update for handle: %{private,mask.hash}s", (uint8_t *)v34, 0x16u);
      swift_arrayDestroy();
      uint64_t v27 = v46;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*v41)(v48, v2);
    }

    int64_t v14 = v47;
    uint64_t result = sub_10000A520(v27, &qword_1003F3308);
    uint64_t v12 = v29;
  }
  uint64_t v21 = v14 + 5;
  if (v14 + 5 >= v40) {
    return swift_release();
  }
  unint64_t v19 = *(void *)(v39 + 8 * v21);
  if (v19)
  {
    int64_t v20 = v14 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v20 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v20 >= v40) {
      return swift_release();
    }
    unint64_t v19 = *(void *)(v39 + 8 * v20);
    ++v21;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_10024AA28(uint64_t a1)
{
  uint64_t v20 = type metadata accessor for Handle();
  uint64_t v3 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6) {
    return _swiftEmptyArrayStorage;
  }
  void v18[2] = v1;
  uint64_t v7 = *(void *)(type metadata accessor for Friend() - 8);
  uint64_t v8 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v9 = (void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v19 = *(void *)(v7 + 72);
  v18[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v10 = _swiftEmptyArrayStorage;
  do
  {
    Friend.handle.getter();
    uint64_t v12 = Handle.serverID.getter();
    uint64_t v14 = v13;
    (*v9)(v5, v20);
    if (v14)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v10 = sub_10004AFDC(0, v10[2] + 1, 1, v10);
      }
      unint64_t v16 = v10[2];
      unint64_t v15 = v10[3];
      if (v16 >= v15 >> 1) {
        uint64_t v10 = sub_10004AFDC((void *)(v15 > 1), v16 + 1, 1, v10);
      }
      v10[2] = v16 + 1;
      unint64_t v11 = &v10[2 * v16];
      v11[4] = v12;
      v11[5] = v14;
    }
    v8 += v19;
    --v6;
  }
  while (v6);
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_10024AC3C(uint64_t a1)
{
  uint64_t v1 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  uint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = (void *)swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v7++, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v7 >= v5) {
      goto LABEL_24;
    }
    uint64_t v11 = *(void *)(v1 + 8 * v7);
    if (!v11) {
      break;
    }
LABEL_19:
    uint64_t v4 = (v11 - 1) & v11;
LABEL_5:
    swift_retain();
    uint64_t v8 = swift_bridgeObjectRetain();
    uint64_t v9 = sub_10024ADE8(v8);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t result = (void *)sub_10012D638((uint64_t)v9);
  }
  int64_t v12 = v7 + 1;
  if (v7 + 1 >= v5) {
    goto LABEL_24;
  }
  uint64_t v11 = *(void *)(v1 + 8 * v12);
  if (v11) {
    goto LABEL_18;
  }
  int64_t v12 = v7 + 2;
  if (v7 + 2 >= v5) {
    goto LABEL_24;
  }
  uint64_t v11 = *(void *)(v1 + 8 * v12);
  if (v11) {
    goto LABEL_18;
  }
  int64_t v12 = v7 + 3;
  if (v7 + 3 >= v5) {
    goto LABEL_24;
  }
  uint64_t v11 = *(void *)(v1 + 8 * v12);
  if (v11) {
    goto LABEL_18;
  }
  int64_t v12 = v7 + 4;
  if (v7 + 4 >= v5)
  {
LABEL_24:
    swift_release();
    return _swiftEmptyArrayStorage;
  }
  uint64_t v11 = *(void *)(v1 + 8 * v12);
  if (v11)
  {
LABEL_18:
    int64_t v7 = v12;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v7 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v7 >= v5) {
      goto LABEL_24;
    }
    uint64_t v11 = *(void *)(v1 + 8 * v7);
    ++v12;
    if (v11) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

void *sub_10024ADE8(uint64_t a1)
{
  uint64_t v1 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  uint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = (void *)swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    int64_t v9 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v9 >= v5) {
      goto LABEL_23;
    }
    uint64_t v10 = *(void *)(v1 + 8 * v9);
    ++v7;
    if (!v10)
    {
      int64_t v7 = v9 + 1;
      if (v9 + 1 >= v5) {
        goto LABEL_23;
      }
      uint64_t v10 = *(void *)(v1 + 8 * v7);
      if (!v10)
      {
        int64_t v7 = v9 + 2;
        if (v9 + 2 >= v5) {
          goto LABEL_23;
        }
        uint64_t v10 = *(void *)(v1 + 8 * v7);
        if (!v10)
        {
          int64_t v7 = v9 + 3;
          if (v9 + 3 >= v5) {
            goto LABEL_23;
          }
          uint64_t v10 = *(void *)(v1 + 8 * v7);
          if (!v10) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v4 = (v10 - 1) & v10;
LABEL_5:
    uint64_t v8 = swift_bridgeObjectRetain();
    uint64_t result = (void *)sub_10012D854(v8);
  }
  int64_t v11 = v9 + 4;
  if (v11 >= v5)
  {
LABEL_23:
    swift_release();
    return _swiftEmptyArrayStorage;
  }
  uint64_t v10 = *(void *)(v1 + 8 * v11);
  if (v10)
  {
    int64_t v7 = v11;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v7 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v7 >= v5) {
      goto LABEL_23;
    }
    uint64_t v10 = *(void *)(v1 + 8 * v7);
    ++v11;
    if (v10) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_10024AF58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10024AF98(a1, (uint64_t (*)(void))sub_100041B1C, (uint64_t (*)(void))&type metadata accessor for Device, (void (*)(void))sub_10027BFD0, a2);
}

uint64_t sub_10024AF98@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(void)@<X2>, void (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t result = a2();
  if (v11) {
    goto LABEL_10;
  }
  if (*(_DWORD *)(a1 + 36) != v10)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32))
  {
    uint64_t v12 = a3(0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a5;
    uint64_t v16 = 1;
  }
  else
  {
    a4();
    uint64_t v17 = a3(0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
    uint64_t v14 = v17;
    uint64_t v15 = a5;
    uint64_t v16 = 0;
  }

  return v13(v15, v16, 1, v14);
}

uint64_t sub_10024B09C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100052FAC(v0, qword_10040C278);
  sub_100044058(v0, (uint64_t)qword_10040C278);
  return Logger.init(subsystem:category:)();
}

Swift::Int sub_10024B120()
{
  return Hasher._finalize()();
}

uint64_t sub_10024B17C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t v4 = type metadata accessor for LocationServiceClient();
  uint64_t v6 = sub_1000207A4(&qword_1003F31A0, v5, (void (*)(uint64_t))type metadata accessor for LocationServiceClient);

  return static XPCAcceptedClient.== infix(_:_:)(v2, v3, v4, v6);
}

uint64_t sub_10024B204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  return _swift_task_switch(sub_10024B228, 0, 0);
}

uint64_t sub_10024B228()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[5];
  uint64_t v4 = (void *)swift_allocObject();
  v0[8] = v4;
  v4[2] = v3;
  v4[3] = v1;
  v4[4] = v2;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[9] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10024B344;
  return withTimeout<A>(_:block:)();
}

uint64_t sub_10024B344()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10024B460;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_100178850;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10024B460()
{
  char v11 = v0;
  uint64_t v1 = v0[10];
  swift_release();
  v0[2] = v1;
  OnceCheckedContinuation.resume(throwing:)();
  if (qword_1003EC400 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100044058(v2, (uint64_t)qword_10040C278);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446466;
    v0[3] = sub_100037004(0xD000000000000017, 0x8000000100378770, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v5 + 12) = 2114;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[4] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v6 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Uncaught error in %{public}s: %{public}@", (uint8_t *)v5, 0x16u);
    sub_100044014(&qword_1003ECCC8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10024B700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[11] = a3;
  v4[12] = a4;
  v4[10] = a2;
  return _swift_task_switch(sub_10024B724, 0, 0);
}

uint64_t sub_10024B724()
{
  static Task<>.checkCancellation()();
  os_log_type_t v4 = (uint64_t (*)(uint64_t, uint64_t (*)(), uint64_t))((char *)&async function pointer to dispatch thunk of FM.XPCSession.proxy(errorHandler:)
                                                               + async function pointer to dispatch thunk of FM.XPCSession.proxy(errorHandler:));
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10024B844;
  uint64_t v2 = *(void *)(v0 + 88);
  return v4(v0 + 64, sub_10027B0A8, v2);
}

uint64_t sub_10024B844()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1001CCB04;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_10024B960;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10024B960()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  uint64_t v3 = (void *)v0[8];
  type metadata accessor for PropertyListEncoder();
  swift_allocObject();
  PropertyListEncoder.init()();
  v0[9] = v2;
  sub_100044014(&qword_1003F03F8);
  sub_10027B3D4();
  uint64_t v4 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  if (v1)
  {
    swift_release();
  }
  else
  {
    uint64_t v7 = v4;
    unint64_t v8 = v5;
    uint64_t v9 = v0[11];
    swift_release();
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    v0[6] = sub_10027B4B8;
    v0[7] = v9;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_1001CB748;
    v0[5] = &unk_1003E3690;
    char v11 = _Block_copy(v0 + 2);
    swift_retain();
    swift_release();
    [v3 locationsForHandles:isa completion:v11];
    _Block_release(v11);

    sub_100044090(v7, v8);
  }
  swift_unknownObjectRelease();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_10024BB28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_100044014((uint64_t *)&unk_1003F3C10);
  __chkstk_darwin(v9 - 8);
  char v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = a2;
  v13[5] = a1;
  v13[6] = a3;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_10010405C((uint64_t)v11, a5, (uint64_t)v13);
  return swift_release();
}

uint64_t sub_10024BC40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  return _swift_task_switch(sub_10024BC64, 0, 0);
}

uint64_t sub_10024BC64()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[5];
  uint64_t v4 = (void *)swift_allocObject();
  v0[8] = v4;
  v4[2] = v3;
  v4[3] = v1;
  v4[4] = v2;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  unint64_t v5 = (void *)swift_task_alloc();
  v0[9] = v5;
  *unint64_t v5 = v0;
  v5[1] = sub_10024BD80;
  return withTimeout<A>(_:block:)();
}

uint64_t sub_10024BD80()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10024BE9C;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1001D6458;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10024BE9C()
{
  char v11 = v0;
  uint64_t v1 = v0[10];
  swift_release();
  v0[2] = v1;
  OnceCheckedContinuation.resume(throwing:)();
  if (qword_1003EC400 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100044058(v2, (uint64_t)qword_10040C278);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446466;
    v0[3] = sub_100037004(0xD00000000000001ALL, 0x8000000100378750, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v5 + 12) = 2114;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[4] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v6 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Uncaught error in %{public}s: %{public}@", (uint8_t *)v5, 0x16u);
    sub_100044014(&qword_1003ECCC8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  unint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10024C13C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[11] = a3;
  v4[12] = a4;
  v4[10] = a2;
  return _swift_task_switch(sub_10024C160, 0, 0);
}

uint64_t sub_10024C160()
{
  os_log_type_t v4 = (uint64_t (*)(uint64_t, uint64_t (*)(), uint64_t))((char *)&async function pointer to dispatch thunk of FM.XPCSession.proxy(errorHandler:)
                                                               + async function pointer to dispatch thunk of FM.XPCSession.proxy(errorHandler:));
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10024C23C;
  uint64_t v2 = *(void *)(v0 + 88);
  return v4(v0 + 64, sub_10027B0A8, v2);
}

uint64_t sub_10024C23C()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10028396C;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_10024C358;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10024C358()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  uint64_t v3 = (void *)v0[8];
  type metadata accessor for PropertyListEncoder();
  swift_allocObject();
  PropertyListEncoder.init()();
  v0[9] = v2;
  sub_100044014(&qword_1003F31C8);
  sub_10027B0C4();
  uint64_t v4 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  if (v1)
  {
    swift_release();
  }
  else
  {
    uint64_t v7 = v4;
    unint64_t v8 = v5;
    uint64_t v9 = v0[11];
    swift_release();
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    v0[6] = sub_10027B16C;
    v0[7] = v9;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_1001CB748;
    v0[5] = &unk_1003E3618;
    char v11 = _Block_copy(v0 + 2);
    swift_retain();
    swift_release();
    [v3 locationsUnavailableFor:isa completion:v11];
    _Block_release(v11);

    sub_100044090(v7, v8);
  }
  swift_unknownObjectRelease();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_10024C520()
{
  if (qword_1003EC400 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100044058(v0, (uint64_t)qword_10040C278);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138543362;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "LocationServiceClient proxy error: %{public}@", v3, 0xCu);
    sub_100044014(&qword_1003ECCC8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  return OnceCheckedContinuation.resume(throwing:)();
}

uint64_t sub_10024C6E8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (qword_1003EC400 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_100044058(v7, (uint64_t)qword_10040C278);
  swift_errorRetain();
  swift_errorRetain();
  unint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446466;
    sub_100037004(a3, a4, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 12) = 2082;
    swift_errorRetain();
    sub_100044014(&qword_1003F31D8);
    uint64_t v11 = String.init<A>(describing:)();
    sub_100037004(v11, v12, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%{public}s error: %{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1)
    {
LABEL_5:
      uint64_t v14 = a1;
      swift_errorRetain();
      OnceCheckedContinuation.resume(throwing:)();
      return swift_errorRelease();
    }
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    if (a1) {
      goto LABEL_5;
    }
  }
  return OnceCheckedContinuation.resume<>()();
}

uint64_t sub_10024C92C(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_10024C94C, v1, 0);
}

uint64_t sub_10024C94C()
{
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  v0[2].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[1], v0[1], 8uLL);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[2].i64[1] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1001CD0F8;
  return withOnceCheckedThrowingContinuation<A>(function:_:)(v2, 0xD000000000000017, 0x8000000100378770, sub_10027B1B8, v1, (char *)&type metadata for () + 8);
}

uint64_t sub_10024CA34(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_10024CA54, v1, 0);
}

uint64_t sub_10024CA54()
{
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  v0[2].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[1], v0[1], 8uLL);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[2].i64[1] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1001CCECC;
  return withOnceCheckedThrowingContinuation<A>(function:_:)(v2, 0xD00000000000001ALL, 0x8000000100378750, sub_10027AA68, v1, (char *)&type metadata for () + 8);
}

uint64_t sub_10024CB3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Handle();
  uint64_t v47 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v39 - v9;
  __chkstk_darwin(v8);
  uint64_t v46 = (char *)&v39 - v11;
  unint64_t v12 = *(void *)(a2 + 16);
  if (!v12) {
    return 1;
  }
  unint64_t v13 = *(void *)(a1 + 16);
  if (!v13) {
    return 1;
  }
  if (v12 >= v13) {
    uint64_t v14 = a1;
  }
  else {
    uint64_t v14 = a2;
  }
  if (v12 >= v13) {
    a1 = a2;
  }
  uint64_t v15 = *(void *)(v14 + 56);
  uint64_t v41 = v14 + 56;
  uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
  uint64_t v39 = ~v16;
  if (-v16 < 64) {
    uint64_t v17 = ~(-1 << -(char)v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  int64_t v40 = (unint64_t)(63 - v16) >> 6;
  uint64_t v42 = v47 + 32;
  uint64_t v50 = a1 + 56;
  uint64_t v51 = v47 + 16;
  uint64_t v19 = (void (**)(char *, uint64_t))(v47 + 8);
  uint64_t v45 = v14;
  swift_bridgeObjectRetain();
  uint64_t v52 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  for (int64_t i = 0; ; int64_t i = v49)
  {
    unint64_t v43 = v18;
    uint64_t v44 = i;
    if (!v18) {
      break;
    }
    uint64_t v48 = (v18 - 1) & v18;
    int64_t v49 = i;
    unint64_t v22 = __clz(__rbit64(v18)) | (i << 6);
LABEL_29:
    uint64_t v27 = v46;
    uint64_t v28 = v47;
    uint64_t v29 = *(void *)(v47 + 72);
    uint64_t v30 = *(void (**)(char *, unint64_t, uint64_t))(v47 + 16);
    v30(v46, *(void *)(v45 + 48) + v29 * v22, v4);
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v10, v27, v4);
    if (*(void *)(v52 + 16))
    {
      uint64_t v31 = v52;
      sub_1000207A4(&qword_1003ECDA0, 255, (void (*)(uint64_t))&type metadata accessor for Handle);
      uint64_t v32 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v33 = -1 << *(unsigned char *)(v31 + 32);
      unint64_t v34 = v32 & ~v33;
      if ((*(void *)(v50 + ((v34 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v34))
      {
        uint64_t v35 = ~v33;
        while (1)
        {
          v30(v7, *(void *)(v52 + 48) + v34 * v29, v4);
          sub_1000207A4(&qword_1003ECDA8, 255, (void (*)(uint64_t))&type metadata accessor for Handle);
          char v36 = dispatch thunk of static Equatable.== infix(_:_:)();
          unint64_t v37 = (uint64_t (*)(char *, uint64_t))*v19;
          (*v19)(v7, v4);
          if (v36) {
            break;
          }
          unint64_t v34 = (v34 + 1) & v35;
          if (((*(void *)(v50 + ((v34 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v34) & 1) == 0) {
            goto LABEL_12;
          }
        }
        swift_bridgeObjectRelease();
        v37(v10, v4);
        uint64_t v38 = 0;
        goto LABEL_37;
      }
    }
LABEL_12:
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v19)(v10, v4);
    unint64_t v18 = v48;
  }
  int64_t v23 = i + 1;
  if (__OFADD__(i, 1))
  {
    __break(1u);
    goto LABEL_41;
  }
  if (v23 >= v40) {
    goto LABEL_39;
  }
  unint64_t v24 = *(void *)(v41 + 8 * v23);
  int64_t v25 = i + 1;
  if (v24) {
    goto LABEL_28;
  }
  int64_t v25 = i + 2;
  if (i + 2 >= v40) {
    goto LABEL_39;
  }
  unint64_t v24 = *(void *)(v41 + 8 * v25);
  if (v24) {
    goto LABEL_28;
  }
  int64_t v25 = i + 3;
  if (i + 3 >= v40) {
    goto LABEL_39;
  }
  unint64_t v24 = *(void *)(v41 + 8 * v25);
  if (v24)
  {
LABEL_28:
    uint64_t v48 = (v24 - 1) & v24;
    int64_t v49 = v25;
    unint64_t v22 = __clz(__rbit64(v24)) + (v25 << 6);
    goto LABEL_29;
  }
  uint64_t v26 = i + 4;
  if (i + 4 >= v40)
  {
LABEL_39:
    swift_bridgeObjectRelease();
    uint64_t v38 = 1;
LABEL_37:
    sub_1001491B4();
    return v38;
  }
  unint64_t v24 = *(void *)(v41 + 8 * v26);
  if (v24)
  {
    int64_t v25 = i + 4;
    goto LABEL_28;
  }
  while (1)
  {
    int64_t v25 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v25 >= v40) {
      goto LABEL_39;
    }
    unint64_t v24 = *(void *)(v41 + 8 * v25);
    ++v26;
    if (v24) {
      goto LABEL_28;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_10024CFCC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v97 = type metadata accessor for Location();
  uint64_t v4 = *(void *)(v97 - 8);
  uint64_t v5 = __chkstk_darwin(v97);
  uint64_t v75 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v69 - v7;
  uint64_t v9 = type metadata accessor for Handle();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v74 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v89 = (char *)&v69 - v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v69 - v15;
  uint64_t v17 = sub_100044014(&qword_1003F3328);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v20 = (char *)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v94 = (uint64_t)&v69 - v21;
  uint64_t v22 = *(void *)(a1 + 64);
  uint64_t v73 = a1 + 64;
  uint64_t v23 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v24 = -1;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  uint64_t v95 = v24 & v22;
  unint64_t v25 = (unint64_t)(v23 + 63) >> 6;
  uint64_t v96 = v10 + 16;
  uint64_t v86 = (void (**)(char *))(v10 + 32);
  uint64_t v87 = (void (**)(char *, char *, uint64_t))(v4 + 16);
  uint64_t v91 = v10;
  long long v92 = (uint64_t (**)(char *, uint64_t))(v10 + 8);
  uint64_t v79 = v4;
  uint64_t v84 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v85 = (void (**)(char *, uint64_t, uint64_t))(v4 + 32);
  unint64_t v70 = v25 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v88 = 0;
  uint64_t v80 = 0;
  int64_t v76 = v25;
  unint64_t v72 = v25 - 5;
  uint64_t v71 = a1 + 104;
  uint64_t v81 = a1;
  uint64_t v77 = v2;
  uint64_t v82 = v8;
  uint64_t v83 = v20;
  long long v90 = v16;
  unint64_t v27 = v95;
  if (!v95) {
    goto LABEL_13;
  }
LABEL_8:
  while (2)
  {
    uint64_t v39 = v2;
    int64_t v40 = v16;
    uint64_t v41 = v8;
    uint64_t v42 = v97;
    uint64_t v95 = (v27 - 1) & v27;
    unint64_t v43 = __clz(__rbit64(v27)) | (v88 << 6);
LABEL_9:
    uint64_t v44 = v81;
    (*(void (**)(char *, unint64_t, uint64_t))(v91 + 16))(v20, *(void *)(v81 + 48) + *(void *)(v91 + 72) * v43, v9);
    uint64_t v45 = v79;
    unint64_t v46 = *(void *)(v44 + 56) + *(void *)(v79 + 72) * v43;
    uint64_t v47 = sub_100044014(&qword_1003F3308);
    (*(void (**)(char *, unint64_t, uint64_t))(v45 + 16))(&v20[*(int *)(v47 + 48)], v46, v42);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v20, 0, 1, v47);
    uint64_t v8 = v41;
    uint64_t v16 = v40;
    uint64_t v2 = v39;
    while (1)
    {
      uint64_t v52 = v94;
      sub_100013B50((uint64_t)v20, v94, &qword_1003F3328);
      uint64_t v53 = sub_100044014(&qword_1003F3308);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 48))(v52, 1, v53) == 1) {
        return swift_release();
      }
      uint64_t v54 = v94 + *(int *)(v53 + 48);
      (*v86)(v16);
      (*v85)(v8, v54, v97);
      uint64_t v55 = *v2;
      uint64_t v56 = *(void *)(*v2 + 16);
      if (!v56) {
        goto LABEL_31;
      }
      uint64_t v57 = v91;
      unint64_t v58 = (*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80);
      uint64_t v59 = *(void (**)(char *, unint64_t, uint64_t))(v91 + 16);
      uint64_t v60 = v89;
      v59(v89, v55 + v58, v9);
      sub_1000207A4(&qword_1003ECDA8, 255, (void (*)(uint64_t))&type metadata accessor for Handle);
      swift_bridgeObjectRetain();
      char v61 = dispatch thunk of static Equatable.== infix(_:_:)();
      int v93 = *(void (**)(char *, uint64_t))(v57 + 8);
      v93(v60, v9);
      if ((v61 & 1) == 0)
      {
        if (v56 == 1)
        {
LABEL_27:
          swift_bridgeObjectRelease();
          uint64_t v2 = v77;
          uint64_t v8 = v82;
          uint64_t v16 = v90;
          goto LABEL_32;
        }
        uint64_t v78 = *(void *)(v91 + 72);
        uint64_t v62 = v89;
        v59(v89, v55 + v58 + v78, v9);
        uint64_t v16 = v90;
        unint64_t v63 = v62;
        LOBYTE(v62) = dispatch thunk of static Equatable.== infix(_:_:)();
        v93(v63, v9);
        if ((v62 & 1) == 0) {
          break;
        }
      }
LABEL_5:
      swift_bridgeObjectRelease();
      uint64_t v2 = v77;
      uint64_t v8 = v82;
      uint64_t v28 = (uint64_t (*)(uint64_t, uint64_t))v93;
      uint64_t v29 = (uint64_t)v74;
      uint64_t v30 = v90;
      v59(v74, (unint64_t)v90, v9);
      uint64_t v31 = (uint64_t)v75;
      (*v87)(v75, v8, v97);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v98 = v2[2];
      v2[2] = 0x8000000000000000;
      sub_100143090(v31, v29, isUniquelyReferenced_nonNull_native);
      v2[2] = v98;
      swift_bridgeObjectRelease();
      uint64_t v33 = v28(v29, v9);
      unint64_t v34 = (uint64_t (*)(char *, uint64_t))v28;
      uint64_t v35 = *v2;
      __chkstk_darwin(v33);
      *(&v69 - 2) = (uint64_t)v30;
      swift_bridgeObjectRetain();
      uint64_t v36 = v80;
      uint64_t v37 = sub_10012D164((uint64_t (*)(void))sub_10027E9CC, (uint64_t)(&v69 - 4), v35);
      uint64_t v80 = v36;
      swift_bridgeObjectRelease();
      *uint64_t v2 = v37;
      uint64_t v38 = *(void *)(v37 + 16);
      if (!v38)
      {
        if (v2[1])
        {
          OnceCheckedContinuation.resume<>()();
          swift_release();
        }
        v2[1] = 0;
        uint64_t v38 = *(void *)(v37 + 16);
        uint64_t v30 = v90;
        unint64_t v34 = (uint64_t (*)(char *, uint64_t))v93;
      }
      (*v84)(v8, v97);
      uint64_t result = v34(v30, v9);
      uint64_t v16 = v30;
      uint64_t v20 = v83;
      if (!v38) {
        return swift_release();
      }
      unint64_t v27 = v95;
      if (v95) {
        goto LABEL_8;
      }
LABEL_13:
      unint64_t v48 = v88;
      int64_t v49 = v88 + 1;
      if (__OFADD__(v88, 1)) {
        goto LABEL_52;
      }
      if (v49 < v76)
      {
        unint64_t v50 = *(void *)(v73 + 8 * v49);
        if (v50) {
          goto LABEL_16;
        }
        if ((uint64_t)(v88 + 2) >= v76)
        {
          ++v88;
        }
        else
        {
          unint64_t v50 = *(void *)(v73 + 8 * (v88 + 2));
          if (v50)
          {
            uint64_t v39 = v2;
            int64_t v40 = v16;
            uint64_t v41 = v8;
            int64_t v49 = v88 + 2;
            goto LABEL_17;
          }
          if ((uint64_t)(v88 + 3) >= v76)
          {
            v88 += 2;
          }
          else
          {
            unint64_t v50 = *(void *)(v73 + 8 * (v88 + 3));
            if (v50)
            {
              uint64_t v39 = v2;
              int64_t v40 = v16;
              uint64_t v41 = v8;
              int64_t v49 = v88 + 3;
              goto LABEL_17;
            }
            int64_t v49 = v88 + 4;
            if ((uint64_t)(v88 + 4) >= v76)
            {
              v88 += 3;
            }
            else
            {
              unint64_t v50 = *(void *)(v73 + 8 * v49);
              if (v50)
              {
LABEL_16:
                uint64_t v39 = v2;
                int64_t v40 = v16;
                uint64_t v41 = v8;
LABEL_17:
                uint64_t v42 = v97;
                uint64_t v95 = (v50 - 1) & v50;
                unint64_t v43 = __clz(__rbit64(v50)) + (v49 << 6);
                unint64_t v88 = v49;
                goto LABEL_9;
              }
              while (v72 != v48)
              {
                unint64_t v50 = *(void *)(v71 + 8 * v48++);
                if (v50)
                {
                  uint64_t v39 = v2;
                  int64_t v40 = v16;
                  uint64_t v41 = v8;
                  int64_t v49 = v48 + 4;
                  goto LABEL_17;
                }
              }
              unint64_t v88 = v70;
            }
          }
        }
      }
      uint64_t v51 = sub_100044014(&qword_1003F3308);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v20, 1, 1, v51);
      uint64_t v95 = 0;
    }
    if (v56 == 2)
    {
      swift_bridgeObjectRelease();
      uint64_t v2 = v77;
LABEL_31:
      uint64_t v8 = v82;
LABEL_32:
      uint64_t v20 = v83;
      (*v84)(v8, v97);
      uint64_t result = (*v92)(v16, v9);
      unint64_t v27 = v95;
      if (v95) {
        continue;
      }
      goto LABEL_13;
    }
    break;
  }
  unint64_t v64 = v55 + v58 + 2 * v78;
  uint64_t v65 = 2;
  while (1)
  {
    uint64_t result = ((uint64_t (*)(char *, unint64_t, uint64_t))v59)(v63, v64, v9);
    uint64_t v66 = v65 + 1;
    if (__OFADD__(v65, 1)) {
      break;
    }
    unint64_t v67 = v63;
    char v68 = dispatch thunk of static Equatable.== infix(_:_:)();
    v93(v67, v9);
    if (v68) {
      goto LABEL_5;
    }
    ++v65;
    v64 += v78;
    unint64_t v63 = v89;
    if (v66 == v56) {
      goto LABEL_27;
    }
  }
  __break(1u);
LABEL_52:
  __break(1u);
  return result;
}

BOOL sub_10024D9E4()
{
  return (dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0;
}

uint64_t sub_10024DA7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = swift_bridgeObjectRetain();
  sub_1002498BC(v9);
  swift_bridgeObjectRelease();
  uint64_t v10 = (void *)0xE000000000000000;
  uint64_t v20 = 0;
  unint64_t v21 = 0xE000000000000000;
  _StringGuts.grow(_:)(60);
  v11._object = (void *)0x8000000100378790;
  v11._uint64_t countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v11);
  v12._uint64_t countAndFlagsBits = Array.description.getter();
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  v13._object = (void *)0x80000001003787B0;
  String.append(_:)(v13);
  v19[1] = a3;
  v14._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  v15._uint64_t countAndFlagsBits = 0x7469206B726F5720;
  v15._object = (void *)0xEC000000203A6D65;
  String.append(_:)(v15);
  if (a2)
  {
    WorkItemQueue.WorkItem.id.getter();
    a2 = UUID.uuidString.getter();
    uint64_t v10 = v16;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v17._uint64_t countAndFlagsBits = a2;
  v17._object = v10;
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_10024DC8C()
{
  return sub_10024DA7C(*v0, v0[1], v0[2]);
}

uint64_t sub_10024DC98()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100052FAC(v0, qword_10040C290);
  uint64_t v1 = sub_100044058(v0, (uint64_t)qword_10040C290);
  if (qword_1003EC400 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100044058(v0, (uint64_t)qword_10040C278);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t (*sub_10024DD60())()
{
  return j__swift_endAccess;
}

uint64_t sub_10024DDBC()
{
  *(void *)(v1 + 32) = v0;
  return _swift_task_switch(sub_100014F34, v0, 0);
}

unint64_t sub_10024DDDC(unint64_t a1)
{
  unint64_t result = 0x6E776F6E6B6E752ELL;
  switch(a1)
  {
    case 0uLL:
      return result;
    case 1uLL:
      unint64_t result = 0x74756F656D69742ELL;
      break;
    case 2uLL:
      unint64_t result = 0x6F707075736E752ELL;
      break;
    case 3uLL:
      unint64_t result = 0x64696C61766E692ELL;
      break;
    case 4uLL:
      unint64_t result = 0xD000000000000013;
      break;
    case 5uLL:
      unint64_t result = 0xD000000000000013;
      break;
    case 6uLL:
    case 8uLL:
    case 0xAuLL:
      unint64_t result = 0xD000000000000016;
      break;
    case 7uLL:
      unint64_t result = 0xD000000000000012;
      break;
    case 9uLL:
      unint64_t result = 0xD000000000000010;
      break;
    case 0xBuLL:
      unint64_t result = 0xD00000000000001ELL;
      break;
    default:
      strcpy((char *)v6, ".underlying(");
      BYTE5(v6[1]) = 0;
      HIWORD(v6[1]) = -5120;
      sub_10012BA58(a1);
      swift_errorRetain();
      sub_100044014(&qword_1003F4B30);
      v4._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v4);
      swift_bridgeObjectRelease();
      v5._uint64_t countAndFlagsBits = 41;
      v5._object = (void *)0xE100000000000000;
      String.append(_:)(v5);
      sub_10012BA68(a1);
      unint64_t result = v6[0];
      break;
  }
  return result;
}

unint64_t sub_10024E004()
{
  return sub_10024DDDC(*v0);
}

uint64_t sub_10024E00C()
{
  uint64_t v2 = v0;
  v1[14] = v0;
  v1[15] = *v0;
  type metadata accessor for UUID();
  v1[16] = swift_task_alloc();
  swift_defaultActor_initialize();
  v0[14] = 0x6E6F697461636F4CLL;
  v0[15] = 0xEF65636976726553;
  uint64_t v3 = (char *)v0 + OBJC_IVAR____TtC13findmylocated15LocationService_serviceDescription;
  uint64_t v4 = type metadata accessor for XPCServiceDescription();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(void *)((char *)v2 + OBJC_IVAR____TtC13findmylocated15LocationService_trampoline) = 0;
  uint64_t v5 = OBJC_IVAR____TtC13findmylocated15LocationService_connectionPool;
  sub_100044014(&qword_1003F3478);
  *(void *)((char *)v2 + v5) = XPCClientConnectionPool.__allocating_init()();
  uint64_t v6 = OBJC_IVAR____TtC13findmylocated15LocationService_secureLocationsManager;
  *(void *)((char *)v2 + v6) = [objc_allocWithZone((Class)SPSecureLocationsManager) init];
  *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC13findmylocated15LocationService_subscriptionFailureRetryInterval) = xmmword_100370910;
  uint64_t v7 = OBJC_IVAR____TtC13findmylocated15LocationService_workItemQueue;
  type metadata accessor for WorkItemQueue();
  UUID.init()();
  *(void *)((char *)v2 + v7) = WorkItemQueue.__allocating_init(identifier:)();
  uint64_t v8 = OBJC_IVAR____TtC13findmylocated15LocationService_locationUpdateQueue;
  UUID.init()();
  *(void *)((char *)v2 + v8) = WorkItemQueue.__allocating_init(name:identifier:)();
  uint64_t v9 = OBJC_IVAR____TtC13findmylocated15LocationService_legacyLocationWorkItemQueue;
  UUID.init()();
  *(void *)((char *)v2 + v9) = WorkItemQueue.__allocating_init(identifier:)();
  *(void *)((char *)v2 + OBJC_IVAR____TtC13findmylocated15LocationService_subscriptions) = _swiftEmptyDictionarySingleton;
  *(void *)((char *)v2 + OBJC_IVAR____TtC13findmylocated15LocationService_legacyLocationSubscriptions) = _swiftEmptyDictionarySingleton;
  *(void *)((char *)v2 + OBJC_IVAR____TtC13findmylocated15LocationService_legacyLocationTask) = 0;
  uint64_t v10 = (char *)v2 + OBJC_IVAR____TtC13findmylocated15LocationService_dataManagerStateStream;
  uint64_t v11 = sub_100044014((uint64_t *)&unk_1003F2E98);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  *(void *)((char *)v2 + OBJC_IVAR____TtC13findmylocated15LocationService_inFlightLatestLocationTasks) = _swiftEmptyDictionarySingleton;
  type metadata accessor for XPCSessionManager();
  Swift::String v12 = (void *)swift_task_alloc();
  v1[17] = v12;
  *Swift::String v12 = v1;
  v12[1] = sub_10024E30C;
  return XPCSessionManager.__allocating_init(name:)(0x6E6F697461636F4CLL, 0xEF65636976726553);
}

uint64_t sub_10024E30C(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 112);
  swift_task_dealloc();
  *(void *)(v3 + OBJC_IVAR____TtC13findmylocated15LocationService_xpcSessionManager) = a1;
  return _swift_task_switch(sub_10024E42C, v3, 0);
}

uint64_t sub_10024E42C()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[15];
  uint64_t v3 = OBJC_IVAR____TtC13findmylocated15LocationService_secureLocationsManager;
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC13findmylocated15LocationService_secureLocationsManager);
  v0[6] = sub_100283534;
  v0[7] = v1;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_10024E758;
  v0[5] = &unk_1003E3B50;
  uint64_t v5 = _Block_copy(v0 + 2);
  id v6 = v4;
  swift_retain();
  swift_release();
  [v6 setLocationUpdateBlock:v5];
  _Block_release(v5);

  uint64_t v7 = *(void **)(v1 + v3);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v1;
  *(void *)(v8 + 24) = v2;
  v0[12] = sub_10028353C;
  v0[13] = v8;
  v0[8] = _NSConcreteStackBlock;
  v0[9] = 1107296256;
  v0[10] = sub_10024EC24;
  v0[11] = &unk_1003E3BA0;
  uint64_t v9 = _Block_copy(v0 + 8);
  swift_retain();
  id v10 = v7;
  swift_release();
  [v10 startMonitoringFailedSubscriptions:v9];
  _Block_release(v9);

  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v12 = v0[14];
  return v11(v12);
}

uint64_t sub_10024E614(uint64_t a1, uint64_t a2)
{
  type metadata accessor for Transaction();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  *(void *)(v4 + 24) = a1;
  swift_retain();
  swift_bridgeObjectRetain();
  static Transaction.asyncTask(name:block:)();

  return swift_release();
}

uint64_t sub_10024E6BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_10004A274;
  return sub_10027399C(a2);
}

uint64_t sub_10024E758(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_100281044();
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10024E7CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Transaction();
  uint64_t v6 = (void *)swift_allocObject();
  void v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  static Transaction.asyncTask(name:block:)();

  return swift_release();
}

uint64_t sub_10024E884(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return _swift_task_switch(sub_10024E8A4, 0, 0);
}

uint64_t sub_10024E8A4()
{
  Swift::String v13 = v0;
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100044058(v1, (uint64_t)qword_10040C290);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v5 = Array.description.getter();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    v0[2] = sub_100037004(v5, v7, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed subscription received from spd, no location for findMyIds: %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_1002466DC(v8);
  v0[5] = v9;
  swift_bridgeObjectRelease();
  id v10 = (void *)swift_task_alloc();
  v0[6] = v10;
  *id v10 = v0;
  v10[1] = sub_10024EB14;
  return sub_100272F1C(v9);
}

uint64_t sub_10024EB14()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10024EC24(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10024EC94()
{
  v1[12] = v0;
  v1[13] = *v0;
  sub_100044014(&qword_1003F0A50);
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for MachServiceName();
  v1[16] = v2;
  v1[17] = *(void *)(v2 - 8);
  v1[18] = swift_task_alloc();
  v1[19] = swift_task_alloc();
  return _swift_task_switch(sub_10024EDCC, v0, 0);
}

uint64_t sub_10024EDCC()
{
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100044058(v1, (uint64_t)qword_10040C290);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "LocationService: startup", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = *(void *)(v0 + 152);
  uint64_t v27 = *(void *)(v0 + 144);
  uint64_t v6 = *(void *)(v0 + 136);
  uint64_t v28 = *(void *)(v0 + 128);
  uint64_t v7 = *(void *)(v0 + 120);
  uint64_t v29 = *(void *)(v0 + 112);
  uint64_t v8 = *(void *)(v0 + 96);
  uint64_t v30 = *(void *)(v0 + 104);

  MachServiceName.init(_:)();
  uint64_t v9 = self;
  id v10 = [v9 interfaceWithProtocol:&OBJC_PROTOCOL____TtP12FindMyLocate18LocationXPCService_];
  *(void *)(v0 + 160) = v10;
  uint64_t v11 = sub_100044014(&qword_1003F3450);
  uint64_t v12 = swift_allocObject();
  swift_retain();
  swift_defaultActor_initialize();
  swift_weakInit();
  swift_weakAssign();
  *(void *)(v0 + 80) = v12;
  *(void *)(v0 + 88) = v11;
  id v13 = [super init];
  *(void *)(v0 + 168) = v13;
  swift_release();
  id v14 = [v9 interfaceWithProtocol:&OBJC_PROTOCOL____TtP12FindMyLocate24LocationServiceClientXPC_];
  *(void *)(v0 + 176) = v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v27, v5, v28);
  uint64_t v15 = type metadata accessor for ServiceEntitlements();
  *(void *)(v0 + 40) = v15;
  *(void *)(v0 + 48) = sub_1000207A4(&qword_1003F0A58, 255, (void (*)(uint64_t))&type metadata accessor for ServiceEntitlements);
  uint64_t v16 = sub_10003E0F4((uint64_t *)(v0 + 16));
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v15 - 8) + 104))(v16, enum case for ServiceEntitlements.locationService(_:), v15);
  swift_allocObject();
  swift_weakInit();
  id v17 = v13;
  id v18 = v10;
  id v19 = v14;
  XPCServiceDescription.init(name:exportedObject:exportedInterface:remoteObjectInterface:options:requiredEntitlement:shouldAccept:)();
  uint64_t v20 = type metadata accessor for XPCServiceDescription();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v7, 0, 1, v20);
  sub_100013B50(v7, v29, &qword_1003F0A50);
  uint64_t v21 = v8 + OBJC_IVAR____TtC13findmylocated15LocationService_serviceDescription;
  swift_beginAccess();
  sub_10028314C(v29, v21, &qword_1003F0A50);
  swift_endAccess();
  *(void *)(v8 + OBJC_IVAR____TtC13findmylocated15LocationService_trampoline) = v17;
  id v22 = v17;
  swift_release();
  *(void *)(v0 + 184) = *(void *)(v8 + OBJC_IVAR____TtC13findmylocated15LocationService_connectionPool);
  uint64_t v23 = swift_allocObject();
  *(void *)(v0 + 192) = v23;
  *(void *)(v23 + 16) = v8;
  *(void *)(v23 + 24) = v30;
  swift_retain();
  sub_100044014(&qword_1003F3478);
  sub_100014FFC(&qword_1003F3480, &qword_1003F3478);
  uint64_t v25 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v0 + 200) = v25;
  *(void *)(v0 + 208) = v24;
  return _swift_task_switch(sub_10024F264, v25, v24);
}

uint64_t sub_10024F264()
{
  uint64_t v1 = *(void *)(v0 + 96);
  dispatch thunk of XPCClientConnectionPool.setStopProcessing(_:)();
  swift_release();
  return _swift_task_switch(sub_10024F2F8, v1, 0);
}

uint64_t sub_10024F2F8()
{
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 208);
  swift_retain();
  return _swift_task_switch(sub_10024F370, v1, v2);
}

uint64_t sub_10024F370()
{
  uint64_t v1 = *(void *)(v0 + 96);
  dispatch thunk of XPCClientConnectionPool.setRemoveHandler(_:)();
  swift_release();
  return _swift_task_switch(sub_10024F3FC, v1, 0);
}

uint64_t sub_10024F3FC()
{
  uint64_t v1 = *(void **)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v3 = *(void **)(v0 + 160);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 128);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_10024F4C8(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  sub_100044014((uint64_t *)&unk_1003F3C10);
  v2[7] = swift_task_alloc();
  return _swift_task_switch(sub_10000756C, 0, 0);
}

uint64_t sub_10024F55C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  sub_100044014((uint64_t *)&unk_1003F3C10);
  *(void *)(v1 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_10024F5F0, 0, 0);
}

uint64_t sub_10024F5F0()
{
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100044058(v1, (uint64_t)qword_10040C290);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "stopProcessing", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v6 = v0[2];
  uint64_t v5 = v0[3];

  uint64_t v7 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v6;
  swift_retain();
  sub_10010405C(v5, (uint64_t)&unk_1003F34A0, (uint64_t)v8);
  swift_release();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_10024F79C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10004A274;
  return sub_100250860();
}

uint64_t sub_10024F82C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10004A274;
  return sub_100261024(a1);
}

uint64_t sub_10024F8C4()
{
  v1[103] = v0;
  uint64_t v2 = sub_100044014(&qword_1003F3438);
  v1[104] = v2;
  v1[105] = *(void *)(v2 - 8);
  v1[106] = swift_task_alloc();
  sub_100044014(&qword_1003F3430);
  v1[107] = swift_task_alloc();
  v1[108] = swift_task_alloc();
  sub_100044014(&qword_1003F0A50);
  v1[109] = swift_task_alloc();
  return _swift_task_switch(sub_10024F9F8, v0, 0);
}

uint64_t sub_10024F9F8()
{
  uint64_t v1 = v0[109];
  uint64_t v2 = v0[103];
  v0[110] = *(void *)(v2 + OBJC_IVAR____TtC13findmylocated15LocationService_xpcSessionManager);
  uint64_t v3 = v2 + OBJC_IVAR____TtC13findmylocated15LocationService_serviceDescription;
  swift_beginAccess();
  sub_100013210(v3, v1, &qword_1003F0A50);
  uint64_t v4 = type metadata accessor for XPCServiceDescription();
  v0[111] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v0[112] = v5;
  uint64_t v6 = (uint64_t (*)())(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v1, 1, v4);
  if (v6 == 1)
  {
    __break(1u);
  }
  else
  {
    type metadata accessor for XPCSessionManager();
    sub_1000207A4(&qword_1003F0A70, 255, (void (*)(uint64_t))&type metadata accessor for XPCSessionManager);
    uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v11 = v10;
    uint64_t v6 = sub_10024FB68;
    uint64_t v7 = v9;
    uint64_t v8 = v11;
  }
  return _swift_task_switch(v6, v7, v8);
}

uint64_t sub_10024FB68()
{
  dispatch thunk of XPCSessionManager.register(service:)();
  v0[113] = 0;
  (*(void (**)(void, void))(v0[112] + 8))(v0[109], v0[111]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[114] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10024FC70;
  return daemon.getter();
}

uint64_t sub_10024FC70(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v9 = *v1;
  *(void *)(v2 + 920) = a1;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 928) = v3;
  uint64_t v4 = type metadata accessor for Daemon();
  uint64_t v5 = type metadata accessor for DataManager(0);
  uint64_t v6 = sub_1000207A4(&qword_1003ECCA8, 255, (void (*)(uint64_t))&type metadata accessor for Daemon);
  uint64_t v7 = sub_1000207A4(&qword_1003ECCC0, 255, (void (*)(uint64_t))type metadata accessor for DataManager);
  *uint64_t v3 = v9;
  v3[1] = sub_10024FE54;
  return ActorServiceDaemon.getService<A>()(v4, v5, v6, v7);
}

uint64_t sub_10024FE54(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[117] = a1;
  v4[118] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[103];
    uint64_t v6 = sub_1002503C0;
  }
  else
  {
    swift_release();
    uint64_t v6 = sub_10024FF90;
    uint64_t v5 = a1;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_10024FF90()
{
  uint64_t v1 = v0[106];
  uint64_t v2 = v0[105];
  uint64_t v3 = v0[104];
  uint64_t v4 = v0[103];
  swift_allocObject();
  swift_weakInit();
  type metadata accessor for DataManager.State(0);
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:), v3);
  AsyncStream.init(_:bufferingPolicy:_:)();
  swift_release();
  return _swift_task_switch(sub_1002500A8, v4, 0);
}

uint64_t sub_1002500A8()
{
  uint64_t v1 = v0[108];
  uint64_t v2 = v0[107];
  uint64_t v3 = v0[103];
  uint64_t v4 = sub_100044014((uint64_t *)&unk_1003F2E98);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v1, 0, 1, v4);
  sub_100013B50(v1, v2, &qword_1003F3430);
  uint64_t v5 = v3 + OBJC_IVAR____TtC13findmylocated15LocationService_dataManagerStateStream;
  swift_beginAccess();
  sub_10028314C(v2, v5, &qword_1003F3430);
  swift_endAccess();
  swift_retain_n();
  swift_asyncLet_begin();
  return _swift_asyncLet_get_throwing(v0 + 2);
}

uint64_t sub_100250208(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 952) = v2;
  if (v2)
  {
    uint64_t v4 = v3 + 720;
    uint64_t v5 = sub_100250458;
  }
  else
  {
    uint64_t v4 = v3 + 784;
    uint64_t v5 = sub_100250244;
  }
  return _swift_asyncLet_finish(v3 + 16, a2, v5, v4);
}

uint64_t sub_100250244()
{
  return _swift_task_switch(sub_100250260, *(void *)(v0 + 824), 0);
}

uint64_t sub_100250260()
{
  swift_release();
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100250314()
{
  (*(void (**)(void, void))(v0[112] + 8))(v0[109], v0[111]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1002503C0()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100250458()
{
  return _swift_task_switch(sub_100250474, *(void *)(v0 + 824), 0);
}

uint64_t sub_100250474()
{
  swift_release();
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10025051C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10004A274;
  return sub_1002534F0();
}

uint64_t sub_1002505AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v8;
  void *v8 = v5;
  v8[1] = sub_10004A274;
  v8[3] = a5;
  v8[4] = a4;
  return _swift_task_switch(sub_10004D208, a4, 0);
}

uint64_t sub_10025065C(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return _swift_task_switch(sub_10004D208, v1, 0);
}

uint64_t sub_10025067C()
{
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100044058(v1, (uint64_t)qword_10040C290);
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138543362;
    uint64_t v6 = _convertErrorToNSError(_:)();
    *(void *)(v0 + 16) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error adding connection: %{public}@", v4, 0xCu);
    sub_100044014(&qword_1003ECCC8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_100250860()
{
  v1[13] = v0;
  uint64_t v2 = type metadata accessor for Handle();
  v1[14] = v2;
  v1[15] = *(void *)(v2 - 8);
  v1[16] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for UUID();
  v1[17] = v3;
  v1[18] = *(void *)(v3 - 8);
  v1[19] = swift_task_alloc();
  uint64_t Priority = type metadata accessor for LocatePriority();
  v1[20] = Priority;
  v1[21] = *(void *)(Priority - 8);
  v1[22] = swift_task_alloc();
  sub_100044014(&qword_1003F33A0);
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  v1[25] = swift_task_alloc();
  v1[26] = swift_task_alloc();
  return _swift_task_switch(sub_100250A30, v0, 0);
}

uint64_t sub_100250A30()
{
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  *(void *)(v0 + 216) = sub_100044058(v1, (uint64_t)qword_10040C290);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "All client connections have been terminated. Invalidating...", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = *(void *)(v0 + 104);

  uint64_t v6 = OBJC_IVAR____TtC13findmylocated15LocationService_subscriptions;
  *(void *)(v0 + 224) = OBJC_IVAR____TtC13findmylocated15LocationService_subscriptions;
  uint64_t v7 = (uint64_t *)(v5 + v6);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *(void *)(v0 + 232) = v8;
  char v9 = *(unsigned char *)(v8 + 32);
  *(unsigned char *)(v0 + 408) = v9;
  uint64_t v10 = -1;
  uint64_t v11 = -1 << v9;
  if (-(-1 << v9) < 64) {
    uint64_t v10 = ~(-1 << -(char)v11);
  }
  unint64_t v12 = v10 & *(void *)(v8 + 64);
  swift_bridgeObjectRetain();
  if (v12)
  {
    uint64_t v13 = 0;
    unint64_t v14 = __clz(__rbit64(v12));
    uint64_t v15 = (v12 - 1) & v12;
LABEL_9:
    uint64_t v16 = *(void *)(v0 + 200);
    (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v0 + 168) + 16))(v16, *(void *)(v8 + 48) + *(void *)(*(void *)(v0 + 168) + 72) * v14, *(void *)(v0 + 160));
    uint64_t v17 = *(void *)(v8 + 56) + 24 * v14;
    uint64_t v18 = sub_100044014(&qword_1003F33A8);
    uint64_t v19 = v16 + *(int *)(v18 + 48);
    long long v20 = *(_OWORD *)(v17 + 8);
    *(void *)uint64_t v19 = *(void *)v17;
    *(_OWORD *)(v19 + 8) = v20;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v16, 0, 1, v18);
    swift_retain();
    swift_bridgeObjectRetain();
    goto LABEL_16;
  }
  unint64_t v21 = 63 - v11;
  if ((unint64_t)(63 - v11) <= 0x7F)
  {
    uint64_t v13 = 0;
  }
  else
  {
    unint64_t v22 = *(void *)(v8 + 72);
    if (v22)
    {
      uint64_t v13 = 1;
LABEL_13:
      uint64_t v15 = (v22 - 1) & v22;
      unint64_t v14 = __clz(__rbit64(v22)) + (v13 << 6);
      goto LABEL_9;
    }
    if (v21 < 0xC0)
    {
      uint64_t v13 = 1;
    }
    else
    {
      unint64_t v22 = *(void *)(v8 + 80);
      if (v22)
      {
        uint64_t v13 = 2;
        goto LABEL_13;
      }
      if (v21 < 0x100)
      {
        uint64_t v13 = 2;
      }
      else
      {
        unint64_t v22 = *(void *)(v8 + 88);
        if (v22)
        {
          uint64_t v13 = 3;
          goto LABEL_13;
        }
        if (v21 < 0x140)
        {
          uint64_t v13 = 3;
        }
        else
        {
          unint64_t v22 = *(void *)(v8 + 96);
          if (v22)
          {
            uint64_t v13 = 4;
            goto LABEL_13;
          }
          uint64_t v44 = 0;
          uint64_t v13 = (v21 >> 6) - 1;
          while ((v21 >> 6) - 5 != v44)
          {
            unint64_t v22 = *(void *)(v8 + 104 + 8 * v44++);
            if (v22)
            {
              uint64_t v13 = v44 + 4;
              goto LABEL_13;
            }
          }
        }
      }
    }
  }
  uint64_t v23 = *(void *)(v0 + 200);
  uint64_t v24 = sub_100044014(&qword_1003F33A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
  uint64_t v15 = 0;
LABEL_16:
  *(void *)(v0 + 240) = v13;
  *(void *)(v0 + 248) = v15;
  uint64_t v25 = *(void *)(v0 + 208);
  sub_100013B50(*(void *)(v0 + 200), v25, &qword_1003F33A0);
  uint64_t v26 = sub_100044014(&qword_1003F33A8);
  *(void *)(v0 + 256) = v26;
  uint64_t v27 = *(void *)(v26 - 8);
  *(void *)(v0 + 264) = v27;
  uint64_t v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
  *(void *)(v0 + 272) = v28;
  *(void *)(v0 + 280) = (v27 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v28(v25, 1, v26) == 1)
  {
    swift_release();
    uint64_t v45 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of WorkItemQueue.flushQueue()
                            + async function pointer to dispatch thunk of WorkItemQueue.flushQueue());
    uint64_t v29 = (void *)swift_task_alloc();
    *(void *)(v0 + 336) = v29;
    *uint64_t v29 = v0;
    v29[1] = sub_100251E34;
    return v45();
  }
  uint64_t v32 = *(void *)(v0 + 168);
  uint64_t v31 = *(void *)(v0 + 176);
  uint64_t v33 = (uint64_t *)(*(void *)(v0 + 208) + *(int *)(v26 + 48));
  uint64_t v34 = *v33;
  *(void *)(v0 + 288) = *v33;
  *(void *)(v0 + 296) = v33[1];
  (*(void (**)(uint64_t))(v32 + 32))(v31);
  uint64_t v35 = *(void *)(v34 + 16);
  if (!v35)
  {
    uint64_t v39 = _swiftEmptyArrayStorage;
    goto LABEL_29;
  }
  uint64_t v36 = *(void *)(v0 + 120);
  sub_100044014(&qword_1003F03F0);
  uint64_t v37 = *(void *)(v36 + 72);
  unint64_t v38 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  uint64_t v39 = (void *)swift_allocObject();
  uint64_t result = j__malloc_size(v39);
  if (!v37)
  {
    __break(1u);
    goto LABEL_49;
  }
  if (result - v38 == 0x8000000000000000 && v37 == -1) {
    goto LABEL_50;
  }
  v39[2] = v35;
  v39[3] = 2 * ((uint64_t)(result - v38) / v37);
  uint64_t v41 = sub_10015D570((void *)(v0 + 16), (uint64_t)v39 + v38, v35, v34);
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_1001491B4();
  if (v41 != v35)
  {
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
    return result;
  }
  swift_bridgeObjectRelease();
LABEL_29:
  *(void *)(v0 + 304) = v39;
  uint64_t v42 = (void *)swift_task_alloc();
  *(void *)(v0 + 312) = v42;
  *uint64_t v42 = v0;
  v42[1] = sub_100251010;
  uint64_t v43 = *(void *)(v0 + 176);
  return sub_1002693A8((uint64_t)v39, v43);
}

uint64_t sub_100251010()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 320) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 104);
    uint64_t v4 = sub_100252D0C;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 104);
    swift_release();
    uint64_t v4 = sub_100251138;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100251138()
{
  uint64_t v50 = v0;
  if (*(void *)(v0 + 296))
  {
    swift_retain_n();
    uint64_t v1 = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v1, v2))
    {
      uint64_t v3 = *(void *)(v0 + 144);
      uint64_t v4 = *(void *)(v0 + 152);
      uint64_t v5 = *(void *)(v0 + 136);
      uint64_t v6 = swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136446210;
      WorkItemQueue.WorkItem.id.getter();
      sub_1000207A4(&qword_1003ECF68, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v7 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v9 = v8;
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v5);
      *(void *)(v6 + 4) = sub_100037004(v7, v9, &v49);
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v1, v2, "Canceling %{public}s.", (uint8_t *)v6, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    unint64_t v48 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of WorkItemQueue.WorkItem.cancel()
                            + async function pointer to dispatch thunk of WorkItemQueue.WorkItem.cancel());
    unint64_t v22 = (void *)swift_task_alloc();
    *(void *)(v0 + 328) = v22;
    *unint64_t v22 = v0;
    v22[1] = sub_100251818;
    goto LABEL_17;
  }
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(void, void))(*(void *)(v0 + 168) + 8))(*(void *)(v0 + 176), *(void *)(v0 + 160));
  int64_t v12 = *(void *)(v0 + 240);
  unint64_t v11 = *(void *)(v0 + 248);
  if (v11)
  {
    uint64_t v13 = (v11 - 1) & v11;
    unint64_t v14 = __clz(__rbit64(v11)) | (v12 << 6);
    uint64_t v15 = *(void *)(v0 + 232);
LABEL_6:
    uint64_t v16 = *(void *)(v0 + 200);
    (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v0 + 168) + 16))(v16, *(void *)(v15 + 48) + *(void *)(*(void *)(v0 + 168) + 72) * v14, *(void *)(v0 + 160));
    uint64_t v17 = *(void *)(v15 + 56) + 24 * v14;
    uint64_t v18 = sub_100044014(&qword_1003F33A8);
    uint64_t v19 = v16 + *(int *)(v18 + 48);
    long long v20 = *(_OWORD *)(v17 + 8);
    *(void *)uint64_t v19 = *(void *)v17;
    *(_OWORD *)(v19 + 8) = v20;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v16, 0, 1, v18);
    swift_retain();
    swift_bridgeObjectRetain();
    int64_t v21 = v12;
    goto LABEL_15;
  }
  int64_t v23 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  int64_t v24 = (unint64_t)((1 << *(unsigned char *)(v0 + 408)) + 63) >> 6;
  if (v23 >= v24)
  {
    int64_t v21 = *(void *)(v0 + 240);
  }
  else
  {
    uint64_t v15 = *(void *)(v0 + 232);
    uint64_t v25 = v15 + 64;
    unint64_t v26 = *(void *)(v15 + 64 + 8 * v23);
    if (v26)
    {
LABEL_12:
      uint64_t v13 = (v26 - 1) & v26;
      unint64_t v14 = __clz(__rbit64(v26)) + (v23 << 6);
      int64_t v12 = v23;
      goto LABEL_6;
    }
    int64_t v21 = v12 + 1;
    if (v12 + 2 < v24)
    {
      unint64_t v26 = *(void *)(v25 + 8 * (v12 + 2));
      if (v26)
      {
        int64_t v23 = v12 + 2;
        goto LABEL_12;
      }
      int64_t v21 = v12 + 2;
      if (v12 + 3 < v24)
      {
        unint64_t v26 = *(void *)(v25 + 8 * (v12 + 3));
        if (v26)
        {
          int64_t v23 = v12 + 3;
          goto LABEL_12;
        }
        int64_t v23 = v12 + 4;
        int64_t v21 = v12 + 3;
        if (v12 + 4 < v24)
        {
          unint64_t v26 = *(void *)(v25 + 8 * v23);
          if (v26) {
            goto LABEL_12;
          }
          int64_t v21 = v24 - 1;
          int64_t v47 = v24 - 5;
          while (v47 != v12)
          {
            unint64_t v26 = *(void *)(v15 + 104 + 8 * v12++);
            if (v26)
            {
              int64_t v23 = v12 + 4;
              goto LABEL_12;
            }
          }
        }
      }
    }
  }
  uint64_t v27 = *(void *)(v0 + 200);
  uint64_t v28 = sub_100044014(&qword_1003F33A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 1, 1, v28);
  uint64_t v13 = 0;
LABEL_15:
  *(void *)(v0 + 240) = v21;
  *(void *)(v0 + 248) = v13;
  uint64_t v29 = *(void *)(v0 + 208);
  sub_100013B50(*(void *)(v0 + 200), v29, &qword_1003F33A0);
  uint64_t v30 = sub_100044014(&qword_1003F33A8);
  *(void *)(v0 + 256) = v30;
  uint64_t v31 = *(void *)(v30 - 8);
  *(void *)(v0 + 264) = v31;
  uint64_t v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48);
  *(void *)(v0 + 272) = v32;
  *(void *)(v0 + 280) = (v31 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v32(v29, 1, v30) == 1)
  {
    swift_release();
    unint64_t v48 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of WorkItemQueue.flushQueue()
                            + async function pointer to dispatch thunk of WorkItemQueue.flushQueue());
    uint64_t v33 = (void *)swift_task_alloc();
    *(void *)(v0 + 336) = v33;
    *uint64_t v33 = v0;
    v33[1] = sub_100251E34;
LABEL_17:
    return v48();
  }
  uint64_t v35 = *(void *)(v0 + 168);
  uint64_t v34 = *(void *)(v0 + 176);
  uint64_t v36 = (uint64_t *)(*(void *)(v0 + 208) + *(int *)(v30 + 48));
  uint64_t v37 = *v36;
  *(void *)(v0 + 288) = *v36;
  *(void *)(v0 + 296) = v36[1];
  (*(void (**)(uint64_t))(v35 + 32))(v34);
  uint64_t v38 = *(void *)(v37 + 16);
  if (!v38)
  {
    uint64_t v42 = _swiftEmptyArrayStorage;
    goto LABEL_29;
  }
  uint64_t v39 = *(void *)(v0 + 120);
  sub_100044014(&qword_1003F03F0);
  uint64_t v40 = *(void *)(v39 + 72);
  unint64_t v41 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  uint64_t v42 = (void *)swift_allocObject();
  uint64_t result = j__malloc_size(v42);
  if (!v40) {
    goto LABEL_45;
  }
  if (result - v41 == 0x8000000000000000 && v40 == -1) {
    goto LABEL_47;
  }
  v42[2] = v38;
  v42[3] = 2 * ((uint64_t)(result - v41) / v40);
  uint64_t v44 = sub_10015D570((void *)(v0 + 16), (uint64_t)v42 + v41, v38, v37);
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_1001491B4();
  if (v44 != v38)
  {
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
    return result;
  }
  swift_bridgeObjectRelease();
LABEL_29:
  *(void *)(v0 + 304) = v42;
  uint64_t v45 = (void *)swift_task_alloc();
  *(void *)(v0 + 312) = v45;
  *uint64_t v45 = v0;
  v45[1] = sub_100251010;
  uint64_t v46 = *(void *)(v0 + 176);
  return sub_1002693A8((uint64_t)v42, v46);
}

uint64_t sub_100251818()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 104);
  swift_task_dealloc();
  return _swift_task_switch(sub_100251928, v1, 0);
}

uint64_t sub_100251928()
{
  swift_bridgeObjectRelease();
  swift_release_n();
  uint64_t result = (*(uint64_t (**)(void, void))(*(void *)(v0 + 168) + 8))(*(void *)(v0 + 176), *(void *)(v0 + 160));
  int64_t v3 = *(void *)(v0 + 240);
  unint64_t v2 = *(void *)(v0 + 248);
  if (v2)
  {
    uint64_t v4 = (v2 - 1) & v2;
    unint64_t v5 = __clz(__rbit64(v2)) | (v3 << 6);
    uint64_t v6 = *(void *)(v0 + 232);
LABEL_3:
    uint64_t v7 = *(void *)(v0 + 200);
    (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v0 + 168) + 16))(v7, *(void *)(v6 + 48) + *(void *)(*(void *)(v0 + 168) + 72) * v5, *(void *)(v0 + 160));
    uint64_t v8 = *(void *)(v6 + 56) + 24 * v5;
    uint64_t v9 = sub_100044014(&qword_1003F33A8);
    uint64_t v10 = v7 + *(int *)(v9 + 48);
    long long v11 = *(_OWORD *)(v8 + 8);
    *(void *)uint64_t v10 = *(void *)v8;
    *(_OWORD *)(v10 + 8) = v11;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 0, 1, v9);
    swift_retain();
    swift_bridgeObjectRetain();
    int64_t v12 = v3;
    goto LABEL_10;
  }
  int64_t v13 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  int64_t v14 = (unint64_t)((1 << *(unsigned char *)(v0 + 408)) + 63) >> 6;
  if (v13 >= v14)
  {
    int64_t v12 = *(void *)(v0 + 240);
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 232);
    uint64_t v15 = v6 + 64;
    unint64_t v16 = *(void *)(v6 + 64 + 8 * v13);
    if (v16)
    {
LABEL_7:
      uint64_t v4 = (v16 - 1) & v16;
      unint64_t v5 = __clz(__rbit64(v16)) + (v13 << 6);
      int64_t v3 = v13;
      goto LABEL_3;
    }
    int64_t v12 = v3 + 1;
    if (v3 + 2 < v14)
    {
      unint64_t v16 = *(void *)(v15 + 8 * (v3 + 2));
      if (v16)
      {
        int64_t v13 = v3 + 2;
        goto LABEL_7;
      }
      int64_t v12 = v3 + 2;
      if (v3 + 3 < v14)
      {
        unint64_t v16 = *(void *)(v15 + 8 * (v3 + 3));
        if (v16)
        {
          int64_t v13 = v3 + 3;
          goto LABEL_7;
        }
        int64_t v13 = v3 + 4;
        int64_t v12 = v3 + 3;
        if (v3 + 4 < v14)
        {
          unint64_t v16 = *(void *)(v15 + 8 * v13);
          if (v16) {
            goto LABEL_7;
          }
          int64_t v12 = v14 - 1;
          int64_t v37 = v14 - 5;
          while (v37 != v3)
          {
            unint64_t v16 = *(void *)(v6 + 104 + 8 * v3++);
            if (v16)
            {
              int64_t v13 = v3 + 4;
              goto LABEL_7;
            }
          }
        }
      }
    }
  }
  uint64_t v17 = *(void *)(v0 + 200);
  uint64_t v18 = sub_100044014(&qword_1003F33A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  uint64_t v4 = 0;
LABEL_10:
  *(void *)(v0 + 240) = v12;
  *(void *)(v0 + 248) = v4;
  uint64_t v19 = *(void *)(v0 + 208);
  sub_100013B50(*(void *)(v0 + 200), v19, &qword_1003F33A0);
  uint64_t v20 = sub_100044014(&qword_1003F33A8);
  *(void *)(v0 + 256) = v20;
  uint64_t v21 = *(void *)(v20 - 8);
  *(void *)(v0 + 264) = v21;
  unint64_t v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  *(void *)(v0 + 272) = v22;
  *(void *)(v0 + 280) = (v21 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v22(v19, 1, v20) == 1)
  {
    swift_release();
    uint64_t v38 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of WorkItemQueue.flushQueue()
                            + async function pointer to dispatch thunk of WorkItemQueue.flushQueue());
    int64_t v23 = (void *)swift_task_alloc();
    *(void *)(v0 + 336) = v23;
    *int64_t v23 = v0;
    v23[1] = sub_100251E34;
    return v38();
  }
  uint64_t v25 = *(void *)(v0 + 168);
  uint64_t v24 = *(void *)(v0 + 176);
  unint64_t v26 = (uint64_t *)(*(void *)(v0 + 208) + *(int *)(v20 + 48));
  uint64_t v27 = *v26;
  *(void *)(v0 + 288) = *v26;
  *(void *)(v0 + 296) = v26[1];
  (*(void (**)(uint64_t))(v25 + 32))(v24);
  uint64_t v28 = *(void *)(v27 + 16);
  if (!v28)
  {
    uint64_t v32 = _swiftEmptyArrayStorage;
    goto LABEL_23;
  }
  uint64_t v29 = *(void *)(v0 + 120);
  sub_100044014(&qword_1003F03F0);
  uint64_t v30 = *(void *)(v29 + 72);
  unint64_t v31 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v32 = (void *)swift_allocObject();
  uint64_t result = j__malloc_size(v32);
  if (!v30) {
    goto LABEL_39;
  }
  if (result - v31 == 0x8000000000000000 && v30 == -1) {
    goto LABEL_41;
  }
  v32[2] = v28;
  v32[3] = 2 * ((uint64_t)(result - v31) / v30);
  uint64_t v34 = sub_10015D570((void *)(v0 + 16), (uint64_t)v32 + v31, v28, v27);
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_1001491B4();
  if (v34 != v28)
  {
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    return result;
  }
  swift_bridgeObjectRelease();
LABEL_23:
  *(void *)(v0 + 304) = v32;
  uint64_t v35 = (void *)swift_task_alloc();
  *(void *)(v0 + 312) = v35;
  *uint64_t v35 = v0;
  v35[1] = sub_100251010;
  uint64_t v36 = *(void *)(v0 + 176);
  return sub_1002693A8((uint64_t)v32, v36);
}

uint64_t sub_100251E34()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 104);
  swift_task_dealloc();
  return _swift_task_switch(sub_100251F44, v1, 0);
}

uint64_t sub_100251F44()
{
  uint64_t v47 = v0;
  uint64_t v1 = *(void *)(v0 + 104);
  *(void *)(v1 + *(void *)(v0 + 224)) = _swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease();
  uint64_t v2 = OBJC_IVAR____TtC13findmylocated15LocationService_legacyLocationSubscriptions;
  *(void *)(v0 + 344) = OBJC_IVAR____TtC13findmylocated15LocationService_legacyLocationSubscriptions;
  uint64_t v3 = (uint64_t *)(v1 + v2);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *(void *)(v0 + 352) = *v3;
  char v5 = *(unsigned char *)(v4 + 32);
  *(unsigned char *)(v0 + 409) = v5;
  uint64_t v6 = 1 << v5;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v4 + 64);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_5:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v12 = v11 | (v10 << 6);
  uint64_t v13 = *(void *)(v0 + 352);
LABEL_6:
  uint64_t v14 = *(void *)(v0 + 256);
  uint64_t v15 = *(void *)(v0 + 264);
  uint64_t v16 = *(void *)(v0 + 184);
  (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v0 + 168) + 16))(v16, *(void *)(v13 + 48) + *(void *)(*(void *)(v0 + 168) + 72) * v12, *(void *)(v0 + 160));
  uint64_t v17 = *(void *)(v13 + 56) + 24 * v12;
  uint64_t v18 = v16 + *(int *)(v14 + 48);
  long long v19 = *(_OWORD *)(v17 + 8);
  *(void *)uint64_t v18 = *(void *)v17;
  *(_OWORD *)(v18 + 8) = v19;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v16, 0, 1, v14);
  swift_retain();
  swift_bridgeObjectRetain();
  while (1)
  {
    *(void *)(v0 + 360) = v10;
    *(void *)(v0 + 368) = v8;
    uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 272);
    uint64_t v26 = *(void *)(v0 + 256);
    uint64_t v27 = *(void *)(v0 + 192);
    sub_100013B50(*(void *)(v0 + 184), v27, &qword_1003F33A0);
    if (v25(v27, 1, v26) == 1)
    {
      swift_release();
      uint64_t v45 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of WorkItemQueue.flushQueue()
                              + async function pointer to dispatch thunk of WorkItemQueue.flushQueue());
      uint64_t v34 = (void *)swift_task_alloc();
      *(void *)(v0 + 400) = v34;
      *uint64_t v34 = v0;
      v34[1] = sub_100252AC8;
      goto LABEL_34;
    }
    uint64_t v28 = *(void *)(v0 + 192);
    uint64_t v29 = (void *)(v28 + *(int *)(*(void *)(v0 + 256) + 48));
    *(void *)(v0 + 376) = *v29;
    uint64_t v30 = v29[1];
    *(void *)(v0 + 384) = v30;
    if (v30) {
      break;
    }
    uint64_t v31 = *(void *)(v0 + 160);
    uint64_t v32 = *(void *)(v0 + 168);
    swift_bridgeObjectRelease();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8))(v28, v31);
    if (v8) {
      goto LABEL_5;
    }
LABEL_7:
    int64_t v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      return result;
    }
    int64_t v21 = (unint64_t)((1 << *(unsigned char *)(v0 + 409)) + 63) >> 6;
    if (v20 >= v21)
    {
      int64_t v24 = v10;
    }
    else
    {
      uint64_t v13 = *(void *)(v0 + 352);
      uint64_t v22 = v13 + 64;
      unint64_t v23 = *(void *)(v13 + 64 + 8 * v20);
      if (v23) {
        goto LABEL_10;
      }
      int64_t v24 = v10 + 1;
      if (v10 + 2 < v21)
      {
        unint64_t v23 = *(void *)(v22 + 8 * (v10 + 2));
        if (v23)
        {
          int64_t v20 = v10 + 2;
LABEL_10:
          unint64_t v8 = (v23 - 1) & v23;
          unint64_t v12 = __clz(__rbit64(v23)) + (v20 << 6);
          int64_t v10 = v20;
          goto LABEL_6;
        }
        int64_t v24 = v10 + 2;
        if (v10 + 3 < v21)
        {
          unint64_t v23 = *(void *)(v22 + 8 * (v10 + 3));
          if (v23)
          {
            int64_t v20 = v10 + 3;
            goto LABEL_10;
          }
          int64_t v20 = v10 + 4;
          int64_t v24 = v10 + 3;
          if (v10 + 4 < v21)
          {
            unint64_t v23 = *(void *)(v22 + 8 * v20);
            if (v23) {
              goto LABEL_10;
            }
            int64_t v24 = v21 - 1;
            int64_t v33 = v21 - 5;
            while (v33 != v10)
            {
              unint64_t v23 = *(void *)(v13 + 104 + 8 * v10++);
              if (v23)
              {
                int64_t v20 = v10 + 4;
                goto LABEL_10;
              }
            }
          }
        }
      }
    }
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 264) + 56))(*(void *)(v0 + 184), 1, 1, *(void *)(v0 + 256));
    unint64_t v8 = 0;
    int64_t v10 = v24;
  }
  swift_retain_n();
  uint64_t v35 = Logger.logObject.getter();
  os_log_type_t v36 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = *(void *)(v0 + 144);
    uint64_t v38 = *(void *)(v0 + 152);
    uint64_t v39 = *(void *)(v0 + 136);
    uint64_t v40 = swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    *(_DWORD *)uint64_t v40 = 136446210;
    WorkItemQueue.WorkItem.id.getter();
    sub_1000207A4(&qword_1003ECF68, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v41 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v43 = v42;
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v38, v39);
    *(void *)(v40 + 4) = sub_100037004(v41, v43, &v46);
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "Canceling %{public}s.", (uint8_t *)v40, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v45 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of WorkItemQueue.WorkItem.cancel()
                          + async function pointer to dispatch thunk of WorkItemQueue.WorkItem.cancel());
  uint64_t v44 = (void *)swift_task_alloc();
  *(void *)(v0 + 392) = v44;
  void *v44 = v0;
  v44[1] = sub_1002524A0;
LABEL_34:
  return v45();
}

uint64_t sub_1002524A0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 104);
  swift_task_dealloc();
  return _swift_task_switch(sub_1002525B0, v1, 0);
}

uint64_t sub_1002525B0()
{
  uint64_t v43 = v0;
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 168);
  swift_bridgeObjectRelease();
  swift_release_n();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  int64_t v5 = *(void *)(v0 + 360);
  unint64_t v6 = *(void *)(v0 + 368);
  if (!v6) {
    goto LABEL_4;
  }
LABEL_2:
  unint64_t v7 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v8 = v7 | (v5 << 6);
  uint64_t v9 = *(void *)(v0 + 352);
LABEL_3:
  uint64_t v10 = *(void *)(v0 + 256);
  uint64_t v11 = *(void *)(v0 + 264);
  uint64_t v12 = *(void *)(v0 + 184);
  (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v0 + 168) + 16))(v12, *(void *)(v9 + 48) + *(void *)(*(void *)(v0 + 168) + 72) * v8, *(void *)(v0 + 160));
  uint64_t v13 = *(void *)(v9 + 56) + 24 * v8;
  uint64_t v14 = v12 + *(int *)(v10 + 48);
  long long v15 = *(_OWORD *)(v13 + 8);
  *(void *)uint64_t v14 = *(void *)v13;
  *(_OWORD *)(v14 + 8) = v15;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v12, 0, 1, v10);
  swift_retain();
  swift_bridgeObjectRetain();
  while (1)
  {
    *(void *)(v0 + 360) = v5;
    *(void *)(v0 + 368) = v6;
    int64_t v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 272);
    uint64_t v22 = *(void *)(v0 + 256);
    uint64_t v23 = *(void *)(v0 + 192);
    sub_100013B50(*(void *)(v0 + 184), v23, &qword_1003F33A0);
    if (v21(v23, 1, v22) == 1)
    {
      swift_release();
      uint64_t v41 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of WorkItemQueue.flushQueue()
                              + async function pointer to dispatch thunk of WorkItemQueue.flushQueue());
      uint64_t v30 = (void *)swift_task_alloc();
      *(void *)(v0 + 400) = v30;
      *uint64_t v30 = v0;
      v30[1] = sub_100252AC8;
      goto LABEL_31;
    }
    uint64_t v24 = *(void *)(v0 + 192);
    uint64_t v25 = (void *)(v24 + *(int *)(*(void *)(v0 + 256) + 48));
    *(void *)(v0 + 376) = *v25;
    uint64_t v26 = v25[1];
    *(void *)(v0 + 384) = v26;
    if (v26) {
      break;
    }
    uint64_t v27 = *(void *)(v0 + 160);
    uint64_t v28 = *(void *)(v0 + 168);
    swift_bridgeObjectRelease();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v24, v27);
    if (v6) {
      goto LABEL_2;
    }
LABEL_4:
    int64_t v16 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      return result;
    }
    int64_t v17 = (unint64_t)((1 << *(unsigned char *)(v0 + 409)) + 63) >> 6;
    if (v16 >= v17)
    {
      int64_t v20 = v5;
    }
    else
    {
      uint64_t v9 = *(void *)(v0 + 352);
      uint64_t v18 = v9 + 64;
      unint64_t v19 = *(void *)(v9 + 64 + 8 * v16);
      if (v19) {
        goto LABEL_7;
      }
      int64_t v20 = v5 + 1;
      if (v5 + 2 < v17)
      {
        unint64_t v19 = *(void *)(v18 + 8 * (v5 + 2));
        if (v19)
        {
          int64_t v16 = v5 + 2;
LABEL_7:
          unint64_t v6 = (v19 - 1) & v19;
          unint64_t v8 = __clz(__rbit64(v19)) + (v16 << 6);
          int64_t v5 = v16;
          goto LABEL_3;
        }
        int64_t v20 = v5 + 2;
        if (v5 + 3 < v17)
        {
          unint64_t v19 = *(void *)(v18 + 8 * (v5 + 3));
          if (v19)
          {
            int64_t v16 = v5 + 3;
            goto LABEL_7;
          }
          int64_t v16 = v5 + 4;
          int64_t v20 = v5 + 3;
          if (v5 + 4 < v17)
          {
            unint64_t v19 = *(void *)(v18 + 8 * v16);
            if (v19) {
              goto LABEL_7;
            }
            int64_t v20 = v17 - 1;
            int64_t v29 = v17 - 5;
            while (v29 != v5)
            {
              unint64_t v19 = *(void *)(v9 + 104 + 8 * v5++);
              if (v19)
              {
                int64_t v16 = v5 + 4;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 264) + 56))(*(void *)(v0 + 184), 1, 1, *(void *)(v0 + 256));
    unint64_t v6 = 0;
    int64_t v5 = v20;
  }
  swift_retain_n();
  uint64_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = *(void *)(v0 + 144);
    uint64_t v34 = *(void *)(v0 + 152);
    uint64_t v35 = *(void *)(v0 + 136);
    uint64_t v36 = swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    *(_DWORD *)uint64_t v36 = 136446210;
    WorkItemQueue.WorkItem.id.getter();
    sub_1000207A4(&qword_1003ECF68, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v37 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v39 = v38;
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v34, v35);
    *(void *)(v36 + 4) = sub_100037004(v37, v39, &v42);
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "Canceling %{public}s.", (uint8_t *)v36, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v41 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of WorkItemQueue.WorkItem.cancel()
                          + async function pointer to dispatch thunk of WorkItemQueue.WorkItem.cancel());
  uint64_t v40 = (void *)swift_task_alloc();
  *(void *)(v0 + 392) = v40;
  *uint64_t v40 = v0;
  v40[1] = sub_1002524A0;
LABEL_31:
  return v41();
}

uint64_t sub_100252AC8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 104);
  swift_task_dealloc();
  return _swift_task_switch(sub_100252BD8, v1, 0);
}

uint64_t sub_100252BD8()
{
  uint64_t v1 = v0[13];
  *(void *)(v1 + v0[43]) = _swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease();
  uint64_t v2 = OBJC_IVAR____TtC13findmylocated15LocationService_legacyLocationTask;
  if (*(void *)(v1 + OBJC_IVAR____TtC13findmylocated15LocationService_legacyLocationTask))
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  *(void *)(v1 + v2) = 0;
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100252D0C()
{
  uint64_t v57 = v0;
  uint64_t v1 = *(void *)(v0 + 304);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 120);
    uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v5 = *(void *)(v3 + 72);
    unint64_t v6 = *(void (**)(uint64_t, uint64_t, void))(v3 + 16);
    swift_retain();
    do
    {
      uint64_t v7 = *(void *)(v0 + 128);
      v6(v7, v4, *(void *)(v0 + 112));
      sub_10027F8B4(v7);
      (*(void (**)(void, void))(*(void *)(v0 + 120) + 8))(*(void *)(v0 + 128), *(void *)(v0 + 112));
      v4 += v5;
      --v2;
    }
    while (v2);
    swift_release();
  }
  swift_errorRelease();
  swift_release();
  if (*(void *)(v0 + 296))
  {
    swift_retain_n();
    unint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = *(void *)(v0 + 144);
      uint64_t v11 = *(void *)(v0 + 152);
      uint64_t v12 = *(void *)(v0 + 136);
      uint64_t v13 = swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136446210;
      WorkItemQueue.WorkItem.id.getter();
      sub_1000207A4(&qword_1003ECF68, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v16 = v15;
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);
      *(void *)(v13 + 4) = sub_100037004(v14, v16, &v56);
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Canceling %{public}s.", (uint8_t *)v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    uint64_t v55 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of WorkItemQueue.WorkItem.cancel()
                            + async function pointer to dispatch thunk of WorkItemQueue.WorkItem.cancel());
    int64_t v29 = (void *)swift_task_alloc();
    *(void *)(v0 + 328) = v29;
    *int64_t v29 = v0;
    v29[1] = sub_100251818;
    goto LABEL_21;
  }
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(void, void))(*(void *)(v0 + 168) + 8))(*(void *)(v0 + 176), *(void *)(v0 + 160));
  int64_t v19 = *(void *)(v0 + 240);
  unint64_t v18 = *(void *)(v0 + 248);
  if (v18)
  {
    uint64_t v20 = (v18 - 1) & v18;
    unint64_t v21 = __clz(__rbit64(v18)) | (v19 << 6);
    uint64_t v22 = *(void *)(v0 + 232);
LABEL_10:
    uint64_t v23 = *(void *)(v0 + 200);
    (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v0 + 168) + 16))(v23, *(void *)(v22 + 48) + *(void *)(*(void *)(v0 + 168) + 72) * v21, *(void *)(v0 + 160));
    uint64_t v24 = *(void *)(v22 + 56) + 24 * v21;
    uint64_t v25 = sub_100044014(&qword_1003F33A8);
    uint64_t v26 = v23 + *(int *)(v25 + 48);
    long long v27 = *(_OWORD *)(v24 + 8);
    *(void *)uint64_t v26 = *(void *)v24;
    *(_OWORD *)(v26 + 8) = v27;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v23, 0, 1, v25);
    swift_retain();
    swift_bridgeObjectRetain();
    int64_t v28 = v19;
    goto LABEL_19;
  }
  int64_t v30 = v19 + 1;
  if (__OFADD__(v19, 1))
  {
    __break(1u);
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  int64_t v31 = (unint64_t)((1 << *(unsigned char *)(v0 + 408)) + 63) >> 6;
  if (v30 >= v31)
  {
    int64_t v28 = *(void *)(v0 + 240);
  }
  else
  {
    uint64_t v22 = *(void *)(v0 + 232);
    uint64_t v32 = v22 + 64;
    unint64_t v33 = *(void *)(v22 + 64 + 8 * v30);
    if (v33)
    {
LABEL_16:
      uint64_t v20 = (v33 - 1) & v33;
      unint64_t v21 = __clz(__rbit64(v33)) + (v30 << 6);
      int64_t v19 = v30;
      goto LABEL_10;
    }
    int64_t v28 = v19 + 1;
    if (v19 + 2 < v31)
    {
      unint64_t v33 = *(void *)(v32 + 8 * (v19 + 2));
      if (v33)
      {
        int64_t v30 = v19 + 2;
        goto LABEL_16;
      }
      int64_t v28 = v19 + 2;
      if (v19 + 3 < v31)
      {
        unint64_t v33 = *(void *)(v32 + 8 * (v19 + 3));
        if (v33)
        {
          int64_t v30 = v19 + 3;
          goto LABEL_16;
        }
        int64_t v30 = v19 + 4;
        int64_t v28 = v19 + 3;
        if (v19 + 4 < v31)
        {
          unint64_t v33 = *(void *)(v32 + 8 * v30);
          if (v33) {
            goto LABEL_16;
          }
          int64_t v28 = v31 - 1;
          int64_t v54 = v31 - 5;
          while (v54 != v19)
          {
            unint64_t v33 = *(void *)(v22 + 104 + 8 * v19++);
            if (v33)
            {
              int64_t v30 = v19 + 4;
              goto LABEL_16;
            }
          }
        }
      }
    }
  }
  uint64_t v34 = *(void *)(v0 + 200);
  uint64_t v35 = sub_100044014(&qword_1003F33A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 1, 1, v35);
  uint64_t v20 = 0;
LABEL_19:
  *(void *)(v0 + 240) = v28;
  *(void *)(v0 + 248) = v20;
  uint64_t v36 = *(void *)(v0 + 208);
  sub_100013B50(*(void *)(v0 + 200), v36, &qword_1003F33A0);
  uint64_t v37 = sub_100044014(&qword_1003F33A8);
  *(void *)(v0 + 256) = v37;
  uint64_t v38 = *(void *)(v37 - 8);
  *(void *)(v0 + 264) = v38;
  unint64_t v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
  *(void *)(v0 + 272) = v39;
  *(void *)(v0 + 280) = (v38 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v39(v36, 1, v37) == 1)
  {
    swift_release();
    uint64_t v55 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of WorkItemQueue.flushQueue()
                            + async function pointer to dispatch thunk of WorkItemQueue.flushQueue());
    uint64_t v40 = (void *)swift_task_alloc();
    *(void *)(v0 + 336) = v40;
    *uint64_t v40 = v0;
    v40[1] = sub_100251E34;
LABEL_21:
    return v55();
  }
  uint64_t v42 = *(void *)(v0 + 168);
  uint64_t v41 = *(void *)(v0 + 176);
  uint64_t v43 = (uint64_t *)(*(void *)(v0 + 208) + *(int *)(v37 + 48));
  uint64_t v44 = *v43;
  *(void *)(v0 + 288) = *v43;
  *(void *)(v0 + 296) = v43[1];
  (*(void (**)(uint64_t))(v42 + 32))(v41);
  uint64_t v45 = *(void *)(v44 + 16);
  if (!v45)
  {
    uint64_t v49 = _swiftEmptyArrayStorage;
    goto LABEL_33;
  }
  uint64_t v46 = *(void *)(v0 + 120);
  sub_100044014(&qword_1003F03F0);
  uint64_t v47 = *(void *)(v46 + 72);
  unint64_t v48 = (*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  uint64_t v49 = (void *)swift_allocObject();
  uint64_t result = j__malloc_size(v49);
  if (!v47) {
    goto LABEL_49;
  }
  if (result - v48 == 0x8000000000000000 && v47 == -1) {
    goto LABEL_51;
  }
  v49[2] = v45;
  v49[3] = 2 * ((uint64_t)(result - v48) / v47);
  uint64_t v51 = sub_10015D570((void *)(v0 + 16), (uint64_t)v49 + v48, v45, v44);
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_1001491B4();
  if (v51 != v45)
  {
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
    return result;
  }
  swift_bridgeObjectRelease();
LABEL_33:
  *(void *)(v0 + 304) = v49;
  uint64_t v52 = (void *)swift_task_alloc();
  *(void *)(v0 + 312) = v52;
  *uint64_t v52 = v0;
  v52[1] = sub_100251010;
  uint64_t v53 = *(void *)(v0 + 176);
  return sub_1002693A8((uint64_t)v49, v53);
}

uint64_t sub_1002534F0()
{
  v1[29] = v0;
  uint64_t v2 = type metadata accessor for Device();
  v1[30] = v2;
  v1[31] = *(void *)(v2 - 8);
  v1[32] = swift_task_alloc();
  sub_100044014(&qword_1003EFCD0);
  v1[33] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Handle();
  v1[34] = v3;
  v1[35] = *(void *)(v3 - 8);
  v1[36] = swift_task_alloc();
  v1[37] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for HandleType();
  v1[38] = v4;
  v1[39] = *(void *)(v4 - 8);
  v1[40] = swift_task_alloc();
  v1[41] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Friend();
  v1[42] = v5;
  v1[43] = *(void *)(v5 - 8);
  v1[44] = swift_task_alloc();
  v1[45] = swift_task_alloc();
  v1[46] = swift_task_alloc();
  v1[47] = swift_task_alloc();
  v1[48] = swift_task_alloc();
  v1[49] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for DataManager.State(0);
  v1[50] = v6;
  v1[51] = *(void *)(v6 - 8);
  v1[52] = swift_task_alloc();
  v1[53] = swift_task_alloc();
  v1[54] = swift_task_alloc();
  v1[55] = swift_task_alloc();
  sub_100044014(&qword_1003F3420);
  v1[56] = swift_task_alloc();
  uint64_t v7 = sub_100044014(&qword_1003F3428);
  v1[57] = v7;
  v1[58] = *(void *)(v7 - 8);
  v1[59] = swift_task_alloc();
  sub_100044014(&qword_1003F3430);
  v1[60] = swift_task_alloc();
  uint64_t v8 = sub_100044014((uint64_t *)&unk_1003F2E98);
  v1[61] = v8;
  v1[62] = *(void *)(v8 - 8);
  v1[63] = swift_task_alloc();
  return _swift_task_switch(sub_1002538F8, v0, 0);
}

uint64_t sub_1002538F8()
{
  if (static SystemInfo.underTest.getter())
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
LABEL_11:
    return v1();
  }
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  *(void *)(v0 + 512) = sub_100044058(v2, (uint64_t)qword_10040C290);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Monitoring DataManager stream", v5, 2u);
    swift_slowDealloc();
  }
  uint64_t v6 = *(void *)(v0 + 488);
  uint64_t v7 = *(void *)(v0 + 496);
  uint64_t v8 = *(void *)(v0 + 480);
  uint64_t v9 = *(void *)(v0 + 232);

  uint64_t v10 = v9 + OBJC_IVAR____TtC13findmylocated15LocationService_dataManagerStateStream;
  swift_beginAccess();
  sub_100013210(v10, v8, &qword_1003F3430);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6) == 1)
  {
    sub_10000A520(*(void *)(v0 + 480), &qword_1003F3430);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "dataManagerStateStream should be available by now!", v13, 2u);
      swift_slowDealloc();
    }

    sub_100282ACC();
    swift_allocError();
    *uint64_t v14 = 11;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_11;
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 496) + 32))(*(void *)(v0 + 504), *(void *)(v0 + 480), *(void *)(v0 + 488));
  AsyncStream.makeAsyncIterator()();
  uint64_t v16 = sub_1000207A4(qword_1003F3148, 255, (void (*)(uint64_t))type metadata accessor for LocationService);
  *(void *)(v0 + 520) = v16;
  *(void *)(v0 + 528) = OBJC_IVAR____TtC13findmylocated15LocationService_secureLocationsManager;
  *(_DWORD *)(v0 + 712) = enum case for HandleType.follower(_:);
  *(_DWORD *)(v0 + 716) = enum case for HandleType.following(_:);
  *(_DWORD *)(v0 + 720) = enum case for HandleType.futureFollower(_:);
  *(_DWORD *)(v0 + 724) = enum case for HandleType.futureFollowing(_:);
  *(_DWORD *)(v0 + 728) = enum case for HandleType.pendingOffer(_:);
  *(void *)(v0 + 536) = 0;
  uint64_t v17 = *(void *)(v0 + 232);
  unint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v0 + 544) = v18;
  *unint64_t v18 = v0;
  v18[1] = sub_100253E98;
  uint64_t v19 = *(void *)(v0 + 448);
  uint64_t v20 = *(void *)(v0 + 456);
  return AsyncStream.Iterator.next(isolation:)(v19, v17, v16, v20);
}

uint64_t sub_100253E98()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 232);
  swift_task_dealloc();
  return _swift_task_switch(sub_100253FA8, v1, 0);
}

uint64_t sub_100253FA8()
{
  uint64_t v110 = v0;
  uint64_t v1 = *(void *)(v0 + 448);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 408) + 48))(v1, 1, *(void *)(v0 + 400)) == 1)
  {
    uint64_t v3 = *(void *)(v0 + 496);
    uint64_t v2 = *(void *)(v0 + 504);
    uint64_t v4 = *(void *)(v0 + 488);
    (*(void (**)(void, void))(*(void *)(v0 + 464) + 8))(*(void *)(v0 + 472), *(void *)(v0 + 456));
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
LABEL_5:
    return v5();
  }
  uint64_t v6 = *(void *)(v0 + 536);
  sub_10028300C(v1, *(void *)(v0 + 440));
  static Task<>.checkCancellation()();
  if (v6)
  {
    uint64_t v8 = *(void *)(v0 + 496);
    uint64_t v7 = *(void *)(v0 + 504);
    uint64_t v9 = *(void *)(v0 + 488);
    uint64_t v11 = *(void *)(v0 + 464);
    uint64_t v10 = *(void *)(v0 + 472);
    uint64_t v12 = *(void *)(v0 + 456);
    sub_10004E90C(*(void *)(v0 + 440));
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_5;
  }
  sub_10004E968(*(void *)(v0 + 440), *(void *)(v0 + 432));
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  BOOL v16 = os_log_type_enabled(v14, v15);
  uint64_t v17 = *(void *)(v0 + 432);
  if (v16)
  {
    uint64_t v18 = swift_slowAlloc();
    v109[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136315138;
    uint64_t v19 = sub_100105094();
    *(void *)(v18 + 4) = sub_100037004(v19, v20, v109);
    swift_bridgeObjectRelease();
    sub_10004E90C(v17);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "dataManagerStateStream event: %s", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10004E90C(*(void *)(v0 + 432));
  }

  sub_10004E968(*(void *)(v0 + 440), *(void *)(v0 + 424));
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v36 = *(void *)(v0 + 384);
      uint64_t v35 = *(void *)(v0 + 392);
      uint64_t v37 = *(void *)(v0 + 336);
      uint64_t v38 = *(void *)(v0 + 344);
      (*(void (**)(uint64_t, void, uint64_t))(v38 + 32))(v35, *(void *)(v0 + 424), v37);
      unint64_t v39 = *(void (**)(void, void, void))(v38 + 16);
      *(void *)(v0 + 552) = v39;
      *(void *)(v0 + 560) = (v38 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      uint64_t v107 = v39;
      v39(v36, v35, v37);
      uint64_t v40 = Logger.logObject.getter();
      os_log_type_t v41 = static os_log_type_t.default.getter();
      BOOL v42 = os_log_type_enabled(v40, v41);
      uint64_t v43 = *(void *)(v0 + 384);
      uint64_t v44 = *(void *)(v0 + 344);
      if (v42)
      {
        uint64_t v45 = *(void *)(v0 + 328);
        uint64_t v46 = *(void *)(v0 + 304);
        uint64_t v47 = *(void *)(v0 + 312);
        log = v40;
        *(void *)int v103 = *(void *)(v0 + 336);
        uint64_t v48 = swift_slowAlloc();
        v109[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v48 = 136315138;
        os_log_type_t type = v41;
        Friend.type.getter();
        sub_1000207A4(&qword_1003EFEB0, 255, (void (*)(uint64_t))&type metadata accessor for HandleType);
        uint64_t v49 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v51 = v50;
        (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v45, v46);
        *(void *)(v48 + 4) = sub_100037004(v49, v51, v109);
        swift_bridgeObjectRelease();
        uint64_t v52 = *(void (**)(uint64_t, void))(v44 + 8);
        v52(v43, *(void *)v103);
        uint64_t v53 = v52;
        _os_log_impl((void *)&_mh_execute_header, log, type, "dataManagerStateStream added friend of type: %s", (uint8_t *)v48, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        int64_t v54 = *(void (**)(uint64_t, void))(v44 + 8);
        v54(v43, *(void *)(v0 + 336));
        uint64_t v53 = v54;
      }
      *(void *)(v0 + 568) = v53;
      int v55 = *(_DWORD *)(v0 + 712);
      uint64_t v57 = *(void *)(v0 + 312);
      uint64_t v56 = *(void *)(v0 + 320);
      uint64_t v58 = *(void *)(v0 + 304);
      Friend.type.getter();
      int v59 = (*(uint64_t (**)(uint64_t, uint64_t))(v57 + 88))(v56, v58);
      if (v59 == v55)
      {
        uint64_t v60 = *(void *)(v0 + 296);
        uint64_t v61 = *(void *)(v0 + 272);
        uint64_t v62 = *(void *)(v0 + 280);
        Friend.handle.getter();
        uint64_t v63 = Handle.serverID.getter();
        uint64_t v65 = v64;
        *(void *)(v0 + 576) = v63;
        *(void *)(v0 + 584) = v64;
        uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v62 + 8);
        *(void *)(v0 + 592) = v66;
        *(void *)(v0 + 600) = (v62 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        v66(v60, v61);
        if (v65)
        {
          unint64_t v67 = (void *)swift_task_alloc();
          *(void *)(v0 + 608) = v67;
          *unint64_t v67 = v0;
          v67[1] = sub_100254E20;
          return daemon.getter();
        }
LABEL_43:
        uint64_t v95 = *(void *)(v0 + 440);
        v53(*(void *)(v0 + 392), *(void *)(v0 + 336));
        uint64_t v29 = v95;
        goto LABEL_16;
      }
      if (v59 == *(_DWORD *)(v0 + 716))
      {
        v107(*(void *)(v0 + 360), *(void *)(v0 + 392), *(void *)(v0 + 336));
        char v68 = Logger.logObject.getter();
        os_log_type_t v69 = static os_log_type_t.default.getter();
        BOOL v70 = os_log_type_enabled(v68, v69);
        uint64_t v71 = *(void *)(v0 + 360);
        if (v70)
        {
          uint64_t v105 = v53;
          uint64_t v73 = *(void *)(v0 + 280);
          uint64_t v72 = *(void *)(v0 + 288);
          uint64_t v97 = *(void *)(v0 + 272);
          *(void *)os_log_type_t typea = *(void *)(v0 + 336);
          uint64_t v74 = swift_slowAlloc();
          v109[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v74 = 141558275;
          *(void *)(v0 + 144) = 1752392040;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v74 + 12) = 2081;
          Friend.handle.getter();
          uint64_t v75 = Handle.identifier.getter();
          unint64_t v77 = v76;
          (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v72, v97);
          *(void *)(v0 + 152) = sub_100037004(v75, v77, v109);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          v105(v71, *(void *)typea);
          _os_log_impl((void *)&_mh_execute_header, v68, v69, "Added a following: %{private,mask.hash}s", (uint8_t *)v74, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          v53(*(void *)(v0 + 360), *(void *)(v0 + 336));
        }

        uint64_t v94 = (void *)swift_task_alloc();
        *(void *)(v0 + 688) = v94;
        *uint64_t v94 = v0;
        v94[1] = sub_100255ED0;
        return sub_10028968C();
      }
      else
      {
        if (v59 == *(_DWORD *)(v0 + 720) || v59 == *(_DWORD *)(v0 + 724) || v59 == *(_DWORD *)(v0 + 728)) {
          goto LABEL_43;
        }
        v107(*(void *)(v0 + 352), *(void *)(v0 + 392), *(void *)(v0 + 336));
        uint64_t v78 = Logger.logObject.getter();
        os_log_type_t v79 = static os_log_type_t.error.getter();
        BOOL v80 = os_log_type_enabled(v78, v79);
        uint64_t v81 = *(void *)(v0 + 440);
        uint64_t v82 = *(void *)(v0 + 392);
        uint64_t v83 = *(void *)(v0 + 352);
        uint64_t v84 = *(void *)(v0 + 336);
        if (v80)
        {
          os_log_type_t v104 = v79;
          uint64_t v85 = *(void *)(v0 + 328);
          uint64_t v108 = *(void *)(v0 + 392);
          uint64_t v87 = *(void *)(v0 + 304);
          uint64_t v86 = *(void *)(v0 + 312);
          uint64_t v106 = *(void *)(v0 + 336);
          uint64_t v88 = swift_slowAlloc();
          v109[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v88 = 136446466;
          *(void *)(v88 + 4) = sub_100037004(0xD000000000000019, 0x8000000100378AE0, v109);
          *(_WORD *)(v88 + 12) = 2080;
          Friend.type.getter();
          sub_1000207A4(&qword_1003EFEB0, 255, (void (*)(uint64_t))&type metadata accessor for HandleType);
          uint64_t v89 = dispatch thunk of CustomStringConvertible.description.getter();
          loga = v78;
          uint64_t typeb = v81;
          unint64_t v91 = v90;
          long long v92 = v53;
          int v93 = *(void (**)(uint64_t, uint64_t))(v86 + 8);
          v93(v85, v87);
          *(void *)(v88 + 14) = sub_100037004(v89, v91, v109);
          swift_bridgeObjectRelease();
          v92(v83, v106);
          _os_log_impl((void *)&_mh_execute_header, loga, v104, "%{public}s Unexpected friend.type %s!", (uint8_t *)v88, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          v92(v108, v106);
          sub_10004E90C(typeb);
        }
        else
        {
          uint64_t v96 = *(void *)(v0 + 312);

          v53(v83, v84);
          v53(v82, v84);
          sub_10004E90C(v81);
          int v93 = *(void (**)(uint64_t, uint64_t))(v96 + 8);
        }
        v93(*(void *)(v0 + 320), *(void *)(v0 + 304));
LABEL_17:
        *(void *)(v0 + 536) = 0;
        uint64_t v30 = *(void *)(v0 + 520);
        uint64_t v31 = *(void *)(v0 + 232);
        uint64_t v32 = (void *)swift_task_alloc();
        *(void *)(v0 + 544) = v32;
        *uint64_t v32 = v0;
        v32[1] = sub_100253E98;
        uint64_t v33 = *(void *)(v0 + 448);
        uint64_t v34 = *(void *)(v0 + 456);
        return AsyncStream.Iterator.next(isolation:)(v33, v31, v30, v34);
      }
    case 2u:
      (*(void (**)(void, void))(*(void *)(v0 + 344) + 8))(*(void *)(v0 + 424), *(void *)(v0 + 336));
      goto LABEL_12;
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
      goto LABEL_12;
    default:
      sub_10000A520(*(void *)(v0 + 424), &qword_1003EFCD0);
LABEL_12:
      sub_10004E968(*(void *)(v0 + 440), *(void *)(v0 + 416));
      uint64_t v21 = Logger.logObject.getter();
      os_log_type_t v22 = static os_log_type_t.info.getter();
      BOOL v23 = os_log_type_enabled(v21, v22);
      uint64_t v24 = *(void *)(v0 + 440);
      uint64_t v25 = *(void *)(v0 + 416);
      if (v23)
      {
        uint64_t v26 = swift_slowAlloc();
        v109[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v26 = 136315138;
        uint64_t v27 = sub_100105094();
        *(void *)(v26 + 4) = sub_100037004(v27, v28, v109);
        swift_bridgeObjectRelease();
        sub_10004E90C(v25);
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "Ignoring %s", (uint8_t *)v26, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        sub_10004E90C(v25);
      }
      uint64_t v29 = v24;
LABEL_16:
      sub_10004E90C(v29);
      goto LABEL_17;
  }
}

uint64_t sub_100254E20(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v9 = *v1;
  *(void *)(v2 + 616) = a1;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 624) = v3;
  uint64_t v4 = type metadata accessor for Daemon();
  uint64_t v5 = type metadata accessor for DataManager(0);
  uint64_t v6 = sub_1000207A4(&qword_1003ECCA8, 255, (void (*)(uint64_t))&type metadata accessor for Daemon);
  uint64_t v7 = sub_1000207A4(&qword_1003ECCC0, 255, (void (*)(uint64_t))type metadata accessor for DataManager);
  *uint64_t v3 = v9;
  v3[1] = sub_100255004;
  return ActorServiceDaemon.getService<A>()(v4, v5, v6, v7);
}

uint64_t sub_100255004(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v3[79] = a1;
  v3[80] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v3[29];
    swift_release();
    swift_bridgeObjectRelease();
    return _swift_task_switch(sub_100256118, v5, 0);
  }
  else
  {
    swift_release();
    uint64_t v6 = (void *)swift_task_alloc();
    v3[81] = v6;
    *uint64_t v6 = v4;
    v6[1] = sub_1002551BC;
    return sub_100005F58();
  }
}

uint64_t sub_1002551BC(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 632);
  *(void *)(*(void *)v1 + 656) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1002552D4, v2, 0);
}

uint64_t sub_1002552D4()
{
  uint64_t v1 = *(void *)(v0 + 656);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 248);
    uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v5 = *(void *)(v3 + 72);
    uint64_t v6 = *(void (**)(void, uint64_t, void))(v3 + 16);
    swift_bridgeObjectRetain();
    while (1)
    {
      v6(*(void *)(v0 + 256), v4, *(void *)(v0 + 240));
      if (Device.isActive.getter()) {
        break;
      }
      (*(void (**)(void, void))(*(void *)(v0 + 248) + 8))(*(void *)(v0 + 256), *(void *)(v0 + 240));
      v4 += v5;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    uint64_t v8 = *(void *)(v0 + 256);
    uint64_t v9 = *(void *)(v0 + 264);
    uint64_t v10 = *(void *)(v0 + 240);
    uint64_t v11 = *(void *)(v0 + 248);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v9, v8, v10);
    uint64_t v7 = 0;
  }
  else
  {
LABEL_6:
    uint64_t v7 = 1;
  }
  uint64_t v12 = *(void *)(v0 + 264);
  uint64_t v13 = *(void *)(v0 + 240);
  uint64_t v14 = *(void *)(v0 + 248);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, v7, 1, v13);
  swift_bridgeObjectRelease();
  int v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  uint64_t v16 = *(void *)(v0 + 264);
  if (v15 == 1)
  {
    uint64_t v17 = *(void *)(v0 + 232);
    sub_10000A520(*(void *)(v0 + 264), &qword_1003EFCD0);
    uint64_t v18 = sub_100255B40;
    uint64_t v19 = v17;
  }
  else
  {
    uint64_t v20 = *(void *)(v0 + 240);
    uint64_t v21 = *(void *)(v0 + 248);
    uint64_t v22 = *(void *)(v0 + 232);
    *(unsigned char *)(v0 + 732) = Device.isThisDevice.getter() & 1;
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v16, v20);
    uint64_t v18 = sub_1002554B0;
    uint64_t v19 = v22;
  }
  return _swift_task_switch(v18, v19, 0);
}

uint64_t sub_1002554B0()
{
  uint64_t v49 = v0;
  if (*(unsigned char *)(v0 + 732))
  {
    uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 552);
    uint64_t v2 = *(void *)(v0 + 392);
    uint64_t v4 = *(void *)(v0 + 368);
    uint64_t v3 = *(void *)(v0 + 376);
    uint64_t v5 = *(void *)(v0 + 336);
    swift_release();
    v1(v3, v2, v5);
    v1(v4, v2, v5);
    swift_bridgeObjectRetain_n();
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      os_log_type_t v45 = v7;
      uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v0 + 592);
      unint64_t v42 = *(void *)(v0 + 584);
      uint64_t v43 = *(void *)(v0 + 576);
      os_log_type_t v41 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
      uint64_t v40 = *(void *)(v0 + 376);
      uint64_t v44 = *(void *)(v0 + 368);
      uint64_t v46 = *(void *)(v0 + 336);
      uint64_t v9 = *(void *)(v0 + 288);
      uint64_t v10 = *(void *)(v0 + 272);
      uint64_t v11 = swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 141559299;
      *(void *)(v0 + 184) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v11 + 12) = 2081;
      Friend.handle.getter();
      uint64_t v12 = Handle.identifier.getter();
      unint64_t v14 = v13;
      v8(v9, v10);
      *(void *)(v0 + 192) = sub_100037004(v12, v14, &v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v41(v40, v46);
      *(_WORD *)(v11 + 22) = 2160;
      *(void *)(v0 + 200) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v11 + 32) = 2081;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 208) = sub_100037004(v43, v42, &v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v11 + 42) = 2160;
      *(void *)(v0 + 216) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v11 + 52) = 2081;
      Friend.handle.getter();
      Handle.siblingIdentifiers.getter();
      v8(v9, v10);
      uint64_t v15 = Array.description.getter();
      unint64_t v17 = v16;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 224) = sub_100037004(v15, v17, &v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v41(v44, v46);
      _os_log_impl((void *)&_mh_execute_header, v6, v45, "dataManagerStateStream: sharing current secure locations key with new follower,\nhandleId: %{private,mask.hash}s\nserverID: %{private,mask.hash}s,\nidsHandles: %{private,mask.hash}s", (uint8_t *)v11, 0x3Eu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
      uint64_t v31 = *(void *)(v0 + 368);
      uint64_t v32 = *(void *)(v0 + 336);
      v30(*(void *)(v0 + 376), v32);
      swift_bridgeObjectRelease_n();
      v30(v31, v32);
    }
    uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v0 + 592);
    uint64_t v34 = *(void *)(v0 + 288);
    uint64_t v35 = *(void *)(v0 + 272);
    uint64_t v47 = *(void **)(*(void *)(v0 + 232) + *(void *)(v0 + 528));
    NSString v36 = String._bridgeToObjectiveC()();
    *(void *)(v0 + 664) = v36;
    swift_bridgeObjectRelease();
    Friend.handle.getter();
    Handle.siblingIdentifiers.getter();
    v33(v34, v35);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    *(void *)(v0 + 672) = isa;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 24) = sub_100255CC0;
    uint64_t v38 = swift_continuation_init();
    *(void *)(v0 + 80) = _NSConcreteStackBlock;
    *(void *)(v0 + 88) = 0x40000000;
    *(void *)(v0 + 96) = sub_100331100;
    *(void *)(v0 + 104) = &unk_1003E3A70;
    *(void *)(v0 + 112) = v38;
    [v47 shareCurrentKeyWithId:v36 idsHandles:isa completion:];
    return _swift_continuation_await(v0 + 16);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Non Me device should not share current key", v20, 2u);
      swift_slowDealloc();
    }
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
    uint64_t v22 = *(void *)(v0 + 440);
    uint64_t v23 = *(void *)(v0 + 392);
    uint64_t v24 = *(void *)(v0 + 336);

    swift_release();
    v21(v23, v24);
    sub_10004E90C(v22);
    *(void *)(v0 + 536) = *(void *)(v0 + 640);
    uint64_t v25 = *(void *)(v0 + 520);
    uint64_t v26 = *(void *)(v0 + 232);
    uint64_t v27 = (void *)swift_task_alloc();
    *(void *)(v0 + 544) = v27;
    void *v27 = v0;
    v27[1] = sub_100253E98;
    uint64_t v28 = *(void *)(v0 + 448);
    uint64_t v29 = *(void *)(v0 + 456);
    return AsyncStream.Iterator.next(isolation:)(v28, v26, v25, v29);
  }
}

uint64_t sub_100255B40()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Non Me device should not share current key", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = (void (*)(uint64_t, uint64_t))v0[71];
  uint64_t v5 = v0[55];
  uint64_t v6 = v0[49];
  uint64_t v7 = v0[42];

  swift_release();
  v4(v6, v7);
  sub_10004E90C(v5);
  v0[67] = v0[80];
  uint64_t v8 = v0[65];
  uint64_t v9 = v0[29];
  uint64_t v10 = (void *)swift_task_alloc();
  v0[68] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_100253E98;
  uint64_t v11 = v0[56];
  uint64_t v12 = v0[57];
  return AsyncStream.Iterator.next(isolation:)(v11, v9, v8, v12);
}

uint64_t sub_100255CC0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 680) = v2;
  uint64_t v3 = *(void *)(v1 + 232);
  if (v2) {
    uint64_t v4 = sub_100256394;
  }
  else {
    uint64_t v4 = sub_100255DE0;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100255DE0()
{
  uint64_t v1 = (void *)v0[84];
  uint64_t v2 = (void *)v0[83];
  uint64_t v3 = v0[55];
  (*(void (**)(void, void))(v0[43] + 8))(v0[49], v0[42]);
  sub_10004E90C(v3);

  v0[67] = v0[80];
  uint64_t v4 = v0[65];
  uint64_t v5 = v0[29];
  uint64_t v6 = (void *)swift_task_alloc();
  v0[68] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_100253E98;
  uint64_t v7 = v0[56];
  uint64_t v8 = v0[57];
  return AsyncStream.Iterator.next(isolation:)(v7, v5, v4, v8);
}

uint64_t sub_100255ED0(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 696) = a1;
  *(void *)(v4 + 704) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 232);
  if (v1) {
    uint64_t v6 = sub_100256604;
  }
  else {
    uint64_t v6 = sub_100256008;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_100256008()
{
  uint64_t v1 = v0[87];
  if (*(void *)(v1 + 16)) {
    sub_100275580(v1);
  }
  uint64_t v2 = (void (*)(uint64_t, uint64_t))v0[71];
  uint64_t v3 = v0[55];
  uint64_t v4 = v0[49];
  uint64_t v5 = v0[42];
  swift_bridgeObjectRelease();
  v2(v4, v5);
  sub_10004E90C(v3);
  v0[67] = v0[88];
  uint64_t v6 = v0[65];
  uint64_t v7 = v0[29];
  uint64_t v8 = (void *)swift_task_alloc();
  v0[68] = v8;
  void *v8 = v0;
  v8[1] = sub_100253E98;
  uint64_t v9 = v0[56];
  uint64_t v10 = v0[57];
  return AsyncStream.Iterator.next(isolation:)(v9, v7, v6, v10);
}

uint64_t sub_100256118()
{
  uint64_t v23 = v0;
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[80];
    uint64_t v20 = (void (*)(uint64_t, uint64_t))v0[71];
    uint64_t v21 = v0[55];
    uint64_t v4 = v0[49];
    uint64_t v5 = v0[42];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446210;
    v0[20] = v3;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v7 = String.init<A>(describing:)();
    *(void *)(v6 + 4) = sub_100037004(v7, v8, &v22);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Share Key: unable to get DataManager: %{public}s", (uint8_t *)v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    v20(v4, v5);
    uint64_t v9 = v21;
  }
  else
  {
    uint64_t v10 = (void (*)(uint64_t, uint64_t))v0[71];
    uint64_t v11 = v0[55];
    uint64_t v12 = v0[49];
    uint64_t v13 = v0[42];

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    v10(v12, v13);
    uint64_t v9 = v11;
  }
  sub_10004E90C(v9);
  v0[67] = 0;
  uint64_t v14 = v0[65];
  uint64_t v15 = v0[29];
  unint64_t v16 = (void *)swift_task_alloc();
  v0[68] = v16;
  *unint64_t v16 = v0;
  v16[1] = sub_100253E98;
  uint64_t v17 = v0[56];
  uint64_t v18 = v0[57];
  return AsyncStream.Iterator.next(isolation:)(v17, v15, v14, v18);
}

uint64_t sub_100256394()
{
  uint64_t v20 = v0;
  uint64_t v1 = (void *)v0[84];
  os_log_type_t v2 = (void *)v0[83];
  uint64_t v3 = v0[49];
  uint64_t v4 = v0[42];
  uint64_t v5 = v0[43];
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);

  uint64_t v6 = v0[85];
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = v0[55];
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446210;
    v0[21] = v6;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v11 = String.init<A>(describing:)();
    v0[22] = sub_100037004(v11, v12, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "dataManagerStateStream event error: %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v9 = v0[55];

    swift_errorRelease();
    swift_errorRelease();
  }
  swift_errorRelease();
  sub_10004E90C(v9);
  v0[67] = 0;
  uint64_t v13 = v0[65];
  uint64_t v14 = v0[29];
  uint64_t v15 = (void *)swift_task_alloc();
  v0[68] = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_100253E98;
  uint64_t v16 = v0[56];
  uint64_t v17 = v0[57];
  return AsyncStream.Iterator.next(isolation:)(v16, v14, v13, v17);
}

uint64_t sub_100256604()
{
  uint64_t v15 = v0;
  (*(void (**)(void, void))(v0 + 568))(*(void *)(v0 + 392), *(void *)(v0 + 336));
  uint64_t v1 = *(void *)(v0 + 704);
  swift_errorRetain();
  swift_errorRetain();
  os_log_type_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = *(void *)(v0 + 440);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    *(void *)(v0 + 168) = v1;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v6 = String.init<A>(describing:)();
    *(void *)(v0 + 176) = sub_100037004(v6, v7, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "dataManagerStateStream event error: %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 440);

    swift_errorRelease();
    swift_errorRelease();
  }
  swift_errorRelease();
  sub_10004E90C(v4);
  *(void *)(v0 + 536) = 0;
  uint64_t v8 = *(void *)(v0 + 520);
  uint64_t v9 = *(void *)(v0 + 232);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 544) = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_100253E98;
  uint64_t v11 = *(void *)(v0 + 448);
  uint64_t v12 = *(void *)(v0 + 456);
  return AsyncStream.Iterator.next(isolation:)(v11, v9, v8, v12);
}

uint64_t sub_100256858(uint64_t a1)
{
  v2[15] = a1;
  v2[16] = v1;
  uint64_t Priority = type metadata accessor for LocatePriority();
  v2[17] = Priority;
  v2[18] = *(void *)(Priority - 8);
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  sub_100044014(&qword_1003ECFB8);
  v2[23] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for UUID();
  v2[24] = v4;
  v2[25] = *(void *)(v4 - 8);
  v2[26] = swift_task_alloc();
  v2[27] = swift_task_alloc();
  return _swift_task_switch(sub_1002569DC, v1, 0);
}

uint64_t sub_1002569DC()
{
  uint64_t v74 = v0;
  uint64_t v1 = *(void *)(LocationRequest.toHandles.getter() + 16);
  swift_bridgeObjectRelease();
  if (!v1)
  {
    if (qword_1003EC408 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_100044058(v7, (uint64_t)qword_10040C290);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "startRefreshing called with empty handles!", v10, 2u);
      swift_slowDealloc();
    }

    sub_100282ACC();
    swift_allocError();
    *uint64_t v11 = 3;
    swift_willThrow();
    goto LABEL_10;
  }
  type metadata accessor for Transaction();
  uint64_t v2 = static Transaction.currentNSXPCConnection.getter();
  uint64_t v3 = v0[24];
  uint64_t v4 = v0[25];
  uint64_t v5 = v0[23];
  if (v2)
  {
    uint64_t v6 = (void *)v2;
    NSXPCConnection.id.getter();

    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v5, 0, 1, v3);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v5, 1, v3) != 1)
    {
      (*(void (**)(void, void, void))(v0[25] + 32))(v0[27], v0[23], v0[24]);
      goto LABEL_15;
    }
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v4 + 56))(v0[23], 1, 1, v0[24]);
  }
  uint64_t v14 = v0[23];
  type metadata accessor for LocationService();
  sub_1000207A4(&qword_1003F3140, 255, (void (*)(uint64_t))type metadata accessor for LocationService);
  CustomStringConvertible<>.addressDescription.getter();
  uint64_t v15 = String.utf8Data.getter();
  unint64_t v17 = v16;
  swift_bridgeObjectRelease();
  v0[11] = v15;
  v0[12] = v17;
  sub_10004F4EC();
  DataProtocol.stableUUID.getter();
  sub_100044090(v15, v17);
  sub_10000A520(v14, &qword_1003ECFB8);
LABEL_15:
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v19 = v0[26];
  uint64_t v18 = v0[27];
  uint64_t v20 = v0[24];
  uint64_t v21 = v0[25];
  uint64_t v22 = type metadata accessor for Logger();
  sub_100044058(v22, (uint64_t)qword_10040C290);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v19, v18, v20);
  swift_retain_n();
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.debug.getter();
  BOOL v25 = os_log_type_enabled(v23, v24);
  uint64_t v27 = v0[25];
  uint64_t v26 = v0[26];
  uint64_t v28 = v0[24];
  if (v25)
  {
    log = v23;
    uint64_t v29 = swift_slowAlloc();
    v73[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 136446466;
    sub_1000207A4(&qword_1003ECF68, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v30 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[13] = sub_100037004(v30, v31, v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    os_log_type_t v32 = v24;
    uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v33(v26, v28);
    *(_WORD *)(v29 + 12) = 2080;
    swift_beginAccess();
    sub_1000207A4(&qword_1003F0048, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
    swift_bridgeObjectRetain();
    uint64_t v34 = Dictionary.description.getter();
    unint64_t v36 = v35;
    swift_bridgeObjectRelease();
    v0[14] = sub_100037004(v34, v36, v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    uint64_t v37 = v33;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v32, "startRefreshing for %{public}s: %s", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v37(v0[26], v0[24]);

    swift_release_n();
  }
  v0[28] = v37;
  uint64_t v38 = v0[22];
  uint64_t v39 = v0[17];
  uint64_t v40 = v0[18];
  LocationRequest.priority.getter();
  int v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 88))(v38, v39);
  if (v41 == enum case for LocatePriority.backgroundAppRefresh(_:)) {
    goto LABEL_25;
  }
  uint64_t v42 = enum case for LocatePriority.shallow(_:);
  if (v41 == enum case for LocatePriority.shallow(_:)) {
    goto LABEL_25;
  }
  if (v41 == enum case for LocatePriority.live(_:))
  {
    os_log_t loga = (os_log_t)v0[27];
    uint64_t v43 = v0[21];
    uint64_t v72 = v0[20];
    uint64_t v45 = v0[17];
    uint64_t v44 = v0[18];
    uint64_t v46 = LocationRequest.toHandles.getter();
    uint64_t v71 = *(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 104);
    v71(v43, v42, v45);
    sub_100267D98((uint64_t)loga, v46, v43);
    swift_bridgeObjectRelease();
    uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
    v0[29] = v47;
    v0[30] = (v44 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v47(v43, v45);
    uint64_t v48 = LocationRequest.toHandles.getter();
    v0[31] = v48;
    v71(v72, v42, v45);
    uint64_t v49 = (void *)swift_task_alloc();
    v0[32] = v49;
    *uint64_t v49 = v0;
    v49[1] = sub_10025736C;
    uint64_t v50 = v0[20];
    uint64_t v51 = v48;
LABEL_26:
    return sub_10026B534(v51, v50, 1);
  }
  if (v41 == enum case for LocatePriority.backgroundProactive(_:))
  {
LABEL_25:
    uint64_t v52 = v0[27];
    uint64_t v53 = v0[21];
    uint64_t v54 = v0[18];
    uint64_t v55 = v0[17];
    uint64_t v56 = LocationRequest.toHandles.getter();
    LocationRequest.priority.getter();
    sub_100267D98(v52, v56, v53);
    swift_bridgeObjectRelease();
    uint64_t v57 = *(void (**)(uint64_t, uint64_t))(v54 + 8);
    v0[38] = v57;
    v0[39] = (v54 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v57(v53, v55);
    uint64_t v58 = LocationRequest.toHandles.getter();
    v0[40] = v58;
    LocationRequest.priority.getter();
    int v59 = (void *)swift_task_alloc();
    v0[41] = v59;
    *int v59 = v0;
    v59[1] = sub_100257800;
    uint64_t v50 = v0[19];
    uint64_t v51 = v58;
    goto LABEL_26;
  }
  uint64_t v60 = Logger.logObject.getter();
  os_log_type_t v61 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v60, v61))
  {
    uint64_t v62 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v62 = 0;
    swift_slowDealloc();
  }
  uint64_t v63 = v0[27];
  uint64_t v64 = v0[24];
  uint64_t v65 = v0[22];
  uint64_t v66 = v0[17];
  uint64_t v67 = v0[18];

  sub_100282ACC();
  swift_allocError();
  *char v68 = 2;
  swift_willThrow();
  v37(v63, v64);
  (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v65, v66);
LABEL_10:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_10025736C(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v4[33] = a1;
  v4[34] = v1;
  swift_task_dealloc();
  uint64_t v5 = (void (*)(uint64_t, uint64_t))v3[29];
  uint64_t v6 = v3[20];
  uint64_t v7 = v3[17];
  uint64_t v8 = v3[16];
  v5(v6, v7);
  swift_bridgeObjectRelease();
  if (v1) {
    os_log_type_t v9 = sub_100257A84;
  }
  else {
    os_log_type_t v9 = sub_100257514;
  }
  return _swift_task_switch(v9, v8, 0);
}

uint64_t sub_100257514()
{
  uint64_t v1 = v0[33];
  if (*(void *)(v1 + 16)) {
    sub_100275580(v1);
  }
  swift_bridgeObjectRelease();
  uint64_t v2 = LocationRequest.toHandles.getter();
  v0[35] = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[36] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1002575D4;
  return sub_10025EAD8(v2);
}

uint64_t sub_1002575D4(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v4[5] = v2;
  v4[6] = a1;
  v4[7] = v1;
  v4[37] = v1;
  swift_task_dealloc();
  uint64_t v5 = v3[16];
  swift_bridgeObjectRelease();
  if (v1) {
    uint64_t v6 = sub_100257B54;
  }
  else {
    uint64_t v6 = sub_100257724;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_100257724()
{
  uint64_t v1 = *(void *)(v0 + 48);
  (*(void (**)(void, void))(v0 + 224))(*(void *)(v0 + 216), *(void *)(v0 + 192));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_100257800(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v4[8] = v2;
  v4[9] = a1;
  v4[10] = v1;
  v4[42] = v1;
  swift_task_dealloc();
  uint64_t v5 = (void (*)(uint64_t, uint64_t))v3[38];
  uint64_t v6 = v3[19];
  uint64_t v7 = v3[17];
  uint64_t v8 = v3[16];
  v5(v6, v7);
  swift_bridgeObjectRelease();
  if (v1) {
    os_log_type_t v9 = sub_100257C24;
  }
  else {
    os_log_type_t v9 = sub_1002579A8;
  }
  return _swift_task_switch(v9, v8, 0);
}

uint64_t sub_1002579A8()
{
  uint64_t v1 = *(void *)(v0 + 72);
  (*(void (**)(void, void))(v0 + 224))(*(void *)(v0 + 216), *(void *)(v0 + 192));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_100257A84()
{
  (*(void (**)(void, void))(v0 + 224))(*(void *)(v0 + 216), *(void *)(v0 + 192));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100257B54()
{
  (*(void (**)(void, void))(v0 + 224))(*(void *)(v0 + 216), *(void *)(v0 + 192));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100257C24()
{
  (*(void (**)(void, void))(v0 + 224))(*(void *)(v0 + 216), *(void *)(v0 + 192));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100257CF4(uint64_t a1)
{
  v2[26] = a1;
  v2[27] = v1;
  v2[28] = *v1;
  uint64_t v3 = type metadata accessor for Handle();
  v2[29] = v3;
  v2[30] = *(void *)(v3 - 8);
  v2[31] = swift_task_alloc();
  v2[32] = swift_task_alloc();
  v2[33] = swift_task_alloc();
  v2[34] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Date();
  v2[35] = v4;
  v2[36] = *(void *)(v4 - 8);
  v2[37] = swift_task_alloc();
  uint64_t Priority = type metadata accessor for LocatePriority();
  v2[38] = Priority;
  v2[39] = *(void *)(Priority - 8);
  v2[40] = swift_task_alloc();
  v2[41] = swift_task_alloc();
  sub_100044014(&qword_1003ECFB8);
  v2[42] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for UUID();
  v2[43] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v2[44] = v7;
  v2[45] = *(void *)(v7 + 64);
  v2[46] = swift_task_alloc();
  v2[47] = swift_task_alloc();
  v2[48] = swift_task_alloc();
  v2[49] = swift_task_alloc();
  v2[50] = swift_task_alloc();
  return _swift_task_switch(sub_100257F94, v1, 0);
}

uint64_t sub_100257F94()
{
  uint64_t v47 = v0;
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[51] = sub_100044058(v1, (uint64_t)qword_10040C290);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    v46[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446723;
    v0[23] = sub_100037004(0xD00000000000001DLL, 0x8000000100378A90, v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v4 + 12) = 2160;
    v0[24] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v4 + 22) = 2081;
    swift_bridgeObjectRetain();
    uint64_t v5 = Array.description.getter();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    v0[25] = sub_100037004(v5, v7, v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%{public}s handles: %{private,mask.hash}s", (uint8_t *)v4, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v8 = *(void *)(v0[26] + 16);
  v0[52] = v8;
  if (v8)
  {
    type metadata accessor for Transaction();
    uint64_t v9 = static Transaction.currentNSXPCConnection.getter();
    uint64_t v10 = v0[43];
    uint64_t v11 = v0[44];
    uint64_t v12 = v0[42];
    if (v9)
    {
      uint64_t v13 = (void *)v9;
      NSXPCConnection.id.getter();

      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v12, 0, 1, v10);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v12, 1, v10) != 1)
      {
        (*(void (**)(void, void, void))(v0[44] + 32))(v0[50], v0[42], v0[43]);
LABEL_17:
        swift_retain_n();
        os_log_type_t v24 = Logger.logObject.getter();
        os_log_type_t v25 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v24, v25))
        {
          uint64_t v26 = swift_slowAlloc();
          v46[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v26 = 136446466;
          v0[20] = sub_100037004(0xD00000000000001DLL, 0x8000000100378A90, v46);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v26 + 12) = 2080;
          swift_beginAccess();
          sub_1000207A4(&qword_1003F0048, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
          swift_bridgeObjectRetain();
          uint64_t v27 = Dictionary.description.getter();
          unint64_t v29 = v28;
          swift_bridgeObjectRelease();
          v0[22] = sub_100037004(v27, v29, v46);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v24, v25, "%{public}s: %s", (uint8_t *)v26, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
        }
        uint64_t v42 = v0[50];
        uint64_t v30 = v0[41];
        uint64_t v32 = v0[38];
        uint64_t v31 = v0[39];
        uint64_t v34 = v0[36];
        uint64_t v33 = v0[37];
        uint64_t v44 = v0[35];
        uint64_t v45 = v0[40];
        uint64_t v35 = v0[26];
        v0[21] = _swiftEmptyDictionarySingleton;
        unsigned int v43 = enum case for LocatePriority.shallow(_:);
        unint64_t v36 = *(void (**)(uint64_t))(v31 + 104);
        v36(v30);
        sub_100267D98(v42, v35, v30);
        uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
        v0[53] = v37;
        v0[54] = (v31 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        v37(v30, v32);
        static Date.trustedNow.getter(v33);
        Date.timeIntervalSince1970.getter();
        v0[55] = v38;
        (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v44);
        ((void (*)(uint64_t, void, uint64_t))v36)(v45, v43, v32);
        uint64_t v39 = (void *)swift_task_alloc();
        v0[56] = v39;
        *uint64_t v39 = v0;
        v39[1] = sub_100258834;
        uint64_t v40 = v0[40];
        uint64_t v41 = v0[26];
        return sub_10026B534(v41, v40, 0);
      }
    }
    else
    {
      (*(void (**)(void, uint64_t, uint64_t, void))(v11 + 56))(v0[42], 1, 1, v0[43]);
    }
    uint64_t v20 = v0[42];
    type metadata accessor for LocationService();
    sub_1000207A4(&qword_1003F3140, 255, (void (*)(uint64_t))type metadata accessor for LocationService);
    CustomStringConvertible<>.addressDescription.getter();
    uint64_t v21 = String.utf8Data.getter();
    unint64_t v23 = v22;
    swift_bridgeObjectRelease();
    v0[11] = v21;
    v0[12] = v23;
    sub_10004F4EC();
    DataProtocol.stableUUID.getter();
    sub_100044090(v21, v23);
    sub_10000A520(v20, &qword_1003ECFB8);
    goto LABEL_17;
  }
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v14, v15))
  {
    unint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "start shallow Refreshing called with empty handles!", v16, 2u);
    swift_slowDealloc();
  }

  sub_100282ACC();
  swift_allocError();
  *unint64_t v17 = 3;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_100258834(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[57] = v1;
  swift_task_dealloc();
  uint64_t v5 = (void (*)(uint64_t, uint64_t))v4[53];
  uint64_t v6 = v4[40];
  uint64_t v7 = v4[38];
  uint64_t v8 = v4[27];
  if (v1)
  {
    v5(v6, v7);
    uint64_t v9 = sub_1002597E4;
  }
  else
  {
    v4[58] = a1;
    v5(v6, v7);
    uint64_t v9 = sub_1002589CC;
  }
  return _swift_task_switch(v9, v8, 0);
}

uint64_t sub_1002589CC()
{
  uint64_t v68 = v0;
  uint64_t v1 = *(void *)(v0 + 440);
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v3 = *(void *)(v0 + 208);
  uint64_t v4 = (void *)swift_task_alloc();
  v4[2] = v3;
  v4[3] = v1;
  v4[4] = v0 + 168;
  v4[5] = v2;
  uint64_t v5 = swift_bridgeObjectRetain();
  sub_100288090(v5, (void (*)(char *, char *))sub_100282D94);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  *(void *)(v0 + 472) = *(void *)(v0 + 464);
  uint64_t v6 = *(void *)(v0 + 240);
  uint64_t v7 = *(void *)(v0 + 208);
  uint64_t v8 = (char *)_swiftEmptyArrayStorage;
  uint64_t v9 = *(void (**)(void, uint64_t, void))(v6 + 16);
  uint64_t v67 = (char *)_swiftEmptyArrayStorage;
  int v10 = *(_DWORD *)(v6 + 80);
  *(_DWORD *)(v0 + 576) = v10;
  uint64_t v11 = *(void *)(v6 + 72);
  unint64_t v60 = (v10 + 32) & ~(unint64_t)v10;
  uint64_t v62 = v9;
  uint64_t v12 = v7 + v60;
  *(void *)(v0 + 480) = v11;
  *(void *)(v0 + 488) = v9;
  os_log_type_t type = (void (**)(void, void))(v6 + 8);
  uint64_t v13 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
  swift_bridgeObjectRetain();
  uint64_t v14 = 0;
  do
  {
    v62(*(void *)(v0 + 272), v12, *(void *)(v0 + 232));
    if (*(void *)(*(void *)(v0 + 168) + 16)
      && (uint64_t v15 = *(void *)(v0 + 272),
          swift_bridgeObjectRetain(),
          sub_100025614(v15),
          LOBYTE(v15) = v16,
          swift_bridgeObjectRelease(),
          (v15 & 1) != 0))
    {
      (*type)(*(void *)(v0 + 272), *(void *)(v0 + 232));
    }
    else
    {
      unint64_t v17 = *v13;
      (*v13)(*(char **)(v0 + 264), *(void *)(v0 + 272), *(void *)(v0 + 232));
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100020D44(0, *((void *)v8 + 2) + 1, 1);
        uint64_t v8 = v67;
      }
      unint64_t v19 = *((void *)v8 + 2);
      unint64_t v18 = *((void *)v8 + 3);
      if (v19 >= v18 >> 1)
      {
        sub_100020D44(v18 > 1, v19 + 1, 1);
        uint64_t v8 = v67;
      }
      uint64_t v20 = *(void *)(v0 + 264);
      uint64_t v21 = *(void *)(v0 + 232);
      *((void *)v8 + 2) = v19 + 1;
      v17(&v8[v60 + v19 * v11], v20, v21);
      uint64_t v67 = v8;
    }
    ++v14;
    v12 += v11;
  }
  while (v14 != *(void *)(v0 + 416));
  swift_bridgeObjectRelease();
  *(void *)(v0 + 496) = v8;
  if (*((void *)v8 + 2))
  {
    uint64_t v22 = *(void *)(v0 + 384);
    uint64_t v23 = *(void *)(v0 + 392);
    uint64_t v24 = *(void *)(v0 + 344);
    uint64_t v25 = *(void *)(v0 + 352);
    uint64_t v63 = *(void *)(v0 + 376);
    uint64_t v65 = *(void *)(v0 + 216);
    uint64_t v58 = v23;
    UUID.init()();
    unint64_t v26 = sub_10004B2F8((uint64_t)_swiftEmptyArrayStorage);
    *(void *)(v0 + 504) = v26;
    uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16);
    *(void *)(v0 + 512) = v27;
    *(void *)(v0 + 520) = (v25 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v27(v22, v23, v24);
    uint64_t v28 = OBJC_IVAR____TtC13findmylocated15LocationService_inFlightLatestLocationTasks;
    *(void *)(v0 + 528) = OBJC_IVAR____TtC13findmylocated15LocationService_inFlightLatestLocationTasks;
    unint64_t v29 = (char **)(v65 + v28);
    swift_beginAccess();
    swift_retain();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v66 = v26;
    uint64_t v67 = *v29;
    *unint64_t v29 = (char *)0x8000000000000000;
    sub_100143838((uint64_t)v8, 0, v26, v22, isUniquelyReferenced_nonNull_native);
    *unint64_t v29 = v67;
    swift_bridgeObjectRelease();
    uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    *(void *)(v0 + 536) = v31;
    *(void *)(v0 + 544) = (v25 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v31(v22, v24);
    swift_endAccess();
    uint64_t v32 = v63;
    uint64_t v64 = v27;
    v27(v32, v58, v24);
    uint64_t v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.default.getter();
    BOOL v35 = os_log_type_enabled(v33, v34);
    uint64_t v36 = *(void *)(v0 + 376);
    uint64_t v37 = *(void *)(v0 + 344);
    if (v35)
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      uint64_t v67 = (char *)swift_slowAlloc();
      *(_DWORD *)uint64_t v38 = 136446210;
      sub_1000207A4(&qword_1003ECF68, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v39 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 128) = sub_100037004(v39, v40, (uint64_t *)&v67);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v31(v36, v37);
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Start latestLocation Task:%{public}s", v38, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      v31(*(void *)(v0 + 376), *(void *)(v0 + 344));
    }

    uint64_t v49 = *(void *)(v0 + 384);
    uint64_t v51 = *(void *)(v0 + 352);
    uint64_t v50 = *(void *)(v0 + 360);
    uint64_t v52 = *(void *)(v0 + 344);
    uint64_t v53 = *(void *)(v0 + 216);
    uint64_t v61 = *(void *)(v0 + 224);
    v64(v49, *(void *)(v0 + 392), v52);
    unint64_t v54 = (*(unsigned __int8 *)(v51 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
    unint64_t v55 = (v50 + v54 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v56 = (char *)swift_allocObject();
    *(void *)(v0 + 552) = v56;
    *((void *)v56 + 2) = v53;
    *((void *)v56 + 3) = v8;
    *((void *)v56 + 4) = 0;
    *((void *)v56 + 5) = v66;
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 32))(&v56[v54], v49, v52);
    *(void *)&v56[v55] = v61;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v57 = (void *)swift_task_alloc();
    *(void *)(v0 + 560) = v57;
    *uint64_t v57 = v0;
    v57[1] = sub_1002591D4;
    return withTimeout<A>(_:block:)();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v41 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v41, v42))
    {
      unsigned int v43 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)unsigned int v43 = 134217984;
      *(void *)(v0 + 136) = 0x404E000000000000;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "All server cached locations are under %fs. Stop shallowRefresh and return", v43, 0xCu);
      swift_slowDealloc();
    }
    uint64_t v44 = *(void *)(v0 + 352);
    uint64_t v45 = *(void *)(v0 + 208);

    sub_100270AB0(v45);
    (*(void (**)(void, void))(v44 + 8))(*(void *)(v0 + 400), *(void *)(v0 + 344));
    uint64_t v46 = *(void *)(v0 + 168);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v47 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v47(v46);
  }
}

uint64_t sub_1002591D4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 568) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 216);
    uint64_t v4 = sub_10025A0EC;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 216);
    swift_release();
    uint64_t v4 = sub_1002592FC;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1002592FC()
{
  uint64_t v36 = v0;
  uint64_t v1 = (uint64_t *)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 568);
  uint64_t v3 = *(void *)(v0 + 392);
  uint64_t v4 = *(void *)(*(void *)(v0 + 216) + *(void *)(v0 + 528));
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_10024983C(v3, v4);
  unint64_t v7 = v6;
  swift_bridgeObjectRelease();
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_100282D48(v5);
  }
  else
  {
    unint64_t v7 = sub_10004B2F8((uint64_t)_swiftEmptyArrayStorage);
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v35[0] = *v1;
  *uint64_t v1 = 0x8000000000000000;
  sub_10027B4EC(v7, (uint64_t)sub_100291B8C, 0, isUniquelyReferenced_nonNull_native, v35);
  *uint64_t v1 = v35[0];
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2)
  {
    uint64_t v10 = *(void *)(v0 + 392);
    swift_beginAccess();
    uint64_t v11 = sub_100123424(v10);
    swift_endAccess();
    sub_100282D48(v11);
    uint64_t v12 = (char *)_swiftEmptyArrayStorage;
    v35[0] = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    uint64_t v13 = 0;
    do
    {
      (*(void (**)(void, unint64_t, void))(v0 + 488))(*(void *)(v0 + 256), *(void *)(v0 + 208)+ ((*(unsigned __int8 *)(v0 + 576) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 576))+ *(void *)(v0 + 480) * v13, *(void *)(v0 + 232));
      if (*(void *)(*(void *)(v0 + 168) + 16)
        && (uint64_t v14 = *(void *)(v0 + 256),
            swift_bridgeObjectRetain(),
            sub_100025614(v14),
            LOBYTE(v14) = v15,
            swift_bridgeObjectRelease(),
            (v14 & 1) != 0))
      {
        (*(void (**)(void, void))(*(void *)(v0 + 240) + 8))(*(void *)(v0 + 256), *(void *)(v0 + 232));
      }
      else
      {
        char v16 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v0 + 240) + 32);
        v16(*(char **)(v0 + 248), *(void *)(v0 + 256), *(void *)(v0 + 232));
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100020D44(0, *((void *)v12 + 2) + 1, 1);
          uint64_t v12 = (char *)v35[0];
        }
        unint64_t v18 = *((void *)v12 + 2);
        unint64_t v17 = *((void *)v12 + 3);
        if (v18 >= v17 >> 1)
        {
          sub_100020D44(v17 > 1, v18 + 1, 1);
          uint64_t v12 = (char *)v35[0];
        }
        uint64_t v19 = *(void *)(v0 + 480);
        uint64_t v20 = *(unsigned __int8 *)(v0 + 576);
        uint64_t v21 = *(void *)(v0 + 248);
        uint64_t v22 = *(void *)(v0 + 232);
        *((void *)v12 + 2) = v18 + 1;
        v16(&v12[((v20 + 32) & ~v20) + v19 * v18], v21, v22);
        v35[0] = (uint64_t)v12;
      }
      ++v13;
    }
    while (v13 != *(void *)(v0 + 416));
    swift_bridgeObjectRelease();
    if (*((void *)v12 + 2))
    {
      uint64_t v23 = *(void *)(v0 + 472);
      swift_retain();
      uint64_t v24 = sub_100281E38(v23, (uint64_t)v12);
      swift_bridgeObjectRelease();
      swift_release_n();
      char v25 = swift_isUniquelyReferenced_nonNull_native();
      v35[0] = *(void *)(v0 + 168);
      *(void *)(v0 + 168) = 0x8000000000000000;
      sub_10027B4EC(v24, (uint64_t)sub_100291B8C, 0, v25, v35);
      *(void *)(v0 + 168) = v35[0];
      swift_bridgeObjectRelease();
      unint64_t v26 = *(void (**)(uint64_t, uint64_t))(v0 + 536);
      uint64_t v27 = *(void *)(v0 + 392);
      uint64_t v28 = *(void *)(v0 + 344);
      sub_100270AB0(*(void *)(v0 + 208));
      swift_bridgeObjectRelease();
      swift_release();
      v26(v27, v28);
    }
    else
    {
      unint64_t v29 = *(void (**)(uint64_t, uint64_t))(v0 + 536);
      uint64_t v30 = *(void *)(v0 + 392);
      uint64_t v31 = *(void *)(v0 + 344);
      uint64_t v32 = *(void *)(v0 + 208);
      swift_release();
      swift_bridgeObjectRelease();
      sub_100270AB0(v32);
      swift_bridgeObjectRelease();
      swift_release();
      v29(v30, v31);
    }
    (*(void (**)(void, void))(v0 + 536))(*(void *)(v0 + 400), *(void *)(v0 + 344));
    uint64_t v34 = *(void *)(v0 + 168);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v33 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v33(v34);
  }
  return result;
}

uint64_t sub_1002597E4()
{
  uint64_t v68 = v0;
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void *)(v0 + 456);
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (char *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    uint64_t v67 = v5;
    *(void *)(v0 + 144) = v3;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v6 = String.init<A>(describing:)();
    *(void *)(v0 + 152) = sub_100037004(v6, v7, (uint64_t *)&v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Fetch cached server location failed with error: %{public}s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  *(void *)(v0 + 472) = _swiftEmptyDictionarySingleton;
  uint64_t v8 = *(void *)(v0 + 240);
  uint64_t v9 = *(void *)(v0 + 208);
  uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  uint64_t v11 = *(void (**)(void, uint64_t, void))(v8 + 16);
  uint64_t v67 = (char *)_swiftEmptyArrayStorage;
  int v12 = *(_DWORD *)(v8 + 80);
  *(_DWORD *)(v0 + 576) = v12;
  uint64_t v13 = *(void *)(v8 + 72);
  unint64_t v62 = (v12 + 32) & ~(unint64_t)v12;
  uint64_t v64 = v11;
  uint64_t v14 = v9 + v62;
  *(void *)(v0 + 480) = v13;
  *(void *)(v0 + 488) = v11;
  uint64_t v61 = (void (**)(void, void))(v8 + 8);
  char v15 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
  swift_bridgeObjectRetain();
  uint64_t v16 = 0;
  do
  {
    v64(*(void *)(v0 + 272), v14, *(void *)(v0 + 232));
    if (*(void *)(*(void *)(v0 + 168) + 16)
      && (uint64_t v17 = *(void *)(v0 + 272),
          swift_bridgeObjectRetain(),
          sub_100025614(v17),
          LOBYTE(v17) = v18,
          swift_bridgeObjectRelease(),
          (v17 & 1) != 0))
    {
      (*v61)(*(void *)(v0 + 272), *(void *)(v0 + 232));
    }
    else
    {
      uint64_t v19 = *v15;
      (*v15)(*(char **)(v0 + 264), *(void *)(v0 + 272), *(void *)(v0 + 232));
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100020D44(0, *((void *)v10 + 2) + 1, 1);
        uint64_t v10 = v67;
      }
      unint64_t v21 = *((void *)v10 + 2);
      unint64_t v20 = *((void *)v10 + 3);
      if (v21 >= v20 >> 1)
      {
        sub_100020D44(v20 > 1, v21 + 1, 1);
        uint64_t v10 = v67;
      }
      uint64_t v22 = *(void *)(v0 + 264);
      uint64_t v23 = *(void *)(v0 + 232);
      *((void *)v10 + 2) = v21 + 1;
      v19(&v10[v62 + v21 * v13], v22, v23);
      uint64_t v67 = v10;
    }
    ++v16;
    v14 += v13;
  }
  while (v16 != *(void *)(v0 + 416));
  swift_bridgeObjectRelease();
  *(void *)(v0 + 496) = v10;
  if (*((void *)v10 + 2))
  {
    uint64_t v25 = *(void *)(v0 + 384);
    uint64_t v24 = *(void *)(v0 + 392);
    uint64_t v65 = *(void *)(v0 + 376);
    uint64_t v27 = *(void *)(v0 + 344);
    uint64_t v26 = *(void *)(v0 + 352);
    uint64_t v59 = v24;
    uint64_t v28 = *(void *)(v0 + 216);
    UUID.init()();
    unint64_t v29 = sub_10004B2F8((uint64_t)_swiftEmptyArrayStorage);
    *(void *)(v0 + 504) = v29;
    unint64_t v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16);
    *(void *)(v0 + 512) = v60;
    *(void *)(v0 + 520) = (v26 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v60(v25, v24, v27);
    uint64_t v30 = OBJC_IVAR____TtC13findmylocated15LocationService_inFlightLatestLocationTasks;
    *(void *)(v0 + 528) = OBJC_IVAR____TtC13findmylocated15LocationService_inFlightLatestLocationTasks;
    uint64_t v31 = (char **)(v28 + v30);
    swift_beginAccess();
    swift_retain();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v66 = v29;
    uint64_t v67 = *v31;
    *uint64_t v31 = (char *)0x8000000000000000;
    sub_100143838((uint64_t)v10, 0, v29, v25, isUniquelyReferenced_nonNull_native);
    *uint64_t v31 = v67;
    swift_bridgeObjectRelease();
    uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    *(void *)(v0 + 536) = v33;
    *(void *)(v0 + 544) = (v26 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v33(v25, v27);
    swift_endAccess();
    v60(v65, v59, v27);
    uint64_t v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.default.getter();
    BOOL v36 = os_log_type_enabled(v34, v35);
    uint64_t v37 = *(void *)(v0 + 376);
    uint64_t v38 = *(void *)(v0 + 344);
    if (v36)
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      uint64_t v67 = (char *)swift_slowAlloc();
      *(_DWORD *)uint64_t v39 = 136446210;
      sub_1000207A4(&qword_1003ECF68, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v40 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 128) = sub_100037004(v40, v41, (uint64_t *)&v67);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v33(v37, v38);
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Start latestLocation Task:%{public}s", v39, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      v33(*(void *)(v0 + 376), *(void *)(v0 + 344));
    }

    uint64_t v50 = *(void *)(v0 + 384);
    uint64_t v52 = *(void *)(v0 + 352);
    uint64_t v51 = *(void *)(v0 + 360);
    uint64_t v53 = *(void *)(v0 + 344);
    uint64_t v54 = *(void *)(v0 + 216);
    uint64_t v63 = *(void *)(v0 + 224);
    v60(v50, *(void *)(v0 + 392), v53);
    unint64_t v55 = (*(unsigned __int8 *)(v52 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
    unint64_t v56 = (v51 + v55 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v57 = (char *)swift_allocObject();
    *(void *)(v0 + 552) = v57;
    *((void *)v57 + 2) = v54;
    *((void *)v57 + 3) = v10;
    *((void *)v57 + 4) = 0;
    *((void *)v57 + 5) = v66;
    (*(void (**)(char *, uint64_t, uint64_t))(v52 + 32))(&v57[v55], v50, v53);
    *(void *)&v57[v56] = v63;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v58 = (void *)swift_task_alloc();
    *(void *)(v0 + 560) = v58;
    void *v58 = v0;
    v58[1] = sub_1002591D4;
    return withTimeout<A>(_:block:)();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    os_log_type_t v42 = Logger.logObject.getter();
    os_log_type_t v43 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v44 = 134217984;
      *(void *)(v0 + 136) = 0x404E000000000000;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "All server cached locations are under %fs. Stop shallowRefresh and return", v44, 0xCu);
      swift_slowDealloc();
    }
    uint64_t v45 = *(void *)(v0 + 352);
    uint64_t v46 = *(void *)(v0 + 208);

    sub_100270AB0(v46);
    (*(void (**)(void, void))(v45 + 8))(*(void *)(v0 + 400), *(void *)(v0 + 344));
    uint64_t v47 = *(void *)(v0 + 168);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v48 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v48(v47);
  }
}

uint64_t sub_10025A0EC()
{
  uint64_t v53 = v0;
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 512);
  uint64_t v2 = *(void *)(v0 + 392);
  uint64_t v3 = *(void *)(v0 + 368);
  uint64_t v4 = *(void *)(v0 + 344);
  swift_release();
  v1(v3, v2, v4);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = *(void *)(v0 + 568);
    uint64_t v50 = *(void (**)(uint64_t, uint64_t))(v0 + 536);
    uint64_t v8 = *(void *)(v0 + 368);
    uint64_t v9 = *(void *)(v0 + 344);
    uint64_t v10 = swift_slowAlloc();
    v52[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446466;
    sub_1000207A4(&qword_1003ECF68, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 104) = sub_100037004(v11, v12, v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v50(v8, v9);
    *(_WORD *)(v10 + 12) = 2082;
    *(void *)(v0 + 112) = v7;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v13 = String.init<A>(describing:)();
    *(void *)(v0 + 120) = sub_100037004(v13, v14, v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "LatestLocation Task:%{public}s failed with error: %{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    char v15 = *(void (**)(uint64_t, uint64_t))(v0 + 536);
    uint64_t v16 = *(void *)(v0 + 368);
    uint64_t v17 = *(void *)(v0 + 344);
    swift_errorRelease();
    v15(v16, v17);
    swift_errorRelease();
    swift_errorRelease();
  }
  char v18 = (uint64_t *)(v0 + 168);
  uint64_t v19 = *(void *)(v0 + 392);
  uint64_t v20 = *(void *)(*(void *)(v0 + 216) + *(void *)(v0 + 528));
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_10024983C(v19, v20);
  unint64_t v23 = v22;
  swift_bridgeObjectRelease();
  if (v21)
  {
    swift_bridgeObjectRetain();
    sub_100282D48(v21);
  }
  else
  {
    unint64_t v23 = sub_10004B2F8((uint64_t)_swiftEmptyArrayStorage);
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v52[0] = *v18;
  *char v18 = 0x8000000000000000;
  sub_10027B4EC(v23, (uint64_t)sub_100291B8C, 0, isUniquelyReferenced_nonNull_native, v52);
  *char v18 = v52[0];
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void *)(v0 + 392);
  swift_beginAccess();
  uint64_t v26 = sub_100123424(v25);
  swift_endAccess();
  sub_100282D48(v26);
  uint64_t v27 = (char *)_swiftEmptyArrayStorage;
  v52[0] = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  uint64_t v28 = 0;
  do
  {
    (*(void (**)(void, unint64_t, void))(v0 + 488))(*(void *)(v0 + 256), *(void *)(v0 + 208)+ ((*(unsigned __int8 *)(v0 + 576) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 576))+ *(void *)(v0 + 480) * v28, *(void *)(v0 + 232));
    if (*(void *)(*(void *)(v0 + 168) + 16)
      && (uint64_t v29 = *(void *)(v0 + 256),
          swift_bridgeObjectRetain(),
          sub_100025614(v29),
          LOBYTE(v29) = v30,
          swift_bridgeObjectRelease(),
          (v29 & 1) != 0))
    {
      (*(void (**)(void, void))(*(void *)(v0 + 240) + 8))(*(void *)(v0 + 256), *(void *)(v0 + 232));
    }
    else
    {
      uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v0 + 240) + 32);
      v31(*(char **)(v0 + 248), *(void *)(v0 + 256), *(void *)(v0 + 232));
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100020D44(0, *((void *)v27 + 2) + 1, 1);
        uint64_t v27 = (char *)v52[0];
      }
      unint64_t v33 = *((void *)v27 + 2);
      unint64_t v32 = *((void *)v27 + 3);
      if (v33 >= v32 >> 1)
      {
        sub_100020D44(v32 > 1, v33 + 1, 1);
        uint64_t v27 = (char *)v52[0];
      }
      uint64_t v34 = *(void *)(v0 + 480);
      uint64_t v35 = *(unsigned __int8 *)(v0 + 576);
      uint64_t v36 = *(void *)(v0 + 248);
      uint64_t v37 = *(void *)(v0 + 232);
      *((void *)v27 + 2) = v33 + 1;
      v31(&v27[((v35 + 32) & ~v35) + v34 * v33], v36, v37);
      v52[0] = (uint64_t)v27;
    }
    ++v28;
  }
  while (v28 != *(void *)(v0 + 416));
  swift_bridgeObjectRelease();
  if (*((void *)v27 + 2))
  {
    uint64_t v38 = *(void *)(v0 + 472);
    swift_retain();
    uint64_t v39 = sub_100281E38(v38, (uint64_t)v27);
    swift_bridgeObjectRelease();
    swift_release_n();
    char v40 = swift_isUniquelyReferenced_nonNull_native();
    v52[0] = *(void *)(v0 + 168);
    *(void *)(v0 + 168) = 0x8000000000000000;
    sub_10027B4EC(v39, (uint64_t)sub_100291B8C, 0, v40, v52);
    *(void *)(v0 + 168) = v52[0];
    swift_bridgeObjectRelease();
    unint64_t v41 = *(void (**)(uint64_t, uint64_t))(v0 + 536);
    uint64_t v42 = *(void *)(v0 + 392);
    uint64_t v43 = *(void *)(v0 + 344);
    sub_100270AB0(*(void *)(v0 + 208));
    swift_bridgeObjectRelease();
    swift_release();
    v41(v42, v43);
  }
  else
  {
    uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v0 + 536);
    uint64_t v45 = *(void *)(v0 + 392);
    uint64_t v46 = *(void *)(v0 + 344);
    uint64_t v47 = *(void *)(v0 + 208);
    swift_release();
    swift_bridgeObjectRelease();
    sub_100270AB0(v47);
    swift_bridgeObjectRelease();
    swift_release();
    v44(v45, v46);
  }
  (*(void (**)(void, void))(v0 + 536))(*(void *)(v0 + 400), *(void *)(v0 + 344));
  uint64_t v51 = *(void *)(v0 + 168);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v48 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v48(v51);
}

uint64_t sub_10025A824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v10 = sub_100044014(&qword_1003EFE98);
  __chkstk_darwin(v10 - 8);
  unint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Handle();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t result = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v37 - v17;
  uint64_t v20 = *(void *)(a3 + 16);
  if (v20)
  {
    uint64_t v43 = a4;
    uint64_t v44 = v18;
    uint64_t v45 = v12;
    uint64_t v42 = a2;
    unint64_t v39 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    uint64_t v21 = a3 + v39;
    uint64_t v46 = *(void (**)(char *, unint64_t, uint64_t))(v14 + 16);
    v46((char *)&v37 - v17, a3 + v39, v13);
    uint64_t v22 = sub_1000207A4(&qword_1003ECDA8, 255, (void (*)(uint64_t))&type metadata accessor for Handle);
    swift_bridgeObjectRetain();
    uint64_t v47 = v22;
    uint64_t v48 = a1;
    char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v14 + 8);
    v24(v19, v13);
    if (v23)
    {
      swift_bridgeObjectRelease();
      uint64_t v25 = v42;
      uint64_t v26 = (void (*)(uint64_t, uint64_t, uint64_t))v46;
      goto LABEL_7;
    }
    uint64_t v38 = a3;
    if (v20 == 1) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v41 = *(void *)(v14 + 72);
    uint64_t v26 = (void (*)(uint64_t, uint64_t, uint64_t))v46;
    v46(v19, v21 + v41, v13);
    char v27 = dispatch thunk of static Equatable.== infix(_:_:)();
    v24(v19, v13);
    if (v27)
    {
LABEL_6:
      swift_bridgeObjectRelease();
      uint64_t v25 = v42;
LABEL_7:
      uint64_t result = Location.timestamp.getter();
      uint64_t v30 = v44;
      uint64_t v29 = (uint64_t)v45;
      if (a5 - v28 < 60.0)
      {
        v26(v44, v48, v13);
        uint64_t v31 = type metadata accessor for Location();
        uint64_t v32 = *(void *)(v31 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v29, v25, v31);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
        return sub_10012BDCC(v29, v30);
      }
      return result;
    }
    if (v20 == 2) {
      return swift_bridgeObjectRelease();
    }
    char v40 = v24;
    uint64_t v33 = v38 + v39 + 2 * v41;
    for (uint64_t i = 2; ; ++i)
    {
      uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v26)(v19, v33, v13);
      uint64_t v35 = i + 1;
      if (__OFADD__(i, 1)) {
        break;
      }
      char v36 = dispatch thunk of static Equatable.== infix(_:_:)();
      v40(v19, v13);
      if (v36) {
        goto LABEL_6;
      }
      v33 += v41;
      if (v35 == v20) {
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10025AC0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[3] = a2;
  uint64_t v8 = type metadata accessor for UUID();
  v6[8] = v8;
  v6[9] = *(void *)(v8 - 8);
  v6[10] = swift_task_alloc();
  return _swift_task_switch(sub_10025ACD8, a2, 0);
}

uint64_t sub_10025ACD8()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 88) = v2;
  long long v3 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(void *)(v2 + 32) = v1;
  *(_OWORD *)(v2 + 40) = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10025ADCC;
  return withOnceCheckedThrowingContinuation<A>(function:_:)(v4, 0xD000000000000020, 0x8000000100378AB0, sub_100282DA4, v2, (char *)&type metadata for () + 8);
}

uint64_t sub_10025ADCC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 24);
    uint64_t v4 = sub_10025B174;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 24);
    swift_task_dealloc();
    uint64_t v4 = sub_10025AEF4;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10025AEF4()
{
  return _swift_task_switch(sub_10025AF10, 0, 0);
}

uint64_t sub_10025AF10()
{
  uint64_t v18 = v0;
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v4 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v5 = type metadata accessor for Logger();
  sub_100044058(v5, (uint64_t)qword_10040C290);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v10 = v0[9];
  uint64_t v9 = v0[10];
  uint64_t v11 = v0[8];
  if (v8)
  {
    unint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)unint64_t v12 = 136446210;
    sub_1000207A4(&qword_1003ECF68, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[2] = sub_100037004(v13, v14, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "LatestLocation task:%{public}s resumed", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v10 + 8))(v0[10], v0[8]);
  }

  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_10025B174()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10025B1E0(uint64_t a1, uint64_t a2)
{
  v3[18] = a2;
  v3[19] = v2;
  v3[17] = a1;
  uint64_t Priority = type metadata accessor for LocatePriority();
  v3[20] = Priority;
  v3[21] = *(void *)(Priority - 8);
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Handle();
  v3[25] = v5;
  v3[26] = *(void *)(v5 - 8);
  v3[27] = swift_task_alloc();
  v3[28] = swift_task_alloc();
  sub_100044014(&qword_1003ECFB8);
  v3[29] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for UUID();
  v3[30] = v6;
  v3[31] = *(void *)(v6 - 8);
  v3[32] = swift_task_alloc();
  v3[33] = swift_task_alloc();
  return _swift_task_switch(sub_10025B3C8, v2, 0);
}

uint64_t sub_10025B3C8()
{
  uint64_t v121 = v0;
  uint64_t v2 = v0 + 17;
  uint64_t v1 = v0[17];
  int64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    uint64_t v4 = v0[26];
    uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    int64_t v8 = v3;
    do
    {
      v7.i64[0] = 0x8002200030003;
      sub_100281FF4(v5, v0[18], "stopRefresh priority: %{public}s for %{private,mask.hash}s", v7);
      v5 += v6;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  type metadata accessor for Transaction();
  uint64_t v9 = static Transaction.currentNSXPCConnection.getter();
  uint64_t v10 = v0[30];
  uint64_t v11 = v0[31];
  uint64_t v12 = v0[29];
  if (v9)
  {
    uint64_t v13 = (void *)v9;
    NSXPCConnection.id.getter();

    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v12, 0, 1, v10);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v12, 1, v10) != 1)
    {
      (*(void (**)(void, void, void))(v0[31] + 32))(v0[33], v0[29], v0[30]);
      goto LABEL_10;
    }
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v11 + 56))(v0[29], 1, 1, v0[30]);
  }
  uint64_t v14 = v0[29];
  type metadata accessor for LocationService();
  sub_1000207A4(&qword_1003F3140, 255, (void (*)(uint64_t))type metadata accessor for LocationService);
  CustomStringConvertible<>.addressDescription.getter();
  uint64_t v15 = String.utf8Data.getter();
  unint64_t v17 = v16;
  swift_bridgeObjectRelease();
  v0[5] = v15;
  v0[6] = v17;
  sub_10004F4EC();
  DataProtocol.stableUUID.getter();
  sub_100044090(v15, v17);
  sub_10000A520(v14, &qword_1003ECFB8);
LABEL_10:
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v19 = v0[32];
  uint64_t v18 = v0[33];
  uint64_t v21 = v0[30];
  uint64_t v20 = v0[31];
  uint64_t v22 = type metadata accessor for Logger();
  v0[34] = sub_100044058(v22, (uint64_t)qword_10040C290);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v19, v18, v21);
  swift_bridgeObjectRetain_n();
  char v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.default.getter();
  BOOL v25 = os_log_type_enabled(v23, v24);
  uint64_t v26 = v0[31];
  uint64_t v27 = v0[32];
  uint64_t v28 = v0[30];
  if (v25)
  {
    os_log_type_t v104 = v24;
    log = v23;
    uint64_t v29 = swift_slowAlloc();
    uint64_t v119 = swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 136446722;
    v0[14] = sub_100037004(0xD00000000000001DLL, 0x8000000100378A70, &v119);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v29 + 12) = 2082;
    sub_1000207A4(&qword_1003ECF68, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v30 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[15] = sub_100037004(v30, v31, &v119);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v110 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v110(v27, v28);
    uint64_t v105 = (uint8_t *)v29;
    *(_WORD *)(v29 + 22) = 2080;
    if (v3)
    {
      uint64_t v32 = v0[26];
      uint64_t v33 = v0[17];
      v120[0] = (uint64_t)_swiftEmptyArrayStorage;
      sub_10003CB84(0, v3, 0);
      uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16);
      v32 += 16;
      uint64_t v35 = v33 + ((*(unsigned __int8 *)(v32 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 64));
      uint64_t v113 = *(void *)(v32 + 56);
      uint64_t v114 = v34;
      char v36 = (void (**)(uint64_t, uint64_t))(v32 - 8);
      do
      {
        uint64_t v37 = v0[28];
        uint64_t v38 = v0[25];
        v114(v37, v35, v38);
        uint64_t v39 = Handle.identifier.getter();
        uint64_t v41 = v40;
        (*v36)(v37, v38);
        uint64_t v42 = v120[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10003CB84(0, *(void *)(v42 + 16) + 1, 1);
          uint64_t v42 = v120[0];
        }
        unint64_t v44 = *(void *)(v42 + 16);
        unint64_t v43 = *(void *)(v42 + 24);
        if (v44 >= v43 >> 1)
        {
          sub_10003CB84(v43 > 1, v44 + 1, 1);
          uint64_t v42 = v120[0];
        }
        *(void *)(v42 + 16) = v44 + 1;
        uint64_t v45 = v42 + 16 * v44;
        *(void *)(v45 + 32) = v39;
        *(void *)(v45 + 40) = v41;
        v35 += v113;
        --v3;
      }
      while (v3);
    }
    uint64_t v2 = v0 + 17;
    uint64_t v47 = Array.description.getter();
    unint64_t v49 = v48;
    swift_bridgeObjectRelease();
    v0[16] = sub_100037004(v47, v49, &v119);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v104, "%{public}s for client %{public}s %s", v105, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v46 = v110;
  }
  else
  {
    uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v46(v0[32], v0[30]);

    swift_bridgeObjectRelease_n();
  }
  v0[35] = v46;
  uint64_t v50 = sub_100266F68(v0[33], (void (**)(char *, char *, uint64_t))v0[17], v0[18]);
  v0[36] = v50;
  uint64_t v52 = v50[2];
  if (v52)
  {
    uint64_t v53 = v0[26];
    unint64_t v115 = (*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
    uint64_t v54 = (uint64_t)v50 + v115;
    uint64_t v55 = *(void *)(v53 + 72);
    do
    {
      v51.i64[0] = 0x8002000030003;
      sub_100281FF4(v54, v0[18], "Unsubscribe %s for handle: %{private,mask.hash}s", v51);
      v54 += v55;
      uint64_t v52 = (void (*)(char *, char *, uint64_t))((char *)v52 - 1);
    }
    while (v52);
    uint64_t v56 = v0[24];
    uint64_t v57 = v0[20];
    uint64_t v58 = v0[21];
    uint64_t v109 = *(void (**)(void))(v58 + 104);
    ((void (*)(uint64_t, void, uint64_t))v109)(v56, enum case for LocatePriority.live(_:), v57);
    sub_1000207A4(&qword_1003ED040, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    uint64_t v59 = v0[9];
    uint64_t v60 = v0[7];
    uint64_t v61 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
    v0[37] = v61;
    v0[38] = (v58 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v61(v56, v57);
    if (v59 == v60)
    {
      uint64_t v62 = v0[33];
      uint64_t v63 = v0[24];
      uint64_t v64 = v0[20];
      uint64_t v65 = (void (**)(char *, char *, uint64_t))v0[17];
      unsigned int loga = enum case for LocatePriority.shallow(_:);
      v109(v63);
      unint64_t v66 = sub_100266F68(v62, v65, v63);
      v0[39] = v66;
      v61(v63, v64);
      uint64_t v67 = v66[2];
      if (v67)
      {
        uint64_t v68 = v0[26];
        uint64_t v69 = (char *)v66 + v115;
        BOOL v70 = *(void (**)(void, char *, void))(v68 + 16);
        uint64_t v116 = (void (**)(uint64_t, uint64_t))(v68 + 8);
        uint64_t v106 = v66;
        swift_bridgeObjectRetain();
        uint64_t v118 = v55;
        uint64_t v112 = v0;
        do
        {
          v70(v0[27], v69, v0[25]);
          uint64_t v71 = Logger.logObject.getter();
          os_log_type_t v72 = static os_log_type_t.default.getter();
          BOOL v73 = os_log_type_enabled(v71, v72);
          uint64_t v74 = v0[27];
          uint64_t v75 = v0[25];
          if (v73)
          {
            uint64_t v76 = swift_slowAlloc();
            v120[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v76 = 141558275;
            *(void *)(v76 + 4) = 1752392040;
            *(_WORD *)(v76 + 12) = 2081;
            uint64_t v77 = Handle.identifier.getter();
            *(void *)(v76 + 14) = sub_100037004(v77, v78, v120);
            swift_bridgeObjectRelease();
            (*v116)(v74, v75);
            _os_log_impl((void *)&_mh_execute_header, v71, v72, "Unsubscribe Shallow along with live\nfor handle:%{private,mask.hash}s", (uint8_t *)v76, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            (*v116)(v74, v75);
          }
          v69 += v118;
          uint64_t v67 = (void (*)(char *, char *, uint64_t))((char *)v67 - 1);
          uint64_t v0 = v112;
        }
        while (v67);
        uint64_t v96 = v112[23];
        uint64_t v97 = v112[20];
        swift_bridgeObjectRelease();
        ((void (*)(uint64_t, void, uint64_t))v109)(v96, loga, v97);
        uint64_t v98 = (void *)swift_task_alloc();
        v112[40] = v98;
        *uint64_t v98 = v112;
        v98[1] = sub_10025C0E0;
        uint64_t v99 = v112[23];
        uint64_t v100 = (uint64_t)v106;
        goto LABEL_42;
      }
      swift_bridgeObjectRelease();
    }
    v0[42] = 0;
    int v103 = (void *)swift_task_alloc();
    v0[43] = v103;
    *int v103 = v0;
    v103[1] = sub_10025C284;
    uint64_t v99 = v0[18];
    uint64_t v100 = v0[36];
LABEL_42:
    return sub_1002693A8(v100, v99);
  }
  uint64_t v111 = v46;
  os_log_type_t v79 = v2;
  uint64_t v81 = v0[21];
  uint64_t v80 = v0[22];
  uint64_t v82 = v0[20];
  uint64_t v83 = v0[18];
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 16))(v80, v83, v82);
  uint64_t v84 = Logger.logObject.getter();
  os_log_type_t v85 = static os_log_type_t.default.getter();
  BOOL v86 = os_log_type_enabled(v84, v85);
  uint64_t v87 = v0[33];
  uint64_t v88 = v0[30];
  uint64_t v90 = v0[21];
  uint64_t v89 = v0[22];
  uint64_t v91 = v0[20];
  if (v86)
  {
    uint64_t v117 = v0[33];
    long long v92 = (uint8_t *)swift_slowAlloc();
    v120[0] = swift_slowAlloc();
    *(_DWORD *)long long v92 = 136446210;
    sub_1000207A4(&qword_1003F3330, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
    uint64_t v93 = dispatch thunk of CustomStringConvertible.description.getter();
    *(v79 - 4) = sub_100037004(v93, v94, v120);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v89, v91);
    _os_log_impl((void *)&_mh_execute_header, v84, v85, "stopRefreshing: no handles to unsubscribe %{public}s", v92, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v95 = v117;
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v89, v91);
    uint64_t v95 = v87;
  }
  v111(v95, v88);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v101 = (uint64_t (*)(void))v0[1];
  return v101();
}

uint64_t sub_10025C0E0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 328) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 152);
    (*(void (**)(void, void))(v2 + 296))(*(void *)(v2 + 184), *(void *)(v2 + 160));
    return _swift_task_switch(sub_10025C71C, v3, 0);
  }
  else
  {
    (*(void (**)(void, void))(v2 + 296))(*(void *)(v2 + 184), *(void *)(v2 + 160));
    swift_bridgeObjectRelease();
    *(void *)(v2 + 336) = 0;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v2 + 344) = v4;
    *uint64_t v4 = v2;
    v4[1] = sub_10025C284;
    uint64_t v5 = *(void *)(v2 + 144);
    uint64_t v6 = *(void *)(v2 + 288);
    return sub_1002693A8(v6, v5);
  }
}

uint64_t sub_10025C284()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 352) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 152);
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v4 = sub_10025CA04;
  }
  else {
    uint64_t v4 = sub_10025C3CC;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10025C3CC()
{
  uint64_t v10 = v0;
  swift_retain_n();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 141558275;
    *(void *)(v0 + 64) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v3 + 12) = 2081;
    swift_beginAccess();
    sub_1000207A4(&qword_1003F0048, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
    swift_bridgeObjectRetain();
    uint64_t v4 = Dictionary.description.getter();
    unint64_t v6 = v5;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 80) = sub_100037004(v4, v6, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "After StopRefreshing current subscriptions: %{private,mask.hash}s", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (*(void *)(v0 + 336))
    {
LABEL_3:
      swift_willThrow();
      (*(void (**)(void, void))(v0 + 280))(*(void *)(v0 + 264), *(void *)(v0 + 240));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      int16x8_t v7 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_6;
    }
  }
  else
  {

    swift_release_n();
    if (*(void *)(v0 + 336)) {
      goto LABEL_3;
    }
  }
  (*(void (**)(void, void))(v0 + 280))(*(void *)(v0 + 264), *(void *)(v0 + 240));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int16x8_t v7 = *(uint64_t (**)(void))(v0 + 8);
LABEL_6:
  return v7();
}

uint64_t sub_10025C71C()
{
  unint64_t v17 = v0;
  uint64_t v1 = v0[41];
  swift_errorRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  os_log_type_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    os_log_type_t type = v3;
    uint64_t v4 = swift_slowAlloc();
    uint64_t v14 = (void *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138543618;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[11] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v14 = v5;
    swift_errorRelease();
    swift_errorRelease();
    *(_WORD *)(v4 + 12) = 2080;
    swift_bridgeObjectRetain();
    unint64_t v6 = v2;
    uint64_t v7 = Array.description.getter();
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
    v0[12] = sub_100037004(v7, v9, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, type, "Unsubscribing from .shallow failed with error: %{public}@, for handles: %s", (uint8_t *)v4, 0x16u);
    sub_100044014(&qword_1003ECCC8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();

    swift_bridgeObjectRelease_n();
  }
  v0[42] = v1;
  uint64_t v10 = (void *)swift_task_alloc();
  v0[43] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_10025C284;
  uint64_t v11 = v0[18];
  uint64_t v12 = v0[36];
  return sub_1002693A8(v12, v11);
}

uint64_t sub_10025CA04()
{
  swift_errorRelease();
  (*(void (**)(void, void))(v0 + 280))(*(void *)(v0 + 264), *(void *)(v0 + 240));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10025CAF8(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  v2[6] = *v1;
  return _swift_task_switch(sub_10025CB40, v1, 0);
}

uint64_t sub_10025CB40()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(type metadata accessor for Handle() - 8);
    uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v5 = *(void *)(v3 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1002823D4(v4);
      v4 += v5;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v6;
  *unint64_t v6 = v0;
  v6[1] = sub_10025CC6C;
  return daemon.getter();
}

uint64_t sub_10025CC6C(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v9 = *v1;
  *(void *)(v2 + 64) = a1;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 72) = v3;
  uint64_t v4 = type metadata accessor for Daemon();
  uint64_t v5 = type metadata accessor for DataManager(0);
  uint64_t v6 = sub_1000207A4(&qword_1003ECCA8, 255, (void (*)(uint64_t))&type metadata accessor for Daemon);
  uint64_t v7 = sub_1000207A4(&qword_1003ECCC0, 255, (void (*)(uint64_t))type metadata accessor for DataManager);
  *uint64_t v3 = v9;
  v3[1] = sub_10025CE50;
  return ActorServiceDaemon.getService<A>()(v4, v5, v6, v7);
}

uint64_t sub_10025CE50(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 80) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 40);
    uint64_t v6 = sub_10025D5F8;
  }
  else
  {
    uint64_t v7 = *(void *)(v4 + 40);
    swift_release();
    *(void *)(v4 + 88) = a1;
    uint64_t v6 = sub_10025CF90;
    uint64_t v5 = v7;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_10025CF90()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = sub_1000902A0(v0[4]);
  v0[12] = v2;
  v0[13] = sub_1002466DC((uint64_t)v3);
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_10025D020, v1, 0);
}

uint64_t sub_10025D020()
{
  sub_100044014(&qword_1003ECF40);
  uint64_t v1 = type metadata accessor for HandleType();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = swift_allocObject();
  *(void *)(v0 + 112) = v4;
  *(_OWORD *)(v4 + 16) = xmmword_100367D70;
  (*(void (**)(unint64_t, void, uint64_t))(v2 + 104))(v4 + v3, enum case for HandleType.following(_:), v1);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10025D17C;
  return sub_100021584(v4, 1);
}

uint64_t sub_10025D17C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 40);
  *(void *)(*(void *)v1 + 128) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_10025D2B0, v2, 0);
}

uint64_t sub_10025D2B0()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  unint64_t v3 = sub_10027ED14(v0[16], v0[13]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_10024AA28((uint64_t)v3);
  v0[17] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_100044014(&qword_1003F03F8);
  uint64_t v6 = sub_1000207A4(qword_1003F3148, 255, (void (*)(uint64_t))type metadata accessor for LocationService);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[18] = v7;
  v7[2] = v4;
  v7[3] = v1;
  v7[4] = v2;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[19] = v8;
  void *v8 = v0;
  v8[1] = sub_10025D440;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 3, v5, v5, v1, v6, &unk_1003F33C0, v7, v5);
}

uint64_t sub_10025D440()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return _swift_task_switch(sub_10025D590, v1, 0);
}

uint64_t sub_10025D590()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_10025D5F8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10025D65C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[23] = a4;
  v5[24] = a5;
  v5[21] = a2;
  v5[22] = a3;
  v5[20] = a1;
  uint64_t v7 = sub_100044014(&qword_1003F33C8);
  v5[25] = v7;
  v5[26] = *(void *)(v7 - 8);
  v5[27] = swift_task_alloc();
  sub_100044014((uint64_t *)&unk_1003F3C10);
  v5[28] = swift_task_alloc();
  v5[29] = swift_task_alloc();
  return _swift_task_switch(sub_10025D76C, a4, 0);
}

uint64_t sub_10025D76C()
{
  uint64_t v1 = v0[22];
  v0[15] = _swiftEmptyDictionarySingleton;
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v30 = v0 + 2;
    uint64_t v3 = type metadata accessor for TaskPriority();
    uint64_t v4 = *(void *)(v3 - 8);
    uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
    unint64_t v31 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    uint64_t v29 = (void (**)(uint64_t, uint64_t))(v4 + 8);
    swift_bridgeObjectRetain();
    uint64_t v5 = (void *)(v1 + 40);
    uint64_t v6 = (uint64_t *)&unk_1003F3C10;
    while (1)
    {
      uint64_t v33 = v5;
      uint64_t v34 = v2;
      uint64_t v9 = v0[28];
      uint64_t v8 = v0[29];
      uint64_t v10 = v0[23];
      uint64_t v35 = v0[24];
      uint64_t v11 = v0;
      uint64_t v12 = v6;
      uint64_t v13 = *(v5 - 1);
      uint64_t v14 = *v5;
      v32(v8, 1, 1, v3);
      uint64_t v15 = (void *)swift_allocObject();
      void v15[2] = 0;
      uint64_t v16 = v15 + 2;
      v15[3] = 0;
      v15[4] = v10;
      v15[5] = v13;
      v15[6] = v14;
      uint64_t v6 = v12;
      uint64_t v0 = v11;
      v15[7] = v35;
      sub_100013210(v8, v9, v6);
      LODWORD(v9) = (*v31)(v9, 1, v3);
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v17 = v11[28];
      if (v9 == 1)
      {
        sub_10000A520(v11[28], v6);
        if (!*v16) {
          goto LABEL_8;
        }
      }
      else
      {
        TaskPriority.rawValue.getter();
        (*v29)(v17, v3);
        if (!*v16)
        {
LABEL_8:
          uint64_t v18 = 0;
          uint64_t v20 = 0;
          goto LABEL_9;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v18 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v20 = v19;
      swift_unknownObjectRelease();
LABEL_9:
      uint64_t v21 = *(void *)v11[21];
      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = &unk_1003F33D8;
      *(void *)(v22 + 24) = v15;
      sub_100044014(&qword_1003F03F8);
      char v23 = (void *)(v20 | v18);
      if (v20 | v18)
      {
        char v23 = v30;
        *uint64_t v30 = 0;
        v30[1] = 0;
        v11[4] = v18;
        v11[5] = v20;
      }
      uint64_t v7 = v11[29];
      v11[9] = 1;
      v11[10] = v23;
      v11[11] = v21;
      swift_task_create();
      swift_release();
      sub_10000A520(v7, v6);
      uint64_t v5 = v33 + 2;
      uint64_t v2 = v34 - 1;
      if (v34 == 1)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  sub_100044014(&qword_1003F03F8);
  TaskGroup.makeAsyncIterator()();
  uint64_t v24 = sub_1000207A4(qword_1003F3148, 255, (void (*)(uint64_t))type metadata accessor for LocationService);
  v0[30] = v24;
  v0[31] = 0;
  uint64_t v25 = v0[23];
  uint64_t v26 = (void *)swift_task_alloc();
  v0[32] = v26;
  *uint64_t v26 = v0;
  v26[1] = sub_10025DB2C;
  uint64_t v27 = v0[25];
  return TaskGroup.Iterator.next(isolation:)(v0 + 17, v25, v24, v27);
}

uint64_t sub_10025DB2C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 184);
  swift_task_dealloc();
  return _swift_task_switch(sub_10025DC3C, v1, 0);
}

uint64_t sub_10025DC3C()
{
  uint64_t v20 = v0;
  uint64_t v1 = v0[17];
  if (v1)
  {
    uint64_t v2 = v0[31];
    uint64_t v3 = v0[15];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v0[19] = v3;
    sub_10027B4EC(v1, (uint64_t)sub_100291B8C, 0, isUniquelyReferenced_nonNull_native, v0 + 19);
    if (v2)
    {
      return swift_bridgeObjectRelease();
    }
    else
    {
      v0[15] = v0[19];
      swift_bridgeObjectRelease();
      v0[31] = 0;
      uint64_t v15 = v0[30];
      uint64_t v16 = v0[23];
      uint64_t v17 = (void *)swift_task_alloc();
      v0[32] = v17;
      *uint64_t v17 = v0;
      v17[1] = sub_10025DB2C;
      uint64_t v18 = v0[25];
      return TaskGroup.Iterator.next(isolation:)(v0 + 17, v16, v15, v18);
    }
  }
  else
  {
    (*(void (**)(void, void))(v0[26] + 8))(v0[27], v0[25]);
    if (qword_1003EC408 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_100044058(v6, (uint64_t)qword_10040C290);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      v19[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136446466;
      v0[16] = sub_100037004(0x6E6F697461636F6CLL, 0xEF293A726F662873, v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v9 + 12) = 2080;
      swift_beginAccess();
      type metadata accessor for Handle();
      type metadata accessor for Location();
      sub_1000207A4(&qword_1003ECDA0, 255, (void (*)(uint64_t))&type metadata accessor for Handle);
      swift_bridgeObjectRetain();
      uint64_t v10 = Dictionary.description.getter();
      unint64_t v12 = v11;
      swift_bridgeObjectRelease();
      v0[18] = sub_100037004(v10, v12, v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "One-shot %{public}s result: %s", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v13 = (void *)v0[20];
    swift_beginAccess();
    *uint64_t v13 = v0[15];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = (uint64_t (*)(void))v0[1];
    return v14();
  }
}

uint64_t sub_10025E06C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[14] = a5;
  v6[15] = a6;
  v6[12] = a1;
  v6[13] = a4;
  return _swift_task_switch(sub_10025E090, a4, 0);
}

uint64_t sub_10025E090()
{
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[13];
  uint64_t v4 = sub_1000207A4(qword_1003F3148, 255, (void (*)(uint64_t))type metadata accessor for LocationService);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[16] = v5;
  v5[2] = v3;
  v5[3] = v2;
  v5[4] = v1;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[17] = v6;
  unint64_t v7 = sub_100281044();
  *uint64_t v6 = v0;
  v6[1] = sub_10025E1DC;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 7, v3, v4, 0xD000000000000024, 0x8000000100378A10, sub_1002829A8, v5, v7);
}

uint64_t sub_10025E1DC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 104);
    uint64_t v4 = sub_10025E7C8;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 104);
    swift_task_dealloc();
    uint64_t v4 = sub_10025E304;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10025E304()
{
  *(void *)(v0 + 152) = *(void *)(v0 + 56);
  return _swift_task_switch(sub_10025E328, 0, 0);
}

uint64_t sub_10025E328()
{
  uint64_t v1 = (void *)v0[19];
  sub_100044014(&qword_1003F4B20);
  uint64_t inited = swift_initStackObject();
  v0[20] = inited;
  *(_OWORD *)(inited + 16) = xmmword_10036D5A0;
  *(void *)(inited + 32) = v1;
  uint64_t v7 = inited;
  specialized Array._endMutation()();
  v0[21] = v7;
  id v3 = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[22] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10025E424;
  uint64_t v5 = v0[13];
  v4[2] = v7;
  v4[3] = v5;
  return _swift_task_switch(sub_1002749D4, v5, 0);
}

uint64_t sub_10025E424(uint64_t a1)
{
  *(void *)(*(void *)v1 + 184) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_10025E544, 0, 0);
}

uint64_t sub_10025E544()
{
  uint64_t v12 = v0;
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100044058(v1, (uint64_t)qword_10040C290);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v10 = *(void **)(v0 + 152);
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    type metadata accessor for Handle();
    type metadata accessor for Location();
    sub_1000207A4(&qword_1003ECDA0, 255, (void (*)(uint64_t))&type metadata accessor for Handle);
    swift_bridgeObjectRetain();
    uint64_t v5 = Dictionary.description.getter();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 88) = sub_100037004(v5, v7, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Received cached location: %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  **(void **)(v0 + 96) = *(void *)(v0 + 184);
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_10025E7C8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10025E830, 0, 0);
}

uint64_t sub_10025E830()
{
  uint64_t v15 = v0;
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100044058(v1, (uint64_t)qword_10040C290);
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = *(void *)(v0 + 144);
  unint64_t v6 = *(void *)(v0 + 120);
  if (v4)
  {
    uint64_t v7 = *(void *)(v0 + 112);
    uint64_t v8 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 64) = sub_100037004(v7, v6, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2082;
    *(void *)(v0 + 72) = v5;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v9 = String.init<A>(describing:)();
    *(void *)(v0 + 80) = sub_100037004(v9, v10, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to retrieve cached location for %s. %{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }

  unint64_t v11 = sub_10004B2F8((uint64_t)_swiftEmptyArrayStorage);
  swift_errorRelease();
  **(void **)(v0 + 96) = v11;
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_10025EAD8(uint64_t a1)
{
  v2[35] = a1;
  v2[36] = v1;
  uint64_t Priority = type metadata accessor for LocatePriority();
  v2[37] = Priority;
  v2[38] = *(void *)(Priority - 8);
  v2[39] = swift_task_alloc();
  v2[40] = swift_task_alloc();
  v2[41] = swift_task_alloc();
  v2[42] = swift_task_alloc();
  v2[43] = swift_task_alloc();
  v2[44] = swift_task_alloc();
  sub_100044014(&qword_1003F3B30);
  v2[45] = swift_task_alloc();
  sub_100044014(&qword_1003ECFB8);
  v2[46] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for UUID();
  v2[47] = v4;
  v2[48] = *(void *)(v4 - 8);
  v2[49] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Handle();
  v2[50] = v5;
  v2[51] = *(void *)(v5 - 8);
  v2[52] = swift_task_alloc();
  v2[53] = swift_task_alloc();
  v2[54] = swift_task_alloc();
  v2[55] = swift_task_alloc();
  v2[56] = swift_task_alloc();
  return _swift_task_switch(sub_10025ED24, v1, 0);
}

uint64_t sub_10025ED24()
{
  uint64_t v134 = v0;
  uint64_t v1 = *(void *)(v0 + 280);
  uint64_t v127 = *(void *)(v1 + 16);
  if (!v127)
  {
    if (qword_1003EC408 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_100044058(v12, (uint64_t)qword_10040C290);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "replaceOrKeepExistingLiveSubscription with no handle", v15, 2u);
      swift_slowDealloc();
    }

    unint64_t v131 = sub_10004B2F8((uint64_t)_swiftEmptyArrayStorage);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = *(uint64_t (**)(unint64_t))(v0 + 8);
    return v16(v131);
  }
  unint64_t v2 = *(void *)(v0 + 448);
  uint64_t v3 = *(void *)(v0 + 400);
  uint64_t v4 = *(void *)(v0 + 408);
  uint64_t v5 = *(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 16);
  v4 += 16;
  int v6 = *(_DWORD *)(v4 + 64);
  *(_DWORD *)(v0 + 616) = v6;
  unint64_t v124 = (v6 + 32) & ~(unint64_t)v6;
  *(void *)(v0 + 456) = v5;
  *(void *)(v0 + 464) = v4 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  uint64_t v129 = v5;
  v5(v2, v1 + v124, v3);
  type metadata accessor for Transaction();
  uint64_t v7 = static Transaction.currentNSXPCConnection.getter();
  uint64_t v8 = *(void *)(v0 + 376);
  uint64_t v9 = *(void *)(v0 + 384);
  uint64_t v10 = *(void *)(v0 + 368);
  if (v7)
  {
    unint64_t v11 = (void *)v7;
    NSXPCConnection.id.getter();

    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v10, 0, 1, v8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v10, 1, v8) != 1)
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 384) + 32))(*(void *)(v0 + 392), *(void *)(v0 + 368), *(void *)(v0 + 376));
      goto LABEL_14;
    }
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v10, 1, 1, v8);
  }
  uint64_t v18 = *(void *)(v0 + 368);
  type metadata accessor for LocationService();
  sub_1000207A4(&qword_1003F3140, 255, (void (*)(uint64_t))type metadata accessor for LocationService);
  CustomStringConvertible<>.addressDescription.getter();
  uint64_t v19 = String.utf8Data.getter();
  unint64_t v21 = v20;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 200) = v19;
  *(void *)(v0 + 208) = v21;
  sub_10004F4EC();
  DataProtocol.stableUUID.getter();
  sub_100044090(v19, v21);
  sub_10000A520(v18, &qword_1003ECFB8);
LABEL_14:
  uint64_t v22 = *(void *)(v0 + 352);
  uint64_t v23 = *(void *)(v0 + 304);
  uint64_t v24 = *(void *)(v0 + 288);
  unsigned int v25 = enum case for LocatePriority.live(_:);
  *(_DWORD *)(v0 + 620) = enum case for LocatePriority.live(_:);
  uint64_t v26 = *(void (**)(uint64_t))(v23 + 104);
  *(void *)(v0 + 472) = v26;
  *(void *)(v0 + 480) = (v23 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  unsigned int v125 = v25;
  v26(v22);
  uint64_t v27 = (uint64_t *)(v24 + OBJC_IVAR____TtC13findmylocated15LocationService_subscriptions);
  swift_beginAccess();
  uint64_t v28 = *v27;
  uint64_t v122 = v26;
  if (*(void *)(*v27 + 16))
  {
    uint64_t v29 = *(void *)(v0 + 352);
    swift_bridgeObjectRetain();
    unint64_t v30 = sub_1000244E0(v29);
    if (v31)
    {
      uint64_t v32 = *(void *)(*(void *)(v28 + 56) + 24 * v30);
      swift_retain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v32 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v32 = 0;
  }
  uint64_t v33 = *(void *)(v0 + 352);
  uint64_t v34 = *(void *)(v0 + 296);
  uint64_t v35 = *(void *)(v0 + 304);
  uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
  *(void *)(v0 + 488) = v36;
  *(void *)(v0 + 496) = (v35 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v121 = v36;
  v36(v33, v34);
  uint64_t v38 = *(void *)(v0 + 400);
  uint64_t v37 = *(void *)(v0 + 408);
  uint64_t v39 = *(void *)(v0 + 360);
  if (!v32)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(v39, 1, 1, v38);
LABEL_25:
    sub_10000A520(*(void *)(v0 + 360), &qword_1003F3B30);
    if (qword_1003EC408 == -1)
    {
LABEL_26:
      uint64_t v47 = type metadata accessor for Logger();
      sub_100044058(v47, (uint64_t)qword_10040C290);
      unint64_t v48 = Logger.logObject.getter();
      os_log_type_t v49 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v48, v49))
      {
        uint64_t v50 = swift_slowAlloc();
        v133[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v50 = 141558275;
        *(void *)(v0 + 248) = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v50 + 12) = 2081;
        swift_beginAccess();
        sub_1000207A4(&qword_1003F00F0, 255, (void (*)(uint64_t))&type metadata accessor for Handle);
        uint64_t v51 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v0 + 216) = sub_100037004(v51, v52, v133);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v48, v49, "No current live subscription, new subscription for %{private,mask.hash}s", (uint8_t *)v50, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      uint64_t v53 = *(void *)(v0 + 448);
      uint64_t v54 = *(void *)(v0 + 400);
      uint64_t v119 = *(void *)(v0 + 392);
      uint64_t v55 = *(void *)(v0 + 328);
      uint64_t v128 = *(void *)(v0 + 312);
      uint64_t v56 = *(void *)(v0 + 296);
      sub_100044014(&qword_1003F03F0);
      uint64_t v57 = swift_allocObject();
      *(_OWORD *)(v57 + 16) = xmmword_100367D70;
      swift_beginAccess();
      v129(v57 + v124, v53, v54);
      ((void (*)(uint64_t, void, uint64_t))v122)(v55, v125, v56);
      sub_100267D98(v119, v57, v55);
      swift_bridgeObjectRelease();
      v121(v55, v56);
      uint64_t v58 = swift_allocObject();
      *(void *)(v0 + 584) = v58;
      *(_OWORD *)(v58 + 16) = xmmword_100367D70;
      v129(v58 + v124, v53, v54);
      ((void (*)(uint64_t, void, uint64_t))v122)(v128, v125, v56);
      uint64_t v59 = (void *)swift_task_alloc();
      *(void *)(v0 + 592) = v59;
      *uint64_t v59 = v0;
      v59[1] = sub_100260794;
      uint64_t v60 = *(void *)(v0 + 312);
LABEL_52:
      return sub_10026B534(v58, v60, 1);
    }
LABEL_56:
    swift_once();
    goto LABEL_26;
  }
  uint64_t v40 = swift_bridgeObjectRetain();
  sub_100281718(v40);
  sub_10024AF98(v32, sub_10015DA3C, (uint64_t (*)(void))&type metadata accessor for Handle, (void (*)(void))sub_10027C090, v39);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v39, 1, v38) == 1) {
    goto LABEL_25;
  }
  uint64_t v41 = (void *)(v0 + 264);
  unint64_t v42 = *(void *)(v0 + 432);
  uint64_t v43 = *(void *)(v0 + 400);
  uint64_t v44 = *(void *)(v0 + 408);
  (*(void (**)(void, void, uint64_t))(v44 + 32))(*(void *)(v0 + 440), *(void *)(v0 + 360), v43);
  v129(v42, v1 + v124, v43);
  sub_1000207A4(&qword_1003ECDA8, 255, (void (*)(uint64_t))&type metadata accessor for Handle);
  swift_bridgeObjectRetain();
  char v45 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
  *(void *)(v0 + 504) = v46;
  *(void *)(v0 + 512) = (v44 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v123 = v46;
  v46(v42, v43);
  if (v45)
  {
    swift_bridgeObjectRelease();
LABEL_46:
    if (qword_1003EC408 != -1) {
      swift_once();
    }
    uint64_t v97 = *(void *)(v0 + 440);
    unint64_t v98 = *(void *)(v0 + 424);
    uint64_t v99 = *(void *)(v0 + 400);
    uint64_t v100 = type metadata accessor for Logger();
    sub_100044058(v100, (uint64_t)qword_10040C290);
    v129(v98, v97, v99);
    uint64_t v101 = Logger.logObject.getter();
    os_log_type_t v102 = static os_log_type_t.debug.getter();
    BOOL v103 = os_log_type_enabled(v101, v102);
    uint64_t v104 = *(void *)(v0 + 424);
    uint64_t v105 = *(void *)(v0 + 400);
    if (v103)
    {
      uint64_t v106 = swift_slowAlloc();
      v133[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v106 = 141558275;
      *uint64_t v41 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v106 + 12) = 2081;
      sub_1000207A4(&qword_1003F00F0, 255, (void (*)(uint64_t))&type metadata accessor for Handle);
      uint64_t v107 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 272) = sub_100037004(v107, v108, v133);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v123(v104, v105);
      _os_log_impl((void *)&_mh_execute_header, v101, v102, "Keep subscribing live for handle %{private,mask.hash}s", (uint8_t *)v106, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      v123(*(void *)(v0 + 424), *(void *)(v0 + 400));
    }

    (*(void (**)(void, void, void))(*(void *)(v0 + 408) + 24))(*(void *)(v0 + 448), *(void *)(v0 + 440), *(void *)(v0 + 400));
    uint64_t v126 = *(void (**)(uint64_t, uint64_t))(v0 + 488);
    uint64_t v109 = *(unsigned int *)(v0 + 620);
    uint64_t v132 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 472);
    uint64_t v111 = *(void *)(v0 + 448);
    uint64_t v110 = *(NSObject **)(v0 + 456);
    os_log_t log = v110;
    uint64_t v117 = *(void *)(v0 + 400);
    uint64_t v120 = *(void *)(v0 + 392);
    uint64_t v112 = *(void *)(v0 + 328);
    uint64_t v130 = *(void *)(v0 + 320);
    unint64_t v113 = (*(unsigned __int8 *)(v0 + 616) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 616);
    uint64_t v114 = *(void *)(v0 + 296);
    sub_100044014(&qword_1003F03F0);
    uint64_t v115 = swift_allocObject();
    *(_OWORD *)(v115 + 16) = xmmword_100367D70;
    swift_beginAccess();
    ((void (*)(unint64_t, uint64_t, uint64_t))v110)(v115 + v113, v111, v117);
    v132(v112, v109, v114);
    sub_100267D98(v120, v115, v112);
    swift_bridgeObjectRelease();
    v126(v112, v114);
    uint64_t v58 = swift_allocObject();
    *(void *)(v0 + 552) = v58;
    *(_OWORD *)(v58 + 16) = xmmword_100367D70;
    ((void (*)(unint64_t, uint64_t, uint64_t))log)(v58 + v113, v111, v117);
    v132(v130, v109, v114);
    uint64_t v116 = (void *)swift_task_alloc();
    *(void *)(v0 + 560) = v116;
    void *v116 = v0;
    v116[1] = sub_100260478;
    uint64_t v60 = *(void *)(v0 + 320);
    goto LABEL_52;
  }
  if (v127 != 1)
  {
    uint64_t v61 = *(void *)(*(void *)(v0 + 408) + 72);
    unint64_t v62 = v1 + v61 + v124;
    uint64_t v63 = 1;
    while (1)
    {
      v129(*(void *)(v0 + 432), v62, *(void *)(v0 + 400));
      uint64_t v64 = v63 + 1;
      if (__OFADD__(v63, 1)) {
        break;
      }
      uint64_t v65 = *(void *)(v0 + 432);
      uint64_t v66 = *(void *)(v0 + 400);
      char v67 = dispatch thunk of static Equatable.== infix(_:_:)();
      v123(v65, v66);
      if (v67)
      {
        swift_bridgeObjectRelease();
        uint64_t v41 = (void *)(v0 + 264);
        goto LABEL_46;
      }
      ++v63;
      v62 += v61;
      if (v64 == v127) {
        goto LABEL_34;
      }
    }
    __break(1u);
    goto LABEL_56;
  }
LABEL_34:
  swift_bridgeObjectRelease();
  uint64_t v68 = (void *)(v0 + 48);
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v69 = *(void *)(v0 + 440);
  unint64_t v70 = *(void *)(v0 + 416);
  uint64_t v71 = *(void *)(v0 + 400);
  uint64_t v72 = type metadata accessor for Logger();
  sub_100044058(v72, (uint64_t)qword_10040C290);
  v129(v70, v69, v71);
  BOOL v73 = Logger.logObject.getter();
  os_log_type_t v74 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v73, v74))
  {
    uint64_t v75 = *(void *)(v0 + 416);
    uint64_t v76 = *(void *)(v0 + 400);
    uint64_t v77 = swift_slowAlloc();
    v133[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v77 = 141558787;
    *(void *)(v0 + 224) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v77 + 12) = 2081;
    sub_1000207A4(&qword_1003F00F0, 255, (void (*)(uint64_t))&type metadata accessor for Handle);
    uint64_t v78 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 232) = sub_100037004(v78, v79, v133);
    uint64_t v68 = (void *)(v0 + 48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v123(v75, v76);
    *(_WORD *)(v77 + 22) = 2160;
    *(void *)(v0 + 240) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v77 + 32) = 2081;
    swift_beginAccess();
    uint64_t v80 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 256) = sub_100037004(v80, v81, v133);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v73, v74, "Replacing current live subscription for %{private,mask.hash}s with %{private,mask.hash}s", (uint8_t *)v77, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    v123(*(void *)(v0 + 416), *(void *)(v0 + 400));
  }

  ((void (*)(void, void, void))v122)(*(void *)(v0 + 344), v125, *(void *)(v0 + 296));
  uint64_t v82 = sub_10024DD60();
  uint64_t v83 = sub_100260EBC(v68);
  if (*v84)
  {
    uint64_t v85 = *(void *)(v0 + 344);
    uint64_t v86 = *(void *)(v0 + 296);
    sub_100123540(*(void *)(v0 + 440));
    ((void (*)(void *, void))v83)(v68, 0);
    v121(v85, v86);
    ((void (*)(uint64_t, void))v82)(v0 + 16, 0);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v87 = *(void *)(v0 + 344);
    uint64_t v88 = *(void *)(v0 + 296);
    ((void (*)(void *, void))v83)(v68, 0);
    v121(v87, v88);
    ((void (*)(uint64_t, void))v82)(v0 + 16, 0);
  }
  uint64_t v89 = *(void *)(v0 + 440);
  uint64_t v91 = *(void *)(v0 + 400);
  uint64_t v90 = *(void *)(v0 + 408);
  uint64_t v92 = *(void *)(v0 + 336);
  uint64_t v93 = *(void *)(v0 + 296);
  sub_100044014(&qword_1003F03F0);
  *(void *)(v0 + 520) = *(void *)(v90 + 72);
  uint64_t v94 = swift_allocObject();
  *(void *)(v0 + 528) = v94;
  *(_OWORD *)(v94 + 16) = xmmword_100367D70;
  v129(v94 + v124, v89, v91);
  ((void (*)(uint64_t, void, uint64_t))v122)(v92, v125, v93);
  uint64_t v95 = (void *)swift_task_alloc();
  *(void *)(v0 + 536) = v95;
  *uint64_t v95 = v0;
  v95[1] = sub_10026006C;
  uint64_t v96 = *(void *)(v0 + 336);
  return sub_1002693A8(v94, v96);
}

uint64_t sub_10026006C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*v1 + 488);
  uint64_t v4 = *(void *)(*v1 + 336);
  uint64_t v5 = *(void *)(*v1 + 296);
  *(void *)(*v1 + 544) = v0;
  swift_task_dealloc();
  v3(v4, v5);
  if (v0)
  {
    uint64_t v6 = *(void *)(v2 + 288);
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_100260C04;
    uint64_t v8 = v6;
  }
  else
  {
    uint64_t v9 = *(void *)(v2 + 288);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v7 = sub_100260260;
    uint64_t v8 = v9;
  }
  return _swift_task_switch(v7, v8, 0);
}

uint64_t sub_100260260()
{
  unint64_t v14 = (*(unsigned __int8 *)(v0 + 616) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 616);
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 472);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v0 + 488);
  uint64_t v2 = *(unsigned int *)(v0 + 620);
  uint64_t v12 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 456);
  uint64_t v3 = *(void *)(v0 + 448);
  uint64_t v4 = *(void *)(v0 + 400);
  uint64_t v13 = *(void *)(v0 + 392);
  uint64_t v5 = *(void *)(v0 + 328);
  uint64_t v16 = *(void *)(v0 + 320);
  uint64_t v11 = *(void *)(v0 + 296);
  sub_100044014(&qword_1003F03F0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100367D70;
  swift_beginAccess();
  v12(v6 + v14, v3, v4);
  v1(v5, v2, v11);
  sub_100267D98(v13, v6, v5);
  swift_bridgeObjectRelease();
  v15(v5, v11);
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 552) = v7;
  *(_OWORD *)(v7 + 16) = xmmword_100367D70;
  v12(v7 + v14, v3, v4);
  v1(v16, v2, v11);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 560) = v8;
  void *v8 = v0;
  v8[1] = sub_100260478;
  uint64_t v9 = *(void *)(v0 + 320);
  return sub_10026B534(v7, v9, 1);
}

uint64_t sub_100260478(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[71] = v1;
  swift_task_dealloc();
  uint64_t v5 = (void (*)(uint64_t, uint64_t))v4[61];
  uint64_t v6 = v4[40];
  uint64_t v7 = v4[37];
  uint64_t v8 = v4[36];
  if (v1)
  {
    v5(v6, v7);
    swift_bridgeObjectRelease();
    uint64_t v9 = sub_100260D60;
  }
  else
  {
    v4[72] = a1;
    v5(v6, v7);
    swift_bridgeObjectRelease();
    uint64_t v9 = sub_100260634;
  }
  return _swift_task_switch(v9, v8, 0);
}

uint64_t sub_100260634()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[63];
  uint64_t v2 = v0[56];
  uint64_t v4 = v0[49];
  uint64_t v3 = v0[50];
  uint64_t v5 = v0[47];
  uint64_t v6 = v0[48];
  v1(v0[55], v3);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v1(v2, v3);
  uint64_t v9 = v0[72];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(uint64_t))v0[1];
  return v7(v9);
}

uint64_t sub_100260794(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[75] = v1;
  swift_task_dealloc();
  uint64_t v5 = (void (*)(uint64_t, uint64_t))v4[61];
  uint64_t v6 = v4[39];
  uint64_t v7 = v4[37];
  uint64_t v8 = v4[36];
  if (v1)
  {
    v5(v6, v7);
    swift_bridgeObjectRelease();
    uint64_t v9 = sub_100260AAC;
  }
  else
  {
    v4[76] = a1;
    v5(v6, v7);
    swift_bridgeObjectRelease();
    uint64_t v9 = sub_100260950;
  }
  return _swift_task_switch(v9, v8, 0);
}

uint64_t sub_100260950()
{
  uint64_t v1 = v0[56];
  uint64_t v2 = v0[50];
  uint64_t v3 = v0[51];
  (*(void (**)(void, void))(v0[48] + 8))(v0[49], v0[47]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v6 = v0[76];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
  return v4(v6);
}

uint64_t sub_100260AAC()
{
  uint64_t v1 = v0[56];
  uint64_t v2 = v0[50];
  uint64_t v3 = v0[51];
  (*(void (**)(void, void))(v0[48] + 8))(v0[49], v0[47]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100260C04()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[63];
  uint64_t v2 = v0[56];
  uint64_t v4 = v0[49];
  uint64_t v3 = v0[50];
  uint64_t v5 = v0[47];
  uint64_t v6 = v0[48];
  v1(v0[55], v3);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100260D60()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[63];
  uint64_t v2 = v0[56];
  uint64_t v4 = v0[49];
  uint64_t v3 = v0[50];
  uint64_t v5 = v0[47];
  uint64_t v6 = v0[48];
  v1(v0[55], v3);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

void (*sub_100260EBC(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  uint64_t Priority = type metadata accessor for LocatePriority();
  v2[4] = Priority;
  uint64_t v4 = *(void *)(Priority - 8);
  uint64_t v5 = v4;
  v2[5] = v4;
  uint64_t v6 = malloc(*(void *)(v4 + 64));
  v2[6] = v6;
  (*(void (**)(void))(v5 + 16))();
  v2[7] = sub_10027BA00(v2, (uint64_t)v6);
  return sub_100260FAC;
}

void sub_100260FAC(void *a1)
{
  uint64_t v1 = (void *)*a1;
  uint64_t v2 = *(void **)(*a1 + 48);
  uint64_t v3 = *(void *)(*a1 + 32);
  uint64_t v4 = *(void *)(*a1 + 40);
  (*(void (**)(void, void))(*a1 + 56))(*a1, 0);
  (*(void (**)(void *, uint64_t))(v4 + 8))(v2, v3);
  free(v2);

  free(v1);
}

uint64_t sub_100261024(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  uint64_t v3 = type metadata accessor for UUID();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  return _swift_task_switch(sub_1002610F4, v1, 0);
}

uint64_t sub_1002610F4()
{
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of FM.XPCSession.underlyingConnectionIdentity.getter
                                       + async function pointer to dispatch thunk of FM.XPCSession.underlyingConnectionIdentity.getter);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1002611A4;
  uint64_t v2 = *(void *)(v0 + 80);
  return v4(v2);
}

uint64_t sub_1002611A4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  swift_task_dealloc();
  return _swift_task_switch(sub_1002612B4, v1, 0);
}

uint64_t sub_1002612B4()
{
  uint64_t v29 = v0;
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[8];
  uint64_t v5 = type metadata accessor for Logger();
  sub_100044058(v5, (uint64_t)qword_10040C290);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v1, v3);
  swift_retain_n();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v10 = v0[8];
  uint64_t v9 = v0[9];
  uint64_t v11 = v0[7];
  uint64_t v12 = v0[5];
  if (v8)
  {
    uint64_t v26 = v0[9];
    uint64_t v13 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315394;
    os_log_type_t type = v7;
    v0[2] = v12;
    type metadata accessor for LocationServiceClient();
    swift_retain();
    uint64_t v14 = String.init<A>(describing:)();
    v0[3] = sub_100037004(v14, v15, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2082;
    sub_1000207A4(&qword_1003ECF68, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[4] = sub_100037004(v16, v17, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    unint64_t v20 = *(void (**)(void, void))(v10 + 8);
    uint64_t v19 = v10 + 8;
    uint64_t v18 = v20;
    v20(v26, v11);
    _os_log_impl((void *)&_mh_execute_header, v6, type, "Location Service: removed connection: %s connectionIdentifier: %{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
    unint64_t v21 = *(void (**)(void, void))(v10 + 8);
    uint64_t v19 = v10 + 8;
    uint64_t v18 = v21;
    v21(v9, v11);
  }

  v0[12] = v19;
  v0[13] = v18;
  uint64_t v22 = sub_1002617B0();
  v0[14] = v22;
  uint64_t v23 = (void *)swift_task_alloc();
  v0[15] = v23;
  *uint64_t v23 = v0;
  v23[1] = sub_100261600;
  uint64_t v24 = v0[10];
  return sub_100261ADC(v24, (uint64_t)v22);
}

uint64_t sub_100261600()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_10026172C, v1, 0);
}

uint64_t sub_10026172C()
{
  (*(void (**)(void, void))(v0 + 104))(*(void *)(v0 + 80), *(void *)(v0 + 56));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void *sub_1002617B0()
{
  uint64_t Priority = type metadata accessor for LocatePriority();
  uint64_t v1 = *(void *)(Priority - 8);
  uint64_t v2 = __chkstk_darwin(Priority);
  char v31 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v34 = (char *)&v25 - v5;
  __chkstk_darwin(v4);
  os_log_type_t v7 = (char *)&v25 - v6;
  uint64_t v8 = static LocatePriority.allCases.getter();
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
    uint64_t v11 = v1 + 16;
    uint64_t v10 = v12;
    unint64_t v13 = (*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64);
    uint64_t v25 = v8;
    unint64_t v28 = v13;
    unint64_t v14 = v8 + v13;
    uint64_t v35 = *(void *)(v11 + 56);
    int v33 = enum case for LocatePriority.backgroundAppRefresh(_:);
    int v30 = enum case for LocatePriority.shallow(_:);
    int v29 = enum case for LocatePriority.live(_:);
    int v27 = enum case for LocatePriority.backgroundProactive(_:);
    unint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v26 = (void (**)(unint64_t, char *, uint64_t))(v11 + 16);
    uint64_t v32 = _swiftEmptyArrayStorage;
    v12(v7, (char *)(v8 + v13), Priority);
    while (1)
    {
      uint64_t v16 = v34;
      v10(v34, v7, Priority);
      int v17 = (*(uint64_t (**)(char *, uint64_t))(v11 + 72))(v16, Priority);
      if (v17 == v33) {
        goto LABEL_4;
      }
      int v18 = v17;
      if (v17 == v30 || v17 == v29) {
        break;
      }
      uint64_t v23 = *v15;
      (*v15)(v7, Priority);
      if (v18 != v27) {
        v23(v34, Priority);
      }
LABEL_5:
      v14 += v35;
      if (!--v9)
      {
        swift_bridgeObjectRelease();
        return v32;
      }
      v10(v7, (char *)v14, Priority);
    }
    v10(v31, v7, Priority);
    if (swift_isUniquelyReferenced_nonNull_native()) {
      unint64_t v20 = (unint64_t)v32;
    }
    else {
      unint64_t v20 = sub_10013E324(0, v32[2] + 1, 1, (unint64_t)v32);
    }
    unint64_t v22 = *(void *)(v20 + 16);
    unint64_t v21 = *(void *)(v20 + 24);
    if (v22 >= v21 >> 1) {
      unint64_t v20 = sub_10013E324(v21 > 1, v22 + 1, 1, v20);
    }
    *(void *)(v20 + 16) = v22 + 1;
    uint64_t v32 = (void *)v20;
    (*v26)(v20 + v28 + v22 * v35, v31, Priority);
LABEL_4:
    (*v15)(v7, Priority);
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100261ADC(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  uint64_t v4 = type metadata accessor for Handle();
  v3[18] = v4;
  v3[19] = *(void *)(v4 - 8);
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  sub_100044014(&qword_1003F33B0);
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  uint64_t Priority = type metadata accessor for LocatePriority();
  v3[27] = Priority;
  v3[28] = *(void *)(Priority - 8);
  v3[29] = swift_task_alloc();
  v3[30] = swift_task_alloc();
  v3[31] = swift_task_alloc();
  v3[32] = swift_task_alloc();
  v3[33] = swift_task_alloc();
  sub_100044014(&qword_1003F33A0);
  v3[34] = swift_task_alloc();
  v3[35] = swift_task_alloc();
  v3[36] = swift_task_alloc();
  v3[37] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for UUID();
  v3[38] = v6;
  v3[39] = *(void *)(v6 - 8);
  v3[40] = swift_task_alloc();
  v3[41] = swift_task_alloc();
  return _swift_task_switch(sub_100261D68, v2, 0);
}

uint64_t sub_100261D68()
{
  uint64_t v247 = v0;
  if (qword_1003EC408 != -1) {
    goto LABEL_170;
  }
LABEL_2:
  unint64_t v1 = v0[15];
  unint64_t v2 = v0[41];
  unint64_t v3 = v0[38];
  unint64_t v4 = v0[39];
  uint64_t v5 = type metadata accessor for Logger();
  v0[42] = sub_100044058(v5, (uint64_t)qword_10040C290);
  uint64_t v6 = *(void (**)(unint64_t, unint64_t, unint64_t))(v4 + 16);
  v0[43] = (unint64_t)v6;
  v0[44] = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v2, v1, v3);
  swift_bridgeObjectRetain_n();
  os_log_type_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  BOOL v9 = os_log_type_enabled(v7, v8);
  unint64_t v10 = v0[41];
  unint64_t v11 = v0[38];
  unint64_t v12 = v0[39];
  if (v9)
  {
    os_log_type_t v240 = v8;
    uint64_t v13 = swift_slowAlloc();
    v246[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446466;
    sub_1000207A4(&qword_1003ECF68, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[13] = sub_100037004(v14, v15, v246);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    int v18 = *(void (**)(void, void))(v12 + 8);
    unint64_t v16 = v12 + 8;
    int v17 = v18;
    v18(v10, v11);
    *(_WORD *)(v13 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v19 = Array.description.getter();
    unint64_t v21 = v20;
    swift_bridgeObjectRelease();
    v0[14] = sub_100037004(v19, v21, v246);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v240, "Removing all subscriptions for %{public}s with priorities: %{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    unint64_t v22 = *(void (**)(void, void))(v12 + 8);
    unint64_t v16 = v12 + 8;
    int v17 = v22;
    v22(v10, v11);

    swift_bridgeObjectRelease_n();
  }
  unint64_t v219 = (uint64_t *)(v0 + 9);
  uint64_t v220 = v0 + 8;
  unint64_t v217 = (uint64_t *)(v0 + 11);
  uint64_t v218 = v0 + 10;
  v0[45] = v16;
  v0[46] = (unint64_t)v17;
  uint64_t v23 = (unint64_t *)(v0[17] + OBJC_IVAR____TtC13findmylocated15LocationService_subscriptions);
  swift_beginAccess();
  unint64_t v24 = *v23;
  v0[47] = *v23;
  char v25 = *(unsigned char *)(v24 + 32);
  *((unsigned char *)v0 + 480) = v25;
  uint64_t v26 = 1 << v25;
  if (v26 < 64) {
    uint64_t v27 = ~(-1 << v26);
  }
  else {
    uint64_t v27 = -1;
  }
  unint64_t v28 = v27 & *(void *)(v24 + 64);
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v30 = 0;
  char v31 = v0;
  uint64_t v245 = v0;
  while (1)
  {
LABEL_9:
    if (v28)
    {
      unint64_t v32 = __clz(__rbit64(v28));
      v28 &= v28 - 1;
      unint64_t v33 = v32 | (v30 << 6);
      unint64_t v34 = v31[47];
LABEL_11:
      unint64_t v35 = v31[36];
      (*(void (**)(unint64_t, unint64_t, unint64_t))(v31[28] + 16))(v35, *(void *)(v34 + 48) + *(void *)(v31[28] + 72) * v33, v31[27]);
      uint64_t v36 = *(void *)(v34 + 56) + 24 * v33;
      uint64_t v37 = sub_100044014(&qword_1003F33A8);
      unint64_t v38 = v35 + *(int *)(v37 + 48);
      long long v39 = *(_OWORD *)(v36 + 8);
      *(void *)unint64_t v38 = *(void *)v36;
      *(_OWORD *)(v38 + 8) = v39;
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v35, 0, 1, v37);
      swift_retain();
      swift_bridgeObjectRetain();
      goto LABEL_18;
    }
    int64_t v40 = v30 + 1;
    if (__OFADD__(v30, 1))
    {
      __break(1u);
LABEL_172:
      __break(1u);
LABEL_173:
      __break(1u);
      goto LABEL_174;
    }
    int64_t v41 = (unint64_t)((1 << *((unsigned char *)v31 + 480)) + 63) >> 6;
    if (v40 >= v41)
    {
      int64_t v44 = v30;
    }
    else
    {
      unint64_t v34 = v31[47];
      unint64_t v42 = v34 + 64;
      unint64_t v43 = *(void *)(v34 + 64 + 8 * v40);
      if (v43) {
        goto LABEL_15;
      }
      int64_t v44 = v30 + 1;
      if ((uint64_t)(v30 + 2) < v41)
      {
        unint64_t v43 = *(void *)(v42 + 8 * (v30 + 2));
        if (v43)
        {
          int64_t v40 = v30 + 2;
LABEL_15:
          unint64_t v28 = (v43 - 1) & v43;
          unint64_t v33 = __clz(__rbit64(v43)) + (v40 << 6);
          unint64_t v30 = v40;
          goto LABEL_11;
        }
        int64_t v44 = v30 + 2;
        if ((uint64_t)(v30 + 3) < v41)
        {
          unint64_t v43 = *(void *)(v42 + 8 * (v30 + 3));
          if (v43)
          {
            int64_t v40 = v30 + 3;
            goto LABEL_15;
          }
          int64_t v40 = v30 + 4;
          int64_t v44 = v30 + 3;
          if ((uint64_t)(v30 + 4) < v41)
          {
            unint64_t v43 = *(void *)(v42 + 8 * v40);
            if (v43) {
              goto LABEL_15;
            }
            int64_t v44 = v41 - 1;
            int64_t v108 = v41 - 5;
            while (v108 != v30)
            {
              unint64_t v43 = *(void *)(v34 + 104 + 8 * v30++);
              if (v43)
              {
                int64_t v40 = v30 + 4;
                goto LABEL_15;
              }
            }
          }
        }
      }
    }
    unint64_t v45 = v31[36];
    uint64_t v46 = sub_100044014(&qword_1003F33A8);
    (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 1, 1, v46);
    unint64_t v28 = 0;
    unint64_t v30 = v44;
LABEL_18:
    v31[48] = v30;
    v31[49] = v28;
    uint64_t v47 = v31[37];
    sub_100013B50(v31[36], v47, &qword_1003F33A0);
    uint64_t v48 = sub_100044014(&qword_1003F33A8);
    uint64_t v49 = *(void *)(v48 - 8);
    uint64_t v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48);
    if (v50(v47, 1, v48) == 1)
    {
      unint64_t v215 = v50;
      uint64_t v216 = v48;
      unint64_t v119 = v31[17];
      swift_release();
      unint64_t v120 = v119 + OBJC_IVAR____TtC13findmylocated15LocationService_legacyLocationSubscriptions;
      swift_beginAccess();
      uint64_t v211 = *(void *)v120 + 64;
      uint64_t v121 = -1 << *(unsigned char *)(*(void *)v120 + 32);
      if (-v121 < 64) {
        uint64_t v122 = ~(-1 << -(char)v121);
      }
      else {
        uint64_t v122 = -1;
      }
      unint64_t v222 = v122 & *(void *)(*(void *)v120 + 64);
      unint64_t v123 = (unint64_t)(63 - v121) >> 6;
      uint64_t v214 = (void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56);
      unint64_t v208 = v123 - 1;
      uint64_t result = swift_bridgeObjectRetain();
      unint64_t v124 = 0;
      int64_t v212 = v123;
      uint64_t v213 = result;
      uint64_t v209 = result + 104;
      unint64_t v210 = v123 - 5;
      unint64_t v125 = v222;
      if (v222)
      {
LABEL_86:
        unint64_t v221 = v124;
        uint64_t v223 = (v125 - 1) & v125;
        unint64_t v126 = __clz(__rbit64(v125)) | (v124 << 6);
        goto LABEL_87;
      }
      while (1)
      {
        int64_t v133 = v124 + 1;
        if (__OFADD__(v124, 1)) {
          goto LABEL_172;
        }
        if (v133 >= v212)
        {
          unint64_t v135 = v124;
        }
        else
        {
          unint64_t v134 = *(void *)(v211 + 8 * v133);
          if (v134) {
            goto LABEL_93;
          }
          unint64_t v135 = v124 + 1;
          if ((uint64_t)(v124 + 2) < v212)
          {
            unint64_t v134 = *(void *)(v211 + 8 * (v124 + 2));
            if (v134)
            {
              int64_t v133 = v124 + 2;
              goto LABEL_93;
            }
            unint64_t v135 = v124 + 2;
            if ((uint64_t)(v124 + 3) < v212)
            {
              unint64_t v134 = *(void *)(v211 + 8 * (v124 + 3));
              if (v134)
              {
                int64_t v133 = v124 + 3;
LABEL_93:
                unint64_t v221 = v133;
                uint64_t v223 = (v134 - 1) & v134;
                unint64_t v126 = __clz(__rbit64(v134)) + (v133 << 6);
LABEL_87:
                unint64_t v127 = v31[34];
                (*(void (**)(unint64_t, unint64_t, unint64_t))(v31[28] + 16))(v127, *(void *)(v213 + 48) + *(void *)(v31[28] + 72) * v126, v31[27]);
                uint64_t v128 = *(void *)(v213 + 56) + 24 * v126;
                uint64_t v48 = v216;
                unint64_t v129 = v127 + *(int *)(v216 + 48);
                long long v130 = *(_OWORD *)(v128 + 8);
                *(void *)unint64_t v129 = *(void *)v128;
                *(_OWORD *)(v129 + 8) = v130;
                (*v214)(v127, 0, 1, v216);
                swift_retain();
                swift_bridgeObjectRetain();
                goto LABEL_96;
              }
              int64_t v133 = v124 + 4;
              unint64_t v135 = v124 + 3;
              if ((uint64_t)(v124 + 4) < v212)
              {
                unint64_t v134 = *(void *)(v211 + 8 * v133);
                if (v134) {
                  goto LABEL_93;
                }
                while (v210 != v124)
                {
                  unint64_t v134 = *(void *)(v209 + 8 * v124++);
                  if (v134)
                  {
                    int64_t v133 = v124 + 4;
                    goto LABEL_93;
                  }
                }
                unint64_t v135 = v208;
              }
            }
          }
        }
        (*v214)(v31[34], 1, 1, v48);
        unint64_t v221 = v135;
        uint64_t v223 = 0;
LABEL_96:
        uint64_t v136 = v31[35];
        sub_100013B50(v31[34], v136, &qword_1003F33A0);
        if (v215(v136, 1, v48) == 1)
        {
          swift_release();
          uint64_t v207 = (void *)swift_task_alloc();
          v31[59] = (unint64_t)v207;
          *uint64_t v207 = v31;
          v207[1] = sub_100265280;
          return sub_1000163A8();
        }
        unint64_t v137 = v31[16];
        uint64_t v237 = *(void *)(v31[35] + *(int *)(v48 + 48));
        (*(void (**)(unint64_t))(v31[28] + 32))(v31[31]);
        uint64_t v138 = *(void *)(v137 + 16);
        if (v138)
        {
          unint64_t v139 = v31[30];
          unint64_t v140 = v31[27];
          unint64_t v141 = v31[28];
          unint64_t v142 = v31[16];
          uint64_t v0 = v31;
          unint64_t v243 = (*(unsigned __int8 *)(v141 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v141 + 80);
          v225 = *(void (**)(unint64_t, unint64_t, unint64_t))(v141 + 16);
          v225(v139, v142 + v243, v140);
          sub_1000207A4(&qword_1003F0050, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
          swift_bridgeObjectRetain();
          char v143 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v227 = *(void (**)(unint64_t, unint64_t))(v141 + 8);
          v227(v139, v140);
          if (v143) {
            goto LABEL_99;
          }
          if (v138 == 1)
          {
            char v31 = v245;
            swift_bridgeObjectRelease();
            uint64_t v48 = v216;
          }
          else
          {
            uint64_t v0 = v245;
            unint64_t v144 = v245[30];
            unint64_t v145 = v245[27];
            uint64_t v146 = *(void *)(v245[28] + 72);
            v225(v144, v142 + v243 + v146, v145);
            char v147 = dispatch thunk of static Equatable.== infix(_:_:)();
            v227(v144, v145);
            if (v147)
            {
LABEL_99:
              swift_bridgeObjectRelease();
              char v31 = v0;
              goto LABEL_117;
            }
            if (v138 != 2)
            {
              unint64_t v148 = v142 + v243 + 2 * v146;
              uint64_t v149 = 2;
              char v31 = v245;
              while (1)
              {
                v225(v31[30], v148, v31[27]);
                uint64_t v150 = v149 + 1;
                if (__OFADD__(v149, 1)) {
                  goto LABEL_169;
                }
                uint64_t v151 = v31;
                unint64_t v152 = v31[30];
                unint64_t v153 = v151[27];
                char v154 = dispatch thunk of static Equatable.== infix(_:_:)();
                v227(v152, v153);
                if (v154) {
                  break;
                }
                ++v149;
                v148 += v146;
                char v31 = v245;
                if (v150 == v138) {
                  goto LABEL_113;
                }
              }
              char v31 = v245;
              swift_bridgeObjectRelease();
LABEL_117:
              uint64_t v224 = v237 + 64;
              uint64_t v155 = -1 << *(unsigned char *)(v237 + 32);
              if (-v155 < 64) {
                uint64_t v156 = ~(-1 << -(char)v155);
              }
              else {
                uint64_t v156 = -1;
              }
              unint64_t v157 = v156 & *(void *)(v237 + 64);
              int64_t v235 = (unint64_t)(63 - v155) >> 6;
              uint64_t result = swift_bridgeObjectRetain();
              int64_t v239 = 0;
              while (2)
              {
                if (v157)
                {
                  unint64_t v161 = __clz(__rbit64(v157));
                  uint64_t v162 = (v157 - 1) & v157;
                  unint64_t v163 = v161 | (v239 << 6);
                  goto LABEL_125;
                }
                int64_t v167 = v239 + 1;
                if (!__OFADD__(v239, 1))
                {
                  if (v167 < v235)
                  {
                    unint64_t v168 = *(void *)(v224 + 8 * v167);
                    if (v168)
                    {
LABEL_129:
                      uint64_t v162 = (v168 - 1) & v168;
                      unint64_t v163 = __clz(__rbit64(v168)) + (v167 << 6);
                      int64_t v239 = v167;
LABEL_125:
                      unint64_t v164 = v31[23];
                      (*(void (**)(unint64_t, unint64_t, unint64_t))(v31[19] + 16))(v164, *(void *)(v237 + 48) + *(void *)(v31[19] + 72) * v163, v31[18]);
                      uint64_t v165 = *(void *)(v237 + 56);
                      uint64_t v166 = sub_100044014(&qword_1003F3210);
                      *(void *)(v164 + *(int *)(v166 + 48)) = *(void *)(v165 + 8 * v163);
                      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v166 - 8) + 56))(v164, 0, 1, v166);
                      swift_bridgeObjectRetain();
LABEL_144:
                      uint64_t v172 = v31[24];
                      sub_100013B50(v31[23], v172, &qword_1003F33B0);
                      uint64_t v173 = sub_100044014(&qword_1003F3210);
                      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v173 - 8) + 48))(v172, 1, v173) == 1)
                      {
                        unint64_t v131 = v31[31];
                        unint64_t v132 = v31[27];
                        swift_bridgeObjectRelease();
                        swift_release();
                        swift_release();
                        uint64_t result = ((uint64_t (*)(unint64_t, unint64_t))v227)(v131, v132);
                        uint64_t v48 = v216;
                        goto LABEL_89;
                      }
                      unint64_t v244 = v162;
                      uint64_t v0 = *(unint64_t **)(v31[24] + *(int *)(v173 + 48));
                      (*(void (**)(unint64_t))(v31[19] + 32))(v31[21]);
                      if (v0[2]
                        && (sub_1000207A4(&qword_1003EE920, 255, (void (*)(uint64_t))&type metadata accessor for UUID), char v31 = v245, v174 = dispatch thunk of Hashable._rawHashValue(seed:)(), v175 = -1 << *((unsigned char *)v0 + 32), v176 = v174 & ~v175, ((*(unint64_t *)((char *)v0 + ((v176 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v176) & 1) != 0))
                      {
                        uint64_t v177 = ~v175;
                        uint64_t v178 = *(void *)(v245[39] + 72);
                        while (1)
                        {
                          uint64_t v179 = (void (*)(unint64_t, unint64_t))v31[46];
                          unint64_t v180 = v31[40];
                          unint64_t v181 = v31[38];
                          ((void (*)(unint64_t, unint64_t, unint64_t))v31[43])(v180, v0[6] + v176 * v178, v181);
                          sub_1000207A4(&qword_1003EEC20, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
                          char v182 = dispatch thunk of static Equatable.== infix(_:_:)();
                          v179(v180, v181);
                          if (v182) {
                            break;
                          }
                          unint64_t v176 = (v176 + 1) & v177;
                          char v31 = v245;
                          if (((*(unint64_t *)((char *)v0 + ((v176 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v176) & 1) == 0) {
                            goto LABEL_121;
                          }
                        }
                        char v31 = v245;
                        uint64_t v183 = v245[31];
                        unint64_t v229 = v245[29];
                        unint64_t v231 = v245[27];
                        unint64_t v185 = v245[20];
                        unint64_t v184 = v245[21];
                        unint64_t v186 = v245[18];
                        unint64_t v187 = v245[19];
                        uint64_t v188 = v245[15];
                        swift_bridgeObjectRelease();
                        sub_100044014(&qword_1003F03F0);
                        unint64_t v189 = (*(unsigned __int8 *)(v187 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v187 + 80);
                        uint64_t v190 = swift_allocObject();
                        *(_OWORD *)(v190 + 16) = xmmword_100367D70;
                        uint64_t v191 = *(void (**)(unint64_t, unint64_t, unint64_t))(v187 + 16);
                        v191(v190 + v189, v184, v186);
                        sub_10028ACC8(v188, v190, v183);
                        swift_bridgeObjectRelease();
                        v191(v185, v184, v186);
                        v225(v229, v183, v231);
                        uint64_t v192 = Logger.logObject.getter();
                        os_log_type_t v193 = static os_log_type_t.default.getter();
                        BOOL v194 = os_log_type_enabled(v192, v193);
                        unint64_t v195 = v245[29];
                        unint64_t v196 = v245[27];
                        unint64_t v197 = v245[20];
                        unint64_t v198 = v245[21];
                        unint64_t v200 = v245[18];
                        unint64_t v199 = v245[19];
                        if (v194)
                        {
                          unint64_t v233 = v245[21];
                          uint64_t v201 = swift_slowAlloc();
                          v246[0] = swift_slowAlloc();
                          *(_DWORD *)uint64_t v201 = 141558787;
                          *uint64_t v220 = 1752392040;
                          os_log_type_t v230 = v193;
                          UnsafeMutableRawBufferPointer.copyMemory(from:)();
                          *(_WORD *)(v201 + 12) = 2081;
                          uint64_t v202 = Handle.identifier.getter();
                          *unint64_t v219 = sub_100037004(v202, v203, v246);
                          UnsafeMutableRawBufferPointer.copyMemory(from:)();
                          swift_bridgeObjectRelease();
                          uint64_t v204 = *(void (**)(unint64_t, unint64_t))(v199 + 8);
                          v204(v197, v200);
                          *(_WORD *)(v201 + 22) = 2160;
                          *uint64_t v218 = 1752392040;
                          uint64_t v0 = (unint64_t *)v217;
                          UnsafeMutableRawBufferPointer.copyMemory(from:)();
                          *(_WORD *)(v201 + 32) = 2081;
                          sub_1000207A4(&qword_1003F3330, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
                          uint64_t v205 = dispatch thunk of CustomStringConvertible.description.getter();
                          *unint64_t v217 = sub_100037004(v205, v206, v246);
                          char v31 = v245;
                          UnsafeMutableRawBufferPointer.copyMemory(from:)();
                          swift_bridgeObjectRelease();
                          v227(v195, v196);
                          _os_log_impl((void *)&_mh_execute_header, v192, v230, "remove legacy subscription for handle: %{private,mask.hash}s with priority: %{private,mask.hash}s", (uint8_t *)v201, 0x2Au);
                          swift_arrayDestroy();
                          swift_slowDealloc();
                          swift_slowDealloc();

                          uint64_t result = ((uint64_t (*)(unint64_t, unint64_t))v204)(v233, v200);
                        }
                        else
                        {

                          v227(v195, v196);
                          uint64_t v0 = *(unint64_t **)(v199 + 8);
                          ((void (*)(unint64_t, unint64_t))v0)(v197, v200);
                          uint64_t result = ((uint64_t (*)(unint64_t, unint64_t))v0)(v198, v200);
                        }
                      }
                      else
                      {
LABEL_121:
                        unint64_t v158 = v31[21];
                        unint64_t v160 = v31[18];
                        unint64_t v159 = v31[19];
                        swift_bridgeObjectRelease();
                        uint64_t result = (*(uint64_t (**)(unint64_t, unint64_t))(v159 + 8))(v158, v160);
                      }
                      unint64_t v157 = v244;
                      continue;
                    }
                    int64_t v169 = v239 + 2;
                    ++v239;
                    if (v167 + 1 < v235)
                    {
                      unint64_t v168 = *(void *)(v224 + 8 * v169);
                      if (v168)
                      {
LABEL_132:
                        int64_t v167 = v169;
                        goto LABEL_129;
                      }
                      int64_t v239 = v167 + 1;
                      if (v167 + 2 < v235)
                      {
                        unint64_t v168 = *(void *)(v224 + 8 * (v167 + 2));
                        if (v168)
                        {
                          v167 += 2;
                          goto LABEL_129;
                        }
                        int64_t v169 = v167 + 3;
                        int64_t v239 = v167 + 2;
                        if (v167 + 3 < v235)
                        {
                          unint64_t v168 = *(void *)(v224 + 8 * v169);
                          if (v168) {
                            goto LABEL_132;
                          }
                          while (1)
                          {
                            int64_t v167 = v169 + 1;
                            if (__OFADD__(v169, 1)) {
                              goto LABEL_173;
                            }
                            if (v167 >= v235) {
                              break;
                            }
                            unint64_t v168 = *(void *)(v224 + 8 * v167);
                            ++v169;
                            if (v168) {
                              goto LABEL_129;
                            }
                          }
                          int64_t v239 = v235 - 1;
                        }
                      }
                    }
                  }
                  unint64_t v170 = v31[23];
                  uint64_t v171 = sub_100044014(&qword_1003F3210);
                  (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v171 - 8) + 56))(v170, 1, 1, v171);
                  uint64_t v162 = 0;
                  goto LABEL_144;
                }
                break;
              }
              __break(1u);
LABEL_167:
              __break(1u);
LABEL_168:
              __break(1u);
LABEL_169:
              __break(1u);
LABEL_170:
              swift_once();
              goto LABEL_2;
            }
            char v31 = v245;
LABEL_113:
            swift_bridgeObjectRelease();
            uint64_t v48 = v216;
          }
          v227(v31[31], v31[27]);
        }
        else
        {
          (*(void (**)(unint64_t, unint64_t))(v31[28] + 8))(v31[31], v31[27]);
        }
        swift_bridgeObjectRelease();
        uint64_t result = swift_release();
LABEL_89:
        unint64_t v124 = v221;
        unint64_t v125 = v223;
        if (v223) {
          goto LABEL_86;
        }
      }
    }
    unint64_t v51 = v31[33];
    unint64_t v52 = v31[28];
    unint64_t v53 = v31[16];
    uint64_t v54 = (unint64_t *)(v31[37] + *(int *)(v48 + 48));
    unint64_t v55 = *v54;
    v31[50] = *v54;
    v31[51] = v54[1];
    (*(void (**)(unint64_t))(v52 + 32))(v51);
    uint64_t v241 = *(void *)(v53 + 16);
    if (v241) {
      break;
    }
    unint64_t v62 = *(void (**)(unint64_t, unint64_t))(v31[28] + 8);
LABEL_31:
    v62(v31[33], v31[27]);
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
  }
  unint64_t v232 = v30;
  unint64_t v234 = v28;
  unint64_t v236 = v55;
  unint64_t v56 = v31[32];
  unint64_t v57 = v31[27];
  unint64_t v58 = v31[28];
  unint64_t v59 = v31[16];
  unint64_t v226 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  uint64_t v238 = *(void (**)(unint64_t, unint64_t, unint64_t))(v58 + 16);
  v238(v56, v59 + v226, v57);
  uint64_t v60 = sub_1000207A4(&qword_1003F0050, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
  swift_bridgeObjectRetain();
  uint64_t v0 = (unint64_t *)v60;
  char v61 = dispatch thunk of static Equatable.== infix(_:_:)();
  unint64_t v62 = *(void (**)(unint64_t, unint64_t))(v58 + 8);
  v31[52] = (unint64_t)v62;
  v31[53] = (v58 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v62(v56, v57);
  if (v61) {
    goto LABEL_36;
  }
  if (v241 == 1) {
    goto LABEL_29;
  }
  unint64_t v63 = v31[32];
  unint64_t v64 = v31[27];
  uint64_t v228 = *(void *)(v31[28] + 72);
  v238(v63, v59 + v226 + v228, v64);
  char v65 = dispatch thunk of static Equatable.== infix(_:_:)();
  v62(v63, v64);
  if (v65) {
    goto LABEL_36;
  }
  if (v241 == 2)
  {
LABEL_29:
    swift_bridgeObjectRelease();
    unint64_t v30 = v232;
    unint64_t v28 = v234;
    goto LABEL_31;
  }
  unint64_t v66 = v59 + v226 + 2 * v228;
  uint64_t v67 = 2;
  while (1)
  {
    v238(v31[32], v66, v31[27]);
    uint64_t v68 = v31;
    uint64_t v69 = v67 + 1;
    if (__OFADD__(v67, 1)) {
      goto LABEL_168;
    }
    unint64_t v70 = v68[32];
    unint64_t v71 = v68[27];
    char v72 = dispatch thunk of static Equatable.== infix(_:_:)();
    v62(v70, v71);
    if (v72) {
      break;
    }
    ++v67;
    v66 += v228;
    BOOL v73 = v69 == v241;
    char v31 = v245;
    if (v73) {
      goto LABEL_29;
    }
  }
  char v31 = v245;
LABEL_36:
  swift_bridgeObjectRelease();
  char v74 = *(unsigned char *)(v236 + 32);
  *((unsigned char *)v31 + 481) = v74;
  uint64_t v75 = 1 << v74;
  if (v75 < 64) {
    uint64_t v76 = ~(-1 << v75);
  }
  else {
    uint64_t v76 = -1;
  }
  unint64_t v77 = v76 & *(void *)(v236 + 64);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v78 = 0;
  while (2)
  {
    if (v77)
    {
      unint64_t v79 = v31;
      uint64_t v80 = (v77 - 1) & v77;
      unint64_t v81 = __clz(__rbit64(v77)) | (v78 << 6);
      unint64_t v82 = v79[50];
      goto LABEL_43;
    }
    int64_t v86 = v78 + 1;
    if (__OFADD__(v78, 1)) {
      goto LABEL_167;
    }
    int64_t v87 = (unint64_t)((1 << *((unsigned char *)v31 + 481)) + 63) >> 6;
    if (v86 >= v87) {
      goto LABEL_61;
    }
    unint64_t v82 = v31[50];
    unint64_t v88 = v82 + 64;
    unint64_t v89 = *(void *)(v82 + 64 + 8 * v86);
    if (v89)
    {
LABEL_47:
      unint64_t v79 = v31;
      uint64_t v80 = (v89 - 1) & v89;
      unint64_t v81 = __clz(__rbit64(v89)) + (v86 << 6);
      int64_t v78 = v86;
LABEL_43:
      unint64_t v83 = v79[25];
      (*(void (**)(unint64_t, unint64_t, unint64_t))(v79[19] + 16))(v83, *(void *)(v82 + 48) + *(void *)(v79[19] + 72) * v81, v79[18]);
      uint64_t v84 = *(void *)(v82 + 56);
      uint64_t v85 = sub_100044014(&qword_1003F3210);
      *(void *)(v83 + *(int *)(v85 + 48)) = *(void *)(v84 + 8 * v81);
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v83, 0, 1, v85);
      swift_bridgeObjectRetain();
LABEL_62:
      v79[54] = v78;
      v79[55] = v80;
      uint64_t v93 = v79[26];
      sub_100013B50(v79[25], v93, &qword_1003F33B0);
      uint64_t v94 = sub_100044014(&qword_1003F3210);
      char v31 = v79;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v94 - 8) + 48))(v93, 1, v94) == 1)
      {
        uint64_t v104 = (uint64_t (*)(unint64_t, unint64_t))v79[52];
        unint64_t v105 = v79[33];
        unint64_t v106 = v245[27];
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        unint64_t v107 = v106;
        char v31 = v245;
        uint64_t result = v104(v105, v107);
        unint64_t v30 = v245[48];
        unint64_t v28 = v245[49];
        goto LABEL_9;
      }
      uint64_t v95 = *(void *)(v79[26] + *(int *)(v94 + 48));
      (*(void (**)(unint64_t))(v79[19] + 32))(v79[22]);
      uint64_t v0 = &qword_1003EEC20;
      if (*(void *)(v95 + 16))
      {
        sub_1000207A4(&qword_1003EE920, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
        char v31 = v245;
        uint64_t v96 = dispatch thunk of Hashable._rawHashValue(seed:)();
        uint64_t v97 = -1 << *(unsigned char *)(v95 + 32);
        unint64_t v98 = v96 & ~v97;
        if ((*(void *)(v95 + 56 + ((v98 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v98))
        {
          uint64_t v242 = ~v97;
          uint64_t v99 = *(void *)(v245[39] + 72);
          while (1)
          {
            uint64_t v100 = (void (*)(unint64_t, unint64_t))v31[46];
            unint64_t v101 = v31[40];
            unint64_t v102 = v31[38];
            ((void (*)(unint64_t, unint64_t, unint64_t))v31[43])(v101, *(void *)(v95 + 48) + v98 * v99, v102);
            sub_1000207A4(&qword_1003EEC20, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
            char v103 = dispatch thunk of static Equatable.== infix(_:_:)();
            v100(v101, v102);
            if (v103) {
              break;
            }
            unint64_t v98 = (v98 + 1) & v242;
            char v31 = v245;
            if (((*(void *)(v95 + 56 + ((v98 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v98) & 1) == 0) {
              goto LABEL_40;
            }
          }
          uint64_t v109 = v245[33];
          unint64_t v110 = v245[22];
          unint64_t v111 = v245[18];
          unint64_t v112 = v245[19];
          uint64_t v113 = v245[15];
          swift_bridgeObjectRelease();
          sub_100044014(&qword_1003F03F0);
          unint64_t v114 = (*(unsigned __int8 *)(v112 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v112 + 80);
          uint64_t v115 = swift_allocObject();
          *(_OWORD *)(v115 + 16) = xmmword_100367D70;
          (*(void (**)(unint64_t, unint64_t, unint64_t))(v112 + 16))(v115 + v114, v110, v111);
          uint64_t v116 = sub_100266F68(v113, (void (**)(char *, char *, uint64_t))v115, v109);
          v245[56] = (unint64_t)v116;
          swift_bridgeObjectRelease();
          uint64_t v117 = (void *)swift_task_alloc();
          v245[57] = (unint64_t)v117;
          *uint64_t v117 = v245;
          v117[1] = sub_1002638B8;
          uint64_t v118 = v245[33];
          return sub_1002693A8((uint64_t)v116, v118);
        }
      }
LABEL_40:
      swift_bridgeObjectRelease();
      uint64_t result = (*(uint64_t (**)(unint64_t, unint64_t))(v31[19] + 8))(v31[22], v31[18]);
      int64_t v78 = v31[54];
      unint64_t v77 = v31[55];
      continue;
    }
    break;
  }
  int64_t v90 = v78 + 2;
  ++v78;
  if (v86 + 1 >= v87) {
    goto LABEL_61;
  }
  unint64_t v89 = *(void *)(v88 + 8 * v90);
  if (v89)
  {
LABEL_50:
    int64_t v86 = v90;
    goto LABEL_47;
  }
  int64_t v78 = v86 + 1;
  if (v86 + 2 >= v87) {
    goto LABEL_61;
  }
  unint64_t v89 = *(void *)(v88 + 8 * (v86 + 2));
  if (v89)
  {
    v86 += 2;
    goto LABEL_47;
  }
  int64_t v90 = v86 + 3;
  int64_t v78 = v86 + 2;
  if (v86 + 3 >= v87)
  {
LABEL_61:
    unint64_t v91 = v31[25];
    uint64_t v92 = sub_100044014(&qword_1003F3210);
    (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56))(v91, 1, 1, v92);
    unint64_t v79 = v31;
    uint64_t v80 = 0;
    goto LABEL_62;
  }
  unint64_t v89 = *(void *)(v88 + 8 * v90);
  if (v89) {
    goto LABEL_50;
  }
  while (1)
  {
    int64_t v86 = v90 + 1;
    if (__OFADD__(v90, 1)) {
      break;
    }
    if (v86 >= v87)
    {
      int64_t v78 = v87 - 1;
      goto LABEL_61;
    }
    unint64_t v89 = *(void *)(v88 + 8 * v86);
    ++v90;
    if (v89) {
      goto LABEL_47;
    }
  }
LABEL_174:
  __break(1u);
  return result;
}

uint64_t sub_1002638B8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 464) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 136);
  if (v0) {
    unint64_t v4 = sub_1002655B0;
  }
  else {
    unint64_t v4 = sub_100263A00;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100263A00()
{
  uint64_t v220 = v0;
  BOOL v194 = (uint64_t *)(v0 + 72);
  unint64_t v195 = (void *)(v0 + 64);
  uint64_t v192 = (uint64_t *)(v0 + 88);
  os_log_type_t v193 = (void *)(v0 + 80);
  while (1)
  {
    uint64_t result = (*(uint64_t (**)(void, void))(*(void *)(v0 + 152) + 8))(*(void *)(v0 + 176), *(void *)(v0 + 144));
    int64_t v3 = *(void *)(v0 + 432);
    unint64_t v2 = *(void *)(v0 + 440);
LABEL_7:
    if (v2)
    {
      uint64_t v7 = (v2 - 1) & v2;
      unint64_t v8 = __clz(__rbit64(v2)) | (v3 << 6);
      uint64_t v9 = *(void *)(v0 + 400);
LABEL_9:
      uint64_t v10 = *(void *)(v0 + 200);
      (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v0 + 152) + 16))(v10, *(void *)(v9 + 48) + *(void *)(*(void *)(v0 + 152) + 72) * v8, *(void *)(v0 + 144));
      uint64_t v11 = *(void *)(v9 + 56);
      uint64_t v12 = sub_100044014(&qword_1003F3210);
      *(void *)(v10 + *(int *)(v12 + 48)) = *(void *)(v11 + 8 * v8);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 0, 1, v12);
      swift_bridgeObjectRetain();
      goto LABEL_28;
    }
    int64_t v13 = v3 + 1;
    if (__OFADD__(v3, 1)) {
      goto LABEL_164;
    }
    int64_t v14 = (unint64_t)((1 << *(unsigned char *)(v0 + 481)) + 63) >> 6;
    if (v13 < v14)
    {
      uint64_t v9 = *(void *)(v0 + 400);
      uint64_t v15 = v9 + 64;
      unint64_t v16 = *(void *)(v9 + 64 + 8 * v13);
      if (v16) {
        goto LABEL_13;
      }
      int64_t v17 = v3 + 2;
      ++v3;
      if (v13 + 1 < v14)
      {
        unint64_t v16 = *(void *)(v15 + 8 * v17);
        if (v16) {
          goto LABEL_16;
        }
        int64_t v3 = v13 + 1;
        if (v13 + 2 < v14)
        {
          unint64_t v16 = *(void *)(v15 + 8 * (v13 + 2));
          if (v16)
          {
            v13 += 2;
            goto LABEL_13;
          }
          int64_t v17 = v13 + 3;
          int64_t v3 = v13 + 2;
          if (v13 + 3 < v14)
          {
            unint64_t v16 = *(void *)(v15 + 8 * v17);
            if (v16)
            {
LABEL_16:
              int64_t v13 = v17;
LABEL_13:
              uint64_t v7 = (v16 - 1) & v16;
              unint64_t v8 = __clz(__rbit64(v16)) + (v13 << 6);
              int64_t v3 = v13;
              goto LABEL_9;
            }
            while (1)
            {
              int64_t v13 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_165;
              }
              if (v13 >= v14) {
                break;
              }
              unint64_t v16 = *(void *)(v15 + 8 * v13);
              ++v17;
              if (v16) {
                goto LABEL_13;
              }
            }
            int64_t v3 = v14 - 1;
          }
        }
      }
    }
    uint64_t v18 = *(void *)(v0 + 200);
    uint64_t v19 = sub_100044014(&qword_1003F3210);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
    uint64_t v7 = 0;
LABEL_28:
    *(void *)(v0 + 432) = v3;
    *(void *)(v0 + 440) = v7;
    uint64_t v20 = *(void *)(v0 + 208);
    sub_100013B50(*(void *)(v0 + 200), v20, &qword_1003F33B0);
    uint64_t v21 = sub_100044014(&qword_1003F3210);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v20, 1, v21) == 1) {
      break;
    }
    uint64_t v72 = *(void *)(*(void *)(v0 + 208) + *(int *)(v21 + 48));
    (*(void (**)(void))(*(void *)(v0 + 152) + 32))(*(void *)(v0 + 176));
    if (*(void *)(v72 + 16))
    {
      sub_1000207A4(&qword_1003EE920, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v0 = v218;
      uint64_t v73 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v74 = -1 << *(unsigned char *)(v72 + 32);
      unint64_t v75 = v73 & ~v74;
      if ((*(void *)(v72 + 56 + ((v75 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v75))
      {
        uint64_t v215 = ~v74;
        uint64_t v76 = *(void *)(*(void *)(v218 + 312) + 72);
        do
        {
          unint64_t v77 = *(void (**)(uint64_t, uint64_t))(v0 + 368);
          uint64_t v78 = *(void *)(v0 + 320);
          uint64_t v79 = *(void *)(v0 + 304);
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 344))(v78, *(void *)(v72 + 48) + v75 * v76, v79);
          sub_1000207A4(&qword_1003EEC20, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
          char v80 = dispatch thunk of static Equatable.== infix(_:_:)();
          v77(v78, v79);
          if (v80)
          {
LABEL_157:
            uint64_t v174 = *(void *)(v218 + 264);
            uint64_t v175 = *(void *)(v218 + 176);
            uint64_t v176 = *(void *)(v218 + 144);
            uint64_t v177 = *(void *)(v218 + 152);
            uint64_t v178 = *(void *)(v218 + 120);
            swift_bridgeObjectRelease();
            sub_100044014(&qword_1003F03F0);
            unint64_t v179 = (*(unsigned __int8 *)(v177 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v177 + 80);
            uint64_t v180 = swift_allocObject();
            *(_OWORD *)(v180 + 16) = xmmword_100367D70;
            (*(void (**)(unint64_t, uint64_t, uint64_t))(v177 + 16))(v180 + v179, v175, v176);
            unint64_t v181 = sub_100266F68(v178, (void (**)(char *, char *, uint64_t))v180, v174);
            *(void *)(v218 + 448) = v181;
            swift_bridgeObjectRelease();
            char v182 = (void *)swift_task_alloc();
            *(void *)(v218 + 456) = v182;
            *char v182 = v218;
            v182[1] = sub_1002638B8;
            uint64_t v183 = *(void *)(v218 + 264);
            return sub_1002693A8((uint64_t)v181, v183);
          }
          unint64_t v75 = (v75 + 1) & v215;
          uint64_t v0 = v218;
        }
        while (((*(void *)(v72 + 56 + ((v75 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v75) & 1) != 0);
      }
    }
    swift_bridgeObjectRelease();
  }
  unint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 416);
  uint64_t v23 = *(void *)(v0 + 264);
  uint64_t v24 = *(void *)(v218 + 216);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v25 = v24;
  uint64_t v26 = v218;
  uint64_t result = v22(v23, v25);
  int64_t v27 = *(void *)(v218 + 384);
  unint64_t v28 = *(void *)(v218 + 392);
  while (1)
  {
    if (v28)
    {
      unint64_t v30 = __clz(__rbit64(v28));
      v28 &= v28 - 1;
      unint64_t v31 = v30 | (v27 << 6);
      uint64_t v32 = *(void *)(v26 + 376);
LABEL_34:
      uint64_t v33 = *(void *)(v26 + 288);
      (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v26 + 224) + 16))(v33, *(void *)(v32 + 48) + *(void *)(*(void *)(v26 + 224) + 72) * v31, *(void *)(v26 + 216));
      uint64_t v34 = *(void *)(v32 + 56) + 24 * v31;
      uint64_t v35 = sub_100044014(&qword_1003F33A8);
      uint64_t v36 = v33 + *(int *)(v35 + 48);
      long long v37 = *(_OWORD *)(v34 + 8);
      *(void *)uint64_t v36 = *(void *)v34;
      *(_OWORD *)(v36 + 8) = v37;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v33, 0, 1, v35);
      swift_retain();
      swift_bridgeObjectRetain();
      goto LABEL_41;
    }
    int64_t v38 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      goto LABEL_161;
    }
    int64_t v39 = (unint64_t)((1 << *(unsigned char *)(v26 + 480)) + 63) >> 6;
    if (v38 >= v39)
    {
      int64_t v42 = v27;
    }
    else
    {
      uint64_t v32 = *(void *)(v26 + 376);
      uint64_t v40 = v32 + 64;
      unint64_t v41 = *(void *)(v32 + 64 + 8 * v38);
      if (v41) {
        goto LABEL_38;
      }
      int64_t v42 = v27 + 1;
      if (v27 + 2 < v39)
      {
        unint64_t v41 = *(void *)(v40 + 8 * (v27 + 2));
        if (v41)
        {
          int64_t v38 = v27 + 2;
LABEL_38:
          unint64_t v28 = (v41 - 1) & v41;
          unint64_t v31 = __clz(__rbit64(v41)) + (v38 << 6);
          int64_t v27 = v38;
          goto LABEL_34;
        }
        int64_t v42 = v27 + 2;
        if (v27 + 3 < v39)
        {
          unint64_t v41 = *(void *)(v40 + 8 * (v27 + 3));
          if (v41)
          {
            int64_t v38 = v27 + 3;
            goto LABEL_38;
          }
          int64_t v38 = v27 + 4;
          int64_t v42 = v27 + 3;
          if (v27 + 4 < v39)
          {
            unint64_t v41 = *(void *)(v40 + 8 * v38);
            if (v41) {
              goto LABEL_38;
            }
            int64_t v42 = v39 - 1;
            int64_t v71 = v39 - 5;
            while (v71 != v27)
            {
              unint64_t v41 = *(void *)(v32 + 104 + 8 * v27++);
              if (v41)
              {
                int64_t v38 = v27 + 4;
                goto LABEL_38;
              }
            }
          }
        }
      }
    }
    uint64_t v43 = *(void *)(v26 + 288);
    uint64_t v44 = sub_100044014(&qword_1003F33A8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v43, 1, 1, v44);
    unint64_t v28 = 0;
    int64_t v27 = v42;
LABEL_41:
    *(void *)(v26 + 384) = v27;
    *(void *)(v26 + 392) = v28;
    uint64_t v45 = *(void *)(v26 + 296);
    sub_100013B50(*(void *)(v26 + 288), v45, &qword_1003F33A0);
    uint64_t v46 = sub_100044014(&qword_1003F33A8);
    uint64_t v47 = *(void *)(v46 - 8);
    uint64_t v48 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48);
    if (v48(v45, 1, v46) == 1) {
      break;
    }
    uint64_t v49 = *(void *)(v26 + 264);
    uint64_t v50 = *(void *)(v26 + 224);
    uint64_t v51 = *(void *)(v26 + 128);
    unint64_t v52 = (uint64_t *)(*(void *)(v26 + 296) + *(int *)(v46 + 48));
    uint64_t v53 = *v52;
    *(void *)(v26 + 400) = *v52;
    *(void *)(v26 + 408) = v52[1];
    (*(void (**)(uint64_t))(v50 + 32))(v49);
    if (*(void *)(v51 + 16))
    {
      uint64_t v54 = *(void *)(v51 + 16);
      int64_t v207 = v27;
      uint64_t v209 = v53;
      unint64_t v205 = v28;
      uint64_t v55 = *(void *)(v26 + 256);
      unint64_t v56 = (void *)v26;
      uint64_t v57 = *(void *)(v26 + 224);
      uint64_t v58 = v56[27];
      uint64_t v59 = v56[16];
      unint64_t v202 = (*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
      uint64_t v214 = *(void (**)(uint64_t, unint64_t, uint64_t))(v57 + 16);
      v214(v55, v59 + v202, v58);
      sub_1000207A4(&qword_1003F0050, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
      swift_bridgeObjectRetain();
      char v60 = dispatch thunk of static Equatable.== infix(_:_:)();
      int v29 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
      v56[52] = v29;
      v56[53] = (v57 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v29(v55, v58);
      if (v60) {
        goto LABEL_3;
      }
      if (v54 == 1)
      {
        uint64_t v26 = v218;
        swift_bridgeObjectRelease();
        unint64_t v28 = v205;
      }
      else
      {
        uint64_t v61 = v54;
        uint64_t v62 = *(void *)(v218 + 256);
        uint64_t v63 = *(void *)(v218 + 216);
        uint64_t v211 = *(void *)(*(void *)(v218 + 224) + 72);
        v214(v62, v59 + v202 + v211, v63);
        char v64 = dispatch thunk of static Equatable.== infix(_:_:)();
        v29(v62, v63);
        if (v64)
        {
LABEL_3:
          uint64_t v0 = v218;
          swift_bridgeObjectRelease();
          char v4 = *(unsigned char *)(v209 + 32);
          *(unsigned char *)(v218 + 481) = v4;
          uint64_t v5 = 1 << v4;
          if (v5 < 64) {
            uint64_t v6 = ~(-1 << v5);
          }
          else {
            uint64_t v6 = -1;
          }
          unint64_t v2 = v6 & *(void *)(v209 + 64);
          uint64_t result = swift_bridgeObjectRetain();
          int64_t v3 = 0;
          goto LABEL_7;
        }
        if (v54 != 2)
        {
          unint64_t v65 = v59 + v202 + 2 * v211;
          uint64_t v66 = 2;
          while (1)
          {
            v214(*(void *)(v218 + 256), v65, *(void *)(v218 + 216));
            uint64_t v67 = v66 + 1;
            if (__OFADD__(v66, 1)) {
              break;
            }
            uint64_t v68 = *(void *)(v218 + 256);
            uint64_t v69 = *(void *)(v218 + 216);
            char v70 = dispatch thunk of static Equatable.== infix(_:_:)();
            v29(v68, v69);
            if (v70) {
              goto LABEL_3;
            }
            ++v66;
            v65 += v211;
            if (v67 == v61) {
              goto LABEL_52;
            }
          }
LABEL_156:
          __break(1u);
          goto LABEL_157;
        }
LABEL_52:
        uint64_t v26 = v218;
        swift_bridgeObjectRelease();
        unint64_t v28 = v205;
        int64_t v27 = v207;
      }
    }
    else
    {
      int v29 = *(void (**)(uint64_t, uint64_t))(*(void *)(v26 + 224) + 8);
    }
    v29(*(void *)(v26 + 264), *(void *)(v26 + 216));
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
  }
  uint64_t v191 = v48;
  uint64_t v196 = v46;
  uint64_t v81 = *(void *)(v26 + 136);
  swift_release();
  uint64_t v82 = v81 + OBJC_IVAR____TtC13findmylocated15LocationService_legacyLocationSubscriptions;
  swift_beginAccess();
  uint64_t v187 = *(void *)v82 + 64;
  uint64_t v83 = -1 << *(unsigned char *)(*(void *)v82 + 32);
  if (-v83 < 64) {
    uint64_t v84 = ~(-1 << -(char)v83);
  }
  else {
    uint64_t v84 = -1;
  }
  unint64_t v198 = v84 & *(void *)(*(void *)v82 + 64);
  unint64_t v85 = (unint64_t)(63 - v83) >> 6;
  uint64_t v190 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56);
  unint64_t v184 = v85 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v86 = 0;
  int64_t v188 = v85;
  uint64_t v189 = result;
  uint64_t v185 = result + 104;
  unint64_t v186 = v85 - 5;
  unint64_t v87 = v198;
  if (!v198) {
    goto LABEL_79;
  }
  while (2)
  {
    unint64_t v197 = v86;
    uint64_t v199 = (v87 - 1) & v87;
    unint64_t v88 = __clz(__rbit64(v87)) | (v86 << 6);
LABEL_76:
    uint64_t v89 = *(void *)(v26 + 272);
    (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v26 + 224) + 16))(v89, *(void *)(v189 + 48) + *(void *)(*(void *)(v26 + 224) + 72) * v88, *(void *)(v26 + 216));
    uint64_t v90 = *(void *)(v189 + 56) + 24 * v88;
    uint64_t v46 = v196;
    uint64_t v91 = v89 + *(int *)(v196 + 48);
    long long v92 = *(_OWORD *)(v90 + 8);
    *(void *)uint64_t v91 = *(void *)v90;
    *(_OWORD *)(v91 + 8) = v92;
    (*v190)(v89, 0, 1, v196);
    swift_retain();
    swift_bridgeObjectRetain();
LABEL_85:
    uint64_t v98 = *(void *)(v26 + 280);
    sub_100013B50(*(void *)(v26 + 272), v98, &qword_1003F33A0);
    if (v191(v98, 1, v46) == 1)
    {
      swift_release();
      uint64_t v173 = (void *)swift_task_alloc();
      *(void *)(v26 + 472) = v173;
      *uint64_t v173 = v26;
      v173[1] = sub_100265280;
      return sub_1000163A8();
    }
    uint64_t v99 = *(void *)(v26 + 128);
    uint64_t v212 = *(void *)(*(void *)(v26 + 280) + *(int *)(v46 + 48));
    (*(void (**)(void))(*(void *)(v26 + 224) + 32))(*(void *)(v26 + 248));
    uint64_t v100 = *(void *)(v99 + 16);
    if (!v100)
    {
      (*(void (**)(void, void))(*(void *)(v26 + 224) + 8))(*(void *)(v26 + 248), *(void *)(v26 + 216));
      goto LABEL_104;
    }
    uint64_t v101 = *(void *)(v26 + 240);
    uint64_t v102 = *(void *)(v26 + 216);
    uint64_t v103 = *(void *)(v26 + 224);
    uint64_t v104 = *(void *)(v26 + 128);
    uint64_t v105 = v26;
    unint64_t v216 = (*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80);
    uint64_t v201 = *(void (**)(uint64_t, unint64_t, uint64_t))(v103 + 16);
    v201(v101, v104 + v216, v102);
    sub_1000207A4(&qword_1003F0050, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
    swift_bridgeObjectRetain();
    char v106 = dispatch thunk of static Equatable.== infix(_:_:)();
    unint64_t v203 = *(void (**)(uint64_t, uint64_t))(v103 + 8);
    v203(v101, v102);
    if (v106) {
      goto LABEL_88;
    }
    if (v100 == 1)
    {
      uint64_t v26 = v218;
      swift_bridgeObjectRelease();
      uint64_t v46 = v196;
      goto LABEL_103;
    }
    uint64_t v105 = v218;
    uint64_t v107 = *(void *)(v218 + 240);
    uint64_t v108 = *(void *)(v218 + 216);
    uint64_t v109 = *(void *)(*(void *)(v218 + 224) + 72);
    v201(v107, v104 + v216 + v109, v108);
    char v110 = dispatch thunk of static Equatable.== infix(_:_:)();
    v203(v107, v108);
    if (v110)
    {
LABEL_88:
      swift_bridgeObjectRelease();
      uint64_t v26 = v105;
      goto LABEL_106;
    }
    if (v100 == 2)
    {
      uint64_t v26 = v218;
LABEL_102:
      swift_bridgeObjectRelease();
      uint64_t v46 = v196;
LABEL_103:
      v203(*(void *)(v26 + 248), *(void *)(v26 + 216));
LABEL_104:
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
LABEL_78:
      unint64_t v86 = v197;
      unint64_t v87 = v199;
      if (v199) {
        continue;
      }
LABEL_79:
      int64_t v95 = v86 + 1;
      if (__OFADD__(v86, 1)) {
        goto LABEL_162;
      }
      if (v95 >= v188)
      {
        unint64_t v97 = v86;
      }
      else
      {
        unint64_t v96 = *(void *)(v187 + 8 * v95);
        if (v96) {
          goto LABEL_82;
        }
        unint64_t v97 = v86 + 1;
        if ((uint64_t)(v86 + 2) < v188)
        {
          unint64_t v96 = *(void *)(v187 + 8 * (v86 + 2));
          if (v96)
          {
            int64_t v95 = v86 + 2;
LABEL_82:
            unint64_t v197 = v95;
            uint64_t v199 = (v96 - 1) & v96;
            unint64_t v88 = __clz(__rbit64(v96)) + (v95 << 6);
            goto LABEL_76;
          }
          unint64_t v97 = v86 + 2;
          if ((uint64_t)(v86 + 3) < v188)
          {
            unint64_t v96 = *(void *)(v187 + 8 * (v86 + 3));
            if (v96)
            {
              int64_t v95 = v86 + 3;
              goto LABEL_82;
            }
            int64_t v95 = v86 + 4;
            unint64_t v97 = v86 + 3;
            if ((uint64_t)(v86 + 4) < v188)
            {
              unint64_t v96 = *(void *)(v187 + 8 * v95);
              if (v96) {
                goto LABEL_82;
              }
              while (v186 != v86)
              {
                unint64_t v96 = *(void *)(v185 + 8 * v86++);
                if (v96)
                {
                  int64_t v95 = v86 + 4;
                  goto LABEL_82;
                }
              }
              unint64_t v97 = v184;
            }
          }
        }
      }
      (*v190)(*(void *)(v26 + 272), 1, 1, v46);
      unint64_t v197 = v97;
      uint64_t v199 = 0;
      goto LABEL_85;
    }
    break;
  }
  uint64_t v111 = v104 + v216 + 2 * v109;
  uint64_t v112 = 2;
  uint64_t v26 = v218;
  while (1)
  {
    uint64_t result = ((uint64_t (*)(void, uint64_t, void))v201)(*(void *)(v26 + 240), v111, *(void *)(v26 + 216));
    uint64_t v113 = v112 + 1;
    if (__OFADD__(v112, 1))
    {
      __break(1u);
LABEL_161:
      __break(1u);
LABEL_162:
      __break(1u);
      goto LABEL_163;
    }
    uint64_t v114 = v26;
    uint64_t v115 = *(void *)(v26 + 240);
    uint64_t v116 = *(void *)(v114 + 216);
    char v117 = dispatch thunk of static Equatable.== infix(_:_:)();
    v203(v115, v116);
    if (v117) {
      break;
    }
    ++v112;
    v111 += v109;
    uint64_t v26 = v218;
    if (v113 == v100) {
      goto LABEL_102;
    }
  }
  uint64_t v26 = v218;
  swift_bridgeObjectRelease();
LABEL_106:
  uint64_t v200 = v212 + 64;
  uint64_t v118 = -1 << *(unsigned char *)(v212 + 32);
  if (-v118 < 64) {
    uint64_t v119 = ~(-1 << -(char)v118);
  }
  else {
    uint64_t v119 = -1;
  }
  unint64_t v120 = v119 & *(void *)(v212 + 64);
  int64_t v210 = (unint64_t)(63 - v118) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v213 = 0;
  while (2)
  {
    if (v120)
    {
      unint64_t v124 = __clz(__rbit64(v120));
      uint64_t v125 = (v120 - 1) & v120;
      unint64_t v126 = v124 | (v213 << 6);
      goto LABEL_114;
    }
    int64_t v130 = v213 + 1;
    if (__OFADD__(v213, 1))
    {
      __break(1u);
      goto LABEL_156;
    }
    if (v130 >= v210) {
      goto LABEL_132;
    }
    unint64_t v131 = *(void *)(v200 + 8 * v130);
    if (v131)
    {
LABEL_118:
      uint64_t v125 = (v131 - 1) & v131;
      unint64_t v126 = __clz(__rbit64(v131)) + (v130 << 6);
      int64_t v213 = v130;
LABEL_114:
      uint64_t v127 = *(void *)(v26 + 184);
      (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v26 + 152) + 16))(v127, *(void *)(v212 + 48) + *(void *)(*(void *)(v26 + 152) + 72) * v126, *(void *)(v26 + 144));
      uint64_t v128 = *(void *)(v212 + 56);
      uint64_t v129 = sub_100044014(&qword_1003F3210);
      *(void *)(v127 + *(int *)(v129 + 48)) = *(void *)(v128 + 8 * v126);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v129 - 8) + 56))(v127, 0, 1, v129);
      swift_bridgeObjectRetain();
LABEL_133:
      uint64_t v135 = *(void *)(v26 + 192);
      sub_100013B50(*(void *)(v26 + 184), v135, &qword_1003F33B0);
      uint64_t v136 = sub_100044014(&qword_1003F3210);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v136 - 8) + 48))(v135, 1, v136) == 1)
      {
        uint64_t v93 = *(void *)(v26 + 248);
        uint64_t v94 = *(void *)(v26 + 216);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v203)(v93, v94);
        uint64_t v46 = v196;
        goto LABEL_78;
      }
      unint64_t v217 = v125;
      uint64_t v137 = *(void *)(*(void *)(v26 + 192) + *(int *)(v136 + 48));
      (*(void (**)(void))(*(void *)(v26 + 152) + 32))(*(void *)(v26 + 168));
      if (*(void *)(v137 + 16)
        && (sub_1000207A4(&qword_1003EE920, 255, (void (*)(uint64_t))&type metadata accessor for UUID),
            uint64_t v26 = v218,
            uint64_t v138 = dispatch thunk of Hashable._rawHashValue(seed:)(),
            uint64_t v139 = -1 << *(unsigned char *)(v137 + 32),
            unint64_t v140 = v138 & ~v139,
            ((*(void *)(v137 + 56 + ((v140 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v140) & 1) != 0))
      {
        uint64_t v141 = ~v139;
        uint64_t v142 = *(void *)(*(void *)(v218 + 312) + 72);
        while (1)
        {
          char v143 = *(void (**)(uint64_t, uint64_t))(v26 + 368);
          uint64_t v144 = *(void *)(v26 + 320);
          uint64_t v145 = *(void *)(v26 + 304);
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v26 + 344))(v144, *(void *)(v137 + 48) + v140 * v142, v145);
          sub_1000207A4(&qword_1003EEC20, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
          char v146 = dispatch thunk of static Equatable.== infix(_:_:)();
          v143(v144, v145);
          if (v146) {
            break;
          }
          unint64_t v140 = (v140 + 1) & v141;
          uint64_t v26 = v218;
          if (((*(void *)(v137 + 56 + ((v140 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v140) & 1) == 0) {
            goto LABEL_110;
          }
        }
        uint64_t v26 = v218;
        uint64_t v147 = *(void *)(v218 + 248);
        uint64_t v204 = *(void *)(v218 + 232);
        uint64_t v206 = *(void *)(v218 + 216);
        unint64_t v149 = *(void *)(v218 + 160);
        uint64_t v148 = *(void *)(v218 + 168);
        uint64_t v151 = *(void *)(v218 + 144);
        uint64_t v150 = *(void *)(v218 + 152);
        uint64_t v152 = *(void *)(v218 + 120);
        swift_bridgeObjectRelease();
        sub_100044014(&qword_1003F03F0);
        unint64_t v153 = (*(unsigned __int8 *)(v150 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v150 + 80);
        uint64_t v154 = swift_allocObject();
        *(_OWORD *)(v154 + 16) = xmmword_100367D70;
        unint64_t v155 = v154 + v153;
        uint64_t v156 = *(void (**)(unint64_t, uint64_t, uint64_t))(v150 + 16);
        v156(v155, v148, v151);
        sub_10028ACC8(v152, v154, v147);
        swift_bridgeObjectRelease();
        v156(v149, v148, v151);
        v201(v204, v147, v206);
        unint64_t v157 = Logger.logObject.getter();
        os_log_type_t v158 = static os_log_type_t.default.getter();
        BOOL v159 = os_log_type_enabled(v157, v158);
        uint64_t v160 = *(void *)(v218 + 232);
        uint64_t v161 = *(void *)(v218 + 216);
        uint64_t v162 = *(void *)(v218 + 160);
        uint64_t v163 = *(void *)(v218 + 168);
        uint64_t v165 = *(void *)(v218 + 144);
        uint64_t v164 = *(void *)(v218 + 152);
        if (v159)
        {
          uint64_t v208 = *(void *)(v218 + 168);
          uint64_t v166 = swift_slowAlloc();
          v219[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v166 = 141558787;
          *unint64_t v195 = 1752392040;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v166 + 12) = 2081;
          uint64_t v167 = Handle.identifier.getter();
          *BOOL v194 = sub_100037004(v167, v168, v219);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          int64_t v169 = *(void (**)(uint64_t, uint64_t))(v164 + 8);
          v169(v162, v165);
          *(_WORD *)(v166 + 22) = 2160;
          *os_log_type_t v193 = 1752392040;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v166 + 32) = 2081;
          sub_1000207A4(&qword_1003F3330, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
          uint64_t v170 = dispatch thunk of CustomStringConvertible.description.getter();
          *uint64_t v192 = sub_100037004(v170, v171, v219);
          uint64_t v26 = v218;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          v203(v160, v161);
          _os_log_impl((void *)&_mh_execute_header, v157, v158, "remove legacy subscription for handle: %{private,mask.hash}s with priority: %{private,mask.hash}s", (uint8_t *)v166, 0x2Au);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v169)(v208, v165);
        }
        else
        {

          v203(v160, v161);
          uint64_t v172 = *(void (**)(uint64_t, uint64_t))(v164 + 8);
          v172(v162, v165);
          uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v172)(v163, v165);
        }
      }
      else
      {
LABEL_110:
        uint64_t v121 = *(void *)(v26 + 168);
        uint64_t v123 = *(void *)(v26 + 144);
        uint64_t v122 = *(void *)(v26 + 152);
        swift_bridgeObjectRelease();
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v122 + 8))(v121, v123);
      }
      unint64_t v120 = v217;
      continue;
    }
    break;
  }
  int64_t v132 = v213 + 2;
  ++v213;
  if (v130 + 1 >= v210) {
    goto LABEL_132;
  }
  unint64_t v131 = *(void *)(v200 + 8 * v132);
  if (v131)
  {
LABEL_121:
    int64_t v130 = v132;
    goto LABEL_118;
  }
  int64_t v213 = v130 + 1;
  if (v130 + 2 >= v210) {
    goto LABEL_132;
  }
  unint64_t v131 = *(void *)(v200 + 8 * (v130 + 2));
  if (v131)
  {
    v130 += 2;
    goto LABEL_118;
  }
  int64_t v132 = v130 + 3;
  int64_t v213 = v130 + 2;
  if (v130 + 3 >= v210)
  {
LABEL_132:
    uint64_t v133 = *(void *)(v26 + 184);
    uint64_t v134 = sub_100044014(&qword_1003F3210);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v134 - 8) + 56))(v133, 1, 1, v134);
    uint64_t v125 = 0;
    goto LABEL_133;
  }
  unint64_t v131 = *(void *)(v200 + 8 * v132);
  if (v131) {
    goto LABEL_121;
  }
  while (1)
  {
    int64_t v130 = v132 + 1;
    if (__OFADD__(v132, 1)) {
      break;
    }
    if (v130 >= v210)
    {
      int64_t v213 = v210 - 1;
      goto LABEL_132;
    }
    unint64_t v131 = *(void *)(v200 + 8 * v130);
    ++v132;
    if (v131) {
      goto LABEL_118;
    }
  }
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
  return result;
}

uint64_t sub_100265280(char a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 136);
  *(unsigned char *)(*(void *)v1 + 482) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100265398, v2, 0);
}

uint64_t sub_100265398()
{
  if ((*(unsigned char *)(v0 + 482) & 1) == 0)
  {
    uint64_t v1 = *(void *)(v0 + 136);
    uint64_t v2 = OBJC_IVAR____TtC13findmylocated15LocationService_legacyLocationTask;
    if (*(void *)(v1 + OBJC_IVAR____TtC13findmylocated15LocationService_legacyLocationTask))
    {
      swift_retain();
      Task.cancel()();
      swift_release();
    }
    *(void *)(v1 + v2) = 0;
    swift_release();
    int64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Cancel next legacy location refresh task", v5, 2u);
      swift_slowDealloc();
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1002655B0()
{
  uint64_t v225 = v0;
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    int64_t v3 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)int64_t v3 = 138543362;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 96) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *os_log_type_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error from unsubscribe: %{public}@", v3, 0xCu);
    sub_100044014(&qword_1003ECCC8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v199 = (uint64_t *)(v0 + 72);
  uint64_t v200 = (void *)(v0 + 64);
  unint64_t v197 = (uint64_t *)(v0 + 88);
  unint64_t v198 = (void *)(v0 + 80);
  swift_errorRelease();
  uint64_t v223 = v0;
  while (1)
  {
    uint64_t result = (*(uint64_t (**)(void, void))(*(void *)(v0 + 152) + 8))(*(void *)(v0 + 176), *(void *)(v0 + 144));
    int64_t v8 = *(void *)(v0 + 432);
    unint64_t v7 = *(void *)(v0 + 440);
LABEL_10:
    if (v7)
    {
      uint64_t v12 = (v7 - 1) & v7;
      unint64_t v13 = __clz(__rbit64(v7)) | (v8 << 6);
      uint64_t v14 = *(void *)(v0 + 400);
LABEL_12:
      uint64_t v15 = *(void *)(v0 + 200);
      (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v0 + 152) + 16))(v15, *(void *)(v14 + 48) + *(void *)(*(void *)(v0 + 152) + 72) * v13, *(void *)(v0 + 144));
      uint64_t v16 = *(void *)(v14 + 56);
      uint64_t v17 = sub_100044014(&qword_1003F3210);
      *(void *)(v15 + *(int *)(v17 + 48)) = *(void *)(v16 + 8 * v13);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v15, 0, 1, v17);
      swift_bridgeObjectRetain();
      goto LABEL_31;
    }
    int64_t v18 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_167;
    }
    int64_t v19 = (unint64_t)((1 << *(unsigned char *)(v0 + 481)) + 63) >> 6;
    if (v18 < v19)
    {
      uint64_t v14 = *(void *)(v0 + 400);
      uint64_t v20 = v14 + 64;
      unint64_t v21 = *(void *)(v14 + 64 + 8 * v18);
      if (v21) {
        goto LABEL_16;
      }
      int64_t v22 = v8 + 2;
      ++v8;
      if (v18 + 1 < v19)
      {
        unint64_t v21 = *(void *)(v20 + 8 * v22);
        if (v21) {
          goto LABEL_19;
        }
        int64_t v8 = v18 + 1;
        if (v18 + 2 < v19)
        {
          unint64_t v21 = *(void *)(v20 + 8 * (v18 + 2));
          if (v21)
          {
            v18 += 2;
            goto LABEL_16;
          }
          int64_t v22 = v18 + 3;
          int64_t v8 = v18 + 2;
          if (v18 + 3 < v19)
          {
            unint64_t v21 = *(void *)(v20 + 8 * v22);
            if (v21)
            {
LABEL_19:
              int64_t v18 = v22;
LABEL_16:
              uint64_t v12 = (v21 - 1) & v21;
              unint64_t v13 = __clz(__rbit64(v21)) + (v18 << 6);
              int64_t v8 = v18;
              goto LABEL_12;
            }
            while (1)
            {
              int64_t v18 = v22 + 1;
              if (__OFADD__(v22, 1)) {
                goto LABEL_168;
              }
              if (v18 >= v19) {
                break;
              }
              unint64_t v21 = *(void *)(v20 + 8 * v18);
              ++v22;
              if (v21) {
                goto LABEL_16;
              }
            }
            int64_t v8 = v19 - 1;
          }
        }
      }
    }
    uint64_t v23 = *(void *)(v0 + 200);
    uint64_t v24 = sub_100044014(&qword_1003F3210);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
    uint64_t v12 = 0;
LABEL_31:
    *(void *)(v0 + 432) = v8;
    *(void *)(v0 + 440) = v12;
    uint64_t v25 = *(void *)(v0 + 208);
    sub_100013B50(*(void *)(v0 + 200), v25, &qword_1003F33B0);
    uint64_t v26 = sub_100044014(&qword_1003F3210);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v25, 1, v26) == 1) {
      break;
    }
    uint64_t v77 = *(void *)(*(void *)(v0 + 208) + *(int *)(v26 + 48));
    (*(void (**)(void))(*(void *)(v0 + 152) + 32))(*(void *)(v0 + 176));
    if (*(void *)(v77 + 16))
    {
      sub_1000207A4(&qword_1003EE920, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v0 = v223;
      uint64_t v78 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v79 = -1 << *(unsigned char *)(v77 + 32);
      unint64_t v80 = v78 & ~v79;
      if ((*(void *)(v77 + 56 + ((v80 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v80))
      {
        uint64_t v220 = ~v79;
        uint64_t v81 = *(void *)(*(void *)(v223 + 312) + 72);
        do
        {
          uint64_t v82 = *(void (**)(uint64_t, uint64_t))(v0 + 368);
          uint64_t v83 = *(void *)(v0 + 320);
          uint64_t v84 = *(void *)(v0 + 304);
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 344))(v83, *(void *)(v77 + 48) + v80 * v81, v84);
          sub_1000207A4(&qword_1003EEC20, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
          char v85 = dispatch thunk of static Equatable.== infix(_:_:)();
          v82(v83, v84);
          if (v85)
          {
LABEL_160:
            uint64_t v179 = *(void *)(v223 + 264);
            uint64_t v180 = *(void *)(v223 + 176);
            uint64_t v181 = *(void *)(v223 + 144);
            uint64_t v182 = *(void *)(v223 + 152);
            uint64_t v183 = *(void *)(v223 + 120);
            swift_bridgeObjectRelease();
            sub_100044014(&qword_1003F03F0);
            unint64_t v184 = (*(unsigned __int8 *)(v182 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v182 + 80);
            uint64_t v185 = swift_allocObject();
            *(_OWORD *)(v185 + 16) = xmmword_100367D70;
            (*(void (**)(unint64_t, uint64_t, uint64_t))(v182 + 16))(v185 + v184, v180, v181);
            unint64_t v186 = sub_100266F68(v183, (void (**)(char *, char *, uint64_t))v185, v179);
            *(void *)(v223 + 448) = v186;
            swift_bridgeObjectRelease();
            uint64_t v187 = (void *)swift_task_alloc();
            *(void *)(v223 + 456) = v187;
            *uint64_t v187 = v223;
            v187[1] = sub_1002638B8;
            uint64_t v188 = *(void *)(v223 + 264);
            return sub_1002693A8((uint64_t)v186, v188);
          }
          unint64_t v80 = (v80 + 1) & v220;
          uint64_t v0 = v223;
        }
        while (((*(void *)(v77 + 56 + ((v80 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v80) & 1) != 0);
      }
    }
    swift_bridgeObjectRelease();
  }
  int64_t v27 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 416);
  uint64_t v28 = *(void *)(v0 + 264);
  uint64_t v29 = *(void *)(v223 + 216);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v30 = v29;
  uint64_t v31 = v223;
  uint64_t result = v27(v28, v30);
  int64_t v32 = *(void *)(v223 + 384);
  unint64_t v33 = *(void *)(v223 + 392);
  while (1)
  {
    if (v33)
    {
      unint64_t v35 = __clz(__rbit64(v33));
      v33 &= v33 - 1;
      unint64_t v36 = v35 | (v32 << 6);
      uint64_t v37 = *(void *)(v31 + 376);
LABEL_37:
      uint64_t v38 = *(void *)(v31 + 288);
      (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v31 + 224) + 16))(v38, *(void *)(v37 + 48) + *(void *)(*(void *)(v31 + 224) + 72) * v36, *(void *)(v31 + 216));
      uint64_t v39 = *(void *)(v37 + 56) + 24 * v36;
      uint64_t v40 = sub_100044014(&qword_1003F33A8);
      uint64_t v41 = v38 + *(int *)(v40 + 48);
      long long v42 = *(_OWORD *)(v39 + 8);
      *(void *)uint64_t v41 = *(void *)v39;
      *(_OWORD *)(v41 + 8) = v42;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v38, 0, 1, v40);
      swift_retain();
      swift_bridgeObjectRetain();
      goto LABEL_44;
    }
    int64_t v43 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      goto LABEL_164;
    }
    int64_t v44 = (unint64_t)((1 << *(unsigned char *)(v31 + 480)) + 63) >> 6;
    if (v43 >= v44)
    {
      int64_t v47 = v32;
    }
    else
    {
      uint64_t v37 = *(void *)(v31 + 376);
      uint64_t v45 = v37 + 64;
      unint64_t v46 = *(void *)(v37 + 64 + 8 * v43);
      if (v46) {
        goto LABEL_41;
      }
      int64_t v47 = v32 + 1;
      if (v32 + 2 < v44)
      {
        unint64_t v46 = *(void *)(v45 + 8 * (v32 + 2));
        if (v46)
        {
          int64_t v43 = v32 + 2;
LABEL_41:
          unint64_t v33 = (v46 - 1) & v46;
          unint64_t v36 = __clz(__rbit64(v46)) + (v43 << 6);
          int64_t v32 = v43;
          goto LABEL_37;
        }
        int64_t v47 = v32 + 2;
        if (v32 + 3 < v44)
        {
          unint64_t v46 = *(void *)(v45 + 8 * (v32 + 3));
          if (v46)
          {
            int64_t v43 = v32 + 3;
            goto LABEL_41;
          }
          int64_t v43 = v32 + 4;
          int64_t v47 = v32 + 3;
          if (v32 + 4 < v44)
          {
            unint64_t v46 = *(void *)(v45 + 8 * v43);
            if (v46) {
              goto LABEL_41;
            }
            int64_t v47 = v44 - 1;
            int64_t v76 = v44 - 5;
            while (v76 != v32)
            {
              unint64_t v46 = *(void *)(v37 + 104 + 8 * v32++);
              if (v46)
              {
                int64_t v43 = v32 + 4;
                goto LABEL_41;
              }
            }
          }
        }
      }
    }
    uint64_t v48 = *(void *)(v31 + 288);
    uint64_t v49 = sub_100044014(&qword_1003F33A8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v48, 1, 1, v49);
    unint64_t v33 = 0;
    int64_t v32 = v47;
LABEL_44:
    *(void *)(v31 + 384) = v32;
    *(void *)(v31 + 392) = v33;
    uint64_t v50 = *(void *)(v31 + 296);
    sub_100013B50(*(void *)(v31 + 288), v50, &qword_1003F33A0);
    uint64_t v51 = sub_100044014(&qword_1003F33A8);
    uint64_t v52 = *(void *)(v51 - 8);
    uint64_t v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
    if (v53(v50, 1, v51) == 1) {
      break;
    }
    uint64_t v54 = *(void *)(v31 + 264);
    uint64_t v55 = *(void *)(v31 + 224);
    uint64_t v56 = *(void *)(v31 + 128);
    uint64_t v57 = (uint64_t *)(*(void *)(v31 + 296) + *(int *)(v51 + 48));
    uint64_t v58 = *v57;
    *(void *)(v31 + 400) = *v57;
    *(void *)(v31 + 408) = v57[1];
    (*(void (**)(uint64_t))(v55 + 32))(v54);
    if (*(void *)(v56 + 16))
    {
      uint64_t v59 = *(void *)(v56 + 16);
      int64_t v212 = v32;
      uint64_t v214 = v58;
      unint64_t v210 = v33;
      uint64_t v60 = *(void *)(v31 + 256);
      uint64_t v61 = (void *)v31;
      uint64_t v62 = *(void *)(v31 + 224);
      uint64_t v63 = v61[27];
      uint64_t v64 = v61[16];
      unint64_t v207 = (*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
      unint64_t v219 = *(void (**)(uint64_t, unint64_t, uint64_t))(v62 + 16);
      v219(v60, v64 + v207, v63);
      sub_1000207A4(&qword_1003F0050, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
      swift_bridgeObjectRetain();
      char v65 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v62 + 8);
      v61[52] = v34;
      v61[53] = (v62 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v34(v60, v63);
      if (v65) {
        goto LABEL_6;
      }
      if (v59 == 1)
      {
        uint64_t v31 = v223;
        swift_bridgeObjectRelease();
        unint64_t v33 = v210;
      }
      else
      {
        uint64_t v66 = v59;
        uint64_t v67 = *(void *)(v223 + 256);
        uint64_t v68 = *(void *)(v223 + 216);
        uint64_t v216 = *(void *)(*(void *)(v223 + 224) + 72);
        v219(v67, v64 + v207 + v216, v68);
        char v69 = dispatch thunk of static Equatable.== infix(_:_:)();
        v34(v67, v68);
        if (v69)
        {
LABEL_6:
          uint64_t v0 = v223;
          swift_bridgeObjectRelease();
          char v9 = *(unsigned char *)(v214 + 32);
          *(unsigned char *)(v223 + 481) = v9;
          uint64_t v10 = 1 << v9;
          if (v10 < 64) {
            uint64_t v11 = ~(-1 << v10);
          }
          else {
            uint64_t v11 = -1;
          }
          unint64_t v7 = v11 & *(void *)(v214 + 64);
          uint64_t result = swift_bridgeObjectRetain();
          int64_t v8 = 0;
          goto LABEL_10;
        }
        if (v59 != 2)
        {
          unint64_t v70 = v64 + v207 + 2 * v216;
          uint64_t v71 = 2;
          while (1)
          {
            v219(*(void *)(v223 + 256), v70, *(void *)(v223 + 216));
            uint64_t v72 = v71 + 1;
            if (__OFADD__(v71, 1)) {
              break;
            }
            uint64_t v73 = *(void *)(v223 + 256);
            uint64_t v74 = *(void *)(v223 + 216);
            char v75 = dispatch thunk of static Equatable.== infix(_:_:)();
            v34(v73, v74);
            if (v75) {
              goto LABEL_6;
            }
            ++v71;
            v70 += v216;
            if (v72 == v66) {
              goto LABEL_55;
            }
          }
LABEL_159:
          __break(1u);
          goto LABEL_160;
        }
LABEL_55:
        uint64_t v31 = v223;
        swift_bridgeObjectRelease();
        unint64_t v33 = v210;
        int64_t v32 = v212;
      }
    }
    else
    {
      uint64_t v34 = *(void (**)(uint64_t, uint64_t))(*(void *)(v31 + 224) + 8);
    }
    v34(*(void *)(v31 + 264), *(void *)(v31 + 216));
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
  }
  uint64_t v196 = v53;
  uint64_t v201 = v51;
  uint64_t v86 = *(void *)(v31 + 136);
  swift_release();
  uint64_t v87 = v86 + OBJC_IVAR____TtC13findmylocated15LocationService_legacyLocationSubscriptions;
  swift_beginAccess();
  uint64_t v192 = *(void *)v87 + 64;
  uint64_t v88 = -1 << *(unsigned char *)(*(void *)v87 + 32);
  if (-v88 < 64) {
    uint64_t v89 = ~(-1 << -(char)v88);
  }
  else {
    uint64_t v89 = -1;
  }
  unint64_t v203 = v89 & *(void *)(*(void *)v87 + 64);
  unint64_t v90 = (unint64_t)(63 - v88) >> 6;
  unint64_t v195 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56);
  unint64_t v189 = v90 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v91 = 0;
  int64_t v193 = v90;
  uint64_t v194 = result;
  uint64_t v190 = result + 104;
  unint64_t v191 = v90 - 5;
  unint64_t v92 = v203;
  if (!v203) {
    goto LABEL_82;
  }
  while (2)
  {
    unint64_t v202 = v91;
    uint64_t v204 = (v92 - 1) & v92;
    unint64_t v93 = __clz(__rbit64(v92)) | (v91 << 6);
LABEL_79:
    uint64_t v94 = *(void *)(v31 + 272);
    (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v31 + 224) + 16))(v94, *(void *)(v194 + 48) + *(void *)(*(void *)(v31 + 224) + 72) * v93, *(void *)(v31 + 216));
    uint64_t v95 = *(void *)(v194 + 56) + 24 * v93;
    uint64_t v51 = v201;
    uint64_t v96 = v94 + *(int *)(v201 + 48);
    long long v97 = *(_OWORD *)(v95 + 8);
    *(void *)uint64_t v96 = *(void *)v95;
    *(_OWORD *)(v96 + 8) = v97;
    (*v195)(v94, 0, 1, v201);
    swift_retain();
    swift_bridgeObjectRetain();
LABEL_88:
    uint64_t v103 = *(void *)(v31 + 280);
    sub_100013B50(*(void *)(v31 + 272), v103, &qword_1003F33A0);
    if (v196(v103, 1, v51) == 1)
    {
      swift_release();
      uint64_t v178 = (void *)swift_task_alloc();
      *(void *)(v31 + 472) = v178;
      *uint64_t v178 = v31;
      v178[1] = sub_100265280;
      return sub_1000163A8();
    }
    uint64_t v104 = *(void *)(v31 + 128);
    uint64_t v217 = *(void *)(*(void *)(v31 + 280) + *(int *)(v51 + 48));
    (*(void (**)(void))(*(void *)(v31 + 224) + 32))(*(void *)(v31 + 248));
    uint64_t v105 = *(void *)(v104 + 16);
    if (!v105)
    {
      (*(void (**)(void, void))(*(void *)(v31 + 224) + 8))(*(void *)(v31 + 248), *(void *)(v31 + 216));
      goto LABEL_107;
    }
    uint64_t v106 = *(void *)(v31 + 240);
    uint64_t v107 = *(void *)(v31 + 216);
    uint64_t v108 = *(void *)(v31 + 224);
    uint64_t v109 = *(void *)(v31 + 128);
    uint64_t v110 = v31;
    unint64_t v221 = (*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80);
    uint64_t v206 = *(void (**)(uint64_t, unint64_t, uint64_t))(v108 + 16);
    v206(v106, v109 + v221, v107);
    sub_1000207A4(&qword_1003F0050, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
    swift_bridgeObjectRetain();
    char v111 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v208 = *(void (**)(uint64_t, uint64_t))(v108 + 8);
    v208(v106, v107);
    if (v111) {
      goto LABEL_91;
    }
    if (v105 == 1)
    {
      uint64_t v31 = v223;
      swift_bridgeObjectRelease();
      uint64_t v51 = v201;
      goto LABEL_106;
    }
    uint64_t v110 = v223;
    uint64_t v112 = *(void *)(v223 + 240);
    uint64_t v113 = *(void *)(v223 + 216);
    uint64_t v114 = *(void *)(*(void *)(v223 + 224) + 72);
    v206(v112, v109 + v221 + v114, v113);
    char v115 = dispatch thunk of static Equatable.== infix(_:_:)();
    v208(v112, v113);
    if (v115)
    {
LABEL_91:
      swift_bridgeObjectRelease();
      uint64_t v31 = v110;
      goto LABEL_109;
    }
    if (v105 == 2)
    {
      uint64_t v31 = v223;
LABEL_105:
      swift_bridgeObjectRelease();
      uint64_t v51 = v201;
LABEL_106:
      v208(*(void *)(v31 + 248), *(void *)(v31 + 216));
LABEL_107:
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
LABEL_81:
      unint64_t v91 = v202;
      unint64_t v92 = v204;
      if (v204) {
        continue;
      }
LABEL_82:
      int64_t v100 = v91 + 1;
      if (__OFADD__(v91, 1)) {
        goto LABEL_165;
      }
      if (v100 >= v193)
      {
        unint64_t v102 = v91;
      }
      else
      {
        unint64_t v101 = *(void *)(v192 + 8 * v100);
        if (v101) {
          goto LABEL_85;
        }
        unint64_t v102 = v91 + 1;
        if ((uint64_t)(v91 + 2) < v193)
        {
          unint64_t v101 = *(void *)(v192 + 8 * (v91 + 2));
          if (v101)
          {
            int64_t v100 = v91 + 2;
LABEL_85:
            unint64_t v202 = v100;
            uint64_t v204 = (v101 - 1) & v101;
            unint64_t v93 = __clz(__rbit64(v101)) + (v100 << 6);
            goto LABEL_79;
          }
          unint64_t v102 = v91 + 2;
          if ((uint64_t)(v91 + 3) < v193)
          {
            unint64_t v101 = *(void *)(v192 + 8 * (v91 + 3));
            if (v101)
            {
              int64_t v100 = v91 + 3;
              goto LABEL_85;
            }
            int64_t v100 = v91 + 4;
            unint64_t v102 = v91 + 3;
            if ((uint64_t)(v91 + 4) < v193)
            {
              unint64_t v101 = *(void *)(v192 + 8 * v100);
              if (v101) {
                goto LABEL_85;
              }
              while (v191 != v91)
              {
                unint64_t v101 = *(void *)(v190 + 8 * v91++);
                if (v101)
                {
                  int64_t v100 = v91 + 4;
                  goto LABEL_85;
                }
              }
              unint64_t v102 = v189;
            }
          }
        }
      }
      (*v195)(*(void *)(v31 + 272), 1, 1, v51);
      unint64_t v202 = v102;
      uint64_t v204 = 0;
      goto LABEL_88;
    }
    break;
  }
  uint64_t v116 = v109 + v221 + 2 * v114;
  uint64_t v117 = 2;
  uint64_t v31 = v223;
  while (1)
  {
    uint64_t result = ((uint64_t (*)(void, uint64_t, void))v206)(*(void *)(v31 + 240), v116, *(void *)(v31 + 216));
    uint64_t v118 = v117 + 1;
    if (__OFADD__(v117, 1))
    {
      __break(1u);
LABEL_164:
      __break(1u);
LABEL_165:
      __break(1u);
      goto LABEL_166;
    }
    uint64_t v119 = v31;
    uint64_t v120 = *(void *)(v31 + 240);
    uint64_t v121 = *(void *)(v119 + 216);
    char v122 = dispatch thunk of static Equatable.== infix(_:_:)();
    v208(v120, v121);
    if (v122) {
      break;
    }
    ++v117;
    v116 += v114;
    uint64_t v31 = v223;
    if (v118 == v105) {
      goto LABEL_105;
    }
  }
  uint64_t v31 = v223;
  swift_bridgeObjectRelease();
LABEL_109:
  uint64_t v205 = v217 + 64;
  uint64_t v123 = -1 << *(unsigned char *)(v217 + 32);
  if (-v123 < 64) {
    uint64_t v124 = ~(-1 << -(char)v123);
  }
  else {
    uint64_t v124 = -1;
  }
  unint64_t v125 = v124 & *(void *)(v217 + 64);
  int64_t v215 = (unint64_t)(63 - v123) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v218 = 0;
  while (2)
  {
    if (v125)
    {
      unint64_t v129 = __clz(__rbit64(v125));
      uint64_t v130 = (v125 - 1) & v125;
      unint64_t v131 = v129 | (v218 << 6);
      goto LABEL_117;
    }
    int64_t v135 = v218 + 1;
    if (__OFADD__(v218, 1))
    {
      __break(1u);
      goto LABEL_159;
    }
    if (v135 >= v215) {
      goto LABEL_135;
    }
    unint64_t v136 = *(void *)(v205 + 8 * v135);
    if (v136)
    {
LABEL_121:
      uint64_t v130 = (v136 - 1) & v136;
      unint64_t v131 = __clz(__rbit64(v136)) + (v135 << 6);
      int64_t v218 = v135;
LABEL_117:
      uint64_t v132 = *(void *)(v31 + 184);
      (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v31 + 152) + 16))(v132, *(void *)(v217 + 48) + *(void *)(*(void *)(v31 + 152) + 72) * v131, *(void *)(v31 + 144));
      uint64_t v133 = *(void *)(v217 + 56);
      uint64_t v134 = sub_100044014(&qword_1003F3210);
      *(void *)(v132 + *(int *)(v134 + 48)) = *(void *)(v133 + 8 * v131);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v134 - 8) + 56))(v132, 0, 1, v134);
      swift_bridgeObjectRetain();
LABEL_136:
      uint64_t v140 = *(void *)(v31 + 192);
      sub_100013B50(*(void *)(v31 + 184), v140, &qword_1003F33B0);
      uint64_t v141 = sub_100044014(&qword_1003F3210);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v141 - 8) + 48))(v140, 1, v141) == 1)
      {
        uint64_t v98 = *(void *)(v31 + 248);
        uint64_t v99 = *(void *)(v31 + 216);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v208)(v98, v99);
        uint64_t v51 = v201;
        goto LABEL_81;
      }
      unint64_t v222 = v130;
      uint64_t v142 = *(void *)(*(void *)(v31 + 192) + *(int *)(v141 + 48));
      (*(void (**)(void))(*(void *)(v31 + 152) + 32))(*(void *)(v31 + 168));
      if (*(void *)(v142 + 16)
        && (sub_1000207A4(&qword_1003EE920, 255, (void (*)(uint64_t))&type metadata accessor for UUID),
            uint64_t v31 = v223,
            uint64_t v143 = dispatch thunk of Hashable._rawHashValue(seed:)(),
            uint64_t v144 = -1 << *(unsigned char *)(v142 + 32),
            unint64_t v145 = v143 & ~v144,
            ((*(void *)(v142 + 56 + ((v145 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v145) & 1) != 0))
      {
        uint64_t v146 = ~v144;
        uint64_t v147 = *(void *)(*(void *)(v223 + 312) + 72);
        while (1)
        {
          uint64_t v148 = *(void (**)(uint64_t, uint64_t))(v31 + 368);
          uint64_t v149 = *(void *)(v31 + 320);
          uint64_t v150 = *(void *)(v31 + 304);
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v31 + 344))(v149, *(void *)(v142 + 48) + v145 * v147, v150);
          sub_1000207A4(&qword_1003EEC20, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
          char v151 = dispatch thunk of static Equatable.== infix(_:_:)();
          v148(v149, v150);
          if (v151) {
            break;
          }
          unint64_t v145 = (v145 + 1) & v146;
          uint64_t v31 = v223;
          if (((*(void *)(v142 + 56 + ((v145 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v145) & 1) == 0) {
            goto LABEL_113;
          }
        }
        uint64_t v31 = v223;
        uint64_t v152 = *(void *)(v223 + 248);
        uint64_t v209 = *(void *)(v223 + 232);
        uint64_t v211 = *(void *)(v223 + 216);
        unint64_t v154 = *(void *)(v223 + 160);
        uint64_t v153 = *(void *)(v223 + 168);
        uint64_t v156 = *(void *)(v223 + 144);
        uint64_t v155 = *(void *)(v223 + 152);
        uint64_t v157 = *(void *)(v223 + 120);
        swift_bridgeObjectRelease();
        sub_100044014(&qword_1003F03F0);
        unint64_t v158 = (*(unsigned __int8 *)(v155 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v155 + 80);
        uint64_t v159 = swift_allocObject();
        *(_OWORD *)(v159 + 16) = xmmword_100367D70;
        unint64_t v160 = v159 + v158;
        uint64_t v161 = *(void (**)(unint64_t, uint64_t, uint64_t))(v155 + 16);
        v161(v160, v153, v156);
        sub_10028ACC8(v157, v159, v152);
        swift_bridgeObjectRelease();
        v161(v154, v153, v156);
        v206(v209, v152, v211);
        uint64_t v162 = Logger.logObject.getter();
        os_log_type_t v163 = static os_log_type_t.default.getter();
        BOOL v164 = os_log_type_enabled(v162, v163);
        uint64_t v165 = *(void *)(v223 + 232);
        uint64_t v166 = *(void *)(v223 + 216);
        uint64_t v167 = *(void *)(v223 + 160);
        uint64_t v168 = *(void *)(v223 + 168);
        uint64_t v170 = *(void *)(v223 + 144);
        uint64_t v169 = *(void *)(v223 + 152);
        if (v164)
        {
          uint64_t v213 = *(void *)(v223 + 168);
          uint64_t v171 = swift_slowAlloc();
          v224[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v171 = 141558787;
          *uint64_t v200 = 1752392040;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v171 + 12) = 2081;
          uint64_t v172 = Handle.identifier.getter();
          *uint64_t v199 = sub_100037004(v172, v173, v224);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          uint64_t v174 = *(void (**)(uint64_t, uint64_t))(v169 + 8);
          v174(v167, v170);
          *(_WORD *)(v171 + 22) = 2160;
          *unint64_t v198 = 1752392040;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v171 + 32) = 2081;
          sub_1000207A4(&qword_1003F3330, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
          uint64_t v175 = dispatch thunk of CustomStringConvertible.description.getter();
          *unint64_t v197 = sub_100037004(v175, v176, v224);
          uint64_t v31 = v223;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          v208(v165, v166);
          _os_log_impl((void *)&_mh_execute_header, v162, v163, "remove legacy subscription for handle: %{private,mask.hash}s with priority: %{private,mask.hash}s", (uint8_t *)v171, 0x2Au);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v174)(v213, v170);
        }
        else
        {

          v208(v165, v166);
          uint64_t v177 = *(void (**)(uint64_t, uint64_t))(v169 + 8);
          v177(v167, v170);
          uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v177)(v168, v170);
        }
      }
      else
      {
LABEL_113:
        uint64_t v126 = *(void *)(v31 + 168);
        uint64_t v128 = *(void *)(v31 + 144);
        uint64_t v127 = *(void *)(v31 + 152);
        swift_bridgeObjectRelease();
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v127 + 8))(v126, v128);
      }
      unint64_t v125 = v222;
      continue;
    }
    break;
  }
  int64_t v137 = v218 + 2;
  ++v218;
  if (v135 + 1 >= v215) {
    goto LABEL_135;
  }
  unint64_t v136 = *(void *)(v205 + 8 * v137);
  if (v136)
  {
LABEL_124:
    int64_t v135 = v137;
    goto LABEL_121;
  }
  int64_t v218 = v135 + 1;
  if (v135 + 2 >= v215) {
    goto LABEL_135;
  }
  unint64_t v136 = *(void *)(v205 + 8 * (v135 + 2));
  if (v136)
  {
    v135 += 2;
    goto LABEL_121;
  }
  int64_t v137 = v135 + 3;
  int64_t v218 = v135 + 2;
  if (v135 + 3 >= v215)
  {
LABEL_135:
    uint64_t v138 = *(void *)(v31 + 184);
    uint64_t v139 = sub_100044014(&qword_1003F3210);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v139 - 8) + 56))(v138, 1, 1, v139);
    uint64_t v130 = 0;
    goto LABEL_136;
  }
  unint64_t v136 = *(void *)(v205 + 8 * v137);
  if (v136) {
    goto LABEL_124;
  }
  while (1)
  {
    int64_t v135 = v137 + 1;
    if (__OFADD__(v137, 1)) {
      break;
    }
    if (v135 >= v215)
    {
      int64_t v218 = v215 - 1;
      goto LABEL_135;
    }
    unint64_t v136 = *(void *)(v205 + 8 * v135);
    ++v137;
    if (v136) {
      goto LABEL_121;
    }
  }
LABEL_166:
  __break(1u);
LABEL_167:
  __break(1u);
LABEL_168:
  __break(1u);
  return result;
}

void (**sub_100266F68(uint64_t a1, void (**a2)(char *, char *, uint64_t), uint64_t a3))(char *, char *, uint64_t)
{
  uint64_t v4 = v3;
  uint64_t v8 = 0;
  uint64_t Priority = type metadata accessor for LocatePriority();
  uint64_t v105 = *(void *)(Priority - 8);
  uint64_t v9 = __chkstk_darwin(Priority);
  uint64_t v114 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v95 - v11;
  uint64_t v13 = sub_100044014(&qword_1003F33A0);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v112 = (char *)&v95 - v17;
  uint64_t v124 = (void (**)(char *, char *, uint64_t))_swiftEmptyArrayStorage;
  int64_t v18 = a2[2];
  uint64_t v103 = v12;
  *(void *)&long long v116 = v3;
  if (v18)
  {
    uint64_t v19 = *(void *)(type metadata accessor for Handle() - 8);
    uint64_t v20 = (uint64_t)a2 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    uint64_t v21 = *(void *)(v19 + 72);
    swift_bridgeObjectRetain();
    int64_t v22 = v18;
    do
    {
      sub_10028058C(v20, a1, a3, "TRACE: removeSubscription: client: %s\npriority: %{public}s handle: %{private,mask.hash}s");
      v20 += v21;
      int64_t v22 = (void (*)(char *, char *, uint64_t))((char *)v22 - 1);
    }
    while (v22);
    swift_bridgeObjectRelease();
    uint64_t v12 = v103;
    uint64_t v4 = v116;
  }
  uint64_t v23 = (uint64_t *)(v4 + OBJC_IVAR____TtC13findmylocated15LocationService_subscriptions);
  swift_beginAccess();
  uint64_t v117 = (uint64_t)v23;
  uint64_t v24 = *v23;
  uint64_t v25 = *(void *)(v24 + 16);
  uint64_t v26 = &type metadata for Any;
  char v111 = v16;
  if (v25)
  {
    swift_bridgeObjectRetain();
    unint64_t v27 = sub_1000244E0(a3);
    if (v28)
    {
      char v115 = a2;
      uint64_t v29 = (uint64_t *)(*(void *)(v24 + 56) + 24 * v27);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      uint64_t v32 = v29[2];
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v121 = v31;
      uint64_t v122 = v30;
      uint64_t v123 = v32;
      if (qword_1003EC408 != -1) {
        swift_once();
      }
      uint64_t v33 = type metadata accessor for Logger();
      sub_100044058(v33, (uint64_t)qword_10040C290);
      uint64_t v34 = Logger.logObject.getter();
      os_log_type_t v35 = static os_log_type_t.default.getter();
      int v36 = v35;
      if (os_log_type_enabled(v34, v35))
      {
        os_log_t v109 = v34;
        LODWORD(v110) = v36;
        uint64_t v37 = (uint8_t *)swift_slowAlloc();
        uint64_t v108 = (void (**)(char *, uint64_t))swift_slowAlloc();
        uint64_t v119 = (uint64_t)v108;
        *(_DWORD *)uint64_t v37 = 136315138;
        uint64_t v107 = (uint64_t)(v37 + 4);
        swift_beginAccess();
        uint64_t v97 = 0;
        uint64_t v38 = v122;
        uint64_t v39 = v123;
        swift_retain();
        uint64_t v40 = swift_bridgeObjectRetain();
        uint64_t v41 = sub_10024DA7C(v40, v38, v39);
        unint64_t v43 = v42;
        uint64_t v16 = v111;
        uint64_t v8 = v97;
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v118 = sub_100037004(v41, v43, &v119);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        os_log_t v44 = v109;
        _os_log_impl((void *)&_mh_execute_header, v109, (os_log_type_t)v110, "removeSubscription: %s", v37, 0xCu);
        uint64_t v26 = &type metadata for Any;
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v12 = v103;
        uint64_t v45 = v115;
        uint64_t v46 = v116;
        if (!v18) {
          goto LABEL_18;
        }
      }
      else
      {

        uint64_t v12 = v103;
        uint64_t v45 = v115;
        uint64_t v26 = &type metadata for Any;
        uint64_t v46 = v116;
        if (!v18)
        {
LABEL_18:
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_19;
        }
      }
      uint64_t v47 = *(void *)(type metadata accessor for Handle() - 8);
      uint64_t v48 = (uint64_t)v45 + ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80));
      uint64_t v49 = *(void *)(v47 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_10027FC40(v48, &v121, a1, a3, (unint64_t *)&v124, v46);
        v48 += v49;
        int64_t v18 = (void (*)(char *, char *, uint64_t))((char *)v18 - 1);
      }
      while (v18);
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v124 = a2;
  swift_bridgeObjectRetain();
LABEL_19:
  uint64_t v50 = v114;
  if (qword_1003EC408 != -1) {
LABEL_57:
  }
    swift_once();
  uint64_t v51 = type metadata accessor for Logger();
  uint64_t v52 = sub_100044058(v51, (uint64_t)qword_10040C290);
  swift_bridgeObjectRetain_n();
  uint64_t v110 = v52;
  uint64_t v53 = Logger.logObject.getter();
  os_log_type_t v54 = static os_log_type_t.default.getter();
  BOOL v55 = os_log_type_enabled(v53, v54);
  uint64_t v97 = v8;
  if (v55)
  {
    uint64_t v56 = swift_slowAlloc();
    *(void *)&long long v116 = swift_slowAlloc();
    uint64_t v121 = v116;
    *(_DWORD *)uint64_t v56 = 141558275;
    uint64_t v119 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v56 + 12) = 2081;
    type metadata accessor for Handle();
    uint64_t v57 = v16;
    swift_bridgeObjectRetain();
    uint64_t v58 = Array.description.getter();
    unint64_t v60 = v59;
    swift_bridgeObjectRelease();
    uint64_t v61 = v58;
    uint64_t v16 = v57;
    uint64_t v119 = sub_100037004(v61, v60, &v121);
    uint64_t v26 = &type metadata for Any;
    uint64_t v12 = v103;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v53, v54, "After removeSubscription for handles: %{private,mask.hash}s", (uint8_t *)v56, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v62 = Priority;
  uint64_t v63 = *(void *)v117;
  uint64_t v64 = *(void *)(*(void *)v117 + 64);
  uint64_t v98 = *(void *)v117 + 64;
  uint64_t v65 = 1 << *(unsigned char *)(v63 + 32);
  uint64_t v66 = -1;
  if (v65 < 64) {
    uint64_t v66 = ~(-1 << v65);
  }
  unint64_t v67 = v66 & v64;
  char v115 = (void (**)(char *, char *, uint64_t))(v105 + 16);
  os_log_t v109 = (os_log_t)(v105 + 32);
  uint64_t v108 = (void (**)(char *, uint64_t))(v105 + 8);
  unint64_t v102 = &v120;
  int64_t v99 = (unint64_t)(v65 + 63) >> 6;
  int64_t v96 = v99 - 1;
  uint64_t v104 = v63;
  uint64_t result = (void (**)(char *, char *, uint64_t))swift_bridgeObjectRetain();
  int64_t v69 = 0;
  *(void *)&long long v70 = 141558787;
  long long v101 = v70;
  int64_t v100 = v26 + 1;
  uint64_t v8 = (uint64_t)v112;
  while (1)
  {
    if (v67)
    {
      uint64_t v117 = (v67 - 1) & v67;
      unint64_t v72 = __clz(__rbit64(v67)) | (v69 << 6);
      goto LABEL_30;
    }
    int64_t v79 = v69 + 1;
    if (__OFADD__(v69, 1))
    {
      __break(1u);
      goto LABEL_57;
    }
    if (v79 < v99)
    {
      unint64_t v80 = *(void *)(v98 + 8 * v79);
      if (v80) {
        goto LABEL_34;
      }
      v69 += 2;
      if (v79 + 1 >= v99)
      {
        int64_t v69 = v79;
        goto LABEL_39;
      }
      unint64_t v80 = *(void *)(v98 + 8 * v69);
      if (v80)
      {
        ++v79;
        goto LABEL_34;
      }
      if (v79 + 2 < v99) {
        break;
      }
    }
LABEL_39:
    uint64_t v81 = sub_100044014(&qword_1003F33A8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v16, 1, 1, v81);
    uint64_t v117 = 0;
LABEL_40:
    sub_100013B50((uint64_t)v16, v8, &qword_1003F33A0);
    uint64_t v82 = sub_100044014(&qword_1003F33A8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 48))(v8, 1, v82) == 1)
    {
      swift_release();
      return v124;
    }
    *(void *)&long long v116 = v69;
    uint64_t v83 = (uint64_t *)(v8 + *(int *)(v82 + 48));
    uint64_t v85 = *v83;
    uint64_t v84 = v83[1];
    uint64_t v86 = v83[2];
    ((void (*)(char *, uint64_t, uint64_t))v109->isa)(v12, v8, v62);
    (*v115)(v50, v12, v62);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v87 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v87))
    {
      uint64_t v88 = swift_slowAlloc();
      uint64_t v107 = swift_slowAlloc();
      uint64_t v121 = v107;
      *(_DWORD *)uint64_t v88 = v101;
      uint64_t v119 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v88 + 12) = 2081;
      sub_1000207A4(&qword_1003F3330, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
      uint64_t v89 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v119 = sub_100037004(v89, v90, &v121);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v106 = *v108;
      v106(v114, Priority);
      *(_WORD *)(v88 + 22) = 2160;
      uint64_t v119 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v88 + 32) = 2081;
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v91 = sub_10024DA7C(v85, v84, v86);
      unint64_t v93 = v92;
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v119 = sub_100037004(v91, v93, &v121);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v62 = Priority;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v26, v87, "priority: %{private,mask.hash}s: :%{private,mask.hash}s", (uint8_t *)v88, 0x2Au);
      swift_arrayDestroy();
      uint64_t v12 = v103;
      swift_slowDealloc();
      uint64_t v50 = v114;
      swift_slowDealloc();

      swift_bridgeObjectRelease();
      swift_release();
      uint64_t result = (void (**)(char *, char *, uint64_t))((uint64_t (*)(char *, uint64_t))v106)(v12, v62);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
      uint64_t v71 = *v108;
      (*v108)(v50, v62);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t result = (void (**)(char *, char *, uint64_t))((uint64_t (*)(char *, uint64_t))v71)(v12, v62);
    }
    uint64_t v16 = v111;
    uint64_t v8 = (uint64_t)v112;
    int64_t v69 = v116;
    unint64_t v67 = v117;
  }
  unint64_t v80 = *(void *)(v98 + 8 * (v79 + 2));
  if (v80)
  {
    v79 += 2;
    goto LABEL_34;
  }
  int64_t v94 = v79 + 3;
  if (v79 + 3 >= v99)
  {
    int64_t v69 = v79 + 2;
    goto LABEL_39;
  }
  unint64_t v80 = *(void *)(v98 + 8 * v94);
  if (v80)
  {
    v79 += 3;
LABEL_34:
    uint64_t v117 = (v80 - 1) & v80;
    unint64_t v72 = __clz(__rbit64(v80)) + (v79 << 6);
    int64_t v69 = v79;
LABEL_30:
    uint64_t v73 = v104;
    (*(void (**)(char *, unint64_t, uint64_t))(v105 + 16))(v16, *(void *)(v104 + 48) + *(void *)(v105 + 72) * v72, v62);
    uint64_t v74 = *(void *)(v73 + 56) + 24 * v72;
    uint64_t v75 = sub_100044014(&qword_1003F33A8);
    int64_t v76 = &v16[*(int *)(v75 + 48)];
    uint64_t v77 = *(void *)v74;
    long long v116 = *(_OWORD *)(v74 + 8);
    long long v78 = v116;
    *(void *)int64_t v76 = v77;
    *(_OWORD *)(v76 + 8) = v78;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v16, 0, 1, v75);
    swift_retain();
    swift_bridgeObjectRetain();
    goto LABEL_40;
  }
  while (1)
  {
    int64_t v79 = v94 + 1;
    if (__OFADD__(v94, 1)) {
      break;
    }
    if (v79 >= v99)
    {
      int64_t v69 = v96;
      goto LABEL_39;
    }
    unint64_t v80 = *(void *)(v98 + 8 * v79);
    ++v94;
    if (v80) {
      goto LABEL_34;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100267D98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v157 = a3;
  uint64_t v177 = a1;
  uint64_t v4 = 0;
  uint64_t v5 = sub_100044014(&qword_1003F33A0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  unint64_t v8 = (unint64_t)&v153 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v180 = (char *)&v153 - v9;
  uint64_t Priority = type metadata accessor for LocatePriority();
  uint64_t v174 = *(void *)(Priority - 8);
  uint64_t v10 = __chkstk_darwin(Priority);
  uint64_t v179 = (char *)&v153 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v153 - v13;
  __chkstk_darwin(v12);
  uint64_t v153 = (char *)&v153 - v15;
  uint64_t v16 = sub_100044014(&qword_1003ECFB8);
  __chkstk_darwin(v16 - 8);
  uint64_t v178 = (char *)&v153 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v176 = (void (**)(void, void, void))type metadata accessor for Handle();
  uint64_t v18 = (uint64_t)*(v176 - 1);
  uint64_t v19 = __chkstk_darwin(v176);
  uint64_t v168 = (char *)&v153 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  unint64_t v22 = (unint64_t)&v153 - v21;
  uint64_t v23 = type metadata accessor for UUID();
  int64_t v169 = *(void *)(v23 - 8);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v153 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v24);
  unint64_t v185 = (unint64_t)&v153 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  unint64_t v184 = (char *)&v153 - v30;
  __chkstk_darwin(v29);
  uint64_t v182 = (char *)&v153 - v31;
  uint64_t v32 = *(char **)(a2 + 16);
  unint64_t v170 = v8;
  uint64_t v175 = v14;
  uint64_t v158 = a2;
  uint64_t v181 = v18;
  if (v32)
  {
    uint64_t v183 = (void *)v22;
    uint64_t v33 = a2 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    uint64_t v34 = *(void *)(v18 + 72);
    swift_bridgeObjectRetain();
    os_log_type_t v35 = v32;
    int v36 = v32;
    uint64_t v37 = v157;
    uint64_t v38 = v177;
    do
    {
      sub_10028058C(v33, v38, v37, "TRACE: trackNewSubscription: client: %s\npriority: %{public}s handle: %{private,mask.hash}s");
      v33 += v34;
      --v36;
    }
    while (v36);
    swift_bridgeObjectRelease();
    unint64_t v8 = v170;
    uint64_t v14 = v175;
    uint64_t v32 = v35;
    unint64_t v22 = (unint64_t)v183;
  }
  uint64_t v39 = (uint64_t *)(v186 + OBJC_IVAR____TtC13findmylocated15LocationService_subscriptions);
  swift_beginAccess();
  uint64_t v156 = v39;
  uint64_t v40 = *v39;
  uint64_t v41 = v178;
  if (*(void *)(v40 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v42 = sub_1000244E0(v157);
    if (v43)
    {
      os_log_t v44 = (void *)(*(void *)(v40 + 56) + 24 * v42);
      uint64_t v45 = (void *)*v44;
      uint64_t v167 = (char *)v44[1];
      swift_retain();
      uint64_t v183 = v45;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v32)
      {
        uint64_t v14 = v32;
        uint64_t v154 = 0;
        *(void *)&long long v186 = *(void *)(v181 + 16);
        uint64_t v46 = v158 + ((*(unsigned __int8 *)(v181 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v181 + 80));
        unint64_t v185 = *(void *)(v181 + 72);
        uint64_t v178 = (char *)(v169 + 16);
        int64_t v173 = v169 + 8;
        v181 += 16;
        uint64_t v47 = (void (**)(void, void))(v181 - 8);
        swift_bridgeObjectRetain();
        unint64_t v8 = (unint64_t)v183;
        uint64_t v48 = v184;
        uint64_t v49 = v176;
        do
        {
          ((void (*)(unint64_t, uint64_t, void))v186)(v22, v46, v49);
          (*(void (**)(char *, uint64_t, uint64_t))v178)(v48, v177, v23);
          uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v52 = v22;
          unint64_t v22 = isUniquelyReferenced_nonNull_native;
          uint64_t v188 = (void *)v8;
          uint64_t v32 = (char *)v52;
          unint64_t v54 = sub_100025614(v52);
          uint64_t v55 = *(void *)(v8 + 16);
          BOOL v56 = (v53 & 1) == 0;
          uint64_t v57 = v55 + v56;
          if (__OFADD__(v55, v56)) {
            goto LABEL_94;
          }
          char v58 = v53;
          if (*(void *)(v8 + 24) >= v57)
          {
            if (v22)
            {
              uint64_t v183 = (void *)v8;
            }
            else
            {
              sub_100127A44();
              uint64_t v183 = v188;
            }
            unint64_t v22 = (unint64_t)v32;
          }
          else
          {
            sub_100025B8C(v57, v22);
            unint64_t v22 = (unint64_t)v32;
            uint64_t v183 = v188;
            unint64_t v59 = sub_100025614((uint64_t)v32);
            if ((v58 & 1) != (v60 & 1)) {
              goto LABEL_98;
            }
            unint64_t v54 = v59;
          }
          swift_bridgeObjectRelease();
          unint64_t v8 = (unint64_t)v183;
          if ((v58 & 1) == 0)
          {
            v183[(v54 >> 6) + 8] |= 1 << v54;
            ((void (*)(unint64_t, unint64_t, void))v186)(v183[6] + v54 * v185, v22, v176);
            unint64_t v8 = (unint64_t)v183;
            *(void *)(v183[7] + 8 * v54) = &_swiftEmptySetSingleton;
            uint64_t v61 = *(void *)(v8 + 16);
            BOOL v62 = __OFADD__(v61, 1);
            uint64_t v63 = v61 + 1;
            if (v62) {
              goto LABEL_95;
            }
            *(void *)(v8 + 16) = v63;
          }
          uint64_t v50 = (void (*)(void, void, void))v182;
          uint64_t v48 = v184;
          sub_100154694((uint64_t)v182, v184);
          (*(void (**)(void (*)(void, void, void), uint64_t))v173)(v50, v23);
          uint64_t v49 = v176;
          (*v47)(v22, v176);
          v46 += v185;
          --v14;
        }
        while (v14);
        uint64_t v14 = v175;
        uint64_t v32 = v167;
        goto LABEL_51;
      }
      unint64_t v22 = Priority;
      uint64_t v32 = v167;
LABEL_53:
      uint64_t v97 = v157;
LABEL_54:
      uint64_t v154 = v4;
      uint64_t v98 = v174;
      int64_t v99 = *(char **)(v174 + 16);
      uint64_t v100 = (uint64_t)v153;
      unint64_t v184 = (char *)(v174 + 16);
      uint64_t v182 = v99;
      ((void (*)(char *, uint64_t, unint64_t))v99)(v153, v97, v22);
      long long v101 = v156;
      swift_beginAccess();
      swift_retain();
      uint64_t v102 = (uint64_t)v183;
      swift_bridgeObjectRetain();
      char v103 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v187 = *v101;
      uint64_t *v101 = 0x8000000000000000;
      sub_100024314(v102, (uint64_t)v32, 0, v100, v103);
      uint64_t *v101 = v187;
      swift_bridgeObjectRelease();
      uint64_t v104 = *(char **)(v98 + 8);
      uint64_t v181 = v98 + 8;
      uint64_t v178 = v104;
      ((void (*)(uint64_t, unint64_t))v104)(v100, v22);
      swift_endAccess();
      if (qword_1003EC408 == -1)
      {
LABEL_55:
        uint64_t v167 = v32;
        uint64_t v105 = type metadata accessor for Logger();
        uint64_t v106 = sub_100044058(v105, (uint64_t)qword_10040C290);
        swift_bridgeObjectRetain_n();
        uint64_t v177 = v106;
        uint64_t v107 = Logger.logObject.getter();
        os_log_type_t v108 = static os_log_type_t.default.getter();
        uint64_t v32 = (char *)&type metadata for Any;
        if (os_log_type_enabled(v107, v108))
        {
          uint64_t v109 = swift_slowAlloc();
          uint64_t v110 = swift_slowAlloc();
          uint64_t v187 = 1752392040;
          uint64_t v188 = (void *)v110;
          *(_DWORD *)uint64_t v109 = 141558275;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v109 + 12) = 2081;
          swift_bridgeObjectRetain();
          uint64_t v111 = Array.description.getter();
          unint64_t v113 = v112;
          swift_bridgeObjectRelease();
          uint64_t v114 = v111;
          unint64_t v22 = Priority;
          uint64_t v187 = sub_100037004(v114, v113, (uint64_t *)&v188);
          uint64_t v32 = (char *)&type metadata for Any;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          unint64_t v8 = v170;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v107, v108, "After trackNewSubscription for handles: %{private,mask.hash}s", (uint8_t *)v109, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        uint64_t v115 = (uint64_t)v180;
        int64_t v116 = *v156;
        uint64_t v117 = *(void *)(*v156 + 64);
        uint64_t v168 = (char *)(*v156 + 64);
        uint64_t v118 = 1 << *(unsigned char *)(v116 + 32);
        uint64_t v119 = -1;
        if (v118 < 64) {
          uint64_t v119 = ~(-1 << v118);
        }
        unint64_t v120 = v119 & v117;
        unint64_t v176 = (void (**)(void, void, void))(v174 + 32);
        int64_t v169 = (unint64_t)(v118 + 63) >> 6;
        int64_t v166 = v169 - 1;
        int64_t v173 = v116;
        swift_bridgeObjectRetain();
        int64_t v121 = 0;
        *(void *)&long long v122 = 136446723;
        long long v172 = v122;
        uint64_t v171 = (char *)&type metadata for Any + 8;
        while (!v120)
        {
          int64_t v133 = v121 + 1;
          if (__OFADD__(v121, 1)) {
            goto LABEL_92;
          }
          if (v133 < v169)
          {
            unint64_t v134 = *(void *)&v168[8 * v133];
            if (v134) {
              goto LABEL_69;
            }
            v121 += 2;
            if (v133 + 1 >= v169)
            {
              int64_t v121 = v133;
            }
            else
            {
              unint64_t v134 = *(void *)&v168[8 * v121];
              if (v134)
              {
                ++v133;
                goto LABEL_69;
              }
              if (v133 + 2 < v169)
              {
                unint64_t v134 = *(void *)&v168[8 * v133 + 16];
                if (v134)
                {
                  v133 += 2;
                  goto LABEL_69;
                }
                int64_t v151 = v133 + 3;
                if (v133 + 3 < v169)
                {
                  unint64_t v134 = *(void *)&v168[8 * v151];
                  if (!v134)
                  {
                    while (1)
                    {
                      int64_t v133 = v151 + 1;
                      if (__OFADD__(v151, 1)) {
                        break;
                      }
                      if (v133 >= v169)
                      {
                        int64_t v121 = v166;
                        goto LABEL_74;
                      }
                      unint64_t v134 = *(void *)&v168[8 * v133];
                      ++v151;
                      if (v134) {
                        goto LABEL_69;
                      }
                    }
                    __break(1u);
                    goto LABEL_98;
                  }
                  v133 += 3;
LABEL_69:
                  uint64_t v125 = (v134 - 1) & v134;
                  unint64_t v126 = __clz(__rbit64(v134)) + (v133 << 6);
                  int64_t v121 = v133;
LABEL_65:
                  int64_t v127 = v173;
                  ((void (*)(unint64_t, unint64_t, unint64_t))v182)(v8, *(void *)(v173 + 48) + *(void *)(v174 + 72) * v126, v22);
                  uint64_t v128 = *(void *)(v127 + 56) + 24 * v126;
                  uint64_t v129 = sub_100044014(&qword_1003F33A8);
                  unint64_t v130 = v8 + *(int *)(v129 + 48);
                  uint64_t v131 = *(void *)v128;
                  long long v186 = *(_OWORD *)(v128 + 8);
                  long long v132 = v186;
                  *(void *)unint64_t v130 = v131;
                  *(_OWORD *)(v130 + 8) = v132;
                  (*(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v129 - 8) + 56))(v8, 0, 1, v129);
                  swift_retain();
                  swift_bridgeObjectRetain();
                  goto LABEL_75;
                }
                int64_t v121 = v133 + 2;
              }
            }
          }
LABEL_74:
          uint64_t v135 = sub_100044014(&qword_1003F33A8);
          (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v135 - 8) + 56))(v8, 1, 1, v135);
          uint64_t v125 = 0;
LABEL_75:
          sub_100013B50(v8, v115, &qword_1003F33A0);
          uint64_t v136 = sub_100044014(&qword_1003F33A8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v136 - 8) + 48))(v115, 1, v136) == 1)
          {
            swift_release();
            swift_bridgeObjectRelease();
            return swift_release();
          }
          unint64_t v185 = v125;
          *(void *)&long long v186 = v121;
          uint64_t v137 = v115 + *(int *)(v136 + 48);
          uint64_t v32 = *(char **)v137;
          uint64_t v138 = *(void *)(v137 + 8);
          uint64_t v139 = *(void *)(v137 + 16);
          (*v176)(v14, v115, v22);
          uint64_t v140 = v179;
          ((void (*)(char *, char *, unint64_t))v182)(v179, v14, v22);
          swift_retain_n();
          swift_bridgeObjectRetain_n();
          uint64_t v141 = Logger.logObject.getter();
          os_log_type_t v142 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v141, v142))
          {
            uint64_t v143 = swift_slowAlloc();
            uint64_t v188 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v143 = v172;
            sub_1000207A4(&qword_1003F3330, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
            uint64_t v144 = dispatch thunk of CustomStringConvertible.description.getter();
            *(void *)(v143 + 4) = sub_100037004(v144, v145, (uint64_t *)&v188);
            swift_bridgeObjectRelease();
            uint64_t v146 = v140;
            uint64_t v147 = (void (*)(char *, unint64_t))v178;
            ((void (*)(char *, unint64_t))v178)(v146, v22);
            *(_WORD *)(v143 + 12) = 2160;
            *(void *)(v143 + 14) = 1752392040;
            *(_WORD *)(v143 + 22) = 2081;
            swift_bridgeObjectRetain();
            swift_retain();
            uint64_t v148 = sub_10024DA7C((uint64_t)v32, v138, v139);
            unint64_t v150 = v149;
            swift_bridgeObjectRelease();
            swift_release();
            *(void *)(v143 + 24) = sub_100037004(v148, v150, (uint64_t *)&v188);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            swift_release_n();
            _os_log_impl((void *)&_mh_execute_header, v141, v142, "priority: %{public}s): :%{private,mask.hash}s", (uint8_t *)v143, 0x20u);
            swift_arrayDestroy();
            uint64_t v14 = v175;
            swift_slowDealloc();
            unint64_t v8 = v170;
            swift_slowDealloc();

            swift_bridgeObjectRelease();
            swift_release();
            v147(v14, v22);
          }
          else
          {

            swift_bridgeObjectRelease_n();
            swift_release_n();
            uint64_t v123 = (void (*)(char *, unint64_t))v178;
            ((void (*)(char *, unint64_t))v178)(v140, v22);
            swift_bridgeObjectRelease();
            swift_release();
            v123(v14, v22);
          }
          uint64_t v115 = (uint64_t)v180;
          unint64_t v120 = v185;
          int64_t v121 = v186;
        }
        unint64_t v124 = __clz(__rbit64(v120));
        uint64_t v125 = (v120 - 1) & v120;
        unint64_t v126 = v124 | (v121 << 6);
        goto LABEL_65;
      }
LABEL_96:
      swift_once();
      goto LABEL_55;
    }
    swift_bridgeObjectRelease();
  }
  if (!v32)
  {
    uint64_t v183 = _swiftEmptyDictionarySingleton;
    unint64_t v22 = Priority;
    goto LABEL_53;
  }
  BOOL v164 = v32;
  uint64_t v154 = 0;
  uint64_t v64 = v181 + 16;
  *(void *)&long long v172 = *(void *)(v181 + 16);
  uint64_t v167 = (char *)(v158 + ((*(unsigned __int8 *)(v181 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v181 + 80)));
  *(void *)&long long v186 = v169 + 16;
  int64_t v173 = v169 + 56;
  uint64_t v171 = *(char **)(v181 + 72);
  int64_t v166 = v169 + 48;
  unint64_t v160 = (void (**)(unint64_t, char *, uint64_t))(v169 + 32);
  unint64_t v184 = (char *)(v169 + 8);
  os_log_type_t v163 = (void (**)(void *, unint64_t))(v181 + 8);
  swift_bridgeObjectRetain();
  uint64_t v65 = 0;
  uint64_t v183 = _swiftEmptyDictionarySingleton;
  long long v165 = xmmword_100367D70;
  unint64_t v8 = (unint64_t)v176;
  uint64_t v66 = v177;
  uint64_t v32 = v168;
  uint64_t v181 = v64;
  uint64_t v159 = v26;
  while (1)
  {
    uint64_t v182 = v65;
    ((void (*)(char *, char *, unint64_t))v172)(v32, &v167[(void)v65 * (void)v171], v8);
    sub_100044014(&qword_1003F03E8);
    int64_t v68 = v169;
    uint64_t v69 = *(void *)(v169 + 72);
    unint64_t v70 = (*(unsigned __int8 *)(v169 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v169 + 80);
    uint64_t v71 = swift_allocObject();
    *(_OWORD *)(v71 + 16) = v165;
    unint64_t v72 = v71 + v70;
    uint64_t v73 = *(void (**)(unint64_t, uint64_t, uint64_t))(v68 + 16);
    v73(v72, v66, v23);
    unint64_t v8 = sub_1000207A4(&qword_1003EE920, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v74 = Set.init(minimumCapacity:)();
    v73((unint64_t)v41, v72, v23);
    uint64_t v75 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56);
    v75(v41, 0, 1, v23);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v41, 1, v23) == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v32 = v168;
      uint64_t v14 = v175;
    }
    else
    {
      uint64_t v161 = v75;
      uint64_t v162 = v71;
      (*v160)(v185, v41, v23);
      swift_bridgeObjectRetain();
      uint64_t v76 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v77 = -1 << *(unsigned char *)(v74 + 32);
      unint64_t v8 = v76 & ~v77;
      if ((*(void *)(v74 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
      {
        uint64_t v78 = ~v77;
        uint64_t v79 = (uint64_t)v159;
        while (1)
        {
          v73(v79, *(void *)(v74 + 48) + v8 * v69, v23);
          sub_1000207A4(&qword_1003EEC20, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
          char v80 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v81 = *(void (**)(unint64_t, uint64_t))v184;
          (*(void (**)(uint64_t, uint64_t))v184)(v79, v23);
          if (v80) {
            break;
          }
          unint64_t v8 = (v8 + 1) & v78;
          if (((*(void *)(v74 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
            goto LABEL_34;
          }
        }
        swift_bridgeObjectRelease();
        v81(v185, v23);
      }
      else
      {
        uint64_t v79 = (uint64_t)v159;
LABEL_34:
        swift_bridgeObjectRelease();
        char v82 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v83 = v185;
        v73(v79, v185, v23);
        uint64_t v188 = (void *)v74;
        sub_1000258D0(v79, v8, v82);
        uint64_t v74 = (uint64_t)v188;
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))v184)(v83, v23);
      }
      v161(v178, 1, 1, v23);
      swift_bridgeObjectRelease();
      uint64_t v14 = v175;
      uint64_t v32 = v168;
    }
    uint64_t v84 = v183;
    int v85 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v188 = v84;
    unint64_t v22 = sub_100025614((uint64_t)v32);
    uint64_t v87 = v84[2];
    BOOL v88 = (v86 & 1) == 0;
    uint64_t v89 = v87 + v88;
    if (__OFADD__(v87, v88))
    {
      __break(1u);
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
      goto LABEL_96;
    }
    char v90 = v86;
    if (v84[3] < v89) {
      break;
    }
    if (v85)
    {
      uint64_t v183 = v84;
      if ((v86 & 1) == 0) {
        goto LABEL_44;
      }
    }
    else
    {
      sub_100127A44();
      uint64_t v84 = v188;
      uint64_t v183 = v188;
      if ((v90 & 1) == 0)
      {
LABEL_44:
        v84[(v22 >> 6) + 8] |= 1 << v22;
        unint64_t v8 = (unint64_t)v176;
        ((void (*)(unint64_t, char *, void))v172)(v183[6] + v22 * (void)v171, v32, v176);
        int64_t v94 = v183;
        *(void *)(v183[7] + 8 * v22) = v74;
        uint64_t v95 = v94[2];
        BOOL v62 = __OFADD__(v95, 1);
        uint64_t v96 = v95 + 1;
        if (v62) {
          goto LABEL_93;
        }
        v94[2] = v96;
        goto LABEL_25;
      }
    }
LABEL_24:
    uint64_t v67 = v84[7];
    swift_bridgeObjectRelease();
    *(void *)(v67 + 8 * v22) = v74;
    unint64_t v8 = (unint64_t)v176;
LABEL_25:
    swift_bridgeObjectRelease();
    uint64_t v65 = v182 + 1;
    (*v163)(v32, v8);
    uint64_t v66 = v177;
    uint64_t v41 = v178;
    if (v65 == v164)
    {
      uint64_t v32 = 0;
LABEL_51:
      uint64_t v97 = v157;
      swift_bridgeObjectRelease();
      uint64_t v4 = v154;
      unint64_t v8 = v170;
      unint64_t v22 = Priority;
      goto LABEL_54;
    }
  }
  sub_100025B8C(v89, v85);
  uint64_t v91 = (uint64_t)v188;
  unint64_t v92 = sub_100025614((uint64_t)v32);
  if ((v90 & 1) == (v93 & 1))
  {
    unint64_t v22 = v92;
    uint64_t v84 = (void *)v91;
    uint64_t v183 = (void *)v91;
    if ((v90 & 1) == 0) {
      goto LABEL_44;
    }
    goto LABEL_24;
  }
LABEL_98:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1002693A8(uint64_t a1, uint64_t a2)
{
  v3[37] = a2;
  v3[38] = v2;
  v3[36] = a1;
  uint64_t Priority = type metadata accessor for LocatePriority();
  v3[39] = Priority;
  v3[40] = *(void *)(Priority - 8);
  v3[41] = swift_task_alloc();
  v3[42] = swift_task_alloc();
  v3[43] = swift_task_alloc();
  v3[44] = swift_task_alloc();
  return _swift_task_switch(sub_100269494, v2, 0);
}

uint64_t sub_100269494()
{
  if (*(void *)(v0[36] + 16))
  {
    uint64_t v1 = (void *)swift_task_alloc();
    v0[45] = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_100269648;
    return daemon.getter();
  }
  else
  {
    if (qword_1003EC408 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_100044058(v2, (uint64_t)qword_10040C290);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Not unsubscribing for empty friends", v5, 2u);
      swift_slowDealloc();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_100269648(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v9 = *v1;
  *(void *)(v2 + 368) = a1;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 376) = v3;
  uint64_t v4 = type metadata accessor for Daemon();
  uint64_t v5 = type metadata accessor for DataManager(0);
  uint64_t v6 = sub_1000207A4(&qword_1003ECCA8, 255, (void (*)(uint64_t))&type metadata accessor for Daemon);
  uint64_t v7 = sub_1000207A4(&qword_1003ECCC0, 255, (void (*)(uint64_t))type metadata accessor for DataManager);
  *uint64_t v3 = v9;
  v3[1] = sub_10026982C;
  return ActorServiceDaemon.getService<A>()(v4, v5, v6, v7);
}

uint64_t sub_10026982C(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[48] = a1;
  v4[49] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[38];
    uint64_t v6 = sub_10026AD48;
  }
  else
  {
    swift_release();
    uint64_t v6 = sub_100269964;
    uint64_t v5 = a1;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_100269964()
{
  sub_100044014(&qword_1003ECF40);
  uint64_t v1 = type metadata accessor for HandleType();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = swift_allocObject();
  *(void *)(v0 + 400) = v4;
  *(_OWORD *)(v4 + 16) = xmmword_100367D70;
  (*(void (**)(unint64_t, void, uint64_t))(v2 + 104))(v4 + v3, enum case for HandleType.following(_:), v1);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 408) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100269AC0;
  return sub_100021584(v4, 1);
}

uint64_t sub_100269AC0(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 304);
  *(void *)(*(void *)v1 + 416) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100269BF4, v2, 0);
}

uint64_t sub_100269BF4()
{
  unint64_t v70 = v0;
  uint64_t v1 = v0[52];
  uint64_t v2 = sub_1000902A0(v0[36]);
  uint64_t v3 = sub_1002466DC((uint64_t)v2);
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_10027ED14(v1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = *((void *)v4 + 2);
  if (v5)
  {
    uint64_t v6 = *(void *)(type metadata accessor for Friend() - 8);
    uint64_t v7 = (uint64_t)&v4[(*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)];
    uint64_t v8 = *(void *)(v6 + 72);
    do
    {
      sub_10027F2C0(v7, v0[37]);
      v7 += v8;
      --v5;
    }
    while (v5);
    uint64_t v9 = sub_10024AA28((uint64_t)v4);
    swift_bridgeObjectRelease();
    uint64_t v10 = Array<A>.uniqued()();
    v0[53] = v10;
    uint64_t v11 = v9[2];
    uint64_t v12 = *(void *)(v10 + 16);
    v0[54] = v12;
    swift_bridgeObjectRelease();
    uint64_t v68 = v12;
    uint64_t v13 = v11 - v12;
    if (v11 != v12)
    {
      if (qword_1003EC408 != -1) {
        swift_once();
      }
      uint64_t v14 = v0[44];
      uint64_t v15 = v0[39];
      uint64_t v16 = v0[40];
      uint64_t v17 = v0[37];
      uint64_t v18 = type metadata accessor for Logger();
      sub_100044058(v18, (uint64_t)qword_10040C290);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v14, v17, v15);
      uint64_t v19 = Logger.logObject.getter();
      os_log_type_t v20 = static os_log_type_t.default.getter();
      BOOL v21 = os_log_type_enabled(v19, v20);
      uint64_t v22 = v0[44];
      uint64_t v23 = v0[39];
      uint64_t v24 = v0[40];
      if (v21)
      {
        uint64_t v25 = swift_slowAlloc();
        uint64_t v69 = swift_slowAlloc();
        *(_DWORD *)uint64_t v25 = 134349314;
        v0[34] = v13;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v25 + 12) = 2082;
        sub_1000207A4(&qword_1003F3330, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
        uint64_t v26 = dispatch thunk of CustomStringConvertible.description.getter();
        v0[35] = sub_100037004(v26, v27, &v69);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "Unsubscribe contains %{public}ld duplicates for %{public}s", (uint8_t *)v25, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(void, void))(v24 + 8))(v0[44], v0[39]);
      }
    }
    uint64_t v32 = v0[43];
    uint64_t v33 = v0[39];
    uint64_t v34 = v0[40];
    uint64_t v35 = v0[37];
    id v36 = [objc_allocWithZone((Class)SPSecureLocationsSubscriptionContext) init];
    v0[55] = v36;
    sub_100013C20(3);
    NSString v37 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v36 setClientApp:v37];

    uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16);
    v0[56] = v38;
    v0[57] = (v34 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v38(v32, v35, v33);
    uint64_t v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 88))(v32, v33);
    if (v39 == enum case for LocatePriority.backgroundAppRefresh(_:))
    {
      uint64_t v40 = 0;
      uint64_t v41 = enum case for LocatePriority.live(_:);
    }
    else
    {
      uint64_t v41 = enum case for LocatePriority.live(_:);
      if (v39 == enum case for LocatePriority.shallow(_:))
      {
        uint64_t v40 = 1;
      }
      else if (v39 == enum case for LocatePriority.live(_:))
      {
        uint64_t v40 = 2;
        uint64_t v41 = v39;
      }
      else
      {
        if (v39 != enum case for LocatePriority.backgroundProactive(_:)) {
          return _assertionFailure(_:_:file:line:flags:)();
        }
        uint64_t v40 = 5;
      }
    }
    uint64_t v42 = v0[42];
    uint64_t v43 = v0[39];
    uint64_t v44 = v0[40];
    [v36 setSubscriptionMode:v40];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 104))(v42, v41, v43);
    sub_1000207A4(&qword_1003ED040, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    uint64_t v46 = v0[28];
    uint64_t v45 = v0[29];
    uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
    v0[58] = v47;
    v0[59] = (v44 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v47(v42, v43);
    if (v45 != v46 || v68 == 1)
    {
      uint64_t v52 = v0 + 10;
      char v53 = *(void **)(v0[38] + OBJC_IVAR____TtC13findmylocated15LocationService_secureLocationsManager);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      v0[69] = isa;
      swift_bridgeObjectRelease();
      v0[10] = v0;
      v0[11] = sub_10026AB84;
      uint64_t v55 = swift_continuation_init();
      v0[23] = _NSConcreteStackBlock;
      v0[24] = 0x40000000;
      v0[25] = sub_100331100;
      v0[26] = &unk_1003E3950;
      v0[27] = v55;
      [v53 unsubscribeForIds:isa context:v36 completion:v0 + 23];
LABEL_34:
      return _swift_continuation_await(v52);
    }
    if (qword_1003EC408 != -1) {
      swift_once();
    }
    uint64_t v48 = type metadata accessor for Logger();
    v0[60] = sub_100044058(v48, (uint64_t)qword_10040C290);
    swift_bridgeObjectRetain();
    uint64_t v49 = Logger.logObject.getter();
    os_log_type_t v50 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v51 = 134349056;
      v0[33] = v68;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v49, v50, "Unsubscribing %{public}ld .live subscriptions at once", v51, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    uint64_t v56 = *(void *)(v10 + 16);
    v0[61] = v56;
    if (v56)
    {
      uint64_t v52 = v0 + 2;
      uint64_t v57 = *(void **)(v0[38] + OBJC_IVAR____TtC13findmylocated15LocationService_secureLocationsManager);
      v0[63] = 0;
      v0[64] = 0;
      v0[62] = v57;
      uint64_t v58 = v0[55];
      uint64_t v59 = v0[53];
      uint64_t v60 = *(void *)(v59 + 32);
      v0[65] = v60;
      uint64_t v61 = *(void *)(v59 + 40);
      v0[66] = v61;
      swift_bridgeObjectRetain();
      sub_100044014(&qword_1003EE3F0);
      uint64_t v62 = swift_allocObject();
      *(_OWORD *)(v62 + 16) = xmmword_100367D70;
      *(void *)(v62 + 32) = v60;
      *(void *)(v62 + 40) = v61;
      swift_bridgeObjectRetain_n();
      Class v63 = Array._bridgeToObjectiveC()().super.isa;
      v0[67] = v63;
      swift_bridgeObjectRelease();
      v0[2] = v0;
      v0[3] = sub_10026A650;
      uint64_t v64 = swift_continuation_init();
      v0[18] = _NSConcreteStackBlock;
      v0[19] = 0x40000000;
      v0[20] = sub_100331100;
      v0[21] = &unk_1003E3968;
      v0[22] = v64;
      [v57 unsubscribeForIds:v63 context:v58 completion:v0 + 18];
      goto LABEL_34;
    }
    uint64_t v65 = (void *)v0[55];
    swift_release();

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_1003EC408 != -1) {
      swift_once();
    }
    uint64_t v28 = type metadata accessor for Logger();
    sub_100044058(v28, (uint64_t)qword_10040C290);
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Should not unsubscribing for empty friends", v31, 2u);
      swift_slowDealloc();
    }
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v66 = (uint64_t (*)(void))v0[1];
  return v66();
}

uint64_t sub_10026A650()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 544) = v2;
  if (v2)
  {
    uint64_t v3 = *(void *)(v1 + 304);
    uint64_t v4 = sub_10026ADD8;
  }
  else
  {
    uint64_t v5 = *(void *)(v1 + 304);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_10026A778;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10026A778()
{
  uint64_t v1 = *(void *)(v0 + 512) + 1;
  if (v1 == *(void *)(v0 + 488))
  {
    uint64_t v2 = *(void *)(v0 + 504);
    swift_bridgeObjectRelease();
    if (v2 < 1)
    {
      os_log_type_t v20 = *(void **)(v0 + 440);
      swift_release();

      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v3 = *(void *)(v0 + 432);
      uint64_t v22 = *(void **)(v0 + 440);
      uint64_t v4 = type metadata accessor for GenericError();
      sub_1000207A4((unint64_t *)&qword_1003ECD00, 255, (void (*)(uint64_t))&type metadata accessor for GenericError);
      swift_allocError();
      uint64_t v6 = v5;
      _StringGuts.grow(_:)(80);
      *(void *)(v0 + 248) = v2;
      v7._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v7);
      swift_bridgeObjectRelease();
      v8._object = (void *)0x8000000100378970;
      v8._uint64_t countAndFlagsBits = 0xD000000000000026;
      String.append(_:)(v8);
      swift_bridgeObjectRelease();
      *(void *)(v0 + 256) = v3;
      v9._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v9);
      swift_bridgeObjectRelease();
      v10._object = (void *)0x80000001003789A0;
      v10._uint64_t countAndFlagsBits = 0xD000000000000026;
      String.append(_:)(v10);
      *uint64_t v6 = 0;
      v6[1] = 0xE000000000000000;
      (*(void (**)(void *, void, uint64_t))(*(void *)(v4 - 8) + 104))(v6, enum case for GenericError.error(_:), v4);
      swift_willThrow();

      swift_release();
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  else
  {
    *(void *)(v0 + 512) = v1;
    uint64_t v12 = *(void **)(v0 + 496);
    uint64_t v13 = *(void *)(v0 + 440);
    uint64_t v14 = *(void *)(v0 + 424) + 16 * v1;
    uint64_t v15 = *(void *)(v14 + 32);
    *(void *)(v0 + 520) = v15;
    uint64_t v16 = *(void *)(v14 + 40);
    *(void *)(v0 + 528) = v16;
    sub_100044014(&qword_1003EE3F0);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_100367D70;
    *(void *)(v17 + 32) = v15;
    *(void *)(v17 + 40) = v16;
    swift_bridgeObjectRetain_n();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    *(void *)(v0 + 536) = isa;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 24) = sub_10026A650;
    uint64_t v19 = swift_continuation_init();
    *(void *)(v0 + 144) = _NSConcreteStackBlock;
    *(void *)(v0 + 152) = 0x40000000;
    *(void *)(v0 + 160) = sub_100331100;
    *(void *)(v0 + 168) = &unk_1003E3968;
    *(void *)(v0 + 176) = v19;
    [v12 unsubscribeForIds:isa context:v13 completion:v0 + 144];
    return _swift_continuation_await(v0 + 16);
  }
}

uint64_t sub_10026AB84()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 112);
  *(void *)(*v0 + 560) = v2;
  uint64_t v3 = *(void *)(v1 + 304);
  if (v2) {
    uint64_t v4 = sub_10026B480;
  }
  else {
    uint64_t v4 = sub_10026ACA4;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10026ACA4()
{
  uint64_t v1 = *(void **)(v0 + 552);

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10026AD48()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10026ADD8()
{
  uint64_t v49 = v0;
  uint64_t v1 = (void *)v0[67];
  uint64_t v2 = (void (*)(uint64_t, uint64_t, uint64_t))v0[56];
  uint64_t v3 = v0[41];
  uint64_t v4 = v0[39];
  uint64_t v5 = v0[37];
  swift_willThrow();

  v2(v3, v5, v4);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.error.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  unint64_t v9 = v0[66];
  if (v8)
  {
    uint64_t v45 = v0[65];
    uint64_t v44 = (void (*)(uint64_t, uint64_t))v0[58];
    uint64_t v10 = v0[41];
    uint64_t v11 = v0[39];
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = (void *)swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136446979;
    sub_1000207A4(&qword_1003F3330, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v12 + 4) = sub_100037004(v14, v15, &v47);
    swift_bridgeObjectRelease();
    v44(v10, v11);
    *(_WORD *)(v12 + 12) = 2160;
    *(void *)(v12 + 14) = 1752392040;
    *(_WORD *)(v12 + 22) = 2081;
    swift_bridgeObjectRetain();
    *(void *)(v12 + 24) = sub_100037004(v45, v9, &v47);
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 32) = 2112;
    swift_errorRetain();
    uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v12 + 34) = v16;
    *uint64_t v13 = v16;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to unsubscribe %{public}s %{private,mask.hash}s: %@", (uint8_t *)v12, 0x2Au);
    sub_100044014(&qword_1003ECCC8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v17 = swift_errorRelease();
  }
  else
  {
    uint64_t v18 = (void (*)(uint64_t, uint64_t))v0[58];
    uint64_t v19 = v0[41];
    uint64_t v20 = v0[39];
    swift_errorRelease();
    v18(v19, v20);
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v21 = v0[63];
  uint64_t v22 = v21 + 1;
  if (__OFADD__(v21, 1))
  {
    __break(1u);
    return _swift_continuation_await(v17);
  }
  uint64_t v23 = v0[64] + 1;
  if (v23 != v0[61])
  {
    v0[63] = v22;
    v0[64] = v23;
    uint64_t v34 = (void *)v0[62];
    uint64_t v35 = v0[55];
    uint64_t v36 = v0[53] + 16 * v23;
    uint64_t v37 = *(void *)(v36 + 32);
    v0[65] = v37;
    uint64_t v38 = *(void *)(v36 + 40);
    v0[66] = v38;
    sub_100044014(&qword_1003EE3F0);
    uint64_t v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_100367D70;
    *(void *)(v39 + 32) = v37;
    *(void *)(v39 + 40) = v38;
    swift_bridgeObjectRetain_n();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    v0[67] = isa;
    swift_bridgeObjectRelease();
    v0[2] = v0;
    v0[3] = sub_10026A650;
    uint64_t v41 = swift_continuation_init();
    v0[18] = _NSConcreteStackBlock;
    v0[19] = 0x40000000;
    v0[20] = sub_100331100;
    v0[21] = &unk_1003E3968;
    v0[22] = v41;
    [v34 unsubscribeForIds:isa context:v35 completion:v0 + 18];
    uint64_t v17 = (uint64_t)(v0 + 2);
    return _swift_continuation_await(v17);
  }
  swift_bridgeObjectRelease();
  if (v22 < 1)
  {
    uint64_t v42 = (void *)v0[55];
    swift_release();

    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v24 = v0[54];
    uint64_t v46 = (void *)v0[55];
    uint64_t v25 = type metadata accessor for GenericError();
    sub_1000207A4((unint64_t *)&qword_1003ECD00, 255, (void (*)(uint64_t))&type metadata accessor for GenericError);
    swift_allocError();
    unint64_t v27 = v26;
    uint64_t v47 = 0;
    unint64_t v48 = 0xE000000000000000;
    _StringGuts.grow(_:)(80);
    v0[31] = v22;
    v28._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v28);
    swift_bridgeObjectRelease();
    v29._object = (void *)0x8000000100378970;
    v29._uint64_t countAndFlagsBits = 0xD000000000000026;
    String.append(_:)(v29);
    swift_bridgeObjectRelease();
    v0[32] = v24;
    v30._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v30);
    swift_bridgeObjectRelease();
    v31._object = (void *)0x80000001003789A0;
    v31._uint64_t countAndFlagsBits = 0xD000000000000026;
    String.append(_:)(v31);
    unint64_t v32 = v48;
    void *v27 = v47;
    v27[1] = v32;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v25 - 8) + 104))(v27, enum case for GenericError.error(_:), v25);
    swift_willThrow();

    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v33 = (uint64_t (*)(void))v0[1];
  return v33();
}

uint64_t sub_10026B480()
{
  uint64_t v1 = (void *)v0[69];
  uint64_t v2 = (void *)v0[55];
  swift_willThrow();

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10026B534(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 344) = a2;
  *(void *)(v4 + 352) = v3;
  *(unsigned char *)(v4 + 636) = a3;
  *(void *)(v4 + 336) = a1;
  *(void *)(v4 + 360) = *v3;
  sub_100044014((uint64_t *)&unk_1003F3C10);
  *(void *)(v4 + 368) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Handle();
  *(void *)(v4 + 376) = v5;
  *(void *)(v4 + 384) = *(void *)(v5 - 8);
  *(void *)(v4 + 392) = swift_task_alloc();
  *(void *)(v4 + 400) = swift_task_alloc();
  uint64_t Priority = type metadata accessor for LocatePriority();
  *(void *)(v4 + 408) = Priority;
  uint64_t v7 = *(void *)(Priority - 8);
  *(void *)(v4 + 416) = v7;
  *(void *)(v4 + 424) = *(void *)(v7 + 64);
  *(void *)(v4 + 432) = swift_task_alloc();
  *(void *)(v4 + 440) = swift_task_alloc();
  *(void *)(v4 + 448) = swift_task_alloc();
  *(void *)(v4 + 456) = swift_task_alloc();
  *(void *)(v4 + 464) = swift_task_alloc();
  BOOL v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 472) = v8;
  void *v8 = v4;
  v8[1] = sub_10026B72C;
  return daemon.getter();
}

uint64_t sub_10026B72C(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v9 = *v1;
  *(void *)(v2 + 480) = a1;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 488) = v3;
  uint64_t v4 = type metadata accessor for Daemon();
  uint64_t v5 = type metadata accessor for DataManager(0);
  uint64_t v6 = sub_1000207A4(&qword_1003ECCA8, 255, (void (*)(uint64_t))&type metadata accessor for Daemon);
  uint64_t v7 = sub_1000207A4(&qword_1003ECCC0, 255, (void (*)(uint64_t))type metadata accessor for DataManager);
  *uint64_t v3 = v9;
  v3[1] = sub_10026B910;
  return ActorServiceDaemon.getService<A>()(v4, v5, v6, v7);
}

uint64_t sub_10026B910(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[62] = a1;
  v3[63] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = v3[44];
    uint64_t v5 = sub_10026DC74;
  }
  else
  {
    uint64_t v6 = v3[44];
    swift_release();
    uint64_t v5 = sub_10026BA38;
    uint64_t v4 = v6;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_10026BA38()
{
  uint64_t v1 = v0[62];
  uint64_t v2 = v0[63];
  uint64_t v3 = sub_1000902A0(v0[42]);
  v0[64] = v2;
  v0[65] = sub_1002466DC((uint64_t)v3);
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_10026BAC8, v1, 0);
}

uint64_t sub_10026BAC8()
{
  sub_100044014(&qword_1003ECF40);
  uint64_t v1 = type metadata accessor for HandleType();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = swift_allocObject();
  *(void *)(v0 + 528) = v4;
  *(_OWORD *)(v4 + 16) = xmmword_100367D70;
  (*(void (**)(unint64_t, void, uint64_t))(v2 + 104))(v4 + v3, enum case for HandleType.following(_:), v1);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 536) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10026BC24;
  return sub_100021584(v4, 1);
}

uint64_t sub_10026BC24(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 352);
  *(void *)(*(void *)v1 + 544) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_10026BD58, v2, 0);
}

uint64_t sub_10026BD58()
{
  uint64_t v154 = v0;
  uint64_t v1 = *((void *)v0 + 64);
  uint64_t v2 = *((void *)v0 + 58);
  uint64_t v3 = *((void *)v0 + 51);
  uint64_t v4 = *((void *)v0 + 52);
  uint64_t v5 = *((void *)v0 + 43);
  uint64_t v140 = sub_10027ED14(*((void *)v0 + 68), *((void *)v0 + 65));
  uint64_t v138 = v1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v6 = [objc_allocWithZone((Class)SPSecureLocationsSubscriptionContext) init];
  *((void *)v0 + 69) = v6;
  sub_100013C20(3);
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v141 = v6;
  [v6 setClientApp:v7];

  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  *((void *)v0 + 70) = v8;
  *((void *)v0 + 71) = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v8(v2, v5, v3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 88);
  int v10 = v9(v2, v3);
  int v11 = enum case for LocatePriority.backgroundAppRefresh(_:);
  int v12 = enum case for LocatePriority.shallow(_:);
  if (v10 == enum case for LocatePriority.backgroundAppRefresh(_:))
  {
    uint64_t v13 = 0;
  }
  else if (v10 == enum case for LocatePriority.shallow(_:))
  {
    uint64_t v13 = 1;
  }
  else if (v10 == enum case for LocatePriority.live(_:))
  {
    uint64_t v13 = 2;
  }
  else
  {
    if (v10 != enum case for LocatePriority.backgroundProactive(_:)) {
      return _assertionFailure(_:_:file:line:flags:)();
    }
    uint64_t v13 = 5;
  }
  uint64_t v139 = (NSObject **)((char *)v0 + 296);
  unint64_t v149 = (uint64_t *)((char *)v0 + 312);
  uint64_t v14 = *((void *)v0 + 57);
  uint64_t v15 = *((void *)v0 + 51);
  uint64_t v16 = *((void *)v0 + 43);
  [v6 setSubscriptionMode:v13];
  v8(v14, v16, v15);
  int v17 = v9(v14, v15);
  uint64_t v18 = &qword_1003EC000;
  uint64_t v152 = v0;
  if (v17 == v11 || v17 == v12) {
    goto LABEL_44;
  }
  if (v17 != enum case for LocatePriority.live(_:))
  {
    if (v17 == enum case for LocatePriority.backgroundProactive(_:)) {
      goto LABEL_44;
    }
    return _assertionFailure(_:_:file:line:flags:)();
  }
  *unint64_t v149 = (uint64_t)_swiftEmptyDictionarySingleton;
  uint64_t v19 = *((void *)v140 + 2);
  if (!v19)
  {
LABEL_38:
    if (v18[129] != -1) {
      swift_once();
    }
    uint64_t v52 = type metadata accessor for Logger();
    sub_100044058(v52, (uint64_t)qword_10040C290);
    char v53 = Logger.logObject.getter();
    os_log_type_t v54 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v147 = (uint64_t *)((char *)v0 + 288);
      uint64_t v55 = (uint8_t *)swift_slowAlloc();
      v153[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v55 = 136315138;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_100044014(&qword_1003ED230);
      uint64_t v56 = v18;
      uint64_t v57 = Dictionary.description.getter();
      unint64_t v59 = v58;
      swift_bridgeObjectRelease();
      uint64_t v60 = v57;
      uint64_t v18 = v56;
      *uint64_t v147 = sub_100037004(v60, v59, v153);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v53, v54, "pushIdentifiers: %s", v55, 0xCu);
      swift_arrayDestroy();
      uint64_t v0 = v152;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_100044014(&qword_1003ED230);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v141 setPushIdentifiers:isa];

    swift_bridgeObjectRelease();
LABEL_44:
    if (v18[129] != -1) {
LABEL_86:
    }
      swift_once();
    uint64_t v62 = (uint64_t *)((char *)v0 + 304);
    uint64_t v63 = type metadata accessor for Logger();
    *((void *)v0 + 72) = sub_100044058(v63, (uint64_t)qword_10040C290);
    uint64_t v64 = (uint64_t)v140;
    swift_bridgeObjectRetain_n();
    uint64_t v65 = Logger.logObject.getter();
    os_log_type_t v66 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v67 = (uint8_t *)swift_slowAlloc();
      v153[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v67 = 136315138;
      type metadata accessor for Friend();
      uint64_t v68 = v62;
      swift_bridgeObjectRetain();
      uint64_t v69 = Array.description.getter();
      unint64_t v71 = v70;
      swift_bridgeObjectRelease();
      *uint64_t v68 = sub_100037004(v69, v71, v153);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v65, v66, "handlesWithIds: %s", v67, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    unint64_t v72 = v141;
    uint64_t v73 = Logger.logObject.getter();
    os_log_type_t v74 = static os_log_type_t.debug.getter();
    uint64_t v75 = v152;
    if (os_log_type_enabled(v73, v74))
    {
      uint64_t v76 = (uint8_t *)swift_slowAlloc();
      unint64_t v150 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v76 = 138412290;
      *uint64_t v139 = v72;
      uint64_t v77 = v72;
      uint64_t v64 = (uint64_t)v140;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *unint64_t v150 = v72;

      _os_log_impl((void *)&_mh_execute_header, v73, v74, "context: %@", v76, 0xCu);
      sub_100044014(&qword_1003ECCC8);
      swift_arrayDestroy();
      uint64_t v75 = v152;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v73 = v72;
    }

    if (!*(void *)(v64 + 16))
    {
      swift_bridgeObjectRelease();
      uint64_t v96 = Logger.logObject.getter();
      os_log_type_t v97 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v96, v97))
      {
        uint64_t v98 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v98 = 0;
        _os_log_impl((void *)&_mh_execute_header, v96, v97, "Not subscribing to location update due to empty handles with ids", v98, 2u);
        swift_slowDealloc();
      }

      unint64_t v99 = sub_10004B2F8((uint64_t)_swiftEmptyArrayStorage);
      swift_release();

      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v100 = (uint64_t (*)(unint64_t))*((void *)v75 + 1);
      return v100(v99);
    }
    if ((static SystemInfo.underTest.getter() & 1) == 0)
    {
      long long v101 = *(void **)(*((void *)v75 + 44) + OBJC_IVAR____TtC13findmylocated15LocationService_secureLocationsManager);
      sub_10024AA28(v64);
      *((void *)v75 + 73) = v138;
      swift_bridgeObjectRelease();
      Class v102 = Array._bridgeToObjectiveC()().super.isa;
      *((void *)v75 + 74) = v102;
      swift_bridgeObjectRelease();
      *((void *)v75 + 2) = v75;
      *((void *)v75 + 7) = (char *)v75 + 320;
      *((void *)v75 + 3) = sub_10026D238;
      uint64_t v103 = swift_continuation_init();
      *((void *)v75 + 10) = _NSConcreteStackBlock;
      *((void *)v75 + 11) = 0x40000000;
      *((void *)v75 + 12) = sub_10026E250;
      *((void *)v75 + 13) = &unk_1003E3870;
      *((void *)v75 + 14) = v103;
      [v101 subscribeAndFetchLocationForIds:v102 context:v72 completion:(char *)v75 + 80];
      return _swift_continuation_await((char *)v75 + 16);
    }
    swift_bridgeObjectRelease();
    sub_100044014(&qword_1003F4B20);
    uint64_t v78 = swift_allocObject();
    *(_OWORD *)(v78 + 16) = xmmword_10036D5A0;
    *(void *)(v78 + 32) = [objc_allocWithZone((Class)SPSecureLocation) init];
    v153[0] = v78;
    specialized Array._endMutation()();
    id v79 = objc_allocWithZone((Class)SPSecureLocationsSubscriptionResult);
    sub_100281044();
    Class v80 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v81 = [v79 initWithExpiryTime:v80 locations:INFINITY];

    *((void *)v75 + 41) = v81;
    (*((void (**)(void, void, void))v75 + 70))(*((void *)v75 + 56), *((void *)v75 + 43), *((void *)v75 + 51));
    char v82 = Logger.logObject.getter();
    os_log_type_t v83 = static os_log_type_t.default.getter();
    BOOL v84 = os_log_type_enabled(v82, v83);
    uint64_t v85 = *((void *)v75 + 56);
    uint64_t v87 = *((void *)v75 + 51);
    uint64_t v86 = *((void *)v75 + 52);
    if (v84)
    {
      BOOL v88 = (id *)((char *)v75 + 328);
      uint64_t v89 = swift_slowAlloc();
      v153[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v89 = 136446466;
      sub_1000207A4(&qword_1003F3330, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
      uint64_t v90 = dispatch thunk of CustomStringConvertible.description.getter();
      *((void *)v152 + 34) = sub_100037004(v90, v91, v153);
      uint64_t v75 = v152;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v85, v87);
      *(_WORD *)(v89 + 12) = 1024;
      swift_beginAccess();
      id v92 = [*((id *)v152 + 41) locations];
      unint64_t v93 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      int64_t v94 = v88;
      if (v93 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v95 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v95 = *(void *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      *((_DWORD *)v152 + 158) = v95 != 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v82, v83, "%{public}s subscription successful. With location? %{BOOL}d", (uint8_t *)v89, 0x12u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v85, v87);

      int64_t v94 = (id *)((char *)v75 + 328);
    }
    if (*((unsigned char *)v75 + 636) == 1)
    {
      swift_beginAccess();
      id v104 = *v94;
      [*v94 expiresIn];
      if (v105 > 0.0)
      {
        uint64_t v106 = *((void *)v75 + 42);
        [v104 expiresIn];
        uint64_t v107 = static Duration.seconds(_:)();
        uint64_t v109 = v108;
        uint64_t v110 = *(void *)(v106 + 16);
        if (v110)
        {
          uint64_t v111 = *((void *)v75 + 48);
          uint64_t v112 = *((void *)v75 + 42)
               + ((*(unsigned __int8 *)(v111 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v111 + 80));
          uint64_t v113 = *(void *)(v111 + 72);
          swift_bridgeObjectRetain();
          do
          {
            sub_100280AB8(v112, v107, v109, *((void *)v75 + 43));
            v112 += v113;
            --v110;
          }
          while (v110);
          swift_bridgeObjectRelease();
        }
        uint64_t v114 = (void (*)(uint64_t, uint64_t, uint64_t))*((void *)v152 + 70);
        uint64_t v115 = *((void *)v152 + 55);
        id v142 = (id)*((void *)v152 + 53);
        uint64_t v116 = *((void *)v152 + 52);
        uint64_t v117 = *((void *)v152 + 51);
        uint64_t v118 = *((void *)v152 + 46);
        uint64_t v145 = v118;
        uint64_t v148 = *((void *)v152 + 45);
        uint64_t v119 = *((void *)v152 + 44);
        uint64_t v120 = *((void *)v152 + 43);
        uint64_t v144 = *((void *)v152 + 42);
        uint64_t v121 = type metadata accessor for TaskPriority();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v121 - 8) + 56))(v118, 1, 1, v121);
        v114(v115, v120, v117);
        uint64_t v122 = sub_1000207A4(qword_1003F3148, 255, (void (*)(uint64_t))type metadata accessor for LocationService);
        unint64_t v123 = (*(unsigned __int8 *)(v116 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80);
        unint64_t v124 = ((unint64_t)v142 + v123 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v125 = (char *)swift_allocObject();
        *((void *)v125 + 2) = v119;
        *((void *)v125 + 3) = v122;
        *((void *)v125 + 4) = v119;
        *((void *)v125 + 5) = v144;
        (*(void (**)(char *, uint64_t, uint64_t))(v116 + 32))(&v125[v123], v115, v117);
        unint64_t v126 = (uint64_t *)&v125[v124];
        *unint64_t v126 = v107;
        v126[1] = v109;
        *(void *)&v125[(v124 + 23) & 0xFFFFFFFFFFFFFFF8] = v148;
        swift_retain_n();
        swift_bridgeObjectRetain();
        uint64_t v127 = (uint64_t)v125;
        uint64_t v75 = v152;
        sub_10010405C(v145, (uint64_t)&unk_1003F3360, v127);
        swift_release();
        goto LABEL_78;
      }
      uint64_t v128 = 0xD00000000000001ELL;
      uint64_t v129 = "Subscription has no expiration";
    }
    else
    {
      uint64_t v128 = 0xD00000000000001FLL;
      uint64_t v129 = "should not check Resubscription";
    }
    unint64_t v130 = (unint64_t)(v129 - 32) | 0x8000000000000000;
    swift_bridgeObjectRetain();
    uint64_t v131 = Logger.logObject.getter();
    os_log_type_t v132 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v131, v132))
    {
      int64_t v133 = (uint8_t *)swift_slowAlloc();
      v153[0] = swift_slowAlloc();
      *(_DWORD *)int64_t v133 = 136315138;
      swift_bridgeObjectRetain();
      *((void *)v152 + 32) = sub_100037004(v128, v130, v153);
      uint64_t v75 = v152;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v131, v132, "%s. No need to resubscribe.", v133, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
LABEL_78:
    swift_beginAccess();
    id v134 = [*((id *)v75 + 41) locations];
    uint64_t v135 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    *((void *)v75 + 76) = v135;

    uint64_t v136 = (void *)swift_task_alloc();
    *((void *)v75 + 77) = v136;
    void *v136 = v75;
    v136[1] = sub_10026DA58;
    uint64_t v137 = *((void *)v75 + 44);
    v136[2] = v135;
    v136[3] = v137;
    return _swift_task_switch(sub_1002749D4, v137, 0);
  }
  uint64_t v20 = *((void *)v0 + 48);
  uint64_t v21 = *(void *)(type metadata accessor for Friend() - 8);
  uint64_t v22 = &v140[(*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80)];
  uint64_t v143 = *(void *)(v21 + 72);
  swift_bridgeObjectRetain();
  uint64_t v23 = (void (**)(uint64_t, uint64_t))(v20 + 8);
  while (1)
  {
    uint64_t v151 = v19;
    uint64_t v26 = *((void *)v0 + 49);
    uint64_t v25 = *((void *)v0 + 50);
    uint64_t v27 = *((void *)v0 + 47);
    Friend.handle.getter();
    uint64_t v28 = Handle.identifier.getter();
    uint64_t v30 = v29;
    uint64_t v0 = *v23;
    (*v23)(v25, v27);
    Friend.handle.getter();
    uint64_t v31 = Handle.pushIdentifiers.getter();
    v0(v26, v27);
    if (v31) {
      break;
    }
    swift_bridgeObjectRetain();
    unint64_t v42 = sub_10003B888(v28, v30);
    char v44 = v43;
    swift_bridgeObjectRelease();
    if (v44)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v46 = *v149;
      v153[0] = *v149;
      *unint64_t v149 = 0x8000000000000000;
      uint64_t v0 = v152;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_100127CDC();
        uint64_t v46 = v153[0];
      }
      swift_bridgeObjectRelease();
      sub_100124F44(v42, v46);
      *unint64_t v149 = v46;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v0 = v152;
LABEL_17:
    v22 += v143;
    uint64_t v19 = v151 - 1;
    if (v151 == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v18 = &qword_1003EC000;
      goto LABEL_38;
    }
  }
  uint64_t v146 = v31;
  char v32 = swift_isUniquelyReferenced_nonNull_native();
  v153[0] = *v149;
  uint64_t v33 = (void *)v153[0];
  *unint64_t v149 = 0x8000000000000000;
  unint64_t v35 = sub_10003B888(v28, v30);
  uint64_t v36 = v33[2];
  BOOL v37 = (v34 & 1) == 0;
  uint64_t v38 = v36 + v37;
  if (__OFADD__(v36, v37))
  {
    __break(1u);
LABEL_85:
    __break(1u);
    goto LABEL_86;
  }
  char v39 = v34;
  if (v33[3] >= v38)
  {
    if (v32)
    {
      if ((v34 & 1) == 0)
      {
LABEL_30:
        v33[(v35 >> 6) + 8] |= 1 << v35;
        uint64_t v47 = (uint64_t *)(v33[6] + 16 * v35);
        *uint64_t v47 = v28;
        v47[1] = v30;
        *(void *)(v33[7] + 8 * v35) = v146;
        uint64_t v48 = v33[2];
        BOOL v49 = __OFADD__(v48, 1);
        uint64_t v50 = v48 + 1;
        if (v49) {
          goto LABEL_85;
        }
        v33[2] = v50;
        swift_bridgeObjectRetain();
        goto LABEL_15;
      }
    }
    else
    {
      sub_100127CDC();
      uint64_t v33 = (void *)v153[0];
      if ((v39 & 1) == 0) {
        goto LABEL_30;
      }
    }
LABEL_14:
    uint64_t v24 = v33[7];
    swift_bridgeObjectRelease();
    *(void *)(v24 + 8 * v35) = v146;
LABEL_15:
    *unint64_t v149 = (uint64_t)v33;
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  sub_100141D28(v38, v32);
  uint64_t v33 = (void *)v153[0];
  unint64_t v40 = sub_10003B888(v28, v30);
  if ((v39 & 1) == (v41 & 1))
  {
    unint64_t v35 = v40;
    if ((v39 & 1) == 0) {
      goto LABEL_30;
    }
    goto LABEL_14;
  }
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_10026D238()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 600) = v2;
  uint64_t v3 = *(void *)(v1 + 352);
  if (v2) {
    uint64_t v4 = sub_10026DD44;
  }
  else {
    uint64_t v4 = sub_10026D358;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10026D358()
{
  uint64_t v57 = v0;
  uint64_t v1 = (id *)(v0 + 328);
  uint64_t v2 = *(void **)(v0 + 592);
  *(void *)(v0 + 328) = *(void *)(v0 + 320);

  (*(void (**)(void, void, void))(v0 + 560))(*(void *)(v0 + 448), *(void *)(v0 + 344), *(void *)(v0 + 408));
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  p_os_log_type_t type = &stru_1003EAFF0.type;
  if (os_log_type_enabled(v3, v4))
  {
    os_log_type_t v55 = v4;
    uint64_t v6 = *(void *)(v0 + 448);
    uint64_t v8 = *(void *)(v0 + 408);
    uint64_t v7 = *(void *)(v0 + 416);
    uint64_t v9 = swift_slowAlloc();
    v56[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136446466;
    sub_1000207A4(&qword_1003F3330, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
    uint64_t v10 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 272) = sub_100037004(v10, v11, v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v1 = (id *)(v0 + 328);
    swift_bridgeObjectRelease();
    uint64_t v12 = v8;
    p_os_log_type_t type = &stru_1003EAFF0.type;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v12);
    *(_WORD *)(v9 + 12) = 1024;
    swift_beginAccess();
    id v13 = [*(id *)(v0 + 328) locations];
    sub_100281044();
    unint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    *(_DWORD *)(v0 + 632) = v15 != 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v3, v55, "%{public}s subscription successful. With location? %{BOOL}d", (uint8_t *)v9, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(*(void *)(v0 + 416) + 8))(*(void *)(v0 + 448), *(void *)(v0 + 408));
  }

  uint64_t v16 = 0xD00000000000001ELL;
  if (*(unsigned char *)(v0 + 636) != 1)
  {
    uint64_t v16 = 0xD00000000000001FLL;
    unint64_t v40 = "should not check Resubscription";
    goto LABEL_15;
  }
  swift_beginAccess();
  id v17 = *v1;
  [*v1 expiresIn];
  if (v18 <= 0.0)
  {
    unint64_t v40 = "Subscription has no expiration";
LABEL_15:
    unint64_t v41 = (unint64_t)(v40 - 32) | 0x8000000000000000;
    swift_bridgeObjectRetain();
    unint64_t v42 = Logger.logObject.getter();
    os_log_type_t v43 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v42, v43))
    {
      char v44 = (uint8_t *)swift_slowAlloc();
      v56[0] = swift_slowAlloc();
      *(_DWORD *)char v44 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 256) = sub_100037004(v16, v41, v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "%s. No need to resubscribe.", v44, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    goto LABEL_18;
  }
  uint64_t v19 = *(void *)(v0 + 336);
  [v17 expiresIn];
  uint64_t v20 = static Duration.seconds(_:)();
  uint64_t v22 = v21;
  uint64_t v23 = *(void *)(v19 + 16);
  if (v23)
  {
    uint64_t v24 = *(void *)(v0 + 384);
    uint64_t v25 = *(void *)(v0 + 336)
        + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
    uint64_t v26 = *(void *)(v24 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_100280AB8(v25, v20, v22, *(void *)(v0 + 344));
      v25 += v26;
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease();
  }
  uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 560);
  uint64_t v28 = *(void *)(v0 + 440);
  uint64_t v29 = *(void *)(v0 + 416);
  uint64_t v51 = *(void *)(v0 + 424);
  uint64_t v30 = *(void *)(v0 + 408);
  uint64_t v50 = v30;
  uint64_t v31 = *(void *)(v0 + 368);
  uint64_t v53 = v31;
  uint64_t v54 = *(void *)(v0 + 360);
  uint64_t v32 = *(void *)(v0 + 344);
  uint64_t v33 = *(void *)(v0 + 352);
  uint64_t v52 = *(void *)(v0 + 336);
  uint64_t v34 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v31, 1, 1, v34);
  v27(v28, v32, v30);
  uint64_t v35 = sub_1000207A4(qword_1003F3148, 255, (void (*)(uint64_t))type metadata accessor for LocationService);
  unint64_t v36 = (*(unsigned __int8 *)(v29 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  unint64_t v37 = (v51 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v38 = (char *)swift_allocObject();
  *((void *)v38 + 2) = v33;
  *((void *)v38 + 3) = v35;
  *((void *)v38 + 4) = v33;
  *((void *)v38 + 5) = v52;
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(&v38[v36], v28, v50);
  char v39 = (uint64_t *)&v38[v37];
  *char v39 = v20;
  v39[1] = v22;
  *(void *)&v38[(v37 + 23) & 0xFFFFFFFFFFFFFFF8] = v54;
  swift_retain_n();
  swift_bridgeObjectRetain();
  sub_10010405C(v53, (uint64_t)&unk_1003F3360, (uint64_t)v38);
  swift_release();
  p_os_log_type_t type = (char **)(&stru_1003EAFF0 + 16);
LABEL_18:
  swift_beginAccess();
  id v45 = [*(id *)(v0 + 328) p_type[140]];
  sub_100281044();
  uint64_t v46 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 608) = v46;

  uint64_t v47 = (void *)swift_task_alloc();
  *(void *)(v0 + 616) = v47;
  *uint64_t v47 = v0;
  v47[1] = sub_10026DA58;
  uint64_t v48 = *(void *)(v0 + 352);
  uint64_t v47[2] = v46;
  v47[3] = v48;
  return _swift_task_switch(sub_1002749D4, v48, 0);
}

uint64_t sub_10026DA58(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 352);
  *(void *)(*(void *)v1 + 624) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_10026DB8C, v2, 0);
}

uint64_t sub_10026DB8C()
{
  uint64_t v1 = *(void **)(v0 + 552);

  swift_release();
  uint64_t v2 = *(void *)(v0 + 624);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t sub_10026DC74()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10026DD44()
{
  unint64_t v42 = v0;
  uint64_t v1 = (void *)v0[74];
  uint64_t v2 = (void (*)(uint64_t, uint64_t, uint64_t))v0[70];
  uint64_t v3 = v0[54];
  uint64_t v4 = v0[51];
  uint64_t v5 = v0[43];
  swift_willThrow();

  v2(v3, v5, v4);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = v0[75];
    uint64_t v9 = v0[54];
    uint64_t v11 = v0[51];
    uint64_t v10 = v0[52];
    uint64_t v12 = swift_slowAlloc();
    v41[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315394;
    sub_1000207A4(&qword_1003F3330, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[35] = sub_100037004(v13, v14, v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    *(_WORD *)(v12 + 12) = 2082;
    v0[31] = v8;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v15 = String.init<A>(describing:)();
    v0[30] = sub_100037004(v15, v16, v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%s Subscription failed due to %{public}s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v0[52] + 8))(v0[54], v0[51]);
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v17 = v0[42];
  uint64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    uint64_t v19 = v0[48];
    uint64_t v20 = v17 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    uint64_t v21 = *(void *)(v19 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_100280AB8(v20, 0xD02AB486CEDC0000, 0, v0[43]);
      v20 += v21;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
    uint64_t v17 = v0[42];
  }
  uint64_t v22 = (void (*)(uint64_t, uint64_t, uint64_t))v0[70];
  unint64_t v40 = (void *)v0[69];
  uint64_t v23 = v0[55];
  uint64_t v24 = v0[52];
  uint64_t v37 = v23;
  uint64_t v38 = v0[53];
  uint64_t v25 = v0[51];
  uint64_t v26 = v0[46];
  uint64_t v39 = v0[45];
  uint64_t v28 = v0[43];
  uint64_t v27 = v0[44];
  uint64_t v29 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v26, 1, 1, v29);
  v22(v23, v28, v25);
  uint64_t v30 = sub_1000207A4(qword_1003F3148, 255, (void (*)(uint64_t))type metadata accessor for LocationService);
  unint64_t v31 = (*(unsigned __int8 *)(v24 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  unint64_t v32 = (v38 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v33 = (char *)swift_allocObject();
  *((void *)v33 + 2) = v27;
  *((void *)v33 + 3) = v30;
  *((void *)v33 + 4) = v27;
  *((void *)v33 + 5) = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 32))(&v33[v31], v37, v25);
  *(_OWORD *)&v33[v32] = xmmword_100370910;
  *(void *)&v33[(v32 + 23) & 0xFFFFFFFFFFFFFFF8] = v39;
  swift_retain_n();
  swift_bridgeObjectRetain();
  sub_10010405C(v26, (uint64_t)&unk_1003F3350, (uint64_t)v33);
  swift_release();
  unint64_t v34 = sub_10004B2F8((uint64_t)_swiftEmptyArrayStorage);
  swift_errorRelease();
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v35 = (uint64_t (*)(unint64_t))v0[1];
  return v35(v34);
}

uint64_t sub_10026E250(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_100044014(&qword_1003F4B30);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    **(void **)(*(void *)(v3 + 64) + 40) = a2;
    id v8 = a2;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_10026E308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[6] = a8;
  v8[7] = v16;
  v8[4] = a6;
  v8[5] = a7;
  v8[2] = a4;
  v8[3] = a5;
  type metadata accessor for UUID();
  v8[8] = swift_task_alloc();
  uint64_t Priority = type metadata accessor for LocatePriority();
  v8[9] = Priority;
  uint64_t v12 = *(void *)(Priority - 8);
  v8[10] = v12;
  v8[11] = *(void *)(v12 + 64);
  v8[12] = swift_task_alloc();
  v8[13] = swift_task_alloc();
  uint64_t v13 = (void *)swift_task_alloc();
  v8[14] = v13;
  *uint64_t v13 = v8;
  v13[1] = sub_10026E468;
  return sub_100272530(a5, a6);
}

uint64_t sub_10026E468(char a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 16);
  *(unsigned char *)(*(void *)v1 + 120) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10026E580, v2, 0);
}

uint64_t sub_10026E580()
{
  if (*(unsigned char *)(v0 + 120) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 104);
    uint64_t v2 = *(void *)(v0 + 80);
    uint64_t v3 = *(void *)(v0 + 88);
    uint64_t v4 = *(void *)(v0 + 72);
    uint64_t v19 = *(void *)(v0 + 56);
    uint64_t v20 = *(void *)(v0 + 96);
    uint64_t v5 = *(void *)(v0 + 32);
    uint64_t v21 = *(void *)(v0 + 40);
    uint64_t v23 = *(void *)(v0 + 48);
    uint64_t v25 = v5;
    uint64_t v6 = *(void *)(v0 + 24);
    uint64_t v18 = *(void *)(v0 + 16);
    type metadata accessor for WorkItemQueue.WorkItem();
    uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
    v24(v1, v5, v4);
    uint64_t v7 = *(unsigned __int8 *)(v2 + 80);
    unint64_t v8 = (((v7 + 32) & ~v7) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v21;
    *(void *)(v10 + 24) = v23;
    uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
    v22(v10 + ((v7 + 32) & ~v7), v1, v4);
    *(void *)(v10 + v8) = v6;
    *(void *)(v10 + v9) = v18;
    *(void *)(v10 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8)) = v19;
    v24(v20, v25, v4);
    uint64_t v11 = (v7 + 16) & ~v7;
    unint64_t v12 = (v3 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v13 = swift_allocObject();
    v22(v13 + v11, v20, v4);
    *(void *)(v13 + v12) = v6;
    *(void *)(v13 + ((v12 + 15) & 0xFFFFFFFFFFFFFFF8)) = v19;
    swift_bridgeObjectRetain_n();
    swift_retain();
    UUID.init()();
    uint64_t v14 = WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
    v24(v1, v25, v4);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v18;
    *(void *)(v15 + 24) = v14;
    v22(v15 + ((v7 + 32) & ~v7), v1, v4);
    swift_retain();
    swift_retain();
    UUID.init()();
    WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
    dispatch thunk of WorkItemQueue.enqueue(_:)();
    dispatch thunk of WorkItemQueue.enqueue(_:)();
    swift_release();
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_10026E8DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[11] = a4;
  v5[12] = a5;
  v5[9] = a2;
  v5[10] = a3;
  v5[8] = a1;
  uint64_t v6 = type metadata accessor for Handle();
  v5[13] = v6;
  v5[14] = *(void *)(v6 - 8);
  v5[15] = swift_task_alloc();
  uint64_t Priority = type metadata accessor for LocatePriority();
  v5[16] = Priority;
  v5[17] = *(void *)(Priority - 8);
  v5[18] = swift_task_alloc();
  v5[19] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for ContinuousClock();
  v5[20] = v8;
  v5[21] = *(void *)(v8 - 8);
  v5[22] = swift_task_alloc();
  return _swift_task_switch(sub_10026EA6C, 0, 0);
}

uint64_t sub_10026EA6C()
{
  ContinuousClock.init()();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1003F0B58 + dword_1003F0B58);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[23] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10026EB2C;
  uint64_t v3 = v0[8];
  uint64_t v2 = v0[9];
  return v5(v3, v2, 0, 0, 1);
}

uint64_t sub_10026EB2C()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 176);
  uint64_t v3 = *(void *)(*(void *)v1 + 168);
  uint64_t v4 = *(void *)(*(void *)v1 + 160);
  *(void *)(*(void *)v1 + 192) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0) {
    uint64_t v5 = sub_10026EC9C;
  }
  else {
    uint64_t v5 = sub_10026ED28;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10026EC9C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10026ED28()
{
  uint64_t v47 = v0;
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[10];
  uint64_t v5 = type metadata accessor for Logger();
  v0[25] = sub_100044058(v5, (uint64_t)qword_10040C290);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[26] = v6;
  v0[27] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v1, v4, v2);
  swift_bridgeObjectRetain_n();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = v0[19];
  uint64_t v12 = v0[16];
  uint64_t v11 = v0[17];
  uint64_t v13 = v0[11];
  if (v9)
  {
    os_log_type_t v42 = v8;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136315651;
    uint64_t v45 = v40;
    sub_1000207A4(&qword_1003F3330, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
    uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[5] = sub_100037004(v15, v16, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v39(v10, v12);
    *(_WORD *)(v14 + 12) = 2160;
    v0[6] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    unint64_t v41 = (uint8_t *)v14;
    *(_WORD *)(v14 + 22) = 2081;
    int64_t v17 = *(void *)(v13 + 16);
    if (v17)
    {
      uint64_t v18 = v0[14];
      uint64_t v19 = v0[11];
      uint64_t v46 = _swiftEmptyArrayStorage;
      sub_10003CB84(0, v17, 0);
      uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
      v18 += 16;
      uint64_t v21 = v19 + ((*(unsigned __int8 *)(v18 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 64));
      uint64_t v43 = *(void *)(v18 + 56);
      char v44 = v20;
      uint64_t v22 = (void (**)(uint64_t, uint64_t))(v18 - 8);
      do
      {
        uint64_t v23 = v0[15];
        uint64_t v24 = v0[13];
        v44(v23, v21, v24);
        uint64_t v25 = Handle.identifier.getter();
        uint64_t v27 = v26;
        (*v22)(v23, v24);
        uint64_t v28 = v46;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10003CB84(0, v28[2] + 1, 1);
          uint64_t v28 = v46;
        }
        unint64_t v30 = v28[2];
        unint64_t v29 = v28[3];
        if (v30 >= v29 >> 1)
        {
          sub_10003CB84(v29 > 1, v30 + 1, 1);
          uint64_t v28 = v46;
        }
        v28[2] = v30 + 1;
        unint64_t v31 = &v28[2 * v30];
        v31[4] = v25;
        v31[5] = v27;
        v21 += v43;
        --v17;
      }
      while (v17);
    }
    uint64_t v33 = Array.description.getter();
    unint64_t v35 = v34;
    swift_bridgeObjectRelease();
    v0[7] = sub_100037004(v33, v35, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v42, "Resubscription task fired for: %s for handles: %{private,mask.hash}s, checking if we need to resubscribe", v41, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v32 = v39;
  }
  else
  {
    unint64_t v32 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v32(v0[19], v0[16]);

    swift_bridgeObjectRelease_n();
  }
  v0[28] = v32;
  unint64_t v36 = (void *)swift_task_alloc();
  v0[29] = v36;
  *unint64_t v36 = v0;
  v36[1] = sub_10026F1CC;
  uint64_t v37 = v0[10];
  return sub_100271600(v37);
}

uint64_t sub_10026F1CC(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  uint64_t v7 = *v1;
  *(void *)(v3 + 240) = a1;
  swift_task_dealloc();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 248) = v4;
  *uint64_t v4 = v7;
  v4[1] = sub_10026F330;
  uint64_t v5 = *(void *)(v2 + 80);
  return sub_1002719D8(v5);
}

uint64_t sub_10026F330()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10026F42C, 0, 0);
}

uint64_t sub_10026F42C()
{
  uint64_t v43 = v0;
  if (*(void *)(*(void *)(v0 + 240) + 16))
  {
    (*(void (**)(void, void, void))(v0 + 208))(*(void *)(v0 + 144), *(void *)(v0 + 80), *(void *)(v0 + 128));
    swift_bridgeObjectRetain_n();
    uint64_t v1 = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.default.getter();
    BOOL v3 = os_log_type_enabled(v1, v2);
    uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v0 + 224);
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v6 = *(void *)(v0 + 128);
    uint64_t v7 = *(void *)(v0 + 88);
    if (v3)
    {
      os_log_t log = v1;
      uint64_t v8 = swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315651;
      sub_1000207A4(&qword_1003F3330, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
      uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 16) = sub_100037004(v9, v10, &v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v4(v5, v6);
      *(_WORD *)(v8 + 12) = 2160;
      *(void *)(v0 + 24) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v37 = (uint8_t *)v8;
      *(_WORD *)(v8 + 22) = 2081;
      int64_t v11 = *(void *)(v7 + 16);
      if (v11)
      {
        uint64_t v12 = *(void *)(v0 + 112);
        uint64_t v13 = *(void *)(v0 + 88);
        os_log_type_t v42 = _swiftEmptyArrayStorage;
        sub_10003CB84(0, v11, 0);
        uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
        v12 += 16;
        uint64_t v15 = v13 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
        uint64_t v39 = *(void *)(v12 + 56);
        uint64_t v40 = v14;
        unint64_t v16 = (void (**)(uint64_t, uint64_t))(v12 - 8);
        do
        {
          uint64_t v17 = *(void *)(v0 + 120);
          uint64_t v18 = *(void *)(v0 + 104);
          v40(v17, v15, v18);
          uint64_t v19 = Handle.identifier.getter();
          uint64_t v21 = v20;
          (*v16)(v17, v18);
          uint64_t v22 = v42;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_10003CB84(0, v22[2] + 1, 1);
            uint64_t v22 = v42;
          }
          unint64_t v24 = v22[2];
          unint64_t v23 = v22[3];
          if (v24 >= v23 >> 1)
          {
            sub_10003CB84(v23 > 1, v24 + 1, 1);
            uint64_t v22 = v42;
          }
          v22[2] = v24 + 1;
          uint64_t v25 = &v22[2 * v24];
          v25[4] = v19;
          v25[5] = v21;
          v15 += v39;
          --v11;
        }
        while (v11);
      }
      uint64_t v31 = Array.description.getter();
      unint64_t v33 = v32;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 32) = sub_100037004(v31, v33, &v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, log, v2, "Resubscribing %s for handles %{private,mask.hash}s", v37, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      v4(*(void *)(v0 + 144), *(void *)(v0 + 128));

      swift_bridgeObjectRelease_n();
    }
    unint64_t v34 = (void *)swift_task_alloc();
    *(void *)(v0 + 256) = v34;
    *unint64_t v34 = v0;
    v34[1] = sub_10026F950;
    uint64_t v35 = *(void *)(v0 + 240);
    uint64_t v36 = *(void *)(v0 + 80);
    return sub_10026B534(v35, v36, 1);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Resubscription task fired but handles clients are interested in is empty, not resubscribing. Clearing out and returning.", v28, 2u);
      swift_slowDealloc();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
    return v29();
  }
}

uint64_t sub_10026F950()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v0) {
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v3 = *(uint64_t (**)(void))(v2 + 8);
  return v3();
}

uint64_t sub_10026FAD8(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 120) = a3;
  *(void *)(v4 + 128) = a4;
  *(unsigned char *)(v4 + 224) = a2;
  *(void *)(v4 + 112) = a1;
  uint64_t v5 = type metadata accessor for CancellationError();
  *(void *)(v4 + 136) = v5;
  *(void *)(v4 + 144) = *(void *)(v5 - 8);
  *(void *)(v4 + 152) = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Handle();
  *(void *)(v4 + 160) = v6;
  *(void *)(v4 + 168) = *(void *)(v6 - 8);
  *(void *)(v4 + 176) = swift_task_alloc();
  uint64_t Priority = type metadata accessor for LocatePriority();
  *(void *)(v4 + 184) = Priority;
  *(void *)(v4 + 192) = *(void *)(Priority - 8);
  *(void *)(v4 + 200) = swift_task_alloc();
  *(void *)(v4 + 208) = swift_task_alloc();
  *(void *)(v4 + 216) = swift_task_alloc();
  return _swift_task_switch(sub_10026FC74, 0, 0);
}

uint64_t sub_10026FC74()
{
  uint64_t v128 = v0;
  if (v0[28])
  {
    uint64_t v34 = v0[14];
    v0[2] = v34;
    swift_errorRetain();
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    if (swift_dynamicCast())
    {
      (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
      if (qword_1003EC408 != -1) {
        swift_once();
      }
      uint64_t v35 = v0[26];
      uint64_t v36 = v0[23];
      uint64_t v37 = v0[24];
      uint64_t v38 = v0[15];
      uint64_t v39 = type metadata accessor for Logger();
      sub_100044058(v39, (uint64_t)qword_10040C290);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v35, v38, v36);
      swift_bridgeObjectRetain_n();
      uint64_t v40 = Logger.logObject.getter();
      os_log_type_t v41 = static os_log_type_t.default.getter();
      BOOL v42 = os_log_type_enabled(v40, v41);
      uint64_t v43 = v0[26];
      uint64_t v45 = v0[23];
      uint64_t v44 = v0[24];
      uint64_t v46 = v0[16];
      if (!v42)
      {
        sub_1001D5B10(v0[14], 1);
        (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v45);
        swift_bridgeObjectRelease_n();

        goto LABEL_43;
      }
      os_log_type_t v115 = v41;
      uint64_t v47 = swift_slowAlloc();
      uint64_t v126 = swift_slowAlloc();
      *(_DWORD *)uint64_t v47 = 136315651;
      sub_1000207A4(&qword_1003F3330, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
      uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[8] = sub_100037004(v48, v49, &v126);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v45);
      *(_WORD *)(v47 + 12) = 2160;
      v0[9] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v112 = (uint8_t *)v47;
      *(_WORD *)(v47 + 22) = 2081;
      int64_t v50 = *(void *)(v46 + 16);
      if (v50)
      {
        uint64_t v51 = v0[21];
        uint64_t v52 = v0[16];
        uint64_t v127 = _swiftEmptyArrayStorage;
        sub_10003CB84(0, v50, 0);
        uint64_t v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 16);
        uint64_t v53 = v51 + 16;
        uint64_t v55 = v52 + ((*(unsigned __int8 *)(v53 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 64));
        uint64_t v120 = *(void *)(v53 + 56);
        uint64_t v121 = v54;
        do
        {
          uint64_t v56 = v0[22];
          uint64_t v57 = v0[20];
          v121(v56, v55, v57);
          uint64_t v58 = Handle.identifier.getter();
          uint64_t v60 = v59;
          (*(void (**)(uint64_t, uint64_t))(v53 - 8))(v56, v57);
          uint64_t v61 = v127;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_10003CB84(0, v61[2] + 1, 1);
            uint64_t v61 = v127;
          }
          unint64_t v63 = v61[2];
          unint64_t v62 = v61[3];
          if (v63 >= v62 >> 1)
          {
            sub_10003CB84(v62 > 1, v63 + 1, 1);
            uint64_t v61 = v127;
          }
          v61[2] = v63 + 1;
          uint64_t v64 = &v61[2 * v63];
          v64[4] = v58;
          v64[5] = v60;
          v55 += v120;
          --v50;
          uint64_t v0 = v125;
        }
        while (v50);
      }
      uint64_t v100 = v0[14];
      uint64_t v101 = Array.description.getter();
      unint64_t v103 = v102;
      swift_bridgeObjectRelease();
      v0[10] = sub_100037004(v101, v103, &v126);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v40, v115, "%s resubscription canceled for %{private,mask.hash}s.", v112, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v118 = v34;
      if (qword_1003EC408 != -1) {
        swift_once();
      }
      uint64_t v66 = v0[24];
      uint64_t v65 = v0[25];
      uint64_t v67 = v0[23];
      uint64_t v68 = v0[15];
      uint64_t v69 = v0[14];
      uint64_t v70 = type metadata accessor for Logger();
      sub_100044058(v70, (uint64_t)qword_10040C290);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 16))(v65, v68, v67);
      swift_bridgeObjectRetain();
      sub_10028170C(v69, 1);
      swift_bridgeObjectRetain();
      sub_10028170C(v69, 1);
      uint64_t v0 = v125;
      unint64_t v71 = Logger.logObject.getter();
      os_log_type_t v72 = static os_log_type_t.error.getter();
      BOOL v73 = os_log_type_enabled(v71, v72);
      uint64_t v75 = v125[24];
      uint64_t v74 = v125[25];
      uint64_t v76 = v125[23];
      uint64_t v77 = v125[16];
      if (!v73)
      {
        uint64_t v96 = v125[14];
        sub_1001D5B10(v96, 1);
        (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v74, v76);
        swift_bridgeObjectRelease_n();
        sub_1001D5B10(v96, 1);
        sub_1001D5B10(v96, 1);

        goto LABEL_43;
      }
      os_log_type_t v113 = v72;
      uint64_t v111 = v71;
      uint64_t v78 = swift_slowAlloc();
      uint64_t v126 = swift_slowAlloc();
      *(_DWORD *)uint64_t v78 = 136315907;
      sub_1000207A4(&qword_1003F3330, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
      uint64_t v79 = dispatch thunk of CustomStringConvertible.description.getter();
      v125[3] = sub_100037004(v79, v80, &v126);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v74, v76);
      *(_WORD *)(v78 + 12) = 2160;
      v125[4] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v78 + 22) = 2081;
      int64_t v81 = *(void *)(v77 + 16);
      if (v81)
      {
        uint64_t v82 = v125[21];
        uint64_t v83 = v125[16];
        uint64_t v127 = _swiftEmptyArrayStorage;
        sub_10003CB84(0, v81, 0);
        BOOL v84 = *(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 16);
        v82 += 16;
        uint64_t v85 = v83 + ((*(unsigned __int8 *)(v82 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 64));
        uint64_t v122 = *(void *)(v82 + 56);
        unint64_t v124 = v84;
        uint64_t v86 = (void (**)(uint64_t, uint64_t))(v82 - 8);
        do
        {
          uint64_t v87 = v125[22];
          uint64_t v88 = v125[20];
          v124(v87, v85, v88);
          uint64_t v89 = Handle.identifier.getter();
          uint64_t v91 = v90;
          (*v86)(v87, v88);
          id v92 = v127;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_10003CB84(0, v92[2] + 1, 1);
            id v92 = v127;
          }
          unint64_t v94 = v92[2];
          unint64_t v93 = v92[3];
          if (v94 >= v93 >> 1)
          {
            sub_10003CB84(v93 > 1, v94 + 1, 1);
            id v92 = v127;
          }
          v92[2] = v94 + 1;
          uint64_t v95 = &v92[2 * v94];
          v95[4] = v89;
          v95[5] = v91;
          v85 += v122;
          --v81;
        }
        while (v81);
        uint64_t v0 = v125;
      }
      uint64_t v100 = v0[14];
      uint64_t v104 = Array.description.getter();
      unint64_t v106 = v105;
      swift_bridgeObjectRelease();
      v0[5] = sub_100037004(v104, v106, &v126);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v78 + 32) = 2082;
      v0[6] = v118;
      sub_10028170C(v100, 1);
      uint64_t v107 = String.init<A>(describing:)();
      v0[7] = sub_100037004(v107, v108, &v126);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1001D5B10(v100, 1);
      sub_1001D5B10(v100, 1);
      _os_log_impl((void *)&_mh_execute_header, v111, v113, "%s resubscription failed for %{private,mask.hash}s. Error %{public}s", (uint8_t *)v78, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    sub_1001D5B10(v100, 1);
  }
  else
  {
    uint64_t v116 = v0 + 11;
    if (qword_1003EC408 != -1) {
      swift_once();
    }
    uint64_t v1 = v0[27];
    uint64_t v2 = v0[23];
    uint64_t v3 = v0[24];
    uint64_t v4 = v0[15];
    uint64_t v5 = type metadata accessor for Logger();
    sub_100044058(v5, (uint64_t)qword_10040C290);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v4, v2);
    swift_bridgeObjectRetain_n();
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    BOOL v8 = os_log_type_enabled(v6, v7);
    uint64_t v9 = v0[27];
    uint64_t v11 = v0[23];
    uint64_t v10 = v0[24];
    uint64_t v12 = v0[16];
    if (v8)
    {
      uint64_t v13 = v0 + 12;
      uint64_t v14 = swift_slowAlloc();
      uint64_t v126 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315651;
      sub_1000207A4(&qword_1003F3330, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
      uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t *v116 = sub_100037004(v15, v16, &v126);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
      *(_WORD *)(v14 + 12) = 2160;
      *uint64_t v13 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v119 = (uint8_t *)v14;
      *(_WORD *)(v14 + 22) = 2081;
      int64_t v17 = *(void *)(v12 + 16);
      if (v17)
      {
        os_log_type_t v114 = v7;
        uint64_t v117 = v6;
        uint64_t v18 = v125[21];
        uint64_t v19 = v125[16];
        uint64_t v127 = _swiftEmptyArrayStorage;
        sub_10003CB84(0, v17, 0);
        uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
        uint64_t v20 = v18 + 16;
        unint64_t v123 = v21;
        uint64_t v22 = v19 + ((*(unsigned __int8 *)(v20 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 64));
        uint64_t v23 = *(void *)(v20 + 56);
        unint64_t v24 = v125;
        do
        {
          uint64_t v25 = v24[22];
          uint64_t v26 = v24[20];
          v123(v25, v22, v26);
          uint64_t v27 = Handle.identifier.getter();
          uint64_t v29 = v28;
          (*(void (**)(uint64_t, uint64_t))(v20 - 8))(v25, v26);
          unint64_t v30 = v127;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_10003CB84(0, v30[2] + 1, 1);
            unint64_t v30 = v127;
          }
          unint64_t v32 = v30[2];
          unint64_t v31 = v30[3];
          if (v32 >= v31 >> 1)
          {
            sub_10003CB84(v31 > 1, v32 + 1, 1);
            unint64_t v30 = v127;
          }
          v30[2] = v32 + 1;
          unint64_t v33 = &v30[2 * v32];
          v33[4] = v27;
          v33[5] = v29;
          v22 += v23;
          --v17;
          unint64_t v24 = v125;
        }
        while (v17);
        uint64_t v6 = v117;
        os_log_type_t v7 = v114;
      }
      uint64_t v97 = Array.description.getter();
      unint64_t v99 = v98;
      swift_bridgeObjectRelease();
      uint64_t v0 = v125;
      v125[13] = sub_100037004(v97, v99, &v126);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "%s resubscription succeeded for %{private,mask.hash}s.", v119, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(void, void))(v10 + 8))(v0[27], v0[23]);
      swift_bridgeObjectRelease_n();
    }
  }
LABEL_43:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v109 = (uint64_t (*)(void))v0[1];
  return v109();
}

uint64_t sub_100270A20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return _swift_task_switch(sub_100270A48, a1, 0);
}

uint64_t sub_100270A48()
{
  sub_100272144(v0[3], v0[4]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100270AB0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = sub_100044014((uint64_t *)&unk_1003F3C10);
  __chkstk_darwin(v5 - 8);
  os_log_type_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for Handle();
  uint64_t v8 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_100044058(v11, (uint64_t)qword_10040C290);
  swift_bridgeObjectRetain_n();
  uint64_t v12 = Logger.logObject.getter();
  int v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, (os_log_type_t)v13))
  {
    int v44 = v13;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    uint64_t v50 = v43;
    *(_DWORD *)uint64_t v14 = 136446723;
    uint64_t v49 = sub_100037004(0xD00000000000001BLL, 0x8000000100378880, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v14 + 12) = 2160;
    uint64_t v49 = 1752392040;
    BOOL v42 = &v50;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v45 = (uint8_t *)v14;
    *(_WORD *)(v14 + 22) = 2081;
    int64_t v15 = *(void *)(a1 + 16);
    if (v15)
    {
      uint64_t v37 = v12;
      uint64_t v38 = v7;
      uint64_t v39 = v4;
      uint64_t v40 = v2;
      uint64_t v49 = (uint64_t)_swiftEmptyArrayStorage;
      sub_10003CB84(0, v15, 0);
      int64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
      uint64_t v16 = v8 + 16;
      uint64_t v18 = *(unsigned __int8 *)(v16 + 64);
      uint64_t v41 = a1;
      uint64_t v19 = a1 + ((v18 + 32) & ~v18);
      uint64_t v46 = *(void *)(v16 + 56);
      uint64_t v47 = v17;
      uint64_t v20 = (void (**)(char *, uint64_t))(v16 - 8);
      do
      {
        uint64_t v21 = v48;
        v47(v10, v19, v48);
        uint64_t v22 = Handle.identifier.getter();
        uint64_t v24 = v23;
        (*v20)(v10, v21);
        uint64_t v25 = v49;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10003CB84(0, *(void *)(v25 + 16) + 1, 1);
          uint64_t v25 = v49;
        }
        unint64_t v27 = *(void *)(v25 + 16);
        unint64_t v26 = *(void *)(v25 + 24);
        if (v27 >= v26 >> 1)
        {
          sub_10003CB84(v26 > 1, v27 + 1, 1);
          uint64_t v25 = v49;
        }
        *(void *)(v25 + 16) = v27 + 1;
        unint64_t v28 = v25 + 16 * v27;
        *(void *)(v28 + 32) = v22;
        *(void *)(v28 + 40) = v24;
        v19 += v46;
        --v15;
      }
      while (v15);
      uint64_t v2 = v40;
      a1 = v41;
      os_log_type_t v7 = v38;
      uint64_t v4 = v39;
      uint64_t v12 = v37;
    }
    uint64_t v29 = v45;
    uint64_t v30 = Array.description.getter();
    unint64_t v32 = v31;
    swift_bridgeObjectRelease();
    uint64_t v49 = sub_100037004(v30, v32, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v12, (os_log_type_t)v44, " %{public}s for handles: %{private,mask.hash}s", v29, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v33 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v7, 1, 1, v33);
  uint64_t v34 = sub_1000207A4(qword_1003F3148, 255, (void (*)(uint64_t))type metadata accessor for LocationService);
  uint64_t v35 = (void *)swift_allocObject();
  uint64_t v35[2] = v2;
  v35[3] = v34;
  v35[4] = v2;
  v35[5] = a1;
  v35[6] = v4;
  swift_retain_n();
  swift_bridgeObjectRetain();
  sub_10010405C((uint64_t)v7, (uint64_t)&unk_1003F3340, (uint64_t)v35);
  return swift_release();
}

uint64_t sub_100270FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  uint64_t Priority = type metadata accessor for LocatePriority();
  v5[8] = Priority;
  v5[9] = *(void *)(Priority - 8);
  v5[10] = swift_task_alloc();
  return _swift_task_switch(sub_1002710A4, a4, 0);
}

uint64_t sub_1002710A4()
{
  (*(void (**)(void, void, void))(v0[9] + 104))(v0[10], enum case for LocatePriority.shallow(_:), v0[8]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[11] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100271160;
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[7];
  return sub_10025B1E0(v3, v2);
}

uint64_t sub_100271160()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 72);
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  uint64_t v5 = *(void **)v1;
  v5[12] = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0)
  {
    uint64_t v6 = v5[6];
    return _swift_task_switch(sub_100271308, v6, 0);
  }
  else
  {
    swift_task_dealloc();
    os_log_type_t v7 = (uint64_t (*)(void))v5[1];
    return v7();
  }
}

uint64_t sub_100271308()
{
  int64_t v15 = v0;
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100044058(v1, (uint64_t)qword_10040C290);
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[12];
  if (v4)
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 141558531;
    v0[2] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v6 + 12) = 2081;
    type metadata accessor for Handle();
    swift_bridgeObjectRetain();
    uint64_t v7 = Array.description.getter();
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
    v0[3] = sub_100037004(v7, v9, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 22) = 2080;
    v0[4] = v5;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v10 = String.init<A>(describing:)();
    v0[5] = sub_100037004(v10, v11, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Unsubscribe for %{private,mask.hash}s\nfailed with error: %s", (uint8_t *)v6, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_100271600(uint64_t a1)
{
  v2[6] = a1;
  v2[7] = v1;
  uint64_t Priority = type metadata accessor for LocatePriority();
  v2[8] = Priority;
  v2[9] = *(void *)(Priority - 8);
  v2[10] = swift_task_alloc();
  return _swift_task_switch(sub_1002716C0, v1, 0);
}

uint64_t sub_1002716C0()
{
  uint64_t v25 = v0;
  uint64_t v1 = (uint64_t *)(v0[7] + OBJC_IVAR____TtC13findmylocated15LocationService_subscriptions);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (*(void *)(v2 + 16))
  {
    uint64_t v3 = v0[6];
    swift_bridgeObjectRetain();
    unint64_t v4 = sub_1000244E0(v3);
    if (v5)
    {
      uint64_t v6 = *(void *)(*(void *)(v2 + 56) + 24 * v4);
      swift_retain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      uint64_t v7 = sub_100159074(v6);
      swift_bridgeObjectRelease_n();
      swift_release();
      goto LABEL_11;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v8 = v0[6];
  uint64_t v10 = v0[9];
  uint64_t v9 = v0[10];
  uint64_t v11 = v0[8];
  uint64_t v12 = type metadata accessor for Logger();
  sub_100044058(v12, (uint64_t)qword_10040C290);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v9, v8, v11);
  int v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  BOOL v15 = os_log_type_enabled(v13, v14);
  uint64_t v17 = v0[9];
  uint64_t v16 = v0[10];
  uint64_t v18 = v0[8];
  if (v15)
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136315138;
    sub_1000207A4(&qword_1003F3330, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
    uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[5] = sub_100037004(v20, v21, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "No handle to resubscribe for %s.", v19, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v17 + 8))(v0[10], v0[8]);
  }

  uint64_t v7 = _swiftEmptyArrayStorage;
LABEL_11:
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void *))v0[1];
  return v22(v7);
}

uint64_t sub_1002719D8(uint64_t a1)
{
  v2[14] = a1;
  v2[15] = v1;
  uint64_t Priority = type metadata accessor for LocatePriority();
  v2[16] = Priority;
  v2[17] = *(void *)(Priority - 8);
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  return _swift_task_switch(sub_100271AB4, v1, 0);
}

uint64_t sub_100271AB4()
{
  uint64_t v47 = v0;
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[16];
  uint64_t v4 = v0[17];
  uint64_t v5 = type metadata accessor for Logger();
  sub_100044058(v5, (uint64_t)qword_10040C290);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v6(v2, v1, v3);
  swift_retain_n();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t type = static os_log_type_t.default.getter();
  BOOL v8 = os_log_type_enabled(v7, type);
  uint64_t v9 = v0[20];
  uint64_t v10 = v0[16];
  uint64_t v11 = v0[17];
  uint64_t v12 = &qword_1003F1FF0[2];
  if (v8)
  {
    uint64_t v43 = v6;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315394;
    os_log_t log = v7;
    sub_1000207A4(&qword_1003F3330, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[12] = sub_100037004(v14, v15, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v45(v9, v10);
    *(_WORD *)(v13 + 12) = 2080;
    swift_beginAccess();
    sub_1000207A4(&qword_1003F0048, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
    swift_bridgeObjectRetain();
    uint64_t v16 = Dictionary.description.getter();
    unint64_t v18 = v17;
    uint64_t v12 = qword_1003F1FF0 + 16;
    swift_bridgeObjectRelease();
    v0[13] = sub_100037004(v16, v18, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, log, type, "clearResubscription %s: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v6 = v43;
    swift_slowDealloc();
  }
  else
  {
    uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v45(v9, v10);

    swift_release_n();
  }
  unint64_t v19 = v0[15] + v12[435];
  swift_beginAccess();
  uint64_t v20 = *(void *)v19;
  if (!*(void *)(*(void *)v19 + 16)) {
    goto LABEL_11;
  }
  uint64_t v21 = v0[14];
  swift_bridgeObjectRetain();
  unint64_t v22 = sub_1000244E0(v21);
  if ((v23 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_11:
    v6(v0[18], v0[14], v0[16]);
    uint64_t v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.error.getter();
    BOOL v35 = os_log_type_enabled(v33, v34);
    uint64_t v36 = v0[18];
    uint64_t v37 = v0[16];
    if (v35)
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      *(_DWORD *)uint64_t v38 = 136315138;
      sub_1000207A4(&qword_1003F3330, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
      uint64_t v39 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[11] = sub_100037004(v39, v40, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v45(v36, v37);
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "clearResubscription: no tracker for %s", v38, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      v45(v0[18], v0[16]);
    }

    goto LABEL_15;
  }
  uint64_t v24 = (uint64_t *)(*(void *)(v20 + 56) + 24 * v22);
  uint64_t v25 = *v24;
  uint64_t v26 = v24[2];
  swift_retain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  BOOL v28 = __OFADD__(v26, 1);
  uint64_t v29 = v26 + 1;
  if (v28)
  {
    __break(1u);
    return result;
  }
  uint64_t v30 = v0[19];
  uint64_t v31 = v0[16];
  v6(v30, v0[14], v31);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v46 = *(void *)v19;
  *(void *)unint64_t v19 = 0x8000000000000000;
  sub_100024314(v25, 0, v29, v30, isUniquelyReferenced_nonNull_native);
  *(void *)unint64_t v19 = v46;
  swift_bridgeObjectRelease();
  v45(v30, v31);
  swift_endAccess();
  swift_bridgeObjectRelease();
LABEL_15:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v41 = (uint64_t (*)(void))v0[1];
  return v41();
}

void sub_100272144(uint64_t a1, uint64_t a2)
{
  uint64_t Priority = type metadata accessor for LocatePriority();
  uint64_t v6 = *(void *)(Priority - 8);
  uint64_t v7 = __chkstk_darwin(Priority);
  uint64_t v9 = (char *)&v27[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v27[-1] - v10;
  uint64_t v12 = (uint64_t *)(v2 + OBJC_IVAR____TtC13findmylocated15LocationService_subscriptions);
  swift_beginAccess();
  uint64_t v13 = *v12;
  if (*(void *)(*v12 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v14 = sub_1000244E0(a2);
    if (v15)
    {
      uint64_t v16 = (uint64_t *)(*(void *)(v13 + 56) + 24 * v14);
      uint64_t v17 = *v16;
      uint64_t v18 = v16[2];
      swift_retain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      swift_release();
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v11, a2, Priority);
      swift_beginAccess();
      swift_retain_n();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v28 = *v12;
      *uint64_t v12 = 0x8000000000000000;
      sub_100024314(v17, a1, v18, (uint64_t)v11, isUniquelyReferenced_nonNull_native);
      *uint64_t v12 = v28;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, Priority);
      swift_endAccess();
      swift_release();
      swift_bridgeObjectRelease();
      return;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for Logger();
  sub_100044058(v20, (uint64_t)qword_10040C290);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a2, Priority);
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v21, v22))
  {
    char v23 = (uint8_t *)swift_slowAlloc();
    v27[0] = swift_slowAlloc();
    *(_DWORD *)char v23 = 136446210;
    sub_1000207A4(&qword_1003F3330, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
    uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v28 = sub_100037004(v24, v25, v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, Priority);
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "addSubscription: missing tracker for %{public}s!", v23, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, Priority);
  }
}

uint64_t sub_100272530(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  uint64_t Priority = type metadata accessor for LocatePriority();
  v3[18] = Priority;
  v3[19] = *(void *)(Priority - 8);
  v3[20] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for UUID();
  v3[21] = v5;
  v3[22] = *(void *)(v5 - 8);
  v3[23] = swift_task_alloc();
  return _swift_task_switch(sub_100272650, v2, 0);
}

uint64_t sub_100272650()
{
  uint64_t v47 = v0;
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100044058(v1, (uint64_t)qword_10040C290);
  swift_retain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    swift_beginAccess();
    sub_1000207A4(&qword_1003F0048, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
    swift_bridgeObjectRetain();
    uint64_t v5 = Dictionary.description.getter();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    v0[14] = sub_100037004(v5, v7, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "shouldResubscribe: %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v8 = (uint64_t *)(v0[17] + OBJC_IVAR____TtC13findmylocated15LocationService_subscriptions);
  swift_beginAccess();
  uint64_t v9 = *v8;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_13;
  }
  uint64_t v10 = v0[16];
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_1000244E0(v10);
  if ((v12 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_13:
    (*(void (**)(void, void, void))(v0[19] + 16))(v0[20], v0[16], v0[18]);
    swift_bridgeObjectRetain_n();
    unint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.default.getter();
    BOOL v27 = os_log_type_enabled(v25, v26);
    uint64_t v29 = v0[19];
    uint64_t v28 = v0[20];
    uint64_t v30 = v0[18];
    if (v27)
    {
      os_log_type_t v44 = v26;
      uint64_t v31 = swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 136315651;
      sub_1000207A4(&qword_1003F3330, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
      uint64_t v32 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[13] = sub_100037004(v32, v33, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
      *(_WORD *)(v31 + 12) = 2160;
      v0[8] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v31 + 22) = 2081;
      type metadata accessor for Handle();
      swift_bridgeObjectRetain();
      uint64_t v34 = Array.description.getter();
      unint64_t v36 = v35;
      swift_bridgeObjectRelease();
      v0[9] = sub_100037004(v34, v36, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v25, v44, "Missing tracker for %s. Not scheduling resubscription for %{private,mask.hash}s", (uint8_t *)v31, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

LABEL_17:
      uint64_t v37 = 0;
      goto LABEL_18;
    }
    (*(void (**)(void, void))(v29 + 8))(v0[20], v0[18]);

LABEL_16:
    swift_bridgeObjectRelease_n();
    goto LABEL_17;
  }
  uint64_t v13 = *(void *)(v9 + 56) + 24 * v11;
  uint64_t v14 = *(void *)(v13 + 8);
  uint64_t v15 = *(void *)(v13 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v15 >= sub_10027F038())
  {
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t v40 = Logger.logObject.getter();
    os_log_type_t v41 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = swift_slowAlloc();
      *(_DWORD *)uint64_t v42 = 134218240;
      v0[10] = sub_10027F038();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      *(_WORD *)(v42 + 12) = 2048;
      v0[11] = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "Exceeded max number of resubscriptions allowed! Limit: %ld Current: %ld.", (uint8_t *)v42, 0x16u);
      swift_slowDealloc();
      swift_release();
      swift_bridgeObjectRelease();

      goto LABEL_17;
    }

    swift_release();
    swift_release_n();
    goto LABEL_16;
  }
  if (v14)
  {
    swift_retain_n();
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v19 = v0[22];
      uint64_t v18 = v0[23];
      uint64_t v43 = v16;
      uint64_t v20 = v0[21];
      os_log_type_t type = v17;
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136446210;
      WorkItemQueue.WorkItem.id.getter();
      sub_1000207A4(&qword_1003ECF68, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v22 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v24 = v23;
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
      v0[12] = sub_100037004(v22, v24, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v43, type, "Found existing task %{public}s. Not scheduling resubscription.", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
      swift_release_n();
    }
    else
    {

      swift_bridgeObjectRelease();
      swift_release_n();
    }
    goto LABEL_17;
  }
  swift_bridgeObjectRelease();
  uint64_t v37 = 1;
LABEL_18:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v38 = (uint64_t (*)(uint64_t))v0[1];
  return v38(v37);
}

uint64_t sub_100272F1C(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = type metadata accessor for Friend();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Handle();
  v2[7] = v4;
  v2[8] = *(void *)(v4 - 8);
  v2[9] = swift_task_alloc();
  uint64_t v5 = (void *)swift_task_alloc();
  v2[10] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100273068;
  return daemon.getter();
}

uint64_t sub_100273068(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v9 = *v1;
  *(void *)(v2 + 88) = a1;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 96) = v3;
  uint64_t v4 = type metadata accessor for Daemon();
  uint64_t v5 = type metadata accessor for DataManager(0);
  uint64_t v6 = sub_1000207A4(&qword_1003ECCA8, 255, (void (*)(uint64_t))&type metadata accessor for Daemon);
  uint64_t v7 = sub_1000207A4(&qword_1003ECCC0, 255, (void (*)(uint64_t))type metadata accessor for DataManager);
  *uint64_t v3 = v9;
  v3[1] = sub_10027324C;
  return ActorServiceDaemon.getService<A>()(v4, v5, v6, v7);
}

uint64_t sub_10027324C(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[13] = a1;
  v4[14] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[3];
    uint64_t v6 = sub_100273860;
  }
  else
  {
    swift_release();
    uint64_t v6 = sub_100273384;
    uint64_t v5 = a1;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_100273384()
{
  sub_100044014(&qword_1003ECF40);
  uint64_t v1 = type metadata accessor for HandleType();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = swift_allocObject();
  *(void *)(v0 + 120) = v4;
  *(_OWORD *)(v4 + 16) = xmmword_100367D70;
  (*(void (**)(unint64_t, void, uint64_t))(v2 + 104))(v4 + v3, enum case for HandleType.following(_:), v1);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1002734E0;
  return sub_100021584(v4, 1);
}

uint64_t sub_1002734E0(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 24);
  *(void *)(*(void *)v1 + 136) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100273614, v2, 0);
}

uint64_t sub_100273614()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[2];
  swift_bridgeObjectRetain();
  unint64_t v3 = sub_10027E9EC(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int64_t v4 = *((void *)v3 + 2);
  if (v4)
  {
    uint64_t v5 = v0[8];
    uint64_t v6 = v0[5];
    uint64_t v21 = _swiftEmptyArrayStorage;
    sub_100020D44(0, v4, 0);
    uint64_t v7 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 16);
    v6 += 16;
    uint64_t v8 = &v3[(*(unsigned __int8 *)(v6 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 64)];
    uint64_t v19 = *(void *)(v6 + 56);
    uint64_t v20 = v7;
    uint64_t v9 = (void (**)(uint64_t, uint64_t))(v6 - 8);
    uint64_t v10 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v11 = v0[6];
      uint64_t v12 = v0[4];
      v20(v11, v8, v12);
      Friend.handle.getter();
      (*v9)(v11, v12);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100020D44(0, v10[2] + 1, 1);
        uint64_t v10 = v21;
      }
      unint64_t v14 = v10[2];
      unint64_t v13 = v10[3];
      if (v14 >= v13 >> 1)
      {
        sub_100020D44(v13 > 1, v14 + 1, 1);
        uint64_t v10 = v21;
      }
      uint64_t v15 = v0[9];
      uint64_t v16 = v0[7];
      v10[2] = v14 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))((unint64_t)v10+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v14, v15, v16);
      uint64_t v21 = v10;
      v8 += v19;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  sub_100277A8C((uint64_t)v10);
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_100273860()
{
  swift_release();
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100044058(v1, (uint64_t)qword_10040C290);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    int64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "LocationService: missing DataManager to locationsUnavailable!", v4, 2u);
    swift_slowDealloc();
  }
  swift_errorRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_10027399C(uint64_t a1)
{
  v2[10] = v1;
  uint64_t v4 = type metadata accessor for Handle();
  v2[11] = v4;
  v2[12] = *(void *)(v4 - 8);
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for UUID();
  v2[16] = v5;
  v2[17] = *(void *)(v5 - 8);
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  sub_100044014(&qword_1003F3318);
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  uint64_t v6 = (void *)swift_task_alloc();
  v2[22] = v6;
  *uint64_t v6 = v2;
  void v6[2] = a1;
  v6[3] = v1;
  v6[1] = sub_100273B78;
  return _swift_task_switch(sub_1002749D4, v1, 0);
}

uint64_t sub_100273B78(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 80);
  *(void *)(*(void *)v1 + 184) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100273C90, v2, 0);
}

uint64_t sub_100273C90()
{
  os_log_type_t v115 = v0;
  if (qword_1003EC408 != -1) {
LABEL_65:
  }
    swift_once();
  uint64_t v1 = type metadata accessor for Logger();
  sub_100044058(v1, (uint64_t)qword_10040C290);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v111 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    type metadata accessor for Location();
    sub_1000207A4(&qword_1003ECDA0, 255, (void (*)(uint64_t))&type metadata accessor for Handle);
    swift_bridgeObjectRetain();
    uint64_t v5 = Dictionary.description.getter();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    v0[9] = sub_100037004(v5, v7, &v111);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "locationForHandles: %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v8 = v0[23];
  uint64_t v9 = v0[17];
  uint64_t v10 = v0[12];
  uint64_t v11 = v0[10];
  sub_100275580(v8);
  uint64_t v12 = (uint64_t *)(v11 + OBJC_IVAR____TtC13findmylocated15LocationService_inFlightLatestLocationTasks);
  swift_beginAccess();
  uint64_t v88 = v12;
  uint64_t v13 = *v12;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_100249F58(v8);
  uint64_t v15 = v14;
  unint64_t v16 = 0;
  uint64_t v86 = v13 + 64;
  uint64_t v17 = -1 << *(unsigned char *)(v13 + 32);
  if (-v17 < 64) {
    uint64_t v18 = ~(-1 << -(char)v17);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & *(void *)(v13 + 64);
  unint64_t v20 = (unint64_t)(63 - v17) >> 6;
  unint64_t v94 = (void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  id v92 = (void (**)(void))(v9 + 32);
  uint64_t v93 = v10;
  uint64_t v110 = (void (**)(uint64_t, uint64_t))(v10 + 8);
  uint64_t v89 = v9;
  uint64_t v90 = v13;
  uint64_t v91 = (void (**)(uint64_t, uint64_t))(v9 + 8);
  unint64_t v83 = v20 - 1;
  uint64_t v84 = v13 + 104;
  int64_t v87 = v20;
  unint64_t v85 = v20 - 5;
  uint64_t v95 = v14;
  while (1)
  {
    if (v19)
    {
      unint64_t v98 = v16;
      uint64_t v99 = (v19 - 1) & v19;
      unint64_t v21 = __clz(__rbit64(v19)) | (v16 << 6);
LABEL_13:
      uint64_t v22 = v0[20];
      (*(void (**)(uint64_t, unint64_t, void))(v89 + 16))(v22, *(void *)(v90 + 48) + *(void *)(v89 + 72) * v21, v0[16]);
      unint64_t v23 = (uint64_t *)(*(void *)(v90 + 56) + 24 * v21);
      uint64_t v24 = sub_100044014(&qword_1003F3320);
      unint64_t v25 = (void *)(v22 + *(int *)(v24 + 48));
      uint64_t v26 = *v23;
      uint64_t v27 = v23[1];
      uint64_t v28 = v23[2];
      *unint64_t v25 = v26;
      v25[1] = v27;
      v25[2] = v28;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v22, 0, 1, v24);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_20;
    }
    int64_t v29 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_65;
    }
    if (v29 >= v87)
    {
      unint64_t v98 = v16;
    }
    else
    {
      unint64_t v30 = *(void *)(v86 + 8 * v29);
      if (v30) {
        goto LABEL_17;
      }
      if ((uint64_t)(v16 + 2) >= v87)
      {
        unint64_t v98 = v16 + 1;
      }
      else
      {
        unint64_t v30 = *(void *)(v86 + 8 * (v16 + 2));
        if (v30)
        {
          int64_t v29 = v16 + 2;
LABEL_17:
          unint64_t v98 = v29;
          uint64_t v99 = (v30 - 1) & v30;
          unint64_t v21 = __clz(__rbit64(v30)) + (v29 << 6);
          goto LABEL_13;
        }
        if ((uint64_t)(v16 + 3) >= v87)
        {
          unint64_t v98 = v16 + 2;
        }
        else
        {
          unint64_t v30 = *(void *)(v86 + 8 * (v16 + 3));
          if (v30)
          {
            int64_t v29 = v16 + 3;
            goto LABEL_17;
          }
          int64_t v29 = v16 + 4;
          if ((uint64_t)(v16 + 4) >= v87)
          {
            unint64_t v98 = v16 + 3;
          }
          else
          {
            unint64_t v30 = *(void *)(v86 + 8 * v29);
            if (v30) {
              goto LABEL_17;
            }
            while (v85 != v16)
            {
              unint64_t v30 = *(void *)(v84 + 8 * v16++);
              if (v30)
              {
                int64_t v29 = v16 + 4;
                goto LABEL_17;
              }
            }
            unint64_t v98 = v83;
          }
        }
      }
    }
    uint64_t v31 = v0[20];
    uint64_t v32 = sub_100044014(&qword_1003F3320);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 1, 1, v32);
    uint64_t v99 = 0;
LABEL_20:
    uint64_t v33 = v0[21];
    sub_100013B50(v0[20], v33, &qword_1003F3318);
    uint64_t v34 = sub_100044014(&qword_1003F3320);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v33, 1, v34) == 1) {
      break;
    }
    unint64_t v35 = (uint64_t *)(v0[21] + *(int *)(v34 + 48));
    uint64_t v36 = *v35;
    uint64_t v96 = v35[2];
    uint64_t v97 = v35[1];
    (*v92)(v0[19]);
    sub_1000207A4(&qword_1003ECDA0, 255, (void (*)(uint64_t))&type metadata accessor for Handle);
    swift_bridgeObjectRetain();
    uint64_t v109 = Set.init(minimumCapacity:)();
    uint64_t v104 = *(void *)(v36 + 16);
    uint64_t v100 = v36;
    if (v104)
    {
      uint64_t v37 = 0;
      unint64_t v102 = v36 + ((*(unsigned __int8 *)(v93 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80));
      uint64_t v38 = *(void *)(v93 + 72);
      uint64_t v39 = *(void (**)(void, unint64_t, void))(v93 + 16);
      do
      {
        uint64_t v106 = v37;
        v39(v0[15], v102 + v37 * v38, v0[11]);
        swift_bridgeObjectRetain();
        uint64_t v44 = dispatch thunk of Hashable._rawHashValue(seed:)();
        uint64_t v45 = -1 << *(unsigned char *)(v109 + 32);
        unint64_t v46 = v44 & ~v45;
        if ((*(void *)(v109 + 56 + ((v46 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v46))
        {
          uint64_t v47 = ~v45;
          while (1)
          {
            uint64_t v48 = v0[14];
            uint64_t v49 = v0[11];
            v39(v48, *(void *)(v109 + 48) + v46 * v38, v49);
            sub_1000207A4(&qword_1003ECDA8, 255, (void (*)(uint64_t))&type metadata accessor for Handle);
            char v50 = dispatch thunk of static Equatable.== infix(_:_:)();
            uint64_t v51 = *v110;
            (*v110)(v48, v49);
            if (v50) {
              break;
            }
            unint64_t v46 = (v46 + 1) & v47;
            if (((*(void *)(v109 + 56 + ((v46 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v46) & 1) == 0) {
              goto LABEL_23;
            }
          }
          uint64_t v52 = v0[15];
          uint64_t v53 = v0[11];
          swift_bridgeObjectRelease();
          v51(v52, v53);
        }
        else
        {
LABEL_23:
          uint64_t v40 = v0[14];
          unint64_t v41 = v0[15];
          uint64_t v42 = v0[11];
          swift_bridgeObjectRelease();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v39(v40, v41, v42);
          uint64_t v111 = v109;
          sub_10002B27C(v40, v46, isUniquelyReferenced_nonNull_native);
          uint64_t v109 = v111;
          swift_bridgeObjectRelease();
          (*v110)(v41, v42);
        }
        uint64_t v37 = v106 + 1;
      }
      while (v106 + 1 != v104);
      swift_bridgeObjectRelease();
      uint64_t v15 = v95;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    uint64_t v54 = Set.init(minimumCapacity:)();
    uint64_t v103 = *(void *)(v15 + 16);
    if (v103)
    {
      uint64_t v55 = 0;
      unint64_t v101 = v15 + ((*(unsigned __int8 *)(v93 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80));
      uint64_t v107 = *(void *)(v93 + 72);
      uint64_t v56 = *(void (**)(void, unint64_t, void))(v93 + 16);
      do
      {
        uint64_t v105 = v55;
        v56(v0[13], v101 + v55 * v107, v0[11]);
        swift_bridgeObjectRetain();
        uint64_t v61 = dispatch thunk of Hashable._rawHashValue(seed:)();
        uint64_t v62 = -1 << *(unsigned char *)(v54 + 32);
        unint64_t v63 = v61 & ~v62;
        if ((*(void *)(v54 + 56 + ((v63 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v63))
        {
          uint64_t v64 = ~v62;
          while (1)
          {
            uint64_t v65 = v0[14];
            uint64_t v66 = v0[11];
            v56(v65, *(void *)(v54 + 48) + v63 * v107, v66);
            sub_1000207A4(&qword_1003ECDA8, 255, (void (*)(uint64_t))&type metadata accessor for Handle);
            char v67 = dispatch thunk of static Equatable.== infix(_:_:)();
            uint64_t v68 = *v110;
            (*v110)(v65, v66);
            if (v67) {
              break;
            }
            unint64_t v63 = (v63 + 1) & v64;
            if (((*(void *)(v54 + 56 + ((v63 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v63) & 1) == 0) {
              goto LABEL_35;
            }
          }
          uint64_t v69 = v0[13];
          uint64_t v70 = v0[11];
          swift_bridgeObjectRelease();
          v68(v69, v70);
        }
        else
        {
LABEL_35:
          unint64_t v58 = v0[13];
          uint64_t v57 = v0[14];
          uint64_t v59 = v0[11];
          swift_bridgeObjectRelease();
          char v60 = swift_isUniquelyReferenced_nonNull_native();
          v56(v57, v58, v59);
          uint64_t v111 = v54;
          sub_10002B27C(v57, v63, v60);
          uint64_t v54 = v111;
          swift_bridgeObjectRelease();
          (*v110)(v58, v59);
        }
        uint64_t v55 = v105 + 1;
      }
      while (v105 + 1 != v103);
      uint64_t v15 = v95;
    }
    swift_bridgeObjectRelease();
    char v71 = sub_10024CB3C(v54, v109);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v71)
    {
      (*v91)(v0[19], v0[16]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      uint64_t v72 = v0[23];
      uint64_t v74 = v0[18];
      uint64_t v73 = v0[19];
      uint64_t v75 = v0[16];
      uint64_t v108 = v75;
      uint64_t v111 = v100;
      uint64_t v112 = v97;
      uint64_t v113 = v96;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10024CFCC(v72);
      (*v94)(v74, v73, v75);
      uint64_t v76 = v111;
      uint64_t v77 = v112;
      uint64_t v78 = v113;
      swift_beginAccess();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v79 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v114 = *v88;
      *uint64_t v88 = 0x8000000000000000;
      sub_100143838(v76, v77, v78, v74, v79);
      *uint64_t v88 = v114;
      swift_bridgeObjectRelease();
      unint64_t v80 = *v91;
      (*v91)(v74, v108);
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = v95;
      swift_release();
      swift_bridgeObjectRelease();
      v80(v73, v108);
    }
    unint64_t v16 = v98;
    unint64_t v19 = v99;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int64_t v81 = (uint64_t (*)(void))v0[1];
  return v81();
}

uint64_t sub_1002749B4(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_1002749D4, v1, 0);
}

uint64_t sub_1002749D4()
{
  unint64_t v1 = v0[2];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    uint64_t v2 = (void *)swift_task_alloc();
    v0[4] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100274AE4;
    return daemon.getter();
  }
  unint64_t v4 = sub_10004B2F8((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v5 = (uint64_t (*)(unint64_t))v0[1];
  return v5(v4);
}

uint64_t sub_100274AE4(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v9 = *v1;
  *(void *)(v2 + 40) = a1;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 48) = v3;
  uint64_t v4 = type metadata accessor for Daemon();
  uint64_t v5 = type metadata accessor for DataManager(0);
  uint64_t v6 = sub_1000207A4(&qword_1003ECCA8, 255, (void (*)(uint64_t))&type metadata accessor for Daemon);
  uint64_t v7 = sub_1000207A4(&qword_1003ECCC0, 255, (void (*)(uint64_t))type metadata accessor for DataManager);
  *uint64_t v3 = v9;
  v3[1] = sub_100274CC8;
  return ActorServiceDaemon.getService<A>()(v4, v5, v6, v7);
}

uint64_t sub_100274CC8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 56) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 24);
    uint64_t v6 = sub_100275140;
  }
  else
  {
    swift_release();
    *(void *)(v4 + 64) = a1;
    uint64_t v6 = sub_100274E04;
    uint64_t v5 = a1;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_100274E04()
{
  sub_100044014(&qword_1003ECF40);
  uint64_t v1 = type metadata accessor for HandleType();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = swift_allocObject();
  *(void *)(v0 + 72) = v4;
  *(_OWORD *)(v4 + 16) = xmmword_100367D70;
  (*(void (**)(unint64_t, void, uint64_t))(v2 + 104))(v4 + v3, enum case for HandleType.following(_:), v1);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100274F60;
  return sub_100021584(v4, 1);
}

uint64_t sub_100274F60(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 24);
  *(void *)(*(void *)v1 + 88) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100275094, v2, 0);
}

uint64_t sub_100275094()
{
  unint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_10027E898((uint64_t)_swiftEmptyDictionarySingleton, v1);
  swift_bridgeObjectRelease_n();
  swift_release();
  unint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t sub_100275140()
{
  swift_release();
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100044058(v1, (uint64_t)qword_10040C290);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "LocationService: missing DataManager to mapSecureLocationToHandle!", v4, 2u);
    swift_slowDealloc();
  }

  unint64_t v5 = sub_10004B2F8((uint64_t)_swiftEmptyArrayStorage);
  swift_errorRelease();
  uint64_t v6 = *(uint64_t (**)(unint64_t))(v0 + 8);
  return v6(v5);
}

void sub_10027527C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100044014(&qword_1003F33F0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = *(void **)(a2 + OBJC_IVAR____TtC13findmylocated15LocationService_secureLocationsManager);
  NSString v8 = String._bridgeToObjectiveC()();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_100282A48;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1002754F4;
  aBlock[3] = &unk_1003E39F8;
  uint64_t v11 = _Block_copy(aBlock);
  swift_release();
  [v7 latestLocationFromCacheForId:v8 completion:v11];
  _Block_release(v11);
}

uint64_t sub_100275450(void *a1, uint64_t a2)
{
  if (a2)
  {
    swift_errorRetain();
LABEL_3:
    sub_100044014(&qword_1003F33F0);
    return CheckedContinuation.resume(throwing:)();
  }
  if (!a1)
  {
    sub_100282ACC();
    swift_allocError();
    *uint64_t v4 = 10;
    goto LABEL_3;
  }
  id v3 = a1;
  sub_100044014(&qword_1003F33F0);
  return CheckedContinuation.resume(returning:)();
}

void sub_1002754F4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_100275580(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for UUID();
  __chkstk_darwin(v5 - 8);
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100044058(v6, (uint64_t)qword_10040C290);
  swift_bridgeObjectRetain();
  id v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136446466;
    sub_100037004(0xD000000000000023, 0x8000000100378800, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v9 + 12) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "%{public}s count:%ld", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  type metadata accessor for WorkItemQueue.WorkItem();
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = v2;
  v10[3] = a1;
  v10[4] = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  UUID.init()();
  WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
  dispatch thunk of WorkItemQueue.enqueue(_:)();
  return swift_release();
}

uint64_t sub_100275850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return _swift_task_switch(sub_100275874, 0, 0);
}

uint64_t sub_100275874()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = swift_allocObject();
  *(void *)(v0 + 40) = v2;
  *(void *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 24) = *(_OWORD *)(v0 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  id v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v3;
  *id v3 = v0;
  v3[1] = sub_100275988;
  return withTimeout<A>(_:block:)();
}

uint64_t sub_100275988()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100283968;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1001D6460;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100275AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a3;
  v4[8] = a4;
  v4[6] = a2;
  uint64_t v6 = (void *)swift_task_alloc();
  v4[9] = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_100275B58;
  v6[4] = a2;
  return _swift_task_switch(sub_100014F34, a2, 0);
}

uint64_t sub_100275B58(uint64_t a1)
{
  id v3 = (void *)*v1;
  uint64_t v9 = (void *)*v1;
  v3[10] = a1;
  swift_task_dealloc();
  v3[2] = a1;
  v3 += 2;
  uint64_t v4 = (void *)swift_task_alloc();
  v3[9] = v4;
  uint64_t v5 = sub_100044014(&qword_1003F3248);
  uint64_t v6 = type metadata accessor for UUID();
  v3[10] = v6;
  uint64_t v7 = sub_100014FFC(&qword_1003F3250, &qword_1003F3248);
  *uint64_t v4 = v9;
  v4[1] = sub_100275D10;
  return Sequence.asyncMap<A>(_:)(&unk_1003F32C0, 0, v5, v6, v7);
}

uint64_t sub_100275D10(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 104) = a1;
  *(void *)(v3 + 112) = v1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100275E10, 0, 0);
}

uint64_t sub_100275E10()
{
  uint64_t v22 = v0;
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100044058(v1, (uint64_t)qword_10040C290);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    os_log_type_t v20 = v3;
    unint64_t v4 = v0[10];
    uint64_t v5 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 134218498;
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v7 = v0[7];
    swift_bridgeObjectRelease();
    v0[3] = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v8 = Array.description.getter();
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    v0[4] = sub_100037004(v8, v10, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 22) = 2048;
    uint64_t v11 = *(void *)(v7 + 16);
    swift_bridgeObjectRelease();
    v0[5] = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v20, "Send locations update to clients[%ld]: %{public}s updates count:%ld", (uint8_t *)v5, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v12 = v0[7];
  if (*(void *)(v12 + 16))
  {
    uint64_t v13 = v0[10];
    uint64_t v14 = v0[8];
    uint64_t v15 = v0[6];
    sub_10024A540(v0[7]);
    unint64_t v16 = (void *)swift_task_alloc();
    v0[15] = v16;
    v16[2] = v13;
    v16[3] = v12;
    v16[4] = v15;
    v16[5] = v14;
    uint64_t v17 = (void *)swift_task_alloc();
    v0[16] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_100276214;
    uint64_t v24 = (char *)&type metadata for () + 8;
    return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    return v18();
  }
}

uint64_t sub_100276214()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return _swift_task_switch(sub_1001CD21C, 0, 0);
}

uint64_t sub_100276348(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return _swift_task_switch(sub_10027636C, 0, 0);
}

uint64_t sub_10027636C()
{
  unint64_t v4 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of FM.XPCSession.underlyingConnectionIdentity.getter
                                       + async function pointer to dispatch thunk of FM.XPCSession.underlyingConnectionIdentity.getter);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100283964;
  uint64_t v2 = *(void *)(v0 + 16);
  return v4(v2);
}

uint64_t sub_10027641C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[12] = a5;
  v6[13] = a6;
  v6[10] = a3;
  v6[11] = a4;
  v6[9] = a2;
  sub_100044014((uint64_t *)&unk_1003F3C10);
  v6[14] = swift_task_alloc();
  v6[15] = swift_task_alloc();
  return _swift_task_switch(sub_1002764C8, 0, 0);
}

uint64_t sub_1002764C8()
{
  unint64_t v1 = *(void *)(v0 + 80);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v2 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v20 = *(uint64_t (**)(void))(v0 + 8);
    return v20();
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_17;
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v4 = 0;
    unint64_t v22 = v1 & 0xC000000000000001;
    uint64_t v21 = *(void *)(v0 + 80) + 32;
    uint64_t v23 = v2;
    while (1)
    {
      if (v22)
      {
        uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v6 = *(void *)(v21 + 8 * v4);
        swift_retain();
      }
      uint64_t v8 = *(void *)(v0 + 112);
      uint64_t v7 = *(void *)(v0 + 120);
      uint64_t v9 = *(void *)(v0 + 88);
      uint64_t v10 = type metadata accessor for TaskPriority();
      uint64_t v11 = *(void *)(v10 - 8);
      long long v24 = *(_OWORD *)(v0 + 96);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v7, 1, 1, v10);
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = 0;
      uint64_t v13 = (void *)(v12 + 16);
      *(void *)(v12 + 24) = 0;
      *(void *)(v12 + 32) = v6;
      *(void *)(v12 + 40) = v9;
      *(_OWORD *)(v12 + 48) = v24;
      sub_100013210(v7, v8, (uint64_t *)&unk_1003F3C10);
      LODWORD(v8) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v14 = *(void *)(v0 + 112);
      if (v8 == 1)
      {
        sub_10000A520(*(void *)(v0 + 112), (uint64_t *)&unk_1003F3C10);
        if (!*v13) {
          goto LABEL_13;
        }
      }
      else
      {
        TaskPriority.rawValue.getter();
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v14, v10);
        if (!*v13)
        {
LABEL_13:
          uint64_t v15 = 0;
          uint64_t v17 = 0;
          goto LABEL_14;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v15 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v17 = v16;
      swift_unknownObjectRelease();
LABEL_14:
      uint64_t v18 = **(void **)(v0 + 72);
      uint64_t v19 = v17 | v15;
      if (v17 | v15)
      {
        uint64_t v19 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v15;
        *(void *)(v0 + 40) = v17;
      }
      ++v4;
      uint64_t v5 = *(void *)(v0 + 120);
      *(void *)(v0 + 48) = 1;
      *(void *)(v0 + 56) = v19;
      *(void *)(v0 + 64) = v18;
      swift_task_create();
      swift_release();
      swift_release();
      sub_10000A520(v5, (uint64_t *)&unk_1003F3C10);
      if (v23 == v4) {
        goto LABEL_17;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100276828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[6] = a6;
  v7[7] = a7;
  v7[4] = a4;
  v7[5] = a5;
  sub_100044014((uint64_t *)&unk_1003F3C10);
  v7[8] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for UUID();
  v7[9] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v7[10] = v9;
  v7[11] = *(void *)(v9 + 64);
  v7[12] = swift_task_alloc();
  v7[13] = swift_task_alloc();
  v7[14] = swift_task_alloc();
  return _swift_task_switch(sub_100276940, 0, 0);
}

uint64_t sub_100276940()
{
  static Task<>.checkCancellation()();
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of FM.XPCSession.underlyingConnectionIdentity.getter
                                       + async function pointer to dispatch thunk of FM.XPCSession.underlyingConnectionIdentity.getter);
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_100276A70;
  uint64_t v2 = *(void *)(v0 + 112);
  return v4(v2);
}

uint64_t sub_100276A70()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100276B6C, 0, 0);
}

uint64_t sub_100276B6C()
{
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v4 = v0[10];
  uint64_t v3 = v0[11];
  uint64_t v5 = v0[9];
  uint64_t v6 = v0[4];
  uint64_t v14 = v0[5];
  uint64_t v15 = v0[7];
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v0[16] = v7;
  v0[17] = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v7(v2, v1, v5);
  unint64_t v8 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v9 = (v3 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = swift_allocObject();
  v0[18] = v11;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v11 + v8, v2, v5);
  *(void *)(v11 + v9) = v6;
  *(void *)(v11 + v10) = v14;
  *(void *)(v11 + ((v10 + 15) & 0xFFFFFFFFFFFFFFF8)) = v15;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v12 = (void *)swift_task_alloc();
  v0[19] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_100276D14;
  return withTimeout<A>(_:block:)();
}

uint64_t sub_100276D14()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100276E30;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_100283960;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100276E30()
{
  unint64_t v30 = v0;
  swift_release();
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[16];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[9];
  uint64_t v5 = type metadata accessor for Logger();
  sub_100044058(v5, (uint64_t)qword_10040C290);
  v1(v3, v2, v4);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.error.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = v0[12];
  uint64_t v11 = v0[9];
  uint64_t v10 = v0[10];
  if (v8)
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v28 = (void *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136446466;
    sub_1000207A4(&qword_1003ECF68, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[2] = sub_100037004(v13, v14, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v15(v9, v11);
    uint64_t v16 = v15;
    *(_WORD *)(v12 + 12) = 2114;
    swift_errorRetain();
    uint64_t v17 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v28 = v17;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "sendToClients %{public}s error: %{public}@", (uint8_t *)v12, 0x16u);
    sub_100044014(&qword_1003ECCC8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v18(v9, v11);
    uint64_t v16 = v18;
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v19 = v0[14];
  uint64_t v21 = v0[8];
  uint64_t v20 = v0[9];
  uint64_t v22 = v0[6];
  uint64_t v23 = v0[4];
  uint64_t v24 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v21, 1, 1, v24);
  uint64_t v25 = (void *)swift_allocObject();
  v25[2] = 0;
  v25[3] = 0;
  v25[4] = v22;
  v25[5] = v23;
  swift_retain();
  swift_retain();
  sub_10010405C(v21, (uint64_t)&unk_1003F3300, (uint64_t)v25);
  swift_release();
  swift_errorRelease();
  v16(v19, v20);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v26 = (uint64_t (*)(void))v0[1];
  return v26();
}

uint64_t sub_100277254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  v4[4] = a2;
  uint64_t v5 = type metadata accessor for UUID();
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  v4[10] = swift_task_alloc();
  return _swift_task_switch(sub_100277328, 0, 0);
}

uint64_t sub_100277328()
{
  uint64_t v20 = v0;
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[8];
  uint64_t v5 = type metadata accessor for Logger();
  v0[11] = sub_100044058(v5, (uint64_t)qword_10040C290);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v0[12] = v6;
  v0[13] = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v2, v1, v3);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = v0[10];
  uint64_t v11 = v0[7];
  uint64_t v12 = v0[8];
  if (v9)
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446210;
    sub_1000207A4(&qword_1003ECF68, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[3] = sub_100037004(v14, v15, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v16(v10, v11);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Sending location update to client %{public}s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v16(v10, v11);
  }

  v0[14] = v16;
  uint64_t v17 = v0[5];
  return _swift_task_switch(sub_1002775A8, v17, 0);
}

uint64_t sub_1002775A8()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 120) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 40);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10027768C;
  return withOnceCheckedThrowingContinuation<A>(function:_:)(v2, 0xD000000000000017, 0x8000000100378770, sub_1002839A0, v1, (char *)&type metadata for () + 8);
}

uint64_t sub_10027768C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = sub_100283984;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 40);
    swift_task_dealloc();
    uint64_t v4 = sub_1002777B4;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1002777B4()
{
  return _swift_task_switch(sub_1002777D0, 0, 0);
}

uint64_t sub_1002777D0()
{
  uint64_t v12 = v0;
  (*(void (**)(void, void, void))(v0 + 96))(*(void *)(v0 + 72), *(void *)(v0 + 32), *(void *)(v0 + 56));
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void *)(v0 + 72);
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v0 + 112);
    uint64_t v4 = *(void *)(v0 + 56);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    sub_1000207A4(&qword_1003ECF68, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v6 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 16) = sub_100037004(v6, v7, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v10(v3, v4);
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Successfully sent location update to client %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v0 + 112))(*(void *)(v0 + 72), *(void *)(v0 + 56));
  }

  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1002779F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v7;
  *unint64_t v7 = v5;
  v7[1] = sub_10004A274;
  return sub_100261024(a5);
}

uint64_t sub_100277A8C(uint64_t a1)
{
  os_log_type_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for UUID();
  __chkstk_darwin(v5 - 8);
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100044058(v6, (uint64_t)qword_10040C290);
  swift_bridgeObjectRetain();
  unint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136446466;
    sub_100037004(0xD000000000000022, 0x80000001003787D0, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v9 + 12) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "%{public}s count:%ld", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  type metadata accessor for WorkItemQueue.WorkItem();
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = v2;
  v10[3] = a1;
  v10[4] = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  UUID.init()();
  WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
  dispatch thunk of WorkItemQueue.enqueue(_:)();
  return swift_release();
}

uint64_t sub_100277D5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return _swift_task_switch(sub_100277D80, 0, 0);
}

uint64_t sub_100277D80()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = swift_allocObject();
  *(void *)(v0 + 40) = v2;
  *(void *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 24) = *(_OWORD *)(v0 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1001CF530;
  return withTimeout<A>(_:block:)();
}

uint64_t sub_100277E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a3;
  v4[8] = a4;
  v4[6] = a2;
  uint64_t v6 = type metadata accessor for Handle();
  v4[9] = v6;
  v4[10] = *(void *)(v6 - 8);
  v4[11] = swift_task_alloc();
  unint64_t v7 = (void *)swift_task_alloc();
  v4[12] = v7;
  *unint64_t v7 = v4;
  v7[1] = sub_100277FA4;
  v7[4] = a2;
  return _swift_task_switch(sub_100014F34, a2, 0);
}

uint64_t sub_100277FA4(uint64_t a1)
{
  uint64_t v3 = (void *)*v1;
  uint64_t v9 = (void *)*v1;
  v3[13] = a1;
  swift_task_dealloc();
  v3[2] = a1;
  v3 += 2;
  uint64_t v4 = (void *)swift_task_alloc();
  v3[12] = v4;
  uint64_t v5 = sub_100044014(&qword_1003F3248);
  uint64_t v6 = type metadata accessor for UUID();
  v3[13] = v6;
  uint64_t v7 = sub_100014FFC(&qword_1003F3250, &qword_1003F3248);
  *uint64_t v4 = v9;
  v4[1] = sub_10027815C;
  return Sequence.asyncMap<A>(_:)(&unk_1003F3240, 0, v5, v6, v7);
}

uint64_t sub_10027815C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 128) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10027825C, 0, 0);
}

uint64_t sub_10027825C()
{
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100044058(v1, (uint64_t)qword_10040C290);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    os_log_type_t v36 = v3;
    unint64_t v4 = v0[13];
    uint64_t v5 = swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 134218498;
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v7 = v0[7];
    swift_bridgeObjectRelease();
    v0[3] = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v8 = Array.description.getter();
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    v0[4] = sub_100037004(v8, v10, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 22) = 2048;
    uint64_t v11 = *(void *)(v7 + 16);
    swift_bridgeObjectRelease();
    v0[5] = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v36, "Send unavailable handles to clients[%ld]: %{public}s handles count:%ld", (uint8_t *)v5, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v12 = v0[7];
  uint64_t v13 = *(void *)(v12 + 16);
  uint64_t v14 = v0;
  if (v13)
  {
    uint64_t v15 = v0[10];
    uint64_t v17 = *(void (**)(void, uint64_t, void))(v15 + 16);
    v15 += 16;
    uint64_t v16 = v17;
    uint64_t v18 = v12 + ((*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64));
    uint64_t v37 = *(void *)(v15 + 56);
    uint64_t v38 = (void (**)(uint64_t, uint64_t))(v15 - 8);
    swift_bridgeObjectRetain();
    unint64_t v35 = v17;
    do
    {
      v16(v14[11], v18, v14[9]);
      uint64_t v19 = Logger.logObject.getter();
      os_log_type_t v20 = static os_log_type_t.default.getter();
      BOOL v21 = os_log_type_enabled(v19, v20);
      uint64_t v22 = v14[11];
      uint64_t v23 = v14[9];
      if (v21)
      {
        uint64_t v24 = swift_slowAlloc();
        uint64_t v40 = swift_slowAlloc();
        *(_DWORD *)uint64_t v24 = 141558275;
        *(void *)(v24 + 4) = 1752392040;
        *(_WORD *)(v24 + 12) = 2081;
        uint64_t v25 = Handle.identifier.getter();
        *(void *)(v24 + 14) = sub_100037004(v25, v26, &v40);
        swift_bridgeObjectRelease();
        (*v38)(v22, v23);
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "LocationService: send unavailable location update for handle: %{private,mask.hash}s", (uint8_t *)v24, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v16 = v35;
        swift_slowDealloc();
      }
      else
      {
        (*v38)(v14[11], v14[9]);
      }

      v18 += v37;
      --v13;
    }
    while (v13);
    uint64_t v27 = v14[13];
    uint64_t v28 = v14[7];
    uint64_t v29 = v14[8];
    uint64_t v30 = v14[6];
    swift_bridgeObjectRelease();
    uint64_t v31 = (void *)swift_task_alloc();
    v14[17] = v31;
    v31[2] = v27;
    v31[3] = v28;
    v31[4] = v30;
    v31[5] = v29;
    uint64_t v32 = (void *)swift_task_alloc();
    v14[18] = v32;
    *uint64_t v32 = v14;
    v32[1] = sub_100278814;
    return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v33 = (uint64_t (*)(void))v0[1];
    return v33();
  }
}

uint64_t sub_100278814()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return _swift_task_switch(sub_100278948, 0, 0);
}

uint64_t sub_100278948()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002789AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[12] = a5;
  v6[13] = a6;
  v6[10] = a3;
  v6[11] = a4;
  v6[9] = a2;
  sub_100044014((uint64_t *)&unk_1003F3C10);
  v6[14] = swift_task_alloc();
  v6[15] = swift_task_alloc();
  return _swift_task_switch(sub_100278A58, 0, 0);
}

uint64_t sub_100278A58()
{
  unint64_t v1 = *(void *)(v0 + 80);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v2 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v20 = *(uint64_t (**)(void))(v0 + 8);
    return v20();
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_17;
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v4 = 0;
    unint64_t v22 = v1 & 0xC000000000000001;
    uint64_t v21 = *(void *)(v0 + 80) + 32;
    uint64_t v23 = v2;
    while (1)
    {
      if (v22)
      {
        uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v6 = *(void *)(v21 + 8 * v4);
        swift_retain();
      }
      uint64_t v8 = *(void *)(v0 + 112);
      uint64_t v7 = *(void *)(v0 + 120);
      uint64_t v9 = *(void *)(v0 + 88);
      uint64_t v10 = type metadata accessor for TaskPriority();
      uint64_t v11 = *(void *)(v10 - 8);
      long long v24 = *(_OWORD *)(v0 + 96);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v7, 1, 1, v10);
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = 0;
      uint64_t v13 = (void *)(v12 + 16);
      *(void *)(v12 + 24) = 0;
      *(void *)(v12 + 32) = v6;
      *(void *)(v12 + 40) = v9;
      *(_OWORD *)(v12 + 48) = v24;
      sub_100013210(v7, v8, (uint64_t *)&unk_1003F3C10);
      LODWORD(v8) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v14 = *(void *)(v0 + 112);
      if (v8 == 1)
      {
        sub_10000A520(*(void *)(v0 + 112), (uint64_t *)&unk_1003F3C10);
        if (!*v13) {
          goto LABEL_13;
        }
      }
      else
      {
        TaskPriority.rawValue.getter();
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v14, v10);
        if (!*v13)
        {
LABEL_13:
          uint64_t v15 = 0;
          uint64_t v17 = 0;
          goto LABEL_14;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v15 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v17 = v16;
      swift_unknownObjectRelease();
LABEL_14:
      uint64_t v18 = **(void **)(v0 + 72);
      uint64_t v19 = v17 | v15;
      if (v17 | v15)
      {
        uint64_t v19 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v15;
        *(void *)(v0 + 40) = v17;
      }
      ++v4;
      uint64_t v5 = *(void *)(v0 + 120);
      *(void *)(v0 + 48) = 1;
      *(void *)(v0 + 56) = v19;
      *(void *)(v0 + 64) = v18;
      swift_task_create();
      swift_release();
      swift_release();
      sub_10000A520(v5, (uint64_t *)&unk_1003F3C10);
      if (v23 == v4) {
        goto LABEL_17;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100278DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[6] = a6;
  v7[7] = a7;
  v7[4] = a4;
  v7[5] = a5;
  sub_100044014((uint64_t *)&unk_1003F3C10);
  v7[8] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for UUID();
  v7[9] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v7[10] = v9;
  v7[11] = *(void *)(v9 + 64);
  v7[12] = swift_task_alloc();
  v7[13] = swift_task_alloc();
  v7[14] = swift_task_alloc();
  return _swift_task_switch(sub_100278ED0, 0, 0);
}

uint64_t sub_100278ED0()
{
  static Task<>.checkCancellation()();
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of FM.XPCSession.underlyingConnectionIdentity.getter
                                       + async function pointer to dispatch thunk of FM.XPCSession.underlyingConnectionIdentity.getter);
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_100279000;
  uint64_t v2 = *(void *)(v0 + 112);
  return v4(v2);
}

uint64_t sub_100279000()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1002790FC, 0, 0);
}

uint64_t sub_1002790FC()
{
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v4 = v0[10];
  uint64_t v3 = v0[11];
  uint64_t v5 = v0[9];
  uint64_t v6 = v0[4];
  uint64_t v14 = v0[5];
  uint64_t v15 = v0[7];
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v0[16] = v7;
  v0[17] = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v7(v2, v1, v5);
  unint64_t v8 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v9 = (v3 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = swift_allocObject();
  v0[18] = v11;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v11 + v8, v2, v5);
  *(void *)(v11 + v9) = v6;
  *(void *)(v11 + v10) = v14;
  *(void *)(v11 + ((v10 + 15) & 0xFFFFFFFFFFFFFFF8)) = v15;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v12 = (void *)swift_task_alloc();
  v0[19] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_1002792A4;
  return withTimeout<A>(_:block:)();
}

uint64_t sub_1002792A4()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100279464;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1002793C0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002793C0()
{
  (*(void (**)(void, void))(v0[10] + 8))(v0[14], v0[9]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100279464()
{
  uint64_t v30 = v0;
  swift_release();
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[16];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[9];
  uint64_t v5 = type metadata accessor for Logger();
  sub_100044058(v5, (uint64_t)qword_10040C290);
  v1(v3, v2, v4);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.error.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = v0[12];
  uint64_t v11 = v0[9];
  uint64_t v10 = v0[10];
  if (v8)
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v28 = (void *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136446466;
    sub_1000207A4(&qword_1003ECF68, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[2] = sub_100037004(v13, v14, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v15(v9, v11);
    uint64_t v16 = v15;
    *(_WORD *)(v12 + 12) = 2114;
    swift_errorRetain();
    uint64_t v17 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v28 = v17;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "sendToClients unavailableHandles %{public}s error: %{public}@", (uint8_t *)v12, 0x16u);
    sub_100044014(&qword_1003ECCC8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v18(v9, v11);
    uint64_t v16 = v18;
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v19 = v0[14];
  uint64_t v21 = v0[8];
  uint64_t v20 = v0[9];
  uint64_t v22 = v0[6];
  uint64_t v23 = v0[4];
  uint64_t v24 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v21, 1, 1, v24);
  uint64_t v25 = (void *)swift_allocObject();
  v25[2] = 0;
  v25[3] = 0;
  v25[4] = v22;
  v25[5] = v23;
  swift_retain();
  swift_retain();
  sub_10010405C(v21, (uint64_t)&unk_1003F3290, (uint64_t)v25);
  swift_release();
  swift_errorRelease();
  v16(v19, v20);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v26 = (uint64_t (*)(void))v0[1];
  return v26();
}

uint64_t sub_100279888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  v4[4] = a2;
  uint64_t v5 = type metadata accessor for UUID();
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  v4[10] = swift_task_alloc();
  return _swift_task_switch(sub_10027995C, 0, 0);
}

uint64_t sub_10027995C()
{
  uint64_t v20 = v0;
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[8];
  uint64_t v5 = type metadata accessor for Logger();
  v0[11] = sub_100044058(v5, (uint64_t)qword_10040C290);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v0[12] = v6;
  v0[13] = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v2, v1, v3);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = v0[10];
  uint64_t v11 = v0[7];
  uint64_t v12 = v0[8];
  if (v9)
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446210;
    sub_1000207A4(&qword_1003ECF68, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[3] = sub_100037004(v14, v15, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v16(v10, v11);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Sending unavailableHandles to client %{public}s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v16(v10, v11);
  }

  v0[14] = v16;
  uint64_t v17 = v0[5];
  return _swift_task_switch(sub_100279BDC, v17, 0);
}

uint64_t sub_100279BDC()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 120) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 40);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100279CC0;
  return withOnceCheckedThrowingContinuation<A>(function:_:)(v2, 0xD00000000000001ALL, 0x8000000100378750, sub_10028399C, v1, (char *)&type metadata for () + 8);
}

uint64_t sub_100279CC0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = sub_1001D23C4;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 40);
    swift_task_dealloc();
    uint64_t v4 = sub_100279DE8;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100279DE8()
{
  return _swift_task_switch(sub_100279E04, 0, 0);
}

uint64_t sub_100279E04()
{
  uint64_t v12 = v0;
  (*(void (**)(void, void, void))(v0 + 96))(*(void *)(v0 + 72), *(void *)(v0 + 32), *(void *)(v0 + 56));
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void *)(v0 + 72);
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v0 + 112);
    uint64_t v4 = *(void *)(v0 + 56);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    sub_1000207A4(&qword_1003ECF68, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v6 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 16) = sub_100037004(v6, v7, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v10(v3, v4);
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Successfully sent unavailableHandles to client %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v0 + 112))(*(void *)(v0 + 72), *(void *)(v0 + 56));
  }

  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_10027A024()
{
  swift_bridgeObjectRelease();
  sub_10000A520(v0 + OBJC_IVAR____TtC13findmylocated15LocationService_serviceDescription, &qword_1003F0A50);
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_10000A520(v0 + OBJC_IVAR____TtC13findmylocated15LocationService_dataManagerStateStream, &qword_1003F3430);
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_10027A12C()
{
  sub_10027A024();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_10027A158()
{
  return type metadata accessor for LocationService();
}

void sub_10027A160()
{
  sub_10016926C();
  if (v0 <= 0x3F)
  {
    sub_10027A284();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_10027A284()
{
  if (!qword_1003F2E90)
  {
    sub_10004AE58((uint64_t *)&unk_1003F2E98);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1003F2E90);
    }
  }
}

uint64_t destroy for LatestLocationTask()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_bridgeObjectRelease();
}

void *_s13findmylocated18LatestLocationTaskVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for LatestLocationTask(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LatestLocationTask(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for LatestLocationTask()
{
  return &type metadata for LatestLocationTask;
}

uint64_t destroy for LocationService.SubscriptionTracker()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

void *_s13findmylocated15LocationServiceC19SubscriptionTrackerVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for LocationService.SubscriptionTracker(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for LocationService.SubscriptionTracker(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for LocationService.SubscriptionTracker()
{
  return &type metadata for LocationService.SubscriptionTracker;
}

uint64_t sub_10027A598(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  uint64_t v5 = type metadata accessor for LocationService();
  *uint64_t v4 = v2;
  v4[1] = sub_10004A274;
  return ActorServiceProtocol.initialLaunchProcessing()(v5, a2);
}

uint64_t sub_10027A644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  os_log_type_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for LocationService();
  void *v8 = v4;
  v8[1] = sub_10004A274;
  return ActorServiceProtocol.migrate(from:to:)(a1, a2, v9, a4);
}

uint64_t sub_10027A70C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  uint64_t v5 = type metadata accessor for LocationService();
  *uint64_t v4 = v2;
  v4[1] = sub_10004A274;
  return ActorServiceProtocol.firstLaunchSinceReboot()(v5, a2);
}

uint64_t sub_10027A7B8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10004A274;
  return sub_10024EC94();
}

uint64_t sub_10027A844()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100018CD0;
  return sub_10024F8C4();
}

uint64_t sub_10027A8D0()
{
  return ActorServiceProtocol.description.getter();
}

uint64_t sub_10027A940()
{
  return sub_1000207A4(&qword_1003F3140, 255, (void (*)(uint64_t))type metadata accessor for LocationService);
}

uint64_t sub_10027A98C()
{
  return sub_1000207A4(qword_1003F3148, 255, (void (*)(uint64_t))type metadata accessor for LocationService);
}

uint64_t sub_10027A9D8(uint64_t a1, uint64_t a2)
{
  return sub_1000207A4(&qword_1003F3188, a2, (void (*)(uint64_t))type metadata accessor for LocationServiceClient);
}

uint64_t sub_10027AA20(uint64_t a1, uint64_t a2)
{
  return sub_1000207A4((unint64_t *)&qword_1003F3190, a2, (void (*)(uint64_t))type metadata accessor for LocationServiceClient);
}

uint64_t sub_10027AA68(uint64_t a1)
{
  return sub_10024BB28(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t)&unk_1003E35D8, (uint64_t)&unk_1003F31B0);
}

uint64_t sub_10027AAA0()
{
  return sub_1000227FC((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease, 56);
}

uint64_t sub_10027AAD0()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_10004A274;
  *(void *)(v3 + 56) = v2;
  *(_OWORD *)(v3 + 40) = v4;
  return _swift_task_switch(sub_10024BC64, 0, 0);
}

uint64_t sub_10027AB88()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 16);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_10004A274;
  *(void *)(v3 + 96) = v2;
  *(_OWORD *)(v3 + 80) = v4;
  return _swift_task_switch(sub_10024C160, 0, 0);
}

uint64_t sub_10027AC3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v24 = a3;
  uint64_t v25 = a1;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v23 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  uint64_t v13 = sub_100044014((uint64_t *)&unk_1003F3C10);
  __chkstk_darwin(v13 - 8);
  unint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a6, v10);
  unint64_t v17 = (*(unsigned __int8 *)(v11 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v18 = (char *)swift_allocObject();
  *((void *)v18 + 2) = 0;
  *((void *)v18 + 3) = 0;
  uint64_t v19 = v23;
  uint64_t v20 = v24;
  *((void *)v18 + 4) = a2;
  *((void *)v18 + 5) = v20;
  *((void *)v18 + 6) = a4;
  *((void *)v18 + 7) = a5;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v18[v17], (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v19);
  *(void *)&v18[(v12 + v17 + 7) & 0xFFFFFFFFFFFFFFF8] = v25;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_10010405C((uint64_t)v15, (uint64_t)&unk_1003F3418, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_10027AE64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[8] = a8;
  v8[9] = v13;
  v8[6] = a5;
  v8[7] = a7;
  v8[5] = a4;
  uint64_t v10 = type metadata accessor for UUID();
  v8[10] = v10;
  v8[11] = *(void *)(v10 - 8);
  v8[12] = swift_task_alloc();
  return _swift_task_switch(sub_10027AF38, a4, 0);
}

uint64_t sub_10027AF38()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[6];
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 16))(v1, v0[8], v4);
  os_log_type_t v8 = (uint64_t *)(v6 + OBJC_IVAR____TtC13findmylocated15LocationService_inFlightLatestLocationTasks);
  swift_beginAccess();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = *v8;
  uint64_t *v8 = 0x8000000000000000;
  sub_100143838(v7, v3, v5, v1, isUniquelyReferenced_nonNull_native);
  uint64_t *v8 = v12;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v4);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_10027B0A8()
{
  return sub_10024C520();
}

unint64_t sub_10027B0C4()
{
  unint64_t result = qword_1003F31D0;
  if (!qword_1003F31D0)
  {
    sub_10004AE58(&qword_1003F31C8);
    sub_1000207A4(&qword_1003EEAB0, 255, (void (*)(uint64_t))&type metadata accessor for Handle);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003F31D0);
  }
  return result;
}

uint64_t sub_10027B16C(uint64_t a1)
{
  return sub_10024C6E8(a1, v1, 0xD00000000000001ALL, 0x8000000100378750);
}

uint64_t sub_10027B1A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10027B1B0()
{
  return swift_release();
}

uint64_t sub_10027B1B8(uint64_t a1)
{
  return sub_10024BB28(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t)&unk_1003E3650, (uint64_t)&unk_1003F31E8);
}

uint64_t sub_10027B1F0()
{
  return sub_1000227FC((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease, 56);
}

uint64_t sub_10027B220()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_10004A274;
  *(void *)(v3 + 56) = v2;
  *(_OWORD *)(v3 + 40) = v4;
  return _swift_task_switch(sub_10024B228, 0, 0);
}

uint64_t sub_10027B2D8()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10027B320()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 16);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_10004A274;
  *(void *)(v3 + 96) = v2;
  *(_OWORD *)(v3 + 80) = v4;
  return _swift_task_switch(sub_10024B724, 0, 0);
}

unint64_t sub_10027B3D4()
{
  unint64_t result = qword_1003F3200;
  if (!qword_1003F3200)
  {
    sub_10004AE58(&qword_1003F03F8);
    sub_1000207A4(&qword_1003EEAB0, 255, (void (*)(uint64_t))&type metadata accessor for Handle);
    sub_1000207A4(&qword_1003F3208, 255, (void (*)(uint64_t))&type metadata accessor for Location);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003F3200);
  }
  return result;
}

uint64_t sub_10027B4B8(uint64_t a1)
{
  return sub_10024C6E8(a1, v1, 0xD000000000000017, 0x8000000100378770);
}

uint64_t sub_10027B4EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v64 = a5;
  uint64_t v56 = type metadata accessor for Location();
  uint64_t v52 = *(void *)(v56 - 8);
  uint64_t v9 = __chkstk_darwin(v56);
  char v50 = (char *)v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v46 - v11;
  uint64_t v55 = type metadata accessor for Handle();
  uint64_t v51 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v14 = (char *)v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100044014(&qword_1003F33E8);
  __chkstk_darwin(v15 - 8);
  unint64_t v17 = (char *)v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v19 = ~v18;
  uint64_t v20 = *(void *)(a1 + 64);
  uint64_t v21 = -v18;
  uint64_t v57 = a1;
  uint64_t v58 = a1 + 64;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  else {
    uint64_t v22 = -1;
  }
  uint64_t v59 = v19;
  uint64_t v60 = 0;
  uint64_t v61 = v22 & v20;
  uint64_t v62 = a2;
  uint64_t v63 = a3;
  v46[1] = a1;
  swift_bridgeObjectRetain();
  v46[0] = a3;
  swift_retain();
  sub_100291C64((uint64_t)v17);
  uint64_t v23 = sub_100044014(&qword_1003F0028);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v17, 1, v23) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1001491B4();
    return swift_release();
  }
  uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v51 + 32);
  uint64_t v54 = v51 + 32;
  uint64_t v25 = (void (**)(char *, char *, uint64_t))(v52 + 32);
  uint64_t v48 = v52 + 8;
  uint64_t v49 = v52 + 16;
  v46[3] = v52 + 40;
  uint64_t v47 = (void (**)(char *, uint64_t))(v51 + 8);
  while (1)
  {
    uint64_t v30 = &v17[*(int *)(v23 + 48)];
    v53(v14, v17, v55);
    uint64_t v31 = *v25;
    uint64_t v32 = v12;
    (*v25)(v12, v30, v56);
    uint64_t v33 = *v64;
    unint64_t v35 = sub_100025614((uint64_t)v14);
    uint64_t v36 = *(void *)(v33 + 16);
    BOOL v37 = (v34 & 1) == 0;
    uint64_t v38 = v36 + v37;
    if (__OFADD__(v36, v37)) {
      break;
    }
    char v39 = v34;
    if (*(void *)(v33 + 24) >= v38)
    {
      if (a4)
      {
        if (v34) {
          goto LABEL_7;
        }
      }
      else
      {
        sub_10012682C();
        if (v39) {
          goto LABEL_7;
        }
      }
    }
    else
    {
      sub_10013FDD8(v38, a4 & 1);
      unint64_t v40 = sub_100025614((uint64_t)v14);
      if ((v39 & 1) != (v41 & 1)) {
        goto LABEL_22;
      }
      unint64_t v35 = v40;
      if (v39)
      {
LABEL_7:
        uint64_t v26 = v52;
        uint64_t v27 = v50;
        uint64_t v12 = v32;
        uint64_t v28 = v32;
        uint64_t v29 = v56;
        (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v50, v28, v56);
        (*(void (**)(char *, uint64_t))(v26 + 8))(v12, v29);
        (*v47)(v14, v55);
        (*(void (**)(unint64_t, char *, uint64_t))(v26 + 40))(*(void *)(*v64 + 56) + *(void *)(v26 + 72) * v35, v27, v29);
        goto LABEL_8;
      }
    }
    uint64_t v42 = (void *)*v64;
    *(void *)(*v64 + 8 * (v35 >> 6) + 64) |= 1 << v35;
    v53((char *)(v42[6] + *(void *)(v51 + 72) * v35), v14, v55);
    uint64_t v12 = v32;
    v31((char *)(v42[7] + *(void *)(v52 + 72) * v35), v32, v56);
    uint64_t v43 = v42[2];
    BOOL v44 = __OFADD__(v43, 1);
    uint64_t v45 = v43 + 1;
    if (v44) {
      goto LABEL_21;
    }
    v42[2] = v45;
LABEL_8:
    sub_100291C64((uint64_t)v17);
    uint64_t v23 = sub_100044014(&qword_1003F0028);
    a4 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v17, 1, v23) == 1) {
      goto LABEL_5;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void (*sub_10027BA00(void *a1, uint64_t a2))(uint64_t a1)
{
  long long v4 = malloc(0x68uLL);
  *a1 = v4;
  uint64_t Priority = type metadata accessor for LocatePriority();
  v4[8] = Priority;
  uint64_t v6 = *(void *)(Priority - 8);
  uint64_t v7 = v6;
  v4[9] = v6;
  os_log_type_t v8 = malloc(*(void *)(v6 + 64));
  v4[10] = v8;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  (*(void (**)(void *, uint64_t, uint64_t))(v7 + 16))(v8, a2, Priority);
  v4[11] = sub_10027BD50(v4);
  v4[12] = sub_10027BBB8(v4 + 4, (uint64_t)v8, isUniquelyReferenced_nonNull_native);
  return sub_10027BB20;
}

void sub_10027BB20(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 88);
  uint64_t v4 = *(void *)(*(void *)a1 + 72);
  uint64_t v3 = *(void **)(*(void *)a1 + 80);
  uint64_t v5 = *(void *)(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 96))();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v5);
  v2(v1, 0);
  free(v3);

  free(v1);
}

void (*sub_10027BBB8(void *a1, uint64_t a2, char a3))(uint64_t **a1)
{
  uint64_t v4 = v3;
  os_log_type_t v8 = (char *)malloc(0x38uLL);
  *a1 = v8;
  *((void *)v8 + 3) = a2;
  *((void *)v8 + 4) = v3;
  uint64_t v9 = *v3;
  unint64_t v11 = sub_1000244E0(a2);
  v8[48] = v10 & 1;
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    char v15 = v10;
    uint64_t v16 = *(void *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      *((void *)v8 + 5) = v11;
      if (v15)
      {
LABEL_8:
        uint64_t v17 = *(void *)(*v4 + 56) + 24 * v11;
        uint64_t v18 = *(void *)v17;
        long long v19 = *(_OWORD *)(v17 + 8);
LABEL_12:
        *(void *)os_log_type_t v8 = v18;
        *(_OWORD *)(v8 + 8) = v19;
        return sub_10027BCFC;
      }
LABEL_11:
      uint64_t v18 = 0;
      long long v19 = 0uLL;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_100127788();
      goto LABEL_7;
    }
    sub_1000089B8(v14, a3 & 1);
    unint64_t v20 = sub_1000244E0(a2);
    if ((v15 & 1) == (v21 & 1))
    {
      unint64_t v11 = v20;
      *((void *)v8 + 5) = v20;
      if (v15) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  type metadata accessor for LocatePriority();
  uint64_t result = (void (*)(uint64_t **))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_10027BCFC(uint64_t **a1)
{
  uint64_t v1 = *a1;
  sub_10027BD8C(*a1, *((unsigned char *)*a1 + 48), (uint64_t *)(*a1)[4], (*a1)[5], (*a1)[3]);
  sub_100281718(*v1);

  free(v1);
}

uint64_t (*sub_10027BD50(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_10027BD80;
}

uint64_t sub_10027BD80(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t sub_10027BD8C(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t Priority = type metadata accessor for LocatePriority();
  __chkstk_darwin(Priority);
  BOOL v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *a1;
  uint64_t v15 = a1[1];
  uint64_t v16 = a1[2];
  if (v14)
  {
    uint64_t v17 = (void *)*a3;
    if (a2)
    {
      uint64_t v18 = (uint64_t *)(v17[7] + 24 * a4);
      *uint64_t v18 = v14;
      v18[1] = v15;
      void v18[2] = v16;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 16))(v13, a5);
      sub_10004AF08(a4, (uint64_t)v13, v14, v15, v16, v17);
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_100124930(a4, *a3);
  }
  return sub_100281758(v14);
}

uint64_t sub_10027BEEC()
{
  return sub_100283650((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease, 40);
}

uint64_t sub_10027BF1C()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 16);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_100018CD0;
  *(void *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  return _swift_task_switch(sub_100277D80, 0, 0);
}

uint64_t sub_10027BFD0@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  if (result < 0 || (uint64_t v4 = result, 1 << *(unsigned char *)(a3 + 32) <= result))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (((*(void *)(a3 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (*(_DWORD *)(a3 + 36) != a2)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v6 = *(void *)(a3 + 48);
  uint64_t v7 = type metadata accessor for Device();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  uint64_t v10 = v6 + *(void *)(v8 + 72) * v4;

  return v9(a4, v10, v7);
}

uint64_t sub_10027C090@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  if (result < 0 || (uint64_t v4 = result, 1 << *(unsigned char *)(a3 + 32) <= result))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (((*(void *)(a3 + 8 * ((unint64_t)result >> 6) + 64) >> result) & 1) == 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (*(_DWORD *)(a3 + 36) != a2)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v6 = *(void *)(a3 + 48);
  uint64_t v7 = type metadata accessor for Handle();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  uint64_t v10 = v6 + *(void *)(v8 + 72) * v4;

  return v9(a4, v10, v7);
}

uint64_t sub_10027C150(uint64_t a1, char a2)
{
  *(unsigned char *)(v2 + 32) = a2;
  *(void *)(v2 + 24) = a1;
  return _swift_task_switch(sub_10027C174, 0, 0);
}

uint64_t sub_10027C174()
{
  uint64_t v12 = v0;
  if (*(unsigned char *)(v0 + 32))
  {
    swift_errorRetain();
    if (qword_1003EC408 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_100044058(v1, (uint64_t)qword_10040C290);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.error.getter();
    BOOL v4 = os_log_type_enabled(v2, v3);
    uint64_t v5 = *(void *)(v0 + 24);
    if (v4)
    {
      uint64_t v6 = swift_slowAlloc();
      uint64_t v7 = (void *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136446466;
      *(void *)(v0 + 16) = sub_100037004(0xD000000000000023, 0x8000000100378800, &v11);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v6 + 12) = 2114;
      swift_errorRetain();
      uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 16) = v8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v7 = v8;
      sub_1001D5B10(v5, 1);
      sub_1001D5B10(v5, 1);
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "%{public}s error: %{public}@", (uint8_t *)v6, 0x16u);
      sub_100044014(&qword_1003ECCC8);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_1001D5B10(v5, 1);
    }
    else
    {
      sub_1001D5B10(*(void *)(v0 + 24), 1);
      sub_1001D5B10(v5, 1);
      swift_errorRelease();
    }
  }
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_10027C414(uint64_t a1, char a2)
{
  *(unsigned char *)(v2 + 32) = a2;
  *(void *)(v2 + 24) = a1;
  return _swift_task_switch(sub_10027C438, 0, 0);
}

uint64_t sub_10027C438()
{
  uint64_t v12 = v0;
  if (*(unsigned char *)(v0 + 32))
  {
    swift_errorRetain();
    if (qword_1003EC408 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_100044058(v1, (uint64_t)qword_10040C290);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.error.getter();
    BOOL v4 = os_log_type_enabled(v2, v3);
    uint64_t v5 = *(void *)(v0 + 24);
    if (v4)
    {
      uint64_t v6 = swift_slowAlloc();
      uint64_t v7 = (void *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136446466;
      *(void *)(v0 + 16) = sub_100037004(0xD000000000000022, 0x80000001003787D0, &v11);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v6 + 12) = 2114;
      swift_errorRetain();
      uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 16) = v8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v7 = v8;
      sub_1001D5B10(v5, 1);
      sub_1001D5B10(v5, 1);
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "%{public}s error: %{public}@", (uint8_t *)v6, 0x16u);
      sub_100044014(&qword_1003ECCC8);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_1001D5B10(v5, 1);
    }
    else
    {
      sub_1001D5B10(*(void *)(v0 + 24), 1);
      sub_1001D5B10(v5, 1);
      swift_errorRelease();
    }
  }
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_10027C6D8()
{
  return sub_100283650((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease, 40);
}

uint64_t sub_10027C708(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10004A274;
  return sub_100277E94(a1, v4, v5, v6);
}

uint64_t sub_10027C7BC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v9 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  *uint64_t v10 = v3;
  v10[1] = sub_10004A274;
  return sub_1002789AC(a1, a2, v6, v7, v9, v8);
}

uint64_t sub_10027C884()
{
  return sub_1000227FC((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release, 64);
}

uint64_t sub_10027C8B4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10004A274;
  return sub_100278DB8(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_10027C98C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1 + v5;
  uint64_t v8 = *(void *)(v1 + v6);
  uint64_t v9 = *(void *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10004A274;
  return sub_100279888(a1, v7, v8, v9);
}

uint64_t sub_10027CAC4()
{
  return sub_10027F194((void (*)(void))&_swift_release, 48);
}

uint64_t sub_10027CAE0()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10004A274;
  uint64_t v4 = (void *)swift_task_alloc();
  v3[2] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_10004A274;
  return sub_100261024(v2);
}

uint64_t sub_10027CBC4()
{
  return sub_100283650((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease, 40);
}

uint64_t sub_10027CBF4()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 16);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_10004A274;
  *(void *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  return _swift_task_switch(sub_100275874, 0, 0);
}

uint64_t sub_10027CCA8()
{
  return sub_100283650((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease, 40);
}

uint64_t sub_10027CCD8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10004A274;
  return sub_100275AA4(a1, v4, v5, v6);
}

uint64_t sub_10027CD8C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v9 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  *uint64_t v10 = v3;
  v10[1] = sub_10004A274;
  return sub_10027641C(a1, a2, v6, v7, v9, v8);
}

uint64_t sub_10027CE54()
{
  return sub_1000227FC((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release, 64);
}

uint64_t sub_10027CE84(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10004A274;
  return sub_100276828(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_10027CF5C()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10027D020(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1 + v5;
  uint64_t v8 = *(void *)(v1 + v6);
  uint64_t v9 = *(void *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10004A274;
  return sub_100277254(a1, v7, v8, v9);
}

uint64_t sub_10027D158()
{
  return sub_10027F194((void (*)(void))&_swift_release, 48);
}

uint64_t sub_10027D174()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10004A274;
  uint64_t v4 = (void *)swift_task_alloc();
  v3[2] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_10004A274;
  return sub_100261024(v2);
}

char *sub_10027D258(uint64_t a1, void *a2)
{
  id v41 = a2;
  uint64_t v40 = type metadata accessor for Handle();
  uint64_t v4 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for Friend();
  uint64_t v7 = __chkstk_darwin(v42);
  unint64_t v35 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t result = (char *)_swiftEmptyArrayStorage;
  uint64_t v43 = (char *)_swiftEmptyArrayStorage;
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    uint64_t v39 = v9 + 16;
    unint64_t v14 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v31 = v2;
    unint64_t v32 = v14;
    uint64_t v15 = a1 + v14;
    uint64_t v16 = *(void *)(v9 + 72);
    uint64_t v36 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v37 = v16;
    uint64_t v33 = (void (**)(char *, uint64_t))(v9 + 8);
    char v34 = (void (**)(char *, char *, uint64_t))(v9 + 32);
    v38(v11, v15, v42);
    while (1)
    {
      Friend.handle.getter();
      uint64_t v18 = Handle.serverID.getter();
      uint64_t v20 = v19;
      (*v36)(v6, v40);
      id v21 = [v41 findMyId];
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v24 = v23;

      if (!v20) {
        break;
      }
      if (v18 == v22 && v20 == v24)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v26 & 1) == 0) {
          goto LABEL_4;
        }
      }
      uint64_t v27 = *v34;
      (*v34)(v35, v11, v42);
      uint64_t v28 = v43;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10003BD78(0, *((void *)v28 + 2) + 1, 1);
        uint64_t v28 = v43;
      }
      unint64_t v30 = *((void *)v28 + 2);
      unint64_t v29 = *((void *)v28 + 3);
      if (v30 >= v29 >> 1)
      {
        sub_10003BD78(v29 > 1, v30 + 1, 1);
        uint64_t v28 = v43;
      }
      *((void *)v28 + 2) = v30 + 1;
      uint64_t v17 = v37;
      v27(&v28[v32 + v30 * v37], v35, v42);
      uint64_t v43 = v28;
LABEL_5:
      v15 += v17;
      if (!--v13) {
        return v43;
      }
      v38(v11, v15, v42);
    }
    swift_bridgeObjectRelease();
LABEL_4:
    (*v33)(v11, v42);
    uint64_t v17 = v37;
    goto LABEL_5;
  }
  return result;
}

void sub_10027D5C8(uint64_t *a1, id *a2)
{
  uint64_t v3 = v2;
  uint64_t v162 = a1;
  uint64_t v165 = type metadata accessor for Handle();
  uint64_t v5 = *(void *)(v165 - 8);
  uint64_t v6 = __chkstk_darwin(v165);
  uint64_t v171 = (char *)&v125 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v142 = (char *)&v125 - v8;
  uint64_t v9 = sub_100044014((uint64_t *)&unk_1003EE800);
  __chkstk_darwin(v9 - 8);
  uint64_t v158 = (char *)&v125 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v157 - 8);
  uint64_t v12 = __chkstk_darwin(v157);
  unint64_t v14 = (char *)&v125 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v144 = (char *)&v125 - v16;
  __chkstk_darwin(v15);
  uint64_t v152 = (char *)&v125 - v17;
  uint64_t v159 = type metadata accessor for Friend();
  uint64_t v18 = *(void *)(v159 - 8);
  uint64_t v19 = __chkstk_darwin(v159);
  unint64_t v150 = (char *)&v125 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v139 = (char *)&v125 - v22;
  __chkstk_darwin(v21);
  BOOL v164 = (char *)&v125 - v23;
  uint64_t v173 = type metadata accessor for Location();
  uint64_t v24 = *(void *)(v173 - 8);
  uint64_t v25 = __chkstk_darwin(v173);
  unint64_t v160 = (char *)&v125 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  os_log_type_t v163 = (char *)&v125 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v143 = (char *)&v125 - v30;
  __chkstk_darwin(v29);
  unint64_t v32 = (char *)&v125 - v31;
  unint64_t v33 = (unint64_t)*a2;
  uint64_t v34 = swift_bridgeObjectRetain();
  unint64_t v35 = sub_10027D258(v34, (void *)v33);
  swift_bridgeObjectRelease();

  if (*((void *)v35 + 2))
  {
    uint64_t v169 = *((void *)v35 + 2);
    uint64_t v138 = v14;
    uint64_t v126 = v2;
    id v36 = (id)v33;
    long long v172 = v32;
    sub_10005AE1C(v36, (uint64_t)v32);
    uint64_t v38 = *(void (**)(char *))(v18 + 16);
    uint64_t v37 = v18 + 16;
    unint64_t v170 = v38;
    unint64_t v39 = (*(unsigned __int8 *)(v37 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 64);
    uint64_t v125 = v35;
    uint64_t v40 = &v35[v39];
    uint64_t v155 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
    id v141 = (void (**)(char *, uint64_t, uint64_t))(v11 + 32);
    uint64_t v151 = (void (**)(char *, uint64_t))(v11 + 8);
    int64_t v166 = (void (**)(char *, char *, uint64_t))(v24 + 16);
    uint64_t v131 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v154 = (void (**)(char *, uint64_t))(v37 - 8);
    uint64_t v156 = (void (**)(char *, uint64_t))(v24 + 8);
    uint64_t v140 = &v175;
    uint64_t v161 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v149 = v5;
    uint64_t v137 = v5 + 16;
    uint64_t v136 = v24 + 32;
    uint64_t v148 = v24;
    uint64_t v135 = v24 + 40;
    uint64_t v167 = v37;
    uint64_t v153 = *(void *)(v37 + 56);
    *(void *)&long long v41 = 136447235;
    long long v134 = v41;
    unint64_t v128 = (unint64_t)"cationsForHandles:)";
    unint64_t v133 = 0x8000000100378830;
    os_log_type_t v132 = (char *)&type metadata for Any + 8;
    *(void *)&long long v41 = 136447747;
    long long v127 = v41;
    uint64_t v43 = v157;
    uint64_t v42 = (uint64_t)v158;
    BOOL v44 = v152;
    uint64_t v45 = v159;
    unint64_t v46 = v164;
    while (1)
    {
      uint64_t v168 = v40;
      v170(v46);
      Friend.createdAt.getter();
      if ((*v155)(v42, 1, v43) == 1)
      {
        sub_10000A520(v42, (uint64_t *)&unk_1003EE800);
      }
      else
      {
        (*v141)(v44, v42, v43);
        uint64_t v49 = v144;
        Location.date.getter();
        char v50 = static Date.< infix(_:_:)();
        uint64_t v51 = *v151;
        (*v151)(v49, v43);
        if (v50)
        {
          uint64_t v52 = v138;
          if (qword_1003EC408 != -1) {
            swift_once();
          }
          uint64_t v53 = type metadata accessor for Logger();
          sub_100044058(v53, (uint64_t)qword_10040C290);
          (*v166)(v143, v172, v173);
          uint64_t v54 = v139;
          uint64_t v55 = v164;
          ((void (*)(char *, char *, uint64_t))v170)(v139, v164, v45);
          (*v131)(v52, v44, v43);
          uint64_t v56 = v45;
          uint64_t v57 = Logger.logObject.getter();
          os_log_type_t v58 = static os_log_type_t.default.getter();
          int v59 = v58;
          if (os_log_type_enabled(v57, v58))
          {
            uint64_t v60 = swift_slowAlloc();
            uint64_t v147 = swift_slowAlloc();
            unint64_t v176 = (void *)v147;
            *(_DWORD *)uint64_t v60 = v127;
            os_log_t v146 = v57;
            uint64_t v174 = sub_100037004(0xD00000000000001DLL, v128 | 0x8000000000000000, (uint64_t *)&v176);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v60 + 12) = 2160;
            uint64_t v174 = 1752392040;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v60 + 22) = 2081;
            uint64_t v61 = v144;
            uint64_t v62 = v143;
            Location.date.getter();
            uint64_t v63 = Date.localISO8601.getter();
            int v145 = v59;
            unint64_t v65 = v64;
            v51(v61, v157);
            uint64_t v174 = sub_100037004(v63, v65, (uint64_t *)&v176);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            unint64_t v130 = v51;
            uint64_t v47 = *v156;
            (*v156)(v62, v173);
            *(_WORD *)(v60 + 32) = 2160;
            uint64_t v174 = 1752392040;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v60 + 42) = 2081;
            uint64_t v66 = v142;
            char v67 = v139;
            Friend.handle.getter();
            uint64_t v68 = Handle.identifier.getter();
            unint64_t v70 = v69;
            (*v161)(v66, v165);
            uint64_t v174 = sub_100037004(v68, v70, (uint64_t *)&v176);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            BOOL v44 = v152;
            swift_bridgeObjectRelease();
            uint64_t v129 = *v154;
            v129(v67, v159);
            *(_WORD *)(v60 + 52) = 2160;
            uint64_t v174 = 1752392040;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v60 + 62) = 2081;
            char v71 = v138;
            uint64_t v72 = Date.localISO8601.getter();
            uint64_t v174 = sub_100037004(v72, v73, (uint64_t *)&v176);
            uint64_t v43 = v157;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            uint64_t v74 = v130;
            v130(v71, v43);
            os_log_t v75 = v146;
            _os_log_impl((void *)&_mh_execute_header, v146, (os_log_type_t)v145, "%{public}s\ndrop older location with date: %{private,mask.hash}s\nfor handle:%{private,mask.hash}s\nwith creationDate:%{private,mask.hash}s", (uint8_t *)v60, 0x48u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            v74(v44, v43);
            unint64_t v46 = v164;
            uint64_t v76 = v159;
            v129(v164, v159);
            uint64_t v45 = v76;
          }
          else
          {

            v51(v52, v43);
            uint64_t v114 = *v154;
            (*v154)(v54, v56);
            os_log_type_t v115 = v51;
            uint64_t v47 = *v156;
            (*v156)(v143, v173);
            v115(v44, v43);
            v114(v55, v56);
            uint64_t v45 = v56;
            unint64_t v46 = v55;
          }
          goto LABEL_5;
        }
        v51(v44, v43);
      }
      uint64_t v77 = (uint64_t)v171;
      Friend.handle.getter();
      uint64_t v3 = *v166;
      (*v166)(v163, v172, v173);
      uint64_t v78 = v162;
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v176 = (void *)*v78;
      uint64_t v80 = (uint64_t)v176;
      *uint64_t v78 = 0x8000000000000000;
      unint64_t v33 = sub_100025614(v77);
      uint64_t v82 = *(void *)(v80 + 16);
      BOOL v83 = (v81 & 1) == 0;
      uint64_t v84 = v82 + v83;
      if (__OFADD__(v82, v83))
      {
        __break(1u);
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      char v85 = v81;
      if (*(void *)(v80 + 24) >= v84)
      {
        uint64_t v88 = v149;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_10012682C();
        }
      }
      else
      {
        sub_10013FDD8(v84, isUniquelyReferenced_nonNull_native);
        unint64_t v86 = sub_100025614((uint64_t)v171);
        uint64_t v88 = v149;
        if ((v85 & 1) != (v87 & 1))
        {
          KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
          __break(1u);
          return;
        }
        unint64_t v33 = v86;
      }
      uint64_t v89 = v159;
      uint64_t v90 = v176;
      if (v85)
      {
        uint64_t v91 = v173;
        (*(void (**)(unint64_t, char *, uint64_t))(v148 + 40))(v176[7] + *(void *)(v148 + 72) * v33, v163, v173);
      }
      else
      {
        v176[(v33 >> 6) + 8] |= 1 << v33;
        (*(void (**)(unint64_t, char *, uint64_t))(v88 + 16))(v90[6] + *(void *)(v88 + 72) * v33, v171, v165);
        uint64_t v91 = v173;
        (*(void (**)(unint64_t, char *, uint64_t))(v148 + 32))(v90[7] + *(void *)(v148 + 72) * v33, v163, v173);
        uint64_t v92 = v90[2];
        BOOL v93 = __OFADD__(v92, 1);
        uint64_t v94 = v92 + 1;
        if (v93) {
          goto LABEL_35;
        }
        v90[2] = v94;
      }
      *uint64_t v162 = (uint64_t)v176;
      swift_bridgeObjectRelease();
      uint64_t v95 = *v161;
      (*v161)(v171, v165);
      uint64_t v96 = v150;
      uint64_t v97 = v160;
      if (qword_1003EC408 != -1) {
        swift_once();
      }
      uint64_t v98 = type metadata accessor for Logger();
      sub_100044058(v98, (uint64_t)qword_10040C290);
      unint64_t v46 = v164;
      ((void (*)(char *, char *, uint64_t))v170)(v96, v164, v89);
      v3(v97, v172, v91);
      uint64_t v99 = v96;
      uint64_t v45 = v89;
      uint64_t v100 = Logger.logObject.getter();
      os_log_type_t v101 = static os_log_type_t.default.getter();
      int v102 = v101;
      if (os_log_type_enabled(v100, v101))
      {
        uint64_t v103 = swift_slowAlloc();
        uint64_t v147 = swift_slowAlloc();
        unint64_t v176 = (void *)v147;
        *(_DWORD *)uint64_t v103 = v134;
        os_log_t v146 = v100;
        uint64_t v174 = sub_100037004(0xD00000000000001DLL, v133, (uint64_t *)&v176);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v103 + 12) = 2160;
        uint64_t v174 = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v103 + 22) = 2081;
        uint64_t v104 = v142;
        Friend.handle.getter();
        uint64_t v105 = Handle.identifier.getter();
        int v145 = v102;
        unint64_t v107 = v106;
        v95(v104, v165);
        uint64_t v174 = sub_100037004(v105, v107, (uint64_t *)&v176);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v108 = *v154;
        (*v154)(v99, v89);
        *(_WORD *)(v103 + 32) = 2160;
        uint64_t v174 = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v103 + 42) = 2081;
        sub_1000207A4(&qword_1003F3310, 255, (void (*)(uint64_t))&type metadata accessor for Location);
        uint64_t v109 = v160;
        uint64_t v110 = v173;
        uint64_t v111 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v174 = sub_100037004(v111, v112, (uint64_t *)&v176);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v47 = *v156;
        (*v156)(v109, v110);
        os_log_t v113 = v146;
        _os_log_impl((void *)&_mh_execute_header, v146, (os_log_type_t)v145, "%{public}s mappedLocation:\nhandle: %{private,mask.hash}s\nlocation: %{private,mask.hash}s", (uint8_t *)v103, 0x34u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        unint64_t v46 = v164;
        v108(v164, v89);
      }
      else
      {

        uint64_t v47 = *v156;
        (*v156)(v97, v91);
        uint64_t v48 = *v154;
        (*v154)(v99, v89);
        v48(v46, v89);
      }
      uint64_t v43 = v157;
      BOOL v44 = v152;
LABEL_5:
      uint64_t v40 = &v168[v153];
      --v169;
      uint64_t v42 = (uint64_t)v158;
      if (!v169)
      {
        swift_bridgeObjectRelease();
        v47(v172, v173);
        return;
      }
    }
  }
  swift_bridgeObjectRelease();
  if (qword_1003EC408 != -1) {
LABEL_36:
  }
    swift_once();
  uint64_t v116 = type metadata accessor for Logger();
  sub_100044058(v116, (uint64_t)qword_10040C290);
  id v117 = (id)v33;
  uint64_t v118 = Logger.logObject.getter();
  os_log_type_t v119 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v118, v119))
  {
    uint64_t v126 = v3;
    uint64_t v120 = swift_slowAlloc();
    unint64_t v176 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v120 = 141558275;
    uint64_t v174 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v120 + 12) = 2081;
    uint64_t v173 = v120 + 14;
    id v121 = [v117 findMyId];
    uint64_t v122 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v124 = v123;

    uint64_t v174 = sub_100037004(v122, v124, (uint64_t *)&v176);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v118, v119, "Skipping unknown handle for ID: %{private,mask.hash}s", (uint8_t *)v120, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t sub_10027E898(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = (void *)a1;
  uint64_t v11 = a1;
  if (a2 >> 62) {
    goto LABEL_13;
  }
  uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = _CocoaArrayWrapper.endIndex.getter())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v7 = (a2 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a2 + 8 * i);
      uint64_t v4 = v7;
      uint64_t v8 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v10 = v7;
      sub_10027D5C8(&v11, &v10);
      if (v2)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        return (uint64_t)v4;
      }

      if (v8 == v5)
      {
        swift_bridgeObjectRelease();
        return v11;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v4;
}

BOOL sub_10027E9CC()
{
  return sub_10024D9E4();
}

char *sub_10027E9EC(uint64_t a1, uint64_t a2)
{
  uint64_t v33 = type metadata accessor for Handle();
  uint64_t v5 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  id v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for Friend();
  uint64_t v8 = __chkstk_darwin(v40);
  unint64_t v35 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v30 - v11;
  uint64_t result = (char *)_swiftEmptyArrayStorage;
  long long v41 = (char *)_swiftEmptyArrayStorage;
  uint64_t v14 = *(void *)(a1 + 16);
  if (v14)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    uint64_t v15 = v10 + 16;
    unint64_t v17 = (*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64);
    uint64_t v18 = *(void *)(v15 + 56);
    uint64_t v38 = v16;
    uint64_t v39 = v18;
    v30[1] = v2;
    unint64_t v31 = v17;
    uint64_t v19 = a1 + v17;
    uint64_t v34 = (void (**)(char *, char *, uint64_t))(v15 + 16);
    id v36 = (void (**)(char *, uint64_t))(v15 - 8);
    uint64_t v37 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v32 = a2;
    uint64_t v20 = v33;
    do
    {
      uint64_t v21 = v15;
      v38(v12, v19, v40);
      Friend.handle.getter();
      uint64_t v22 = Handle.serverID.getter();
      uint64_t v24 = v23;
      (*v37)(v7, v20);
      if (v24 && (char v25 = sub_100022CD8(v22, v24, a2), swift_bridgeObjectRelease(), (v25 & 1) != 0))
      {
        uint64_t v26 = *v34;
        (*v34)(v35, v12, v40);
        uint64_t v27 = v41;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10003BD78(0, *((void *)v27 + 2) + 1, 1);
          uint64_t v27 = v41;
        }
        unint64_t v29 = *((void *)v27 + 2);
        unint64_t v28 = *((void *)v27 + 3);
        if (v29 >= v28 >> 1)
        {
          sub_10003BD78(v28 > 1, v29 + 1, 1);
          uint64_t v27 = v41;
        }
        *((void *)v27 + 2) = v29 + 1;
        v26(&v27[v31 + v29 * v39], v35, v40);
        long long v41 = v27;
        a2 = v32;
        uint64_t v20 = v33;
      }
      else
      {
        (*v36)(v12, v40);
      }
      v19 += v39;
      --v14;
      uint64_t v15 = v21;
    }
    while (v14);
    return v41;
  }
  return result;
}

char *sub_10027ED14(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Handle();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for Friend();
  uint64_t v9 = __chkstk_darwin(v35);
  long long v41 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v30 - v12;
  uint64_t result = (char *)_swiftEmptyArrayStorage;
  uint64_t v42 = (char *)_swiftEmptyArrayStorage;
  uint64_t v15 = *(void *)(a1 + 16);
  if (v15)
  {
    unint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    uint64_t v16 = v11 + 16;
    unint64_t v18 = (*(unsigned __int8 *)(v16 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 64);
    uint64_t v19 = *(void *)(v16 + 56);
    uint64_t v39 = v16;
    uint64_t v40 = v19;
    unint64_t v32 = v18;
    uint64_t v33 = v5;
    uint64_t v20 = a1 + v18;
    uint64_t v37 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v38 = v17;
    uint64_t v30 = v2;
    unint64_t v31 = (void (**)(char *, uint64_t))(v16 - 8);
    id v36 = (void (**)(char *, char *, uint64_t))(v16 + 16);
    uint64_t v21 = v35;
    uint64_t v34 = a2;
    v17(v13, a1 + v18, v35);
    while (1)
    {
      Friend.handle.getter();
      uint64_t v23 = Handle.identifier.getter();
      uint64_t v25 = v24;
      (*v37)(v8, v5);
      LOBYTE(v23) = sub_100022CD8(v23, v25, a2);
      swift_bridgeObjectRelease();
      if (v23)
      {
        uint64_t v26 = *v36;
        (*v36)(v41, v13, v21);
        uint64_t v27 = v42;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10003BD78(0, *((void *)v27 + 2) + 1, 1);
          uint64_t v27 = v42;
        }
        uint64_t v22 = v40;
        unint64_t v29 = *((void *)v27 + 2);
        unint64_t v28 = *((void *)v27 + 3);
        if (v29 >= v28 >> 1)
        {
          sub_10003BD78(v28 > 1, v29 + 1, 1);
          uint64_t v22 = v40;
          uint64_t v27 = v42;
        }
        *((void *)v27 + 2) = v29 + 1;
        uint64_t v21 = v35;
        v26(&v27[v32 + v29 * v22], v41, v35);
        uint64_t v42 = v27;
        uint64_t v5 = v33;
        a2 = v34;
      }
      else
      {
        (*v31)(v13, v21);
        uint64_t v22 = v40;
      }
      v20 += v22;
      if (!--v15) {
        break;
      }
      v38(v13, v20, v21);
    }
    return v42;
  }
  return result;
}

uint64_t sub_10027F038()
{
  uint64_t v0 = sub_100363160();
  if (v1) {
    return 10;
  }
  uint64_t v2 = v0;
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_100044058(v3, (uint64_t)qword_10040C290);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 134217984;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Using maxNumberOfResubscriptionsAllowed from defaults: %ld", v6, 0xCu);
    swift_slowDealloc();
  }

  return v2;
}

uint64_t sub_10027F178()
{
  return sub_10027F194((void (*)(void))&_swift_bridgeObjectRelease, 56);
}

uint64_t sub_10027F194(void (*a1)(void), uint64_t a2)
{
  swift_unknownObjectRelease();
  swift_release();
  a1(*(void *)(v2 + 40));

  return _swift_deallocObject(v2, a2, 7);
}

uint64_t sub_10027F1F8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_10004A274;
  return sub_100270FE0(a1, v4, v5, v6, v7);
}

void sub_10027F2C0(uint64_t a1, uint64_t a2)
{
  uint64_t v48 = type metadata accessor for Handle();
  uint64_t v46 = *(void *)(v48 - 8);
  uint64_t v4 = __chkstk_darwin(v48);
  uint64_t v47 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v43 - v6;
  uint64_t v52 = type metadata accessor for Friend();
  uint64_t v8 = *(void *)(v52 - 8);
  uint64_t v9 = __chkstk_darwin(v52);
  uint64_t v51 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v43 - v11;
  uint64_t Priority = type metadata accessor for LocatePriority();
  uint64_t v14 = *(void *)(Priority - 8);
  __chkstk_darwin(Priority);
  uint64_t v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  sub_100044058(v17, (uint64_t)qword_10040C290);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a2, Priority);
  uint64_t v49 = v12;
  uint64_t v50 = v8;
  unint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v19 = v12;
  uint64_t v20 = v52;
  v18(v19, a1, v52);
  v18(v51, a1, v20);
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  int v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v24 = swift_slowAlloc();
    int v44 = v23;
    uint64_t v25 = v24;
    uint64_t v45 = swift_slowAlloc();
    uint64_t v54 = v45;
    *(_DWORD *)uint64_t v25 = 136447235;
    sub_1000207A4(&qword_1003F3330, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
    uint64_t v26 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v53 = sub_100037004(v26, v27, &v54);
    os_log_t v43 = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, Priority);
    *(_WORD *)(v25 + 12) = 2160;
    uint64_t v53 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v25 + 22) = 2081;
    unint64_t v28 = v49;
    Friend.handle.getter();
    uint64_t v29 = Handle.identifier.getter();
    unint64_t v31 = v30;
    uint64_t v46 = *(void *)(v46 + 8);
    uint64_t v32 = v48;
    ((void (*)(char *, uint64_t))v46)(v7, v48);
    uint64_t v53 = sub_100037004(v29, v31, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v50 = *(void *)(v50 + 8);
    ((void (*)(char *, uint64_t))v50)(v28, v52);
    *(_WORD *)(v25 + 32) = 2160;
    uint64_t v53 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v25 + 42) = 2081;
    uint64_t v33 = v47;
    uint64_t v34 = v51;
    Friend.handle.getter();
    uint64_t v35 = Handle.serverID.getter();
    unint64_t v37 = v36;
    ((void (*)(char *, uint64_t))v46)(v33, v32);
    if (v37) {
      uint64_t v38 = v35;
    }
    else {
      uint64_t v38 = 7104878;
    }
    if (v37) {
      unint64_t v39 = v37;
    }
    else {
      unint64_t v39 = 0xE300000000000000;
    }
    uint64_t v53 = sub_100037004(v38, v39, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v50)(v34, v52);
    os_log_t v40 = v43;
    _os_log_impl((void *)&_mh_execute_header, v43, (os_log_type_t)v44, "Unsubscribing %{public}s friend: %{private,mask.hash}s serverID: %{private,mask.hash}s", (uint8_t *)v25, 0x34u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, Priority);
    long long v41 = *(void (**)(char *, uint64_t))(v50 + 8);
    uint64_t v42 = v52;
    v41(v49, v52);
    v41(v51, v42);
  }
}

void sub_10027F8B4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Handle();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_100044058(v7, (uint64_t)qword_10040C290);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v20 = v1;
    uint64_t v11 = v10;
    unint64_t v18 = (void *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v22 = v19;
    *(_DWORD *)uint64_t v11 = 136446979;
    uint64_t v21 = sub_100037004(0x6164696C61766E69, 0xEC00000029286574, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 12) = 2160;
    uint64_t v21 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 22) = 2081;
    os_log_t v17 = v8;
    uint64_t v12 = Handle.identifier.getter();
    uint64_t v21 = sub_100037004(v12, v13, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    *(_WORD *)(v11 + 32) = 2114;
    swift_errorRetain();
    uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v21 = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unint64_t v18 = v14;
    swift_errorRelease();
    swift_errorRelease();
    os_log_t v15 = v17;
    _os_log_impl((void *)&_mh_execute_header, v17, v9, "%{public}s Failed to unsubscribe %{private,mask.hash}s.Error: %{public}@", (uint8_t *)v11, 0x2Au);
    sub_100044014(&qword_1003ECCC8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_errorRelease();
    swift_errorRelease();
  }
}

uint64_t sub_10027FC40(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6)
{
  unint64_t v86 = a5;
  uint64_t v81 = a6;
  uint64_t v84 = a4;
  uint64_t Priority = type metadata accessor for LocatePriority();
  uint64_t v83 = *(void *)(Priority - 8);
  uint64_t v9 = __chkstk_darwin(Priority);
  uint64_t v82 = (char *)v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  char v79 = (char *)v70 - v11;
  uint64_t v12 = sub_100044014(&qword_1003ECFB8);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = type metadata accessor for Handle();
  uint64_t v15 = *(void *)(v87 - 8);
  uint64_t v16 = __chkstk_darwin(v87);
  unint64_t v18 = (char *)v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v80 = (char *)v70 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  int v23 = (char *)v70 - v22;
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)v70 - v24;
  swift_beginAccess();
  uint64_t v26 = *a2;
  if (*(void *)(*a2 + 16) && (unint64_t v27 = sub_100025614(a1), (v28 & 1) != 0))
  {
    uint64_t v78 = a1;
    uint64_t v91 = *(void *)(*(void *)(v26 + 56) + 8 * v27);
    swift_endAccess();
    swift_bridgeObjectRetain();
    sub_1000DB6A4(a3, (uint64_t)v14);
    sub_10000A520((uint64_t)v14, &qword_1003ECFB8);
    uint64_t v29 = v91;
    if (*(void *)(v91 + 16))
    {
      uint64_t v30 = v87;
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, v78, v87);
      swift_beginAccess();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v89 = *a2;
      *a2 = 0x8000000000000000;
      sub_100143A10(v29, (uint64_t)v18, isUniquelyReferenced_nonNull_native);
      *a2 = v89;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v30);
      swift_endAccess();
      uint64_t v32 = v83;
      uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v83 + 16);
      uint64_t v34 = Priority;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v42 = Priority;
      if (qword_1003EC408 != -1) {
        swift_once();
      }
      uint64_t v43 = type metadata accessor for Logger();
      sub_100044058(v43, (uint64_t)qword_10040C290);
      uint64_t v44 = v83;
      uint64_t v45 = v79;
      uint64_t v77 = *(void (**)(char *, uint64_t, uint64_t))(v83 + 16);
      v77(v79, v84, v42);
      uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
      uint64_t v74 = v23;
      uint64_t v47 = v78;
      uint64_t v48 = v87;
      os_log_t v75 = v46;
      uint64_t v76 = v15 + 16;
      v46(v23, v78, v87);
      uint64_t v49 = Logger.logObject.getter();
      os_log_type_t v50 = static os_log_type_t.default.getter();
      int v73 = v50;
      if (os_log_type_enabled(v49, v50))
      {
        uint64_t v51 = swift_slowAlloc();
        uint64_t v72 = swift_slowAlloc();
        v90[0] = v72;
        *(_DWORD *)uint64_t v51 = 136446979;
        os_log_t v71 = v49;
        uint64_t v89 = sub_100037004(0xD000000000000036, 0x80000001003789D0, v90);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v51 + 12) = 2082;
        v70[1] = v51 + 14;
        sub_1000207A4(&qword_1003F3330, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
        uint64_t v52 = Priority;
        uint64_t v53 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v89 = sub_100037004(v53, v54, v90);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v52);
        *(_WORD *)(v51 + 22) = 2160;
        uint64_t v89 = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v51 + 32) = 2081;
        uint64_t v55 = v74;
        uint64_t v56 = Handle.identifier.getter();
        uint64_t v89 = sub_100037004(v56, v57, v90);
        uint64_t v48 = v87;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v55, v48);
        os_log_t v58 = v71;
        _os_log_impl((void *)&_mh_execute_header, v71, (os_log_type_t)v73, "%{public}s no more active session for %{public}s handle: %{private,mask.hash}s. Need to unsubscribe.", (uint8_t *)v51, 0x2Au);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v47 = v78;
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v44 + 8))(v45, Priority);
        (*(void (**)(char *, uint64_t))(v15 + 8))(v74, v48);
      }
      v75(v80, v47, v48);
      int v59 = v86;
      unint64_t v60 = *v86;
      char v61 = swift_isUniquelyReferenced_nonNull_native();
      *int v59 = v60;
      if ((v61 & 1) == 0)
      {
        unint64_t v60 = sub_10013DC78(0, *(void *)(v60 + 16) + 1, 1, v60);
        *unint64_t v86 = v60;
      }
      uint64_t v34 = Priority;
      unint64_t v63 = *(void *)(v60 + 16);
      unint64_t v62 = *(void *)(v60 + 24);
      if (v63 >= v62 >> 1)
      {
        unint64_t v60 = sub_10013DC78(v62 > 1, v63 + 1, 1, v60);
        *unint64_t v86 = v60;
      }
      *(void *)(v60 + 16) = v63 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v60+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(void *)(v15 + 72) * v63, v80, v48);
      swift_beginAccess();
      sub_100123540(v47);
      swift_endAccess();
      swift_bridgeObjectRelease();
      uint64_t v32 = v83;
      uint64_t v33 = v77;
    }
    uint64_t v64 = (uint64_t)v82;
    v33(v82, v84, v34);
    swift_beginAccess();
    uint64_t v65 = *a2;
    uint64_t v66 = a2[1];
    uint64_t v67 = a2[2];
    uint64_t v68 = (uint64_t *)(v81 + OBJC_IVAR____TtC13findmylocated15LocationService_subscriptions);
    swift_beginAccess();
    swift_retain();
    swift_bridgeObjectRetain();
    char v69 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v88 = *v68;
    *uint64_t v68 = 0x8000000000000000;
    sub_100024314(v65, v66, v67, v64, v69);
    *uint64_t v68 = v88;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v64, v34);
    return swift_endAccess();
  }
  else
  {
    swift_endAccess();
    uint64_t v35 = v87;
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v25, a1, v87);
    unint64_t v36 = v86;
    unint64_t v37 = *v86;
    char v38 = swift_isUniquelyReferenced_nonNull_native();
    *unint64_t v36 = v37;
    if ((v38 & 1) == 0)
    {
      unint64_t v37 = sub_10013DC78(0, *(void *)(v37 + 16) + 1, 1, v37);
      *unint64_t v86 = v37;
    }
    unint64_t v40 = *(void *)(v37 + 16);
    unint64_t v39 = *(void *)(v37 + 24);
    if (v40 >= v39 >> 1)
    {
      unint64_t v37 = sub_10013DC78(v39 > 1, v40 + 1, 1, v37);
      *unint64_t v86 = v37;
    }
    *(void *)(v37 + 16) = v40 + 1;
    return (*(uint64_t (**)(unint64_t, char *, uint64_t))(v15 + 32))(v37+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(void *)(v15 + 72) * v40, v25, v35);
  }
}

void sub_10028058C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  unint64_t v31 = a4;
  uint64_t v32 = a3;
  uint64_t v33 = a1;
  uint64_t v5 = type metadata accessor for Handle();
  uint64_t v35 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v34 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Priority = type metadata accessor for LocatePriority();
  uint64_t v8 = *(void *)(Priority - 8);
  __chkstk_darwin(Priority);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_100044058(v15, (uint64_t)qword_10040C290);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v32, Priority);
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v34, v33, v5);
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  int v18 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v19 = swift_slowAlloc();
    LODWORD(v32) = v18;
    uint64_t v20 = v19;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v37 = v33;
    *(_DWORD *)uint64_t v20 = 136315907;
    uint64_t v28 = v20 + 4;
    sub_1000207A4(&qword_1003ECF68, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    os_log_t v30 = v16;
    uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v36 = sub_100037004(v21, v22, &v37);
    uint64_t v29 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    *(_WORD *)(v20 + 12) = 2082;
    sub_1000207A4(&qword_1003F3330, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
    uint64_t v23 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v36 = sub_100037004(v23, v24, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, Priority);
    *(_WORD *)(v20 + 22) = 2160;
    uint64_t v36 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 32) = 2081;
    uint64_t v25 = v34;
    uint64_t v26 = Handle.identifier.getter();
    uint64_t v36 = sub_100037004(v26, v27, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v25, v29);
    uint64_t v16 = v30;
    _os_log_impl((void *)&_mh_execute_header, v30, (os_log_type_t)v32, v31, (uint8_t *)v20, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, Priority);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v5);
  }
}

void sub_100280AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v32 = a2;
  uint64_t v33 = a3;
  uint64_t Priority = type metadata accessor for LocatePriority();
  uint64_t v8 = *(void *)(Priority - 8);
  __chkstk_darwin(Priority);
  uint64_t v34 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Handle();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_100044058(v14, (uint64_t)qword_10040C290);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v34, a4, Priority);
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  int v17 = v16;
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v31 = v4;
    uint64_t v19 = v18;
    uint64_t v30 = swift_slowAlloc();
    uint64_t v36 = v30;
    *(_DWORD *)uint64_t v19 = 141558787;
    uint64_t v35 = 1752392040;
    int v29 = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v19 + 12) = 2081;
    uint64_t v28 = Priority;
    uint64_t v20 = Handle.identifier.getter();
    uint64_t v35 = sub_100037004(v20, v21, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    *(_WORD *)(v19 + 22) = 2082;
    uint64_t v22 = Duration.description.getter();
    uint64_t v35 = sub_100037004(v22, v23, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 32) = 2082;
    sub_1000207A4(&qword_1003F3330, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
    unint64_t v24 = v34;
    uint64_t v25 = v28;
    uint64_t v26 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v35 = sub_100037004(v26, v27, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v24, v25);
    _os_log_impl((void *)&_mh_execute_header, v15, (os_log_type_t)v29, "Scheduling resubscription for %{private,mask.hash}s after %{public}s priority: %{public}s", (uint8_t *)v19, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v34, Priority);
  }
}

uint64_t sub_100280EE8(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for LocatePriority() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = v1[4];
  uint64_t v10 = v1[5];
  uint64_t v11 = (uint64_t)v1 + v5;
  uint64_t v12 = *(void *)((char *)v1 + v6);
  uint64_t v13 = *(void *)((char *)v1 + v6 + 8);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  *uint64_t v14 = v2;
  v14[1] = sub_10004A274;
  return sub_10026E308(a1, v7, v8, v9, v10, v11, v12, v13);
}

unint64_t sub_100281044()
{
  unint64_t result = qword_1003F3358;
  if (!qword_1003F3358)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1003F3358);
  }
  return result;
}

uint64_t sub_100281088()
{
  uint64_t Priority = type metadata accessor for LocatePriority();
  uint64_t v2 = *(void *)(Priority - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, Priority);

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100281178()
{
  uint64_t Priority = type metadata accessor for LocatePriority();
  uint64_t v2 = *(void *)(Priority - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, Priority);
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10028123C()
{
  uint64_t v2 = *(void *)(type metadata accessor for LocatePriority() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = *(void *)(v0 + 24);
  uint64_t v7 = v0 + v3;
  uint64_t v8 = *(void *)(v0 + v4);
  uint64_t v9 = *(void *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v10;
  *uint64_t v10 = v1;
  v10[1] = sub_10004A274;
  return sub_10026E8DC(v5, v6, v7, v8, v9);
}

uint64_t sub_100281374()
{
  uint64_t Priority = type metadata accessor for LocatePriority();
  uint64_t v2 = *(void *)(Priority - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, Priority);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100281420(uint64_t a1, char a2)
{
  char v5 = a2 & 1;
  uint64_t v6 = *(void *)(type metadata accessor for LocatePriority() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v2 + v7;
  uint64_t v9 = *(void *)(v2 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  *uint64_t v10 = v3;
  v10[1] = sub_10004A274;
  return sub_10026FAD8(a1, v5, v8, v9);
}

uint64_t sub_10028154C()
{
  uint64_t Priority = type metadata accessor for LocatePriority();
  uint64_t v2 = *(void *)(Priority - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, Priority);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100281620()
{
  uint64_t v2 = *(void *)(type metadata accessor for LocatePriority() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v0 + 16);
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_10004A274;
  *(void *)(v4 + 32) = v3;
  *(_OWORD *)(v4 + 16) = v5;
  return _swift_task_switch(sub_100270A48, v5, 0);
}

uint64_t sub_10028170C(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRetain();
  }
  return result;
}

uint64_t sub_100281718(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_100281758(uint64_t result)
{
  if (result)
  {
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10028179C(unint64_t *a1, uint64_t a2, void *a3, uint64_t a4)
{
  v55[0] = a2;
  uint64_t v56 = a1;
  uint64_t v67 = sub_100044014(&qword_1003F3308);
  __chkstk_darwin(v67);
  uint64_t v7 = (char *)v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Location();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Handle();
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v74 = (char *)v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v13);
  uint64_t v18 = (char *)v55 - v17;
  uint64_t v57 = 0;
  int64_t v19 = 0;
  uint64_t v70 = v16;
  os_log_t v71 = a3;
  uint64_t v22 = a3[8];
  unint64_t v21 = a3 + 8;
  uint64_t v20 = v22;
  uint64_t v23 = 1 << *((unsigned char *)v21 - 32);
  uint64_t v24 = -1;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  unint64_t v25 = v24 & v20;
  char v61 = v21;
  int64_t v62 = (unint64_t)(v23 + 63) >> 6;
  uint64_t v79 = v16 + 16;
  uint64_t v65 = v9 + 16;
  uint64_t v66 = v9;
  uint64_t v78 = (uint64_t (**)(char *, uint64_t))(v16 + 8);
  uint64_t v64 = (void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v69 = a4;
  int v59 = v11;
  uint64_t v60 = v8;
  os_log_t v58 = v18;
LABEL_4:
  uint64_t v26 = v71;
  while (1)
  {
    if (v25)
    {
      uint64_t v72 = (v25 - 1) & v25;
      int64_t v73 = v19;
      unint64_t v27 = __clz(__rbit64(v25)) | (v19 << 6);
      goto LABEL_24;
    }
    int64_t v28 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      goto LABEL_38;
    }
    if (v28 >= v62) {
      return sub_100006B54(v56, v55[0], v57, v26);
    }
    unint64_t v29 = v61[v28];
    int64_t v30 = v19 + 1;
    if (!v29)
    {
      int64_t v30 = v19 + 2;
      if (v19 + 2 >= v62) {
        return sub_100006B54(v56, v55[0], v57, v26);
      }
      unint64_t v29 = v61[v30];
      if (!v29)
      {
        int64_t v30 = v19 + 3;
        if (v19 + 3 >= v62) {
          return sub_100006B54(v56, v55[0], v57, v26);
        }
        unint64_t v29 = v61[v30];
        if (!v29) {
          break;
        }
      }
    }
LABEL_23:
    uint64_t v72 = (v29 - 1) & v29;
    int64_t v73 = v30;
    unint64_t v27 = __clz(__rbit64(v29)) + (v30 << 6);
LABEL_24:
    uint64_t v32 = v26[6];
    uint64_t v75 = *(void *)(v70 + 72);
    uint64_t v33 = *(void (**)(char *, unint64_t, uint64_t))(v70 + 16);
    uint64_t v34 = v12;
    v33(v18, v32 + v75 * v27, v12);
    uint64_t v35 = v26[7];
    uint64_t v36 = *(void *)(v66 + 72);
    unint64_t v68 = v27;
    uint64_t v37 = *(void (**)(char *, unint64_t, uint64_t))(v66 + 16);
    v37(v11, v35 + v36 * v27, v8);
    uint64_t v77 = v33;
    v33(v7, (unint64_t)v18, v12);
    v37(&v7[*(int *)(v67 + 48)], (unint64_t)v11, v8);
    uint64_t v26 = v71;
    uint64_t v38 = v69;
    uint64_t v76 = *(void *)(v69 + 16);
    if (v76)
    {
      uint64_t v39 = v70;
      unint64_t v63 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
      unint64_t v40 = v74;
      v77(v74, v69 + v63, v12);
      sub_1000207A4(&qword_1003ECDA8, 255, (void (*)(uint64_t))&type metadata accessor for Handle);
      uint64_t v41 = v39;
      uint64_t v42 = v38;
      swift_bridgeObjectRetain();
      uint64_t v43 = v7;
      char v44 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v45 = *(void (**)(char *, uint64_t))(v41 + 8);
      uint64_t v12 = v34;
      v45(v40, v34);
      if (v44)
      {
LABEL_32:
        swift_bridgeObjectRelease();
        uint64_t v7 = v43;
        uint64_t v11 = v59;
        uint64_t v8 = v60;
        uint64_t v53 = v58;
        sub_10000A520((uint64_t)v7, &qword_1003F3308);
        (*v64)(v11, v8);
        uint64_t v18 = v53;
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v45)(v53, v12);
        *(unint64_t *)((char *)v56 + ((v68 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v68;
        BOOL v54 = __OFADD__(v57++, 1);
        unint64_t v25 = v72;
        int64_t v19 = v73;
        if (!v54) {
          goto LABEL_4;
        }
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
      if (v76 != 1)
      {
        uint64_t v46 = v42 + v75 + v63;
        uint64_t v47 = 1;
        while (1)
        {
          uint64_t v48 = v74;
          uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v77)(v74, v46, v12);
          uint64_t v49 = v47 + 1;
          if (__OFADD__(v47, 1)) {
            break;
          }
          char v50 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v51 = v48;
          char v52 = v50;
          uint64_t v12 = v34;
          v45(v51, v34);
          if (v52) {
            goto LABEL_32;
          }
          ++v47;
          v46 += v75;
          if (v49 == v76)
          {
            swift_bridgeObjectRelease();
            uint64_t v26 = v71;
            uint64_t v7 = v43;
            uint64_t v11 = v59;
            uint64_t v8 = v60;
            goto LABEL_6;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      swift_bridgeObjectRelease();
      uint64_t v11 = v59;
      uint64_t v8 = v60;
      uint64_t v26 = v71;
LABEL_6:
      uint64_t v18 = v58;
    }
    sub_10000A520((uint64_t)v7, &qword_1003F3308);
    (*v64)(v11, v8);
    uint64_t result = (*v78)(v18, v12);
    unint64_t v25 = v72;
    int64_t v19 = v73;
  }
  uint64_t v31 = v19 + 4;
  if (v19 + 4 >= v62) {
    return sub_100006B54(v56, v55[0], v57, v26);
  }
  unint64_t v29 = v61[v31];
  if (v29)
  {
    int64_t v30 = v19 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v30 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v30 >= v62) {
      return sub_100006B54(v56, v55[0], v57, v26);
    }
    unint64_t v29 = v61[v30];
    ++v31;
    if (v29) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_100281E38(uint64_t a1, uint64_t a2)
{
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v8 = 8 * v7;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_10028179C((unint64_t *)((char *)&v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, (void *)a1, a2);
    swift_bridgeObjectRelease();
    if (v2) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v8);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_10028179C((unint64_t *)v11, v7, (void *)a1, a2);
    swift_bridgeObjectRelease();
    swift_slowDealloc();
    swift_bridgeObjectRelease_n();
  }
  return v10;
}

void sub_100281FF4(uint64_t a1, uint64_t a2, const char *a3, int16x8_t a4)
{
  int64_t v28 = a3;
  int16x8_t v27 = a4;
  uint64_t v6 = type metadata accessor for Handle();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Priority = type metadata accessor for LocatePriority();
  uint64_t v11 = *(void *)(Priority - 8);
  __chkstk_darwin(Priority);
  uint64_t v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_100044058(v14, (uint64_t)qword_10040C290);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, Priority);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  __int32 v17 = v16;
  uint64_t v18 = v6;
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v30 = v26;
    *(_DWORD *)uint64_t v19 = vmovn_s16(v27).u32[0];
    v24[1] = v19 + 4;
    sub_1000207A4(&qword_1003F3330, 255, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
    v27.i32[0] = v17;
    uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v29 = sub_100037004(v20, v21, &v30);
    uint64_t v25 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, Priority);
    *(_WORD *)(v19 + 12) = 2160;
    uint64_t v29 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v19 + 22) = 2081;
    uint64_t v22 = Handle.identifier.getter();
    uint64_t v29 = sub_100037004(v22, v23, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v25);
    _os_log_impl((void *)&_mh_execute_header, v15, (os_log_type_t)v27.i8[0], v28, (uint8_t *)v19, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, Priority);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

void sub_1002823D4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Handle();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_100044058(v7, (uint64_t)qword_10040C290);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v17 = v14;
    *(_DWORD *)uint64_t v10 = 136446723;
    uint64_t v16 = sub_100037004(0x6E6F697461636F6CLL, 0xEF293A726F662873, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 12) = 2160;
    uint64_t v16 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 22) = 2081;
    uint64_t v15 = v1;
    sub_1000207A4(&qword_1003F00F0, 255, (void (*)(uint64_t))&type metadata accessor for Handle);
    uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v16 = sub_100037004(v11, v12, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "One-shot %{public}s pulled from daemon cache on disk\nfor handle: %{private,mask.hash}s", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_1002826EC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  os_log_type_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  void *v9 = v3;
  v9[1] = sub_10004A274;
  return sub_10025D65C(a1, a2, v6, v7, v8);
}

uint64_t sub_1002827B0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1002827F8(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10004A274;
  v7[14] = v5;
  v7[15] = v6;
  v7[12] = a1;
  v7[13] = v4;
  return _swift_task_switch(sub_10025E090, v4, 0);
}

uint64_t sub_1002828B8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002828F0(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10004A274;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1003F3590 + dword_1003F3590);
  return v6(a1, v4);
}

void sub_1002829A8(uint64_t a1)
{
  sub_10027527C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1002829B4()
{
  uint64_t v1 = sub_100044014(&qword_1003F33F0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100282A48(void *a1, uint64_t a2)
{
  sub_100044014(&qword_1003F33F0);

  return sub_100275450(a1, a2);
}

unint64_t sub_100282ACC()
{
  unint64_t result = qword_1003F33F8;
  if (!qword_1003F33F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1003F33F8);
  }
  return result;
}

uint64_t sub_100282B20()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100282C10(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10004A274;
  return sub_10025AC0C(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_100282D48(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_100282D94(uint64_t a1, uint64_t a2)
{
  return sub_10025A824(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 32), *(double *)(v2 + 24));
}

uint64_t sub_100282DA4(uint64_t a1)
{
  return sub_10027AC3C(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_100282DB4()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 64) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100282EBC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v10 = v1[7];
  uint64_t v11 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_100018CD0;
  return sub_10027AE64(a1, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_10028300C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DataManager.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100283070()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002830A8(uint64_t a1)
{
  return sub_10015F234(a1);
}

uint64_t sub_1002830B0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10004A274;
  return sub_10025051C();
}

uint64_t sub_10028314C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100044014(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002831B0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002831E8()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10004A274;
  return sub_10024F55C(v2);
}

uint64_t sub_100283280(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10004A274;
  return sub_10024F82C(a1);
}

uint64_t sub_100283318()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100283358()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10004A274;
  uint64_t v2 = (void *)swift_task_alloc();
  v1[2] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10004A274;
  return sub_100250860();
}

uint64_t sub_10028342C()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100283474(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_10004A274;
  return sub_1002505AC(a1, v4, v5, v7, v6);
}

uint64_t sub_100283534(uint64_t a1)
{
  return sub_10024E614(a1, v1);
}

uint64_t sub_10028353C(uint64_t a1)
{
  return sub_10024E7CC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100283544()
{
  return sub_100283650((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release, 40);
}

uint64_t sub_100283574()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 16);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_10004A274;
  *(_OWORD *)(v2 + 24) = v3;
  return _swift_task_switch(sub_10024E8A4, 0, 0);
}

uint64_t sub_100283620()
{
  return sub_100283650((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease, 32);
}

uint64_t sub_100283650(void (*a1)(void), void (*a2)(void), uint64_t a3)
{
  a1(*(void *)(v3 + 16));
  a2(*(void *)(v3 + 24));

  return _swift_deallocObject(v3, a3, 7);
}

uint64_t sub_1002836B4()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_10004A274;
  return sub_10024E6BC(v2, v3);
}

ValueMetadata *type metadata accessor for LocationService.Error()
{
  return &type metadata for LocationService.Error;
}

ValueMetadata *type metadata accessor for LocationServiceError()
{
  return &type metadata for LocationServiceError;
}

uint64_t _s13findmylocated20LocationServiceErrorV8CategoryOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s13findmylocated20LocationServiceErrorV8CategoryOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *unint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002838D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationServiceError.Category()
{
  return &type metadata for LocationServiceError.Category;
}

unint64_t sub_10028390C()
{
  unint64_t result = qword_1003F34E0;
  if (!qword_1003F34E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1003F34E0);
  }
  return result;
}

uint64_t sub_1002839A4()
{
  uint64_t v12 = v0;
  swift_release();
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100044058(v1, (uint64_t)qword_10040C290);
  swift_errorRetain();
  swift_errorRetain();
  int v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[20];
  if (v4)
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446723;
    v0[2] = sub_100037004(0xD00000000000001DLL, 0x8000000100378D40, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v6 + 12) = 2160;
    v0[3] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v6 + 22) = 2081;
    v0[4] = v5;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v7 = String.init<A>(describing:)();
    v0[5] = sub_100037004(v7, v8, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%{public}s error: %{private,mask.hash}s", (uint8_t *)v6, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9(0);
}

uint64_t sub_100283C5C(uint64_t a1)
{
  v2[14] = a1;
  v2[15] = v1;
  v2[16] = *v1;
  uint64_t v3 = type metadata accessor for Location();
  v2[17] = v3;
  v2[18] = *(void *)(v3 - 8);
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  sub_100044014(&qword_1003F3328);
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for ClientOrigin();
  v2[23] = v4;
  v2[24] = *(void *)(v4 - 8);
  v2[25] = swift_task_alloc();
  type metadata accessor for RequestOrigin();
  v2[26] = swift_task_alloc();
  sub_100044014(&qword_1003ECFF0);
  v2[27] = swift_task_alloc();
  uint64_t Priority = type metadata accessor for LocatePriority();
  v2[28] = Priority;
  v2[29] = *(void *)(Priority - 8);
  v2[30] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for LocationRequest();
  v2[31] = v6;
  v2[32] = *(void *)(v6 - 8);
  v2[33] = swift_task_alloc();
  v2[34] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Handle();
  v2[35] = v7;
  v2[36] = *(void *)(v7 - 8);
  v2[37] = swift_task_alloc();
  v2[38] = swift_task_alloc();
  v2[39] = swift_task_alloc();
  v2[40] = swift_task_alloc();
  v2[41] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Date();
  v2[42] = v8;
  v2[43] = *(void *)(v8 - 8);
  v2[44] = swift_task_alloc();
  return _swift_task_switch(sub_100284000, v1, 0);
}

uint64_t sub_100284000()
{
  uint64_t v22 = v0;
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[45] = sub_100044058(v1, (uint64_t)qword_10040C290);
  swift_bridgeObjectRetain_n();
  int v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446723;
    v0[11] = sub_100037004(0xD000000000000023, 0x8000000100378D10, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v4 + 12) = 2160;
    v0[12] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v4 + 22) = 2081;
    swift_bridgeObjectRetain();
    uint64_t v5 = Array.description.getter();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    v0[13] = sub_100037004(v5, v7, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%{public}s handles: %{private,mask.hash}s", (uint8_t *)v4, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v8 = *(void *)(v0[14] + 16);
  v0[46] = v8;
  if (v8)
  {
    uint64_t v10 = v0[43];
    uint64_t v9 = v0[44];
    uint64_t v11 = v0[42];
    v0[5] = _swiftEmptyDictionarySingleton;
    static Date.trustedNow.getter(v9);
    Date.timeIntervalSince1970.getter();
    v0[47] = v12;
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    uint64_t v13 = (void *)swift_task_alloc();
    v0[48] = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_100284488;
    uint64_t v14 = v0[14];
    return sub_100007B70(v14);
  }
  else
  {
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "start retrieve legacy location called with empty handles!", v18, 2u);
      swift_slowDealloc();
    }

    unint64_t v20 = sub_10004B2F8((uint64_t)_swiftEmptyArrayStorage);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(unint64_t))v0[1];
    return v19(v20);
  }
}

uint64_t sub_100284488(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[49] = v1;
  swift_task_dealloc();
  uint64_t v5 = v4[15];
  if (v1)
  {
    unint64_t v6 = sub_100285D00;
  }
  else
  {
    v4[50] = a1;
    unint64_t v6 = sub_1002845C4;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_1002845C4()
{
  uint64_t v1 = v0[50];
  uint64_t v2 = v0[47];
  uint64_t v3 = v0[16];
  uint64_t v4 = v0[14];
  uint64_t v5 = (void *)swift_task_alloc();
  v5[2] = v4;
  v5[3] = v2;
  v5[4] = v0 + 5;
  v5[5] = v3;
  sub_100288090(v1, (void (*)(char *, char *))sub_100287EF0);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v6 = v0[36];
  unint64_t v7 = (char *)_swiftEmptyArrayStorage;
  uint64_t v8 = *(void (**)(void, unint64_t, void))(v6 + 16);
  v6 += 16;
  uint64_t v9 = *(void *)(v6 + 56);
  unint64_t v33 = (*(unsigned __int8 *)(v6 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 64);
  uint64_t v34 = v8;
  unint64_t v10 = v0[14] + v33;
  uint64_t v32 = (void (**)(void, void))(v6 - 8);
  uint64_t v37 = (char *)_swiftEmptyArrayStorage;
  uint64_t v11 = (void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  swift_bridgeObjectRetain();
  uint64_t v12 = 0;
  do
  {
    v34(v0[41], v10, v0[35]);
    if (*(void *)(v0[5] + 16)
      && (uint64_t v13 = v0[41],
          swift_bridgeObjectRetain(),
          sub_100025614(v13),
          LOBYTE(v13) = v14,
          swift_bridgeObjectRelease(),
          (v13 & 1) != 0))
    {
      (*v32)(v0[41], v0[35]);
    }
    else
    {
      uint64_t v15 = *v11;
      (*v11)((char *)v0[40], v0[41], v0[35]);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100020D44(0, *((void *)v7 + 2) + 1, 1);
        unint64_t v7 = v37;
      }
      unint64_t v17 = *((void *)v7 + 2);
      unint64_t v16 = *((void *)v7 + 3);
      if (v17 >= v16 >> 1)
      {
        sub_100020D44(v16 > 1, v17 + 1, 1);
        unint64_t v7 = v37;
      }
      uint64_t v18 = v0[40];
      uint64_t v19 = v0[35];
      *((void *)v7 + 2) = v17 + 1;
      v15(&v7[v33 + v17 * v9], v18, v19);
      uint64_t v37 = v7;
    }
    ++v12;
    v10 += v9;
  }
  while (v12 != v0[46]);
  swift_bridgeObjectRelease();
  if (*((void *)v7 + 2))
  {
    uint64_t v20 = v0[27];
    uint64_t v21 = v0[25];
    uint64_t v22 = v0[24];
    uint64_t v35 = v0[23];
    (*(void (**)(void, void, void))(v0[29] + 104))(v0[30], enum case for LocatePriority.live(_:), v0[28]);
    uint64_t v23 = enum case for LegacyRefreshCommandReason.deepLocate(_:);
    uint64_t refreshed = type metadata accessor for LegacyRefreshCommandReason();
    uint64_t v25 = *(void *)(refreshed - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 104))(v20, v23, refreshed);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v20, 0, 1, refreshed);
    (*(void (**)(uint64_t, void, uint64_t))(v22 + 104))(v21, enum case for ClientOrigin.other(_:), v35);
    RequestOrigin.init(_:)();
    LocationRequest.init(priority:origin:toHandles:reason:startRefreshingLocation:isCached:)();
    uint64_t v26 = (void *)swift_task_alloc();
    v0[51] = v26;
    *uint64_t v26 = v0;
    v26[1] = sub_100284B04;
    return daemon.getter();
  }
  else
  {
    swift_release();
    int16x8_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 134217984;
      v0[8] = 0x404E000000000000;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "All cached legacy locations < %fs. Just return cached loactions", v29, 0xCu);
      swift_slowDealloc();
    }

    uint64_t v36 = v0[5];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v30 = (uint64_t (*)(uint64_t))v0[1];
    return v30(v36);
  }
}

uint64_t sub_100284B04(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v9 = *v1;
  *(void *)(v2 + 416) = a1;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 424) = v3;
  uint64_t v4 = type metadata accessor for Daemon();
  uint64_t v5 = type metadata accessor for CommandManager();
  uint64_t v6 = sub_10004742C(&qword_1003ECCA8, (void (*)(uint64_t))&type metadata accessor for Daemon);
  uint64_t v7 = sub_10004742C(&qword_1003ECCA0, (void (*)(uint64_t))type metadata accessor for CommandManager);
  *uint64_t v3 = v9;
  v3[1] = sub_100284CE0;
  return ActorServiceDaemon.getService<A>()(v4, v5, v6, v7);
}

uint64_t sub_100284CE0(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[54] = a1;
  v4[55] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[15];
    swift_release();
    uint64_t v6 = sub_100286348;
    uint64_t v7 = v5;
  }
  else
  {
    swift_release();
    uint64_t v6 = sub_100284E34;
    uint64_t v7 = a1;
  }
  return _swift_task_switch(v6, v7, 0);
}

uint64_t sub_100284E34()
{
  uint64_t v1 = v0[54];
  (*(void (**)(void, void, void))(v0[32] + 16))(v0[33], v0[34], v0[31]);
  uint64_t v2 = (unint64_t *)(v1 + OBJC_IVAR____TtC13findmylocated14CommandManager_coalescedCommands);
  swift_beginAccess();
  unint64_t v3 = *v2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v2 = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v3 = sub_10004B0EC(0, *(void *)(v3 + 16) + 1, 1, v3);
    *uint64_t v2 = v3;
  }
  unint64_t v6 = *(void *)(v3 + 16);
  unint64_t v5 = *(void *)(v3 + 24);
  if (v6 >= v5 >> 1)
  {
    unint64_t v3 = sub_10004B0EC(v5 > 1, v6 + 1, 1, v3);
    *uint64_t v2 = v3;
  }
  uint64_t v8 = v0[32];
  uint64_t v7 = v0[33];
  uint64_t v9 = v0[31];
  *(void *)(v3 + 16) = v6 + 1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v8 + 32))(v3+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v6, v7, v9);
  swift_endAccess();
  uint64_t v10 = (void *)swift_task_alloc();
  v0[56] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_100284FCC;
  return sub_100020D64(1, 0, 0);
}

uint64_t sub_100284FCC(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 456) = a1;
  *(void *)(v4 + 464) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 120);
  if (v1) {
    unint64_t v6 = sub_100285100;
  }
  else {
    unint64_t v6 = sub_100285278;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_100285100()
{
  uint64_t v1 = v0[34];
  uint64_t v2 = v0[31];
  uint64_t v3 = v0[32];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

void sub_100285278()
{
  uint64_t v96 = v0;
  swift_bridgeObjectRetain_n();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    v0[6] = 1752392040;
    uint64_t v95 = (void *)v4;
    *(_DWORD *)uint64_t v3 = 141558275;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v3 + 12) = 2081;
    sub_10004742C(&qword_1003ECDA0, (void (*)(uint64_t))&type metadata accessor for Handle);
    swift_bridgeObjectRetain();
    uint64_t v5 = Dictionary.description.getter();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    v0[7] = sub_100037004(v5, v7, (uint64_t *)&v95);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Server returned legacy locations < %{private,mask.hash}s", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  int64_t v86 = 0;
  uint64_t v8 = v0[57];
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v80 = v8 + 64;
  uint64_t v82 = v0[46];
  uint64_t v83 = v8;
  uint64_t v10 = -1;
  uint64_t v11 = -1 << *(unsigned char *)(v83 + 32);
  uint64_t v12 = v0[18];
  if (-v11 < 64) {
    uint64_t v10 = ~(-1 << -(char)v11);
  }
  unint64_t v13 = v10 & v9;
  uint64_t v89 = v0[18];
  uint64_t v90 = (void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  uint64_t v88 = (void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32);
  uint64_t v84 = (void (**)(void, void))(v12 + 8);
  int64_t v81 = (unint64_t)(63 - v11) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v17 = __clz(__rbit64(v13));
      uint64_t v18 = (v13 - 1) & v13;
      unint64_t v19 = v17 | (v86 << 6);
LABEL_11:
      uint64_t v20 = v0[21];
      uint64_t v21 = v0[17];
      (*(void (**)(uint64_t, unint64_t, void))(v0[36] + 16))(v20, *(void *)(v83 + 48) + *(void *)(v0[36] + 72) * v19, v0[35]);
      unint64_t v22 = *(void *)(v83 + 56) + *(void *)(v89 + 72) * v19;
      uint64_t v23 = sub_100044014(&qword_1003F3308);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v89 + 16))(v20 + *(int *)(v23 + 48), v22, v21);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v20, 0, 1, v23);
      goto LABEL_30;
    }
    int64_t v24 = v86 + 1;
    if (__OFADD__(v86, 1)) {
      goto LABEL_60;
    }
    if (v24 < v81)
    {
      unint64_t v25 = *(void *)(v80 + 8 * v24);
      if (v25) {
        goto LABEL_15;
      }
      int64_t v26 = v86 + 2;
      ++v86;
      if (v24 + 1 < v81)
      {
        unint64_t v25 = *(void *)(v80 + 8 * v26);
        if (v25) {
          goto LABEL_18;
        }
        int64_t v86 = v24 + 1;
        if (v24 + 2 < v81)
        {
          unint64_t v25 = *(void *)(v80 + 8 * (v24 + 2));
          if (v25)
          {
            v24 += 2;
LABEL_15:
            uint64_t v18 = (v25 - 1) & v25;
            unint64_t v19 = __clz(__rbit64(v25)) + (v24 << 6);
            int64_t v86 = v24;
            goto LABEL_11;
          }
          int64_t v26 = v24 + 3;
          int64_t v86 = v24 + 2;
          if (v24 + 3 < v81)
          {
            unint64_t v25 = *(void *)(v80 + 8 * v26);
            if (!v25)
            {
              while (1)
              {
                int64_t v24 = v26 + 1;
                if (__OFADD__(v26, 1)) {
                  goto LABEL_62;
                }
                if (v24 >= v81)
                {
                  int64_t v86 = v81 - 1;
                  goto LABEL_29;
                }
                unint64_t v25 = *(void *)(v80 + 8 * v24);
                ++v26;
                if (v25) {
                  goto LABEL_15;
                }
              }
            }
LABEL_18:
            int64_t v24 = v26;
            goto LABEL_15;
          }
        }
      }
    }
LABEL_29:
    uint64_t v27 = v0[21];
    uint64_t v28 = sub_100044014(&qword_1003F3308);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 1, 1, v28);
    uint64_t v18 = 0;
LABEL_30:
    uint64_t v29 = v0[22];
    sub_100287E88(v0[21], v29);
    uint64_t v30 = sub_100044014(&qword_1003F3308);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v29, 1, v30) == 1) {
      break;
    }
    unint64_t v91 = v18;
    uint64_t v31 = v0[38];
    uint64_t v33 = v0[35];
    uint64_t v32 = v0[36];
    uint64_t v34 = v0[20];
    uint64_t v35 = v0[17];
    uint64_t v36 = v0[14];
    uint64_t v37 = v0[22] + *(int *)(v30 + 48);
    (*(void (**)(void))(v32 + 32))(v0[39]);
    uint64_t v87 = *v88;
    (*v88)(v34, v37, v35);
    unint64_t v38 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
    uint64_t v92 = *(void (**)(uint64_t, unint64_t, uint64_t))(v32 + 16);
    v92(v31, v36 + v38, v33);
    sub_10004742C(&qword_1003ECDA8, (void (*)(uint64_t))&type metadata accessor for Handle);
    swift_bridgeObjectRetain();
    char v39 = dispatch thunk of static Equatable.== infix(_:_:)();
    BOOL v93 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
    v93(v31, v33);
    if ((v39 & 1) == 0)
    {
      if (v82 == 1) {
        goto LABEL_7;
      }
      uint64_t v40 = v0[38];
      uint64_t v41 = v0[35];
      uint64_t v85 = *(void *)(v0[36] + 72);
      v92(v40, v36 + v38 + v85, v41);
      char v42 = dispatch thunk of static Equatable.== infix(_:_:)();
      v93(v40, v41);
      if ((v42 & 1) == 0)
      {
        if (v82 != 2)
        {
          unint64_t v70 = v36 + v38 + 2 * v85;
          uint64_t v71 = 2;
          while (1)
          {
            v92(v0[38], v70, v0[35]);
            uint64_t v72 = v71 + 1;
            if (__OFADD__(v71, 1)) {
              break;
            }
            uint64_t v73 = v0[38];
            uint64_t v74 = v0[35];
            char v75 = dispatch thunk of static Equatable.== infix(_:_:)();
            v93(v73, v74);
            if (v75) {
              goto LABEL_34;
            }
            ++v71;
            v70 += v85;
            if (v72 == v0[46]) {
              goto LABEL_7;
            }
          }
          __break(1u);
LABEL_59:
          __break(1u);
LABEL_60:
          __break(1u);
LABEL_61:
          __break(1u);
LABEL_62:
          __break(1u);
          return;
        }
LABEL_7:
        swift_bridgeObjectRelease();
        unint64_t v13 = v91;
        char v14 = v93;
        goto LABEL_8;
      }
    }
LABEL_34:
    unint64_t v43 = v0[39];
    uint64_t v44 = v0[37];
    uint64_t v45 = v0[35];
    uint64_t v47 = v0[19];
    uint64_t v46 = v0[20];
    uint64_t v48 = v0[17];
    swift_bridgeObjectRelease();
    v92(v44, v43, v45);
    (*v90)(v47, v46, v48);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v95 = (void *)v0[5];
    char v50 = v95;
    v0[5] = 0x8000000000000000;
    unint64_t v52 = sub_100025614(v44);
    uint64_t v53 = v50[2];
    BOOL v54 = (v51 & 1) == 0;
    uint64_t v55 = v53 + v54;
    if (__OFADD__(v53, v54)) {
      goto LABEL_59;
    }
    char v56 = v51;
    if (v50[3] >= v55)
    {
      unint64_t v13 = v91;
      if (isUniquelyReferenced_nonNull_native)
      {
        if ((v51 & 1) == 0) {
          goto LABEL_38;
        }
      }
      else
      {
        sub_10012682C();
        char v50 = v95;
        if ((v56 & 1) == 0) {
          goto LABEL_38;
        }
      }
    }
    else
    {
      uint64_t v57 = v0[37];
      sub_10013FDD8(v55, isUniquelyReferenced_nonNull_native);
      char v50 = v95;
      unint64_t v58 = sub_100025614(v57);
      unint64_t v13 = v91;
      if ((v56 & 1) != (v59 & 1))
      {
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        return;
      }
      unint64_t v52 = v58;
      if ((v56 & 1) == 0)
      {
LABEL_38:
        uint64_t v61 = v0[36];
        unint64_t v60 = v0[37];
        uint64_t v62 = v0[35];
        uint64_t v63 = v0[19];
        uint64_t v64 = v0[17];
        v50[(v52 >> 6) + 8] |= 1 << v52;
        v92(v50[6] + *(void *)(v61 + 72) * v52, v60, v62);
        v87(v50[7] + *(void *)(v89 + 72) * v52, v63, v64);
        uint64_t v65 = v50[2];
        BOOL v66 = __OFADD__(v65, 1);
        uint64_t v67 = v65 + 1;
        if (v66) {
          goto LABEL_61;
        }
        v50[2] = v67;
        goto LABEL_43;
      }
    }
    (*(void (**)(unint64_t, void, void))(v89 + 40))(v50[7] + *(void *)(v89 + 72) * v52, v0[19], v0[17]);
LABEL_43:
    uint64_t v68 = v0[37];
    uint64_t v69 = v0[35];
    v0[5] = v50;
    swift_bridgeObjectRelease();
    char v14 = v93;
    v93(v68, v69);
LABEL_8:
    uint64_t v15 = v0[39];
    uint64_t v16 = v0[35];
    (*v84)(v0[20], v0[17]);
    v14(v15, v16);
  }
  uint64_t v76 = v0[34];
  uint64_t v77 = v0[31];
  uint64_t v78 = v0[32];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v76, v77);
  uint64_t v94 = v0[5];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v79 = (void (*)(uint64_t))v0[1];
  v79(v94);
}

uint64_t sub_100285D00()
{
  uint64_t v40 = v0;
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[49];
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (char *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    char v39 = v5;
    v0[9] = v3;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v6 = String.init<A>(describing:)();
    v0[10] = sub_100037004(v6, v7, (uint64_t *)&v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Fetch cached server location failed with error: %{public}s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v8 = v0[36];
  uint64_t v9 = (char *)_swiftEmptyArrayStorage;
  uint64_t v10 = *(void (**)(void, unint64_t, void))(v8 + 16);
  v8 += 16;
  uint64_t v11 = *(void *)(v8 + 56);
  unint64_t v35 = (*(unsigned __int8 *)(v8 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64);
  uint64_t v36 = v10;
  unint64_t v12 = v0[14] + v35;
  uint64_t v34 = (void (**)(void, void))(v8 - 8);
  char v39 = (char *)_swiftEmptyArrayStorage;
  unint64_t v13 = (void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  swift_bridgeObjectRetain();
  uint64_t v14 = 0;
  do
  {
    v36(v0[41], v12, v0[35]);
    if (*(void *)(v0[5] + 16)
      && (uint64_t v15 = v0[41],
          swift_bridgeObjectRetain(),
          sub_100025614(v15),
          LOBYTE(v15) = v16,
          swift_bridgeObjectRelease(),
          (v15 & 1) != 0))
    {
      (*v34)(v0[41], v0[35]);
    }
    else
    {
      unint64_t v17 = *v13;
      (*v13)((char *)v0[40], v0[41], v0[35]);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100020D44(0, *((void *)v9 + 2) + 1, 1);
        uint64_t v9 = v39;
      }
      unint64_t v19 = *((void *)v9 + 2);
      unint64_t v18 = *((void *)v9 + 3);
      if (v19 >= v18 >> 1)
      {
        sub_100020D44(v18 > 1, v19 + 1, 1);
        uint64_t v9 = v39;
      }
      uint64_t v20 = v0[40];
      uint64_t v21 = v0[35];
      *((void *)v9 + 2) = v19 + 1;
      v17(&v9[v35 + v19 * v11], v20, v21);
      char v39 = v9;
    }
    ++v14;
    v12 += v11;
  }
  while (v14 != v0[46]);
  swift_bridgeObjectRelease();
  if (*((void *)v9 + 2))
  {
    uint64_t v22 = v0[27];
    uint64_t v23 = v0[25];
    uint64_t v24 = v0[24];
    uint64_t v37 = v0[23];
    (*(void (**)(void, void, void))(v0[29] + 104))(v0[30], enum case for LocatePriority.live(_:), v0[28]);
    uint64_t v25 = enum case for LegacyRefreshCommandReason.deepLocate(_:);
    uint64_t refreshed = type metadata accessor for LegacyRefreshCommandReason();
    uint64_t v27 = *(void *)(refreshed - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 104))(v22, v25, refreshed);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v22, 0, 1, refreshed);
    (*(void (**)(uint64_t, void, uint64_t))(v24 + 104))(v23, enum case for ClientOrigin.other(_:), v37);
    RequestOrigin.init(_:)();
    LocationRequest.init(priority:origin:toHandles:reason:startRefreshingLocation:isCached:)();
    uint64_t v28 = (void *)swift_task_alloc();
    v0[51] = v28;
    *uint64_t v28 = v0;
    v28[1] = sub_100284B04;
    return daemon.getter();
  }
  else
  {
    swift_release();
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 134217984;
      v0[8] = 0x404E000000000000;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "All cached legacy locations < %fs. Just return cached loactions", v31, 0xCu);
      swift_slowDealloc();
    }

    uint64_t v38 = v0[5];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v32 = (uint64_t (*)(uint64_t))v0[1];
    return v32(v38);
  }
}

uint64_t sub_100286348()
{
  (*(void (**)(void, void))(v0[32] + 8))(v0[34], v0[31]);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1002864B0()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100286520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v10 = sub_100044014(&qword_1003EFE98);
  __chkstk_darwin(v10 - 8);
  unint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Handle();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t result = __chkstk_darwin(v15);
  unint64_t v19 = (char *)&v37 - v17;
  uint64_t v20 = *(void *)(a3 + 16);
  if (v20)
  {
    uint64_t v43 = a4;
    uint64_t v44 = v18;
    uint64_t v45 = v12;
    uint64_t v42 = a2;
    unint64_t v39 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    uint64_t v21 = a3 + v39;
    uint64_t v46 = *(void (**)(char *, unint64_t, uint64_t))(v14 + 16);
    v46((char *)&v37 - v17, a3 + v39, v13);
    uint64_t v22 = sub_10004742C(&qword_1003ECDA8, (void (*)(uint64_t))&type metadata accessor for Handle);
    swift_bridgeObjectRetain();
    uint64_t v47 = v22;
    uint64_t v48 = a1;
    char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v24 = *(void (**)(char *, uint64_t))(v14 + 8);
    v24(v19, v13);
    if (v23)
    {
      swift_bridgeObjectRelease();
      uint64_t v25 = v42;
      int64_t v26 = (void (*)(uint64_t, uint64_t, uint64_t))v46;
      goto LABEL_7;
    }
    uint64_t v38 = a3;
    if (v20 == 1) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v41 = *(void *)(v14 + 72);
    int64_t v26 = (void (*)(uint64_t, uint64_t, uint64_t))v46;
    v46(v19, v21 + v41, v13);
    char v27 = dispatch thunk of static Equatable.== infix(_:_:)();
    v24(v19, v13);
    if (v27)
    {
LABEL_6:
      swift_bridgeObjectRelease();
      uint64_t v25 = v42;
LABEL_7:
      uint64_t result = Location.timestamp.getter();
      uint64_t v30 = v44;
      uint64_t v29 = (uint64_t)v45;
      if (a5 - v28 < 60.0)
      {
        v26(v44, v48, v13);
        uint64_t v31 = type metadata accessor for Location();
        uint64_t v32 = *(void *)(v31 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v29, v25, v31);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
        return sub_10012BDCC(v29, v30);
      }
      return result;
    }
    if (v20 == 2) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v40 = v24;
    uint64_t v33 = v38 + v39 + 2 * v41;
    for (uint64_t i = 2; ; ++i)
    {
      uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v26)(v19, v33, v13);
      uint64_t v35 = i + 1;
      if (__OFADD__(i, 1)) {
        break;
      }
      char v36 = dispatch thunk of static Equatable.== infix(_:_:)();
      v40(v19, v13);
      if (v36) {
        goto LABEL_6;
      }
      v33 += v41;
      if (v35 == v20) {
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100286904(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 256) = a1;
  *(void *)(v4 + 264) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 72);
  if (v1) {
    uint64_t v6 = sub_100286E28;
  }
  else {
    uint64_t v6 = sub_100286A38;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_100286A38()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v19 = OBJC_IVAR____TtC13findmylocated15LocationService_legacyLocationTask;
  uint64_t v20 = v1;
  if (*(void *)(v1 + OBJC_IVAR____TtC13findmylocated15LocationService_legacyLocationTask))
  {
    swift_retain();
    Task.cancel()();
    swift_release();
    uint64_t v1 = *(void *)(v0 + 72);
  }
  uint64_t v2 = *(unsigned __int8 *)(v0 + 272);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v17 = *(void *)(v0 + 120);
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 192);
  uint64_t v5 = *(void *)(v0 + 104);
  uint64_t v6 = *(void *)(v0 + 88);
  uint64_t v15 = *(void *)(v0 + 80);
  uint64_t v16 = *(void *)(v0 + 184);
  uint64_t v7 = *(void *)(v0 + 64);
  (*(void (**)(void))(v0 + 152))();
  v3(v4, v7, v6);
  uint64_t v8 = (v2 + 32) & ~v2;
  unint64_t v9 = (v8 + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v1;
  *(void *)(v10 + 24) = v16;
  v18(v10 + v8, v4, v6);
  *(void *)(v10 + v9) = v1;
  *(void *)(v10 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8)) = v15;
  swift_retain_n();
  uint64_t v11 = sub_10010405C(v17, (uint64_t)&unk_1003F3520, v10);
  swift_release();
  *(void *)(v20 + v19) = v11;
  swift_release();
  uint64_t v12 = *(void *)(v0 + 256);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v13(v12);
}

uint64_t sub_100286C14()
{
  uint64_t v11 = v0;
  uint64_t v1 = v0[30];
  swift_release();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 141558275;
    v0[3] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v4 + 12) = 2081;
    v0[4] = v1;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v5 = String.init<A>(describing:)();
    v0[5] = sub_100037004(v5, v6, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "legacyRefreshLocation call failed: %{private,mask.hash}s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  unint64_t v7 = sub_10004B2F8((uint64_t)_swiftEmptyArrayStorage);
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(unint64_t))v0[1];
  return v8(v7);
}

uint64_t sub_100286E28()
{
  uint64_t v11 = v0;
  uint64_t v1 = v0[33];
  swift_release();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 141558275;
    v0[3] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v4 + 12) = 2081;
    v0[4] = v1;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v5 = String.init<A>(describing:)();
    v0[5] = sub_100037004(v5, v6, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "legacyRefreshLocation call failed: %{private,mask.hash}s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  unint64_t v7 = sub_10004B2F8((uint64_t)_swiftEmptyArrayStorage);
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(unint64_t))v0[1];
  return v8(v7);
}

uint64_t sub_10028703C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return _swift_task_switch(sub_10028705C, a4, 0);
}

uint64_t sub_10028705C()
{
  uint64_t v1 = LocationRequest.toHandles.getter();
  *(void *)(v0 + 32) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100287100;
  return sub_100007B70(v1);
}

uint64_t sub_100287100(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 48) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 16);
    unint64_t v6 = sub_1002872B4;
  }
  else
  {
    uint64_t v7 = *(void *)(v4 + 16);
    swift_bridgeObjectRelease();
    *(void *)(v4 + 56) = a1;
    unint64_t v6 = sub_100287240;
    uint64_t v5 = v7;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_100287240()
{
  sub_100275580(*(void *)(v0 + 56));
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002872B4()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100287318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  uint64_t v7 = type metadata accessor for LocationRequest();
  v5[7] = v7;
  v5[8] = *(void *)(v7 - 8);
  v5[9] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for ContinuousClock();
  v5[10] = v8;
  v5[11] = *(void *)(v8 - 8);
  v5[12] = swift_task_alloc();
  return _swift_task_switch(sub_100287438, a5, 0);
}

uint64_t sub_100287438()
{
  static Task<>.checkCancellation()();
  ContinuousClock.init()();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1003F0B58 + dword_1003F0B58);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100287700;
  return v3(0x8155A43676E00000, 6, 0, 0, 1);
}

uint64_t sub_100287700()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  uint64_t v3 = v2[12];
  uint64_t v4 = v2[11];
  uint64_t v5 = v2[10];
  uint64_t v6 = v2[6];
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if (v0) {
    uint64_t v7 = sub_10028787C;
  }
  else {
    uint64_t v7 = sub_100287A8C;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_10028787C()
{
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100044058(v1, (uint64_t)qword_10040C290);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138543362;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "legacyLocationTask error: %{public}@", v4, 0xCu);
    sub_100044014(&qword_1003ECCC8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_100287A8C()
{
  uint64_t v19 = v0;
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v4 = v0[7];
  uint64_t v5 = type metadata accessor for Logger();
  sub_100044058(v5, (uint64_t)qword_10040C290);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v10 = v0[8];
  uint64_t v9 = v0[9];
  uint64_t v11 = v0[7];
  if (v8)
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 141558275;
    v0[3] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v12 + 12) = 2081;
    sub_10004742C(&qword_1003ED020, (void (*)(uint64_t))&type metadata accessor for LocationRequest);
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[4] = sub_100037004(v13, v14, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Schedule next refresh call request: %{private,mask.hash}s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v10 + 8))(v0[9], v0[7]);
  }

  uint64_t v15 = (void *)swift_task_alloc();
  v0[15] = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_100287D48;
  uint64_t v16 = v0[5];
  return sub_10000C2A4(v16);
}

uint64_t sub_100287D48()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100287E88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100044014(&qword_1003F3328);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100287EF0(uint64_t a1, uint64_t a2)
{
  return sub_100286520(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 32), *(double *)(v2 + 24));
}

uint64_t sub_100287F00(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 1;
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return 1;
  }
  uint64_t v22 = a1 + 32;
  uint64_t v4 = a2 + 56;
  swift_bridgeObjectRetain();
  for (uint64_t i = 0; i != v2; ++i)
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v6 = (uint64_t *)(v22 + 16 * i);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      Swift::Int v9 = Hasher._finalize()();
      uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v11 = v9 & ~v10;
      if ((*(void *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
      {
        uint64_t v12 = *(void *)(a2 + 48);
        uint64_t v13 = (void *)(v12 + 16 * v11);
        BOOL v14 = *v13 == v8 && v13[1] == v7;
        if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
LABEL_22:
          swift_bridgeObjectRelease();
          uint64_t v20 = 0;
          goto LABEL_23;
        }
        uint64_t v15 = ~v10;
        for (unint64_t j = v11 + 1; ; unint64_t j = v17 + 1)
        {
          uint64_t v17 = j & v15;
          if (((*(void *)(v4 + (((j & v15) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (j & v15)) & 1) == 0) {
            break;
          }
          uint64_t v18 = (void *)(v12 + 16 * v17);
          BOOL v19 = *v18 == v8 && v18[1] == v7;
          if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
            goto LABEL_22;
          }
        }
      }
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v20 = 1;
LABEL_23:
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_100288090(uint64_t a1, void (*a2)(char *, char *))
{
  uint64_t v4 = sub_100044014(&qword_1003F3308);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v26 = a1 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v7;
  int64_t v27 = (unint64_t)(v8 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v12 << 6);
      goto LABEL_5;
    }
    int64_t v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v22 >= v27) {
      return swift_release();
    }
    unint64_t v23 = *(void *)(v26 + 8 * v22);
    ++v12;
    if (!v23)
    {
      int64_t v12 = v22 + 1;
      if (v22 + 1 >= v27) {
        return swift_release();
      }
      unint64_t v23 = *(void *)(v26 + 8 * v12);
      if (!v23)
      {
        int64_t v12 = v22 + 2;
        if (v22 + 2 >= v27) {
          return swift_release();
        }
        unint64_t v23 = *(void *)(v26 + 8 * v12);
        if (!v23)
        {
          int64_t v12 = v22 + 3;
          if (v22 + 3 >= v27) {
            return swift_release();
          }
          unint64_t v23 = *(void *)(v26 + 8 * v12);
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v14 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_5:
    uint64_t v15 = *(void *)(a1 + 48);
    uint64_t v16 = type metadata accessor for Handle();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v6, v15 + *(void *)(*(void *)(v16 - 8) + 72) * v14, v16);
    uint64_t v17 = *(void *)(a1 + 56);
    uint64_t v18 = type metadata accessor for Location();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v20 = v17 + *(void *)(v19 + 72) * v14;
    uint64_t v21 = &v6[*(int *)(v4 + 48)];
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v20, v18);
    a2(v6, v21);
    uint64_t result = sub_10000A520((uint64_t)v6, &qword_1003F3308);
  }
  int64_t v24 = v22 + 4;
  if (v24 >= v27) {
    return swift_release();
  }
  unint64_t v23 = *(void *)(v26 + 8 * v24);
  if (v23)
  {
    int64_t v12 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v12 >= v27) {
      return swift_release();
    }
    unint64_t v23 = *(void *)(v26 + 8 * v12);
    ++v24;
    if (v23) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_100288330(uint64_t a1, uint64_t a2, uint64_t a3, NSObject *a4)
{
  os_log_t v111 = a4;
  uint64_t v103 = a2;
  uint64_t v6 = type metadata accessor for Location();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v99 = (char *)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100044014((uint64_t *)&unk_1003EE800);
  __chkstk_darwin(v9 - 8);
  uint64_t v105 = (char *)&v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v106 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v100 = (char *)&v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  os_log_type_t v101 = (char *)&v94 - v15;
  __chkstk_darwin(v14);
  int v102 = (char *)&v94 - v16;
  uint64_t v17 = type metadata accessor for Handle();
  uint64_t v112 = *(void *)(v17 - 8);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v94 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v98 = (char *)&v94 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v108 = (char *)&v94 - v24;
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v94 - v25;
  uint64_t v27 = type metadata accessor for Friend();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v109 = v27;
  uint64_t v110 = v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v94 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v29);
  uint64_t v104 = (char *)&v94 - v33;
  __chkstk_darwin(v32);
  unint64_t v107 = (char *)&v94 - v34;
  sub_100044014(&qword_1003EE3F0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100367D70;
  *(void *)(inited + 32) = Handle.identifier.getter();
  *(void *)(inited + 40) = v36;
  uint64_t v116 = a1;
  uint64_t v37 = Handle.siblingIdentifiers.getter();
  uint64_t v118 = inited;
  sub_10012D1A4(v37);
  uint64_t v38 = sub_1002466DC(v118);
  swift_bridgeObjectRelease();
  LOBYTE(a1) = sub_100287F00(a3, v38);
  swift_bridgeObjectRelease();
  if (a1)
  {
    if (qword_1003EC408 != -1) {
      swift_once();
    }
    uint64_t v39 = type metadata accessor for Logger();
    sub_100044058(v39, (uint64_t)qword_10040C290);
    uint64_t v40 = v112;
    (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v20, v116, v17);
    uint64_t v41 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v41, v42))
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v20, v17);
      goto LABEL_18;
    }
    uint64_t v43 = swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    *(_DWORD *)uint64_t v43 = 141558275;
    uint64_t v117 = 1752392040;
    uint64_t v118 = v44;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v43 + 12) = 2081;
    uint64_t v45 = Handle.identifier.getter();
    uint64_t v117 = sub_100037004(v45, v46, &v118);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v20, v17);
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "Not sending legacy location for handle: %{private,mask.hash}s\nsince current client is not interested", (uint8_t *)v43, 0x16u);
    swift_arrayDestroy();
LABEL_15:
    swift_slowDealloc();
    swift_slowDealloc();
LABEL_18:

    return 0;
  }
  uint64_t v97 = v7;
  Class isa = v111[2].isa;
  if (!isa)
  {
LABEL_11:
    if (qword_1003EC408 != -1) {
      swift_once();
    }
    uint64_t v54 = type metadata accessor for Logger();
    sub_100044058(v54, (uint64_t)qword_10040C290);
    uint64_t v55 = v112;
    char v56 = v108;
    (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v108, v116, v17);
    uint64_t v41 = Logger.logObject.getter();
    os_log_type_t v57 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v41, v57))
    {
      (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v17);
      goto LABEL_18;
    }
    uint64_t v58 = swift_slowAlloc();
    uint64_t v59 = swift_slowAlloc();
    *(_DWORD *)uint64_t v58 = 141558275;
    uint64_t v117 = 1752392040;
    uint64_t v118 = v59;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v58 + 12) = 2081;
    uint64_t v60 = Handle.identifier.getter();
    uint64_t v117 = sub_100037004(v60, v61, &v118);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v17);
    _os_log_impl((void *)&_mh_execute_header, v41, v57, "Not sending legacy location for handle: %{private,mask.hash}s\nsince handle is not following", (uint8_t *)v58, 0x16u);
    swift_arrayDestroy();
    goto LABEL_15;
  }
  uint64_t v95 = v6;
  uint64_t v96 = v11;
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v110 + 16);
  uint64_t v49 = (char *)v111 + ((*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80));
  uint64_t v114 = (void (**)(char *, uint64_t))(v112 + 8);
  uint64_t v115 = v17;
  os_log_t v113 = (void (**)(char *, uint64_t))(v110 + 8);
  uint64_t v50 = *(void *)(v110 + 72);
  swift_bridgeObjectRetain();
  uint64_t v51 = v109;
  while (1)
  {
    v48(v31, v49, v51);
    Friend.handle.getter();
    char v52 = static Handle.== infix(_:_:)();
    uint64_t v53 = *v114;
    (*v114)(v26, v115);
    if (v52) {
      break;
    }
    (*v113)(v31, v51);
    v49 += v50;
    Class isa = (Class)((char *)isa - 1);
    if (!isa)
    {
      swift_bridgeObjectRelease();
      uint64_t v17 = v115;
      goto LABEL_11;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v63 = *(void (**)(char *, char *, uint64_t))(v110 + 32);
  uint64_t v64 = v104;
  v63(v104, v31, v51);
  uint64_t v65 = v107;
  v63(v107, v64, v51);
  uint64_t v66 = (uint64_t)v105;
  Friend.createdAt.getter();
  uint64_t v67 = v106;
  uint64_t v68 = v96;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v106 + 48))(v66, 1, v96) == 1)
  {
    (*v113)(v65, v51);
    sub_10000A520(v66, (uint64_t *)&unk_1003EE800);
    return 1;
  }
  else
  {
    uint64_t v69 = v102;
    (*(void (**)(char *, uint64_t, uint64_t))(v67 + 32))(v102, v66, v68);
    unint64_t v70 = v101;
    Location.date.getter();
    char v71 = static Date.< infix(_:_:)();
    uint64_t v72 = *(void (**)(char *, uint64_t))(v67 + 8);
    v72(v70, v68);
    if (v71)
    {
      if (qword_1003EC408 != -1) {
        swift_once();
      }
      uint64_t v73 = type metadata accessor for Logger();
      sub_100044058(v73, (uint64_t)qword_10040C290);
      uint64_t v74 = v98;
      uint64_t v75 = v115;
      (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v98, v116, v115);
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v100, v69, v68);
      uint64_t v76 = v97;
      uint64_t v77 = v99;
      (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v99, v103, v95);
      uint64_t v78 = Logger.logObject.getter();
      os_log_type_t v79 = static os_log_type_t.error.getter();
      LODWORD(v116) = v79;
      if (os_log_type_enabled(v78, v79))
      {
        uint64_t v80 = swift_slowAlloc();
        uint64_t v81 = swift_slowAlloc();
        uint64_t v112 = v81;
        *(_DWORD *)uint64_t v80 = 141559299;
        uint64_t v117 = 1752392040;
        uint64_t v118 = v81;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v80 + 12) = 2081;
        os_log_t v111 = v78;
        uint64_t v82 = Handle.identifier.getter();
        uint64_t v117 = sub_100037004(v82, v83, &v118);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        v53(v74, v75);
        *(_WORD *)(v80 + 22) = 2160;
        uint64_t v117 = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v80 + 32) = 2081;
        uint64_t v84 = v100;
        uint64_t v85 = Date.localISO8601.getter();
        uint64_t v117 = sub_100037004(v85, v86, &v118);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        v72(v84, v68);
        *(_WORD *)(v80 + 42) = 2160;
        uint64_t v117 = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v80 + 52) = 2081;
        uint64_t v87 = v101;
        uint64_t v88 = v99;
        Location.date.getter();
        uint64_t v89 = Date.localISO8601.getter();
        unint64_t v91 = v90;
        v72(v87, v68);
        uint64_t v117 = sub_100037004(v89, v91, &v118);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v97 + 8))(v88, v95);
        os_log_t v92 = v111;
        _os_log_impl((void *)&_mh_execute_header, v111, (os_log_type_t)v116, "Drop older legacy location for handle: %{private,mask.hash}s\ncreateAt: %{private,mask.hash}s\nlocation timestamp: %{private,mask.hash}s", (uint8_t *)v80, 0x3Eu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        BOOL v93 = v102;
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v76 + 8))(v77, v95);
        v72(v100, v68);
        v53(v74, v75);
        BOOL v93 = v69;
      }
      v72(v93, v68);
      (*v113)(v107, v109);
      return 0;
    }
    v72(v69, v68);
    (*v113)(v65, v109);
    return 1;
  }
}

uint64_t sub_1002890A4()
{
  uint64_t v1 = type metadata accessor for LocationRequest();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100289178()
{
  uint64_t v2 = *(void *)(type metadata accessor for LocationRequest() - 8);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[2] = v3;
  v5[3] = v4;
  v5[1] = sub_100018CD0;
  return _swift_task_switch(sub_10028705C, v3, 0);
}

uint64_t sub_100289260()
{
  uint64_t v1 = type metadata accessor for LocationRequest();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100289350(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for LocationRequest() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100018CD0;
  return sub_100287318(a1, v6, v7, v8, v9);
}

uint64_t sub_100289484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_100044014((uint64_t *)&unk_1003F3C10);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100081214(a1, (uint64_t)v10);
  uint64_t v11 = type metadata accessor for TaskPriority();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_10000A520((uint64_t)v10, (uint64_t *)&unk_1003F3C10);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v15 = v14;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v13 = 0;
  uint64_t v15 = 0;
LABEL_6:
  uint64_t v16 = *v4;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a2;
  *(void *)(v17 + 24) = a3;
  sub_100044014(&qword_1003F03F8);
  uint64_t v18 = (void *)(v15 | v13);
  if (v15 | v13)
  {
    v21[0] = 0;
    v21[1] = 0;
    uint64_t v18 = v21;
    void v21[2] = v13;
    v21[3] = v15;
  }
  v20[1] = 1;
  v20[2] = v18;
  v20[3] = v16;
  swift_task_create();
  return swift_release();
}

uint64_t sub_10028968C()
{
  v1[8] = v0;
  uint64_t v2 = type metadata accessor for ClientOrigin();
  v1[9] = v2;
  v1[10] = *(void *)(v2 - 8);
  v1[11] = swift_task_alloc();
  type metadata accessor for RequestOrigin();
  v1[12] = swift_task_alloc();
  sub_100044014(&qword_1003ECFF0);
  v1[13] = swift_task_alloc();
  uint64_t Priority = type metadata accessor for LocatePriority();
  v1[14] = Priority;
  v1[15] = *(void *)(Priority - 8);
  v1[16] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for LocationRequest();
  v1[17] = v4;
  v1[18] = *(void *)(v4 - 8);
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Friend();
  v1[21] = v5;
  v1[22] = *(void *)(v5 - 8);
  v1[23] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Handle();
  v1[24] = v6;
  v1[25] = *(void *)(v6 - 8);
  v1[26] = swift_task_alloc();
  return _swift_task_switch(sub_100289928, v0, 0);
}

uint64_t sub_100289928()
{
  uint64_t v8 = v0;
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[27] = sub_100044058(v1, (uint64_t)qword_10040C290);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    v0[7] = sub_100037004(0xD000000000000029, 0x8000000100378DA0, &v7);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%{public}s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v5 = (void *)swift_task_alloc();
  v0[28] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100289B14;
  return daemon.getter();
}

uint64_t sub_100289B14(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v9 = *v1;
  *(void *)(v2 + 232) = a1;
  swift_task_dealloc();
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 240) = v3;
  uint64_t v4 = type metadata accessor for Daemon();
  uint64_t v5 = type metadata accessor for DataManager(0);
  uint64_t v6 = sub_100047474(&qword_1003ECCA8, (void (*)(uint64_t))&type metadata accessor for Daemon);
  uint64_t v7 = sub_100047474(&qword_1003ECCC0, (void (*)(uint64_t))type metadata accessor for DataManager);
  *os_log_type_t v3 = v9;
  v3[1] = sub_100289CF0;
  return ActorServiceDaemon.getService<A>()(v4, v5, v6, v7);
}

uint64_t sub_100289CF0(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[31] = a1;
  v4[32] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[8];
    uint64_t v6 = sub_10028A93C;
  }
  else
  {
    swift_release();
    uint64_t v6 = sub_100289E28;
    uint64_t v5 = a1;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_100289E28()
{
  sub_100044014(&qword_1003ECF40);
  uint64_t v1 = type metadata accessor for HandleType();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = swift_allocObject();
  *(void *)(v0 + 264) = v4;
  *(_OWORD *)(v4 + 16) = xmmword_100367D70;
  (*(void (**)(unint64_t, void, uint64_t))(v2 + 104))(v4 + v3, enum case for HandleType.following(_:), v1);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 272) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100289F84;
  return sub_100021584(v4, 1);
}

uint64_t sub_100289F84(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 64);
  *(void *)(*(void *)v1 + 280) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_10028A0B8, v2, 0);
}

uint64_t sub_10028A0B8()
{
  uint64_t v45 = v0;
  uint64_t v1 = v0[35];
  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v0[25];
    uint64_t v4 = v0[22];
    uint64_t v44 = _swiftEmptyArrayStorage;
    sub_100020D44(0, v2, 0);
    uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    v4 += 16;
    uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 64));
    uint64_t v40 = *(void *)(v4 + 56);
    os_log_type_t v42 = v5;
    uint64_t v7 = (void (**)(uint64_t, uint64_t))(v4 - 8);
    uint64_t v8 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v9 = v0[23];
      uint64_t v10 = v0[21];
      v42(v9, v6, v10);
      Friend.handle.getter();
      (*v7)(v9, v10);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100020D44(0, v8[2] + 1, 1);
        uint64_t v8 = v44;
      }
      unint64_t v12 = v8[2];
      unint64_t v11 = v8[3];
      if (v12 >= v11 >> 1)
      {
        sub_100020D44(v11 > 1, v12 + 1, 1);
        uint64_t v8 = v44;
      }
      uint64_t v13 = v0[26];
      uint64_t v14 = v0[24];
      v8[2] = v12 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))((unint64_t)v8+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v12, v13, v14);
      uint64_t v44 = v8;
      v6 += v40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = _swiftEmptyArrayStorage;
  }
  if (v8[2])
  {
    uint64_t v15 = v0[20];
    uint64_t v16 = v0[18];
    uint64_t v41 = v0[17];
    uint64_t v43 = v0[19];
    uint64_t v17 = v0[13];
    uint64_t v18 = v0[11];
    uint64_t v20 = v0[9];
    uint64_t v19 = v0[10];
    (*(void (**)(void, void, void))(v0[15] + 104))(v0[16], enum case for LocatePriority.backgroundProactive(_:), v0[14]);
    uint64_t refreshed = type metadata accessor for LegacyRefreshCommandReason();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(refreshed - 8) + 56))(v17, 1, 1, refreshed);
    (*(void (**)(uint64_t, void, uint64_t))(v19 + 104))(v18, enum case for ClientOrigin.other(_:), v20);
    RequestOrigin.init(_:)();
    LocationRequest.init(priority:origin:toHandles:reason:startRefreshingLocation:isCached:)();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v43, v15, v41);
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    BOOL v24 = os_log_type_enabled(v22, v23);
    uint64_t v25 = v0[18];
    uint64_t v26 = v0[19];
    uint64_t v27 = v0[17];
    if (v24)
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v44 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136315138;
      sub_100047474(&qword_1003ED020, (void (*)(uint64_t))&type metadata accessor for LocationRequest);
      uint64_t v29 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[5] = sub_100037004(v29, v30, (uint64_t *)&v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
      v31(v26, v27);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Location Service subscribeToBackgroundProactiveLocations: %s", v28, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
      v31(v0[19], v0[17]);
    }

    v0[36] = v31;
    uint64_t v38 = (void *)swift_task_alloc();
    v0[37] = v38;
    *uint64_t v38 = v0;
    v38[1] = sub_10028A704;
    uint64_t v39 = v0[20];
    return sub_10001CEC0(v39);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v44 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 136446210;
      v0[6] = sub_100037004(0xD000000000000029, 0x8000000100378DA0, (uint64_t *)&v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "Unable to %{public}s with empty followings", v34, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    unint64_t v35 = sub_10004B2F8((uint64_t)_swiftEmptyArrayStorage);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v36 = (uint64_t (*)(unint64_t))v0[1];
    return v36(v35);
  }
}

uint64_t sub_10028A704(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[38] = v1;
  swift_task_dealloc();
  uint64_t v5 = v4[8];
  if (v1)
  {
    uint64_t v6 = sub_10028AA10;
  }
  else
  {
    v4[39] = a1;
    uint64_t v6 = sub_10028A840;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_10028A840()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[36];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[17];
  swift_release();
  v1(v2, v3);
  uint64_t v4 = v0[39];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  return v5(v4);
}

uint64_t sub_10028A93C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10028AA10()
{
  uint64_t v14 = v0;
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[38];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    v0[2] = sub_100037004(0xD000000000000029, 0x8000000100378DA0, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v4 + 12) = 2082;
    v0[3] = v3;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v5 = String.init<A>(describing:)();
    v0[4] = sub_100037004(v5, v6, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%{public}s failed with %{public}s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v7 = (void (*)(uint64_t, uint64_t))v0[36];
  uint64_t v8 = v0[20];
  uint64_t v9 = v0[17];
  unint64_t v10 = sub_10004B2F8((uint64_t)_swiftEmptyArrayStorage);
  swift_release();
  swift_errorRelease();
  v7(v8, v9);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v11 = (uint64_t (*)(unint64_t))v0[1];
  return v11(v10);
}

uint64_t sub_10028ACC8(uint64_t a1, NSObject *a2, uint64_t a3)
{
  uint64_t v6 = sub_100044014(&qword_1003ECFB8);
  __chkstk_darwin(v6 - 8);
  uint64_t v94 = (uint64_t)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t Priority = type metadata accessor for LocatePriority();
  uint64_t v9 = *(void *)(Priority - 8);
  uint64_t v10 = __chkstk_darwin(Priority);
  uint64_t v100 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  Class isa = (char *)&v86 - v12;
  uint64_t v14 = type metadata accessor for UUID();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1003EC408 != -1) {
LABEL_38:
  }
    swift_once();
  uint64_t v18 = type metadata accessor for Logger();
  uint64_t v19 = sub_100044058(v18, (uint64_t)qword_10040C290);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, v14);
  uint64_t v96 = *(void (**)(char *, uint64_t, unint64_t))(v9 + 16);
  uint64_t v97 = v9 + 16;
  v96(isa, a3, Priority);
  swift_bridgeObjectRetain_n();
  unint64_t v90 = (uint8_t *)v19;
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  LODWORD(v91) = v21;
  BOOL v22 = os_log_type_enabled(v20, v21);
  unint64_t v98 = Priority;
  uint64_t v95 = a1;
  if (v22)
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v92 = v9;
    uint64_t v24 = v23;
    uint64_t v88 = (void *)swift_slowAlloc();
    uint64_t v105 = v88;
    *(_DWORD *)uint64_t v24 = 136315650;
    sub_100047474(&qword_1003ECF68, (void (*)(uint64_t))&type metadata accessor for UUID);
    os_log_t v87 = v20;
    uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v104 = sub_100037004(v25, v26, (uint64_t *)&v105);
    uint64_t v89 = a3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    *(_WORD *)(v24 + 12) = 2080;
    sub_100047474(&qword_1003F3330, (void (*)(uint64_t))&type metadata accessor for LocatePriority);
    uint64_t v27 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v104 = sub_100037004(v27, v28, (uint64_t *)&v105);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v29 = v92;
    BOOL v93 = *(void (**)(char *, unint64_t))(v92 + 8);
    v93(isa, Priority);
    *(_WORD *)(v24 + 22) = 2080;
    type metadata accessor for Handle();
    swift_bridgeObjectRetain();
    uint64_t v30 = Array.description.getter();
    unint64_t v32 = v31;
    swift_bridgeObjectRelease();
    uint64_t v104 = sub_100037004(v30, v32, (uint64_t *)&v105);
    a3 = v89;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    os_log_type_t v33 = a2;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v34 = v87;
    _os_log_impl((void *)&_mh_execute_header, v87, (os_log_type_t)v91, "Remove legacyLocationSubscriptions: client: %s priority: %s handles: %s", (uint8_t *)v24, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v35 = v29;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    BOOL v93 = *(void (**)(char *, unint64_t))(v9 + 8);
    v93(isa, Priority);

    os_log_type_t v33 = a2;
    swift_bridgeObjectRelease_n();
    uint64_t v35 = v9;
  }
  uint64_t v36 = (uint64_t *)((char *)v99 + OBJC_IVAR____TtC13findmylocated15LocationService_legacyLocationSubscriptions);
  uint64_t result = swift_beginAccess();
  uint64_t v99 = v36;
  uint64_t v38 = *v36;
  if (!*(void *)(*v36 + 16)) {
    return result;
  }
  swift_bridgeObjectRetain();
  unint64_t v39 = sub_1000244E0(a3);
  if ((v40 & 1) == 0) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v41 = (uint64_t *)(*(void *)(v38 + 56) + 24 * v39);
  uint64_t v42 = *v41;
  uint64_t v43 = v41[1];
  uint64_t v44 = v41[2];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v105 = (void *)v42;
  uint64_t v106 = v43;
  uint64_t v107 = v44;
  uint64_t v45 = Logger.logObject.getter();
  os_log_type_t v46 = static os_log_type_t.debug.getter();
  BOOL v47 = os_log_type_enabled(v45, v46);
  uint64_t v92 = v35;
  if (v47)
  {
    uint64_t v48 = (uint8_t *)swift_slowAlloc();
    uint64_t v91 = swift_slowAlloc();
    v102[0] = v91;
    *(_DWORD *)uint64_t v48 = 136315138;
    unint64_t v90 = v48 + 4;
    swift_beginAccess();
    uint64_t v49 = v106;
    uint64_t v50 = a3;
    uint64_t v51 = v107;
    swift_retain();
    uint64_t v52 = swift_bridgeObjectRetain();
    uint64_t v53 = sub_10024DA7C(v52, v49, v51);
    unint64_t v55 = v54;
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v56 = v53;
    a3 = v50;
    uint64_t v103 = sub_100037004(v56, v55, v102);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v45, v46, "remove legacyLocationSubscriptions: %s", v48, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  unint64_t v57 = v98;
  Class isa = (char *)v33[2].isa;
  if (!isa)
  {
LABEL_35:
    swift_bridgeObjectRelease();
    return swift_release();
  }
  uint64_t v89 = type metadata accessor for Handle();
  uint64_t v58 = *(void *)(v89 - 8);
  uint64_t v17 = (char *)v33 + ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80));
  uint64_t v59 = *(void *)(v58 + 72);
  uint64_t v88 = (void *)(v58 + 8);
  unint64_t v90 = (uint8_t *)(v92 + 8);
  os_log_t v87 = v33;
  swift_bridgeObjectRetain();
  uint64_t v91 = v59;
  while (1)
  {
    swift_beginAccess();
    uint64_t v60 = (uint64_t)v105;
    if (v105[2])
    {
      unint64_t v61 = sub_100025614((uint64_t)v17);
      if (v62) {
        break;
      }
    }
    swift_endAccess();
LABEL_12:
    v17 += v59;
    if (!--isa)
    {
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
  }
  uint64_t v103 = *(void *)(*(void *)(v60 + 56) + 8 * v61);
  swift_endAccess();
  swift_bridgeObjectRetain();
  uint64_t v63 = v94;
  sub_1000DB6A4(v95, v94);
  sub_10000A520(v63, &qword_1003ECFB8);
  uint64_t v64 = *(void *)(v103 + 16);
  swift_bridgeObjectRelease();
  if (!v64)
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    unint64_t v65 = sub_100025614((uint64_t)v17);
    char v67 = v66;
    swift_bridgeObjectRelease();
    if (v67)
    {
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v69 = (uint64_t)v105;
      os_log_type_t v101 = v105;
      uint64_t v105 = (void *)0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_100127A44();
        uint64_t v69 = (uint64_t)v101;
      }
      ((void (*)(unint64_t, uint64_t))*v88)(*(void *)(v69 + 48) + v65 * v59, v89);
      uint64_t v70 = (uint64_t)v101;
      sub_100124C4C(v65, (uint64_t)v101);
      uint64_t v105 = (void *)v70;
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = (uint64_t)v100;
  a2 = a3;
  v96(v100, a3, v57);
  uint64_t v9 = (uint64_t)v105;
  a1 = v106;
  uint64_t v15 = v107;
  char v71 = v99;
  swift_beginAccess();
  swift_retain();
  swift_bridgeObjectRetain();
  a3 = swift_isUniquelyReferenced_nonNull_native();
  os_log_type_t v101 = (void *)*v71;
  uint64_t v72 = (uint64_t)v101;
  *char v71 = 0x8000000000000000;
  unint64_t Priority = sub_1000244E0(v14);
  uint64_t v74 = *(void *)(v72 + 16);
  BOOL v75 = (v73 & 1) == 0;
  uint64_t v76 = v74 + v75;
  if (__OFADD__(v74, v75))
  {
    __break(1u);
    goto LABEL_38;
  }
  char v77 = v73;
  if (*(void *)(v72 + 24) >= v76)
  {
    if (a3)
    {
      uint64_t v80 = v101;
      if ((v73 & 1) == 0) {
        goto LABEL_30;
      }
    }
    else
    {
      sub_100127788();
      uint64_t v80 = v101;
      if ((v77 & 1) == 0) {
        goto LABEL_30;
      }
    }
LABEL_28:
    uint64_t v81 = (uint64_t *)(v80[7] + 24 * Priority);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t *v81 = v9;
    v81[1] = a1;
    v81[2] = v15;
LABEL_32:
    *uint64_t v99 = (uint64_t)v80;
    swift_bridgeObjectRelease();
    unint64_t v57 = v98;
    v93(v100, v98);
    swift_endAccess();
    a3 = (uint64_t)a2;
    uint64_t v59 = v91;
    goto LABEL_12;
  }
  sub_1000089B8(v76, a3);
  unint64_t v78 = sub_1000244E0((uint64_t)v100);
  if ((v77 & 1) != (v79 & 1)) {
    goto LABEL_40;
  }
  unint64_t Priority = v78;
  uint64_t v80 = v101;
  if (v77) {
    goto LABEL_28;
  }
LABEL_30:
  v80[(Priority >> 6) + 8] |= 1 << Priority;
  v96((char *)(v80[6] + *(void *)(v92 + 72) * Priority), (uint64_t)v100, v98);
  uint64_t v82 = (uint64_t *)(v80[7] + 24 * Priority);
  uint64_t *v82 = v9;
  v82[1] = a1;
  v82[2] = v15;
  uint64_t v83 = v80[2];
  BOOL v84 = __OFADD__(v83, 1);
  uint64_t v85 = v83 + 1;
  if (!v84)
  {
    v80[2] = v85;
    goto LABEL_32;
  }
  __break(1u);
LABEL_40:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_10028B828(uint64_t a1, uint64_t a2)
{
  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  uint64_t v4 = type metadata accessor for Handle();
  v3[10] = v4;
  v3[11] = *(void *)(v4 - 8);
  v3[12] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Friend();
  v3[13] = v5;
  v3[14] = *(void *)(v5 - 8);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  sub_100044014(&qword_1003ECFB8);
  v3[18] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for UUID();
  v3[19] = v6;
  v3[20] = *(void *)(v6 - 8);
  v3[21] = swift_task_alloc();
  return _swift_task_switch(sub_10028B9F0, v2, 0);
}

uint64_t sub_10028B9F0()
{
  uint64_t v11 = v0;
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[22] = sub_100044058(v1, (uint64_t)qword_10040C290);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 141558275;
    v0[5] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v4 + 12) = 2081;
    swift_bridgeObjectRetain();
    uint64_t v5 = Array.description.getter();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    v0[6] = sub_100037004(v5, v7, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "stopRefreshingLocation for: %{private,mask.hash}s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v8 = (void *)swift_task_alloc();
  v0[23] = v8;
  void *v8 = v0;
  v8[1] = sub_10028BC60;
  return daemon.getter();
}

uint64_t sub_10028BC60(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v9 = *v1;
  *(void *)(v2 + 192) = a1;
  swift_task_dealloc();
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 200) = v3;
  uint64_t v4 = type metadata accessor for Daemon();
  uint64_t v5 = type metadata accessor for DataManager(0);
  uint64_t v6 = sub_100047474(&qword_1003ECCA8, (void (*)(uint64_t))&type metadata accessor for Daemon);
  uint64_t v7 = sub_100047474(&qword_1003ECCC0, (void (*)(uint64_t))type metadata accessor for DataManager);
  *os_log_type_t v3 = v9;
  v3[1] = sub_10028BE3C;
  return ActorServiceDaemon.getService<A>()(v4, v5, v6, v7);
}

uint64_t sub_10028BE3C(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[26] = a1;
  v4[27] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[9];
    uint64_t v6 = sub_10028CCE0;
  }
  else
  {
    swift_release();
    uint64_t v6 = sub_10028BF74;
    uint64_t v5 = a1;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_10028BF74()
{
  sub_100044014(&qword_1003ECF40);
  uint64_t v1 = type metadata accessor for HandleType();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = swift_allocObject();
  *(void *)(v0 + 224) = v4;
  *(_OWORD *)(v4 + 16) = xmmword_100367D70;
  (*(void (**)(unint64_t, void, uint64_t))(v2 + 104))(v4 + v3, enum case for HandleType.following(_:), v1);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10028C0D0;
  return sub_100021584(v4, 1);
}

uint64_t sub_10028C0D0(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  *(void *)(*(void *)v1 + 240) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_10028C204, v2, 0);
}

uint64_t sub_10028C204()
{
  uint64_t v1 = v0[30];
  uint64_t v2 = v0[7];
  swift_bridgeObjectRetain();
  v0[31] = sub_100292294(v2, v1);
  swift_bridgeObjectRelease_n();
  type metadata accessor for Transaction();
  uint64_t v3 = static Transaction.currentNSXPCConnection.getter();
  uint64_t v4 = v0[19];
  uint64_t v5 = v0[20];
  uint64_t v6 = v0[18];
  if (v3)
  {
    uint64_t v7 = (void *)v3;
    NSXPCConnection.id.getter();

    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v6, 0, 1, v4);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) != 1)
    {
      (*(void (**)(void, void, void))(v0[20] + 32))(v0[21], v0[18], v0[19]);
      goto LABEL_6;
    }
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v5 + 56))(v0[18], 1, 1, v0[19]);
  }
  uint64_t v8 = v0[18];
  type metadata accessor for LocationService();
  sub_100047474(&qword_1003F3140, (void (*)(uint64_t))type metadata accessor for LocationService);
  CustomStringConvertible<>.addressDescription.getter();
  uint64_t v9 = String.utf8Data.getter();
  unint64_t v11 = v10;
  swift_bridgeObjectRelease();
  v0[2] = v9;
  v0[3] = v11;
  sub_10004F4EC();
  DataProtocol.stableUUID.getter();
  sub_100044090(v9, v11);
  sub_10000A520(v8, &qword_1003ECFB8);
LABEL_6:
  sub_10028ACC8(v0[21], v0[7], v0[8]);
  swift_retain_n();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 134217984;
    uint64_t v15 = *(void *)(sub_1000298F0() + 16);
    swift_bridgeObjectRelease();
    swift_release();
    v0[4] = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "stopRefreshingLocation LegacyRefresh handle count: %ld", v14, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  uint64_t v16 = (void *)swift_task_alloc();
  v0[32] = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_10028C530;
  return sub_1000163A8();
}

uint64_t sub_10028C530(char a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  *(unsigned char *)(*(void *)v1 + 288) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10028C648, v2, 0);
}

void sub_10028C648()
{
  if ((*(unsigned char *)(v0 + 288) & 1) == 0)
  {
    uint64_t v1 = *(void *)(v0 + 72);
    uint64_t v2 = OBJC_IVAR____TtC13findmylocated15LocationService_legacyLocationTask;
    if (*(void *)(v1 + OBJC_IVAR____TtC13findmylocated15LocationService_legacyLocationTask))
    {
      swift_retain();
      Task.cancel()();
      swift_release();
    }
    *(void *)(v1 + v2) = 0;
    swift_release();
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Cancel next legacy location refresh task", v5, 2u);
      swift_slowDealloc();
    }
  }
  uint64_t v6 = *(void *)(v0 + 248);
  uint64_t v38 = (char *)_swiftEmptyArrayStorage;
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    unint64_t v8 = 0;
    uint64_t v9 = *(void *)(v0 + 112);
    uint64_t v37 = (void (**)(char *, uint64_t, uint64_t))(v9 + 32);
    unint64_t v10 = (char *)_swiftEmptyArrayStorage;
    uint64_t v33 = *(void *)(v6 + 16);
    uint64_t v35 = *(void *)(v0 + 248);
    while (v8 < *(void *)(v6 + 16))
    {
      unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v12 = *(void *)(v9 + 72);
      (*(void (**)(void, unint64_t, void))(v9 + 16))(*(void *)(v0 + 136), *(void *)(v0 + 248) + v11 + v12 * v8, *(void *)(v0 + 104));
      if (Friend.isSecureLocationCapable.getter())
      {
        os_log_type_t v13 = *v37;
        (*v37)(*(char **)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 104));
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10003BD78(0, *((void *)v10 + 2) + 1, 1);
          unint64_t v10 = v38;
        }
        unint64_t v15 = *((void *)v10 + 2);
        unint64_t v14 = *((void *)v10 + 3);
        if (v15 >= v14 >> 1)
        {
          sub_10003BD78(v14 > 1, v15 + 1, 1);
          unint64_t v10 = v38;
        }
        uint64_t v16 = *(void *)(v0 + 128);
        uint64_t v17 = *(void *)(v0 + 104);
        *((void *)v10 + 2) = v15 + 1;
        v13(&v10[v11 + v15 * v12], v16, v17);
        uint64_t v38 = v10;
        uint64_t v7 = v33;
        uint64_t v6 = v35;
      }
      else
      {
        (*(void (**)(void, void))(v9 + 8))(*(void *)(v0 + 136), *(void *)(v0 + 104));
      }
      if (v7 == ++v8) {
        goto LABEL_20;
      }
    }
    __break(1u);
  }
  else
  {
    unint64_t v10 = (char *)_swiftEmptyArrayStorage;
LABEL_20:
    swift_bridgeObjectRelease();
    int64_t v18 = *((void *)v10 + 2);
    if (v18)
    {
      uint64_t v19 = *(void *)(v0 + 112);
      uint64_t v20 = *(void *)(v0 + 88);
      unint64_t v39 = _swiftEmptyArrayStorage;
      sub_100020D44(0, v18, 0);
      os_log_type_t v21 = *(void (**)(uint64_t, char *, uint64_t))(v19 + 16);
      v19 += 16;
      BOOL v22 = &v10[(*(unsigned __int8 *)(v19 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 64)];
      uint64_t v34 = *(void *)(v19 + 56);
      uint64_t v36 = v21;
      uint64_t v23 = (void (**)(uint64_t, uint64_t))(v19 - 8);
      uint64_t v24 = _swiftEmptyArrayStorage;
      do
      {
        uint64_t v25 = *(void *)(v0 + 120);
        uint64_t v26 = *(void *)(v0 + 104);
        v36(v25, v22, v26);
        Friend.handle.getter();
        (*v23)(v25, v26);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100020D44(0, v24[2] + 1, 1);
          uint64_t v24 = v39;
        }
        unint64_t v28 = v24[2];
        unint64_t v27 = v24[3];
        if (v28 >= v27 >> 1)
        {
          sub_100020D44(v27 > 1, v28 + 1, 1);
          uint64_t v24 = v39;
        }
        uint64_t v29 = *(void *)(v0 + 96);
        uint64_t v30 = *(void *)(v0 + 80);
        void v24[2] = v28 + 1;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v20 + 32))((unint64_t)v24+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(void *)(v20 + 72) * v28, v29, v30);
        unint64_t v39 = v24;
        v22 += v34;
        --v18;
      }
      while (v18);
      swift_release();
    }
    else
    {
      swift_release();
      uint64_t v24 = _swiftEmptyArrayStorage;
    }
    *(void *)(v0 + 264) = v24;
    unint64_t v31 = (void *)swift_task_alloc();
    *(void *)(v0 + 272) = v31;
    *unint64_t v31 = v0;
    v31[1] = sub_10028CAC0;
    uint64_t v32 = *(void *)(v0 + 64);
    sub_10025B1E0((uint64_t)v24, v32);
  }
}

uint64_t sub_10028CAC0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 280) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 72);
  swift_bridgeObjectRelease();
  if (v0) {
    os_log_type_t v4 = sub_10028CD90;
  }
  else {
    os_log_type_t v4 = sub_10028CC08;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10028CC08()
{
  uint64_t v2 = v0[20];
  uint64_t v1 = v0[21];
  uint64_t v3 = v0[19];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10028CCE0()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10028CD90()
{
  uint64_t v2 = v0[20];
  uint64_t v1 = v0[21];
  uint64_t v3 = v0[19];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10028CE60()
{
  v1[5] = v0;
  sub_100044014(&qword_1003ECFB8);
  v1[6] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for UUID();
  v1[7] = v2;
  v1[8] = *(void *)(v2 - 8);
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  return _swift_task_switch(sub_10028CF60, v0, 0);
}

uint64_t sub_10028CF60()
{
  uint64_t v33 = v0;
  type metadata accessor for Transaction();
  uint64_t v1 = static Transaction.currentNSXPCConnection.getter();
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[6];
  if (v1)
  {
    uint64_t v5 = (void *)v1;
    NSXPCConnection.id.getter();

    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v4, 0, 1, v2);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) != 1)
    {
      (*(void (**)(void, void, void))(v0[8] + 32))(v0[10], v0[6], v0[7]);
      goto LABEL_6;
    }
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v3 + 56))(v0[6], 1, 1, v0[7]);
  }
  uint64_t v6 = v0[6];
  type metadata accessor for LocationService();
  sub_100047474(&qword_1003F3140, (void (*)(uint64_t))type metadata accessor for LocationService);
  CustomStringConvertible<>.addressDescription.getter();
  uint64_t v7 = String.utf8Data.getter();
  unint64_t v9 = v8;
  swift_bridgeObjectRelease();
  v0[2] = v7;
  v0[3] = v9;
  sub_10004F4EC();
  DataProtocol.stableUUID.getter();
  sub_100044090(v7, v9);
  sub_10000A520(v6, &qword_1003ECFB8);
LABEL_6:
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v10 = v0[9];
  uint64_t v11 = v0[10];
  uint64_t v12 = v0[7];
  uint64_t v13 = v0[8];
  uint64_t v14 = type metadata accessor for Logger();
  sub_100044058(v14, (uint64_t)qword_10040C290);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v10, v11, v12);
  unint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  BOOL v17 = os_log_type_enabled(v15, v16);
  uint64_t v19 = v0[8];
  uint64_t v18 = v0[9];
  uint64_t v20 = v0[7];
  if (v17)
  {
    os_log_type_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v21 = 136446210;
    sub_100047474(&qword_1003ECF68, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v22 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[4] = sub_100037004(v22, v23, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v26 = *(void (**)(void, void))(v19 + 8);
    uint64_t v25 = v19 + 8;
    uint64_t v24 = v26;
    v26(v18, v20);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "stopRefreshingLocation for all, clientID: %{public}s", v21, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    unint64_t v27 = *(void (**)(void, void))(v19 + 8);
    uint64_t v25 = v19 + 8;
    uint64_t v24 = v27;
    v27(v0[9], v0[7]);
  }

  v0[11] = v25;
  v0[12] = v24;
  unint64_t v28 = sub_1002617B0();
  v0[13] = v28;
  uint64_t v29 = (void *)swift_task_alloc();
  v0[14] = v29;
  *uint64_t v29 = v0;
  v29[1] = sub_10028D368;
  uint64_t v30 = v0[10];
  return sub_100261ADC(v30, (uint64_t)v28);
}

uint64_t sub_10028D368()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_10028D494, v1, 0);
}

uint64_t sub_10028D494()
{
  (*(void (**)(void, void))(v0 + 96))(*(void *)(v0 + 80), *(void *)(v0 + 56));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10028D52C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 88);
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_10028D658, v1, 0);
}

uint64_t sub_10028D658()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[49];
  uint64_t v2 = v0[43];
  uint64_t v3 = v0[44];
  uint64_t v4 = v0[40];
  swift_release();
  v1(v2, v4);
  v1(v3, v4);
  uint64_t v7 = v0[4];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  return v5(v7);
}

uint64_t sub_10028D838()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10028D9DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  return _swift_task_switch(sub_10028DA00, 0, 0);
}

uint64_t sub_10028DA00()
{
  uint64_t v1 = *(void *)(LocationRequest.toHandles.getter() + 16);
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v2 = (int8x16_t *)swift_task_alloc();
    *(void *)(v0 + 40) = v2;
    v2[1] = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 48) = v3;
    uint64_t v4 = sub_100044014(&qword_1003F03F8);
    *uint64_t v3 = v0;
    v3[1] = sub_10028DB54;
    uint64_t v5 = *(void *)(v0 + 16);
    return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD00000000000001BLL, 0x8000000100378DD0, sub_100292E0C, v2, v4);
  }
  else
  {
    uint64_t v6 = *(unint64_t **)(v0 + 16);
    *uint64_t v6 = sub_10004B2F8((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
}

uint64_t sub_10028DB54()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10028DC64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v21 = a3;
  uint64_t v19 = a2;
  uint64_t v5 = type metadata accessor for UUID();
  __chkstk_darwin(v5 - 8);
  unint64_t v23 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100044014(&qword_1003F35D8);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = type metadata accessor for LocationRequest();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(void *)(a2 + OBJC_IVAR____TtC13findmylocated15LocationService_legacyLocationWorkItemQueue);
  uint64_t v20 = type metadata accessor for WorkItemQueue.WorkItem();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v21, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v15 = (v12 + *(unsigned __int8 *)(v8 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v19;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v16 + v14, v13, v10);
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v16 + v15, (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  swift_retain();
  UUID.init()();
  WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
  dispatch thunk of WorkItemQueue.enqueue(_:)();
  return swift_release();
}

uint64_t sub_10028DF30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 24) = a3;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 32) = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_10028DFD0;
  return sub_10000C2A4(a2);
}

uint64_t sub_10028DFD0(uint64_t a1)
{
  *(void *)(*(void *)v1 + 40) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10028E0D0, 0, 0);
}

uint64_t sub_10028E0D0()
{
  v0[2] = v0[5];
  sub_100044014(&qword_1003F35D8);
  CheckedContinuation.resume(returning:)();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_10028E154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[4] = a1;
  return _swift_task_switch(sub_10028E178, 0, 0);
}

uint64_t sub_10028E178()
{
  uint64_t v1 = *(void *)(LocationRequest.toHandles.getter() + 16);
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 56) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10028E264;
    uint64_t v3 = *(void *)(v0 + 40);
    return sub_100256858(v3);
  }
  else
  {
    **(void **)(v0 + 32) = sub_10004B2F8((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_10028E264(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 64) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_10028E3AC;
  }
  else
  {
    *(void *)(v4 + 72) = a1;
    uint64_t v5 = sub_10028E38C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10028E38C()
{
  **(void **)(v0 + 32) = *(void *)(v0 + 72);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10028E3AC()
{
  uint64_t v13 = v0;
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100044058(v1, (uint64_t)qword_10040C290);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = *(void *)(v0 + 64);
  if (v4)
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446210;
    *(void *)(v0 + 16) = v5;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v7 = String.init<A>(describing:)();
    *(void *)(v0 + 24) = sub_100037004(v7, v8, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Encrypted location refresh failed with %{public}s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  unint64_t v9 = sub_10004B2F8((uint64_t)_swiftEmptyArrayStorage);
  swift_errorRelease();
  **(void **)(v0 + 32) = v9;
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_10028E5E4(uint64_t a1)
{
  v2[12] = a1;
  v2[13] = v1;
  v2[14] = *v1;
  uint64_t v3 = type metadata accessor for Handle();
  v2[15] = v3;
  v2[16] = *(void *)(v3 - 8);
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Friend();
  v2[19] = v4;
  v2[20] = *(void *)(v4 - 8);
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  return _swift_task_switch(sub_10028E76C, v1, 0);
}

uint64_t sub_10028E76C()
{
  uint64_t v11 = v0;
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[26] = sub_100044058(v1, (uint64_t)qword_10040C290);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446723;
    v0[9] = sub_100037004(0xD000000000000015, 0x8000000100378D80, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v4 + 12) = 2160;
    v0[10] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v4 + 22) = 2081;
    swift_bridgeObjectRetain();
    uint64_t v5 = Array.description.getter();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    v0[11] = sub_100037004(v5, v7, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%{public}s handles: %{private,mask.hash}s", (uint8_t *)v4, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  unint64_t v8 = (void *)swift_task_alloc();
  v0[27] = v8;
  void *v8 = v0;
  v8[1] = sub_10028EA24;
  return daemon.getter();
}

uint64_t sub_10028EA24(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v9 = *v1;
  *(void *)(v2 + 224) = a1;
  swift_task_dealloc();
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 232) = v3;
  uint64_t v4 = type metadata accessor for Daemon();
  uint64_t v5 = type metadata accessor for DataManager(0);
  uint64_t v6 = sub_100047474(&qword_1003ECCA8, (void (*)(uint64_t))&type metadata accessor for Daemon);
  uint64_t v7 = sub_100047474(&qword_1003ECCC0, (void (*)(uint64_t))type metadata accessor for DataManager);
  *os_log_type_t v3 = v9;
  v3[1] = sub_10028EC00;
  return ActorServiceDaemon.getService<A>()(v4, v5, v6, v7);
}

uint64_t sub_10028EC00(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[30] = a1;
  v4[31] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[13];
    uint64_t v6 = sub_10028FD20;
  }
  else
  {
    swift_release();
    uint64_t v6 = sub_10028ED38;
    uint64_t v5 = a1;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_10028ED38()
{
  sub_100044014(&qword_1003ECF40);
  uint64_t v1 = type metadata accessor for HandleType();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = swift_allocObject();
  *(void *)(v0 + 256) = v4;
  *(_OWORD *)(v4 + 16) = xmmword_100367D70;
  (*(void (**)(unint64_t, void, uint64_t))(v2 + 104))(v4 + v3, enum case for HandleType.following(_:), v1);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10028EE94;
  return sub_100021584(v4, 1);
}

uint64_t sub_10028EE94(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 104);
  *(void *)(*(void *)v1 + 272) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_10028EFC8, v2, 0);
}

uint64_t sub_10028EFC8()
{
  uint64_t v80 = v0;
  uint64_t v1 = v0[34];
  uint64_t v2 = v0[12];
  swift_bridgeObjectRetain();
  unint64_t v3 = sub_100292294(v2, v1);
  swift_bridgeObjectRelease_n();
  uint64_t v75 = v3[2];
  if (v75)
  {
    uint64_t v4 = v0[20];
    uint64_t v5 = (char *)_swiftEmptyArrayStorage;
    char v79 = (char *)_swiftEmptyArrayStorage;
    char v77 = (uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
    uint64_t v74 = (uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 32);
    uint64_t v6 = swift_bridgeObjectRetain();
    unint64_t v14 = 0;
    char v73 = v3;
    do
    {
      if (v14 >= v3[2])
      {
        __break(1u);
        goto LABEL_52;
      }
      uint64_t v15 = *(void *)(v4 + 72);
      unint64_t v76 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      unint64_t v78 = *(void (**)(uint64_t, char *, uint64_t))(v4 + 16);
      v78(v0[25], (char *)v3 + v76 + v15 * v14, v0[19]);
      if (Friend.isSecureLocationCapable.getter())
      {
        uint64_t v16 = *v74;
        (*v74)((char *)v0[24], v0[25], v0[19]);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10003BD78(0, *((void *)v5 + 2) + 1, 1);
          uint64_t v5 = v79;
        }
        unint64_t v18 = *((void *)v5 + 2);
        unint64_t v17 = *((void *)v5 + 3);
        if (v18 >= v17 >> 1)
        {
          sub_10003BD78(v17 > 1, v18 + 1, 1);
          uint64_t v5 = v79;
        }
        uint64_t v19 = v0[24];
        uint64_t v20 = v0[19];
        *((void *)v5 + 2) = v18 + 1;
        uint64_t v6 = v16(&v5[v76 + v18 * v15], v19, v20);
        char v79 = v5;
        unint64_t v3 = v73;
      }
      else
      {
        uint64_t v6 = (*v77)(v0[25], v0[19]);
      }
      ++v14;
    }
    while (v75 != v14);
    swift_bridgeObjectRelease();
    int64_t v21 = *((void *)v5 + 2);
    if (v21)
    {
      uint64_t v22 = v0[16];
      char v79 = (char *)_swiftEmptyArrayStorage;
      sub_100020D44(0, v21, 0);
      unint64_t v23 = &v5[v76];
      uint64_t v24 = (char *)_swiftEmptyArrayStorage;
      do
      {
        uint64_t v25 = v24;
        uint64_t v26 = v0[23];
        uint64_t v27 = v0[19];
        v78(v26, v23, v27);
        Friend.handle.getter();
        uint64_t v28 = v26;
        uint64_t v24 = v25;
        (*v77)(v28, v27);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100020D44(0, *((void *)v25 + 2) + 1, 1);
          uint64_t v24 = v79;
        }
        unint64_t v30 = *((void *)v24 + 2);
        unint64_t v29 = *((void *)v24 + 3);
        if (v30 >= v29 >> 1)
        {
          sub_100020D44(v29 > 1, v30 + 1, 1);
          uint64_t v24 = v79;
        }
        uint64_t v31 = v0[18];
        uint64_t v32 = v0[15];
        *((void *)v24 + 2) = v30 + 1;
        (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(&v24[((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * v30], v31, v32);
        char v79 = v24;
        v23 += v15;
        --v21;
      }
      while (v21);
      uint64_t v6 = swift_release();
      unint64_t v3 = v73;
    }
    else
    {
      uint64_t v6 = swift_release();
      uint64_t v24 = (char *)_swiftEmptyArrayStorage;
    }
    unint64_t v39 = 0;
    v0[35] = v24;
    uint64_t v40 = (char *)_swiftEmptyArrayStorage;
    char v79 = (char *)_swiftEmptyArrayStorage;
    uint64_t v41 = (char *)v3 + v76;
    uint64_t v72 = v24;
    while (v39 < v3[2])
    {
      v78(v0[22], v41, v0[19]);
      if (Friend.isLegacyLocationCapable.getter())
      {
        uint64_t v42 = *v74;
        (*v74)((char *)v0[21], v0[22], v0[19]);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10003BD78(0, *((void *)v40 + 2) + 1, 1);
          uint64_t v40 = v79;
        }
        unint64_t v44 = *((void *)v40 + 2);
        unint64_t v43 = *((void *)v40 + 3);
        if (v44 >= v43 >> 1)
        {
          sub_10003BD78(v43 > 1, v44 + 1, 1);
          uint64_t v40 = v79;
        }
        uint64_t v45 = v0[21];
        uint64_t v46 = v0[19];
        *((void *)v40 + 2) = v44 + 1;
        uint64_t v6 = v42(&v40[v76 + v44 * v15], v45, v46);
        char v79 = v40;
        unint64_t v3 = v73;
      }
      else
      {
        uint64_t v6 = (*v77)(v0[22], v0[19]);
      }
      ++v39;
      v41 += v15;
      if (v75 == v39)
      {
        swift_bridgeObjectRelease();
        int64_t v47 = *((void *)v40 + 2);
        if (v47)
        {
          uint64_t v48 = v0[16];
          char v79 = (char *)_swiftEmptyArrayStorage;
          sub_100020D44(0, v47, 0);
          uint64_t v49 = &v40[v76];
          uint64_t v50 = (char *)_swiftEmptyArrayStorage;
          do
          {
            uint64_t v51 = v0[23];
            uint64_t v52 = v0[19];
            v78(v51, v49, v52);
            Friend.handle.getter();
            (*v77)(v51, v52);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_100020D44(0, *((void *)v50 + 2) + 1, 1);
              uint64_t v50 = v79;
            }
            unint64_t v54 = *((void *)v50 + 2);
            unint64_t v53 = *((void *)v50 + 3);
            if (v54 >= v53 >> 1)
            {
              sub_100020D44(v53 > 1, v54 + 1, 1);
              uint64_t v50 = v79;
            }
            uint64_t v55 = v0[17];
            uint64_t v56 = v0[15];
            *((void *)v50 + 2) = v54 + 1;
            (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(&v50[((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(void *)(v48 + 72) * v54], v55, v56);
            char v79 = v50;
            v49 += v15;
            --v47;
          }
          while (v47);
          swift_release();
        }
        else
        {
          swift_release();
          uint64_t v50 = (char *)_swiftEmptyArrayStorage;
        }
        v0[36] = v50;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        unint64_t v57 = Logger.logObject.getter();
        os_log_type_t v58 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v57, v58))
        {
          uint64_t v59 = swift_slowAlloc();
          char v79 = (char *)swift_slowAlloc();
          *(_DWORD *)uint64_t v59 = 136447235;
          v0[3] = sub_100037004(0xD000000000000015, 0x8000000100378D80, (uint64_t *)&v79);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v59 + 12) = 2160;
          v0[4] = 1752392040;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v59 + 22) = 2081;
          swift_bridgeObjectRetain();
          uint64_t v60 = Array.description.getter();
          unint64_t v62 = v61;
          swift_bridgeObjectRelease();
          v0[5] = sub_100037004(v60, v62, (uint64_t *)&v79);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v59 + 32) = 2160;
          v0[6] = 1752392040;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v59 + 42) = 2081;
          swift_bridgeObjectRetain();
          uint64_t v63 = Array.description.getter();
          unint64_t v65 = v64;
          swift_bridgeObjectRelease();
          v0[7] = sub_100037004(v63, v65, (uint64_t *)&v79);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v57, v58, "%{public}s\nlegacy location handles: %{private,mask.hash}s\nsecure location request: %{private,mask.hash}s", (uint8_t *)v59, 0x34u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }

        uint64_t v66 = v0[13];
        uint64_t v67 = v0[14];
        uint64_t v68 = sub_100044014(&qword_1003F03F8);
        uint64_t v69 = sub_100047474(qword_1003F3148, (void (*)(uint64_t))type metadata accessor for LocationService);
        uint64_t v70 = (void *)swift_task_alloc();
        v0[37] = v70;
        void v70[2] = v50;
        v70[3] = v66;
        v70[4] = v72;
        v70[5] = v67;
        char v71 = (void *)swift_task_alloc();
        v0[38] = v71;
        *char v71 = v0;
        v71[1] = sub_10028FAEC;
        uint64_t v82 = v68;
        uint64_t v11 = &unk_1003F3568;
        uint64_t v6 = (uint64_t)(v0 + 2);
        uint64_t v7 = v68;
        uint64_t v8 = v68;
        uint64_t v9 = v66;
        uint64_t v10 = v69;
        uint64_t v12 = v70;
        uint64_t v13 = v68;
        return withTaskGroup<A, B>(of:returning:isolation:body:)(v6, v7, v8, v9, v10, v11, v12, v13);
      }
    }
LABEL_52:
    __break(1u);
    return withTaskGroup<A, B>(of:returning:isolation:body:)(v6, v7, v8, v9, v10, v11, v12, v13);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      char v79 = (char *)swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 136446210;
      v0[8] = sub_100037004(0xD000000000000015, 0x8000000100378D80, (uint64_t *)&v79);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "%{public}s no valid friend currently sharing locations with me yet", v35, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    unint64_t v36 = sub_10004B2F8((uint64_t)_swiftEmptyArrayStorage);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v37 = (uint64_t (*)(unint64_t))v0[1];
    return v37(v36);
  }
}

uint64_t sub_10028FAEC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 104);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return _swift_task_switch(sub_10028FC58, v1, 0);
}

uint64_t sub_10028FC58()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_10028FD20()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10028FDE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[8] = a5;
  v6[9] = a6;
  v6[6] = a3;
  v6[7] = a4;
  v6[4] = a1;
  v6[5] = a2;
  uint64_t v8 = sub_100044014(&qword_1003F33C8);
  v6[10] = v8;
  v6[11] = *(void *)(v8 - 8);
  v6[12] = swift_task_alloc();
  sub_100044014((uint64_t *)&unk_1003F3C10);
  v6[13] = swift_task_alloc();
  return _swift_task_switch(sub_10028FEE4, a4, 0);
}

uint64_t sub_10028FEE4()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[13];
  uint64_t v16 = v0 + 2;
  uint64_t v3 = v0[9];
  uint64_t v4 = v1[7];
  uint64_t v15 = v1[8];
  uint64_t v5 = v1[6];
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  v7(v2, 1, 1, v6);
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v5;
  v8[5] = v4;
  v8[6] = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100289484(v2, (uint64_t)&unk_1003F3578, (uint64_t)v8);
  sub_10000A520(v2, (uint64_t *)&unk_1003F3C10);
  v7(v2, 1, 1, v6);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v15;
  v9[5] = v4;
  v9[6] = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_100289484(v2, (uint64_t)&unk_1003F3588, (uint64_t)v9);
  sub_10000A520(v2, (uint64_t *)&unk_1003F3C10);
  sub_100044014(&qword_1003F03F8);
  TaskGroup.makeAsyncIterator()();
  uint64_t v10 = sub_100047474(qword_1003F3148, (void (*)(uint64_t))type metadata accessor for LocationService);
  v1[15] = 0;
  v1[16] = _swiftEmptyDictionarySingleton;
  v1[14] = v10;
  uint64_t v11 = v1[7];
  uint64_t v12 = (void *)swift_task_alloc();
  v1[17] = v12;
  *uint64_t v12 = v1;
  v12[1] = sub_100290164;
  uint64_t v13 = v1[10];
  return TaskGroup.Iterator.next(isolation:)(v16, v11, v10, v13);
}

uint64_t sub_100290164()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56);
  swift_task_dealloc();
  return _swift_task_switch(sub_100290274, v1, 0);
}

uint64_t sub_100290274()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[16];
  if (v1)
  {
    uint64_t v3 = v0[15];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v0[3] = v2;
    sub_100014914(v1, (uint64_t)sub_100291B8C, 0, isUniquelyReferenced_nonNull_native, v0 + 3);
    if (v3)
    {
      return swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v8 = v0[3];
      swift_bridgeObjectRelease();
      v0[15] = 0;
      v0[16] = v8;
      uint64_t v9 = v0[14];
      uint64_t v10 = v0[7];
      uint64_t v11 = (void *)swift_task_alloc();
      v0[17] = v11;
      *uint64_t v11 = v0;
      v11[1] = sub_100290164;
      uint64_t v12 = v0[10];
      return TaskGroup.Iterator.next(isolation:)(v0 + 2, v10, v9, v12);
    }
  }
  else
  {
    uint64_t v6 = (void *)v0[4];
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
    *uint64_t v6 = v2;
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_10029043C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[4] = a1;
  uint64_t v6 = type metadata accessor for Handle();
  v5[7] = v6;
  v5[8] = *(void *)(v6 - 8);
  v5[9] = swift_task_alloc();
  v5[10] = swift_task_alloc();
  sub_100044014(&qword_1003F3328);
  v5[11] = swift_task_alloc();
  v5[12] = swift_task_alloc();
  return _swift_task_switch(sub_100290550, 0, 0);
}

uint64_t sub_100290550()
{
  if (*(void *)(*(void *)(v0 + 40) + 16))
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_100290668;
    uint64_t v2 = *(void *)(v0 + 40);
    return sub_100283C5C(v2);
  }
  else
  {
    **(void **)(v0 + 32) = sub_10004B2F8((uint64_t)_swiftEmptyArrayStorage);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_100290668(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 112) = a1;
  *(void *)(v3 + 120) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_100290D88;
  }
  else {
    uint64_t v4 = sub_10029077C;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_10029077C()
{
  uint64_t v50 = v0;
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v40 = v2 + 64;
  uint64_t v4 = -1;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  if (-v5 < 64) {
    uint64_t v4 = ~(-1 << -(char)v5);
  }
  unint64_t v6 = v4 & v3;
  uint64_t v7 = (void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16);
  uint64_t v43 = *(void *)(v0 + 64);
  uint64_t v44 = *(void *)(v0 + 112);
  uint64_t v45 = (void (**)(uint64_t, uint64_t))(v1 + 8);
  uint64_t v46 = (void (**)(void, void, void))(v1 + 32);
  int64_t v41 = (unint64_t)(63 - v5) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v47 = 0;
  uint64_t v42 = v7;
  while (1)
  {
    if (v6)
    {
      uint64_t v48 = (v6 - 1) & v6;
      unint64_t v12 = __clz(__rbit64(v6)) | (v47 << 6);
LABEL_8:
      uint64_t v13 = *(void *)(v0 + 88);
      (*(void (**)(uint64_t, unint64_t, void))(v43 + 16))(v13, *(void *)(v44 + 48) + *(void *)(v43 + 72) * v12, *(void *)(v0 + 56));
      uint64_t v14 = *(void *)(v44 + 56);
      uint64_t v15 = type metadata accessor for Location();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = v14 + *(void *)(v16 + 72) * v12;
      uint64_t v18 = sub_100044014(&qword_1003F3308);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v13 + *(int *)(v18 + 48), v17, v15);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v13, 0, 1, v18);
      goto LABEL_27;
    }
    int64_t v19 = v47 + 1;
    if (__OFADD__(v47, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v19 < v41)
    {
      unint64_t v20 = *(void *)(v40 + 8 * v19);
      if (v20) {
        goto LABEL_12;
      }
      int64_t v21 = v47 + 2;
      ++v47;
      if (v19 + 1 < v41)
      {
        unint64_t v20 = *(void *)(v40 + 8 * v21);
        if (v20) {
          goto LABEL_15;
        }
        int64_t v47 = v19 + 1;
        if (v19 + 2 < v41)
        {
          unint64_t v20 = *(void *)(v40 + 8 * (v19 + 2));
          if (v20)
          {
            v19 += 2;
            goto LABEL_12;
          }
          int64_t v21 = v19 + 3;
          int64_t v47 = v19 + 2;
          if (v19 + 3 < v41)
          {
            unint64_t v20 = *(void *)(v40 + 8 * v21);
            if (v20)
            {
LABEL_15:
              int64_t v19 = v21;
LABEL_12:
              uint64_t v48 = (v20 - 1) & v20;
              unint64_t v12 = __clz(__rbit64(v20)) + (v19 << 6);
              int64_t v47 = v19;
              goto LABEL_8;
            }
            while (1)
            {
              int64_t v19 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                break;
              }
              if (v19 >= v41)
              {
                int64_t v47 = v41 - 1;
                goto LABEL_26;
              }
              unint64_t v20 = *(void *)(v40 + 8 * v19);
              ++v21;
              if (v20) {
                goto LABEL_12;
              }
            }
LABEL_36:
            __break(1u);
            return result;
          }
        }
      }
    }
LABEL_26:
    uint64_t v22 = *(void *)(v0 + 88);
    uint64_t v23 = sub_100044014(&qword_1003F3308);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
    uint64_t v48 = 0;
LABEL_27:
    uint64_t v24 = *(void *)(v0 + 96);
    sub_100013B50(*(void *)(v0 + 88), v24, &qword_1003F3328);
    uint64_t v25 = sub_100044014(&qword_1003F3308);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v24, 1, v25) == 1) {
      break;
    }
    (*v46)(*(void *)(v0 + 80), *(void *)(v0 + 96), *(void *)(v0 + 56));
    if (qword_1003EC408 != -1) {
      swift_once();
    }
    uint64_t v27 = *(void *)(v0 + 72);
    uint64_t v26 = *(void *)(v0 + 80);
    uint64_t v28 = *(void *)(v0 + 56);
    uint64_t v29 = type metadata accessor for Logger();
    sub_100044058(v29, (uint64_t)qword_10040C290);
    (*v7)(v27, v26, v28);
    unint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.default.getter();
    BOOL v32 = os_log_type_enabled(v30, v31);
    uint64_t v33 = *(void *)(v0 + 72);
    uint64_t v34 = *(void *)(v0 + 80);
    uint64_t v35 = *(void *)(v0 + 56);
    if (v32)
    {
      uint64_t v36 = swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      *(_DWORD *)uint64_t v36 = 141558275;
      *(void *)(v36 + 4) = 1752392040;
      *(_WORD *)(v36 + 12) = 2081;
      uint64_t v37 = Handle.identifier.getter();
      *(void *)(v36 + 14) = sub_100037004(v37, v38, &v49);
      swift_bridgeObjectRelease();
      uint64_t v9 = *v45;
      (*v45)(v33, v35);
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Get legacy latest location for handle: %{private,mask.hash}s", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v7 = v42;
      swift_slowDealloc();
    }
    else
    {

      uint64_t v9 = *v45;
      (*v45)(v33, v35);
    }
    v9(v34, v35);
    uint64_t v10 = *(void *)(v0 + 96) + *(int *)(v25 + 48);
    uint64_t v11 = type metadata accessor for Location();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    unint64_t v6 = v48;
  }
  swift_release();
  **(void **)(v0 + 32) = *(void *)(v0 + 112);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
  return v39();
}

uint64_t sub_100290D88()
{
  uint64_t v13 = v0;
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100044058(v1, (uint64_t)qword_10040C290);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = *(void *)(v0 + 120);
  if (v4)
  {
    unint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)unint64_t v6 = 136446210;
    *(void *)(v0 + 16) = v5;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v7 = String.init<A>(describing:)();
    *(void *)(v0 + 24) = sub_100037004(v7, v8, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Legacy location refresh failed with %{public}s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  unint64_t v9 = sub_10004B2F8((uint64_t)_swiftEmptyArrayStorage);
  swift_errorRelease();
  **(void **)(v0 + 32) = v9;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_100290FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[11] = a4;
  v5[12] = a5;
  v5[10] = a1;
  return _swift_task_switch(sub_100291008, 0, 0);
}

uint64_t sub_100291008()
{
  uint64_t v13 = v0;
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  *(void *)(v0 + 104) = sub_100044058(v1, (uint64_t)qword_10040C290);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446723;
    *(void *)(v0 + 56) = sub_100037004(0xD000000000000015, 0x8000000100378D80, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v4 + 12) = 2160;
    *(void *)(v0 + 64) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v4 + 22) = 2081;
    type metadata accessor for Handle();
    swift_bridgeObjectRetain();
    uint64_t v5 = Array.description.getter();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 72) = sub_100037004(v5, v7, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%{public}s subscribing shallow locations\nfor: %{private,mask.hash}s", (uint8_t *)v4, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  if (*(void *)(*(void *)(v0 + 88) + 16))
  {
    unint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v8;
    void *v8 = v0;
    v8[1] = sub_100291324;
    uint64_t v9 = *(void *)(v0 + 88);
    return sub_100257CF4(v9);
  }
  else
  {
    **(void **)(v0 + 80) = sub_10004B2F8((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
}

uint64_t sub_100291324(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 120) = a1;
  *(void *)(v3 + 128) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_10029167C;
  }
  else {
    uint64_t v4 = sub_100291438;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_100291438()
{
  uint64_t v10 = v0;
  swift_bridgeObjectRetain_n();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(void *)(v0 + 40) = 1752392040;
    *(_DWORD *)uint64_t v3 = 141558275;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v3 + 12) = 2081;
    type metadata accessor for Handle();
    type metadata accessor for Location();
    sub_100047474(&qword_1003ECDA0, (void (*)(uint64_t))&type metadata accessor for Handle);
    swift_bridgeObjectRetain();
    uint64_t v4 = Dictionary.description.getter();
    unint64_t v6 = v5;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 48) = sub_100037004(v4, v6, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Encrypted latest location: %{private,mask.hash}s", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  **(void **)(v0 + 80) = *(void *)(v0 + 120);
  unint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_10029167C()
{
  uint64_t v11 = v0;
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void *)(v0 + 128);
    uint64_t v4 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    *(void *)(v0 + 16) = sub_100037004(0xD000000000000015, 0x8000000100378D80, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v4 + 12) = 2082;
    *(void *)(v0 + 24) = v3;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v5 = String.init<A>(describing:)();
    *(void *)(v0 + 32) = sub_100037004(v5, v6, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%{public}s failed with %{public}s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  unint64_t v7 = sub_10004B2F8((uint64_t)_swiftEmptyArrayStorage);
  swift_errorRelease();
  **(void **)(v0 + 80) = v7;
  unint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1002918A8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100018CD0;
  return sub_10028B828(a1, a2);
}

uint64_t sub_10029194C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10004A274;
  return sub_10028CE60();
}

uint64_t sub_1002919D8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1001E7C34;
  return sub_10025CAF8(a1);
}

uint64_t sub_100291A6C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1001E7C34;
  return sub_10028968C();
}

uint64_t sub_100291AF8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1001E7C34;
  return sub_10028E5E4(a1);
}

uint64_t sub_100291B8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1 + *(int *)(sub_100044014(&qword_1003F3308) + 48);
  uint64_t v5 = a2 + *(int *)(sub_100044014(&qword_1003F0028) + 48);
  uint64_t v6 = type metadata accessor for Handle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  uint64_t v7 = type metadata accessor for Location();
  unint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(v5, v4, v7);
}

uint64_t sub_100291C64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100044014(&qword_1003F3308);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100044014(&qword_1003F3328);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v37 - v12;
  uint64_t v14 = *v1;
  uint64_t v15 = v1[1];
  uint64_t v17 = v1[2];
  int64_t v16 = v1[3];
  int64_t v18 = v16;
  unint64_t v19 = v1[4];
  uint64_t v37 = v6;
  uint64_t v40 = v17;
  if (v19)
  {
    uint64_t v38 = a1;
    uint64_t v39 = v15;
    uint64_t v20 = (v19 - 1) & v19;
    unint64_t v21 = __clz(__rbit64(v19)) | (v16 << 6);
LABEL_3:
    uint64_t v22 = *(void *)(v14 + 48);
    uint64_t v23 = v14;
    uint64_t v24 = type metadata accessor for Handle();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v13, v22 + *(void *)(*(void *)(v24 - 8) + 72) * v21, v24);
    uint64_t v25 = *(void *)(v23 + 56);
    uint64_t v26 = type metadata accessor for Location();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(&v13[*(int *)(v3 + 48)], v25 + *(void *)(*(void *)(v26 - 8) + 72) * v21, v26);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v13, 0, 1, v3);
    a1 = v38;
    uint64_t v15 = v39;
    goto LABEL_23;
  }
  int64_t v27 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v28 = (unint64_t)(v17 + 64) >> 6;
  if (v27 < v28)
  {
    unint64_t v29 = *(void *)(v15 + 8 * v27);
    if (v29)
    {
LABEL_7:
      uint64_t v38 = a1;
      uint64_t v39 = v15;
      uint64_t v20 = (v29 - 1) & v29;
      unint64_t v21 = __clz(__rbit64(v29)) + (v27 << 6);
      int64_t v18 = v27;
      goto LABEL_3;
    }
    int64_t v30 = v16 + 2;
    int64_t v18 = v16 + 1;
    if (v16 + 2 < v28)
    {
      unint64_t v29 = *(void *)(v15 + 8 * v30);
      if (v29)
      {
LABEL_10:
        int64_t v27 = v30;
        goto LABEL_7;
      }
      int64_t v18 = v16 + 2;
      if (v16 + 3 < v28)
      {
        unint64_t v29 = *(void *)(v15 + 8 * (v16 + 3));
        if (v29)
        {
          int64_t v27 = v16 + 3;
          goto LABEL_7;
        }
        int64_t v30 = v16 + 4;
        int64_t v18 = v16 + 3;
        if (v16 + 4 < v28)
        {
          unint64_t v29 = *(void *)(v15 + 8 * v30);
          if (v29) {
            goto LABEL_10;
          }
          int64_t v27 = v16 + 5;
          int64_t v18 = v16 + 4;
          if (v16 + 5 < v28)
          {
            unint64_t v29 = *(void *)(v15 + 8 * v27);
            if (v29) {
              goto LABEL_7;
            }
            int64_t v18 = v28 - 1;
            int64_t v31 = v16 + 6;
            while (v28 != v31)
            {
              unint64_t v29 = *(void *)(v15 + 8 * v31++);
              if (v29)
              {
                int64_t v27 = v31 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v23 = v14;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v13, 1, 1, v3);
  uint64_t v20 = 0;
LABEL_23:
  *uint64_t v1 = v23;
  v1[1] = v15;
  v1[2] = v40;
  v1[3] = v18;
  v1[4] = v20;
  BOOL v32 = (void (*)(uint64_t))v1[5];
  sub_100013B50((uint64_t)v13, (uint64_t)v10, &qword_1003F3328);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1)
  {
    uint64_t v33 = sub_100044014(&qword_1003F0028);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(a1, 1, 1, v33);
  }
  else
  {
    uint64_t v34 = (uint64_t)v10;
    uint64_t v35 = (uint64_t)v37;
    sub_100013B50(v34, (uint64_t)v37, &qword_1003F3308);
    v32(v35);
    sub_10000A520(v35, &qword_1003F3308);
    uint64_t v36 = sub_100044014(&qword_1003F0028);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(a1, 0, 1, v36);
  }
}

uint64_t sub_100292084(uint64_t a1, int *a2)
{
  *(void *)(v2 + 24) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_100292164;
  return v5(v2 + 16);
}

uint64_t sub_100292164()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 24);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

void *sub_100292294(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v51 = type metadata accessor for Handle();
  uint64_t v6 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v8 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Friend();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v44 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v34 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v37 = (char *)v34 - v17;
  __chkstk_darwin(v16);
  uint64_t v36 = (char *)v34 - v18;
  uint64_t v46 = *(void *)(a1 + 16);
  if (!v46) {
    return &_swiftEmptyArrayStorage;
  }
  v34[1] = a1;
  v34[2] = v3;
  uint64_t v40 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v19 = *(void *)(a2 + 16);
  uint64_t v39 = *(void *)(v6 + 72);
  uint64_t v20 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v49 = (void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v50 = v10 + 16;
  uint64_t v43 = (void (**)(char *, char *, uint64_t))(v10 + 32);
  swift_bridgeObjectRetain();
  uint64_t v21 = 0;
  uint64_t v22 = &_swiftEmptyArrayStorage;
  uint64_t v35 = v9;
  uint64_t v41 = v10;
  uint64_t v42 = a2;
  uint64_t v38 = v19;
  do
  {
    if (v19)
    {
      uint64_t v47 = v21;
      uint64_t v48 = v22;
      unint64_t v45 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      uint64_t v24 = a2 + v45;
      uint64_t v52 = *(void *)(v10 + 72);
      uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
      swift_bridgeObjectRetain();
      uint64_t v26 = v19;
      while (1)
      {
        v25(v15, v24, v9);
        Friend.handle.getter();
        char v27 = static Handle.== infix(_:_:)();
        (*v20)(v8, v51);
        if (v27) {
          break;
        }
        (*v49)(v15, v9);
        v24 += v52;
        if (!--v26)
        {
          a2 = v42;
          swift_bridgeObjectRelease();
          uint64_t v10 = v41;
          uint64_t v19 = v38;
          uint64_t v22 = v48;
          goto LABEL_4;
        }
      }
      a2 = v42;
      swift_bridgeObjectRelease();
      int64_t v28 = *v43;
      unint64_t v29 = v37;
      (*v43)(v37, v15, v9);
      int64_t v30 = v36;
      v28(v36, v29, v9);
      v28(v44, v30, v9);
      uint64_t v22 = v48;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v22 = (void *)sub_10003D990(0, v22[2] + 1, 1, (unint64_t)v22);
      }
      uint64_t v19 = v38;
      unint64_t v32 = v22[2];
      unint64_t v31 = v22[3];
      if (v32 >= v31 >> 1) {
        uint64_t v22 = (void *)sub_10003D990(v31 > 1, v32 + 1, 1, (unint64_t)v22);
      }
      v22[2] = v32 + 1;
      uint64_t v23 = (char *)v22 + v45 + v32 * v52;
      uint64_t v9 = v35;
      v28(v23, v44, v35);
      uint64_t v10 = v41;
LABEL_4:
      uint64_t v21 = v47;
    }
    ++v21;
  }
  while (v21 != v46);
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_1002926AC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v9 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  *uint64_t v10 = v3;
  v10[1] = sub_10004A274;
  return sub_10028FDE4(a1, a2, v6, v7, v9, v8);
}

uint64_t sub_100292778(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_10004A274;
  return sub_10029043C(a1, v4, v5, v6, v7);
}

uint64_t sub_100292844(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 32);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_10004A274;
  *(_OWORD *)(v4 + 88) = v5;
  *(void *)(v4 + 80) = a1;
  return _swift_task_switch(sub_100291008, 0, 0);
}

uint64_t sub_1002928F8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100292930(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v9 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  *uint64_t v10 = v3;
  v10[1] = sub_10004A274;
  return sub_100011E5C(a1, a2, v6, v7, v9, v8);
}

uint64_t sub_1002929F8()
{
  uint64_t v1 = type metadata accessor for LocationRequest();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100292AE0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for LocationRequest() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1 + v5;
  uint64_t v7 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[3] = v6;
  v8[4] = v7;
  v8[1] = sub_10004A274;
  v8[2] = a1;
  return _swift_task_switch(sub_10028DA00, 0, 0);
}

uint64_t sub_100292BFC()
{
  uint64_t v1 = type metadata accessor for LocationRequest();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100292CEC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for LocationRequest() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1 + v5;
  uint64_t v7 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_100018CD0;
  v8[5] = v6;
  v8[6] = v7;
  v8[4] = a1;
  return _swift_task_switch(sub_10028E178, 0, 0);
}

uint64_t sub_100292E0C(uint64_t a1)
{
  return sub_10028DC64(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100292E14()
{
  uint64_t v1 = type metadata accessor for LocationRequest();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = sub_100044014(&qword_1003F35D8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

uint64_t sub_100292F70()
{
  uint64_t v2 = *(void *)(type metadata accessor for LocationRequest() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(sub_100044014(&qword_1003F35D8) - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v8 = v0 + v3;
  uint64_t v9 = v0 + v6;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v10;
  *uint64_t v10 = v1;
  v10[1] = sub_100018CD0;
  return sub_10028DF30(v7, v8, v9);
}

uint64_t sub_1002930B0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  int64_t v28 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  char v27 = (char *)&v21 - v6;
  uint64_t v7 = sub_100044014(&qword_1003ECFB8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = v11 + 40;
    uint64_t v24 = (uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 32);
    uint64_t v25 = v12;
    uint64_t v22 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v23 = v14;
    uint64_t v26 = v11;
    uint64_t v16 = (void (**)(uint64_t, uint64_t))(v11 - 8);
    unint64_t v21 = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v18 = (uint64_t)v27;
    uint64_t v17 = v28;
    while (1)
    {
      v25(v9, v13, v2);
      uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v9, 0, 1, v2);
      uint64_t result = (*v24)(v9, 1, v2);
      if (result == 1) {
        break;
      }
      (*v22)(v17, v9, v2);
      sub_100154694(v18, v17);
      (*v16)(v18, v2);
      v13 += v23;
      if (!--v10) {
        return v19(v9, 1, 1, v2);
      }
    }
  }
  else
  {
    uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    return v19(v9, 1, 1, v2);
  }
  return result;
}

uint64_t sub_100293308()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100293354(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 136) = a1;
  *(void *)(v3 + 144) = v1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  if (v1) {
    uint64_t v4 = sub_10029380C;
  }
  else {
    uint64_t v4 = sub_100293490;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_100293490()
{
  uint64_t v18 = v0;
  uint64_t v2 = v0[17];
  uint64_t v1 = v0[18];
  type metadata accessor for PropertyListEncoder();
  swift_allocObject();
  PropertyListEncoder.init()();
  v0[5] = v2;
  sub_100044014(&qword_1003F03F8);
  sub_10027B3D4();
  uint64_t v3 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  if (v1)
  {
    (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
    swift_release();
    swift_bridgeObjectRelease();
    if (qword_1003EC408 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_100044058(v5, (uint64_t)qword_10040C290);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      v17[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136446466;
      v0[2] = sub_100037004(0xD000000000000026, 0x8000000100378FB0, v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v8 + 12) = 2082;
      v0[3] = v1;
      swift_errorRetain();
      sub_100044014(&qword_1003F4B30);
      uint64_t v9 = String.init<A>(describing:)();
      v0[4] = sub_100037004(v9, v10, v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s trampoline error: %{public}s", (uint8_t *)v8, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    uint64_t v14 = (void (*)(void, unint64_t, uint64_t))v0[9];
    swift_errorRetain();
    v14(0, 0xF000000000000000, v1);
    swift_errorRelease();
    swift_errorRelease();
  }
  else
  {
    uint64_t v11 = v3;
    unint64_t v12 = v4;
    uint64_t v13 = (void (*)(uint64_t, unint64_t, void))v0[9];
    swift_release();
    swift_bridgeObjectRelease();
    sub_100022C64(v11, v12);
    v13(v11, v12, 0);
    sub_100044090(v11, v12);
    sub_100044090(v11, v12);
    (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
  }
  swift_task_dealloc();
  unint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_10029380C()
{
  unint64_t v12 = v0;
  (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
  uint64_t v1 = v0[18];
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100044058(v2, (uint64_t)qword_10040C290);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446466;
    v0[2] = sub_100037004(0xD000000000000026, 0x8000000100378FB0, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v5 + 12) = 2082;
    v0[3] = v1;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v6 = String.init<A>(describing:)();
    v0[4] = sub_100037004(v6, v7, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%{public}s trampoline error: %{public}s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v8 = (void (*)(void, unint64_t, uint64_t))v0[9];
  swift_errorRetain();
  v8(0, 0xF000000000000000, v1);
  swift_errorRelease();
  swift_errorRelease();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100293AA8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for Transaction();
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a3;
  v11[3] = a4;
  v11[4] = a5;
  v11[5] = a1;
  v11[6] = a2;
  v11[7] = v5;
  swift_retain();
  sub_100022C64(a1, a2);
  swift_retain();
  static Transaction.asyncTask(name:block:)();

  return swift_release();
}

uint64_t sub_100293B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  v6[10] = a5;
  v6[11] = a6;
  v6[8] = a3;
  v6[9] = a4;
  v6[6] = a1;
  v6[7] = a2;
  v6[12] = swift_isaMask & *a6;
  sub_100044014(&qword_1003F36E0);
  v6[13] = swift_task_alloc();
  uint64_t Priority = type metadata accessor for LocatePriority();
  v6[14] = Priority;
  v6[15] = *(void *)(Priority - 8);
  v6[16] = swift_task_alloc();
  return _swift_task_switch(sub_100293CB0, 0, 0);
}

uint64_t sub_100293CB0()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[13];
  LocatePriority.init(rawValue:)();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    os_log_type_t v4 = (void (*)(void))v0[7];
    sub_10029795C(v0[13]);
    sub_100085350();
    swift_allocError();
    *uint64_t v5 = 4;
    v4();
    swift_errorRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
  else
  {
    (*(void (**)(void, void, void))(v0[15] + 32))(v0[16], v0[13], v0[14]);
    type metadata accessor for PropertyListDecoder();
    swift_allocObject();
    PropertyListDecoder.init()();
    sub_100044014(&qword_1003F31C8);
    sub_1002974CC();
    dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
    uint64_t v6 = v0[11];
    swift_release();
    v0[17] = v0[2];
    return _swift_task_switch(sub_1002940C8, v6, 0);
  }
}

uint64_t sub_1002940C8()
{
  *(void *)(v0 + 144) = swift_unknownObjectWeakLoadStrong();
  return _swift_task_switch(sub_100294138, 0, 0);
}

uint64_t sub_100294138()
{
  if (*(void *)(v0 + 144))
  {
    uint64_t v1 = *(void *)(v0 + 96);
    uint64_t v2 = *(void *)(v1 + 80);
    uint64_t v3 = *(void *)(v1 + 88);
    os_log_type_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v4;
    *os_log_type_t v4 = v0;
    v4[1] = sub_100294274;
    uint64_t v5 = *(void *)(v0 + 136);
    uint64_t v6 = *(void *)(v0 + 128);
    return dispatch thunk of LocationProtocol.stopRefreshingLocation(for:priority:)(v5, v6, v2, v3);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = *(void *)(v0 + 120);
    uint64_t v7 = *(void *)(v0 + 128);
    uint64_t v9 = *(void *)(v0 + 112);
    (*(void (**)(void))(v0 + 56))(0);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
}

uint64_t sub_100294274()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_10029447C;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v2 = sub_1002943D8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002943D8()
{
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 112);
  (*(void (**)(void))(v0 + 56))(0);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10029447C()
{
  uint64_t v13 = v0;
  (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
  uint64_t v1 = v0[20];
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100044058(v2, (uint64_t)qword_10040C290);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446466;
    v0[3] = sub_100037004(0xD000000000000030, 0x8000000100378F30, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v5 + 12) = 2082;
    v0[4] = v1;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v6 = String.init<A>(describing:)();
    v0[5] = sub_100037004(v6, v7, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%{public}s trampoline error: %{public}s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v8 = (void (*)(void))v0[7];
  sub_100085350();
  swift_allocError();
  unsigned char *v9 = 0;
  v8();
  swift_errorRelease();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_100294734(int a1, int a2, void *a3, uint64_t a4, void *aBlock)
{
  unint64_t v7 = _Block_copy(aBlock);
  id v8 = a3;
  swift_retain();
  uint64_t v9 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v11 = v10;

  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v7;
  sub_100293AA8(v9, v11, a4, (uint64_t)sub_10004B288, v12);
  swift_release();
  sub_100044090(v9, v11);

  return swift_release();
}

uint64_t sub_100294814(uint64_t a1, uint64_t a2)
{
  return sub_10000A758(a1, a2);
}

uint64_t sub_100294840(void *a1, uint64_t a2, uint64_t a3)
{
  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  v3[8] = swift_isaMask & *a1;
  return _swift_task_switch(sub_1002948A0, a1, 0);
}

uint64_t sub_1002948A0()
{
  *(void *)(v0 + 72) = swift_unknownObjectWeakLoadStrong();
  return _swift_task_switch(sub_100294910, 0, 0);
}

uint64_t sub_100294910()
{
  if (*(void *)(v0 + 72))
  {
    uint64_t v1 = *(void *)(v0 + 64);
    uint64_t v2 = *(void *)(v1 + 80);
    uint64_t v3 = *(void *)(v1 + 88);
    os_log_type_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v4;
    *os_log_type_t v4 = v0;
    v4[1] = sub_100294A08;
    return dispatch thunk of LocationProtocol.stopRefreshingAllLocations()(v2, v3);
  }
  else
  {
    (*(void (**)(void))(v0 + 48))(0);
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_100294A08()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100294B8C;
  }
  else
  {
    swift_unknownObjectRelease();
    uint64_t v2 = sub_100294B24;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100294B24()
{
  (*(void (**)(void))(v0 + 48))(0);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100294B8C()
{
  uint64_t v14 = v0;
  swift_unknownObjectRelease();
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100044058(v1, (uint64_t)qword_10040C290);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[11];
  if (v4)
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446466;
    v0[2] = sub_100037004(0xD000000000000027, 0x8000000100378ED0, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v6 + 12) = 2082;
    v0[3] = v5;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v7 = String.init<A>(describing:)();
    v0[4] = sub_100037004(v7, v8, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%{public}s trampoline error: %{public}s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v9 = (void (*)(void))v0[6];
  sub_100085350();
  swift_allocError();
  *unint64_t v10 = 0;
  v9();
  swift_errorRelease();
  swift_errorRelease();
  unint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_100294E2C(int a1, int a2, void *a3)
{
  return sub_1002964A8(a1, a2, a3, (uint64_t)&unk_1003E4150, (uint64_t)sub_10004B28C, (void (*)(uint64_t, uint64_t))sub_100294814);
}

uint64_t sub_100294E60(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10000F5A4(a1, a2, a3, a4);
}

uint64_t sub_100294E8C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  v5[10] = a4;
  v5[11] = a5;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  v5[12] = swift_isaMask & *a3;
  return _swift_task_switch(sub_100294EEC, 0, 0);
}

uint64_t sub_100294EEC()
{
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  PropertyListDecoder.init()();
  sub_100044014(&qword_1003F31C8);
  sub_1002974CC();
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  uint64_t v1 = v0[9];
  swift_release();
  v0[13] = v0[2];
  return _swift_task_switch(sub_100295228, v1, 0);
}

uint64_t sub_100295228()
{
  *(void *)(v0 + 112) = swift_unknownObjectWeakLoadStrong();
  return _swift_task_switch(sub_100295298, 0, 0);
}

uint64_t sub_100295298()
{
  if (v0[14])
  {
    uint64_t v1 = v0[12];
    uint64_t v2 = *(void *)(v1 + 80);
    uint64_t v3 = *(void *)(v1 + 88);
    BOOL v4 = (void *)swift_task_alloc();
    v0[15] = v4;
    *BOOL v4 = v0;
    v4[1] = sub_1002953D0;
    uint64_t v5 = v0[13];
    return dispatch thunk of LocationProtocol.locations(for:)(v5, v2, v3);
  }
  else
  {
    uint64_t v6 = (void (*)(void, unint64_t, uint64_t))v0[10];
    swift_bridgeObjectRelease();
    sub_100085350();
    uint64_t v7 = swift_allocError();
    unsigned char *v8 = 0;
    v6(0, 0xF000000000000000, v7);
    swift_errorRelease();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
}

uint64_t sub_1002953D0(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 128) = a1;
  *(void *)(v3 + 136) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    BOOL v4 = sub_100295880;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    BOOL v4 = sub_10029553C;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_10029553C()
{
  uint64_t v18 = v0;
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  type metadata accessor for PropertyListEncoder();
  swift_allocObject();
  PropertyListEncoder.init()();
  v0[6] = v2;
  sub_100044014(&qword_1003F03F8);
  sub_10027B3D4();
  uint64_t v3 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  if (v1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    if (qword_1003EC408 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_100044058(v5, (uint64_t)qword_10040C290);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      v17[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136446466;
      v0[3] = sub_100037004(0xD00000000000001ALL, 0x8000000100378EB0, v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v8 + 12) = 2082;
      v0[4] = v1;
      swift_errorRetain();
      sub_100044014(&qword_1003F4B30);
      uint64_t v9 = String.init<A>(describing:)();
      v0[5] = sub_100037004(v9, v10, v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s trampoline error: %{public}s", (uint8_t *)v8, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    uint64_t v14 = (void (*)(void, unint64_t, uint64_t))v0[10];
    swift_errorRetain();
    v14(0, 0xF000000000000000, v1);
    swift_errorRelease();
    swift_errorRelease();
  }
  else
  {
    uint64_t v11 = v3;
    unint64_t v12 = v4;
    uint64_t v13 = (void (*)(uint64_t, unint64_t, void))v0[10];
    swift_release();
    swift_bridgeObjectRelease();
    sub_100022C64(v11, v12);
    v13(v11, v12, 0);
    sub_100044090(v11, v12);
    sub_100044090(v11, v12);
  }
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_100295880()
{
  unint64_t v12 = v0;
  uint64_t v1 = v0[17];
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100044058(v2, (uint64_t)qword_10040C290);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446466;
    v0[3] = sub_100037004(0xD00000000000001ALL, 0x8000000100378EB0, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v5 + 12) = 2082;
    v0[4] = v1;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v6 = String.init<A>(describing:)();
    v0[5] = sub_100037004(v6, v7, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%{public}s trampoline error: %{public}s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v8 = (void (*)(void, unint64_t, uint64_t))v0[10];
  swift_errorRetain();
  v8(0, 0xF000000000000000, v1);
  swift_errorRelease();
  swift_errorRelease();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100295AFC(int a1, int a2, void *a3, void *a4)
{
  return sub_100011658(a1, a2, a3, a4, (uint64_t)&unk_1003E4128, (uint64_t)sub_1001F5CD4, (void (*)(uint64_t, unint64_t, uint64_t, uint64_t))sub_100294E60);
}

uint64_t sub_100295B30(uint64_t a1, uint64_t a2)
{
  return sub_10000A758(a1, a2);
}

uint64_t sub_100295B5C(void *a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  v3[9] = swift_isaMask & *a1;
  return _swift_task_switch(sub_100295BBC, a1, 0);
}

uint64_t sub_100295BBC()
{
  *(void *)(v0 + 80) = swift_unknownObjectWeakLoadStrong();
  return _swift_task_switch(sub_100295C2C, 0, 0);
}

uint64_t sub_100295C2C()
{
  if (v0[10])
  {
    uint64_t v1 = v0[9];
    uint64_t v2 = *(void *)(v1 + 80);
    uint64_t v3 = *(void *)(v1 + 88);
    os_log_type_t v4 = (void *)swift_task_alloc();
    v0[11] = v4;
    *os_log_type_t v4 = v0;
    v4[1] = sub_100295D58;
    return dispatch thunk of LocationProtocol.subscribeToBackgroundProactiveLocations()(v2, v3);
  }
  else
  {
    uint64_t v5 = (void (*)(void, unint64_t, uint64_t))v0[7];
    sub_100085350();
    uint64_t v6 = swift_allocError();
    *unint64_t v7 = 0;
    v5(0, 0xF000000000000000, v6);
    swift_errorRelease();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_100295D58(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 96) = a1;
  *(void *)(v3 + 104) = v1;
  swift_task_dealloc();
  if (v1)
  {
    os_log_type_t v4 = sub_1002961D4;
  }
  else
  {
    swift_unknownObjectRelease();
    os_log_type_t v4 = sub_100295E74;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_100295E74()
{
  uint64_t v20 = v0;
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  type metadata accessor for PropertyListEncoder();
  swift_allocObject();
  PropertyListEncoder.init()();
  v0[5] = v2;
  sub_100044014(&qword_1003F03F8);
  sub_10027B3D4();
  uint64_t v3 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  if (v1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    if (qword_1003EC408 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_100044058(v5, (uint64_t)qword_10040C290);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      v19[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136446466;
      v0[2] = sub_100037004(0xD000000000000034, 0x8000000100378E50, v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v8 + 12) = 2082;
      v0[3] = v1;
      swift_errorRetain();
      sub_100044014(&qword_1003F4B30);
      uint64_t v9 = String.init<A>(describing:)();
      v0[4] = sub_100037004(v9, v10, v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s trampoline error: %{public}s", (uint8_t *)v8, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    uint64_t v14 = (void (*)(void, unint64_t, uint64_t))v0[7];
    sub_100085350();
    uint64_t v15 = swift_allocError();
    *uint64_t v16 = 0;
    v14(0, 0xF000000000000000, v15);
    swift_errorRelease();
    swift_errorRelease();
  }
  else
  {
    uint64_t v11 = v3;
    unint64_t v12 = v4;
    uint64_t v13 = (void (*)(uint64_t, unint64_t, void))v0[7];
    swift_release();
    swift_bridgeObjectRelease();
    sub_100022C64(v11, v12);
    v13(v11, v12, 0);
    sub_100044090(v11, v12);
    sub_100044090(v11, v12);
  }
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_1002961D4()
{
  uint64_t v14 = v0;
  swift_unknownObjectRelease();
  uint64_t v1 = v0[13];
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100044058(v2, (uint64_t)qword_10040C290);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446466;
    v0[2] = sub_100037004(0xD000000000000034, 0x8000000100378E50, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v5 + 12) = 2082;
    v0[3] = v1;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v6 = String.init<A>(describing:)();
    v0[4] = sub_100037004(v6, v7, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%{public}s trampoline error: %{public}s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v8 = (void (*)(void, unint64_t, uint64_t))v0[7];
  sub_100085350();
  uint64_t v9 = swift_allocError();
  *unint64_t v10 = 0;
  v8(0, 0xF000000000000000, v9);
  swift_errorRelease();
  swift_errorRelease();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_100296474(int a1, int a2, void *a3)
{
  return sub_1002964A8(a1, a2, a3, (uint64_t)&unk_1003E4100, (uint64_t)sub_1001F5CD4, (void (*)(uint64_t, uint64_t))sub_100295B30);
}

uint64_t sub_1002964A8(int a1, int a2, void *aBlock, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t))
{
  uint64_t v8 = _Block_copy(aBlock);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  swift_retain();
  a6(a5, v9);
  swift_release();

  return swift_release();
}

uint64_t sub_100296540(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = swift_isaMask & *v4;
  type metadata accessor for Transaction();
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = *(void *)(v9 + 80);
  v11[3] = *(void *)(v9 + 88);
  v11[4] = v10;
  v11[5] = a1;
  v11[6] = a2;
  v11[7] = a3;
  v11[8] = a4;
  swift_retain();
  sub_100022C64(a1, a2);
  swift_retain();
  static Transaction.asyncTask(name:block:)();
  swift_release();

  return swift_release();
}

uint64_t sub_100296688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[15] = a6;
  v7[16] = a7;
  v7[13] = a4;
  v7[14] = a5;
  v7[11] = a2;
  v7[12] = a3;
  v7[10] = a1;
  return _swift_task_switch(sub_1002966B4, 0, 0);
}

uint64_t sub_1002966B4()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[17] = Strong;
  if (Strong)
  {
    uint64_t v2 = Strong;
    type metadata accessor for PropertyListDecoder();
    swift_allocObject();
    PropertyListDecoder.init()();
    sub_100044014(&qword_1003F31C8);
    sub_1002974CC();
    dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
    swift_release();
    v0[18] = v0[5];
    return _swift_task_switch(sub_100296A20, v2, 0);
  }
  else
  {
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
}

uint64_t sub_100296A20()
{
  *(void *)(v0 + 152) = swift_unknownObjectWeakLoadStrong();
  return _swift_task_switch(sub_100296A90, 0, 0);
}

uint64_t sub_100296A90()
{
  if (v0[19])
  {
    uint64_t v1 = (void *)swift_task_alloc();
    v0[20] = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_100296BC4;
    uint64_t v2 = v0[18];
    uint64_t v3 = v0[15];
    uint64_t v4 = v0[16];
    return dispatch thunk of LocationProtocol.latestLocations(for:)(v2, v3, v4);
  }
  else
  {
    uint64_t v5 = (void (*)(void, unint64_t, uint64_t))v0[13];
    swift_bridgeObjectRelease();
    sub_100085350();
    uint64_t v6 = swift_allocError();
    *unint64_t v7 = 0;
    v5(0, 0xF000000000000000, v6);
    swift_release();
    swift_errorRelease();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_100296BC4(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 168) = a1;
  *(void *)(v3 + 176) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_10029708C;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v4 = sub_100296D30;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_100296D30()
{
  uint64_t v18 = v0;
  uint64_t v2 = v0[21];
  uint64_t v1 = v0[22];
  type metadata accessor for PropertyListEncoder();
  swift_allocObject();
  PropertyListEncoder.init()();
  v0[9] = v2;
  sub_100044014(&qword_1003F03F8);
  sub_10027B3D4();
  uint64_t v3 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  if (v1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    if (qword_1003EC408 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_100044058(v5, (uint64_t)qword_10040C290);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      v17[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136446466;
      v0[6] = sub_100037004(0xD000000000000020, 0x8000000100378E20, v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v8 + 12) = 2082;
      v0[7] = v1;
      swift_errorRetain();
      sub_100044014(&qword_1003F4B30);
      uint64_t v9 = String.init<A>(describing:)();
      v0[8] = sub_100037004(v9, v10, v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s trampoline error: %{public}s", (uint8_t *)v8, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    uint64_t v14 = (void (*)(void, unint64_t, uint64_t))v0[13];
    swift_errorRetain();
    v14(0, 0xF000000000000000, v1);
    swift_release();
    swift_errorRelease();
    swift_errorRelease();
  }
  else
  {
    uint64_t v11 = v3;
    unint64_t v12 = v4;
    uint64_t v13 = (void (*)(uint64_t, unint64_t, void))v0[13];
    swift_release();
    swift_bridgeObjectRelease();
    sub_100022C64(v11, v12);
    v13(v11, v12, 0);
    swift_release();
    sub_100044090(v11, v12);
    sub_100044090(v11, v12);
  }
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_10029708C()
{
  unint64_t v12 = v0;
  uint64_t v1 = v0[22];
  if (qword_1003EC408 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100044058(v2, (uint64_t)qword_10040C290);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446466;
    v0[6] = sub_100037004(0xD000000000000020, 0x8000000100378E20, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v5 + 12) = 2082;
    v0[7] = v1;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v6 = String.init<A>(describing:)();
    v0[8] = sub_100037004(v6, v7, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%{public}s trampoline error: %{public}s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v8 = (void (*)(void, unint64_t, uint64_t))v0[13];
  swift_errorRetain();
  v8(0, 0xF000000000000000, v1);
  swift_release();
  swift_errorRelease();
  swift_errorRelease();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100297314(int a1, int a2, void *a3, void *a4)
{
  return sub_100011658(a1, a2, a3, a4, (uint64_t)&unk_1003E40D8, (uint64_t)sub_100171AE0, (void (*)(uint64_t, unint64_t, uint64_t, uint64_t))sub_100296540);
}

void sub_100297348()
{
}

uint64_t _s10TrampolineCMa_0()
{
  return sub_1001F5C54();
}

uint64_t sub_100297378()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002973B0()
{
  swift_release();
  sub_100044090(*(void *)(v0 + 40), *(void *)(v0 + 48));
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1002973F8()
{
  long long v7 = *(_OWORD *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 56);
  long long v5 = *(_OWORD *)(v0 + 16);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_10004A274;
  *(_OWORD *)(v3 + 120) = v5;
  *(_OWORD *)(v3 + 104) = v4;
  *(void *)(v3 + 96) = v2;
  *(_OWORD *)(v3 + 80) = v7;
  return _swift_task_switch(sub_1002966B4, 0, 0);
}

unint64_t sub_1002974CC()
{
  unint64_t result = qword_1003F3698;
  if (!qword_1003F3698)
  {
    sub_10004AE58(&qword_1003F31C8);
    sub_10004F4A4(&qword_1003EEAE8, (void (*)(uint64_t))&type metadata accessor for Handle);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1003F3698);
  }
  return result;
}

uint64_t sub_100297574()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 16);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_10004A274;
  *(void *)(v3 + 64) = v2;
  *(_OWORD *)(v3 + 48) = v4;
  *(void *)(v3 + 72) = swift_isaMask & *(void *)v4;
  return _swift_task_switch(sub_100295BBC, v4, 0);
}

uint64_t sub_100297664()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v5;
  *(void *)uint64_t v5 = v1;
  *(void *)(v5 + 8) = sub_10004A274;
  *(void *)(v5 + 88) = v4;
  *(_OWORD *)(v5 + 72) = v6;
  *(void *)(v5 + 56) = v2;
  *(void *)(v5 + 64) = v3;
  *(void *)(v5 + 96) = swift_isaMask & *(void *)v6;
  return _swift_task_switch(sub_100294EEC, 0, 0);
}

uint64_t sub_100297768()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 16);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_10004A274;
  *(void *)(v3 + 56) = v2;
  *(_OWORD *)(v3 + 40) = v4;
  *(void *)(v3 + 64) = swift_isaMask & *(void *)v4;
  return _swift_task_switch(sub_1002948A0, v4, 0);
}

uint64_t sub_100297854()
{
  swift_release();
  sub_100044090(*(void *)(v0 + 40), *(void *)(v0 + 48));
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10029789C()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v7 = v0[6];
  uint64_t v6 = (void *)v0[7];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  void *v8 = v1;
  v8[1] = sub_100018CD0;
  return sub_100293B80(v2, v3, v4, v5, v7, v6);
}

uint64_t sub_10029795C(uint64_t a1)
{
  uint64_t v2 = sub_100044014(&qword_1003F36E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1002979C0()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100297A0C(uint64_t a1)
{
  return sub_100297A54(a1, qword_10040C2C0);
}

uint64_t sub_100297A30(uint64_t a1)
{
  return sub_100297A54(a1, qword_10040C2D8);
}

uint64_t sub_100297A54(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = type metadata accessor for Logger();
  sub_100052FAC(v3, a2);
  sub_100044058(v3, (uint64_t)a2);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_100297ACC(uint64_t a1)
{
  return sub_100297B24(a1, qword_10040C2F0, &qword_1003EC410, (uint64_t)qword_10040C2C0);
}

uint64_t sub_100297AF8(uint64_t a1)
{
  return sub_100297B24(a1, qword_10040C308, &qword_1003EC418, (uint64_t)qword_10040C2D8);
}

uint64_t sub_100297B24(uint64_t a1, uint64_t *a2, void *a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for Logger();
  sub_100052FAC(v7, a2);
  uint64_t v8 = sub_100044058(v7, (uint64_t)a2);
  if (*a3 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_100044058(v7, a4);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v10(v8, v9, v7);
}

uint64_t sub_100297BEC()
{
  *(void *)(v1 + 696) = v0;
  return _swift_task_switch(sub_100297C0C, v0, 0);
}

uint64_t sub_100297C0C()
{
  if (qword_1003EC420 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100044058(v1, (uint64_t)qword_10040C2F0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "NIRangingService startup()", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = *(void *)(v0 + 696);

  id v6 = objc_allocWithZone((Class)sub_100044014(&qword_1003F39E8));
  uint64_t v7 = swift_retain();
  id v8 = sub_1002AB760(v7);
  *(void *)(v0 + 704) = v8;
  swift_release();
  uint64_t v9 = *(void **)(v5 + 128);
  *(void *)(v5 + 128) = v8;
  id v10 = v8;

  swift_retain();
  swift_asyncLet_begin();
  return _swift_asyncLet_get_throwing(v0 + 16);
}

uint64_t sub_100297DB4(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 712) = v2;
  if (v2) {
    uint64_t v4 = sub_100297E78;
  }
  else {
    uint64_t v4 = sub_100297DEC;
  }
  return _swift_asyncLet_finish(v3 + 16, a2, v4, v3 + 656);
}

uint64_t sub_100297DEC()
{
  return _swift_task_switch(sub_100297E08, *(void *)(v0 + 696), 0);
}

uint64_t sub_100297E08()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100297E78()
{
  return _swift_task_switch(sub_100297E94, *(void *)(v0 + 696), 0);
}

uint64_t sub_100297E94()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100297F04()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10004A274;
  return sub_100297F94();
}

uint64_t sub_100297F94()
{
  *(void *)(v1 + 72) = *v0;
  sub_100044014((uint64_t *)&unk_1003F3C10);
  *(void *)(v1 + 80) = swift_task_alloc();
  return _swift_task_switch(sub_10029804C, v0, 0);
}

uint64_t sub_10029804C()
{
  uint64_t v19 = v0;
  uint64_t My = type metadata accessor for Feature.FindMy();
  v0[5] = My;
  v0[6] = sub_1002ACF78(&qword_1003ECEC8, (void (*)(uint64_t))&type metadata accessor for Feature.FindMy);
  uint64_t v2 = sub_10003E0F4(v0 + 2);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(My - 8) + 104))(v2, enum case for Feature.FindMy.redStripe(_:), My);
  LOBYTE(My) = isFeatureEnabled(_:)();
  sub_1000233E4((uint64_t)(v0 + 2));
  if ((My & 1) == 0)
  {
    if (qword_1003EC420 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_100044058(v9, (uint64_t)qword_10040C2F0);
    id v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v10, v11)) {
      goto LABEL_13;
    }
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136446210;
    v0[7] = sub_100037004(0xD00000000000001CLL, 0x80000001003791E0, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%{public}s Feature.FindMy.redStripe FF disabled.", v12, 0xCu);
    swift_arrayDestroy();
    goto LABEL_12;
  }
  if (sub_1002C890C())
  {
    uint64_t v4 = v0[9];
    uint64_t v3 = v0[10];
    uint64_t v5 = type metadata accessor for TaskPriority();
    id v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    v6(v3, 1, 1, v5);
    uint64_t v7 = (void *)swift_allocObject();
    v7[2] = 0;
    v7[3] = 0;
    v7[4] = v4;
    sub_10010405C(v3, (uint64_t)&unk_1003F39C8, (uint64_t)v7);
    swift_release();
    v6(v3, 1, 1, v5);
    id v8 = (void *)swift_allocObject();
    v8[2] = 0;
    v8[3] = 0;
    v8[4] = v4;
    sub_10010405C(v3, (uint64_t)&unk_1003F39D8, (uint64_t)v8);
    swift_release();
    goto LABEL_14;
  }
  if (qword_1003EC420 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_100044058(v13, (uint64_t)qword_10040C2F0);
  id v10 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136446210;
    v0[8] = sub_100037004(0xD00000000000001CLL, 0x80000001003791E0, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v10, v14, "%{public}s isFindingCapable == false.", v15, 0xCu);
    swift_arrayDestroy();
LABEL_12:
    swift_slowDealloc();
    swift_slowDealloc();
  }
LABEL_13:

LABEL_14:
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_1002984C8()
{
  uint64_t v1 = type metadata accessor for DarwinNotification();
  v0[2] = v1;
  v0[3] = *(void *)(v1 - 8);
  v0[4] = swift_task_alloc();
  v0[5] = swift_task_alloc();
  sub_100044014(&qword_1003F0E88);
  v0[6] = swift_task_alloc();
  uint64_t v2 = sub_100044014(&qword_1003F0E98);
  v0[7] = v2;
  v0[8] = *(void *)(v2 - 8);
  v0[9] = swift_task_alloc();
  uint64_t v3 = sub_100044014(&qword_1003F0E90);
  v0[10] = v3;
  v0[11] = *(void *)(v3 - 8);
  v0[12] = swift_task_alloc();
  return _swift_task_switch(sub_100298684, 0, 0);
}

uint64_t sub_100298684()
{
  if (qword_1003EC420 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  *(void *)(v0 + 104) = sub_100044058(v1, (uint64_t)qword_10040C2F0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Registering listener for Darwin notification: NILocalDeviceStartedInteractingWithTokenNotification", v4, 2u);
    swift_slowDealloc();
  }

  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1002987D4;
  return daemon.getter();
}

uint64_t sub_1002987D4(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 120) = a1;
  swift_task_dealloc();
  *(void *)(v2 + 128) = type metadata accessor for Daemon();
  sub_1002ACF78(&qword_1003F0E30, (void (*)(uint64_t))&type metadata accessor for Daemon);
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100298938, v4, v3);
}

uint64_t sub_100298938()
{
  *(void *)(v0 + 136) = Daemon.darwinNotificationHandler.getter();
  swift_release();
  type metadata accessor for DarwinNotificationHandler();
  sub_1002ACF78(&qword_1003F0EA0, (void (*)(uint64_t))&type metadata accessor for DarwinNotificationHandler);
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100298A10, v2, v1);
}

uint64_t sub_100298A10()
{
  dispatch thunk of DarwinNotificationHandler.asyncStream(name:)();
  swift_release();
  return _swift_task_switch(sub_100298A9C, 0, 0);
}

uint64_t sub_100298A9C()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[7];
  AsyncStream.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[18] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100298B78;
  uint64_t v5 = v0[10];
  uint64_t v6 = v0[6];
  return AsyncStream.Iterator.next(isolation:)(v6, 0, 0, v5);
}

uint64_t sub_100298B78()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100298C74, 0, 0);
}

uint64_t sub_100298C74()
{
  uint64_t v20 = v0;
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    uint64_t v7 = v0[4];
    uint64_t v6 = v0[5];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v6, v1, v2);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v7, v6, v2);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    BOOL v10 = os_log_type_enabled(v8, v9);
    uint64_t v11 = v0[4];
    uint64_t v12 = v0[2];
    uint64_t v13 = (void (**)(uint64_t, uint64_t))(v0[3] + 8);
    if (v10)
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315138;
      sub_1002ACF78(&qword_1003F39E0, (void (*)(uint64_t))&type metadata accessor for DarwinNotification);
      uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v14 + 4) = sub_100037004(v15, v16, &v19);
      swift_bridgeObjectRelease();
      uint64_t v17 = *v13;
      (*v13)(v11, v12);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Darwin NILocalDeviceStartedInteractingWithToken: %s", (uint8_t *)v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v17 = *v13;
      (*v13)(v0[4], v0[2]);
    }

    v0[19] = v17;
    uint64_t v18 = (void *)swift_task_alloc();
    v0[20] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_100298F6C;
    return daemon.getter();
  }
}

uint64_t sub_100298F6C(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  *(void *)(v3 + 168) = a1;
  swift_task_dealloc();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 176) = v5;
  uint64_t v6 = type metadata accessor for NITokenService();
  uint64_t v7 = sub_1002ACF78(&qword_1003ECCA8, (void (*)(uint64_t))&type metadata accessor for Daemon);
  uint64_t v8 = sub_1002ACF78(&qword_1003F1518, (void (*)(uint64_t))type metadata accessor for NITokenService);
  *uint64_t v5 = v4;
  v5[1] = sub_100299148;
  uint64_t v9 = *(void *)(v2 + 128);
  return ActorServiceDaemon.getService<A>()(v9, v6, v7, v8);
}

uint64_t sub_100299148(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v3[23] = a1;
  v3[24] = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_1002994B0, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v5 = (void *)swift_task_alloc();
    v3[25] = v5;
    *uint64_t v5 = v4;
    v5[1] = sub_1002992D0;
    return sub_10030AE4C();
  }
}

uint64_t sub_1002992D0()
{
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10029969C;
  }
  else {
    uint64_t v2 = sub_1002993E4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002993E4()
{
  swift_release();
  (*(void (**)(void, void))(v0 + 152))(*(void *)(v0 + 40), *(void *)(v0 + 16));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100298B78;
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 48);
  return AsyncStream.Iterator.next(isolation:)(v3, 0, 0, v2);
}

uint64_t sub_1002994B0()
{
  swift_release();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138543362;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v3 + 4) = v5;
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "ERROR: %{public}@", (uint8_t *)v3, 0xCu);
    sub_100044014(&qword_1003ECCC8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  swift_errorRelease();
  (*(void (**)(void, void))(v0 + 152))(*(void *)(v0 + 40), *(void *)(v0 + 16));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_100298B78;
  uint64_t v7 = *(void *)(v0 + 80);
  uint64_t v8 = *(void *)(v0 + 48);
  return AsyncStream.Iterator.next(isolation:)(v8, 0, 0, v7);
}

uint64_t sub_10029969C()
{
  swift_release();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138543362;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v3 + 4) = v5;
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "ERROR: %{public}@", (uint8_t *)v3, 0xCu);
    sub_100044014(&qword_1003ECCC8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  swift_errorRelease();
  (*(void (**)(void, void))(v0 + 152))(*(void *)(v0 + 40), *(void *)(v0 + 16));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_100298B78;
  uint64_t v7 = *(void *)(v0 + 80);
  uint64_t v8 = *(void *)(v0 + 48);
  return AsyncStream.Iterator.next(isolation:)(v8, 0, 0, v7);
}

uint64_t sub_100299888()
{
  uint64_t v1 = type metadata accessor for DarwinNotification();
  v0[2] = v1;
  v0[3] = *(void *)(v1 - 8);
  v0[4] = swift_task_alloc();
  v0[5] = swift_task_alloc();
  sub_100044014(&qword_1003F0E88);
  v0[6] = swift_task_alloc();
  uint64_t v2 = sub_100044014(&qword_1003F0E98);
  v0[7] = v2;
  v0[8] = *(void *)(v2 - 8);
  v0[9] = swift_task_alloc();
  uint64_t v3 = sub_100044014(&qword_1003F0E90);
  v0[10] = v3;
  v0[11] = *(void *)(v3 - 8);
  v0[12] = swift_task_alloc();
  return _swift_task_switch(sub_100299A44, 0, 0);
}

uint64_t sub_100299A44()
{
  if (qword_1003EC420 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  *(void *)(v0 + 104) = sub_100044058(v1, (uint64_t)qword_10040C2F0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Registering listener for Darwin notification: NILocalDeviceStoppedInteractingWithTokenNotification", v4, 2u);
    swift_slowDealloc();
  }

  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100299B94;
  return daemon.getter();
}

uint64_t sub_100299B94(uint64_t a1)
{
  *(void *)(*(void *)v1 + 120) = a1;
  swift_task_dealloc();
  type metadata accessor for Daemon();
  sub_1002ACF78(&qword_1003F0E30, (void (*)(uint64_t))&type metadata accessor for Daemon);
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100299CEC, v3, v2);
}

uint64_t sub_100299CEC()
{
  *(void *)(v0 + 128) = Daemon.darwinNotificationHandler.getter();
  swift_release();
  type metadata accessor for DarwinNotificationHandler();
  sub_1002ACF78(&qword_1003F0EA0, (void (*)(uint64_t))&type metadata accessor for DarwinNotificationHandler);
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100299DC4, v2, v1);
}

uint64_t sub_100299DC4()
{
  dispatch thunk of DarwinNotificationHandler.asyncStream(name:)();
  swift_release();
  return _swift_task_switch(sub_100299E50, 0, 0);
}

uint64_t sub_100299E50()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[7];
  AsyncStream.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[17] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100299F2C;
  uint64_t v5 = v0[10];
  uint64_t v6 = v0[6];
  return AsyncStream.Iterator.next(isolation:)(v6, 0, 0, v5);
}

uint64_t sub_100299F2C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10029A028, 0, 0);
}

uint64_t sub_10029A028()
{
  uint64_t v24 = v0;
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    uint64_t v7 = v0[4];
    uint64_t v6 = v0[5];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v6, v1, v2);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v7, v6, v2);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    BOOL v10 = os_log_type_enabled(v8, v9);
    uint64_t v11 = v0[4];
    uint64_t v12 = v0[5];
    uint64_t v13 = v0[2];
    uint64_t v14 = v0[3];
    if (v10)
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315138;
      sub_1002ACF78(&qword_1003F39E0, (void (*)(uint64_t))&type metadata accessor for DarwinNotification);
      uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v15 + 4) = sub_100037004(v16, v17, &v23);
      swift_bridgeObjectRelease();
      uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
      v18(v11, v13);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Darwin NILocalDeviceStoppedInteractingWithToken: %s", (uint8_t *)v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v18(v12, v13);
    }
    else
    {

      uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
      v19(v11, v13);
      v19(v12, v13);
    }
    uint64_t v20 = (void *)swift_task_alloc();
    v0[17] = v20;
    *uint64_t v20 = v0;
    v20[1] = sub_100299F2C;
    uint64_t v21 = v0[10];
    uint64_t v22 = v0[6];
    return AsyncStream.Iterator.next(isolation:)(v22, 0, 0, v21);
  }
}

uint64_t sub_10029A35C(uint64_t a1)
{
  v2[14] = a1;
  v2[15] = v1;
  uint64_t v3 = type metadata accessor for Date();
  v2[16] = v3;
  v2[17] = *(void *)(v3 - 8);
  v2[18] = swift_task_alloc();
  sub_100044014(&qword_1003F1530);
  v2[19] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for DiscoveryToken(0);
  v2[20] = v4;
  v2[21] = *(void *)(v4 - 8);
  v2[22] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Handle();
  v2[23] = v5;
  v2[24] = *(void *)(v5 - 8);
  v2[25] = swift_task_alloc();
  v2[26] = swift_task_alloc();
  return _swift_task_switch(sub_10029A514, v1, 0);
}

uint64_t sub_10029A514()
{
  char v27 = v0;
  uint64_t My = type metadata accessor for Feature.FindMy();
  v0[5] = My;
  v0[6] = sub_1002ACF78(&qword_1003ECEC8, (void (*)(uint64_t))&type metadata accessor for Feature.FindMy);
  uint64_t v2 = sub_10003E0F4(v0 + 2);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(My - 8) + 104))(v2, enum case for Feature.FindMy.redStripe(_:), My);
  LOBYTE(My) = isFeatureEnabled(_:)();
  sub_1000233E4((uint64_t)(v0 + 2));
  if (My)
  {
    if (qword_1003EC420 != -1) {
      swift_once();
    }
    uint64_t v3 = v0[14];
    uint64_t v4 = v0[26];
    uint64_t v5 = v0[23];
    uint64_t v6 = v0[24];
    uint64_t v7 = type metadata accessor for Logger();
    v0[27] = sub_100044058(v7, (uint64_t)qword_10040C2F0);
    uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    v0[28] = v8;
    v0[29] = (v6 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v8(v4, v3, v5);
    os_log_type_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    BOOL v11 = os_log_type_enabled(v9, v10);
    uint64_t v12 = v0[26];
    uint64_t v13 = v0[23];
    uint64_t v14 = v0[24];
    if (v11)
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136446723;
      v0[11] = sub_100037004(0xD000000000000011, 0x80000001003791C0, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v15 + 12) = 2160;
      v0[12] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v15 + 22) = 2081;
      sub_1002ACF78(&qword_1003F00F0, (void (*)(uint64_t))&type metadata accessor for Handle);
      uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[13] = sub_100037004(v16, v17, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
      v18(v12, v13);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "%{public}s %{private,mask.hash}s", (uint8_t *)v15, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
      v18(v0[26], v0[23]);
    }

    v0[30] = v18;
    uint64_t v25 = (void *)swift_task_alloc();
    v0[31] = v25;
    *uint64_t v25 = v0;
    v25[1] = sub_10029AA7C;
    return daemon.getter();
  }
  else
  {
    if (qword_1003EC420 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_100044058(v19, (uint64_t)qword_10040C2F0);
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136446210;
      v0[7] = sub_100037004(0xD000000000000011, 0x80000001003791C0, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "%{public}s Feature.FindMy.redStripe FF disabled.", v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v23 = (uint64_t (*)(void))v0[1];
    return v23();
  }
}

uint64_t sub_10029AA7C(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v9 = *v1;
  *(void *)(v2 + 256) = a1;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 264) = v3;
  uint64_t v4 = type metadata accessor for Daemon();
  uint64_t v5 = type metadata accessor for NITokenService();
  uint64_t v6 = sub_1002ACF78(&qword_1003ECCA8, (void (*)(uint64_t))&type metadata accessor for Daemon);
  uint64_t v7 = sub_1002ACF78(&qword_1003F1518, (void (*)(uint64_t))type metadata accessor for NITokenService);
  *uint64_t v3 = v9;
  v3[1] = sub_10029AC58;
  return ActorServiceDaemon.getService<A>()(v4, v5, v6, v7);
}

uint64_t sub_10029AC58(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[34] = a1;
  v3[35] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = v3[15];
    uint64_t v5 = sub_10029B584;
  }
  else
  {
    uint64_t v6 = v3[15];
    swift_release();
    uint64_t v5 = sub_10029AD80;
    uint64_t v4 = v6;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_10029AD80()
{
  static ReferenceClock.now.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[36] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10029AE24;
  uint64_t v3 = v0[18];
  uint64_t v2 = v0[19];
  uint64_t v4 = v0[14];
  return sub_1002DB10C(v2, v4, v3);
}

uint64_t sub_10029AE24()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 296) = v0;
  swift_task_dealloc();
  uint64_t v3 = v2[18];
  uint64_t v4 = v2[17];
  uint64_t v5 = v2[16];
  uint64_t v6 = v2[15];
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if (v0) {
    uint64_t v7 = sub_10029B628;
  }
  else {
    uint64_t v7 = sub_10029AFA0;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_10029AFA0()
{
  uint64_t v23 = v0;
  uint64_t v1 = v0[19];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[21] + 48))(v1, 1, v0[20]) == 1)
  {
    uint64_t v2 = (void (*)(uint64_t, uint64_t, uint64_t))v0[28];
    uint64_t v3 = v0[25];
    uint64_t v4 = v0[23];
    uint64_t v5 = v0[14];
    sub_10000A520(v1, &qword_1003F1530);
    v2(v3, v5, v4);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    BOOL v8 = os_log_type_enabled(v6, v7);
    uint64_t v9 = v0[25];
    uint64_t v10 = v0[23];
    if (v8)
    {
      os_log_type_t v21 = (void (*)(uint64_t, uint64_t))v0[30];
      uint64_t v11 = swift_slowAlloc();
      v22[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136446723;
      v0[8] = sub_100037004(0xD000000000000011, 0x80000001003791C0, v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v11 + 12) = 2160;
      v0[9] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v11 + 22) = 2081;
      sub_1002ACF78(&qword_1003F00F0, (void (*)(uint64_t))&type metadata accessor for Handle);
      uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[10] = sub_100037004(v12, v13, v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v21(v9, v10);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s cannot generate token for %{private,mask.hash}s!", (uint8_t *)v11, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      ((void (*)(void, void))v0[30])(v0[25], v0[23]);
    }

    sub_1002ACC80();
    swift_allocError();
    *uint64_t v19 = 18;
    swift_willThrow();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = (uint64_t (*)(void))v0[1];
    return v20();
  }
  else
  {
    uint64_t v14 = (void **)v0[22];
    sub_1002ACCD4(v1, (uint64_t)v14, type metadata accessor for DiscoveryToken);
    uint64_t v15 = *v14;
    v0[38] = *v14;
    id v16 = v15;
    unint64_t v17 = (void *)swift_task_alloc();
    v0[39] = v17;
    *unint64_t v17 = v0;
    v17[1] = sub_10029B380;
    return sub_10029C6A4((uint64_t)v16);
  }
}

uint64_t sub_10029B380()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 320) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void **)(v2 + 304);
  uint64_t v4 = *(void *)(v2 + 120);

  if (v0) {
    uint64_t v5 = sub_10029B6CC;
  }
  else {
    uint64_t v5 = sub_10029B4C8;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_10029B4C8()
{
  uint64_t v1 = *(void *)(v0 + 176);
  swift_release();
  sub_1002AC854(v1, type metadata accessor for DiscoveryToken);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10029B584()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10029B628()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10029B6CC()
{
  uint64_t v1 = *(void *)(v0 + 176);
  swift_release();
  sub_1002AC854(v1, type metadata accessor for DiscoveryToken);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10029B790()
{
  v1[10] = v0;
  uint64_t v2 = type metadata accessor for Date();
  v1[11] = v2;
  v1[12] = *(void *)(v2 - 8);
  v1[13] = swift_task_alloc();
  return _swift_task_switch(sub_10029B850, v0, 0);
}

uint64_t sub_10029B850()
{
  uint64_t v15 = v0;
  uint64_t My = type metadata accessor for Feature.FindMy();
  v0[5] = My;
  v0[6] = sub_1002ACF78(&qword_1003ECEC8, (void (*)(uint64_t))&type metadata accessor for Feature.FindMy);
  uint64_t v2 = sub_10003E0F4(v0 + 2);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(My - 8) + 104))(v2, enum case for Feature.FindMy.redStripe(_:), My);
  LOBYTE(My) = isFeatureEnabled(_:)();
  sub_1000233E4((uint64_t)(v0 + 2));
  if (My)
  {
    if (qword_1003EC420 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    v0[14] = sub_100044058(v3, (uint64_t)qword_10040C2F0);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136446210;
      v0[9] = sub_100037004(0xD000000000000013, 0x80000001003775F0, &v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "%{public}s", v6, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v7 = (void *)swift_task_alloc();
    v0[15] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_10029BC5C;
    return daemon.getter();
  }
  else
  {
    if (qword_1003EC420 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_100044058(v8, (uint64_t)qword_10040C2F0);
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136446210;
      v0[7] = sub_100037004(0xD000000000000013, 0x80000001003775F0, &v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "%{public}s Feature.FindMy.redStripe FF disabled.", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
}

uint64_t sub_10029BC5C(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v9 = *v1;
  *(void *)(v2 + 128) = a1;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 136) = v3;
  uint64_t v4 = type metadata accessor for Daemon();
  uint64_t v5 = type metadata accessor for NITokenService();
  uint64_t v6 = sub_1002ACF78(&qword_1003ECCA8, (void (*)(uint64_t))&type metadata accessor for Daemon);
  uint64_t v7 = sub_1002ACF78(&qword_1003F1518, (void (*)(uint64_t))type metadata accessor for NITokenService);
  *uint64_t v3 = v9;
  v3[1] = sub_10029BE38;
  return ActorServiceDaemon.getService<A>()(v4, v5, v6, v7);
}

uint64_t sub_10029BE38(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[18] = a1;
  v3[19] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = v3[10];
    uint64_t v5 = sub_10029C558;
  }
  else
  {
    uint64_t v6 = v3[10];
    swift_release();
    uint64_t v5 = sub_10029BF60;
    uint64_t v4 = v6;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_10029BF60()
{
  static ReferenceClock.now.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10029C000;
  return sub_1002DB264();
}

uint64_t sub_10029C000(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v4[21] = a1;
  v4[22] = v1;
  swift_task_dealloc();
  uint64_t v5 = v3[13];
  uint64_t v6 = v3[12];
  uint64_t v7 = v3[11];
  uint64_t v8 = v3[10];
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  if (v1) {
    uint64_t v9 = sub_10029C5C4;
  }
  else {
    uint64_t v9 = sub_10029C184;
  }
  return _swift_task_switch(v9, v8, 0);
}

uint64_t sub_10029C184()
{
  uint64_t v10 = v0;
  uint64_t v1 = v0[21];
  if (v1)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[23] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10029C3B8;
    return sub_10029C6A4(v1);
  }
  else
  {
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136446210;
      v0[8] = sub_100037004(0xD000000000000013, 0x80000001003775F0, &v9);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "%{public}s cannot generate owner token!", v6, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_1002ACC80();
    swift_allocError();
    *uint64_t v7 = 18;
    swift_willThrow();
    swift_release();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_10029C3B8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 192) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 80);
  if (v0) {
    uint64_t v4 = sub_10029C630;
  }
  else {
    uint64_t v4 = sub_10029C4E4;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10029C4E4()
{
  uint64_t v1 = *(void **)(v0 + 168);
  swift_release();

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10029C558()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10029C5C4()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10029C630()
{
  uint64_t v1 = *(void **)(v0 + 168);
  swift_release();

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10029C6A4(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  sub_100044014((uint64_t *)&unk_1003F3C10);
  v2[5] = swift_task_alloc();
  uint64_t v3 = sub_100044014(&qword_1003F3980);
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  uint64_t v4 = sub_100044014(&qword_1003F3988);
  v2[9] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[10] = v5;
  v2[11] = *(void *)(v5 + 64);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  sub_100044014(&qword_1003F38F8);
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  return _swift_task_switch(sub_10029C884, v1, 0);
}

uint64_t sub_10029C884()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v4 = sub_100044014(&qword_1003F1D48);
  *(void *)(v0 + 136) = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  *(void *)(v0 + 144) = v6;
  *(void *)(v0 + 152) = (v5 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v6(v1, 1, 1, v4);
  *(void *)(v0 + 160) = sub_10005A548(0, (unint64_t *)&unk_1003F3C40);
  *(void *)(swift_task_alloc() + 16) = v1;
  *(_DWORD *)(v0 + 224) = enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:);
  uint64_t v7 = *(void (**)(uint64_t))(v3 + 104);
  *(void *)(v0 + 168) = v7;
  *(void *)(v0 + 176) = (v3 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v7(v2);
  AsyncStream.init(_:bufferingPolicy:_:)();
  swift_task_dealloc();
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v8;
  void *v8 = v0;
  v8[1] = sub_10029CA28;
  return daemon.getter();
}

uint64_t sub_10029CA28(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v9 = *v1;
  *(void *)(v2 + 192) = a1;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 200) = v3;
  uint64_t v4 = type metadata accessor for Daemon();
  uint64_t v5 = type metadata accessor for FriendshipService();
  uint64_t v6 = sub_1002ACF78(&qword_1003ECCA8, (void (*)(uint64_t))&type metadata accessor for Daemon);
  uint64_t v7 = sub_1002ACF78(&qword_1003F0480, (void (*)(uint64_t))type metadata accessor for FriendshipService);
  *uint64_t v3 = v9;
  v3[1] = sub_10029CC04;
  return ActorServiceDaemon.getService<A>()(v4, v5, v6, v7);
}

uint64_t sub_10029CC04(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[26] = v1;
  swift_task_dealloc();
  swift_release();
  uint64_t v5 = v4[3];
  if (v1)
  {
    uint64_t v6 = sub_10029D15C;
  }
  else
  {
    v4[27] = a1;
    uint64_t v6 = sub_10029CD5C;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_10029CD5C()
{
  uint64_t v28 = *(void *)(v0 + 216);
  unsigned int v22 = *(_DWORD *)(v0 + 224);
  uint64_t v23 = *(void (**)(uint64_t, void, uint64_t))(v0 + 168);
  uint64_t v16 = *(void *)(v0 + 136);
  unint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 144);
  uint64_t v27 = *(void *)(v0 + 128);
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v15 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v24 = *(void *)(v0 + 96);
  uint64_t v25 = v1;
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v30 = *(void *)(v0 + 64);
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v19 = *(void *)(v0 + 48);
  uint64_t v29 = *(void *)(v0 + 32);
  uint64_t v26 = *(void *)(v0 + 16);
  uint64_t v21 = type metadata accessor for TaskPriority();
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  v20(v6, 1, 1, v21);
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v18(v2, v1, v5);
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v8 = (v3 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 0;
  *(void *)(v9 + 24) = 0;
  uint64_t v14 = *(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32);
  v14(v9 + v7, v2, v5);
  *(void *)(v9 + v8) = v28;
  *(void *)(v9 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8)) = v29;
  swift_retain();
  sub_10010405C(v6, (uint64_t)&unk_1003F3998, v9);
  swift_release();
  v17(v15, 1, 1, v16);
  *(void *)(swift_task_alloc() + 16) = v15;
  v23(v30, v22, v19);
  AsyncStream.init(_:bufferingPolicy:_:)();
  swift_task_dealloc();
  v20(v6, 1, 1, v21);
  v18(v24, v2, v5);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  *(void *)(v10 + 24) = 0;
  v14(v10 + v7, v24, v5);
  *(void *)(v10 + v8) = v28;
  *(void *)(v10 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8)) = v29;
  swift_retain();
  sub_10010405C(v6, (uint64_t)&unk_1003F39A8, v10);
  swift_release();
  sub_1002AD034(v26, v27, v15);
  swift_release();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v11(v2, v5);
  v11(v25, v5);
  sub_10000A520(v15, &qword_1003F38F8);
  sub_10000A520(v27, &qword_1003F38F8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_10029D15C()
{
  uint64_t v1 = v0[16];
  (*(void (**)(void, void))(v0[10] + 8))(v0[14], v0[9]);
  sub_10000A520(v1, &qword_1003F38F8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_10029D244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  uint64_t v6 = sub_100044014(&qword_1003F39B0);
  v5[7] = v6;
  v5[8] = *(void *)(v6 - 8);
  v5[9] = swift_task_alloc();
  return _swift_task_switch(sub_10029D308, 0, 0);
}

uint64_t sub_10029D308()
{
  sub_100044014(&qword_1003F3988);
  AsyncStream.makeAsyncIterator()();
  v0[10] = 0;
  uint64_t v1 = (void *)swift_task_alloc();
  v0[11] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10029D3DC;
  uint64_t v2 = v0[7];
  return AsyncStream.Iterator.next(isolation:)(v0 + 2, 0, 0, v2);
}

uint64_t sub_10029D3DC()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10029D4D8, 0, 0);
}

uint64_t sub_10029D4D8()
{
  uint64_t v19 = v0;
  uint64_t v1 = (void *)v0[2];
  v0[12] = v1;
  if (!v1)
  {
    (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
LABEL_13:
    swift_task_dealloc();
    uint64_t v15 = (uint64_t (*)(void))v0[1];
    return v15();
  }
  uint64_t v2 = v0[10];
  static Task<>.checkCancellation()();
  v0[13] = v2;
  if (v2)
  {
    (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);

    if (qword_1003EC420 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100044058(v3, (uint64_t)qword_10040C2F0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136446210;
      v0[3] = v2;
      swift_errorRetain();
      sub_100044014(&qword_1003F4B30);
      uint64_t v7 = String.init<A>(describing:)();
      v0[4] = sub_100037004(v7, v8, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Discover stream error: %{public}s", v6, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    goto LABEL_13;
  }
  if (qword_1003EC420 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_100044058(v9, (uint64_t)qword_10040C2F0);
  id v10 = v1;
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 141558275;
    *(void *)(v13 + 4) = 1752392040;
    *(_WORD *)(v13 + 12) = 2113;
    *(void *)(v13 + 14) = v10;
    *uint64_t v14 = v1;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "discoverStream: %{private,mask.hash}@", (uint8_t *)v13, 0x16u);
    sub_100044014(&qword_1003ECCC8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  unint64_t v17 = (void *)swift_task_alloc();
  v0[14] = v17;
  *unint64_t v17 = v0;
  v17[1] = sub_10029D8F0;
  return sub_1001D2CA4((uint64_t)v10);
}

uint64_t sub_10029D8F0()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10029D9EC, 0, 0);
}

uint64_t sub_10029D9EC()
{
  *(void *)(v0 + 80) = *(void *)(v0 + 104);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10029D3DC;
  uint64_t v2 = *(void *)(v0 + 56);
  return AsyncStream.Iterator.next(isolation:)(v0 + 16, 0, 0, v2);
}

uint64_t sub_10029DAA8(uint64_t a1, uint64_t a2)
{
  sub_10000A520(a2, &qword_1003F38F8);
  uint64_t v4 = sub_100044014(&qword_1003F1D48);
  uint64_t v7 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a2, a1, v4);
  os_log_type_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);

  return v5(a2, 0, 1, v4);
}

uint64_t sub_10029DB78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  uint64_t v6 = sub_100044014(&qword_1003F39B0);
  v5[7] = v6;
  v5[8] = *(void *)(v6 - 8);
  v5[9] = swift_task_alloc();
  return _swift_task_switch(sub_10029DC3C, 0, 0);
}

uint64_t sub_10029DC3C()
{
  sub_100044014(&qword_1003F3988);
  AsyncStream.makeAsyncIterator()();
  v0[10] = 0;
  uint64_t v1 = (void *)swift_task_alloc();
  v0[11] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10029DD10;
  uint64_t v2 = v0[7];
  return AsyncStream.Iterator.next(isolation:)(v0 + 2, 0, 0, v2);
}

uint64_t sub_10029DD10()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10029DE0C, 0, 0);
}

uint64_t sub_10029DE0C()
{
  uint64_t v19 = v0;
  uint64_t v1 = (void *)v0[2];
  v0[12] = v1;
  if (!v1)
  {
    (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
LABEL_13:
    swift_task_dealloc();
    uint64_t v15 = (uint64_t (*)(void))v0[1];
    return v15();
  }
  uint64_t v2 = v0[10];
  static Task<>.checkCancellation()();
  v0[13] = v2;
  if (v2)
  {
    (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);

    if (qword_1003EC420 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100044058(v3, (uint64_t)qword_10040C2F0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136446210;
      v0[3] = v2;
      swift_errorRetain();
      sub_100044014(&qword_1003F4B30);
      uint64_t v7 = String.init<A>(describing:)();
      v0[4] = sub_100037004(v7, v8, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Update stream error: %{public}s", v6, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    goto LABEL_13;
  }
  if (qword_1003EC420 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_100044058(v9, (uint64_t)qword_10040C2F0);
  id v10 = v1;
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 141558275;
    *(void *)(v13 + 4) = 1752392040;
    *(_WORD *)(v13 + 12) = 2113;
    *(void *)(v13 + 14) = v10;
    *uint64_t v14 = v1;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "updateStream: %{private,mask.hash}@", (uint8_t *)v13, 0x16u);
    sub_100044014(&qword_1003ECCC8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  unint64_t v17 = (void *)swift_task_alloc();
  v0[14] = v17;
  *unint64_t v17 = v0;
  v17[1] = sub_10029E224;
  return sub_1001D3C98((uint64_t)v10);
}

uint64_t sub_10029E224()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10029E320, 0, 0);
}

uint64_t sub_10029E320()
{
  *(void *)(v0 + 80) = *(void *)(v0 + 104);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10029DD10;
  uint64_t v2 = *(void *)(v0 + 56);
  return AsyncStream.Iterator.next(isolation:)(v0 + 16, 0, 0, v2);
}

uint64_t sub_10029E3DC()
{
  *(void *)(v1 + 56) = v0;
  return _swift_task_switch(sub_10029E3FC, v0, 0);
}

uint64_t sub_10029E3FC()
{
  uint64_t v14 = v0;
  uint64_t My = type metadata accessor for Feature.FindMy();
  v0[5] = My;
  v0[6] = sub_1002ACF78(&qword_1003ECEC8, (void (*)(uint64_t))&type metadata accessor for Feature.FindMy);
  uint64_t v2 = sub_10003E0F4(v0 + 2);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(My - 8) + 104))(v2, enum case for Feature.FindMy.redStripe(_:), My);
  LOBYTE(My) = isFeatureEnabled(_:)();
  sub_1000233E4((uint64_t)(v0 + 2));
  if (My)
  {
    if (qword_1003EC420 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100044058(v3, (uint64_t)qword_10040C2F0);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136446210;
      v0[2] = sub_100037004(0x676E6152706F7473, 0xED00002928676E69, &v13);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "%{public}s", v6, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_1002AD254();
  }
  else
  {
    if (qword_1003EC420 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_100044058(v7, (uint64_t)qword_10040C2F0);
    unint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      id v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      *(_DWORD *)id v10 = 136446210;
      v0[2] = sub_100037004(0x676E6152706F7473, 0xED00002928676E69, &v13);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "%{public}s Feature.FindMy.redStripe FF disabled.", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_10029E79C()
{
  swift_bridgeObjectRelease();

  sub_10000A520(v0 + OBJC_IVAR____TtC13findmylocated16NIRangingService_discoverContinuation, &qword_1003F38F8);
  sub_10000A520(v0 + OBJC_IVAR____TtC13findmylocated16NIRangingService_updateContinuation, &qword_1003F38F8);
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_10029E814()
{
  return type metadata accessor for NIRangingService();
}

uint64_t type metadata accessor for NIRangingService()
{
  uint64_t result = qword_1003F3728;
  if (!qword_1003F3728) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10029E868()
{
  sub_10029E918();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10029E918()
{
  if (!qword_1003F3768)
  {
    sub_10004AE58(&qword_1003F1D48);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1003F3768);
    }
  }
}

uint64_t sub_10029E974(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  uint64_t v5 = type metadata accessor for NIRangingService();
  *uint64_t v4 = v2;
  v4[1] = sub_10004A274;
  return ActorServiceProtocol.firstLaunchSinceReboot()(v5, a2);
}

uint64_t sub_10029EA20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  uint64_t v5 = type metadata accessor for NIRangingService();
  *uint64_t v4 = v2;
  v4[1] = sub_10004A274;
  return ActorServiceProtocol.startup()(v5, a2);
}

uint64_t sub_10029EACC()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100018CD0;
  v2[87] = v0;
  return _swift_task_switch(sub_100297C0C, v0, 0);
}

uint64_t sub_10029EB74()
{
  return ActorServiceProtocol.description.getter();
}

uint64_t sub_10029EBE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[13] = a3;
  v4[14] = v3;
  v4[11] = a1;
  v4[12] = a2;
  return _swift_task_switch(sub_10029EC04, v3, 0);
}

uint64_t sub_10029EC04()
{
  uint64_t v26 = v0;
  uint64_t My = type metadata accessor for Feature.FindMy();
  v0[5] = My;
  v0[6] = sub_1002ACF78(&qword_1003ECEC8, (void (*)(uint64_t))&type metadata accessor for Feature.FindMy);
  uint64_t v2 = sub_10003E0F4(v0 + 2);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(My - 8) + 104))(v2, enum case for Feature.FindMy.redStripe(_:), My);
  LOBYTE(My) = isFeatureEnabled(_:)();
  sub_1000233E4((uint64_t)(v0 + 2));
  if (My)
  {
    if (qword_1003EC420 != -1) {
      swift_once();
    }
    uint64_t v3 = (void *)v0[11];
    uint64_t v4 = type metadata accessor for Logger();
    sub_100044058(v4, (uint64_t)qword_10040C2F0);
    id v5 = v3;
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    BOOL v8 = os_log_type_enabled(v6, v7);
    os_log_type_t v9 = (void *)v0[11];
    if (v8)
    {
      uint64_t v10 = swift_slowAlloc();
      uint64_t v23 = (void *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136446723;
      v0[8] = sub_100037004(0xD00000000000003DLL, 0x8000000100379060, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v10 + 12) = 2160;
      v0[9] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v10 + 22) = 2113;
      v0[10] = v9;
      id v11 = v9;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v23 = v9;

      _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s token: %{private,mask.hash}@", (uint8_t *)v10, 0x20u);
      sub_100044014(&qword_1003ECCC8);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v16 = *(void **)(v0[14] + 128);
    v0[15] = v16;
    if (v16)
    {
      uint64_t v24 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1003F38D8 + dword_1003F38D8);
      v16;
      unint64_t v17 = (void *)swift_task_alloc();
      v0[16] = v17;
      *unint64_t v17 = v0;
      v17[1] = sub_10029F114;
      uint64_t v18 = v0[12];
      uint64_t v19 = v0[13];
      uint64_t v20 = v0[11];
      return v24(v20, v18, v19);
    }
  }
  else
  {
    if (qword_1003EC420 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_100044058(v12, (uint64_t)qword_10040C2F0);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136446210;
      v0[7] = sub_100037004(0xD00000000000003DLL, 0x8000000100379060, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "%{public}s Feature.FindMy.redStripe FF disabled.", v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
  unsigned int v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_10029F114()
{
  uint64_t v1 = *(void **)(*v0 + 120);
  uint64_t v4 = *v0;
  swift_task_dealloc();

  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_10029F220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[11] = a3;
  v4[12] = v3;
  v4[9] = a1;
  v4[10] = a2;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  v4[13] = v5;
  v4[14] = *(void *)(v5 - 8);
  v4[15] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for DispatchQoS();
  v4[16] = v6;
  v4[17] = *(void *)(v6 - 8);
  v4[18] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Handle();
  v4[19] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v4[20] = v8;
  v4[21] = *(void *)(v8 + 64);
  v4[22] = swift_task_alloc();
  v4[23] = swift_task_alloc();
  return _swift_task_switch(sub_10029F3B4, 0, 0);
}

uint64_t sub_10029F3B4()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[23];
  uint64_t v3 = v0[20];
  uint64_t v4 = v0[21];
  uint64_t v5 = v0[19];
  uint64_t v27 = v0[17];
  uint64_t v28 = v0[16];
  uint64_t v26 = v0[14];
  uint64_t v6 = (char *)v0[12];
  uint64_t v24 = v0[15];
  uint64_t v25 = v0[13];
  uint64_t v7 = v0[11];
  uint64_t v21 = (void *)v0[9];
  unsigned int v22 = *(void **)&v6[qword_1003F3A28];
  uint64_t v23 = v0[18];
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v8(v2, v0[10], v5);
  v8(v1, v7, v5);
  uint64_t v9 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = (v9 + 32) & ~v9;
  uint64_t v11 = (v4 + v9 + v10) & ~v9;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v6;
  *(void *)(v12 + 24) = v21;
  uint64_t v13 = v12 + v10;
  os_log_type_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
  v14(v13, v2, v5);
  v14(v12 + v11, v1, v5);
  v0[6] = sub_1002AB650;
  v0[7] = v12;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_1002A8680;
  v0[5] = &unk_1003E4210;
  uint64_t v15 = _Block_copy(v0 + 2);
  id v16 = v22;
  unint64_t v17 = v6;
  id v18 = v21;
  static DispatchQoS.unspecified.getter();
  v0[8] = _swiftEmptyArrayStorage;
  sub_1002ACF78((unint64_t *)&unk_1003F3BF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100044014(&qword_1003F38E0);
  sub_1002ACFC0((unint64_t *)&qword_1003F3C00, &qword_1003F38E0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v23, v28);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_10029F6B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[13] = a3;
  v4[14] = v3;
  v4[11] = a1;
  v4[12] = a2;
  uint64_t v5 = type metadata accessor for Handle();
  v4[15] = v5;
  v4[16] = *(void *)(v5 - 8);
  v4[17] = swift_task_alloc();
  return _swift_task_switch(sub_10029F778, v3, 0);
}

uint64_t sub_10029F778()
{
  uint64_t v29 = v0;
  uint64_t My = type metadata accessor for Feature.FindMy();
  v0[5] = My;
  v0[6] = sub_1002ACF78(&qword_1003ECEC8, (void (*)(uint64_t))&type metadata accessor for Feature.FindMy);
  uint64_t v2 = sub_10003E0F4(v0 + 2);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(My - 8) + 104))(v2, enum case for Feature.FindMy.redStripe(_:), My);
  LOBYTE(My) = isFeatureEnabled(_:)();
  sub_1000233E4((uint64_t)(v0 + 2));
  if (My)
  {
    if (qword_1003EC420 != -1) {
      swift_once();
    }
    uint64_t v3 = v0[11];
    uint64_t v4 = v0[16];
    uint64_t v5 = v0[17];
    uint64_t v6 = v0[15];
    uint64_t v7 = type metadata accessor for Logger();
    sub_100044058(v7, (uint64_t)qword_10040C2F0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v5, v3, v6);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    BOOL v10 = os_log_type_enabled(v8, v9);
    uint64_t v12 = v0[16];
    uint64_t v11 = v0[17];
    if (v10)
    {
      uint64_t v27 = v0[15];
      uint64_t v13 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136446723;
      v0[8] = sub_100037004(0xD000000000000032, 0x8000000100379180, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v13 + 12) = 2160;
      v0[9] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v13 + 22) = 2081;
      uint64_t v14 = Handle.identifier.getter();
      v0[10] = sub_100037004(v14, v15, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v27);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "%{public}s with handle: %{private,mask.hash}s", (uint8_t *)v13, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(void, void))(v12 + 8))(v0[17], v0[15]);
    }

    uint64_t v20 = *(void **)(v0[14] + 128);
    if (v20)
    {
      uint64_t v21 = v0[12];
      unint64_t v22 = v0[13];
      uint64_t v23 = v0[11];
      id v24 = v20;
      sub_10029FC20(v23, v21, v22);
    }
  }
  else
  {
    if (qword_1003EC420 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_100044058(v16, (uint64_t)qword_10040C2F0);
    unint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 136446210;
      v0[7] = sub_100037004(0xD000000000000032, 0x8000000100379180, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "%{public}s Feature.FindMy.redStripe FF disabled.", v19, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
  return v25();
}

uint64_t sub_10029FC20(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v27 = a1;
  uint64_t v29 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v32 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v28 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v30 = *(void *)(v7 - 8);
  uint64_t v31 = v7;
  __chkstk_darwin(v7);
  os_log_type_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Handle();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  id v13 = objc_allocWithZone((Class)NIDiscoveryToken);
  sub_100022C64(a2, a3);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v15 = [v13 initWithBytes:isa];
  sub_100044090(a2, a3);

  uint64_t v16 = *(void **)&v3[qword_1003F3A28];
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v27, v10);
  unint64_t v17 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v3;
  *(void *)(v18 + 24) = v15;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v18 + v17, (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  aBlock[4] = sub_1002AC988;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1002A8680;
  aBlock[3] = &unk_1003E4378;
  uint64_t v19 = _Block_copy(aBlock);
  id v20 = v16;
  uint64_t v21 = v3;
  id v22 = v15;
  static DispatchQoS.unspecified.getter();
  uint64_t v33 = _swiftEmptyArrayStorage;
  sub_1002ACF78((unint64_t *)&unk_1003F3BF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100044014(&qword_1003F38E0);
  sub_1002ACFC0((unint64_t *)&qword_1003F3C00, &qword_1003F38E0);
  id v24 = v28;
  uint64_t v23 = v29;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v24, v23);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v31);
  return swift_release();
}

uint64_t sub_1002A000C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[22] = a5;
  v6[23] = v5;
  v6[20] = a3;
  v6[21] = a4;
  v6[18] = a1;
  v6[19] = a2;
  v6[24] = sub_100044014(&qword_1003F3B30);
  v6[25] = swift_task_alloc();
  v6[26] = swift_task_alloc();
  return _swift_task_switch(sub_1002A00BC, v5, 0);
}

uint64_t sub_1002A00BC()
{
  uint64_t v51 = v0;
  uint64_t My = type metadata accessor for Feature.FindMy();
  v0[5] = My;
  v0[6] = sub_1002ACF78(&qword_1003ECEC8, (void (*)(uint64_t))&type metadata accessor for Feature.FindMy);
  uint64_t v2 = sub_10003E0F4(v0 + 2);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(My - 8) + 104))(v2, enum case for Feature.FindMy.redStripe(_:), My);
  LOBYTE(My) = isFeatureEnabled(_:)();
  sub_1000233E4((uint64_t)(v0 + 2));
  if (My)
  {
    uint64_t v4 = v0[20];
    unint64_t v3 = v0[21];
    id v5 = objc_allocWithZone((Class)NIDiscoveryToken);
    sub_100022C64(v4, v3);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    id v7 = [v5 initWithBytes:isa];
    v0[27] = v7;
    sub_100044090(v4, v3);

    if (qword_1003EC420 != -1) {
      swift_once();
    }
    uint64_t v8 = v0[18];
    uint64_t v9 = v0[26];
    uint64_t v10 = v0[22];
    unint64_t v11 = v0[19];
    uint64_t v12 = type metadata accessor for Logger();
    sub_100044058(v12, (uint64_t)qword_10040C2F0);
    sub_100013210(v10, v9, &qword_1003F3B30);
    swift_retain();
    sub_100022C64(v8, v11);
    id v13 = v7;
    swift_retain();
    sub_100022C64(v8, v11);
    id v14 = v13;
    id v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    BOOL v17 = os_log_type_enabled(v15, v16);
    uint64_t v18 = v0[26];
    if (v17)
    {
      uint64_t v19 = v0[23];
      uint64_t v47 = v0[25];
      os_log_t log = v15;
      uint64_t v21 = v0[18];
      unint64_t v20 = v0[19];
      uint64_t v46 = v0[26];
      uint64_t v22 = swift_slowAlloc();
      unint64_t v45 = (void *)swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136448003;
      v0[9] = sub_100037004(0xD00000000000002CLL, 0x80000001003790F0, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v22 + 12) = 2080;
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = &unk_1003F3948;
      *(void *)(v23 + 24) = v19;
      v0[7] = &unk_1003F3958;
      v0[8] = v23;
      swift_retain();
      sub_100044014(&qword_1003F3960);
      uint64_t v24 = String.init<A>(describing:)();
      v0[11] = sub_100037004(v24, v25, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 22) = 2160;
      v0[12] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v22 + 32) = 2081;
      sub_100022C64(v21, v20);
      uint64_t v26 = Data.description.getter();
      unint64_t v28 = v27;
      sub_100044090(v21, v20);
      v0[13] = sub_100037004(v26, v28, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100044090(v21, v20);
      sub_100044090(v21, v20);
      *(_WORD *)(v22 + 42) = 2160;
      v0[14] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v22 + 52) = 2113;
      v0[15] = v14;
      id v29 = v14;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *unint64_t v45 = v14;

      *(_WORD *)(v22 + 62) = 2160;
      v0[16] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v22 + 72) = 2081;
      sub_100013210(v46, v47, &qword_1003F3B30);
      uint64_t v30 = String.init<A>(describing:)();
      v0[17] = sub_100037004(v30, v31, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10000A520(v46, &qword_1003F3B30);
      _os_log_impl((void *)&_mh_execute_header, log, v16, "%{public}s \n\ncached ConfigData: %s\nreceived configData:%{private,mask.hash}s\npeerToken: %{private,mask.hash}@\nreplyHandle: %{private,mask.hash}s", (uint8_t *)v22, 0x52u);
      sub_100044014(&qword_1003ECCC8);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v37 = v0[18];
      unint64_t v36 = v0[19];
      swift_release_n();
      sub_100044090(v37, v36);
      sub_100044090(v37, v36);

      sub_10000A520(v18, &qword_1003F3B30);
    }
    uint64_t v38 = *(void **)(v0[23] + 128);
    v0[28] = v38;
    if (v38)
    {
      uint64_t v49 = (uint64_t (*)(uint64_t, uint64_t, id, uint64_t))((char *)&dword_1003F3938 + dword_1003F3938);
      v38;
      uint64_t v39 = (void *)swift_task_alloc();
      v0[29] = v39;
      *uint64_t v39 = v0;
      v39[1] = sub_1002A0924;
      uint64_t v40 = v0[22];
      uint64_t v42 = v0[18];
      uint64_t v41 = v0[19];
      return v49(v42, v41, v14, v40);
    }
  }
  else
  {
    if (qword_1003EC420 != -1) {
      swift_once();
    }
    uint64_t v32 = type metadata accessor for Logger();
    sub_100044058(v32, (uint64_t)qword_10040C2F0);
    uint64_t v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 136446210;
      v0[10] = sub_100037004(0xD00000000000002CLL, 0x80000001003790F0, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "%{public}s Feature.FindMy.redStripe FF disabled.", v35, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v44 = (uint64_t (*)(void))v0[1];
  return v44();
}

uint64_t sub_1002A0924()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 224);
  uint64_t v2 = *(void *)(*(void *)v0 + 184);
  swift_task_dealloc();

  return _swift_task_switch(sub_1002A0A4C, v2, 0);
}

uint64_t sub_1002A0A4C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002A0ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *unint64_t v11 = v5;
  v11[1] = sub_10004A274;
  return sub_1002A000C(a1, a2, a3, a4, a5);
}

uint64_t sub_1002A0B84(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4, int *a5)
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = *a3;
  uint64_t v10 = a3[1];
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)a5 + *a5);
  unint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *unint64_t v11 = v5;
  v11[1] = sub_10004A274;
  return v13(v7, v8, v9, v10, a4);
}

uint64_t sub_1002A0C84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[12] = a4;
  v5[13] = v4;
  v5[10] = a2;
  v5[11] = a3;
  v5[9] = a1;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  v5[14] = v6;
  v5[15] = *(void *)(v6 - 8);
  v5[16] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for DispatchQoS();
  v5[17] = v7;
  v5[18] = *(void *)(v7 - 8);
  v5[19] = swift_task_alloc();
  sub_100044014(&qword_1003F3B30);
  v5[20] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Handle();
  v5[21] = v8;
  v5[22] = *(void *)(v8 - 8);
  v5[23] = swift_task_alloc();
  return _swift_task_switch(sub_1002A0E34, 0, 0);
}

uint64_t sub_1002A0E34()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[20];
  sub_100013210(v0[12], v3, &qword_1003F3B30);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v4 = v0[16];
    uint64_t v25 = v0[18];
    uint64_t v26 = v0[17];
    uint64_t v5 = v0[14];
    uint64_t v23 = v0[19];
    uint64_t v24 = v0[15];
    uint64_t v6 = (char *)v0[13];
    unint64_t v7 = v0[10];
    uint64_t v8 = (void *)v0[11];
    uint64_t v9 = v0[9];
    sub_10000A520(v0[20], &qword_1003F3B30);
    uint64_t v10 = *(void **)&v6[qword_1003F3A28];
    unint64_t v11 = (void *)swift_allocObject();
    v11[2] = v6;
    v11[3] = v8;
    v11[4] = v9;
    v11[5] = v7;
    v0[6] = sub_1002AC69C;
    v0[7] = v11;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_1002A8680;
    v0[5] = &unk_1003E42D8;
    uint64_t v12 = _Block_copy(v0 + 2);
    id v13 = v10;
    uint64_t v14 = v6;
    id v15 = v8;
    sub_100022C64(v9, v7);
    static DispatchQoS.unspecified.getter();
    v0[8] = _swiftEmptyArrayStorage;
    sub_1002ACF78((unint64_t *)&unk_1003F3BF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100044014(&qword_1003F38E0);
    sub_1002ACFC0((unint64_t *)&qword_1003F3C00, &qword_1003F38E0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v12);

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v4, v5);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v26);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v16 = (uint64_t (*)(void))v0[1];
    return v16();
  }
  else
  {
    (*(void (**)(void, void, void))(v0[22] + 32))(v0[23], v0[20], v0[21]);
    unint64_t v27 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1003F3968 + dword_1003F3968);
    uint64_t v18 = (void *)swift_task_alloc();
    v0[24] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1002A1198;
    uint64_t v19 = v0[23];
    uint64_t v20 = v0[10];
    uint64_t v21 = v0[11];
    uint64_t v22 = v0[9];
    return v27(v21, v19, v22, v20);
  }
}

uint64_t sub_1002A1198()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1002A1294, 0, 0);
}

uint64_t sub_1002A1294()
{
  (*(void (**)(void, void))(v0[22] + 8))(v0[23], v0[21]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1002A1334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[14] = a5;
  v6[15] = v5;
  v6[12] = a3;
  v6[13] = a4;
  v6[10] = a1;
  v6[11] = a2;
  uint64_t v7 = type metadata accessor for UUID();
  v6[16] = v7;
  v6[17] = *(void *)(v7 - 8);
  v6[18] = swift_task_alloc();
  sub_100044014(&qword_1003ECFB8);
  v6[19] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for MessagingOptions();
  v6[20] = v8;
  v6[21] = *(void *)(v8 - 8);
  v6[22] = swift_task_alloc();
  uint64_t v9 = sub_100044014(&qword_1003ECF50);
  v6[23] = v9;
  v6[24] = *(void *)(v9 - 8);
  v6[25] = swift_task_alloc();
  v6[26] = type metadata accessor for FindingConfigEnvelopeV1(0);
  v6[27] = swift_task_alloc();
  v6[28] = swift_task_alloc();
  v6[29] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Handle();
  v6[30] = v10;
  v6[31] = *(void *)(v10 - 8);
  v6[32] = swift_task_alloc();
  v6[33] = swift_task_alloc();
  return _swift_task_switch(sub_1002A15A0, v5, 0);
}

uint64_t sub_1002A15A0()
{
  uint64_t v20 = v0;
  if (qword_1003EC420 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[33];
  uint64_t v2 = v0[30];
  uint64_t v3 = v0[31];
  uint64_t v4 = v0[13];
  uint64_t v5 = type metadata accessor for Logger();
  v0[34] = sub_100044058(v5, (uint64_t)qword_10040C2F0);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[35] = v6;
  v0[36] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v1, v4, v2);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = v0[33];
  uint64_t v11 = v0[30];
  uint64_t v12 = v0[31];
  if (v9)
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 141558275;
    v0[9] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 12) = 2081;
    sub_1002ACF78(&qword_1003F00F0, (void (*)(uint64_t))&type metadata accessor for Handle);
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[6] = sub_100037004(v14, v15, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    os_log_type_t v16 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v16(v10, v11);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Sending config data to handle %{private,mask.hash}s over IDS.", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    os_log_type_t v16 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v16(v0[33], v0[30]);
  }

  v0[37] = v16;
  BOOL v17 = (void *)swift_task_alloc();
  v0[38] = v17;
  *BOOL v17 = v0;
  v17[1] = sub_1002A1868;
  return daemon.getter();
}

uint64_t sub_1002A1868(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v9 = *v1;
  *(void *)(v2 + 312) = a1;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 320) = v3;
  uint64_t v4 = type metadata accessor for Daemon();
  uint64_t v5 = type metadata accessor for IDSTransportServiceFMF();
  uint64_t v6 = sub_1002ACF78(&qword_1003ECCA8, (void (*)(uint64_t))&type metadata accessor for Daemon);
  uint64_t v7 = sub_1002ACF78(&qword_1003ECCB0, (void (*)(uint64_t))type metadata accessor for IDSTransportServiceFMF);
  *uint64_t v3 = v9;
  v3[1] = sub_1002A1A44;
  return ActorServiceDaemon.getService<A>()(v4, v5, v6, v7);
}

uint64_t sub_1002A1A44(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[41] = a1;
  v3[42] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = v3[15];
    uint64_t v5 = sub_1002A29A4;
  }
  else
  {
    uint64_t v6 = v3[15];
    swift_release();
    uint64_t v5 = sub_1002A1B6C;
    uint64_t v4 = v6;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_1002A1B6C()
{
  uint64_t v39 = v0;
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(uint64_t **)(v0 + 232);
  uint64_t v3 = *(void *)(v0 + 208);
  uint64_t v4 = *(void *)(v0 + 112);
  unint64_t v6 = *(void *)(v0 + 88);
  uint64_t v5 = *(void **)(v0 + 96);
  uint64_t v7 = *(void *)(v0 + 80);
  sub_100022C64(v7, v6);
  id v8 = [v5 rawToken];
  uint64_t v9 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;

  sub_100013210(v4, (uint64_t)v2 + *(int *)(v3 + 24), &qword_1003F3B30);
  *uint64_t v2 = v7;
  v2[1] = v6;
  v2[2] = v9;
  v2[3] = v11;
  sub_1002AC7EC((uint64_t)v2, v1, type metadata accessor for FindingConfigEnvelopeV1);
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = *(void *)(v0 + 224);
    uint64_t v15 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(void *)(v0 + 56) = 1752392040;
    v38[0] = v16;
    *(_DWORD *)uint64_t v15 = 141558275;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2081;
    unint64_t v17 = sub_1001FE778();
    *(void *)(v0 + 64) = sub_100037004(v17, v18, v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1002AC854(v14, type metadata accessor for FindingConfigEnvelopeV1);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Sending config data envelope %{private,mask.hash}s over IDS.", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1002AC854(*(void *)(v0 + 224), type metadata accessor for FindingConfigEnvelopeV1);
  }

  uint64_t v19 = *(void *)(v0 + 336);
  uint64_t v20 = *(void *)(v0 + 232);
  uint64_t v21 = *(void *)(v0 + 216);
  *(unsigned char *)(v0 + 360) = 4;
  sub_1002AC7EC(v20, v21, type metadata accessor for FindingConfigEnvelopeV1);
  sub_100072920();
  sub_1002ACF78(&qword_1003F3920, (void (*)(uint64_t))type metadata accessor for FindingConfigEnvelopeV1);
  sub_1002ACF78(&qword_1003F3928, (void (*)(uint64_t))type metadata accessor for FindingConfigEnvelopeV1);
  Message.init<A>(type:version:payload:)();
  if (v19)
  {
    sub_1002AC854(*(void *)(v0 + 232), type metadata accessor for FindingConfigEnvelopeV1);
    swift_release();
    (*(void (**)(void, void, void))(v0 + 280))(*(void *)(v0 + 256), *(void *)(v0 + 104), *(void *)(v0 + 240));
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    BOOL v24 = os_log_type_enabled(v22, v23);
    uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
    uint64_t v26 = *(void *)(v0 + 256);
    uint64_t v27 = *(void *)(v0 + 240);
    if (v24)
    {
      os_log_t log = v22;
      uint64_t v28 = swift_slowAlloc();
      v38[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 141558531;
      *(void *)(v0 + 16) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v28 + 12) = 2081;
      sub_1002ACF78(&qword_1003F00F0, (void (*)(uint64_t))&type metadata accessor for Handle);
      uint64_t v29 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 24) = sub_100037004(v29, v30, v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v25(v26, v27);
      *(_WORD *)(v28 + 22) = 2082;
      *(void *)(v0 + 32) = v19;
      swift_errorRetain();
      sub_100044014(&qword_1003F4B30);
      uint64_t v31 = String.init<A>(describing:)();
      *(void *)(v0 + 40) = sub_100037004(v31, v32, v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, log, v23, "Sending configData to handle %{private,mask.hash}s\nfailed: %{public}s", (uint8_t *)v28, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      v25(v26, v27);
      swift_errorRelease();
      swift_errorRelease();
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v34 = *(uint64_t (**)(void))(v0 + 8);
    return v34();
  }
  else
  {
    sub_100044014(&qword_1003ECFC0);
    type metadata accessor for Destination();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_100367D70;
    char v33 = Handle.isPhoneNumber.getter();
    Handle.identifier.getter();
    if (v33) {
      Destination.init(phoneNumber:)();
    }
    else {
      Destination.init(email:)();
    }
    uint64_t v36 = *(void *)(v0 + 328);
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 136) + 56))(*(void *)(v0 + 152), 1, 1, *(void *)(v0 + 128));
    sub_1002D689C((uint64_t)_swiftEmptyArrayStorage);
    sub_1002D689C((uint64_t)_swiftEmptyArrayStorage);
    MessagingOptions.init(destinations:expectsPeerResponse:responseIdentifier:timeToLive:fireAndForget:requiredCapabilities:lackingCapabilities:queueOneIdentifier:)();
    return _swift_task_switch(sub_1002A22F4, v36, 0);
  }
}

uint64_t sub_1002A22F4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  v0[43] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1002A239C;
  uint64_t v2 = v0[25];
  uint64_t v3 = v0[22];
  uint64_t v4 = v0[18];
  return InternetMessaging.send(message:messageOptions:)(v4, v2, v3);
}

uint64_t sub_1002A239C()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 352) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[15];
    uint64_t v4 = sub_1002A2600;
  }
  else
  {
    uint64_t v5 = v2[15];
    (*(void (**)(void, void))(v2[17] + 8))(v2[18], v2[16]);
    uint64_t v4 = sub_1002A24D0;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1002A24D0()
{
  uint64_t v1 = v0[29];
  uint64_t v3 = v0[24];
  uint64_t v2 = v0[25];
  uint64_t v5 = v0[22];
  uint64_t v4 = v0[23];
  uint64_t v6 = v0[20];
  uint64_t v7 = v0[21];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_1002AC854(v1, type metadata accessor for FindingConfigEnvelopeV1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1002A2600()
{
  uint64_t v25 = v0;
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v3 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 200);
  uint64_t v5 = *(void *)(v0 + 176);
  uint64_t v4 = *(void *)(v0 + 184);
  uint64_t v6 = *(void *)(v0 + 160);
  uint64_t v7 = *(void *)(v0 + 168);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_1002AC854(v1, type metadata accessor for FindingConfigEnvelopeV1);
  uint64_t v8 = *(void *)(v0 + 352);
  (*(void (**)(void, void, void))(v0 + 280))(*(void *)(v0 + 256), *(void *)(v0 + 104), *(void *)(v0 + 240));
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    os_log_type_t v23 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
    uint64_t v11 = *(void *)(v0 + 256);
    uint64_t v12 = *(void *)(v0 + 240);
    uint64_t v13 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 141558531;
    *(void *)(v0 + 16) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 12) = 2081;
    sub_1002ACF78(&qword_1003F00F0, (void (*)(uint64_t))&type metadata accessor for Handle);
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 24) = sub_100037004(v14, v15, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v23(v11, v12);
    *(_WORD *)(v13 + 22) = 2082;
    *(void *)(v0 + 32) = v8;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v16 = String.init<A>(describing:)();
    *(void *)(v0 + 40) = sub_100037004(v16, v17, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Sending configData to handle %{private,mask.hash}s\nfailed: %{public}s", (uint8_t *)v13, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    unint64_t v18 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
    uint64_t v19 = *(void *)(v0 + 256);
    uint64_t v20 = *(void *)(v0 + 240);
    swift_errorRelease();
    v18(v19, v20);
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
  return v21();
}

uint64_t sub_1002A29A4()
{
  uint64_t v18 = v0;
  swift_release();
  uint64_t v1 = *(void *)(v0 + 336);
  (*(void (**)(void, void, void))(v0 + 280))(*(void *)(v0 + 256), *(void *)(v0 + 104), *(void *)(v0 + 240));
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
    uint64_t v4 = *(void *)(v0 + 256);
    uint64_t v5 = *(void *)(v0 + 240);
    uint64_t v6 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 141558531;
    *(void *)(v0 + 16) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v6 + 12) = 2081;
    sub_1002ACF78(&qword_1003F00F0, (void (*)(uint64_t))&type metadata accessor for Handle);
    uint64_t v7 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 24) = sub_100037004(v7, v8, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v16(v4, v5);
    *(_WORD *)(v6 + 22) = 2082;
    *(void *)(v0 + 32) = v1;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v9 = String.init<A>(describing:)();
    *(void *)(v0 + 40) = sub_100037004(v9, v10, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Sending configData to handle %{private,mask.hash}s\nfailed: %{public}s", (uint8_t *)v6, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
    uint64_t v12 = *(void *)(v0 + 256);
    uint64_t v13 = *(void *)(v0 + 240);
    swift_errorRelease();
    v11(v12, v13);
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_1002A2CEC(uint64_t a1, uint64_t a2)
{
  v2[17] = a1;
  v2[18] = a2;
  v2[19] = sub_100044014(&qword_1003F1530);
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  sub_100044014((uint64_t *)&unk_1003EE800);
  v2[23] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Date();
  v2[24] = v3;
  v2[25] = *(void *)(v3 - 8);
  v2[26] = swift_task_alloc();
  v2[27] = swift_task_alloc();
  sub_100044014(&qword_1003EEEB8);
  v2[28] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for FriendSharedSecretsRecord();
  v2[29] = v4;
  v2[30] = *(void *)(v4 - 8);
  v2[31] = swift_task_alloc();
  v2[32] = swift_task_alloc();
  sub_100044014(&qword_1003ECFB8);
  v2[33] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for UUID();
  v2[34] = v5;
  v2[35] = *(void *)(v5 - 8);
  v2[36] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Handle();
  v2[37] = v6;
  v2[38] = *(void *)(v6 - 8);
  v2[39] = swift_task_alloc();
  v2[40] = swift_task_alloc();
  v2[41] = swift_task_alloc();
  v2[42] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Friend();
  v2[43] = v7;
  v2[44] = *(void *)(v7 - 8);
  v2[45] = swift_task_alloc();
  v2[46] = swift_task_alloc();
  v2[47] = swift_task_alloc();
  v2[48] = swift_task_alloc();
  sub_100044014(&qword_1003ECFE8);
  v2[49] = swift_task_alloc();
  v2[50] = swift_task_alloc();
  unint64_t v8 = (void *)swift_task_alloc();
  v2[51] = v8;
  void *v8 = v2;
  v8[1] = sub_1002A30DC;
  return daemon.getter();
}

uint64_t sub_1002A30DC(uint64_t a1)
{
  uint64_t v2 = (void *)*v1;
  uint64_t v9 = (void *)*v1;
  v2[52] = a1;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  v2[53] = v3;
  uint64_t v4 = type metadata accessor for Daemon();
  v2[54] = v4;
  uint64_t v5 = type metadata accessor for DataManager(0);
  uint64_t v6 = sub_1002ACF78(&qword_1003ECCA8, (void (*)(uint64_t))&type metadata accessor for Daemon);
  v2[55] = v6;
  uint64_t v7 = sub_1002ACF78(&qword_1003ECCC0, (void (*)(uint64_t))type metadata accessor for DataManager);
  *uint64_t v3 = v9;
  v3[1] = sub_1002A32BC;
  return ActorServiceDaemon.getService<A>()(v4, v5, v6, v7);
}

uint64_t sub_1002A32BC(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[56] = a1;
  v3[57] = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_1002A5DE0, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v4 = (void *)swift_task_alloc();
    v3[58] = v4;
    *uint64_t v4 = v3;
    v4[1] = sub_1002A3430;
    return daemon.getter();
  }
}

uint64_t sub_1002A3430(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  *(void *)(v3 + 472) = a1;
  swift_task_dealloc();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 480) = v5;
  uint64_t v6 = type metadata accessor for CloudStorageService();
  uint64_t v7 = sub_1002ACF78(&qword_1003EF450, (void (*)(uint64_t))type metadata accessor for CloudStorageService);
  *uint64_t v5 = v4;
  v5[1] = sub_1002A35E4;
  uint64_t v8 = *(void *)(v2 + 440);
  uint64_t v9 = *(void *)(v2 + 432);
  return ActorServiceDaemon.getService<A>()(v9, v6, v8, v7);
}

uint64_t sub_1002A35E4(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[61] = a1;
  v3[62] = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_1002A625C, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v4 = (void *)swift_task_alloc();
    v3[63] = v4;
    *uint64_t v4 = v3;
    v4[1] = sub_1002A3758;
    return daemon.getter();
  }
}

uint64_t sub_1002A3758(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  *(void *)(v3 + 512) = a1;
  swift_task_dealloc();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 520) = v5;
  uint64_t v6 = type metadata accessor for NITokenService();
  uint64_t v7 = sub_1002ACF78(&qword_1003F1518, (void (*)(uint64_t))type metadata accessor for NITokenService);
  *uint64_t v5 = v4;
  v5[1] = sub_1002A390C;
  uint64_t v8 = *(void *)(v2 + 440);
  uint64_t v9 = *(void *)(v2 + 432);
  return ActorServiceDaemon.getService<A>()(v9, v6, v8, v7);
}

uint64_t sub_1002A390C(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[66] = a1;
  v3[67] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1002A66E4;
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v6 = v3[56];
    swift_release();
    uint64_t v4 = sub_1002A3A38;
    uint64_t v5 = v6;
  }
  return _swift_task_switch(v4, v5, 0);
}

uint64_t sub_1002A3A38()
{
  sub_100044014(&qword_1003ECF40);
  uint64_t v1 = type metadata accessor for HandleType();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = swift_allocObject();
  *(void *)(v0 + 544) = v4;
  *(_OWORD *)(v4 + 16) = xmmword_100367D70;
  (*(void (**)(unint64_t, void, uint64_t))(v2 + 104))(v4 + v3, enum case for HandleType.follower(_:), v1);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 552) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1002A3B94;
  return sub_100021584(v4, 1);
}

uint64_t sub_1002A3B94(uint64_t a1)
{
  *(void *)(*(void *)v1 + 560) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1002A3CB4, 0, 0);
}

uint64_t sub_1002A3CB4()
{
  uint64_t v72 = v0;
  uint64_t v1 = v0[70];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v0[44];
    uint64_t v5 = *(void (**)(void, uint64_t, void))(v3 + 16);
    uint64_t v4 = v3 + 16;
    uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 64));
    uint64_t v7 = (void (**)(uint64_t, uint64_t))(v0[38] + 8);
    uint64_t v68 = *(void *)(v4 + 56);
    uint64_t v69 = v5;
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v8 = v0[42];
      uint64_t v9 = v0[37];
      v69(v0[47], v6, v0[43]);
      Friend.handle.getter();
      char v10 = static Handle.== infix(_:_:)();
      (*v7)(v8, v9);
      if (v10) {
        break;
      }
      (*(void (**)(void, void))(v4 - 8))(v0[47], v0[43]);
      v6 += v68;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    uint64_t v12 = v0[50];
    uint64_t v13 = v0[47];
    uint64_t v14 = v0[43];
    uint64_t v15 = v0[44];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v12, v13, v14);
    uint64_t v11 = 0;
  }
  else
  {
LABEL_6:
    uint64_t v11 = 1;
  }
  uint64_t v17 = v0[49];
  uint64_t v16 = v0[50];
  uint64_t v18 = v0[43];
  uint64_t v19 = v0[44];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v16, v11, 1, v18);
  swift_bridgeObjectRelease();
  sub_100013210(v16, v17, &qword_1003ECFE8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_10000A520(v0[49], &qword_1003ECFE8);
    if (qword_1003EC420 != -1) {
      swift_once();
    }
    uint64_t v20 = v0[40];
    uint64_t v21 = v0[37];
    uint64_t v22 = v0[38];
    uint64_t v23 = v0[18];
    uint64_t v24 = type metadata accessor for Logger();
    sub_100044058(v24, (uint64_t)qword_10040C2F0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v20, v23, v21);
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.error.getter();
    BOOL v27 = os_log_type_enabled(v25, v26);
    uint64_t v28 = v0[50];
    uint64_t v29 = v0[40];
    uint64_t v30 = v0[37];
    uint64_t v31 = v0[38];
    if (!v27)
    {
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
      uint64_t v59 = v28;
      goto LABEL_24;
    }
    uint64_t v70 = v0[50];
    uint64_t v32 = swift_slowAlloc();
    uint64_t v71 = swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 141558275;
    v0[6] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v32 + 12) = 2081;
    uint64_t v33 = Handle.identifier.getter();
    v0[7] = sub_100037004(v33, v34, &v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Findee has no such follower with peer %{private,mask.hash}s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();
    swift_release();
    swift_release();

LABEL_18:
    uint64_t v59 = v70;
LABEL_24:
    sub_10000A520(v59, &qword_1003ECFE8);
    uint64_t v65 = v0[17];
    uint64_t v66 = type metadata accessor for DiscoveryToken(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v65, 1, 1, v66);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v67 = (uint64_t (*)(void))v0[1];
    return v67();
  }
  uint64_t v35 = v0[41];
  uint64_t v36 = v0[37];
  uint64_t v37 = v0[38];
  uint64_t v38 = v0[34];
  uint64_t v39 = v0[35];
  uint64_t v40 = v0[33];
  (*(void (**)(void, void, void))(v0[44] + 32))(v0[48], v0[49], v0[43]);
  Friend.handle.getter();
  Handle.peerID.getter();
  uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
  v0[71] = v41;
  v0[72] = (v37 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v41(v35, v36);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v40, 1, v38) == 1)
  {
    sub_10000A520(v0[33], &qword_1003ECFB8);
    if (qword_1003EC420 != -1) {
      swift_once();
    }
    uint64_t v42 = v0[48];
    uint64_t v44 = v0[44];
    uint64_t v43 = v0[45];
    uint64_t v45 = v0[43];
    uint64_t v46 = type metadata accessor for Logger();
    sub_100044058(v46, (uint64_t)qword_10040C2F0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v43, v42, v45);
    uint64_t v47 = Logger.logObject.getter();
    os_log_type_t v48 = static os_log_type_t.error.getter();
    BOOL v49 = os_log_type_enabled(v47, v48);
    uint64_t v50 = v0[50];
    uint64_t v51 = v0[48];
    uint64_t v53 = v0[44];
    uint64_t v52 = v0[45];
    uint64_t v54 = v0[43];
    if (!v49)
    {
      swift_release();
      swift_release();
      swift_release();

      unint64_t v64 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
      v64(v52, v54);
      v64(v51, v54);
      uint64_t v59 = v50;
      goto LABEL_24;
    }
    uint64_t v70 = v0[50];
    uint64_t v55 = swift_slowAlloc();
    uint64_t v71 = swift_slowAlloc();
    *(_DWORD *)uint64_t v55 = 136446723;
    v0[8] = sub_100037004(0xD000000000000014, 0x8000000100379160, &v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v55 + 12) = 2160;
    v0[9] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v55 + 22) = 2081;
    sub_1002ACF78(&qword_1003EFEB8, (void (*)(uint64_t))&type metadata accessor for Friend);
    uint64_t v56 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[10] = sub_100037004(v56, v57, &v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    os_log_type_t v58 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
    v58(v52, v54);
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "%{public}s Missing friendSharedSecretsRecord for %{private,mask.hash}s", (uint8_t *)v55, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();
    swift_release();
    swift_release();

    v58(v51, v54);
    goto LABEL_18;
  }
  (*(void (**)(void, void, void))(v0[35] + 32))(v0[36], v0[33], v0[34]);
  uint64_t v60 = (void *)swift_task_alloc();
  v0[73] = v60;
  *uint64_t v60 = v0;
  v60[1] = sub_1002A4654;
  uint64_t v61 = v0[36];
  uint64_t v62 = v0[28];
  return sub_1000F6B40(v62, v61);
}

uint64_t sub_1002A4654()
{
  *(void *)(*(void *)v1 + 592) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1002A58F8;
  }
  else {
    uint64_t v2 = sub_1002A4768;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002A4768()
{
  uint64_t v135 = v0;
  uint64_t v1 = v0[29];
  uint64_t v2 = v0[28];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0[30] + 48))(v2, 1, v1) == 1)
  {
    (*(void (**)(void, void))(v0[35] + 8))(v0[36], v0[34]);
    sub_10000A520(v2, &qword_1003EEEB8);
    if (qword_1003EC420 != -1) {
      swift_once();
    }
    uint64_t v3 = v0[48];
    uint64_t v5 = v0[44];
    uint64_t v4 = v0[45];
    uint64_t v6 = v0[43];
    uint64_t v7 = type metadata accessor for Logger();
    sub_100044058(v7, (uint64_t)qword_10040C2F0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v3, v6);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    BOOL v10 = os_log_type_enabled(v8, v9);
    uint64_t v11 = v0[50];
    uint64_t v12 = v0[48];
    uint64_t v14 = v0[44];
    uint64_t v13 = v0[45];
    uint64_t v15 = v0[43];
    if (v10)
    {
      uint64_t v16 = swift_slowAlloc();
      v134[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136446723;
      v0[8] = sub_100037004(0xD000000000000014, 0x8000000100379160, v134);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v16 + 12) = 2160;
      v0[9] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v16 + 22) = 2081;
      sub_1002ACF78(&qword_1003EFEB8, (void (*)(uint64_t))&type metadata accessor for Friend);
      uint64_t v17 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[10] = sub_100037004(v17, v18, v134);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
      v19(v13, v15);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "%{public}s Missing friendSharedSecretsRecord for %{private,mask.hash}s", (uint8_t *)v16, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_release();
      swift_release();
      swift_release();

      v19(v12, v15);
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();

      uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
      v42(v13, v15);
      v42(v12, v15);
    }
    uint64_t v20 = v11;
LABEL_17:
    sub_10000A520(v20, &qword_1003ECFE8);
LABEL_18:
    uint64_t v43 = v0[17];
    uint64_t v44 = type metadata accessor for DiscoveryToken(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v43, 1, 1, v44);
    goto LABEL_19;
  }
  uint64_t v21 = v0[32];
  sub_1002ACCD4(v2, v21, (uint64_t (*)(void))type metadata accessor for FriendSharedSecretsRecord);
  uint64_t v22 = (uint64_t *)(v21 + *(int *)(v1 + 32));
  unint64_t v23 = v22[1];
  if (v23 >> 60 == 15)
  {
LABEL_10:
    if (qword_1003EC420 != -1) {
      swift_once();
    }
    uint64_t v28 = v0[31];
    uint64_t v29 = v0[32];
    uint64_t v30 = type metadata accessor for Logger();
    sub_100044058(v30, (uint64_t)qword_10040C2F0);
    sub_1002AC7EC(v29, v28, (uint64_t (*)(void))type metadata accessor for FriendSharedSecretsRecord);
    uint64_t v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.default.getter();
    BOOL v33 = os_log_type_enabled(v31, v32);
    uint64_t v34 = v0[50];
    uint64_t v35 = v0[48];
    uint64_t v36 = v0[44];
    uint64_t v37 = v0[35];
    uint64_t v126 = v0[36];
    uint64_t v130 = v0[43];
    uint64_t v132 = v0[34];
    uint64_t v38 = v0[31];
    uint64_t v123 = v0[32];
    if (v33)
    {
      uint64_t v110 = v0[48];
      uint64_t v39 = swift_slowAlloc();
      v134[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v39 = 136446466;
      v0[11] = sub_100037004(0xD000000000000014, 0x8000000100379160, v134);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v39 + 12) = 2082;
      sub_1002ACF78(&qword_1003ECF68, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v40 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[12] = sub_100037004(v40, v41, v134);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1002AC854(v38, (uint64_t (*)(void))type metadata accessor for FriendSharedSecretsRecord);
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "%{public}s  No incomingSharedSecret for %{public}s", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_release();
      swift_release();
      swift_release();

      sub_1002AC854(v123, (uint64_t (*)(void))type metadata accessor for FriendSharedSecretsRecord);
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v126, v132);
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v110, v130);
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();

      sub_1002AC854(v38, (uint64_t (*)(void))type metadata accessor for FriendSharedSecretsRecord);
      sub_1002AC854(v123, (uint64_t (*)(void))type metadata accessor for FriendSharedSecretsRecord);
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v126, v132);
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v130);
    }
    uint64_t v20 = v34;
    goto LABEL_17;
  }
  uint64_t v24 = *v22;
  uint64_t v25 = v0[24];
  uint64_t v26 = v0[25];
  uint64_t v27 = v0[23];
  sub_100013210(v0[32] + *(int *)(v0[29] + 36), v27, (uint64_t *)&unk_1003EE800);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v27, 1, v25) == 1)
  {
    sub_10000A520(v0[23], (uint64_t *)&unk_1003EE800);
    goto LABEL_10;
  }
  uint64_t v47 = v0[74];
  uint64_t v49 = v0[26];
  os_log_type_t v48 = (void (*)(void, void))v0[27];
  uint64_t v50 = (void *)v0[22];
  (*(void (**)(void (*)(void, void), void, void))(v0[25] + 32))(v48, v0[23], v0[24]);
  sub_100022C64(v24, v23);
  static Date.trustedNow.getter(v49);
  sub_10030868C(v24, v23, v48, v49, v50);
  if (v47)
  {
    uint64_t v131 = v0[50];
    uint64_t v133 = v47;
    uint64_t v51 = v0[44];
    uint64_t v124 = v0[43];
    uint64_t v127 = v0[48];
    uint64_t v52 = v24;
    uint64_t v53 = v0[35];
    uint64_t v118 = v0[34];
    uint64_t v121 = v0[36];
    uint64_t v54 = v0[26];
    uint64_t v113 = v0[27];
    uint64_t type = v0[32];
    uint64_t v56 = v0[24];
    uint64_t v55 = v0[25];
    sub_1000440E8(v52, v23);
    swift_release();
    swift_release();
    swift_release();
    unint64_t v57 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
    v57(v54, v56);
    v57(v113, v56);
    sub_1002AC854(type, (uint64_t (*)(void))type metadata accessor for FriendSharedSecretsRecord);
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v121, v118);
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v127, v124);
    sub_10000A520(v131, &qword_1003ECFE8);
    if (qword_1003EC420 != -1) {
      swift_once();
    }
    uint64_t v59 = v0[38];
    uint64_t v58 = v0[39];
    uint64_t v60 = v0[37];
    uint64_t v61 = v0[18];
    uint64_t v62 = type metadata accessor for Logger();
    sub_100044058(v62, (uint64_t)qword_10040C2F0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v58, v61, v60);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v63 = Logger.logObject.getter();
    os_log_type_t v64 = static os_log_type_t.error.getter();
    BOOL v65 = os_log_type_enabled(v63, v64);
    uint64_t v67 = v0[38];
    uint64_t v66 = v0[39];
    uint64_t v68 = v0[37];
    if (v65)
    {
      os_log_type_t v128 = v64;
      uint64_t v69 = swift_slowAlloc();
      v134[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v69 = 141558531;
      v0[2] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v69 + 12) = 2081;
      sub_1002ACF78(&qword_1003F00F0, (void (*)(uint64_t))&type metadata accessor for Handle);
      uint64_t v70 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[3] = sub_100037004(v70, v71, v134);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v66, v68);
      *(_WORD *)(v69 + 22) = 2082;
      v0[4] = v133;
      swift_errorRetain();
      sub_100044014(&qword_1003F4B30);
      uint64_t v72 = String.init<A>(describing:)();
      v0[5] = sub_100037004(v72, v73, v134);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v63, v128, "Unable to generate discovery token for %{private,mask.hash}s. Error: %{public}s.", (uint8_t *)v69, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v66, v68);
      swift_errorRelease();
      swift_errorRelease();
    }
    goto LABEL_18;
  }
  uint64_t v129 = *(void (**)(uint64_t, os_log_t))(v0[25] + 8);
  v129(v0[26], (os_log_t)v0[24]);
  if (qword_1003EC420 != -1) {
    swift_once();
  }
  uint64_t v74 = v0[48];
  uint64_t v75 = v0[46];
  uint64_t v76 = v0[43];
  uint64_t v77 = v0[44];
  uint64_t v79 = v0[21];
  uint64_t v78 = v0[22];
  uint64_t v80 = type metadata accessor for Logger();
  sub_100044058(v80, (uint64_t)qword_10040C2F0);
  sub_100013210(v78, v79, &qword_1003F1530);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 16))(v75, v74, v76);
  uint64_t v81 = Logger.logObject.getter();
  os_log_type_t v82 = static os_log_type_t.default.getter();
  uint64_t v125 = v81;
  if (os_log_type_enabled(v81, v82))
  {
    os_log_type_t v101 = (void (*)(uint64_t, uint64_t))v0[71];
    uint64_t v119 = v0[48];
    uint64_t v122 = v0[50];
    uint64_t v83 = v0[42];
    uint64_t v102 = v0[44];
    uint64_t v103 = v0[43];
    uint64_t v99 = v0[46];
    uint64_t v100 = v0[37];
    uint64_t v111 = v0[34];
    uint64_t v114 = v0[36];
    os_log_t log = (os_log_t)v0[32];
    uint64_t v108 = v0[35];
    uint64_t v104 = v0[24];
    uint64_t v105 = v0[27];
    uint64_t v85 = v0[20];
    uint64_t v84 = v0[21];
    uint64_t v86 = swift_slowAlloc();
    v134[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v86 = 141558787;
    v0[13] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v86 + 12) = 2081;
    sub_100013210(v84, v85, &qword_1003F1530);
    uint64_t v87 = String.init<A>(describing:)();
    v0[14] = sub_100037004(v87, v88, v134);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000A520(v84, &qword_1003F1530);
    *(_WORD *)(v86 + 22) = 2160;
    v0[15] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v86 + 32) = 2081;
    Friend.handle.getter();
    uint64_t v89 = Handle.identifier.getter();
    unint64_t v91 = v90;
    v101(v83, v100);
    v0[16] = sub_100037004(v89, v91, v134);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v92 = *(void (**)(uint64_t, uint64_t))(v102 + 8);
    v92(v99, v103);
    _os_log_impl((void *)&_mh_execute_header, v125, v82, "Findee found Local discovery token: %{private,mask.hash}s for follower: %{private,mask.hash}s.", (uint8_t *)v86, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    sub_1000440E8(v24, v23);
    swift_release();
    swift_release();
    swift_release();

    v129(v105, v104);
    sub_1002AC854((uint64_t)log, (uint64_t (*)(void))type metadata accessor for FriendSharedSecretsRecord);
    (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v114, v111);
    v92(v119, v103);
  }
  else
  {
    uint64_t v120 = v0[48];
    uint64_t v122 = v0[50];
    uint64_t v93 = v0[46];
    uint64_t v95 = v0[43];
    uint64_t v94 = v0[44];
    uint64_t v96 = v0[35];
    uint64_t v115 = v0[34];
    *(void *)os_log_type_t typea = v0[36];
    uint64_t v109 = v0[27];
    uint64_t v112 = v0[32];
    os_log_t loga = (os_log_t)v0[24];
    uint64_t v97 = v0[21];
    sub_1000440E8(v24, v23);
    swift_release();
    swift_release();
    swift_release();

    unint64_t v98 = *(void (**)(uint64_t, uint64_t))(v94 + 8);
    v98(v93, v95);
    sub_10000A520(v97, &qword_1003F1530);
    v129(v109, loga);
    sub_1002AC854(v112, (uint64_t (*)(void))type metadata accessor for FriendSharedSecretsRecord);
    (*(void (**)(os_log_type_t *, uint64_t))(v96 + 8))(*(os_log_type_t **)typea, v115);
    v98(v120, v95);
  }
  sub_10000A520(v122, &qword_1003ECFE8);
  sub_1001E7A48(v0[22], v0[17]);
LABEL_19:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v45 = (uint64_t (*)(void))v0[1];
  return v45();
}

uint64_t sub_1002A58F8()
{
  uint64_t v31 = v0;
  uint64_t v1 = v0[50];
  uint64_t v2 = v0[48];
  uint64_t v3 = v0[43];
  uint64_t v4 = v0[44];
  uint64_t v6 = v0[35];
  uint64_t v5 = v0[36];
  uint64_t v7 = v0[34];
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  sub_10000A520(v1, &qword_1003ECFE8);
  uint64_t v8 = v0[74];
  if (qword_1003EC420 != -1) {
    swift_once();
  }
  uint64_t v10 = v0[38];
  uint64_t v9 = v0[39];
  uint64_t v11 = v0[37];
  uint64_t v12 = v0[18];
  uint64_t v13 = type metadata accessor for Logger();
  sub_100044058(v13, (uint64_t)qword_10040C2F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v9, v12, v11);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.error.getter();
  BOOL v16 = os_log_type_enabled(v14, v15);
  uint64_t v18 = v0[38];
  uint64_t v17 = v0[39];
  uint64_t v19 = v0[37];
  if (v16)
  {
    os_log_type_t type = v15;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 141558531;
    v0[2] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 12) = 2081;
    sub_1002ACF78(&qword_1003F00F0, (void (*)(uint64_t))&type metadata accessor for Handle);
    uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[3] = sub_100037004(v21, v22, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    *(_WORD *)(v20 + 22) = 2082;
    v0[4] = v8;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v23 = String.init<A>(describing:)();
    v0[5] = sub_100037004(v23, v24, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, type, "Unable to generate discovery token for %{private,mask.hash}s. Error: %{public}s.", (uint8_t *)v20, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v25 = v0[17];
  uint64_t v26 = type metadata accessor for DiscoveryToken(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 1, 1, v26);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v27 = (uint64_t (*)(void))v0[1];
  return v27();
}

uint64_t sub_1002A5DE0()
{
  unint64_t v24 = v0;
  swift_release();
  uint64_t v1 = v0[57];
  if (qword_1003EC420 != -1) {
    swift_once();
  }
  uint64_t v3 = v0[38];
  uint64_t v2 = v0[39];
  uint64_t v4 = v0[37];
  uint64_t v5 = v0[18];
  uint64_t v6 = type metadata accessor for Logger();
  sub_100044058(v6, (uint64_t)qword_10040C2F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.error.getter();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v11 = v0[38];
  uint64_t v10 = v0[39];
  uint64_t v12 = v0[37];
  if (v9)
  {
    os_log_type_t type = v8;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 141558531;
    v0[2] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 12) = 2081;
    sub_1002ACF78(&qword_1003F00F0, (void (*)(uint64_t))&type metadata accessor for Handle);
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[3] = sub_100037004(v14, v15, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    *(_WORD *)(v13 + 22) = 2082;
    v0[4] = v1;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v16 = String.init<A>(describing:)();
    v0[5] = sub_100037004(v16, v17, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, type, "Unable to generate discovery token for %{private,mask.hash}s. Error: %{public}s.", (uint8_t *)v13, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v18 = v0[17];
  uint64_t v19 = type metadata accessor for DiscoveryToken(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_1002A625C()
{
  unint64_t v24 = v0;
  swift_release();
  swift_release();
  uint64_t v1 = v0[62];
  if (qword_1003EC420 != -1) {
    swift_once();
  }
  uint64_t v3 = v0[38];
  uint64_t v2 = v0[39];
  uint64_t v4 = v0[37];
  uint64_t v5 = v0[18];
  uint64_t v6 = type metadata accessor for Logger();
  sub_100044058(v6, (uint64_t)qword_10040C2F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.error.getter();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v11 = v0[38];
  uint64_t v10 = v0[39];
  uint64_t v12 = v0[37];
  if (v9)
  {
    os_log_type_t type = v8;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 141558531;
    v0[2] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 12) = 2081;
    sub_1002ACF78(&qword_1003F00F0, (void (*)(uint64_t))&type metadata accessor for Handle);
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[3] = sub_100037004(v14, v15, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    *(_WORD *)(v13 + 22) = 2082;
    v0[4] = v1;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v16 = String.init<A>(describing:)();
    v0[5] = sub_100037004(v16, v17, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, type, "Unable to generate discovery token for %{private,mask.hash}s. Error: %{public}s.", (uint8_t *)v13, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v18 = v0[17];
  uint64_t v19 = type metadata accessor for DiscoveryToken(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_1002A66E4()
{
  unint64_t v24 = v0;
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0[67];
  if (qword_1003EC420 != -1) {
    swift_once();
  }
  uint64_t v3 = v0[38];
  uint64_t v2 = v0[39];
  uint64_t v4 = v0[37];
  uint64_t v5 = v0[18];
  uint64_t v6 = type metadata accessor for Logger();
  sub_100044058(v6, (uint64_t)qword_10040C2F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.error.getter();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v11 = v0[38];
  uint64_t v10 = v0[39];
  uint64_t v12 = v0[37];
  if (v9)
  {
    os_log_type_t type = v8;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 141558531;
    v0[2] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 12) = 2081;
    sub_1002ACF78(&qword_1003F00F0, (void (*)(uint64_t))&type metadata accessor for Handle);
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[3] = sub_100037004(v14, v15, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    *(_WORD *)(v13 + 22) = 2082;
    v0[4] = v1;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v16 = String.init<A>(describing:)();
    v0[5] = sub_100037004(v16, v17, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, type, "Unable to generate discovery token for %{private,mask.hash}s. Error: %{public}s.", (uint8_t *)v13, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v18 = v0[17];
  uint64_t v19 = type metadata accessor for DiscoveryToken(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_1002A6B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[7] = a4;
  v5[8] = a5;
  v5[6] = a1;
  uint64_t v7 = sub_100044014(&qword_1003F1D48);
  v5[9] = v7;
  v5[10] = *(void *)(v7 - 8);
  v5[11] = swift_task_alloc();
  sub_100044014(&qword_1003F38F8);
  v5[12] = swift_task_alloc();
  return _swift_task_switch(sub_1002A6C74, a4, 0);
}

uint64_t sub_1002A6C74()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 56) + OBJC_IVAR____TtC13findmylocated16NIRangingService_discoverContinuation;
  swift_beginAccess();
  sub_100013210(v2, v1, &qword_1003F38F8);
  return _swift_task_switch(sub_1002AD014, 0, 0);
}

uint64_t sub_1002A6D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[7] = a4;
  v5[8] = a5;
  v5[6] = a1;
  uint64_t v7 = sub_100044014(&qword_1003F1D48);
  v5[9] = v7;
  v5[10] = *(void *)(v7 - 8);
  v5[11] = swift_task_alloc();
  sub_100044014(&qword_1003F38F8);
  v5[12] = swift_task_alloc();
  return _swift_task_switch(sub_1002A6E0C, a4, 0);
}

uint64_t sub_1002A6E0C()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 56) + OBJC_IVAR____TtC13findmylocated16NIRangingService_updateContinuation;
  swift_beginAccess();
  sub_100013210(v2, v1, &qword_1003F38F8);
  return _swift_task_switch(sub_1002A6EA8, 0, 0);
}

uint64_t sub_1002A6EA8()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2))
  {
    sub_10000A520(v1, &qword_1003F38F8);
    uint64_t v4 = 1;
  }
  else
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = (void *)v0[8];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
    sub_10000A520(v1, &qword_1003F38F8);
    v0[5] = v6;
    id v7 = v6;
    AsyncStream.Continuation.yield(_:)();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v4 = 0;
  }
  uint64_t v8 = v0[6];
  uint64_t v9 = sub_100044014(&qword_1003F3900);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, v4, 1, v9);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1002A7028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_10004A274;
  return sub_1002A1334(a1, a2, a3, a4, a5);
}

void sub_1002A70EC()
{
}

uint64_t sub_1002A70F4(uint64_t a1, void *a2)
{
  return sub_1002ABC8C(a2);
}

uint64_t sub_1002A70FC(uint64_t a1, unint64_t a2)
{
  return sub_1002ABF34(a2);
}

uint64_t sub_1002A7104()
{
  return sub_1002ACF78(&qword_1003F3898, (void (*)(uint64_t))type metadata accessor for NIRangingService);
}

uint64_t sub_1002A714C()
{
  return sub_1002ACF78(qword_1003F38A0, (void (*)(uint64_t))type metadata accessor for NIRangingService);
}

void sub_1002A7194(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = sub_100044014((uint64_t *)&unk_1003F3BE0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (int *)type metadata accessor for RangingConfigDataSession();
  __chkstk_darwin(v14);
  unint64_t v17 = (uint64_t *)((char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((a5 & 0xFFFFFFFFFFFFFFFELL) == 2)
  {
    uint64_t v44 = v15;
    id v18 = [objc_allocWithZone((Class)NISession) init];
    os_log_t v45 = v5;
    [v18 setDelegate:v5];
    uint64_t v19 = a2;
    uint64_t v20 = a1;
    uint64_t v21 = (char *)v17 + v14[5];
    uint64_t v22 = type metadata accessor for Handle();
    uint64_t v23 = v21;
    unint64_t v24 = v20;
    uint64_t v25 = v19;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v23, a3, v22);
    sub_100013210(a4, (uint64_t)v17 + v14[6], &qword_1003F3B30);
    *unint64_t v17 = v18;
    *(void *)((char *)v17 + v14[7]) = v19;
    *(void *)((char *)v17 + v14[8]) = a5;
    *(void *)((char *)v17 + v14[9]) = v24;
    if (a5 == 2)
    {
      sub_1002AC7EC((uint64_t)v17, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for RangingConfigDataSession);
      (*(void (**)(char *, void, uint64_t, int *))(v44 + 56))(v13, 0, 1, v14);
      uint64_t v26 = qword_1003F3A30;
    }
    else
    {
      if (a5 != 3)
      {
        uint64_t v35 = qword_1003EC428;
        id v36 = v18;
        id v37 = v25;
        id v38 = v24;
        if (v35 != -1) {
          swift_once();
        }
        uint64_t v39 = type metadata accessor for Logger();
        sub_100044058(v39, (uint64_t)qword_10040C308);
        uint64_t v40 = Logger.logObject.getter();
        os_log_type_t v41 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v40, v41))
        {
          uint64_t v42 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v42 = 0;
          _os_log_impl((void *)&_mh_execute_header, v40, v41, "Unknow NIFindingRole", v42, 2u);
          swift_slowDealloc();
        }

        goto LABEL_19;
      }
      sub_1002AC7EC((uint64_t)v17, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for RangingConfigDataSession);
      (*(void (**)(char *, void, uint64_t, int *))(v44 + 56))(v13, 0, 1, v14);
      uint64_t v26 = qword_1003F3A38;
    }
    uint64_t v31 = (char *)v45 + v26;
    swift_beginAccess();
    id v32 = v18;
    id v33 = v25;
    id v34 = v24;
    sub_1002AB6F8((uint64_t)v13, (uint64_t)v31);
    swift_endAccess();
    [v18 runWithConfiguration:v24];

LABEL_19:
    sub_1002AC854((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for RangingConfigDataSession);
    return;
  }
  if (qword_1003EC428 != -1) {
    swift_once();
  }
  uint64_t v27 = type metadata accessor for Logger();
  sub_100044058(v27, (uint64_t)qword_10040C308);
  os_log_t v45 = (os_log_t)Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v45, v28))
  {
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 141558275;
    uint64_t v46 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v29 + 12) = 2049;
    uint64_t v46 = a5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v45, v28, "updateConfigDataSession: unexpected role %{private,mask.hash}ld", (uint8_t *)v29, 0x16u);
    swift_slowDealloc();
  }
  else
  {
    os_log_t v30 = v45;
  }
}

void sub_1002A769C(unint64_t a1)
{
  uint64_t v3 = sub_100044014((uint64_t *)&unk_1003F3BE0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 < 2) {
    return;
  }
  if (a1 == 3)
  {
    uint64_t v6 = qword_1003F3A38;
    goto LABEL_6;
  }
  if (a1 == 2)
  {
    uint64_t v6 = qword_1003F3A30;
LABEL_6:
    id v7 = (id *)(v1 + v6);
    swift_beginAccess();
    uint64_t v8 = type metadata accessor for RangingConfigDataSession();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      [*v7 invalidate];
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5, 1, 1, v8);
    swift_beginAccess();
    sub_1002AB6F8((uint64_t)v5, (uint64_t)v7);
    swift_endAccess();
    return;
  }
  if (qword_1003EC428 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_100044058(v10, (uint64_t)qword_10040C308);
  os_log_t v15 = (os_log_t)Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v15, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v11, "Unknow NIFindingRole", v12, 2u);
    swift_slowDealloc();
  }
  os_log_t v13 = v15;
}

void sub_1002A78E4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v49 = a4;
  uint64_t v50 = a3;
  uint64_t v6 = sub_100044014(&qword_1003F3B30);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100044014((uint64_t *)&unk_1003F3BE0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v48 - v13;
  uint64_t v15 = type metadata accessor for RangingConfigDataSession();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  id v18 = (char *)v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = a1;
  uint64_t v19 = a1 + qword_1003F3A30;
  swift_beginAccess();
  sub_100013210(v19, (uint64_t)v14, (uint64_t *)&unk_1003F3BE0);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v20(v14, 1, v15) == 1)
  {
    sub_10000A520((uint64_t)v14, (uint64_t *)&unk_1003F3BE0);
LABEL_9:
    sub_100013210(v19, (uint64_t)v12, (uint64_t *)&unk_1003F3BE0);
    int v30 = v20(v12, 1, v15);
    sub_10000A520((uint64_t)v12, (uint64_t *)&unk_1003F3BE0);
    if (v30 != 1)
    {
      sub_1002A8150();
      if (qword_1003EC428 != -1) {
        swift_once();
      }
      uint64_t v31 = type metadata accessor for Logger();
      sub_100044058(v31, (uint64_t)qword_10040C308);
      id v32 = a2;
      id v33 = Logger.logObject.getter();
      os_log_type_t v34 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = swift_slowAlloc();
        v48[0] = swift_slowAlloc();
        uint64_t v36 = swift_slowAlloc();
        v48[1] = v36;
        *(_DWORD *)uint64_t v35 = 141558531;
        uint64_t v52 = 1752392040;
        uint64_t v53 = v36;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v35 + 12) = 2081;
        uint64_t v52 = sub_100037004(0xD00000000000003DLL, 0x8000000100379060, &v53);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v35 + 22) = 2114;
        uint64_t v52 = (uint64_t)v32;
        id v37 = v32;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(void *)v48[0] = v32;

        _os_log_impl((void *)&_mh_execute_header, v33, v34, "%{private,mask.hash}s\nreceive finder trigger with new token: %{public}@\nshould stop the previous one", (uint8_t *)v35, 0x20u);
        sub_100044014(&qword_1003ECCC8);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
    }
    id v38 = [objc_allocWithZone((Class)NIFindingConfiguration) initWithRole:2 discoveryToken:a2 preferredUpdateRate:2];
    uint64_t v39 = type metadata accessor for Handle();
    uint64_t v40 = *(void *)(v39 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v8, v49, v39);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v8, 0, 1, v39);
    sub_1002A7194(v38, a2, v50, (uint64_t)v8, 2);
    sub_10000A520((uint64_t)v8, &qword_1003F3B30);
    if (qword_1003EC428 != -1) {
      swift_once();
    }
    uint64_t v41 = type metadata accessor for Logger();
    sub_100044058(v41, (uint64_t)qword_10040C308);
    id v42 = v38;
    uint64_t v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v46 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v45 = 141558275;
      uint64_t v53 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v45 + 12) = 2113;
      uint64_t v53 = (uint64_t)v42;
      id v47 = v42;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v46 = v42;

      _os_log_impl((void *)&_mh_execute_header, v43, v44, "startFinderRangingSession with config %{private,mask.hash}@", (uint8_t *)v45, 0x16u);
      sub_100044014(&qword_1003ECCC8);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    return;
  }
  sub_1002ACCD4((uint64_t)v14, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for RangingConfigDataSession);
  sub_10005A548(0, &qword_1003ECA70);
  id v21 = *(id *)&v18[*(int *)(v15 + 28)];
  char v22 = static NSObject.== infix(_:_:)();

  if ((v22 & 1) == 0)
  {
    sub_1002AC854((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for RangingConfigDataSession);
    goto LABEL_9;
  }
  if (qword_1003EC428 != -1) {
    swift_once();
  }
  uint64_t v23 = type metadata accessor for Logger();
  sub_100044058(v23, (uint64_t)qword_10040C308);
  id v24 = a2;
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v28 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 138543362;
    uint64_t v53 = (uint64_t)v24;
    id v29 = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *os_log_type_t v28 = v24;

    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Already has Finder additional configData session\nfor token: %{public}@ running", v27, 0xCu);
    sub_100044014(&qword_1003ECCC8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  sub_1002AC854((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for RangingConfigDataSession);
}

void sub_1002A8150()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100044014((uint64_t *)&unk_1003F3BE0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for RangingConfigDataSession();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v24 - v10;
  uint64_t v12 = v1 + qword_1003F3A30;
  swift_beginAccess();
  sub_100013210(v12, (uint64_t)v4, (uint64_t *)&unk_1003F3BE0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10000A520((uint64_t)v4, (uint64_t *)&unk_1003F3BE0);
    if (qword_1003EC428 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_100044058(v13, (uint64_t)qword_10040C308);
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136446210;
      uint64_t v25 = sub_100037004(0xD000000000000024, 0x80000001003790A0, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "%{public}s no active finder session", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
  else
  {
    sub_1002ACCD4((uint64_t)v4, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for RangingConfigDataSession);
    if (qword_1003EC428 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_100044058(v17, (uint64_t)qword_10040C308);
    sub_1002AC7EC((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for RangingConfigDataSession);
    id v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      void v24[2] = v1;
      *(_DWORD *)uint64_t v20 = 141558275;
      uint64_t v25 = 1752392040;
      uint64_t v26 = v21;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v20 + 12) = 2081;
      v24[1] = v20 + 14;
      type metadata accessor for Handle();
      sub_1002ACF78(&qword_1003F00F0, (void (*)(uint64_t))&type metadata accessor for Handle);
      uint64_t v22 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v25 = sub_100037004(v22, v23, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1002AC854((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for RangingConfigDataSession);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Finder Stop and clear configData session\nwith peerHandle: %{private,mask.hash}s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1002AC854((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for RangingConfigDataSession);
    }

    sub_1002A769C(*(void *)&v11[*(int *)(v5 + 32)]);
    sub_1002AC854((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for RangingConfigDataSession);
  }
}

uint64_t sub_1002A8680(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_1002A86C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[22] = a4;
  v5[23] = v4;
  v5[20] = a2;
  v5[21] = a3;
  v5[19] = a1;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  v5[24] = v6;
  v5[25] = *(void *)(v6 - 8);
  v5[26] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for DispatchQoS();
  v5[27] = v7;
  v5[28] = *(void *)(v7 - 8);
  v5[29] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Handle();
  v5[30] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v5[31] = v9;
  v5[32] = *(void *)(v9 + 64);
  v5[33] = swift_task_alloc();
  v5[34] = swift_task_alloc();
  sub_100044014(&qword_1003F1530);
  v5[35] = swift_task_alloc();
  v5[36] = swift_task_alloc();
  v5[37] = swift_task_alloc();
  v5[38] = swift_task_alloc();
  return _swift_task_switch(sub_1002A88B4, 0, 0);
}

uint64_t sub_1002A88B4()
{
  uint64_t v8 = v0;
  if (qword_1003EC428 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[39] = sub_100044058(v1, (uint64_t)qword_10040C308);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    v0[18] = sub_100037004(0xD00000000000003DLL, 0x8000000100379120, &v7);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%{public}s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v5 = (void *)swift_task_alloc();
  v0[40] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1002A8AA0;
  return daemon.getter();
}

uint64_t sub_1002A8AA0(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v9 = *v1;
  *(void *)(v2 + 328) = a1;
  swift_task_dealloc();
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 336) = v3;
  uint64_t v4 = type metadata accessor for Daemon();
  uint64_t v5 = type metadata accessor for NITokenService();
  uint64_t v6 = sub_1002ACF78(&qword_1003ECCA8, (void (*)(uint64_t))&type metadata accessor for Daemon);
  uint64_t v7 = sub_1002ACF78(&qword_1003F1518, (void (*)(uint64_t))type metadata accessor for NITokenService);
  *os_log_type_t v3 = v9;
  v3[1] = sub_1002A8C7C;
  return ActorServiceDaemon.getService<A>()(v4, v5, v6, v7);
}

uint64_t sub_1002A8C7C(uint64_t a1)
{
  os_log_type_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v3[43] = a1;
  v3[44] = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_1002A9244, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v5 = (void *)swift_task_alloc();
    v3[45] = v5;
    *uint64_t v5 = v4;
    v5[1] = sub_1002A8E04;
    return sub_1003108EC();
  }
}

uint64_t sub_1002A8E04(char a1)
{
  *(unsigned char *)(*(void *)v1 + 376) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1002A8F04, 0, 0);
}

uint64_t sub_1002A8F04()
{
  uint64_t v11 = v0;
  switch(*(unsigned char *)(v0 + 376))
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      char v1 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v1) {
        goto LABEL_4;
      }
      uint64_t v6 = Logger.logObject.getter();
      os_log_type_t v7 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        uint64_t v10 = swift_slowAlloc();
        *(_DWORD *)uint64_t v8 = 136446210;
        *(void *)(v0 + 80) = sub_100037004(0xD00000000000003DLL, 0x8000000100379120, &v10);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s should not start Findee configData session.", v8, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      swift_release();

      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
      uint64_t result = v9();
      break;
    default:
      swift_bridgeObjectRelease();
LABEL_4:
      swift_release();
      type metadata accessor for NIRangingService();
      uint64_t v2 = (void *)swift_task_alloc();
      *(void *)(v0 + 368) = v2;
      *uint64_t v2 = v0;
      v2[1] = sub_1002A94B8;
      uint64_t v3 = *(void *)(v0 + 304);
      uint64_t v4 = *(void *)(v0 + 160);
      uint64_t result = sub_1002A2CEC(v3, v4);
      break;
  }
  return result;
}

uint64_t sub_1002A9244()
{
  uint64_t v10 = v0;
  swift_release();
  swift_errorRetain();
  swift_errorRetain();
  char v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[44];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    v0[16] = sub_100037004(0xD00000000000003DLL, 0x8000000100379120, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v4 + 12) = 2082;
    v0[8] = v3;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v5 = String.init<A>(describing:)();
    v0[9] = sub_100037004(v5, v6, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%{public}s\nchecking Findee device failed: %{public}s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1002A94B8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1002A95B4, 0, 0);
}

uint64_t sub_1002A95B4()
{
  uint64_t v68 = v0;
  uint64_t v1 = v0[37];
  sub_100013210(v0[38], v1, &qword_1003F1530);
  uint64_t v2 = type metadata accessor for DiscoveryToken(0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  int v4 = v3(v1, 1, v2);
  uint64_t v5 = (id *)v0[37];
  if (v4 == 1)
  {
    sub_10000A520(v0[37], &qword_1003F1530);
  }
  else
  {
    unint64_t v6 = (void *)v0[19];
    id v7 = *v5;
    sub_1002AC854((uint64_t)v5, type metadata accessor for DiscoveryToken);
    sub_10005A548(0, (unint64_t *)&qword_1003F0418);
    id v8 = v7;
    id v9 = v6;
    char v10 = static NSObject.== infix(_:_:)();

    if (v10)
    {
      uint64_t v11 = v0[34];
      uint64_t v12 = v0[31];
      uint64_t v13 = v0[30];
      uint64_t v63 = v0[28];
      uint64_t v64 = v0[27];
      os_log_t log = (os_log_t)v0[38];
      uint64_t v56 = v0[29];
      uint64_t v57 = v0[26];
      uint64_t v61 = v0[25];
      uint64_t v14 = (char *)v0[23];
      uint64_t v59 = v0[24];
      uint64_t v16 = v0[21];
      unint64_t v15 = v0[22];
      uint64_t v53 = v16;
      uint64_t v17 = (void *)v0[19];
      uint64_t v55 = *(void **)&v14[qword_1003F3A28];
      (*(void (**)(uint64_t, void, uint64_t))(v12 + 16))(v11, v0[20], v13);
      unint64_t v18 = (*(unsigned __int8 *)(v12 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      os_log_type_t v19 = (char *)swift_allocObject();
      *((void *)v19 + 2) = v14;
      *((void *)v19 + 3) = v17;
      *((void *)v19 + 4) = v16;
      *((void *)v19 + 5) = v15;
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(&v19[v18], v11, v13);
      v0[6] = sub_1002AC784;
      v0[7] = v19;
      v0[2] = _NSConcreteStackBlock;
      v0[3] = 1107296256;
      v0[4] = sub_1002A8680;
      v0[5] = &unk_1003E4328;
      uint64_t v20 = _Block_copy(v0 + 2);
      id v21 = v17;
      id v22 = v55;
      unint64_t v23 = v14;
      sub_100022C64(v53, v15);
      static DispatchQoS.unspecified.getter();
      v0[17] = _swiftEmptyArrayStorage;
      sub_1002ACF78((unint64_t *)&unk_1003F3BF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100044014(&qword_1003F38E0);
      sub_1002ACFC0((unint64_t *)&qword_1003F3C00, &qword_1003F38E0);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v20);

      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v57, v59);
      (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v56, v64);
      sub_10000A520((uint64_t)log, &qword_1003F1530);
      swift_release();
      goto LABEL_12;
    }
  }
  uint64_t v24 = v0[38];
  uint64_t v25 = v0[36];
  uint64_t v26 = (void *)v0[19];
  (*(void (**)(void, void, void))(v0[31] + 16))(v0[33], v0[20], v0[30]);
  sub_100013210(v24, v25, &qword_1003F1530);
  id v27 = v26;
  os_log_type_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v28, v29))
  {
    os_log_type_t v65 = v29;
    uint64_t v58 = v0[35];
    uint64_t v60 = v0[36];
    uint64_t v30 = v0[31];
    uint64_t v52 = v0[30];
    uint64_t v54 = v0[33];
    uint64_t v31 = swift_slowAlloc();
    uint64_t v62 = (void *)swift_slowAlloc();
    uint64_t v67 = swift_slowAlloc();
    *(_DWORD *)uint64_t v31 = 136447235;
    v0[11] = sub_100037004(0xD00000000000003DLL, 0x8000000100379120, &v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v31 + 12) = 2160;
    v0[12] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v31 + 22) = 2081;
    sub_1002ACF78(&qword_1003F00F0, (void (*)(uint64_t))&type metadata accessor for Handle);
    uint64_t v32 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[13] = sub_100037004(v32, v33, &v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v54, v52);
    *(_WORD *)(v31 + 32) = 2082;
    sub_100013210(v60, v58, &qword_1003F1530);
    int v34 = v3(v58, 1, v2);
    uint64_t v35 = v0[35];
    if (v34 == 1)
    {
      sub_10000A520(v0[35], &qword_1003F1530);
      uint64_t v36 = 0;
      unint64_t v37 = 0xE000000000000000;
    }
    else
    {
      uint64_t v36 = sub_1003087F8();
      unint64_t v37 = v45;
      sub_1002AC854(v35, type metadata accessor for DiscoveryToken);
    }
    uint64_t v46 = v0[38];
    uint64_t v47 = v0[36];
    os_log_type_t v48 = (void *)v0[19];
    v0[14] = sub_100037004(v36, v37, &v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000A520(v47, &qword_1003F1530);
    *(_WORD *)(v31 + 42) = 2114;
    v0[15] = v48;
    id v49 = v48;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v62 = v48;

    _os_log_impl((void *)&_mh_execute_header, v28, v65, "%{public}s from %{private,mask.hash}s\nlocal peerToken: %{public}s doesn't match with recieved peerToken: %{public}@, ignore it", (uint8_t *)v31, 0x34u);
    sub_100044014(&qword_1003ECCC8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v44 = v46;
  }
  else
  {
    uint64_t v38 = v0[38];
    uint64_t v39 = v0[36];
    uint64_t v40 = v0[33];
    uint64_t v41 = v0[30];
    uint64_t v42 = v0[31];
    uint64_t v43 = (void *)v0[19];

    sub_10000A520(v39, &qword_1003F1530);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v40, v41);
    uint64_t v44 = v38;
  }
  sub_10000A520(v44, &qword_1003F1530);
LABEL_12:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v50 = (uint64_t (*)(void))v0[1];
  return v50();
}

void sub_1002A9DB4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v52 = a4;
  uint64_t v55 = a3;
  uint64_t v8 = sub_100044014(&qword_1003F3B30);
  __chkstk_darwin(v8 - 8);
  char v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100044014((uint64_t *)&unk_1003F3BE0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for RangingConfigDataSession();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (id *)((char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = a1 + qword_1003F3A38;
  swift_beginAccess();
  uint64_t v53 = (id *)v18;
  sub_100013210(v18, (uint64_t)v13, (uint64_t *)&unk_1003F3BE0);
  os_log_type_t v19 = *(unsigned int (**)(void, void, void))(v15 + 48);
  uint64_t v56 = v14;
  uint64_t v54 = v15 + 48;
  if (v19(v13, 1, v14) == 1)
  {
    sub_10000A520((uint64_t)v13, (uint64_t *)&unk_1003F3BE0);
LABEL_9:
    id v28 = [objc_allocWithZone((Class)NIFindingConfiguration) initWithRole:3 discoveryToken:a2 preferredUpdateRate:2];
    uint64_t v29 = type metadata accessor for Handle();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v10, 1, 1, v29);
    sub_1002A7194(v28, a2, a5, (uint64_t)v10, 3);
    sub_10000A520((uint64_t)v10, &qword_1003F3B30);
    if (qword_1003EC428 != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    uint64_t v31 = sub_100044058(v30, (uint64_t)qword_10040C308);
    uint64_t v32 = v28;
    uint64_t v51 = v31;
    unint64_t v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc();
      uint64_t v50 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 141558275;
      uint64_t v57 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v35 + 12) = 2113;
      uint64_t v57 = (uint64_t)v32;
      uint64_t v36 = v19;
      unint64_t v37 = v32;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v50 = v32;

      os_log_type_t v19 = v36;
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Findee session started and notifyDiscoveredNearbyObject\nwith config: %{private,mask.hash}@", (uint8_t *)v35, 0x16u);
      sub_100044014(&qword_1003ECCC8);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      unint64_t v33 = v32;
    }
    uint64_t v38 = v53;

    if (!v19(v38, 1, v56))
    {
      id v39 = [*v38 findingNotifier];
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      [v39 notifyDiscoveredNearbyObjectWithToken:a2 sharedConfigurationData:isa];
    }
    uint64_t v41 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v43 = 0;
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "Findee addtional configData session notify end", v43, 2u);
      swift_slowDealloc();
    }
    else
    {
    }
    return;
  }
  sub_1002ACCD4((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for RangingConfigDataSession);
  sub_10005A548(0, &qword_1003ECA70);
  id v20 = *(id *)((char *)v17 + *(int *)(v56 + 28));
  char v21 = static NSObject.== infix(_:_:)();

  if ((v21 & 1) == 0)
  {
    sub_1002AC854((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for RangingConfigDataSession);
    goto LABEL_9;
  }
  if (qword_1003EC428 != -1) {
    swift_once();
  }
  uint64_t v22 = type metadata accessor for Logger();
  sub_100044058(v22, (uint64_t)qword_10040C308);
  unint64_t v23 = a2;
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v56 = swift_slowAlloc();
    uint64_t v57 = (uint64_t)v23;
    *(_DWORD *)uint64_t v26 = 138543362;
    id v27 = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(void *)uint64_t v56 = v23;

    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Already has Findee addtional configData session\nfor token: %{public}@ running, just notifyDiscoveredNearbyObject", v26, 0xCu);
    sub_100044014(&qword_1003ECCC8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v24 = v23;
  }

  id v44 = [*v17 findingNotifier];
  Class v45 = Data._bridgeToObjectiveC()().super.isa;
  [v44 notifyDiscoveredNearbyObjectWithToken:v23 sharedConfigurationData:v45];

  uint64_t v46 = Logger.logObject.getter();
  os_log_type_t v47 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v46, v47))
  {
    os_log_type_t v48 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v48 = 0;
    _os_log_impl((void *)&_mh_execute_header, v46, v47, "Findee addtional configData session notify end", v48, 2u);
    swift_slowDealloc();
  }

  sub_1002AC854((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for RangingConfigDataSession);
}

void sub_1002AA558(void *a1, void *a2, uint64_t a3)
{
  uint64_t v89 = a3;
  uint64_t v5 = type metadata accessor for Handle();
  unint64_t v88 = *(void (**)(char *, uint64_t))(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v85 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  os_log_t v86 = (os_log_t)((char *)&v77 - v9);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v77 - v10;
  uint64_t v12 = sub_100044014((uint64_t *)&unk_1003F3BE0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for RangingConfigDataSession();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v84 = (uint64_t)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v83 = (uint64_t)&v77 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  unint64_t v23 = (char *)&v77 - v22;
  __chkstk_darwin(v21);
  os_log_type_t v25 = (char *)&v77 - v24;
  uint64_t v87 = a1;
  uint64_t v26 = (uint64_t)a1 + qword_1003F3A38;
  swift_beginAccess();
  sub_100013210(v26, (uint64_t)v14, (uint64_t *)&unk_1003F3BE0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
  {
    sub_1002ACCD4((uint64_t)v14, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for RangingConfigDataSession);
    sub_10005A548(0, &qword_1003ECA70);
    id v31 = *(id *)&v25[*(int *)(v15 + 28)];
    id v80 = a2;
    char v32 = static NSObject.== infix(_:_:)();

    unint64_t v33 = v88;
    os_log_type_t v34 = (void (*)(char *, uint64_t, uint64_t))*((void *)v88 + 2);
    v34(v11, v89, v5);
    os_log_type_t v82 = v25;
    sub_1002AC7EC((uint64_t)v25, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for RangingConfigDataSession);
    uint64_t v81 = v15;
    if (v32)
    {
      sub_1002AC854((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for RangingConfigDataSession);
      uint64_t v35 = (void (*)(char *, uint64_t))*((void *)v33 + 1);
      v35(v11, v5);
    }
    else
    {
      char v36 = static Handle.== infix(_:_:)();
      sub_1002AC854((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for RangingConfigDataSession);
      unint64_t v37 = (void *)((char *)v33 + 8);
      uint64_t v35 = (void (*)(char *, uint64_t))*((void *)v33 + 1);
      v35(v11, v5);
      if ((v36 & 1) == 0)
      {
        unint64_t v88 = v35;
        uint64_t v50 = (uint64_t)v82;
        if (qword_1003EC428 != -1) {
          swift_once();
        }
        uint64_t v51 = type metadata accessor for Logger();
        sub_100044058(v51, (uint64_t)qword_10040C308);
        uint64_t v52 = v83;
        sub_1002AC7EC(v50, v83, (uint64_t (*)(void))type metadata accessor for RangingConfigDataSession);
        uint64_t v53 = v84;
        sub_1002AC7EC(v50, v84, (uint64_t (*)(void))type metadata accessor for RangingConfigDataSession);
        uint64_t v54 = v85;
        v34(v85, v89, v5);
        id v55 = v80;
        uint64_t v56 = Logger.logObject.getter();
        os_log_type_t v57 = static os_log_type_t.default.getter();
        int v58 = v57;
        if (os_log_type_enabled(v56, v57))
        {
          uint64_t v59 = swift_slowAlloc();
          uint64_t v79 = (void *)swift_slowAlloc();
          uint64_t v60 = swift_slowAlloc();
          uint64_t v89 = v60;
          *(_DWORD *)uint64_t v59 = 141559811;
          uint64_t v90 = 1752392040;
          uint64_t v91 = v60;
          uint64_t v87 = v37;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v59 + 12) = 2081;
          os_log_t v86 = v56;
          id v61 = *(id *)(v52 + *(int *)(v81 + 28));
          LODWORD(v80) = v58;
          id v62 = v61;
          id v63 = [v61 description];
          uint64_t v78 = v5;
          id v64 = v63;
          uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v66 = v53;
          unint64_t v68 = v67;

          uint64_t v90 = sub_100037004(v65, v68, &v91);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_1002AC854(v52, (uint64_t (*)(void))type metadata accessor for RangingConfigDataSession);
          *(_WORD *)(v59 + 22) = 2160;
          uint64_t v90 = 1752392040;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v59 + 32) = 2113;
          uint64_t v90 = (uint64_t)v55;
          id v69 = v55;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          void *v79 = v55;

          *(_WORD *)(v59 + 42) = 2160;
          uint64_t v90 = 1752392040;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v59 + 52) = 2081;
          sub_1002ACF78(&qword_1003F00F0, (void (*)(uint64_t))&type metadata accessor for Handle);
          uint64_t v70 = v78;
          uint64_t v71 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v90 = sub_100037004(v71, v72, &v91);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_1002AC854(v66, (uint64_t (*)(void))type metadata accessor for RangingConfigDataSession);
          *(_WORD *)(v59 + 62) = 2160;
          uint64_t v90 = 1752392040;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v59 + 72) = 2081;
          unint64_t v73 = v85;
          uint64_t v74 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v90 = sub_100037004(v74, v75, &v91);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          v88(v73, v70);
          os_log_t v76 = v86;
          _os_log_impl((void *)&_mh_execute_header, v86, (os_log_type_t)v80, "Receivied unknown token, not stop configData session\npeerToken: %{private,mask.hash}s\ntoken: %{private,mask.hash}@\npeerHandle: %{private,mask.hash}s\nhandle: %{private,mask.hash}s", (uint8_t *)v59, 0x52u);
          sub_100044014(&qword_1003ECCC8);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v49 = (uint64_t)v82;
        }
        else
        {

          v88(v54, v5);
          sub_1002AC854(v53, (uint64_t (*)(void))type metadata accessor for RangingConfigDataSession);

          sub_1002AC854(v52, (uint64_t (*)(void))type metadata accessor for RangingConfigDataSession);
          uint64_t v49 = v50;
        }
        goto LABEL_16;
      }
    }
    os_log_t v38 = v86;
    uint64_t v39 = v89;
    if (qword_1003EC428 != -1) {
      swift_once();
    }
    uint64_t v40 = type metadata accessor for Logger();
    sub_100044058(v40, (uint64_t)qword_10040C308);
    v34((char *)v38, v39, v5);
    uint64_t v41 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = swift_slowAlloc();
      unint64_t v88 = v35;
      uint64_t v44 = v43;
      uint64_t v45 = swift_slowAlloc();
      *(_DWORD *)uint64_t v44 = 141558275;
      uint64_t v90 = 1752392040;
      uint64_t v91 = v45;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v44 + 12) = 2081;
      sub_1002ACF78(&qword_1003F00F0, (void (*)(uint64_t))&type metadata accessor for Handle);
      uint64_t v46 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v90 = sub_100037004(v46, v47, &v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v88((char *)v38, v5);
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "Findee Stop and clear configData session ranging\nfor peerHandle: %{private,mask.hash}s", (uint8_t *)v44, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      v35((char *)v38, v5);
    }

    uint64_t v48 = (uint64_t)v82;
    sub_1002A769C(*(void *)&v82[*(int *)(v81 + 32)]);
    uint64_t v49 = v48;
LABEL_16:
    sub_1002AC854(v49, (uint64_t (*)(void))type metadata accessor for RangingConfigDataSession);
    return;
  }
  sub_10000A520((uint64_t)v14, (uint64_t *)&unk_1003F3BE0);
  if (qword_1003EC428 != -1) {
    swift_once();
  }
  uint64_t v27 = type metadata accessor for Logger();
  sub_100044058(v27, (uint64_t)qword_10040C308);
  id v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v30 = 0;
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "no active findee config data session", v30, 2u);
    swift_slowDealloc();
  }
}

void sub_1002AB0B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100044014((uint64_t *)&unk_1003F3BE0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for RangingConfigDataSession();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (id *)((char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = a1 + qword_1003F3A30;
  swift_beginAccess();
  sub_100013210(v11, (uint64_t)v6, (uint64_t *)&unk_1003F3BE0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
  {
    sub_1002ACCD4((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for RangingConfigDataSession);
    sub_10005A548(0, &qword_1003ECA70);
    id v16 = *(id *)((char *)v10 + *(int *)(v7 + 28));
    char v17 = static NSObject.== infix(_:_:)();

    if (v17)
    {
      if (qword_1003EC428 != -1) {
        swift_once();
      }
      uint64_t v18 = type metadata accessor for Logger();
      sub_100044058(v18, (uint64_t)qword_10040C308);
      uint64_t v19 = Logger.logObject.getter();
      os_log_type_t v20 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v21 = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "Finder recieved configData from Findee, trying notifyDiscoveredNearbyObject", v21, 2u);
        swift_slowDealloc();
      }

      id v22 = [*v10 findingNotifier];
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      [v22 notifyDiscoveredNearbyObjectWithToken:a2 sharedConfigurationData:isa];

      uint64_t v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v24, v25)) {
        goto LABEL_19;
      }
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      uint64_t v27 = "Finder session notifyDiscoveredNearbyObject end";
    }
    else
    {
      if (qword_1003EC428 != -1) {
        swift_once();
      }
      uint64_t v28 = type metadata accessor for Logger();
      sub_100044058(v28, (uint64_t)qword_10040C308);
      uint64_t v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v24, v25)) {
        goto LABEL_19;
      }
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      uint64_t v27 = "Finder received different token than configSession is waiting for, ignore it";
    }
    _os_log_impl((void *)&_mh_execute_header, v24, v25, v27, v26, 2u);
    swift_slowDealloc();
LABEL_19:

    sub_1002AC854((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for RangingConfigDataSession);
    return;
  }
  sub_10000A520((uint64_t)v6, (uint64_t *)&unk_1003F3BE0);
  if (qword_1003EC428 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_100044058(v12, (uint64_t)qword_10040C308);
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "no active finder config data session", v15, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_1002AB554()
{
  uint64_t v1 = type metadata accessor for Handle();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  uint64_t v7 = (v5 + v3 + v4) & ~v3;
  uint64_t v8 = v7 + v5;

  uint64_t v9 = v0 + v4;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v10(v9, v1);
  v10(v0 + v7, v1);

  return _swift_deallocObject(v0, v8, v6);
}

void sub_1002AB650()
{
  uint64_t v1 = *(void *)(type metadata accessor for Handle() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = *(void **)(v0 + 24);
  uint64_t v6 = v0 + ((*(void *)(v1 + 64) + v2 + v3) & ~v2);

  sub_1002A78E4(v4, v5, v0 + v3, v6);
}

uint64_t sub_1002AB6E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1002AB6F0()
{
  return swift_release();
}

uint64_t sub_1002AB6F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100044014((uint64_t *)&unk_1003F3BE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

id sub_1002AB760(uint64_t a1)
{
  uint64_t v15 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v14 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v2 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v5);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v6 - 8);
  *(void *)&v1[qword_1003F3A20] = 0;
  uint64_t v13 = qword_1003F3A28;
  uint64_t v12 = sub_10005A548(0, &qword_1003F3A00);
  uint64_t v7 = v1;
  static DispatchQoS.unspecified.getter();
  uint64_t v18 = _swiftEmptyArrayStorage;
  sub_1002ACF78(&qword_1003F3A08, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100044014(&qword_1003F3A10);
  sub_1002ACFC0(&qword_1003F3A18, &qword_1003F3A10);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v14);
  *(void *)&v1[v13] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v8 = &v7[qword_1003F3A30];
  uint64_t v9 = type metadata accessor for RangingConfigDataSession();
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
  v10(v8, 1, 1, v9);
  v10(&v7[qword_1003F3A38], 1, 1, v9);
  swift_weakInit();
  swift_weakAssign();

  v17.receiver = v7;
  v17.super_class = ObjectType;
  return [super init];
}

void sub_1002ABA94()
{
  if (qword_1003EC420 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100044058(v0, (uint64_t)qword_10040C2F0);
  swift_errorRetain();
  swift_errorRetain();
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v2 = 136446210;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v3 = String.init<A>(describing:)();
    sub_100037004(v3, v4, &v6);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "didFailWithError: %{public}s", v2, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
}

uint64_t sub_1002ABC8C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100044014((uint64_t *)&unk_1003F3C10);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1003EC420 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_100044058(v7, (uint64_t)qword_10040C2F0);
  id v8 = a1;
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v19 = v2;
    uint64_t v13 = (void *)v12;
    *(_DWORD *)uint64_t v11 = 141558275;
    uint64_t v20 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 12) = 2113;
    uint64_t v20 = (uint64_t)v8;
    id v14 = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v13 = v8;

    _os_log_impl((void *)&_mh_execute_header, v9, v10, "didDiscover: %{private,mask.hash}@", (uint8_t *)v11, 0x16u);
    sub_100044014(&qword_1003ECCC8);
    swift_arrayDestroy();
    uint64_t v2 = v19;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v15 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v6, 1, 1, v15);
  id v16 = (void *)swift_allocObject();
  v16[2] = 0;
  v16[3] = 0;
  v16[4] = v2;
  v16[5] = v8;
  id v17 = v8;
  swift_retain();
  sub_100104208((uint64_t)v6, (uint64_t)&unk_1003F3910, (uint64_t)v16);
  return swift_release();
}

uint64_t sub_1002ABF34(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100044014((uint64_t *)&unk_1003F3C10);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1003EC420 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_100044058(v7, (uint64_t)qword_10040C2F0);
  swift_bridgeObjectRetain_n();
  id v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v23 = v2;
    uint64_t v11 = v10;
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 141558275;
    uint64_t v24 = 1752392040;
    uint64_t v25 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 12) = 2081;
    sub_10005A548(0, (unint64_t *)&unk_1003F3C40);
    swift_bridgeObjectRetain();
    uint64_t v13 = Array.description.getter();
    unint64_t v15 = v14;
    swift_bridgeObjectRelease();
    uint64_t v24 = sub_100037004(v13, v15, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "didUpdate: %{private,mask.hash}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v2 = v23;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    if (result) {
      goto LABEL_8;
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v16 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v16) {
    return swift_bridgeObjectRelease();
  }
LABEL_8:
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_11;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v18 = *(id *)(a1 + 32);
LABEL_11:
    id v19 = v18;
    swift_bridgeObjectRelease();
    uint64_t v20 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v6, 1, 1, v20);
    uint64_t v21 = (void *)swift_allocObject();
    void v21[2] = 0;
    v21[3] = 0;
    void v21[4] = v2;
    v21[5] = v19;
    swift_retain();
    sub_100104208((uint64_t)v6, (uint64_t)&unk_1003F38F0, (uint64_t)v21);
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t sub_1002AC2A8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  id v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_10004A274;
  return sub_1002A6D10(a1, v4, v5, v7, v6);
}

uint64_t sub_1002AC36C()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1002AC3B4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  id v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_10004A274;
  return sub_1002A6B78(a1, v4, v5, v7, v6);
}

uint64_t sub_1002AC474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_10004A274;
  return sub_1002A0ABC(a1, a2, a3, a4, a5);
}

uint64_t sub_1002AC53C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002AC574(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v10 = *(int **)(v4 + 16);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_100018CD0;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t *, uint64_t *, uint64_t, int *))((char *)&dword_1003F3950
                                                                              + dword_1003F3950);
  return v12(a1, a2, a3, a4, v10);
}

uint64_t sub_1002AC654()
{
  sub_100044090(*(void *)(v0 + 32), *(void *)(v0 + 40));

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1002AC69C()
{
  sub_1002AB0B0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1002AC6A8()
{
  uint64_t v1 = type metadata accessor for Handle();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  sub_100044090(*(void *)(v0 + 32), *(void *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_1002AC784()
{
  uint64_t v1 = *(void *)(type metadata accessor for Handle() - 8);
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = (uint64_t)v0 + ((*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_1002A9DB4(v2, v3, v4, v5, v6);
}

uint64_t sub_1002AC7EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002AC854(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1002AC8B4()
{
  uint64_t v1 = type metadata accessor for Handle();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_1002AC988()
{
  uint64_t v1 = *(void *)(type metadata accessor for Handle() - 8);
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_1002AA558(v2, v3, v4);
}

uint64_t sub_1002AC9F0(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_100044014(&qword_1003F3988) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10004A274;
  return sub_10029D244(a1, v6, v7, v8, v9);
}

uint64_t sub_1002ACB28(uint64_t a1)
{
  return sub_10029DAA8(a1, *(void *)(v1 + 16));
}

uint64_t sub_1002ACB48(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_100044014(&qword_1003F3988) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10004A274;
  return sub_10029DB78(a1, v6, v7, v8, v9);
}

unint64_t sub_1002ACC80()
{
  unint64_t result = qword_1003F39B8;
  if (!qword_1003F39B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1003F39B8);
  }
  return result;
}

uint64_t sub_1002ACCD4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002ACD3C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10004A274;
  return sub_1002984C8();
}

uint64_t sub_1002ACDF0()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002ACE28()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10004A274;
  return sub_100299888();
}

uint64_t sub_1002ACEDC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100018CD0;
  return sub_100297F04();
}

uint64_t sub_1002ACF78(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002ACFC0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10004AE58(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1002AD034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (qword_1003EC420 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_100044058(v8, (uint64_t)qword_10040C2F0);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    v16[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136446210;
    sub_100037004(0xD000000000000044, 0x80000001003792D0, v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "%{public}s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v12 = v4 + OBJC_IVAR____TtC13findmylocated16NIRangingService_discoverContinuation;
  swift_beginAccess();
  sub_1002ADB70(a2, v12);
  swift_endAccess();
  uint64_t v13 = v4 + OBJC_IVAR____TtC13findmylocated16NIRangingService_updateContinuation;
  swift_beginAccess();
  sub_1002ADB70(a3, v13);
  swift_endAccess();
  uint64_t v14 = *(void **)(v4 + 128);
  if (v14)
  {
    id v15 = v14;
    sub_1002AD6F0(a1);
  }
}

uint64_t sub_1002AD254()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100044014(&qword_1003F1D48);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v30 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100044014(&qword_1003F38F8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v28 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v28 - v12;
  if (qword_1003EC420 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_100044058(v14, (uint64_t)qword_10040C2F0);
  id v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v28 = v1;
    id v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v29 = v8;
    v32[0] = v18;
    *(_DWORD *)id v17 = 136446210;
    uint64_t v31 = sub_100037004(0xD000000000000015, 0x80000001003792B0, v32);
    uint64_t v1 = v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "%{public}s", v17, 0xCu);
    swift_arrayDestroy();
    uint64_t v8 = v29;
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v19 = *(void **)(v1 + 128);
  if (v19)
  {
    id v20 = v19;
    sub_1002AD92C();
  }
  uint64_t v21 = v1 + OBJC_IVAR____TtC13findmylocated16NIRangingService_discoverContinuation;
  swift_beginAccess();
  sub_1002ADA40(v21, (uint64_t)v13);
  uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v22(v13, 1, v2))
  {
    sub_1002ADAA8((uint64_t)v13);
  }
  else
  {
    uint64_t v23 = v30;
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v30, v13, v2);
    sub_1002ADAA8((uint64_t)v13);
    AsyncStream.Continuation.finish()();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v23, v2);
  }
  uint64_t v24 = v1 + OBJC_IVAR____TtC13findmylocated16NIRangingService_updateContinuation;
  swift_beginAccess();
  sub_1002ADA40(v24, (uint64_t)v11);
  if (v22(v11, 1, v2))
  {
    sub_1002ADAA8((uint64_t)v11);
  }
  else
  {
    uint64_t v25 = v30;
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v30, v11, v2);
    sub_1002ADAA8((uint64_t)v11);
    AsyncStream.Continuation.finish()();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v25, v2);
  }
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v26(v8, 1, 1, v2);
  swift_beginAccess();
  sub_1002ADB08((uint64_t)v8, v21);
  swift_endAccess();
  v26(v8, 1, 1, v2);
  swift_beginAccess();
  sub_1002ADB08((uint64_t)v8, v24);
  return swift_endAccess();
}

void sub_1002AD6F0(uint64_t a1)
{
  uint64_t v2 = v1;
  id v3 = [objc_allocWithZone((Class)NIFindingConfiguration) initWithRole:0 discoveryToken:a1 preferredUpdateRate:2];
  if (qword_1003EC428 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100044058(v4, (uint64_t)qword_10040C308);
  id v5 = v3;
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 141558275;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 12) = 2113;
    id v10 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v9 = v5;

    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Start ranging with %{private,mask.hash}@", (uint8_t *)v8, 0x16u);
    sub_100044014(&qword_1003ECCC8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v11 = [objc_allocWithZone((Class)NISession) init];
  uint64_t v12 = *(void **)(v2 + qword_1003F3A20);
  *(void *)(v2 + qword_1003F3A20) = v11;

  [v11 runWithConfiguration:v5];
}

void sub_1002AD92C()
{
  uint64_t v1 = v0;
  if (qword_1003EC428 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100044058(v2, (uint64_t)qword_10040C308);
  id v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Stop ranging", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = qword_1003F3A20;
  os_log_type_t v7 = *(void **)(v1 + qword_1003F3A20);
  if (v7)
  {
    [v7 invalidate];
    os_log_type_t v7 = *(void **)(v1 + v6);
  }
  *(void *)(v1 + v6) = 0;
}

uint64_t sub_1002ADA40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100044014(&qword_1003F38F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002ADAA8(uint64_t a1)
{
  uint64_t v2 = sub_100044014(&qword_1003F38F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1002ADB08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100044014(&qword_1003F38F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002ADB70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100044014(&qword_1003F38F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_1002ADBD8()
{
  sub_1002B26C0(319, &qword_1003F3B28, (void (*)(uint64_t))type metadata accessor for RangingConfigDataSession);
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

void sub_1002ADCA8(unint64_t a1)
{
  uint64_t v3 = sub_100044014((uint64_t *)&unk_1003F3BE0);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 < 2) {
    return;
  }
  if (a1 == 3)
  {
    uint64_t v6 = qword_1003F3A38;
    goto LABEL_6;
  }
  if (a1 == 2)
  {
    uint64_t v6 = qword_1003F3A30;
LABEL_6:
    os_log_type_t v7 = (id *)(v1 + v6);
    swift_beginAccess();
    uint64_t v8 = type metadata accessor for RangingConfigDataSession();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      [*v7 invalidate];
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5, 1, 1, v8);
    swift_beginAccess();
    sub_1002AB6F8((uint64_t)v5, (uint64_t)v7);
    swift_endAccess();
    return;
  }
  if (qword_1003EC428 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_100044058(v10, (uint64_t)qword_10040C308);
  os_log_t v15 = (os_log_t)Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v15, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v11, "Unknow NIFindingRole", v12, 2u);
    swift_slowDealloc();
  }
  os_log_t v13 = v15;
}

void sub_1002ADEF0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100044014((uint64_t *)&unk_1003F3BE0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for RangingConfigDataSession();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  os_log_type_t v11 = (char *)v25 - v10;
  uint64_t v12 = v1 + qword_1003F3A30;
  swift_beginAccess();
  sub_1002B2714(v12, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1002B277C((uint64_t)v4);
    if (qword_1003EC428 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_100044058(v13, (uint64_t)qword_10040C308);
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      os_log_type_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v16 = 136446210;
      uint64_t v26 = sub_100037004(0xD000000000000024, 0x80000001003790A0, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "%{public}s no active finder session", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
  else
  {
    sub_1002B27DC((uint64_t)v4, (uint64_t)v11);
    if (qword_1003EC428 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_100044058(v17, (uint64_t)qword_10040C308);
    sub_1002B2840((uint64_t)v11, (uint64_t)v9);
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      v25[2] = v1;
      uint64_t v21 = v20;
      uint64_t v22 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 141558275;
      uint64_t v26 = 1752392040;
      uint64_t v27 = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v21 + 12) = 2081;
      v25[1] = v21 + 14;
      type metadata accessor for Handle();
      sub_1002B31B4(&qword_1003F00F0, (void (*)(uint64_t))&type metadata accessor for Handle);
      uint64_t v23 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v26 = sub_100037004(v23, v24, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1002B28A4((uint64_t)v9);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Finder Stop and clear configData session\nwith peerHandle: %{private,mask.hash}s", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1002B28A4((uint64_t)v9);
    }

    sub_1002ADCA8(*(void *)&v11[*(int *)(v5 + 32)]);
    sub_1002B28A4((uint64_t)v11);
  }
}

void sub_1002AE3AC(uint64_t a1)
{
  uint64_t v2 = sub_100044014((uint64_t *)&unk_1003F3BE0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for RangingConfigDataSession();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (id *)((char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = a1 + qword_1003F3A30;
  swift_beginAccess();
  sub_1002B2714(v9, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1002B277C((uint64_t)v4);
  }
  else
  {
    sub_1002B27DC((uint64_t)v4, (uint64_t)v8);
    sub_10005A548(0, &qword_1003ECA70);
    id v10 = *v8;
    char v11 = static NSObject.== infix(_:_:)();

    if (v11)
    {
      sub_1002ADEF0();
      sub_1002B28A4((uint64_t)v8);
      return;
    }
    sub_1002B28A4((uint64_t)v8);
  }
  if (qword_1003EC428 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_100044058(v12, (uint64_t)qword_10040C308);
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    os_log_type_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v15 = 136446210;
    v16[1] = sub_100037004(0xD00000000000001CLL, 0x8000000100379460, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, " %{public}s ignore, when its not Finder session", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
}

void sub_1002AE6B8(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_1002B2900(v4);
}

uint64_t sub_1002AE720(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v28 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1003EC428 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_100044058(v11, (uint64_t)qword_10040C308);
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v27 = v5;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v25 = a1;
    os_log_type_t v15 = (uint8_t *)v14;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v26 = v8;
    aBlock[0] = v16;
    *(_DWORD *)os_log_type_t v15 = 136446210;
    uint64_t v29 = (void *)sub_100037004(0xD00000000000001ALL, 0x8000000100379440, aBlock);
    uint64_t v5 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s", v15, 0xCu);
    swift_arrayDestroy();
    uint64_t v8 = v26;
    swift_slowDealloc();
    a1 = v25;
    swift_slowDealloc();
  }

  uint64_t v17 = *(void **)&v2[qword_1003F3A28];
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = v2;
  aBlock[4] = (uint64_t)sub_1002B36C0;
  aBlock[5] = v18;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1002A8680;
  aBlock[3] = (uint64_t)&unk_1003E4610;
  os_log_type_t v19 = _Block_copy(aBlock);
  id v20 = v17;
  id v21 = a1;
  uint64_t v22 = v2;
  static DispatchQoS.unspecified.getter();
  uint64_t v29 = _swiftEmptyArrayStorage;
  sub_1002B31B4((unint64_t *)&unk_1003F3BF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100044014(&qword_1003F38E0);
  sub_1002B31FC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v8);
  return swift_release();
}

void sub_1002AEB2C(void *a1, uint64_t a2)
{
  uint64_t v4 = (void **)(a2 + qword_1003F3A30);
  swift_beginAccess();
  uint64_t v5 = type metadata accessor for RangingConfigDataSession();
  uint64_t v6 = *(unsigned int (**)(void **, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  if (!v6(v4, 1, v5))
  {
    uint64_t v7 = *v4;
    sub_10005A548(0, (unint64_t *)&unk_1003F3C50);
    id v8 = v7;
    id v9 = a1;
    char v10 = static NSObject.== infix(_:_:)();

    if ((v10 & 1) != 0 && !v6(v4, 1, v5))
    {
      uint64_t v24 = *(void **)((char *)v4 + *(int *)(v5 + 36));
      if (v24)
      {
        uint64_t v25 = qword_1003EC428;
        id v18 = v24;
        if (v25 != -1) {
          swift_once();
        }
        uint64_t v26 = type metadata accessor for Logger();
        sub_100044058(v26, (uint64_t)qword_10040C308);
        id v20 = Logger.logObject.getter();
        os_log_type_t v21 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(v20, v21)) {
          goto LABEL_18;
        }
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        v28[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v22 = 136446210;
        uint64_t v27 = sub_100037004(0xD00000000000001ALL, 0x8000000100379440, v28);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        uint64_t v23 = "%{public}s re-run Finder config session";
        goto LABEL_17;
      }
    }
  }
  uint64_t v11 = (void **)(a2 + qword_1003F3A38);
  swift_beginAccess();
  if (!v6(v11, 1, v5))
  {
    uint64_t v12 = *v11;
    sub_10005A548(0, (unint64_t *)&unk_1003F3C50);
    id v13 = a1;
    id v14 = v12;
    char v15 = static NSObject.== infix(_:_:)();

    if ((v15 & 1) != 0 && !v6(v11, 1, v5))
    {
      uint64_t v16 = *(void **)((char *)v11 + *(int *)(v5 + 36));
      if (v16)
      {
        uint64_t v17 = qword_1003EC428;
        id v18 = v16;
        if (v17 != -1) {
          swift_once();
        }
        uint64_t v19 = type metadata accessor for Logger();
        sub_100044058(v19, (uint64_t)qword_10040C308);
        id v20 = Logger.logObject.getter();
        os_log_type_t v21 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(v20, v21)) {
          goto LABEL_18;
        }
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        uint64_t v27 = swift_slowAlloc();
        *(_DWORD *)uint64_t v22 = 136446210;
        sub_100037004(0xD00000000000001ALL, 0x8000000100379440, &v27);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        uint64_t v23 = "%{public}s re-run Findee config session";
LABEL_17:
        _os_log_impl((void *)&_mh_execute_header, v20, v21, v23, v22, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
LABEL_18:

        [a1 runWithConfiguration:v18];
      }
    }
  }
}

void sub_1002AEF58(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_1002AE720(v4);
}

void sub_1002AEFC0(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_100044014((uint64_t *)&unk_1003F3BE0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for RangingConfigDataSession();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  char v10 = (id *)((char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = (void **)(a2 + qword_1003F3A30);
  swift_beginAccess();
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v12((char *)v11, 1, v7)
    || (id v13 = *v11,
        sub_10005A548(0, (unint64_t *)&unk_1003F3C50),
        id v14 = v13,
        id v15 = a1,
        char v16 = static NSObject.== infix(_:_:)(),
        v15,
        v14,
        (v16 & 1) == 0))
  {
    uint64_t v21 = a2 + qword_1003F3A38;
    swift_beginAccess();
    sub_1002B2714(v21, (uint64_t)v6);
    if (v12(v6, 1, v7) == 1)
    {
      sub_1002B277C((uint64_t)v6);
    }
    else
    {
      sub_1002B27DC((uint64_t)v6, (uint64_t)v10);
      sub_10005A548(0, &qword_1003ECA70);
      id v22 = *v10;
      char v23 = static NSObject.== infix(_:_:)();

      if (v23)
      {
        if (qword_1003EC428 != -1) {
          swift_once();
        }
        uint64_t v24 = type metadata accessor for Logger();
        sub_100044058(v24, (uint64_t)qword_10040C308);
        uint64_t v25 = Logger.logObject.getter();
        os_log_type_t v26 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v25, v26))
        {
          uint64_t v27 = (uint8_t *)swift_slowAlloc();
          uint64_t v29 = swift_slowAlloc();
          *(_DWORD *)uint64_t v27 = 136446210;
          uint64_t v28 = sub_100037004(0xD00000000000001DLL, 0x8000000100379420, &v29);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v25, v26, "%{public}s invalidate Findee config session", v27, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        sub_1002ADCA8(*(unint64_t *)((char *)v10 + *(int *)(v7 + 32)));
      }
      sub_1002B28A4((uint64_t)v10);
    }
  }
  else
  {
    if (qword_1003EC428 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_100044058(v17, (uint64_t)qword_10040C308);
    id v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      id v20 = (uint8_t *)swift_slowAlloc();
      v30[0] = swift_slowAlloc();
      *(_DWORD *)id v20 = 136446210;
      uint64_t v29 = sub_100037004(0xD00000000000001DLL, 0x8000000100379420, v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "%{public}s invalidate Finder config session", v20, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_1002ADEF0();
  }
}

void sub_1002AF49C(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v8 = a4;
  id v7 = a1;
  sub_1002B2D0C(v6);
}

uint64_t sub_1002AF50C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_isaMask & *v2;
  if (qword_1003EC428 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100044058(v6, (uint64_t)qword_10040C308);
  swift_errorRetain();
  swift_errorRetain();
  id v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136446210;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v10 = String.init<A>(describing:)();
    sub_100037004(v10, v11, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "didFailWithError: %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t, uint64_t, void))(*(void *)(v5 + 88) + 24))(a1, a2, *(void *)(v5 + 80));
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1002AF764(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v8 = a4;
  id v7 = a1;
  sub_1002AF50C((uint64_t)v6, (uint64_t)v8);
}

uint64_t sub_1002AF7D8(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = swift_isaMask & *v3;
  if (qword_1003EC428 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_100044058(v7, (uint64_t)qword_10040C308);
  id v8 = a2;
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    unint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v11 = 138412290;
    uint64_t v13 = v6;
    id v14 = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v12 = v8;

    uint64_t v6 = v13;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "didDiscover: %@", v11, 0xCu);
    sub_100044014(&qword_1003ECCC8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t, id, void))(*(void *)(v6 + 88) + 32))(a1, v8, *(void *)(v6 + 80));
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1002AFA10(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  id v8 = a1;
  sub_1002AF7D8((uint64_t)v6, v7);
}

uint64_t sub_1002AFA8C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_isaMask & *v2;
  if (qword_1003EC428 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100044058(v6, (uint64_t)qword_10040C308);
  swift_bridgeObjectRetain_n();
  id v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v15 = a1;
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    sub_10005A548(0, (unint64_t *)&unk_1003F3C40);
    swift_bridgeObjectRetain();
    uint64_t v10 = Array.description.getter();
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    uint64_t v13 = v10;
    a1 = v15;
    sub_100037004(v13, v12, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "didUpdate: %s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t, uint64_t, void))(*(void *)(v5 + 88) + 40))(a1, a2, *(void *)(v5 + 80));
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1002AFD00(void *a1, uint64_t a2, void *a3)
{
  sub_10005A548(0, (unint64_t *)&unk_1003F3C40);
  uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  id v6 = a3;
  id v7 = a1;
  sub_1002AFA8C((uint64_t)v6, v5);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002AFD90(void *a1, uint64_t a2, unint64_t a3, void *a4)
{
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for DispatchQoS();
  uint64_t v46 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1003EC428 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_100044058(v13, (uint64_t)qword_10040C308);
  id v14 = a4;
  sub_100022C64(a2, a3);
  id v15 = v14;
  sub_100022C64(a2, a3);
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  int v18 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v41 = v11;
    uint64_t v20 = v19;
    unint64_t v37 = (void *)swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    aBlock[0] = v39;
    *(_DWORD *)uint64_t v20 = 136447235;
    uint64_t v40 = a1;
    uint64_t v47 = sub_100037004(0xD000000000000035, 0x80000001003793E0, aBlock);
    int v38 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 12) = 2160;
    uint64_t v47 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 22) = 2113;
    uint64_t v47 = (uint64_t)v15;
    id v21 = v15;
    uint64_t v42 = v8;
    id v22 = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unint64_t v37 = v15;

    *(_WORD *)(v20 + 32) = 2160;
    uint64_t v47 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 42) = 2081;
    sub_100022C64(a2, a3);
    uint64_t v23 = Data.description.getter();
    unint64_t v25 = v24;
    sub_100044090(a2, a3);
    uint64_t v26 = v23;
    a1 = v40;
    uint64_t v47 = sub_100037004(v26, v25, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v8 = v42;
    swift_bridgeObjectRelease();
    sub_100044090(a2, a3);
    sub_100044090(a2, a3);
    _os_log_impl((void *)&_mh_execute_header, v16, (os_log_type_t)v38, "%{public}s\nfor object: %{private,mask.hash}@\nshareableConfigurationData: %{private,mask.hash}s", (uint8_t *)v20, 0x34u);
    sub_100044014(&qword_1003ECCC8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    unint64_t v11 = v41;
    swift_slowDealloc();
  }
  else
  {

    sub_100044090(a2, a3);
    sub_100044090(a2, a3);
  }

  uint64_t v27 = v44;
  uint64_t v28 = *(void **)&v44[qword_1003F3A28];
  uint64_t v29 = (void *)swift_allocObject();
  v29[2] = v27;
  v29[3] = a1;
  v29[4] = a2;
  v29[5] = a3;
  aBlock[4] = (uint64_t)sub_1002B3190;
  aBlock[5] = (uint64_t)v29;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1002A8680;
  aBlock[3] = (uint64_t)&unk_1003E4520;
  uint64_t v30 = _Block_copy(aBlock);
  sub_100022C64(a2, a3);
  id v31 = v28;
  id v32 = v27;
  id v33 = a1;
  os_log_type_t v34 = v45;
  static DispatchQoS.unspecified.getter();
  uint64_t v47 = (uint64_t)_swiftEmptyArrayStorage;
  sub_1002B31B4((unint64_t *)&unk_1003F3BF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100044014(&qword_1003F38E0);
  sub_1002B31FC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v30);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v34, v43);
  return swift_release();
}

void sub_1002B036C(void *a1, void *a2, uint64_t a3, unint64_t a4)
{
  uint64_t v101 = a3;
  unint64_t v102 = a4;
  uint64_t v99 = swift_isaMask & *a1;
  uint64_t v6 = sub_100044014((uint64_t *)&unk_1003F3C10);
  __chkstk_darwin(v6 - 8);
  uint64_t v100 = &v91[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_100044014((uint64_t *)&unk_1003F3BE0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  unint64_t v11 = &v91[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v13 = &v91[-v12];
  uint64_t v14 = type metadata accessor for RangingConfigDataSession();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v95 = &v91[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v94 = &v91[-v19];
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v103 = (id *)&v91[-v21];
  uint64_t v22 = __chkstk_darwin(v20);
  unint64_t v98 = &v91[-v23];
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v96 = &v91[-v25];
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v28 = &v91[-v27];
  __chkstk_darwin(v26);
  uint64_t v30 = (id *)&v91[-v29];
  uint64_t v105 = a1;
  uint64_t v31 = (uint64_t)a1 + qword_1003F3A30;
  swift_beginAccess();
  sub_1002B2714(v31, (uint64_t)v13);
  uint64_t v97 = v15;
  id v32 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48);
  uint64_t v104 = v14;
  if (v32(v13, 1, v14) == 1)
  {
    sub_1002B277C((uint64_t)v13);
  }
  else
  {
    sub_1002B27DC((uint64_t)v13, (uint64_t)v30);
    sub_10005A548(0, &qword_1003ECA70);
    id v33 = *v30;
    char v34 = static NSObject.== infix(_:_:)();

    if (v34)
    {
      if (qword_1003EC428 != -1) {
        swift_once();
      }
      uint64_t v35 = type metadata accessor for Logger();
      sub_100044058(v35, (uint64_t)qword_10040C308);
      sub_1002B2840((uint64_t)v30, (uint64_t)v28);
      uint64_t v36 = v96;
      sub_1002B2840((uint64_t)v30, (uint64_t)v96);
      unint64_t v37 = Logger.logObject.getter();
      os_log_type_t v38 = static os_log_type_t.default.getter();
      int v39 = v38;
      if (os_log_type_enabled(v37, v38))
      {
        uint64_t v40 = swift_slowAlloc();
        uint64_t v95 = (void *)swift_slowAlloc();
        uint64_t v103 = (id *)swift_slowAlloc();
        v108[0] = (uint64_t)v103;
        *(_DWORD *)uint64_t v40 = 136447235;
        LODWORD(v94) = v39;
        uint64_t v107 = sub_100037004(0xD000000000000035, 0x80000001003793E0, v108);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v40 + 12) = 2160;
        uint64_t v107 = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v40 + 22) = 2081;
        uint64_t v41 = v104;
        type metadata accessor for Handle();
        os_log_t v93 = v37;
        sub_1002B31B4(&qword_1003F00F0, (void (*)(uint64_t))&type metadata accessor for Handle);
        uint64_t v42 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v107 = sub_100037004(v42, v43, v108);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_1002B28A4((uint64_t)v28);
        *(_WORD *)(v40 + 32) = 2160;
        uint64_t v107 = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v40 + 42) = 2113;
        uint64_t v44 = *(void **)&v36[*(int *)(v41 + 28)];
        uint64_t v107 = (uint64_t)v44;
        id v45 = v44;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v95 = v44;
        sub_1002B28A4((uint64_t)v36);
        os_log_t v46 = v93;
        _os_log_impl((void *)&_mh_execute_header, v93, (os_log_type_t)v94, "%{public}s,\nFinder trying send to peer: %{private,mask.hash}s\nwith token: %{private,mask.hash}@", (uint8_t *)v40, 0x34u);
        sub_100044014(&qword_1003ECCC8);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_1002B28A4((uint64_t)v28);
        sub_1002B28A4((uint64_t)v36);
      }
      uint64_t v70 = type metadata accessor for TaskPriority();
      uint64_t v71 = (uint64_t)v100;
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v100, 1, 1, v70);
      unint64_t v72 = v98;
      sub_1002B2840((uint64_t)v30, (uint64_t)v98);
      unint64_t v73 = (*(unsigned __int8 *)(v97 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80);
      uint64_t v74 = (void *)swift_allocObject();
      v74[2] = 0;
      v74[3] = 0;
      uint64_t v75 = v99;
      v74[4] = *(void *)(v99 + 80);
      os_log_t v76 = v105;
      v74[5] = *(void *)(v75 + 88);
      v74[6] = v76;
      uint64_t v78 = v101;
      unint64_t v77 = v102;
      v74[7] = v101;
      v74[8] = v77;
      sub_1002B27DC((uint64_t)v72, (uint64_t)v74 + v73);
      id v79 = v76;
      sub_100022C64(v78, v77);
      sub_100104230(v71, (uint64_t)&unk_1003F3C38, (uint64_t)v74);
      swift_release();
      uint64_t v80 = (uint64_t)v30;
      goto LABEL_26;
    }
    sub_1002B28A4((uint64_t)v30);
  }
  uint64_t v47 = (uint64_t)v105 + qword_1003F3A38;
  swift_beginAccess();
  sub_1002B2714(v47, (uint64_t)v11);
  if (v32(v11, 1, v104) != 1)
  {
    uint64_t v48 = v103;
    sub_1002B27DC((uint64_t)v11, (uint64_t)v103);
    sub_10005A548(0, &qword_1003ECA70);
    id v49 = *v48;
    char v50 = static NSObject.== infix(_:_:)();

    if ((v50 & 1) == 0)
    {
      sub_1002B28A4((uint64_t)v48);
      goto LABEL_17;
    }
    if (qword_1003EC428 != -1) {
      swift_once();
    }
    uint64_t v51 = type metadata accessor for Logger();
    sub_100044058(v51, (uint64_t)qword_10040C308);
    uint64_t v52 = v94;
    sub_1002B2840((uint64_t)v48, (uint64_t)v94);
    uint64_t v53 = v95;
    sub_1002B2840((uint64_t)v48, (uint64_t)v95);
    uint64_t v54 = Logger.logObject.getter();
    os_log_type_t v55 = static os_log_type_t.default.getter();
    int v56 = v55;
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v57 = swift_slowAlloc();
      os_log_t v93 = (os_log_t)swift_slowAlloc();
      uint64_t v96 = (unsigned char *)swift_slowAlloc();
      uint64_t v107 = (uint64_t)v96;
      *(_DWORD *)uint64_t v57 = 136447235;
      int v92 = v56;
      uint64_t v106 = sub_100037004(0xD000000000000035, 0x80000001003793E0, &v107);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v57 + 12) = 2160;
      uint64_t v106 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v57 + 22) = 2081;
      uint64_t v58 = v104;
      type metadata accessor for Handle();
      sub_1002B31B4(&qword_1003F00F0, (void (*)(uint64_t))&type metadata accessor for Handle);
      uint64_t v59 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v106 = sub_100037004(v59, v60, &v107);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1002B28A4((uint64_t)v52);
      *(_WORD *)(v57 + 32) = 2160;
      uint64_t v106 = 1752392040;
      uint64_t v48 = v103;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v57 + 42) = 2113;
      id v61 = *(void **)((char *)v53 + *(int *)(v58 + 28));
      uint64_t v106 = (uint64_t)v61;
      id v62 = v61;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v93->Class isa = (Class)v61;
      sub_1002B28A4((uint64_t)v53);
      _os_log_impl((void *)&_mh_execute_header, v54, (os_log_type_t)v92, "%{public}s,\nFindee trying send to peer: %{private,mask.hash}s\nwith token: %{private,mask.hash}@", (uint8_t *)v57, 0x34u);
      sub_100044014(&qword_1003ECCC8);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1002B28A4((uint64_t)v52);
      sub_1002B28A4((uint64_t)v53);
    }

    uint64_t v81 = type metadata accessor for TaskPriority();
    uint64_t v82 = (uint64_t)v100;
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v100, 1, 1, v81);
    uint64_t v83 = v98;
    sub_1002B2840((uint64_t)v48, (uint64_t)v98);
    unint64_t v84 = (*(unsigned __int8 *)(v97 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80);
    uint64_t v85 = (void *)swift_allocObject();
    v85[2] = 0;
    v85[3] = 0;
    uint64_t v86 = v99;
    v85[4] = *(void *)(v99 + 80);
    uint64_t v87 = v105;
    v85[5] = *(void *)(v86 + 88);
    v85[6] = v87;
    uint64_t v89 = v101;
    unint64_t v88 = v102;
    v85[7] = v101;
    v85[8] = v88;
    sub_1002B27DC((uint64_t)v83, (uint64_t)v85 + v84);
    id v90 = v87;
    sub_100022C64(v89, v88);
    sub_100104230(v82, (uint64_t)&unk_1003F3C28, (uint64_t)v85);
    swift_release();
    uint64_t v80 = (uint64_t)v48;
LABEL_26:
    sub_1002B28A4(v80);
    return;
  }
  sub_1002B277C((uint64_t)v11);
LABEL_17:
  if (qword_1003EC428 != -1) {
    swift_once();
  }
  uint64_t v63 = type metadata accessor for Logger();
  sub_100044058(v63, (uint64_t)qword_10040C308);
  id v64 = a2;
  uint64_t v65 = Logger.logObject.getter();
  os_log_type_t v66 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v65, v66))
  {
    uint64_t v67 = swift_slowAlloc();
    unint64_t v68 = (void *)swift_slowAlloc();
    uint64_t v107 = swift_slowAlloc();
    *(_DWORD *)uint64_t v67 = 136446723;
    uint64_t v106 = sub_100037004(0xD000000000000035, 0x80000001003793E0, &v107);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v67 + 12) = 2160;
    uint64_t v106 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v67 + 22) = 2113;
    uint64_t v106 = (uint64_t)v64;
    id v69 = v64;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unint64_t v68 = v64;

    _os_log_impl((void *)&_mh_execute_header, v65, v66, "%{public}s current session %{private,mask.hash}@\nis not waiting for shareConfigation data, privacy: .public)", (uint8_t *)v67, 0x20u);
    sub_100044014(&qword_1003ECCC8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t sub_1002B110C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  v7[7] = swift_isaMask & *a4;
  return _swift_task_switch(sub_1002B116C, 0, 0);
}

uint64_t sub_1002B116C()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 64) = Strong;
  if (Strong)
  {
    uint64_t v3 = *(void *)(v0 + 48);
    uint64_t v2 = *(void *)(v0 + 56);
    uint64_t v4 = (int *)type metadata accessor for RangingConfigDataSession();
    uint64_t v5 = *(void *)(v3 + v4[7]);
    uint64_t v8 = v2 + 80;
    uint64_t v7 = *(void *)(v2 + 80);
    uint64_t v6 = *(void *)(v8 + 8);
    uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 + 8)
                                                                                                + **(int **)(v6 + 8));
    uint64_t v9 = v3 + v4[5];
    uint64_t v10 = v3 + v4[6];
    unint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 72) = v11;
    *unint64_t v11 = v0;
    v11[1] = sub_1002B1308;
    uint64_t v12 = *(void *)(v0 + 40);
    uint64_t v13 = *(void *)(v0 + 32);
    return v16(v13, v12, v5, v9, v10, v7, v6);
  }
  else
  {
    **(unsigned char **)(v0 + 16) = 1;
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
}

uint64_t sub_1002B1308()
{
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return _swift_task_switch(sub_1002B36E8, 0, 0);
}

uint64_t sub_1002B1420(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  v7[7] = swift_isaMask & *a4;
  return _swift_task_switch(sub_1002B1480, 0, 0);
}

uint64_t sub_1002B1480()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 64) = Strong;
  if (Strong)
  {
    uint64_t v3 = *(void *)(v0 + 48);
    uint64_t v2 = *(void *)(v0 + 56);
    uint64_t v4 = (int *)type metadata accessor for RangingConfigDataSession();
    uint64_t v5 = *(void *)(v3 + v4[7]);
    uint64_t v8 = v2 + 80;
    uint64_t v7 = *(void *)(v2 + 80);
    uint64_t v6 = *(void *)(v8 + 8);
    uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 + 8)
                                                                                                + **(int **)(v6 + 8));
    uint64_t v9 = v3 + v4[5];
    uint64_t v10 = v3 + v4[6];
    unint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 72) = v11;
    *unint64_t v11 = v0;
    v11[1] = sub_1002B161C;
    uint64_t v12 = *(void *)(v0 + 40);
    uint64_t v13 = *(void *)(v0 + 32);
    return v16(v13, v12, v5, v9, v10, v7, v6);
  }
  else
  {
    **(unsigned char **)(v0 + 16) = 1;
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
}

uint64_t sub_1002B161C()
{
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return _swift_task_switch(sub_1002B1734, 0, 0);
}

uint64_t sub_1002B1734()
{
  **(unsigned char **)(v0 + 16) = *(void *)(v0 + 64) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1002B175C(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a5;
  id v14 = a1;
  uint64_t v11 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v13 = v12;

  sub_1002AFD90(v8, v11, v13, v10);
  sub_100044090(v11, v13);
}

void sub_1002B1810()
{
}

uint64_t sub_1002B1854(uint64_t a1)
{
  sub_1002B277C(a1 + qword_1003F3A30);
  sub_1002B277C(a1 + qword_1003F3A38);

  return swift_unknownObjectWeakDestroy();
}

uint64_t _s10TrampolineCMa_1()
{
  return sub_1001F5C54();
}

uint64_t type metadata accessor for RangingConfigDataSession()
{
  uint64_t result = qword_1003F3B90;
  if (!qword_1003F3B90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void **sub_1002B1934(void **a1, void **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    id v9 = (char *)a1 + v8;
    id v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Handle();
    uint64_t v12 = *(void *)(v11 - 8);
    unint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    id v14 = v4;
    v13(v9, v10, v11);
    uint64_t v15 = a3[6];
    uint64_t v16 = (char *)v7 + v15;
    uint64_t v17 = (char *)a2 + v15;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))((char *)a2 + v15, 1, v11))
    {
      uint64_t v18 = sub_100044014(&qword_1003F3B30);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      v13(v16, v17, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
    }
    uint64_t v19 = a3[7];
    uint64_t v20 = a3[8];
    uint64_t v21 = *(void **)((char *)a2 + v19);
    *(void **)((char *)v7 + v19) = v21;
    *(void **)((char *)v7 + v20) = *(void **)((char *)a2 + v20);
    uint64_t v22 = a3[9];
    uint64_t v23 = *(void **)((char *)a2 + v22);
    *(void **)((char *)v7 + v22) = v23;
    id v24 = v21;
    id v25 = v23;
  }
  return v7;
}

void sub_1002B1B10(id *a1, int *a2)
{
  uint64_t v4 = (char *)a1 + a2[5];
  uint64_t v5 = type metadata accessor for Handle();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(char *, uint64_t))(v6 + 8);
  v7(v4, v5);
  uint64_t v8 = (char *)a1 + a2[6];
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5)) {
    v7(v8, v5);
  }

  id v9 = *(id *)((char *)a1 + a2[9]);
}

void **sub_1002B1C10(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  id v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Handle();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  id v13 = v6;
  v12(v8, v9, v10);
  uint64_t v14 = a3[6];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))((char *)a2 + v14, 1, v10))
  {
    uint64_t v17 = sub_100044014(&qword_1003F3B30);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v12(v15, v16, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = a3[8];
  uint64_t v20 = *(void **)((char *)a2 + v18);
  *(void **)((char *)a1 + v18) = v20;
  *(void **)((char *)a1 + v19) = *(void **)((char *)a2 + v19);
  uint64_t v21 = a3[9];
  uint64_t v22 = *(void **)((char *)a2 + v21);
  *(void **)((char *)a1 + v21) = v22;
  id v23 = v20;
  id v24 = v22;
  return a1;
}

void **sub_1002B1D8C(void **a1, void **a2, int *a3)
{
  uint64_t v4 = a2;
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = a3[5];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)v4 + v9;
  uint64_t v12 = type metadata accessor for Handle();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v13 + 24);
  v14(v10, v11, v12);
  uint64_t v30 = v4;
  uint64_t v31 = a3;
  uint64_t v15 = a3[6];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)v4 + v15;
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  LODWORD(v4) = v18((char *)a1 + v15, 1, v12);
  int v19 = v18(v17, 1, v12);
  if (!v4)
  {
    if (!v19)
    {
      v14(v16, v17, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v20 = sub_100044014(&qword_1003F3B30);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v17, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
LABEL_7:
  uint64_t v21 = v31[7];
  uint64_t v22 = *(void **)((char *)v30 + v21);
  id v23 = *(void **)((char *)a1 + v21);
  *(void **)((char *)a1 + v21) = v22;
  id v24 = v22;

  *(void **)((char *)a1 + v31[8]) = *(void **)((char *)v30 + v31[8]);
  uint64_t v25 = v31[9];
  uint64_t v26 = *(void **)((char *)a1 + v25);
  uint64_t v27 = *(void **)((char *)v30 + v25);
  *(void **)((char *)a1 + v25) = v27;
  id v28 = v27;

  return a1;
}

void *sub_1002B1F98(void *a1, char *a2, int *a3)
{
  *a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  id v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Handle();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = &a2[v12];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a2[v12], 1, v9))
  {
    uint64_t v15 = sub_100044014(&qword_1003F3B30);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  uint64_t v16 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)&a2[a3[7]];
  *(void *)((char *)a1 + v16) = *(void *)&a2[v16];
  *(void *)((char *)a1 + a3[9]) = *(void *)&a2[a3[9]];
  return a1;
}

void **sub_1002B2108(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = a3[5];
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Handle();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  uint64_t v13 = a3[6];
  uint64_t v14 = (char *)a2 + v13;
  uint64_t v15 = *(uint64_t (**)(void))(v11 + 48);
  id v24 = a3;
  uint64_t v25 = (char *)a1 + v13;
  LODWORD(a3) = v15();
  int v16 = ((uint64_t (*)(char *, uint64_t, uint64_t))v15)(v14, 1, v10);
  if (a3)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v25, v14, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v25, 0, 1, v10);
      goto LABEL_9;
    }
    size_t v17 = *(void *)(*(void *)(sub_100044014(&qword_1003F3B30) - 8) + 64);
    uint64_t v18 = v25;
  }
  else
  {
    if (!v16)
    {
      v12(v25, v14, v10);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v25, v10);
    size_t v17 = *(void *)(*(void *)(sub_100044014(&qword_1003F3B30) - 8) + 64);
    uint64_t v18 = v25;
  }
  memcpy(v18, v14, v17);
LABEL_9:
  uint64_t v19 = v24[7];
  uint64_t v20 = *(void **)((char *)a1 + v19);
  *(void **)((char *)a1 + v19) = *(void **)((char *)a2 + v19);

  uint64_t v21 = v24[9];
  *(void **)((char *)a1 + v24[8]) = *(void **)((char *)a2 + v24[8]);
  uint64_t v22 = *(void **)((char *)a1 + v21);
  *(void **)((char *)a1 + v21) = *(void **)((char *)a2 + v21);

  return a1;
}

uint64_t sub_1002B2328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002B233C);
}

uint64_t sub_1002B233C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Handle();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100044014(&qword_1003F3B30);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      int v16 = (char *)a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1002B246C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002B2480);
}

void *sub_1002B2480(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Handle();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100044014(&qword_1003F3B30);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      int v16 = (char *)v5 + *(int *)(a4 + 24);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1002B25B0()
{
  type metadata accessor for Handle();
  if (v0 <= 0x3F)
  {
    sub_1002B26C0(319, (unint64_t *)&qword_1003F3BA0, (void (*)(uint64_t))&type metadata accessor for Handle);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1002B26C0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1002B2714(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100044014((uint64_t *)&unk_1003F3BE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002B277C(uint64_t a1)
{
  uint64_t v2 = sub_100044014((uint64_t *)&unk_1003F3BE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1002B27DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RangingConfigDataSession();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002B2840(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RangingConfigDataSession();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002B28A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RangingConfigDataSession();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1002B2900(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v28 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1003EC428 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_100044058(v11, (uint64_t)qword_10040C308);
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v27 = v5;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v25 = a1;
    uint64_t v15 = (uint8_t *)v14;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v26 = v8;
    aBlock[0] = v16;
    *(_DWORD *)uint64_t v15 = 136446210;
    uint64_t v29 = (void *)sub_100037004(0xD00000000000001CLL, 0x8000000100379460, aBlock);
    uint64_t v5 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s", v15, 0xCu);
    swift_arrayDestroy();
    uint64_t v8 = v26;
    swift_slowDealloc();
    a1 = v25;
    swift_slowDealloc();
  }

  size_t v17 = *(void **)&v2[qword_1003F3A28];
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v2;
  *(void *)(v18 + 24) = a1;
  aBlock[4] = (uint64_t)sub_1002B36C8;
  aBlock[5] = v18;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1002A8680;
  aBlock[3] = (uint64_t)&unk_1003E4660;
  uint64_t v19 = _Block_copy(aBlock);
  id v20 = v17;
  uint64_t v21 = v2;
  id v22 = a1;
  static DispatchQoS.unspecified.getter();
  uint64_t v29 = _swiftEmptyArrayStorage;
  sub_1002B31B4((unint64_t *)&unk_1003F3BF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100044014(&qword_1003F38E0);
  sub_1002B31FC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v8);
  return swift_release();
}

uint64_t sub_1002B2D0C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v28 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1003EC428 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_100044058(v11, (uint64_t)qword_10040C308);
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v27 = v5;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v25 = a1;
    uint64_t v15 = (uint8_t *)v14;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v26 = v8;
    aBlock[0] = v16;
    *(_DWORD *)uint64_t v15 = 136446210;
    uint64_t v29 = (void *)sub_100037004(0xD00000000000001DLL, 0x8000000100379420, aBlock);
    uint64_t v5 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s", v15, 0xCu);
    swift_arrayDestroy();
    uint64_t v8 = v26;
    swift_slowDealloc();
    a1 = v25;
    swift_slowDealloc();
  }

  size_t v17 = *(void **)&v2[qword_1003F3A28];
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = v2;
  aBlock[4] = (uint64_t)sub_1002B36B8;
  aBlock[5] = v18;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1002A8680;
  aBlock[3] = (uint64_t)&unk_1003E45C0;
  uint64_t v19 = _Block_copy(aBlock);
  id v20 = v17;
  id v21 = a1;
  id v22 = v2;
  static DispatchQoS.unspecified.getter();
  uint64_t v29 = _swiftEmptyArrayStorage;
  sub_1002B31B4((unint64_t *)&unk_1003F3BF0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100044014(&qword_1003F38E0);
  sub_1002B31FC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v8);
  return swift_release();
}

void sub_1002B3118()
{
}

uint64_t sub_1002B3148()
{
  sub_100044090(*(void *)(v0 + 32), *(void *)(v0 + 40));

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1002B3190()
{
  sub_1002B036C(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1002B319C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1002B31AC()
{
  return swift_release();
}

uint64_t sub_1002B31B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1002B31FC()
{
  unint64_t result = qword_1003F3C00;
  if (!qword_1003F3C00)
  {
    sub_10004AE58(&qword_1003F38E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1003F3C00);
  }
  return result;
}

uint64_t sub_1002B325C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for RangingConfigDataSession() - 8);
  uint64_t v5 = (void *)v1[6];
  uint64_t v6 = v1[7];
  uint64_t v7 = v1[8];
  uint64_t v8 = (char *)v1 + ((*(unsigned __int8 *)(v4 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[5] = v7;
  v9[6] = v8;
  v9[3] = v5;
  v9[4] = v6;
  v9[1] = sub_100018CD0;
  v9[2] = a1;
  v9[7] = swift_isaMask & *v5;
  return _swift_task_switch(sub_1002B1480, 0, 0);
}

uint64_t sub_1002B339C()
{
  unint64_t v1 = (int *)type metadata accessor for RangingConfigDataSession();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 72) & ~v2;
  uint64_t v11 = *(void *)(*((void *)v1 - 1) + 64);
  swift_unknownObjectRelease();

  sub_100044090(*(void *)(v0 + 56), *(void *)(v0 + 64));
  uint64_t v4 = v0 + v3;

  uint64_t v5 = v0 + v3 + v1[5];
  uint64_t v6 = type metadata accessor for Handle();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  uint64_t v9 = v0 + v3 + v1[6];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
    v8(v9, v6);
  }

  return _swift_deallocObject(v0, v3 + v11, v2 | 7);
}

uint64_t sub_1002B353C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for RangingConfigDataSession() - 8);
  uint64_t v5 = (void *)v1[6];
  uint64_t v6 = v1[7];
  uint64_t v7 = v1[8];
  uint64_t v8 = (char *)v1 + ((*(unsigned __int8 *)(v4 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[5] = v7;
  v9[6] = v8;
  v9[3] = v5;
  v9[4] = v6;
  v9[1] = sub_10004A274;
  v9[2] = a1;
  v9[7] = swift_isaMask & *v5;
  return _swift_task_switch(sub_1002B116C, 0, 0);
}

uint64_t sub_1002B3678()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1002B36B8()
{
  sub_1002AEFC0(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1002B36C0()
{
  sub_1002AEB2C(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1002B36C8()
{
  sub_1002AE3AC(*(void *)(v0 + 16));
}

uint64_t sub_1002B36F4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100052FAC(v0, qword_10040C330);
  uint64_t v1 = sub_100044058(v0, (uint64_t)qword_10040C330);
  if (qword_1003EC458 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100044058(v0, (uint64_t)qword_10040C360);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1002B37BC()
{
  uint64_t v0 = type metadata accessor for PrefixedDefaults();
  sub_100052FAC(v0, qword_1003F3CC0);
  sub_100044058(v0, (uint64_t)qword_1003F3CC0);
  return PrefixedDefaults.init(prefix:)();
}

uint64_t sub_1002B3828()
{
  uint64_t v0 = type metadata accessor for PrefixedDefaults();
  sub_100052FAC(v0, qword_10040C348);
  uint64_t v1 = sub_100044058(v0, (uint64_t)qword_10040C348);
  if (qword_1003EC438 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100044058(v0, (uint64_t)qword_1003F3CC0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1002B38F0()
{
  uint64_t v0 = type metadata accessor for PrefixedDefaults();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100044014(&qword_1003EFE58);
  sub_100052FAC(v4, qword_1003F3CD8);
  sub_100044058(v4, (uint64_t)qword_1003F3CD8);
  if (qword_1003EC440 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100044058(v0, (uint64_t)qword_10040C348);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  return ManagedDefault.init(prefixedDefaults:key:)();
}

uint64_t sub_1002B3A58()
{
  uint64_t v0 = type metadata accessor for PrefixedDefaults();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100044014(&qword_1003F0100);
  sub_100052FAC(v4, qword_1003F3CF0);
  sub_100044058(v4, (uint64_t)qword_1003F3CF0);
  if (qword_1003EC440 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100044058(v0, (uint64_t)qword_10040C348);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  type metadata accessor for Date();
  return ManagedDefault.init(prefixedDefaults:key:)();
}

uint64_t sub_1002B3BC4()
{
  v1[549] = v0;
  uint64_t v2 = sub_100044014(&qword_1003F0208);
  v1[555] = v2;
  v1[561] = *(void *)(v2 - 8);
  v1[567] = swift_task_alloc();
  sub_100044014(&qword_1003F0120);
  v1[573] = swift_task_alloc();
  v1[579] = swift_task_alloc();
  uint64_t v3 = sub_100044014(&qword_1003F3F50);
  v1[585] = v3;
  v1[591] = *(void *)(v3 - 8);
  v1[597] = swift_task_alloc();
  sub_100044014(&qword_1003F3F58);
  v1[603] = swift_task_alloc();
  v1[609] = swift_task_alloc();
  uint64_t v4 = sub_100044014(&qword_1003F3F60);
  v1[615] = v4;
  v1[621] = *(void *)(v4 - 8);
  v1[627] = swift_task_alloc();
  sub_100044014(&qword_1003F3F68);
  v1[633] = swift_task_alloc();
  v1[639] = swift_task_alloc();
  uint64_t v5 = sub_100044014(&qword_1003F3438);
  v1[645] = v5;
  v1[651] = *(void *)(v5 - 8);
  v1[657] = swift_task_alloc();
  sub_100044014(&qword_1003F3430);
  v1[663] = swift_task_alloc();
  v1[669] = swift_task_alloc();
  sub_100044014(&qword_1003F3F70);
  v1[675] = swift_task_alloc();
  v1[681] = swift_task_alloc();
  sub_100044014(&qword_1003F29E0);
  v1[687] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for UUID();
  v1[693] = v6;
  v1[699] = *(void *)(v6 - 8);
  v1[705] = swift_task_alloc();
  type metadata accessor for DispatchQoS();
  v1[711] = swift_task_alloc();
  uint64_t v7 = (void *)swift_task_alloc();
  v1[717] = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_1002B3FD0;
  return daemon.getter();
}

uint64_t sub_1002B3FD0(uint64_t a1)
{
  uint64_t v2 = (void *)*v1;
  uint64_t v9 = (void *)*v1;
  v2[723] = a1;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  v2[729] = v3;
  uint64_t v4 = type metadata accessor for Daemon();
  v2[735] = v4;
  uint64_t v5 = type metadata accessor for IDSTransportServiceFMF();
  uint64_t v6 = sub_1002CA564(&qword_1003ECCA8, (void (*)(uint64_t))&type metadata accessor for Daemon);
  v2[741] = v6;
  uint64_t v7 = sub_1002CA564(&qword_1003ECCB0, (void (*)(uint64_t))type metadata accessor for IDSTransportServiceFMF);
  *uint64_t v3 = v9;
  v3[1] = sub_1002B41B0;
  return ActorServiceDaemon.getService<A>()(v4, v5, v6, v7);
}

uint64_t sub_1002B41B0(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[747] = a1;
  v3[748] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = v3[549];
    uint64_t v5 = sub_1002B6C3C;
  }
  else
  {
    uint64_t v6 = v3[549];
    swift_release();
    uint64_t v5 = sub_1002B42DC;
    uint64_t v4 = v6;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_1002B42DC()
{
  char v1 = sub_1002C890C();
  uint64_t v2 = v0[549];
  if (v1)
  {
    type metadata accessor for XPCActivity();
    static DispatchQoS.utility.getter();
    swift_retain_n();
    uint64_t v3 = (void *)swift_task_alloc();
    v0[749] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1002B44C8;
    uint64_t v4 = v0[711];
    uint64_t v5 = v0[549];
    return XPCActivity.__allocating_init(name:qos:criteriaBlock:handler:)(0xD00000000000002ALL, 0x80000001003795B0, v4, &unk_1003F3FE8, v5, &unk_1003F3FF0, v5);
  }
  else
  {
    v0[490] = type metadata accessor for NITokenService();
    v0[491] = sub_1002CA564(&qword_1003F3F78, (void (*)(uint64_t))type metadata accessor for NITokenService);
    v0[487] = v2;
    swift_retain();
    uint64_t v6 = (void *)swift_task_alloc();
    v0[751] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1002B46FC;
    uint64_t v7 = v0[705];
    return sub_10020A628(v7, (uint64_t)(v0 + 487));
  }
}

uint64_t sub_1002B44C8(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 4392);
  *(void *)(*(void *)v1 + 6000) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1002B45E0, v2, 0);
}

uint64_t sub_1002B45E0()
{
  *(void *)(v0[549] + OBJC_IVAR____TtC13findmylocated14NITokenService_tokenRequestActivity) = v0[750];
  swift_release();
  uint64_t v1 = v0[549];
  v0[490] = type metadata accessor for NITokenService();
  v0[491] = sub_1002CA564(&qword_1003F3F78, (void (*)(uint64_t))type metadata accessor for NITokenService);
  v0[487] = v1;
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[751] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1002B46FC;
  uint64_t v3 = v0[705];
  return sub_10020A628(v3, (uint64_t)(v0 + 487));
}

uint64_t sub_1002B46FC()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 6016) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[549];
    uint64_t v4 = sub_1002B6DA0;
  }
  else
  {
    uint64_t v5 = (uint64_t)(v2 + 487);
    uint64_t v6 = v2[705];
    uint64_t v7 = v2[699];
    uint64_t v8 = v2[693];
    uint64_t v9 = v2[549];
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    sub_1000233E4(v5);
    uint64_t v4 = sub_1002B4844;
    uint64_t v3 = v9;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1002B4844()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 6024) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1002B48DC;
  uint64_t v2 = *(void *)(v0 + 5496);
  return sub_100312680(v2);
}

uint64_t sub_1002B48DC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 5496);
  uint64_t v2 = *(void *)(*(void *)v0 + 4392);
  swift_task_dealloc();
  sub_10000A520(v1, &qword_1003F29E0);
  return _swift_task_switch(sub_1002B4A10, v2, 0);
}

uint64_t sub_1002B4A10()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 6032) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1002B4AA0;
  return daemon.getter();
}

uint64_t sub_1002B4AA0(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  *(void *)(v3 + 6040) = a1;
  swift_task_dealloc();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 6048) = v5;
  uint64_t v6 = type metadata accessor for CloudStorageService();
  uint64_t v7 = sub_1002CA564(&qword_1003EF450, (void (*)(uint64_t))type metadata accessor for CloudStorageService);
  *uint64_t v5 = v4;
  v5[1] = sub_1002B4C54;
  uint64_t v8 = *(void *)(v2 + 5928);
  uint64_t v9 = *(void *)(v2 + 5880);
  return ActorServiceDaemon.getService<A>()(v9, v6, v8, v7);
}

uint64_t sub_1002B4C54(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[757] = a1;
  v4[758] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[549];
    uint64_t v6 = sub_1002B701C;
  }
  else
  {
    swift_release();
    uint64_t v6 = sub_1002B4D90;
    uint64_t v5 = a1;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_1002B4D90()
{
  *(void *)(v0 + 6072) = *(void *)(*(void *)(v0 + 6056) + 136);
  type metadata accessor for CloudKitStorage();
  sub_1002CA564(&qword_1003F3F80, (void (*)(uint64_t))&type metadata accessor for CloudKitStorage);
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1002B4E50, v2, v1);
}

uint64_t sub_1002B4E50()
{
  uint64_t v1 = *(void *)(v0 + 4392);
  dispatch thunk of CloudKitStorage.stateStream()();
  return _swift_task_switch(sub_1002B4EC0, v1, 0);
}

uint64_t sub_1002B4EC0()
{
  uint64_t v1 = v0[681];
  uint64_t v2 = v0[675];
  uint64_t v3 = v0[549];
  uint64_t v4 = sub_100044014(&qword_1003F3D80);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v1, 0, 1, v4);
  sub_100013B50(v1, v2, &qword_1003F3F70);
  uint64_t v5 = v3 + OBJC_IVAR____TtC13findmylocated14NITokenService_cloudKitAccountStateStream;
  swift_beginAccess();
  sub_10028314C(v2, v5, &qword_1003F3F70);
  swift_endAccess();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[760] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1002B5008;
  return daemon.getter();
}

uint64_t sub_1002B5008(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  *(void *)(v3 + 6088) = a1;
  swift_task_dealloc();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 6096) = v5;
  uint64_t v6 = type metadata accessor for DataManager(0);
  uint64_t v7 = sub_1002CA564(&qword_1003ECCC0, (void (*)(uint64_t))type metadata accessor for DataManager);
  *uint64_t v5 = v4;
  v5[1] = sub_1002B51BC;
  uint64_t v8 = *(void *)(v2 + 5928);
  uint64_t v9 = *(void *)(v2 + 5880);
  return ActorServiceDaemon.getService<A>()(v9, v6, v8, v7);
}

uint64_t sub_1002B51BC(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[763] = a1;
  v4[764] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[549];
    uint64_t v6 = sub_1002B718C;
  }
  else
  {
    swift_release();
    uint64_t v6 = sub_1002B52F8;
    uint64_t v5 = a1;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_1002B52F8()
{
  uint64_t v1 = *(void *)(v0 + 5256);
  uint64_t v2 = *(void *)(v0 + 5208);
  uint64_t v3 = *(void *)(v0 + 4392);
  swift_allocObject();
  swift_weakInit();
  type metadata accessor for DataManager.State(0);
  *(_DWORD *)(v0 + 6280) = enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:);
  (*(void (**)(uint64_t))(v2 + 104))(v1);
  AsyncStream.init(_:bufferingPolicy:_:)();
  swift_release();
  return _swift_task_switch(sub_1002B5414, v3, 0);
}

uint64_t sub_1002B5414()
{
  uint64_t v1 = v0[669];
  uint64_t v2 = v0[663];
  uint64_t v3 = v0[549];
  uint64_t v4 = sub_100044014((uint64_t *)&unk_1003F2E98);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v1, 0, 1, v4);
  sub_100013B50(v1, v2, &qword_1003F3430);
  uint64_t v5 = v3 + OBJC_IVAR____TtC13findmylocated14NITokenService_dataManagerStateStream;
  swift_beginAccess();
  sub_10028314C(v2, v5, &qword_1003F3430);
  swift_endAccess();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[765] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1002B555C;
  return daemon.getter();
}

uint64_t sub_1002B555C(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  *(void *)(v3 + 6128) = a1;
  swift_task_dealloc();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 6136) = v5;
  uint64_t v6 = type metadata accessor for LocationMonitor();
  uint64_t v7 = sub_1002CA564(&qword_1003F1D38, (void (*)(uint64_t))type metadata accessor for LocationMonitor);
  *uint64_t v5 = v4;
  v5[1] = sub_1002B5710;
  uint64_t v8 = *(void *)(v2 + 5928);
  uint64_t v9 = *(void *)(v2 + 5880);
  return ActorServiceDaemon.getService<A>()(v9, v6, v8, v7);
}

uint64_t sub_1002B5710(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[768] = a1;
  v4[769] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[549];
    uint64_t v6 = sub_1002B7308;
  }
  else
  {
    swift_release();
    uint64_t v6 = sub_1002B584C;
    uint64_t v5 = a1;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_1002B584C()
{
  uint64_t v1 = *(unsigned int *)(v0 + 6280);
  uint64_t v2 = *(void *)(v0 + 5016);
  uint64_t v3 = *(void *)(v0 + 4968);
  uint64_t v4 = *(void *)(v0 + 4920);
  uint64_t v5 = *(void *)(v0 + 4392);
  swift_allocObject();
  swift_weakInit();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 104))(v2, v1, v4);
  AsyncStream.init(_:bufferingPolicy:_:)();
  swift_release();
  return _swift_task_switch(sub_1002B5958, v5, 0);
}

uint64_t sub_1002B5958()
{
  uint64_t v1 = v0[639];
  uint64_t v2 = v0[633];
  uint64_t v3 = v0[549];
  uint64_t v4 = sub_100044014(&qword_1003F3D90);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v1, 0, 1, v4);
  sub_100013B50(v1, v2, &qword_1003F3F68);
  uint64_t v5 = v3 + OBJC_IVAR____TtC13findmylocated14NITokenService_locationServicesToggleStream;
  swift_beginAccess();
  sub_10028314C(v2, v5, &qword_1003F3F68);
  swift_endAccess();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[770] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1002B5AA0;
  return daemon.getter();
}

uint64_t sub_1002B5AA0(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  *(void *)(v3 + 6168) = a1;
  swift_task_dealloc();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 6176) = v5;
  uint64_t v6 = type metadata accessor for AppDeletionService();
  uint64_t v7 = sub_1002CA564(&qword_1003F1D40, (void (*)(uint64_t))type metadata accessor for AppDeletionService);
  *uint64_t v5 = v4;
  v5[1] = sub_1002B5C54;
  uint64_t v8 = *(void *)(v2 + 5928);
  uint64_t v9 = *(void *)(v2 + 5880);
  return ActorServiceDaemon.getService<A>()(v9, v6, v8, v7);
}

uint64_t sub_1002B5C54(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[773] = a1;
  v4[774] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[549];
    uint64_t v6 = sub_1002B7490;
  }
  else
  {
    swift_release();
    uint64_t v6 = sub_1002B5D90;
    uint64_t v5 = a1;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_1002B5D90()
{
  uint64_t v1 = *(unsigned int *)(v0 + 6280);
  uint64_t v2 = *(void *)(v0 + 4776);
  uint64_t v3 = *(void *)(v0 + 4728);
  uint64_t v4 = *(void *)(v0 + 4680);
  uint64_t v5 = *(void *)(v0 + 4392);
  swift_allocObject();
  swift_weakInit();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 104))(v2, v1, v4);
  AsyncStream.init(_:bufferingPolicy:_:)();
  swift_release();
  return _swift_task_switch(sub_1002B5E9C, v5, 0);
}

uint64_t sub_1002B5E9C()
{
  uint64_t v1 = v0[609];
  uint64_t v2 = v0[603];
  uint64_t v3 = v0[549];
  uint64_t v4 = sub_100044014((uint64_t *)&unk_1003F3DA0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v1, 0, 1, v4);
  sub_100013B50(v1, v2, &qword_1003F3F58);
  uint64_t v5 = v3 + OBJC_IVAR____TtC13findmylocated14NITokenService_appDeletionStream;
  swift_beginAccess();
  sub_10028314C(v2, v5, &qword_1003F3F58);
  swift_endAccess();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[775] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1002B5FE0;
  return daemon.getter();
}

uint64_t sub_1002B5FE0(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  *(void *)(v3 + 6208) = a1;
  swift_task_dealloc();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 6216) = v5;
  uint64_t v6 = type metadata accessor for AccountService(0);
  uint64_t v7 = sub_1002CA564(&qword_1003ECCF8, (void (*)(uint64_t))type metadata accessor for AccountService);
  *uint64_t v5 = v4;
  v5[1] = sub_1002B6194;
  uint64_t v8 = *(void *)(v2 + 5928);
  uint64_t v9 = *(void *)(v2 + 5880);
  return ActorServiceDaemon.getService<A>()(v9, v6, v8, v7);
}

uint64_t sub_1002B6194(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[778] = a1;
  v4[779] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[549];
    uint64_t v6 = sub_1002B7624;
  }
  else
  {
    swift_release();
    uint64_t v6 = sub_1002B62D0;
    uint64_t v5 = a1;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_1002B62D0()
{
  uint64_t v1 = *(unsigned int *)(v0 + 6280);
  uint64_t v2 = *(void *)(v0 + 4536);
  uint64_t v3 = *(void *)(v0 + 4488);
  uint64_t v4 = *(void *)(v0 + 4440);
  uint64_t v5 = *(void *)(v0 + 4392);
  swift_allocObject();
  swift_weakInit();
  type metadata accessor for AccountService.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 104))(v2, v1, v4);
  AsyncStream.init(_:bufferingPolicy:_:)();
  swift_release();
  return _swift_task_switch(sub_1002B63E4, v5, 0);
}

uint64_t sub_1002B63E4()
{
  uint64_t v1 = v0[579];
  uint64_t v2 = v0[573];
  uint64_t v3 = v0[549];
  uint64_t v4 = sub_100044014((uint64_t *)&unk_1003EF920);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v1, 0, 1, v4);
  sub_100013B50(v1, v2, &qword_1003F0120);
  uint64_t v5 = v3 + OBJC_IVAR____TtC13findmylocated14NITokenService_accountStateStream;
  swift_beginAccess();
  sub_10028314C(v2, v5, &qword_1003F0120);
  swift_endAccess();
  swift_retain_n();
  swift_asyncLet_begin();
  swift_retain_n();
  swift_asyncLet_begin();
  swift_retain_n();
  swift_asyncLet_begin();
  swift_retain_n();
  swift_asyncLet_begin();
  swift_retain_n();
  swift_asyncLet_begin();
  swift_retain();
  swift_asyncLet_begin();
  return _swift_asyncLet_get_throwing(v0 + 402);
}

uint64_t sub_1002B6670(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 6240) = v2;
  if (v2) {
    return _swift_asyncLet_finish(v3 + 16, a2, sub_1002B77C4, v3 + 4256);
  }
  else {
    return _swift_asyncLet_get_throwing(v3 + 2576);
  }
}

uint64_t sub_1002B66B8(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 6248) = v2;
  if (v2) {
    return _swift_asyncLet_finish(v3 + 16, a2, sub_1002B7C0C, v3 + 4592);
  }
  else {
    return _swift_asyncLet_get_throwing(v3 + 1936);
  }
}

uint64_t sub_1002B6700(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 6256) = v2;
  if (v2) {
    return _swift_asyncLet_finish(v3 + 16, a2, sub_1002B8054, v3 + 4928);
  }
  else {
    return _swift_asyncLet_get_throwing(v3 + 1296);
  }
}

uint64_t sub_1002B6748(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 6264) = v2;
  if (v2) {
    return _swift_asyncLet_finish(v3 + 16, a2, sub_1002B8494, v3 + 5264);
  }
  else {
    return _swift_asyncLet_get(v3 + 656, a2, sub_1002B6790, v3 + 5552);
  }
}

uint64_t sub_1002B6790()
{
  return _swift_asyncLet_get_throwing(v0 + 16);
}

uint64_t sub_1002B67B0(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 6272) = v2;
  if (v2)
  {
    uint64_t v4 = v3 + 5648;
    uint64_t v5 = sub_1002B88DC;
  }
  else
  {
    uint64_t v4 = v3 + 5936;
    uint64_t v5 = sub_1002B67F4;
  }
  return _swift_asyncLet_finish(v3 + 16, a2, v5, v4);
}

uint64_t sub_1002B67F4()
{
  return _swift_task_switch(sub_1002B6810, *(void *)(v0 + 4392), 0);
}

uint64_t sub_1002B6810(uint64_t a1, uint64_t a2)
{
  return _swift_asyncLet_finish(v2 + 656, a2, sub_1002B6830, v2 + 5120);
}

uint64_t sub_1002B6830()
{
  return _swift_task_switch(sub_1002B684C, *(void *)(v0 + 4392), 0);
}

uint64_t sub_1002B684C()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 1296, v1, sub_1002B68C0, v0 + 4976);
}

uint64_t sub_1002B68C0()
{
  return _swift_task_switch(sub_1002B68DC, *(void *)(v0 + 4392), 0);
}

uint64_t sub_1002B68DC()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 1936, v1, sub_1002B6950, v0 + 4128);
}

uint64_t sub_1002B6950()
{
  return _swift_task_switch(sub_1002B696C, *(void *)(v0 + 4392), 0);
}

uint64_t sub_1002B696C()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 2576, v1, sub_1002B69DC, v0 + 4064);
}

uint64_t sub_1002B69DC()
{
  return _swift_task_switch(sub_1002B69F8, *(void *)(v0 + 4392), 0);
}

uint64_t sub_1002B69F8()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 3216, v1, sub_1002B6A68, v0 + 4000);
}

uint64_t sub_1002B6A68()
{
  return _swift_task_switch(sub_1002B6A84, *(void *)(v0 + 4392), 0);
}

uint64_t sub_1002B6A84()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002B6C3C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002B6DA0()
{
  os_log_type_t v13 = v0;
  sub_1000233E4((uint64_t)(v0 + 487));
  if (qword_1003EC430 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100044058(v1, (uint64_t)qword_10040C330);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[752];
  if (v4)
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446210;
    v0[537] = v5;
    swift_errorRetain();
    sub_100044014(&qword_1003F4B30);
    uint64_t v7 = String.init<A>(describing:)();
    v0[543] = sub_100037004(v7, v8, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "IDSTransportServiceFMF subscription up error: %{public}s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v9 = (void *)swift_task_alloc();
  v0[753] = v9;
  void *v9 = v0;
  v9[1] = sub_1002B48DC;
  uint64_t v10 = v0[687];
  return sub_100312680(v10);
}

uint64_t sub_1002B701C()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002B718C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002B7308()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002B7490()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002B7624()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002B77C4()
{
  return _swift_task_switch(sub_1002B77E0, *(void *)(v0 + 4392), 0);
}

uint64_t sub_1002B77E0(uint64_t a1, uint64_t a2)
{
  return _swift_asyncLet_finish(v2 + 656, a2, sub_1002B7800, v2 + 4304);
}

uint64_t sub_1002B7800()
{
  return _swift_task_switch(sub_1002B781C, *(void *)(v0 + 4392), 0);
}

uint64_t sub_1002B781C()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 1296, v1, sub_1002B7890, v0 + 4352);
}

uint64_t sub_1002B7890()
{
  return _swift_task_switch(sub_1002B78AC, *(void *)(v0 + 4392), 0);
}

uint64_t sub_1002B78AC()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 1936, v1, sub_1002B7920, v0 + 4400);
}

uint64_t sub_1002B7920()
{
  return _swift_task_switch(sub_1002B793C, *(void *)(v0 + 4392), 0);
}

uint64_t sub_1002B793C()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 2576, v1, sub_1002B79B0, v0 + 4448);
}

uint64_t sub_1002B79B0()
{
  return _swift_task_switch(sub_1002B79CC, *(void *)(v0 + 4392), 0);
}

uint64_t sub_1002B79CC()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 3216, v1, sub_1002B7A40, v0 + 4496);
}

uint64_t sub_1002B7A40()
{
  return _swift_task_switch(sub_1002B7A5C, *(void *)(v0 + 4392), 0);
}

uint64_t sub_1002B7A5C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002B7C0C()
{
  return _swift_task_switch(sub_1002B7C28, *(void *)(v0 + 4392), 0);
}

uint64_t sub_1002B7C28(uint64_t a1, uint64_t a2)
{
  return _swift_asyncLet_finish(v2 + 656, a2, sub_1002B7C48, v2 + 4640);
}

uint64_t sub_1002B7C48()
{
  return _swift_task_switch(sub_1002B7C64, *(void *)(v0 + 4392), 0);
}

uint64_t sub_1002B7C64()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 1296, v1, sub_1002B7CD8, v0 + 4688);
}

uint64_t sub_1002B7CD8()
{
  return _swift_task_switch(sub_1002B7CF4, *(void *)(v0 + 4392), 0);
}

uint64_t sub_1002B7CF4()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 1936, v1, sub_1002B7D68, v0 + 4736);
}

uint64_t sub_1002B7D68()
{
  return _swift_task_switch(sub_1002B7D84, *(void *)(v0 + 4392), 0);
}

uint64_t sub_1002B7D84()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 2576, v1, sub_1002B7DF8, v0 + 4784);
}

uint64_t sub_1002B7DF8()
{
  return _swift_task_switch(sub_1002B7E14, *(void *)(v0 + 4392), 0);
}

uint64_t sub_1002B7E14()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 3216, v1, sub_1002B7E88, v0 + 4832);
}

uint64_t sub_1002B7E88()
{
  return _swift_task_switch(sub_1002B7EA4, *(void *)(v0 + 4392), 0);
}

uint64_t sub_1002B7EA4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002B8054()
{
  return _swift_task_switch(sub_1002B8070, *(void *)(v0 + 4392), 0);
}

uint64_t sub_1002B8070(uint64_t a1, uint64_t a2)
{
  return _swift_asyncLet_finish(v2 + 656, a2, sub_1002B808C, v2 + 3856);
}

uint64_t sub_1002B808C()
{
  return _swift_task_switch(sub_1002B80A8, *(void *)(v0 + 4392), 0);
}

uint64_t sub_1002B80A8()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 1296, v1, sub_1002B811C, v0 + 5024);
}

uint64_t sub_1002B811C()
{
  return _swift_task_switch(sub_1002B8138, *(void *)(v0 + 4392), 0);
}

uint64_t sub_1002B8138()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 1936, v1, sub_1002B81AC, v0 + 5072);
}

uint64_t sub_1002B81AC()
{
  return _swift_task_switch(sub_1002B81C8, *(void *)(v0 + 4392), 0);
}

uint64_t sub_1002B81C8()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 2576, v1, sub_1002B8238, v0 + 3936);
}

uint64_t sub_1002B8238()
{
  return _swift_task_switch(sub_1002B8254, *(void *)(v0 + 4392), 0);
}

uint64_t sub_1002B8254()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 3216, v1, sub_1002B82C8, v0 + 5168);
}

uint64_t sub_1002B82C8()
{
  return _swift_task_switch(sub_1002B82E4, *(void *)(v0 + 4392), 0);
}

uint64_t sub_1002B82E4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002B8494()
{
  return _swift_task_switch(sub_1002B84B0, *(void *)(v0 + 4392), 0);
}

uint64_t sub_1002B84B0(uint64_t a1, uint64_t a2)
{
  return _swift_asyncLet_finish(v2 + 656, a2, sub_1002B84D0, v2 + 5312);
}

uint64_t sub_1002B84D0()
{
  return _swift_task_switch(sub_1002B84EC, *(void *)(v0 + 4392), 0);
}

uint64_t sub_1002B84EC()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 1296, v1, sub_1002B8560, v0 + 5360);
}

uint64_t sub_1002B8560()
{
  return _swift_task_switch(sub_1002B857C, *(void *)(v0 + 4392), 0);
}

uint64_t sub_1002B857C()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 1936, v1, sub_1002B85F0, v0 + 5408);
}

uint64_t sub_1002B85F0()
{
  return _swift_task_switch(sub_1002B860C, *(void *)(v0 + 4392), 0);
}

uint64_t sub_1002B860C()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 2576, v1, sub_1002B8680, v0 + 5456);
}

uint64_t sub_1002B8680()
{
  return _swift_task_switch(sub_1002B869C, *(void *)(v0 + 4392), 0);
}

uint64_t sub_1002B869C()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 3216, v1, sub_1002B8710, v0 + 5504);
}

uint64_t sub_1002B8710()
{
  return _swift_task_switch(sub_1002B872C, *(void *)(v0 + 4392), 0);
}

uint64_t sub_1002B872C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002B88DC()
{
  return _swift_task_switch(sub_1002B88F8, *(void *)(v0 + 4392), 0);
}

uint64_t sub_1002B88F8(uint64_t a1, uint64_t a2)
{
  return _swift_asyncLet_finish(v2 + 656, a2, sub_1002B8918, v2 + 5696);
}

uint64_t sub_1002B8918()
{
  return _swift_task_switch(sub_1002B8934, *(void *)(v0 + 4392), 0);
}

uint64_t sub_1002B8934()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 1296, v1, sub_1002B89A8, v0 + 5744);
}

uint64_t sub_1002B89A8()
{
  return _swift_task_switch(sub_1002B89C4, *(void *)(v0 + 4392), 0);
}

uint64_t sub_1002B89C4()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 1936, v1, sub_1002B8A38, v0 + 5792);
}

uint64_t sub_1002B8A38()
{
  return _swift_task_switch(sub_1002B8A54, *(void *)(v0 + 4392), 0);
}

uint64_t sub_1002B8A54()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 2576, v1, sub_1002B8AC8, v0 + 5840);
}

uint64_t sub_1002B8AC8()
{
  return _swift_task_switch(sub_1002B8AE4, *(void *)(v0 + 4392), 0);
}

uint64_t sub_1002B8AE4()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 3216, v1, sub_1002B8B58, v0 + 5888);
}

uint64_t sub_1002B8B58()
{
  return _swift_task_switch(sub_1002B8B74, *(void *)(v0 + 4392), 0);
}

uint64_t sub_1002B8B74()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002B8D24()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10004A274;
  return sub_1002B8DB4();
}

uint64_t sub_1002B8DB4()
{
  v1[263] = v0;
  uint64_t v2 = sub_100044014(&qword_1003EFE58);
  v1[269] = v2;
  v1[275] = *(void *)(v2 - 8);
  v1[281] = swift_task_alloc();
  v1[287] = sub_100044014(&qword_1003F29E0);
  v1[293] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for CloudKitStorage.State();
  v1[299] = v3;
  v1[300] = *(void *)(v3 - 8);
  v1[301] = swift_task_alloc();
  v1[302] = swift_task_alloc();
  v1[303] = swift_task_alloc();
  v1[304] = swift_task_alloc();
  sub_100044014(&qword_1003F40F0);
  v1[305] = swift_task_alloc();
  uint64_t v4 = sub_100044014(&qword_1003F40F8);
  v1[306] = v4;
  v1[307] = *(void *)(v4 - 8);
  v1[308] = swift_task_alloc();
  sub_100044014(&qword_1003F3F70);
  v1[309] = swift_task_alloc();
  uint64_t v5 = sub_100044014(&qword_1003F3D80);
  v1[310] = v5;
  v1[311] = *(void *)(v5 - 8);
  v1[312] = swift_task_alloc();
  return _swift_task_switch(sub_1002B9050, v0, 0);
}

uint64_t sub_1002B9050()
{
  if (static SystemInfo.underTest.getter())
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
LABEL_11:
    return v1();
  }
  if (qword_1003EC430 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  *(void *)(v0 + 2504) = sub_100044058(v2, (uint64_t)qword_10040C330);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Monitoring CloudKit AccountState stream", v5, 2u);
    swift_slowDealloc();
  }
  uint64_t v6 = *(void *)(v0 + 2488);
  uint64_t v7 = *(void *)(v0 + 2480);
  uint64_t v8 = *(void *)(v0 + 2472);
  uint64_t v9 = *(void *)(v0 + 2104);

  uint64_t v10 = v9 + OBJC_IVAR____TtC13findmylocated14NITokenService_cloudKitAccountStateStream;
  swift_beginAccess();
  sub_100013210(v10, v8, &qword_1003F3F70);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v7) == 1)
  {
    sub_10000A520(*(void *)(v0 + 2472), &qword_1003F3F70);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v11, v12))
    {
      os_log_type_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "cloudKitAccountStateStream should be available by now!", v13, 2u);
      swift_slowDealloc();
    }

    sub_1002ACC80();
    swift_allocError();
    *uint64_t v14 = 5;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_11;
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 2488) + 32))(*(void *)(v0 + 2496), *(void *)(v0 + 2472), *(void *)(v0 + 2480));
  AsyncStream.makeAsyncIterator()();
  uint64_t v16 = sub_1002CA564(qword_1003F3F20, (void (*)(uint64_t))type metadata accessor for NITokenService);
  *(void *)(v0 + 2512) = v16;
  *(_DWORD *)(v0 + 2600) = enum case for CloudKitStorage.State.unknown(_:);
  *(_DWORD *)(v0 + 2604) = enum case for CloudKitStorage.State.unavailable(_:);
  *(_DWORD *)(v0 + 2608) = enum case for CloudKitStorage.State.noAccount(_:);
  *(_DWORD *)(v0 + 2612) = enum case for CloudKitStorage.State.loading(_:);
  *(_DWORD *)(v0 + 2616) = enum case for CloudKitStorage.State.rebuilding(_:);
  *(_DWORD *)(v0 + 2620) = enum case for CloudKitStorage.State.available(_:);
  *(_DWORD *)(v0 + 2624) = enum case for CloudKitStorage.State.apnsConnected(_:);
  *(_OWORD *)(v0 + 2520) = 0u;
  *(_OWORD *)(v0 + 2536) = 0u;
  *(_OWORD *)(v0 + 2552) = 0u;
  *(void *)(v0 + 2568) = 0;
  uint64_t v17 = *(void *)(v0 + 2104);
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v0 + 2576) = v18;
  *uint64_t v18 = v0;
  v18[1] = sub_1002B9528;
  uint64_t v19 = *(void *)(v0 + 2448);
  uint64_t v20 = *(void *)(v0 + 2440);
  return AsyncStream.Iterator.next(isolation:)(v20, v17, v16, v19);
}

uint64_t sub_1002B9528()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 2104);
  swift_task_dealloc();
  return _swift_task_switch(sub_1002B9638, v1, 0);
}

uint64_t sub_1002B9638()
{
  uint64_t v67 = v0;
  uint64_t v1 = *(void *)(v0 + 2440);
  uint64_t v2 = *(void *)(v0 + 2400);
  uint64_t v3 = *(void *)(v0 + 2392);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    uint64_t v4 = *(void *)(v0 + 2560);
    uint64_t v5 = *(void *)(v0 + 2544);
    uint64_t v6 = *(void *)(v0 + 2528);
    uint64_t v7 = *(void *)(v0 + 2496);
    uint64_t v8 = *(void *)(v0 + 2488);
    uint64_t v9 = *(void *)(v0 + 2480);
    (*(void (**)(void, void))(*(void *)(v0 + 2456) + 8))(*(void *)(v0 + 2464), *(void *)(v0 + 2448));
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    sub_1002CA554(v6);
    sub_1002CA554(v5);
    sub_1002CA554(v4);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
LABEL_5:
    return v10();
  }
  uint64_t v11 = *(void *)(v0 + 2520);
  (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(*(void *)(v0 + 2432), v1, v3);
  static Task<>.checkCancellation()();
  *(void *)(v0 + 2584) = v11;
  if (v11)
  {
    uint64_t v64 = *(void *)(v0 + 2560);
    uint64_t v62 = *(void *)(v0 + 2544);
    uint64_t v12 = *(void *)(v0 + 2528);
    uint64_t v13 = *(void *)(v0 + 2496);
    uint64_t v14 = *(void *)(v0 + 2488);
    uint64_t v15 = *(void *)(v0 + 2480);
    uint64_t v16 = *(void *)(v0 + 2464);
    uint64_t v17 = *(void *)(v0 + 2456);
    uint64_t v18 = *(void *)(v0 + 2448);
    (*(void (**)(void, void))(*(void *)(v0 + 2400) + 8))(*(void *)(v0 + 2432), *(void *)(v0 + 2392));
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    sub_1002CA554(v12);
    sub_1002CA554(v62);
    sub_1002CA554(v64);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_5;
  }
  uint64_t v20 = *(void (**)(uint64_t, void, uint64_t))(*(void *)(v0 + 2400) + 16);
  v20(*(void *)(v0 + 2424), *(void *)(v0 + 2432), *(void *)(v0 + 2392));
  uint64_t v21 = Logger.logObject.getter();
  uint64_t v22 = static os_log_type_t.default.getter();
  BOOL v23 = os_log_type_enabled(v21, (os_log_type_t)v22);
  uint64_t v24 = *(void *)(v0 + 2424);
  uint64_t v25 = *(void *)(v0 + 2392);
  uint64_t v26 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 2400) + 8);
  if (v23)
  {
    uint64_t v27 = swift_slowAlloc();
    v66[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 136315138;
    sub_1002CA564(&qword_1003F4100, (void (*)(uint64_t))&type metadata accessor for CloudKitStorage.State);
    uint64_t v28 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v27 + 4) = sub_100037004(v28, v29, v66);
    swift_bridgeObjectRelease();
    uint64_t v30 = *v26;
    (*v26)(v24, v25);
    _os_log_impl((void *)&_mh_execute_header, v21, (os_log_type_t)v22, "cloudKitAccountStateStream event: %s", (uint8_t *)v27, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v30 = *v26;
    (*v26)(*(void *)(v0 + 2424), *(void *)(v0 + 2392));
  }

  *(void *)(v0 + 2592) = v30;
  int v31 = *(_DWORD *)(v0 + 2616);
  uint64_t v32 = *(void *)(v0 + 2416);
  uint64_t v33 = *(void *)(v0 + 2400);
  uint64_t v34 = *(void *)(v0 + 2392);
  int32x4_t v65 = *(int32x4_t *)(v0 + 2600);
  v20(v32, *(void *)(v0 + 2432), v34);
  unsigned int v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 88))(v32, v34);
  if ((vmaxv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_s32(vdupq_n_s32(v35), v65)), 0xFuLL))) & 1) != 0
    || v35 == v31)
  {
    goto LABEL_20;
  }
  if (v35 == *(_DWORD *)(v0 + 2620))
  {
    uint64_t v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v36, v37))
    {
      os_log_type_t v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v38 = 0;
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "CK account is available", v38, 2u);
      swift_slowDealloc();
    }
    uint64_t v39 = *(void *)(v0 + 2544);
    uint64_t v40 = *(void *)(v0 + 2528);
    uint64_t v63 = *(void *)(v0 + 2560);

    swift_retain_n();
    sub_1002CA554(v40);
    swift_asyncLet_begin();
    swift_retain_n();
    sub_1002CA554(v39);
    swift_asyncLet_begin();
    swift_retain_n();
    sub_1002CA554(v63);
    swift_asyncLet_begin();
    return _swift_asyncLet_get(v0 + 656, v41, sub_1002B9FEC, v0 + 2000);
  }
  if (v35 == *(_DWORD *)(v0 + 2624))
  {
LABEL_20:
    v20(*(void *)(v0 + 2408), *(void *)(v0 + 2432), *(void *)(v0 + 2392));
    uint64_t v42 = Logger.logObject.getter();
    os_log_type_t v43 = static os_log_type_t.info.getter();
    BOOL v44 = os_log_type_enabled(v42, v43);
    uint64_t v45 = *(void *)(v0 + 2432);
    uint64_t v46 = *(void *)(v0 + 2408);
    uint64_t v47 = *(void *)(v0 + 2392);
    if (v44)
    {
      uint64_t v48 = swift_slowAlloc();
      v66[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v48 = 136315138;
      sub_1002CA564(&qword_1003F4100, (void (*)(uint64_t))&type metadata accessor for CloudKitStorage.State);
      uint64_t v49 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v48 + 4) = sub_100037004(v49, v50, v66);
      swift_bridgeObjectRelease();
      v30(v46, v47);
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "Ignoring %s", (uint8_t *)v48, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      v30(v46, v47);
    }
    v30(v45, v47);
  }
  else
  {
    uint64_t v51 = Logger.logObject.getter();
    os_log_type_t v52 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v53 = 0;
      _os_log_impl((void *)&_mh_execute_header, v51, v52, "Unknown CloudKitStorage.State!", v53, 2u);
      swift_slowDealloc();
    }
    uint64_t v54 = *(void *)(v0 + 2432);
    uint64_t v55 = *(void *)(v0 + 2416);
    uint64_t v56 = *(void *)(v0 + 2392);

    v30(v54, v56);
    v30(v55, v56);
  }
  *(void *)(v0 + 2520) = *(void *)(v0 + 2584);
  uint64_t v57 = *(void *)(v0 + 2512);
  uint64_t v58 = *(void *)(v0 + 2104);
  uint64_t v59 = (void *)swift_task_alloc();
  *(void *)(v0 + 2576) = v59;
  *uint64_t v59 = v0;
  v59[1] = sub_1002B9528;
  uint64_t v60 = *(void *)(v0 + 2448);
  uint64_t v61 = *(void *)(v0 + 2440);
  return AsyncStream.Iterator.next(isolation:)(v61, v58, v57, v60);
}

uint64_t sub_1002B9FEC()
{
  return _swift_asyncLet_get(v0 + 1296, *(void *)(v0 + 2344), sub_1002BA00C, v0 + 2064);
}

uint64_t sub_1002BA00C(uint64_t a1, uint64_t a2)
{
  return _swift_asyncLet_get(v2 + 16, a2, sub_1002BA028, v2 + 2112);
}

uint64_t sub_1002BA028()
{
  return _swift_task_switch(sub_1002BA044, *(void *)(v0 + 2104), 0);
}

uint64_t sub_1002BA044()
{
  if (qword_1003EC448 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 2248);
  uint64_t v2 = *(void *)(v0 + 2200);
  uint64_t v3 = *(void *)(v0 + 2152);
  uint64_t v4 = sub_100044058(v3, (uint64_t)qword_1003F3CD8);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  ManagedDefault.wrappedValue.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  int v6 = *(unsigned __int8 *)(v0 + 2628);
  if (v6 == 2 || (v6 & 1) != 0)
  {
    uint64_t v9 = v0 + 2256;
    uint64_t v7 = sub_1002BA414;
    uint64_t v8 = v0 + 16;
  }
  else
  {
    sub_100313B7C();
    uint64_t v7 = sub_1002BA1A8;
    uint64_t v8 = v0 + 16;
    uint64_t v9 = v0 + 2208;
  }
  return _swift_asyncLet_finish(v8, v5, v7, v9);
}

uint64_t sub_1002BA1A8()
{
  return _swift_task_switch(sub_1002BA1C4, *(void *)(v0 + 2104), 0);
}

uint64_t sub_1002BA1C4()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 2344);
  return _swift_asyncLet_finish(v0 + 1296, v1, sub_1002BA238, v0 + 2160);
}

uint64_t sub_1002BA238()
{
  return _swift_task_switch(sub_1002BA254, *(void *)(v0 + 2104), 0);
}

uint64_t sub_1002BA254()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v1, sub_1002BA2C4, v0 + 1936);
}

uint64_t sub_1002BA2C4()
{
  return _swift_task_switch(sub_1002BA2E0, *(void *)(v0 + 2104), 0);
}

uint64_t sub_1002BA2E0()
{
  (*(void (**)(void, void))(v0 + 2592))(*(void *)(v0 + 2432), *(void *)(v0 + 2392));
  swift_release();
  uint64_t v1 = *(void *)(v0 + 2104);
  uint64_t v2 = *(void *)(v0 + 2584);
  *(void *)(v0 + 2568) = v1;
  *(void *)(v0 + 2560) = &unk_1003F4130;
  *(void *)(v0 + 2552) = v1;
  *(void *)(v0 + 2544) = &unk_1003F4120;
  *(void *)(v0 + 2536) = v1;
  *(void *)(v0 + 2528) = &unk_1003F4110;
  *(void *)(v0 + 2520) = v2;
  uint64_t v3 = *(void *)(v0 + 2512);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 2576) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1002B9528;
  uint64_t v5 = *(void *)(v0 + 2448);
  uint64_t v6 = *(void *)(v0 + 2440);
  return AsyncStream.Iterator.next(isolation:)(v6, v1, v3, v5);
}

uint64_t sub_1002BA414()
{
  return _swift_task_switch(sub_1002BA430, *(void *)(v0 + 2104), 0);
}

uint64_t sub_1002BA430()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 2344);
  return _swift_asyncLet_finish(v0 + 1296, v1, sub_1002BA4A4, v0 + 2304);
}

uint64_t sub_1002BA4A4()
{
  return _swift_task_switch(sub_1002BA4C0, *(void *)(v0 + 2104), 0);
}

uint64_t sub_1002BA4C0()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 656, v1, sub_1002BA530, v0 + 2352);
}

uint64_t sub_1002BA530()
{
  return _swift_task_switch(sub_1002CA854, *(void *)(v0 + 2104), 0);
}

uint64_t sub_1002BA54C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10004A274;
  return sub_1002BA5DC();
}

uint64_t sub_1002BA5DC()
{
  v1[13] = v0;
  v1[14] = *v0;
  sub_100044014(&qword_1003F29E0);
  v1[15] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for Handle();
  v1[16] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v1[17] = v3;
  v1[18] = *(void *)(v3 + 64);
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  v1[21] = swift_task_alloc();
  type metadata accessor for UUID();
  v1[22] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for HandleType();
  v1[23] = v4;
  v1[24] = *(void *)(v4 - 8);
  v1[25] = swift_task_alloc();
  v1[26] = swift_task_alloc();
  v1[27] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Friend();
  v1[28] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v1[29] = v6;
  v1[30] = *(void *)(v6 + 64);
  v1[31] = swift_task_alloc();
  v1[32] = swift_task_alloc();
  v1[33] = swift_task_alloc();
  v1[34] = swift_task_alloc();
  v1[35] = swift_task_alloc();
  v1[36] = swift_task_alloc();
  v1[37] = swift_task_alloc();
  v1[38] = swift_task_alloc();
  sub_100044014(&qword_1003F4058);
  v1[39] = swift_task_alloc();
  v1[40] = swift_task_alloc();
  v1[41] = swift_task_alloc();
  sub_100044014(&qword_1003EFCD0);
  v1[42] = swift_task_alloc();
  v1[43] = swift_task_alloc();
  v1[44] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for DataManager.State(0);
  v1[45] = v7;
  v1[46] = *(void *)(v7 - 8);
  v1[47] = swift_task_alloc();
  v1[48] = swift_task_alloc();
  v1[49] = swift_task_alloc();
  v1[50] = swift_task_alloc();
  sub_100044014(&qword_1003F3420);
  v1[51] = swift_task_alloc();
  uint64_t v8 = sub_100044014(&qword_1003F3428);
  v1[52] = v8;
  v1[53] = *(void *)(v8 - 8);
  v1[54] = swift_task_alloc();
  sub_100044014(&qword_1003F3430);
  v1[55] = swift_task_alloc();
  uint64_t v9 = sub_100044014((uint64_t *)&unk_1003F2E98);
  v1[56] = v9;
  v1[57] = *(void *)(v9 - 8);
  v1[58] = swift_task_alloc();
  return _swift_task_switch(sub_1002BAAB4, v0, 0);
}

uint64_t sub_1002BAAB4()
{
  if (static SystemInfo.underTest.getter())
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
LABEL_11:
    return v1();
  }
  if (qword_1003EC430 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  *(void *)(v0 + 472) = sub_100044058(v2, (uint64_t)qword_10040C330);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Monitoring DataManager stream", v5, 2u);
    swift_slowDealloc();
  }
  uint64_t v6 = *(void *)(v0 + 448);
  uint64_t v7 = *(void *)(v0 + 456);
  uint64_t v8 = *(void *)(v0 + 440);
  uint64_t v9 = *(void *)(v0 + 104);

  uint64_t v10 = v9 + OBJC_IVAR____TtC13findmylocated14NITokenService_dataManagerStateStream;
  swift_beginAccess();
  sub_100013210(v10, v8, &qword_1003F3430);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6) == 1)
  {
    sub_10000A520(*(void *)(v0 + 440), &qword_1003F3430);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "dataManagerStateStream should be available by now!", v13, 2u);
      swift_slowDealloc();
    }

    sub_1002ACC80();
    swift_allocError();
    *uint64_t v14 = 7;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_11;
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 456) + 32))(*(void *)(v0 + 464), *(void *)(v0 + 440), *(void *)(v0 + 448));
  AsyncStream.makeAsyncIterator()();
  uint64_t v16 = sub_1002CA564(qword_1003F3F20, (void (*)(uint64_t))type metadata accessor for NITokenService);
  uint64_t v17 = OBJC_IVAR____TtC13findmylocated14NITokenService_tokenRequestActivity;
  *(void *)(v0 + 480) = v16;
  *(void *)(v0 + 488) = v17;
  *(_DWORD *)(v0 + 608) = enum case for HandleType.follower(_:);
  *(_DWORD *)(v0 + 612) = enum case for HandleType.following(_:);
  *(void *)(v0 + 496) = 0;
  uint64_t v18 = *(void *)(v0 + 104);
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v0 + 504) = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_1002BB138;
  uint64_t v20 = *(void *)(v0 + 408);
  uint64_t v21 = *(void *)(v0 + 416);
  return AsyncStream.Iterator.next(isolation:)(v20, v18, v16, v21);
}

uint64_t sub_1002BB138()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 104);
  swift_task_dealloc();
  return _swift_task_switch(sub_1002BB248, v1, 0);
}

uint64_t sub_1002BB248()
{
  uint64_t v204 = v0;
  uint64_t v1 = *(void *)(v0 + 408);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 368) + 48))(v1, 1, *(void *)(v0 + 360)) == 1)
  {
    uint64_t v3 = *(void *)(v0 + 456);
    uint64_t v2 = *(void *)(v0 + 464);
    uint64_t v4 = *(void *)(v0 + 448);
    (*(void (**)(void, void))(*(void *)(v0 + 424) + 8))(*(void *)(v0 + 432), *(void *)(v0 + 416));
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
LABEL_5:
    return v5();
  }
  uint64_t v6 = *(void *)(v0 + 496);
  sub_1002C9F3C(v1, *(void *)(v0 + 400), type metadata accessor for DataManager.State);
  static Task<>.checkCancellation()();
  *(void *)(v0 + 512) = v6;
  if (v6)
  {
    uint64_t v8 = *(void *)(v0 + 456);
    uint64_t v7 = *(void *)(v0 + 464);
    uint64_t v9 = *(void *)(v0 + 448);
    uint64_t v11 = *(void *)(v0 + 424);
    uint64_t v10 = *(void *)(v0 + 432);
    uint64_t v12 = *(void *)(v0 + 416);
    sub_1002CA068(*(void *)(v0 + 400), type metadata accessor for DataManager.State);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_5;
  }
  sub_1002C9244(*(void *)(v0 + 400), *(void *)(v0 + 392), type metadata accessor for DataManager.State);
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  BOOL v16 = os_log_type_enabled(v14, v15);
  uint64_t v17 = *(void *)(v0 + 392);
  if (v16)
  {
    uint64_t v18 = swift_slowAlloc();
    v203[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136315138;
    uint64_t v19 = sub_100105094();
    *(void *)(v18 + 4) = sub_100037004(v19, v20, v203);
    swift_bridgeObjectRelease();
    sub_1002CA068(v17, type metadata accessor for DataManager.State);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "dataManagerStateStream event: %s", (uint8_t *)v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1002CA068(*(void *)(v0 + 392), type metadata accessor for DataManager.State);
  }

  sub_1002C9244(*(void *)(v0 + 400), *(void *)(v0 + 384), type metadata accessor for DataManager.State);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v44 = *(unsigned int *)(v0 + 608);
      uint64_t v46 = *(void *)(v0 + 208);
      uint64_t v45 = *(void *)(v0 + 216);
      uint64_t v47 = *(void *)(v0 + 184);
      uint64_t v48 = *(void *)(v0 + 192);
      uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 232) + 32);
      v49(*(void *)(v0 + 304), *(void *)(v0 + 384), *(void *)(v0 + 224));
      Friend.type.getter();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 104))(v46, v44, v47);
      char v50 = static HandleType.== infix(_:_:)();
      uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
      v51(v46, v47);
      v51(v45, v47);
      if ((v50 & 1) == 0)
      {
        uint64_t v86 = *(void *)(v0 + 400);
        (*(void (**)(void, void))(*(void *)(v0 + 232) + 8))(*(void *)(v0 + 304), *(void *)(v0 + 224));
        goto LABEL_68;
      }
      uint64_t v194 = v49;
      unint64_t v191 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 232) + 16);
      v191(*(void *)(v0 + 296), *(void *)(v0 + 304), *(void *)(v0 + 224));
      os_log_type_t v52 = Logger.logObject.getter();
      os_log_type_t v53 = static os_log_type_t.default.getter();
      BOOL v54 = os_log_type_enabled(v52, v53);
      uint64_t v55 = *(void *)(v0 + 296);
      uint64_t v56 = *(void *)(v0 + 224);
      uint64_t v57 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 232) + 8);
      if (v54)
      {
        uint64_t v58 = swift_slowAlloc();
        v203[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v58 = 141558275;
        *(void *)(v58 + 4) = 1752392040;
        *(_WORD *)(v58 + 12) = 2081;
        sub_1002CA564(&qword_1003EFEB8, (void (*)(uint64_t))&type metadata accessor for Friend);
        uint64_t v59 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v58 + 14) = sub_100037004(v59, v60, v203);
        swift_bridgeObjectRelease();
        uint64_t v61 = *v57;
        (*v57)(v55, v56);
        _os_log_impl((void *)&_mh_execute_header, v52, v53, "Added a follower: %{private,mask.hash}s", (uint8_t *)v58, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        uint64_t v61 = *v57;
        (*v57)(*(void *)(v0 + 296), *(void *)(v0 + 224));
      }

      *(void *)(v0 + 544) = v61;
      uint64_t v105 = *(void *)(v0 + 304);
      uint64_t v106 = *(void *)(v0 + 288);
      uint64_t v107 = *(void *)(v0 + 232);
      uint64_t v108 = *(void *)(v0 + 224);
      uint64_t v184 = *(void *)(v0 + 280);
      uint64_t v109 = *(void *)(v0 + 112);
      uint64_t v176 = v106;
      uint64_t v110 = *(void *)(v0 + 240) + 7;
      *(void *)os_log_type_t type = *(void *)(v0 + 488);
      uint64_t v111 = *(void *)(v0 + 104);
      type metadata accessor for WorkItemQueue.WorkItem();
      v191(v106, v105, v108);
      uint64_t v112 = *(unsigned __int8 *)(v107 + 80);
      uint64_t v113 = (v112 + 24) & ~v112;
      uint64_t v114 = swift_allocObject();
      *(void *)(v114 + 16) = v111;
      v194(v114 + v113, v176, v108);
      *(void *)(v114 + ((v113 + v110) & 0xFFFFFFFFFFFFFFF8)) = v109;
      v191(v184, v105, v108);
      uint64_t v115 = (v112 + 16) & ~v112;
      uint64_t v116 = swift_allocObject();
      v194(v116 + v115, v184, v108);
      *(void *)(v116 + ((v115 + v110) & 0xFFFFFFFFFFFFFFF8)) = v109;
      swift_retain();
      UUID.init()();
      WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
      dispatch thunk of WorkItemQueue.enqueue(_:)();
      swift_release();
      uint64_t v117 = *(void *)(v111 + *(void *)type);
      *(void *)(v0 + 552) = v117;
      if (v117)
      {
        uint64_t v201 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of XPCActivity.updateCriteria()
                                               + async function pointer to dispatch thunk of XPCActivity.updateCriteria());
        swift_retain();
        uint64_t v118 = (void *)swift_task_alloc();
        *(void *)(v0 + 560) = v118;
        *uint64_t v118 = v0;
        v118[1] = sub_1002BD4F0;
        uint64_t v119 = *(void *)(v0 + 320);
        goto LABEL_60;
      }
      uint64_t v149 = *(void *)(v0 + 320);
      uint64_t v150 = type metadata accessor for XPCActivity.State();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v150 - 8) + 56))(v149, 1, 1, v150);
      uint64_t v151 = *(void (**)(uint64_t, uint64_t))(v0 + 544);
      uint64_t v86 = *(void *)(v0 + 400);
      uint64_t v152 = *(void *)(v0 + 320);
      uint64_t v153 = *(void *)(v0 + 304);
      goto LABEL_67;
    case 2u:
      int v62 = *(_DWORD *)(v0 + 608);
      uint64_t v64 = *(void *)(v0 + 192);
      uint64_t v63 = *(void *)(v0 + 200);
      uint64_t v65 = *(void *)(v0 + 184);
      (*(void (**)(void, void, void))(*(void *)(v0 + 232) + 32))(*(void *)(v0 + 272), *(void *)(v0 + 384), *(void *)(v0 + 224));
      Friend.type.getter();
      int v66 = (*(uint64_t (**)(uint64_t, uint64_t))(v64 + 88))(v63, v65);
      if (v66 != v62)
      {
        uint64_t v87 = *(void *)(v0 + 224);
        unint64_t v88 = *(void (**)(void, uint64_t, uint64_t))(*(void *)(v0 + 232) + 16);
        uint64_t v89 = *(void *)(v0 + 272);
        if (v66 != *(_DWORD *)(v0 + 612))
        {
          v88(*(void *)(v0 + 248), v89, v87);
          long long v134 = Logger.logObject.getter();
          os_log_type_t v135 = static os_log_type_t.default.getter();
          BOOL v136 = os_log_type_enabled(v134, v135);
          uint64_t v202 = *(void *)(v0 + 400);
          uint64_t v137 = *(void *)(v0 + 272);
          uint64_t v138 = *(void *)(v0 + 248);
          uint64_t v139 = *(void *)(v0 + 224);
          uint64_t v140 = *(void *)(v0 + 232);
          if (v136)
          {
            uint64_t v141 = *(void *)(v0 + 216);
            uint64_t v199 = *(void *)(v0 + 224);
            uint64_t v143 = *(void *)(v0 + 184);
            uint64_t v142 = *(void *)(v0 + 192);
            uint64_t v187 = swift_slowAlloc();
            v203[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v187 = 136315138;
            os_log_type_t typea = v135;
            Friend.type.getter();
            sub_1002CA564(&qword_1003EFEB0, (void (*)(uint64_t))&type metadata accessor for HandleType);
            uint64_t v144 = dispatch thunk of CustomStringConvertible.description.getter();
            uint64_t v192 = v137;
            unint64_t v146 = v145;
            uint64_t v147 = *(void (**)(uint64_t, uint64_t))(v142 + 8);
            v147(v141, v143);
            *(void *)(v187 + 4) = sub_100037004(v144, v146, v203);
            swift_bridgeObjectRelease();
            uint64_t v148 = *(void (**)(uint64_t, uint64_t))(v140 + 8);
            v148(v138, v199);
            _os_log_impl((void *)&_mh_execute_header, v134, typea, "Ignoring removal of type: %s", (uint8_t *)v187, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            v148(v192, v199);
            sub_1002CA068(v202, type metadata accessor for DataManager.State);
          }
          else
          {
            uint64_t v173 = *(void *)(v0 + 192);

            uint64_t v174 = *(void (**)(uint64_t, uint64_t))(v140 + 8);
            v174(v138, v139);
            v174(v137, v139);
            sub_1002CA068(v202, type metadata accessor for DataManager.State);
            uint64_t v147 = *(void (**)(uint64_t, uint64_t))(v173 + 8);
          }
          v147(*(void *)(v0 + 200), *(void *)(v0 + 184));
          goto LABEL_72;
        }
        v88(*(void *)(v0 + 256), v89, v87);
        id v90 = Logger.logObject.getter();
        os_log_type_t v91 = static os_log_type_t.default.getter();
        BOOL v92 = os_log_type_enabled(v90, v91);
        uint64_t v93 = *(void *)(v0 + 256);
        uint64_t v94 = *(void *)(v0 + 224);
        uint64_t v95 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 232) + 8);
        if (v92)
        {
          uint64_t v96 = swift_slowAlloc();
          v203[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v96 = 141558275;
          *(void *)(v96 + 4) = 1752392040;
          *(_WORD *)(v96 + 12) = 2081;
          sub_1002CA564(&qword_1003EFEB8, (void (*)(uint64_t))&type metadata accessor for Friend);
          uint64_t v97 = dispatch thunk of CustomStringConvertible.description.getter();
          *(void *)(v96 + 14) = sub_100037004(v97, v98, v203);
          swift_bridgeObjectRelease();
          unint64_t v197 = *v95;
          (*v95)(v93, v94);
          _os_log_impl((void *)&_mh_execute_header, v90, v91, "Removed a following: %{private,mask.hash}s", (uint8_t *)v96, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          unint64_t v197 = *v95;
          (*v95)(*(void *)(v0 + 256), *(void *)(v0 + 224));
        }

        uint64_t v196 = *(void *)(v0 + 400);
        *(void *)uint64_t typeb = *(void *)(v0 + 272);
        uint64_t v193 = *(void *)(v0 + 224);
        uint64_t v157 = *(void *)(v0 + 168);
        uint64_t v158 = *(void *)(v0 + 160);
        uint64_t v159 = *(void *)(v0 + 136);
        uint64_t v160 = *(void *)(v0 + 144);
        uint64_t v161 = *(void *)(v0 + 128);
        uint64_t v181 = *(void *)(v0 + 112);
        uint64_t v182 = *(void *)(v0 + 152);
        uint64_t v179 = *(void *)(v0 + 104);
        Friend.handle.getter();
        type metadata accessor for WorkItemQueue.WorkItem();
        uint64_t v178 = *(void (**)(uint64_t, uint64_t, uint64_t))(v159 + 16);
        uint64_t v162 = v158;
        v178(v158, v157, v161);
        unint64_t v175 = (*(unsigned __int8 *)(v159 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v159 + 80);
        unint64_t v163 = (v160 + v175 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v164 = (v163 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v165 = swift_allocObject();
        int64_t v166 = *(void (**)(unint64_t, uint64_t, uint64_t))(v159 + 32);
        v166(v165 + v175, v162, v161);
        *(void *)(v165 + v163) = 2;
        *(void *)(v165 + v164) = v179;
        *(void *)(v165 + ((v164 + 15) & 0xFFFFFFFFFFFFFFF8)) = v181;
        v178(v182, v157, v161);
        uint64_t v167 = swift_allocObject();
        v166(v167 + v175, v182, v161);
        *(void *)(v167 + v163) = v181;
        swift_retain();
        UUID.init()();
        WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
        dispatch thunk of WorkItemQueue.enqueue(_:)();
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v159 + 8))(v157, v161);
        v197(*(void *)typeb, v193);
        uint64_t v29 = v196;
LABEL_71:
        sub_1002CA068(v29, type metadata accessor for DataManager.State);
LABEL_72:
        *(void *)(v0 + 496) = *(void *)(v0 + 512);
        uint64_t v168 = *(void *)(v0 + 480);
        uint64_t v169 = *(void *)(v0 + 104);
        unint64_t v170 = (void *)swift_task_alloc();
        *(void *)(v0 + 504) = v170;
        *unint64_t v170 = v0;
        v170[1] = sub_1002BB138;
        uint64_t v171 = *(void *)(v0 + 408);
        uint64_t v172 = *(void *)(v0 + 416);
        return AsyncStream.Iterator.next(isolation:)(v171, v169, v168, v172);
      }
      (*(void (**)(void, void, void))(*(void *)(v0 + 232) + 16))(*(void *)(v0 + 264), *(void *)(v0 + 272), *(void *)(v0 + 224));
      uint64_t v67 = Logger.logObject.getter();
      os_log_type_t v68 = static os_log_type_t.default.getter();
      BOOL v69 = os_log_type_enabled(v67, v68);
      uint64_t v70 = *(void *)(v0 + 264);
      uint64_t v71 = *(void *)(v0 + 224);
      unint64_t v72 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 232) + 8);
      if (v69)
      {
        uint64_t v73 = swift_slowAlloc();
        v203[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v73 = 141558275;
        *(void *)(v73 + 4) = 1752392040;
        *(_WORD *)(v73 + 12) = 2081;
        sub_1002CA564(&qword_1003EFEB8, (void (*)(uint64_t))&type metadata accessor for Friend);
        uint64_t v74 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v73 + 14) = sub_100037004(v74, v75, v203);
        swift_bridgeObjectRelease();
        os_log_t v76 = *v72;
        (*v72)(v70, v71);
        _os_log_impl((void *)&_mh_execute_header, v67, v68, "Removed a follower: %{private,mask.hash}s", (uint8_t *)v73, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        os_log_t v76 = *v72;
        (*v72)(*(void *)(v0 + 264), *(void *)(v0 + 224));
      }

      *(void *)(v0 + 568) = v76;
      uint64_t v195 = *(void *)(v0 + 488);
      uint64_t v120 = *(void *)(v0 + 168);
      uint64_t v121 = *(void *)(v0 + 160);
      uint64_t v122 = *(void *)(v0 + 136);
      uint64_t v123 = *(void *)(v0 + 144);
      uint64_t v124 = *(void *)(v0 + 128);
      uint64_t v180 = v124;
      uint64_t v185 = *(void *)(v0 + 112);
      uint64_t v186 = *(void *)(v0 + 152);
      uint64_t v198 = *(void *)(v0 + 104);
      Friend.handle.getter();
      type metadata accessor for WorkItemQueue.WorkItem();
      uint64_t v125 = v122;
      uint64_t v183 = *(void (**)(uint64_t, uint64_t, uint64_t))(v122 + 16);
      uint64_t v126 = v121;
      v183(v121, v120, v124);
      unint64_t v127 = (*(unsigned __int8 *)(v125 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80);
      unint64_t v128 = (v123 + v127 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v129 = (v128 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v130 = swift_allocObject();
      uint64_t v177 = *(void (**)(unint64_t, uint64_t, uint64_t))(v125 + 32);
      v177(v130 + v127, v126, v180);
      *(void *)(v130 + v128) = 1;
      *(void *)(v130 + v129) = v198;
      *(void *)(v130 + ((v129 + 15) & 0xFFFFFFFFFFFFFFF8)) = v185;
      v183(v186, v120, v180);
      uint64_t v131 = swift_allocObject();
      v177(v131 + v127, v186, v180);
      *(void *)(v131 + v128) = v185;
      swift_retain();
      UUID.init()();
      WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
      dispatch thunk of WorkItemQueue.enqueue(_:)();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v120, v180);
      uint64_t v132 = *(void *)(v198 + v195);
      *(void *)(v0 + 576) = v132;
      if (!v132)
      {
        uint64_t v154 = *(void *)(v0 + 312);
        uint64_t v155 = type metadata accessor for XPCActivity.State();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v155 - 8) + 56))(v154, 1, 1, v155);
        uint64_t v151 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
        uint64_t v86 = *(void *)(v0 + 400);
        uint64_t v152 = *(void *)(v0 + 312);
        uint64_t v153 = *(void *)(v0 + 272);
LABEL_67:
        uint64_t v156 = *(void *)(v0 + 224);
        sub_10000A520(v152, &qword_1003F4058);
        v151(v153, v156);
LABEL_68:
        uint64_t v29 = v86;
        goto LABEL_71;
      }
      uint64_t v201 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of XPCActivity.updateCriteria()
                                             + async function pointer to dispatch thunk of XPCActivity.updateCriteria());
      swift_retain();
      uint64_t v133 = (void *)swift_task_alloc();
      *(void *)(v0 + 584) = v133;
      *uint64_t v133 = v0;
      v133[1] = sub_1002BD778;
      uint64_t v119 = *(void *)(v0 + 312);
LABEL_60:
      return v201(v119);
    case 3u:
      int v77 = **(unsigned __int8 **)(v0 + 384);
      uint64_t v78 = Logger.logObject.getter();
      os_log_type_t v79 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v78, v79))
      {
        uint64_t v80 = swift_slowAlloc();
        v203[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v80 = 136315138;
        if (v77) {
          uint64_t v81 = 0x64656C62616E65;
        }
        else {
          uint64_t v81 = 0x64656C6261736964;
        }
        if (v77) {
          unint64_t v82 = 0xE700000000000000;
        }
        else {
          unint64_t v82 = 0xE800000000000000;
        }
        *(void *)(v80 + 4) = sub_100037004(v81, v82, v203);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v78, v79, "Sharing my location is %s", (uint8_t *)v80, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      if (v77)
      {
        if (qword_1003EC448 != -1) {
          swift_once();
        }
        uint64_t v83 = sub_100044014(&qword_1003EFE58);
        sub_100044058(v83, (uint64_t)qword_1003F3CD8);
        *(unsigned char *)(v0 + 616) = 0;
        swift_beginAccess();
        ManagedDefault.wrappedValue.setter();
        swift_endAccess();
        unint64_t v84 = (void *)swift_task_alloc();
        *(void *)(v0 + 592) = v84;
        *unint64_t v84 = v0;
        v84[1] = sub_1002BDA00;
        uint64_t v85 = *(void *)(v0 + 120);
        return sub_100312680(v85);
      }
      else
      {
        uint64_t v99 = (void *)swift_task_alloc();
        *(void *)(v0 + 600) = v99;
        *uint64_t v99 = v0;
        v99[1] = sub_1002BDC14;
        return sub_1003130D8();
      }
    case 4u:
    case 5u:
    case 6u:
    case 7u:
      sub_1002C9244(*(void *)(v0 + 400), *(void *)(v0 + 376), type metadata accessor for DataManager.State);
      uint64_t v21 = Logger.logObject.getter();
      os_log_type_t v22 = static os_log_type_t.info.getter();
      BOOL v23 = os_log_type_enabled(v21, v22);
      uint64_t v24 = *(void *)(v0 + 400);
      uint64_t v25 = *(void *)(v0 + 376);
      if (v23)
      {
        uint64_t v26 = swift_slowAlloc();
        v203[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v26 = 136315138;
        uint64_t v27 = sub_100105094();
        *(void *)(v26 + 4) = sub_100037004(v27, v28, v203);
        swift_bridgeObjectRelease();
        sub_1002CA068(v25, type metadata accessor for DataManager.State);
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "Ignoring %s", (uint8_t *)v26, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        sub_1002CA068(v25, type metadata accessor for DataManager.State);
      }
      uint64_t v29 = v24;
      goto LABEL_71;
    default:
      uint64_t v31 = *(void *)(v0 + 344);
      uint64_t v30 = *(void *)(v0 + 352);
      sub_100013B50(*(void *)(v0 + 384), v30, &qword_1003EFCD0);
      sub_100013210(v30, v31, &qword_1003EFCD0);
      uint64_t v32 = Logger.logObject.getter();
      os_log_type_t v33 = static os_log_type_t.default.getter();
      BOOL v34 = os_log_type_enabled(v32, v33);
      uint64_t v35 = *(void *)(v0 + 344);
      if (v34)
      {
        os_log_type_t v200 = v33;
        uint64_t v36 = *(void *)(v0 + 336);
        os_log_type_t v37 = (uint8_t *)swift_slowAlloc();
        *(void *)(v0 + 96) = swift_slowAlloc();
        *(_DWORD *)os_log_type_t v37 = 136315138;
        sub_100013210(v35, v36, &qword_1003EFCD0);
        uint64_t v38 = type metadata accessor for Device();
        uint64_t v39 = *(void *)(v38 - 8);
        int v40 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v36, 1, v38);
        uint64_t v41 = *(void *)(v0 + 336);
        if (v40 == 1)
        {
          sub_10000A520(*(void *)(v0 + 336), &qword_1003EFCD0);
          unint64_t v42 = 0xE300000000000000;
          uint64_t v43 = 7104878;
        }
        else
        {
          uint64_t v43 = Device.description.getter();
          unint64_t v42 = v100;
          (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v41, v38);
        }
        uint64_t v101 = *(void *)(v0 + 344);
        *(void *)(v0 + 88) = sub_100037004(v43, v42, (uint64_t *)(v0 + 96));
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10000A520(v101, &qword_1003EFCD0);
        _os_log_impl((void *)&_mh_execute_header, v32, v200, "Me Device change: %s", v37, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_10000A520(*(void *)(v0 + 344), &qword_1003EFCD0);
      }

      if (qword_1003EC448 != -1) {
        swift_once();
      }
      uint64_t v102 = sub_100044014(&qword_1003EFE58);
      sub_100044058(v102, (uint64_t)qword_1003F3CD8);
      *(unsigned char *)(v0 + 617) = 0;
      swift_beginAccess();
      ManagedDefault.wrappedValue.setter();
      swift_endAccess();
      sub_100313B7C();
      uint64_t v103 = (void *)swift_task_alloc();
      *(void *)(v0 + 520) = v103;
      *uint64_t v103 = v0;
      v103[1] = sub_1002BCF88;
      uint64_t v104 = *(void *)(v0 + 352);
      return sub_1002C25A8(v104);
  }
}

uint64_t sub_1002BCF88()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 104);
  swift_task_dealloc();
  return _swift_task_switch(sub_1002BD098, v1, 0);
}

uint64_t sub_1002BD098()
{
  uint64_t v1 = *(void *)(v0[13] + v0[61]);
  v0[66] = v1;
  if (v1)
  {
    uint64_t v14 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of XPCActivity.updateCriteria()
                                          + async function pointer to dispatch thunk of XPCActivity.updateCriteria());
    swift_retain();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[67] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1002BD280;
    uint64_t v3 = v0[41];
    return v14(v3);
  }
  else
  {
    uint64_t v5 = v0[41];
    uint64_t v6 = type metadata accessor for XPCActivity.State();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
    uint64_t v7 = v0[50];
    uint64_t v8 = v0[44];
    sub_10000A520(v0[41], &qword_1003F4058);
    sub_10000A520(v8, &qword_1003EFCD0);
    sub_1002CA068(v7, type metadata accessor for DataManager.State);
    v0[62] = v0[64];
    uint64_t v9 = v0[60];
    uint64_t v10 = v0[13];
    uint64_t v11 = (void *)swift_task_alloc();
    v0[63] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_1002BB138;
    uint64_t v12 = v0[51];
    uint64_t v13 = v0[52];
    return AsyncStream.Iterator.next(isolation:)(v12, v10, v9, v13);
  }
}

uint64_t sub_1002BD280()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 104);
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1002BD3AC, v1, 0);
}

uint64_t sub_1002BD3AC()
{
  uint64_t v1 = v0[41];
  uint64_t v2 = type metadata accessor for XPCActivity.State();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 0, 1, v2);
  uint64_t v3 = v0[50];
  uint64_t v4 = v0[44];
  sub_10000A520(v0[41], &qword_1003F4058);
  sub_10000A520(v4, &qword_1003EFCD0);
  sub_1002CA068(v3, type metadata accessor for DataManager.State);
  v0[62] = v0[64];
  uint64_t v5 = v0[60];
  uint64_t v6 = v0[13];
  uint64_t v7 = (void *)swift_task_alloc();
  v0[63] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1002BB138;
  uint64_t v8 = v0[51];
  uint64_t v9 = v0[52];
  return AsyncStream.Iterator.next(isolation:)(v8, v6, v5, v9);
}

uint64_t sub_1002BD4F0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 104);
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1002BD61C, v1, 0);
}

uint64_t sub_1002BD61C()
{
  uint64_t v1 = v0[40];
  uint64_t v2 = type metadata accessor for XPCActivity.State();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 0, 1, v2);
  uint64_t v3 = (void (*)(uint64_t, uint64_t))v0[68];
  uint64_t v4 = v0[50];
  uint64_t v5 = v0[38];
  uint64_t v6 = v0[28];
  sub_10000A520(v0[40], &qword_1003F4058);
  v3(v5, v6);
  sub_1002CA068(v4, type metadata accessor for DataManager.State);
  v0[62] = v0[64];
  uint64_t v7 = v0[60];
  uint64_t v8 = v0[13];
  uint64_t v9 = (void *)swift_task_alloc();
  v0[63] = v9;
  void *v9 = v0;
  v9[1] = sub_1002BB138;
  uint64_t v10 = v0[51];
  uint64_t v11 = v0[52];
  return AsyncStream.Iterator.next(isolation:)(v10, v8, v7, v11);
}

uint64_t sub_1002BD778()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 104);
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1002BD8A4, v1, 0);
}

uint64_t sub_1002BD8A4()
{
  uint64_t v1 = v0[39];
  uint64_t v2 = type metadata accessor for XPCActivity.State();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 0, 1, v2);
  uint64_t v3 = (void (*)(uint64_t, uint64_t))v0[71];
  uint64_t v4 = v0[50];
  uint64_t v5 = v0[34];
  uint64_t v6 = v0[28];
  sub_10000A520(v0[39], &qword_1003F4058);
  v3(v5, v6);
  sub_1002CA068(v4, type metadata accessor for DataManager.State);
  v0[62] = v0[64];
  uint64_t v7 = v0[60];
  uint64_t v8 = v0[13];
  uint64_t v9 = (void *)swift_task_alloc();
  v0[63] = v9;
  void *v9 = v0;
  v9[1] = sub_1002BB138;
  uint64_t v10 = v0[51];
  uint64_t v11 = v0[52];
  return AsyncStream.Iterator.next(isolation:)(v10, v8, v7, v11);
}

uint64_t sub_1002BDA00()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 120);
  uint64_t v2 = *(void *)(*(void *)v0 + 104);
  swift_task_dealloc();
  sub_10000A520(v1, &qword_1003F29E0);
  return _swift_task_switch(sub_1002BDB34, v2, 0);
}

uint64_t sub_1002BDB34()
{
  sub_100313B7C();
  sub_1002CA068(v0[50], type metadata accessor for DataManager.State);
  v0[62] = v0[64];
  uint64_t v1 = v0[60];
  uint64_t v2 = v0[13];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[63] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1002BB138;
  uint64_t v4 = v0[51];
  uint64_t v5 = v0[52];
  return AsyncStream.Iterator.next(isolation:)(v4, v2, v1, v5);
}

uint64_t sub_1002BDC14()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 104);
  swift_task_dealloc();
  return _swift_task_switch(sub_1002BDD24, v1, 0);
}

uint64_t sub_1002BDD24()
{
  sub_1002CA068(v0[50], type metadata accessor for DataManager.State);
  v0[62] = v0[64];
  uint64_t v1 = v0[60];
  uint64_t v2 = v0[13];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[63] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1002BB138;
  uint64_t v4 = v0[51];
  uint64_t v5 = v0[52];
  return AsyncStream.Iterator.next(isolation:)(v4, v2, v1, v5);
}

uint64_t sub_1002BDDFC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10004A274;
  return sub_1002BDE8C();
}

uint64_t sub_1002BDE8C()
{
  v1[18] = v0;
  sub_100044014(&qword_1003F29E0);
  v1[19] = swift_task_alloc();
  uint64_t v2 = sub_100044014(&qword_1003F4048);
  v1[20] = v2;
  v1[21] = *(void *)(v2 - 8);
  v1[22] = swift_task_alloc();
  sub_100044014(&qword_1003F3F68);
  v1[23] = swift_task_alloc();
  uint64_t v3 = sub_100044014(&qword_1003F3D90);
  v1[24] = v3;
  v1[25] = *(void *)(v3 - 8);
  v1[26] = swift_task_alloc();
  return _swift_task_switch(sub_1002BE010, v0, 0);
}

uint64_t sub_1002BE010()
{
  if (static SystemInfo.underTest.getter())
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = (uint64_t (*)(void))v0[1];
LABEL_11:
    return v1();
  }
  if (qword_1003EC430 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  v0[27] = sub_100044058(v2, (uint64_t)qword_10040C330);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Monitoring LocationServicesToggle stream", v5, 2u);
    swift_slowDealloc();
  }
  uint64_t v6 = v0[24];
  uint64_t v7 = v0[25];
  uint64_t v8 = v0[23];
  uint64_t v9 = v0[18];

  uint64_t v10 = v9 + OBJC_IVAR____TtC13findmylocated14NITokenService_locationServicesToggleStream;
  swift_beginAccess();
  sub_100013210(v10, v8, &qword_1003F3F68);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6) == 1)
  {
    sub_10000A520(v0[23], &qword_1003F3F68);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "locationServicesToggleStream should be available by now!", v13, 2u);
      swift_slowDealloc();
    }

    sub_1002ACC80();
    swift_allocError();
    *uint64_t v14 = 8;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = (uint64_t (*)(void))v0[1];
    goto LABEL_11;
  }
  (*(void (**)(void, void, void))(v0[25] + 32))(v0[26], v0[23], v0[24]);
  AsyncStream.makeAsyncIterator()();
  uint64_t v16 = sub_1002CA564(qword_1003F3F20, (void (*)(uint64_t))type metadata accessor for NITokenService);
  v0[28] = v16;
  v0[29] = 0;
  uint64_t v17 = v0[18];
  uint64_t v18 = (void *)swift_task_alloc();
  v0[30] = v18;
  *uint64_t v18 = v0;
  v18[1] = sub_1002BE3B4;
  uint64_t v19 = v0[20];
  return AsyncStream.Iterator.next(isolation:)(v0 + 34, v17, v16, v19);
}

uint64_t sub_1002BE3B4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 144);
  swift_task_dealloc();
  return _swift_task_switch(sub_1002BE4C4, v1, 0);
}

uint64_t sub_1002BE4C4()
{
  uint64_t v43 = v0;
  int v1 = *(unsigned __int8 *)(v0 + 272);
  if (v1 == 4)
  {
    uint64_t v3 = *(void *)(v0 + 200);
    uint64_t v2 = *(void *)(v0 + 208);
    uint64_t v4 = *(void *)(v0 + 192);
    (*(void (**)(void, void))(*(void *)(v0 + 168) + 8))(*(void *)(v0 + 176), *(void *)(v0 + 160));
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
LABEL_5:
    return v5();
  }
  uint64_t v6 = *(void *)(v0 + 232);
  static Task<>.checkCancellation()();
  *(void *)(v0 + 248) = v6;
  if (v6)
  {
    uint64_t v8 = *(void *)(v0 + 200);
    uint64_t v7 = *(void *)(v0 + 208);
    uint64_t v9 = *(void *)(v0 + 192);
    (*(void (**)(void, void))(*(void *)(v0 + 168) + 8))(*(void *)(v0 + 176), *(void *)(v0 + 160));
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_5;
  }
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    *(void *)(v0 + 136) = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315138;
    if (v1 == 2)
    {
      uint64_t v14 = 0x6E776F6E6B6E752ELL;
      unint64_t v15 = 0xE800000000000000;
    }
    else if (v1 == 3)
    {
      uint64_t v14 = 0x6C616974696E692ELL;
      unint64_t v15 = 0xEC00000064657A69;
    }
    else
    {
      *(void *)(v0 + 64) = 0;
      *(void *)(v0 + 72) = 0xE000000000000000;
      _StringGuts.grow(_:)(21);
      swift_bridgeObjectRelease();
      *(void *)(v0 + 112) = 0xD000000000000012;
      *(void *)(v0 + 120) = 0x8000000100379600;
      if (v1) {
        uint64_t v16 = 1702195828;
      }
      else {
        uint64_t v16 = 0x65736C6166;
      }
      if (v1) {
        unint64_t v17 = 0xE400000000000000;
      }
      else {
        unint64_t v17 = 0xE500000000000000;
      }
      unint64_t v18 = v17;
      String.append(_:)(*(Swift::String *)&v16);
      swift_bridgeObjectRelease();
      v19._uint64_t countAndFlagsBits = 41;
      v19._object = (void *)0xE100000000000000;
      String.append(_:)(v19);
      uint64_t v14 = *(void *)(v0 + 112);
      unint64_t v15 = *(void *)(v0 + 120);
    }
    *(void *)(v13 + 4) = sub_100037004(v14, v15, (uint64_t *)(v0 + 136));
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "locationServicesToggleStream event: %s", (uint8_t *)v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  if ((v1 & 0xFE) == 2)
  {
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      *(void *)(v0 + 128) = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136315138;
      if (v1 == 2)
      {
        uint64_t v23 = 0x6E776F6E6B6E752ELL;
        unint64_t v24 = 0xE800000000000000;
      }
      else if (v1 == 3)
      {
        uint64_t v23 = 0x6C616974696E692ELL;
        unint64_t v24 = 0xEC00000064657A69;
      }
      else
      {
        *(void *)(v0 + 96) = 0;
        *(void *)(v0 + 104) = 0xE000000000000000;
        _StringGuts.grow(_:)(21);
        swift_bridgeObjectRelease();
        *(void *)(v0 + 80) = 0xD000000000000012;
        *(void *)(v0 + 88) = 0x8000000100379600;
        if (v1) {
          uint64_t v34 = 1702195828;
        }
        else {
          uint64_t v34 = 0x65736C6166;
        }
        if (v1) {
          unint64_t v35 = 0xE400000000000000;
        }
        else {
          unint64_t v35 = 0xE500000000000000;
        }
        unint64_t v36 = v35;
        String.append(_:)(*(Swift::String *)&v34);
        swift_bridgeObjectRelease();
        v37._uint64_t countAndFlagsBits = 41;
        v37._object = (void *)0xE100000000000000;
        String.append(_:)(v37);
        uint64_t v23 = *(void *)(v0 + 80);
        unint64_t v24 = *(void *)(v0 + 88);
      }
      *(void *)(v22 + 4) = sub_100037004(v23, v24, (uint64_t *)(v0 + 128));
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Ignoring %s", (uint8_t *)v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    *(void *)(v0 + 232) = *(void *)(v0 + 248);
    uint64_t v38 = *(void *)(v0 + 224);
    uint64_t v39 = *(void *)(v0 + 144);
    int v40 = (void *)swift_task_alloc();
    *(void *)(v0 + 240) = v40;
    *int v40 = v0;
    v40[1] = sub_1002BE3B4;
    uint64_t v41 = *(void *)(v0 + 160);
    return AsyncStream.Iterator.next(isolation:)(v0 + 272, v39, v38, v41);
  }
  else
  {
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 136315138;
      if (v1) {
        uint64_t v28 = 0x64656C62616E65;
      }
      else {
        uint64_t v28 = 0x64656C6261736964;
      }
      if (v1) {
        unint64_t v29 = 0xE700000000000000;
      }
      else {
        unint64_t v29 = 0xE800000000000000;
      }
      *(void *)(v27 + 4) = sub_100037004(v28, v29, &v42);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Location services is %s", (uint8_t *)v27, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    if (v1)
    {
      if (qword_1003EC448 != -1) {
        swift_once();
      }
      uint64_t v31 = sub_100044014(&qword_1003EFE58);
      sub_100044058(v31, (uint64_t)qword_1003F3CD8);
      *(unsigned char *)(v0 + 273) = 0;
      swift_beginAccess();
      ManagedDefault.wrappedValue.setter();
      swift_endAccess();
      uint64_t v32 = (void *)swift_task_alloc();
      *(void *)(v0 + 256) = v32;
      *uint64_t v32 = v0;
      v32[1] = sub_1002BEC94;
      uint64_t v33 = *(void *)(v0 + 152);
      return sub_100312680(v33);
    }
    else
    {
      uint64_t v30 = (void *)swift_task_alloc();
      *(void *)(v0 + 264) = v30;
      *uint64_t v30 = v0;
      v30[1] = sub_1002BEE94;
      return sub_1003130D8();
    }
  }
}

uint64_t sub_1002BEC94()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 152);
  uint64_t v2 = *(void *)(*(void *)v0 + 144);
  swift_task_dealloc();
  sub_10000A520(v1, &qword_1003F29E0);
  return _swift_task_switch(sub_1002BEDC8, v2, 0);
}

uint64_t sub_1002BEDC8()
{
  sub_100313B7C();
  v0[29] = v0[31];
  uint64_t v1 = v0[28];
  uint64_t v2 = v0[18];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[30] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1002BE3B4;
  uint64_t v4 = v0[20];
  return AsyncStream.Iterator.next(isolation:)(v0 + 34, v2, v1, v4);
}

uint64_t sub_1002BEE94()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v2 = (void *)*v0;
  swift_task_dealloc();
  v1[29] = v1[31];
  uint64_t v3 = v1[28];
  uint64_t v4 = v1[18];
  uint64_t v5 = (void *)swift_task_alloc();
  v1[30] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1002BE3B4;
  uint64_t v6 = v1[20];
  return AsyncStream.Iterator.next(isolation:)(v1 + 34, v4, v3, v6);
}

uint64_t sub_1002BF050()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10004A274;
  return sub_1002BF0E0();
}

uint64_t sub_1002BF0E0()
{
  v1[18] = v0;
  sub_100044014(&qword_1003F29E0);
  v1[19] = swift_task_alloc();
  uint64_t v2 = sub_100044014(&qword_1003F4038);
  v1[20] = v2;
  v1[21] = *(void *)(v2 - 8);
  v1[22] = swift_task_alloc();
  sub_100044014(&qword_1003F3F58);
  v1[23] = swift_task_alloc();
  uint64_t v3 = sub_100044014((uint64_t *)&unk_1003F3DA0);
  v1[24] = v3;
  v1[25] = *(void *)(v3 - 8);
  v1[26] = swift_task_alloc();
  return _swift_task_switch(sub_1002BF264, v0, 0);
}

uint64_t sub_1002BF264()
{
  if (static SystemInfo.underTest.getter())
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = (uint64_t (*)(void))v0[1];
LABEL_11:
    return v1();
  }
  if (qword_1003EC430 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  v0[27] = sub_100044058(v2, (uint64_t)qword_10040C330);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Monitoring AppDeletionService stream", v5, 2u);
    swift_slowDealloc();
  }
  uint64_t v6 = v0[24];
  uint64_t v7 = v0[25];
  uint64_t v8 = v0[23];
  uint64_t v9 = v0[18];

  uint64_t v10 = v9 + OBJC_IVAR____TtC13findmylocated14NITokenService_appDeletionStream;
  swift_beginAccess();
  sub_100013210(v10, v8, &qword_1003F3F58);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6) == 1)
  {
    sub_10000A520(v0[23], &qword_1003F3F58);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "appDeletionStream should be available by now!", v13, 2u);
      swift_slowDealloc();
    }

    sub_1002ACC80();
    swift_allocError();
    *uint64_t v14 = 9;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = (uint64_t (*)(void))v0[1];
    goto LABEL_11;
  }
  (*(void (**)(void, void, void))(v0[25] + 32))(v0[26], v0[23], v0[24]);
  AsyncStream.makeAsyncIterator()();
  uint64_t v16 = sub_1002CA564(qword_1003F3F20, (void (*)(uint64_t))type metadata accessor for NITokenService);
  v0[28] = v16;
  v0[29] = 0;
  uint64_t v17 = v0[18];
  unint64_t v18 = (void *)swift_task_alloc();
  v0[30] = v18;
  *unint64_t v18 = v0;
  v18[1] = sub_1002BF608;
  uint64_t v19 = v0[20];
  return AsyncStream.Iterator.next(isolation:)(v0 + 34, v17, v16, v19);
}

uint64_t sub_1002BF608()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 144);
  swift_task_dealloc();
  return _swift_task_switch(sub_1002BF718, v1, 0);
}

uint64_t sub_1002BF718()
{
  uint64_t v43 = v0;
  int v1 = *(unsigned __int8 *)(v0 + 272);
  if (v1 == 4)
  {
    uint64_t v3 = *(void *)(v0 + 200);
    uint64_t v2 = *(void *)(v0 + 208);
    uint64_t v4 = *(void *)(v0 + 192);
    (*(void (**)(void, void))(*(void *)(v0 + 168) + 8))(*(void *)(v0 + 176), *(void *)(v0 + 160));
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
LABEL_5:
    return v5();
  }
  uint64_t v6 = *(void *)(v0 + 232);
  static Task<>.checkCancellation()();
  *(void *)(v0 + 248) = v6;
  if (v6)
  {
    uint64_t v8 = *(void *)(v0 + 200);
    uint64_t v7 = *(void *)(v0 + 208);
    uint64_t v9 = *(void *)(v0 + 192);
    (*(void (**)(void, void))(*(void *)(v0 + 168) + 8))(*(void *)(v0 + 176), *(void *)(v0 + 160));
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_5;
  }
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    *(void *)(v0 + 136) = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315138;
    if (v1 == 2)
    {
      uint64_t v14 = 0x6E776F6E6B6E752ELL;
      unint64_t v15 = 0xE800000000000000;
    }
    else if (v1 == 3)
    {
      uint64_t v14 = 0x6C616974696E692ELL;
      unint64_t v15 = 0xEC00000064657A69;
    }
    else
    {
      *(void *)(v0 + 64) = 0;
      *(void *)(v0 + 72) = 0xE000000000000000;
      _StringGuts.grow(_:)(27);
      swift_bridgeObjectRelease();
      *(void *)(v0 + 112) = 0xD000000000000018;
      *(void *)(v0 + 120) = 0x80000001003795E0;
      if (v1) {
        uint64_t v16 = 1702195828;
      }
      else {
        uint64_t v16 = 0x65736C6166;
      }
      if (v1) {
        unint64_t v17 = 0xE400000000000000;
      }
      else {
        unint64_t v17 = 0xE500000000000000;
      }
      unint64_t v18 = v17;
      String.append(_:)(*(Swift::String *)&v16);
      swift_bridgeObjectRelease();
      v19._uint64_t countAndFlagsBits = 41;
      v19._object = (void *)0xE100000000000000;
      String.append(_:)(v19);
      uint64_t v14 = *(void *)(v0 + 112);
      unint64_t v15 = *(void *)(v0 + 120);
    }
    *(void *)(v13 + 4) = sub_100037004(v14, v15, (uint64_t *)(v0 + 136));
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "appDeletionStream event: %s", (uint8_t *)v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  if ((v1 & 0xFE) == 2)
  {
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      *(void *)(v0 + 128) = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136315138;
      if (v1 == 2)
      {
        uint64_t v23 = 0x6E776F6E6B6E752ELL;
        unint64_t v24 = 0xE800000000000000;
      }
      else if (v1 == 3)
      {
        uint64_t v23 = 0x6C616974696E692ELL;
        unint64_t v24 = 0xEC00000064657A69;
      }
      else
      {
        *(void *)(v0 + 96) = 0;
        *(void *)(v0 + 104) = 0xE000000000000000;
        _StringGuts.grow(_:)(27);
        swift_bridgeObjectRelease();
        *(void *)(v0 + 80) = 0xD000000000000018;
        *(void *)(v0 + 88) = 0x80000001003795E0;
        if (v1) {
          uint64_t v34 = 1702195828;
        }
        else {
          uint64_t v34 = 0x65736C6166;
        }
        if (v1) {
          unint64_t v35 = 0xE400000000000000;
        }
        else {
          unint64_t v35 = 0xE500000000000000;
        }
        unint64_t v36 = v35;
        String.append(_:)(*(Swift::String *)&v34);
        swift_bridgeObjectRelease();
        v37._uint64_t countAndFlagsBits = 41;
        v37._object = (void *)0xE100000000000000;
        String.append(_:)(v37);
        uint64_t v23 = *(void *)(v0 + 80);
        unint64_t v24 = *(void *)(v0 + 88);
      }
      *(void *)(v22 + 4) = sub_100037004(v23, v24, (uint64_t *)(v0 + 128));
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Ignoring %s", (uint8_t *)v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    *(void *)(v0 + 232) = *(void *)(v0 + 248);
    uint64_t v38 = *(void *)(v0 + 224);
    uint64_t v39 = *(void *)(v0 + 144);
    int v40 = (void *)swift_task_alloc();
    *(void *)(v0 + 240) = v40;
    *int v40 = v0;
    v40[1] = sub_1002BF608;
    uint64_t v41 = *(void *)(v0 + 160);
    return AsyncStream.Iterator.next(isolation:)(v0 + 272, v39, v38, v41);
  }
  else
  {
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 136315138;
      if (v1) {
        uint64_t v28 = 7562585;
      }
      else {
        uint64_t v28 = 28494;
      }
      if (v1) {
        unint64_t v29 = 0xE300000000000000;
      }
      else {
        unint64_t v29 = 0xE200000000000000;
      }
      *(void *)(v27 + 4) = sub_100037004(v28, v29, &v42);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "isFindMyAppInstalled:%s", (uint8_t *)v27, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    if (v1)
    {
      if (qword_1003EC448 != -1) {
        swift_once();
      }
      uint64_t v31 = sub_100044014(&qword_1003EFE58);
      sub_100044058(v31, (uint64_t)qword_1003F3CD8);
      *(unsigned char *)(v0 + 273) = 0;
      swift_beginAccess();
      ManagedDefault.wrappedValue.setter();
      swift_endAccess();
      uint64_t v32 = (void *)swift_task_alloc();
      *(void *)(v0 + 256) = v32;
      *uint64_t v32 = v0;
      v32[1] = sub_1002BFED4;
      uint64_t v33 = *(void *)(v0 + 152);
      return sub_100312680(v33);
    }
    else
    {
      uint64_t v30 = (void *)swift_task_alloc();
      *(void *)(v0 + 264) = v30;
      *uint64_t v30 = v0;
      v30[1] = sub_1002C00D4;
      return sub_1003130D8();
    }
  }
}

uint64_t sub_1002BFED4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 152);
  uint64_t v2 = *(void *)(*(void *)v0 + 144);
  swift_task_dealloc();
  sub_10000A520(v1, &qword_1003F29E0);
  return _swift_task_switch(sub_1002C0008, v2, 0);
}

uint64_t sub_1002C0008()
{
  sub_100313B7C();
  v0[29] = v0[31];
  uint64_t v1 = v0[28];
  uint64_t v2 = v0[18];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[30] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1002BF608;
  uint64_t v4 = v0[20];
  return AsyncStream.Iterator.next(isolation:)(v0 + 34, v2, v1, v4);
}

uint64_t sub_1002C00D4()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v2 = (void *)*v0;
  swift_task_dealloc();
  v1[29] = v1[31];
  uint64_t v3 = v1[28];
  uint64_t v4 = v1[18];
  uint64_t v5 = (void *)swift_task_alloc();
  v1[30] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1002BF608;
  uint64_t v6 = v1[20];
  return AsyncStream.Iterator.next(isolation:)(v1 + 34, v4, v3, v6);
}

uint64_t sub_1002C0290()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10012BBD4;
  return sub_1003261A4();
}

uint64_t sub_1002C0320()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10004A274;
  return sub_1002C03B0();
}

uint64_t sub_1002C03B0()
{
  v1[275] = v0;
  v1[281] = sub_100044014(&qword_1003F29E0);
  v1[287] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for Account();
  v1[288] = v2;
  v1[289] = *(void *)(v2 - 8);
  v1[290] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for AccountService.State(0);
  v1[291] = v3;
  v1[292] = *(void *)(v3 - 8);
  v1[293] = swift_task_alloc();
  v1[294] = swift_task_alloc();
  v1[295] = swift_task_alloc();
  v1[296] = swift_task_alloc();
  v1[297] = swift_task_alloc();
  v1[298] = swift_task_alloc();
  v1[299] = swift_task_alloc();
  v1[300] = swift_task_alloc();
  sub_100044014(&qword_1003F0110);
  v1[301] = swift_task_alloc();
  uint64_t v4 = sub_100044014(&qword_1003F0118);
  v1[302] = v4;
  v1[303] = *(void *)(v4 - 8);
  v1[304] = swift_task_alloc();
  sub_100044014(&qword_1003F0120);
  v1[305] = swift_task_alloc();
  uint64_t v5 = sub_100044014((uint64_t *)&unk_1003EF920);
  v1[306] = v5;
  v1[307] = *(void *)(v5 - 8);
  v1[308] = swift_task_alloc();
  return _swift_task_switch(sub_1002C0678, v0, 0);
}

uint64_t sub_1002C0678()
{
  if (static SystemInfo.underTest.getter())
  {
LABEL_10:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
  if (qword_1003EC430 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[309] = sub_100044058(v1, (uint64_t)qword_10040C330);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Monitoring AccountState stream", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[307];
  uint64_t v6 = v0[306];
  uint64_t v7 = v0[305];
  uint64_t v8 = v0[275];

  uint64_t v9 = v8 + OBJC_IVAR____TtC13findmylocated14NITokenService_accountStateStream;
  swift_beginAccess();
  sub_100013210(v9, v7, &qword_1003F0120);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v6) == 1)
  {
    sub_10000A520(v0[305], &qword_1003F0120);
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      os_log_type_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "accountStateStream should be available by now!", v12, 2u);
      swift_slowDealloc();
    }

    goto LABEL_10;
  }
  (*(void (**)(void, void, void))(v0[307] + 32))(v0[308], v0[305], v0[306]);
  AsyncStream.makeAsyncIterator()();
  uint64_t v15 = sub_1002CA564(qword_1003F3F20, (void (*)(uint64_t))type metadata accessor for NITokenService);
  v0[310] = v15;
  v0[311] = 0;
  uint64_t v16 = v0[275];
  unint64_t v17 = (void *)swift_task_alloc();
  v0[312] = v17;
  *unint64_t v17 = v0;
  v17[1] = sub_1002C0A54;
  uint64_t v18 = v0[302];
  uint64_t v19 = v0[301];
  return AsyncStream.Iterator.next(isolation:)(v19, v16, v15, v18);
}

uint64_t sub_1002C0A54()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 2200);
  swift_task_dealloc();
  return _swift_task_switch(sub_1002C0B64, v1, 0);
}

uint64_t sub_1002C0B64()
{
  uint64_t v1 = v0[301];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[292] + 48))(v1, 1, v0[291]) == 1)
  {
    uint64_t v2 = v0[308];
    uint64_t v3 = v0[307];
    uint64_t v4 = v0[306];
    (*(void (**)(void, void))(v0[303] + 8))(v0[304], v0[302]);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
LABEL_5:
    return v5();
  }
  uint64_t v6 = v0[311];
  sub_1002C9F3C(v1, v0[300], type metadata accessor for AccountService.State);
  static Task<>.checkCancellation()();
  v0[313] = v6;
  if (v6)
  {
    uint64_t v7 = v0[308];
    uint64_t v8 = v0[307];
    uint64_t v9 = v0[306];
    uint64_t v10 = v0[304];
    uint64_t v11 = v0[303];
    uint64_t v12 = v0[302];
    sub_1002CA068(v0[300], type metadata accessor for AccountService.State);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    goto LABEL_5;
  }
  sub_1002C9244(v0[300], v0[299], type metadata accessor for AccountService.State);
  uint64_t v14 = Logger.logObject.getter();
  uint64_t v15 = static os_log_type_t.default.getter();
  BOOL v16 = os_log_type_enabled(v14, (os_log_type_t)v15);
  uint64_t v17 = v0[299];
  if (v16)
  {
    uint64_t v18 = 0x6E776F6E6B6E752ELL;
    uint64_t v19 = v0[298];
    uint64_t v20 = v0[297];
    uint64_t v21 = swift_slowAlloc();
    v0[269] = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 136315138;
    sub_1002C9244(v17, v19, type metadata accessor for AccountService.State);
    sub_1002C9244(v19, v20, type metadata accessor for AccountService.State);
    uint64_t v22 = sub_100044014(&qword_1003EFE18);
    unint64_t v23 = 0xE800000000000000;
    switch((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v20, 3, v22))
    {
      case 1u:
        break;
      case 2u:
        uint64_t v18 = 0x6C696176616E752ELL;
        unint64_t v23 = 0xEC000000656C6261;
        break;
      case 3u:
        uint64_t v18 = 0x756F6363416F6E2ELL;
        unint64_t v23 = 0xEA0000000000746ELL;
        break;
      default:
        uint64_t v24 = v0[290];
        uint64_t v25 = v0[289];
        uint64_t v26 = v0[288];
        (*(void (**)(uint64_t, void, uint64_t))(v25 + 32))(v24, v0[297], v26);
        v0[261] = 0;
        v0[262] = 0xE000000000000000;
        _StringGuts.grow(_:)(23);
        uint64_t v27 = v0[262];
        v0[259] = v0[261];
        v0[260] = v27;
        v28._object = (void *)0x8000000100375C60;
        v28._uint64_t countAndFlagsBits = 0xD000000000000014;
        String.append(_:)(v28);
        _print_unlocked<A, B>(_:_:)();
        v29._uint64_t countAndFlagsBits = 41;
        v29._object = (void *)0xE100000000000000;
        String.append(_:)(v29);
        uint64_t v18 = v0[259];
        unint64_t v23 = v0[260];
        (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
        break;
    }
    uint64_t v30 = v0[299];
    sub_1002CA068(v0[298], type metadata accessor for AccountService.State);
    *(void *)(v21 + 4) = sub_100037004(v18, v23, v0 + 269);
    swift_bridgeObjectRelease();
    sub_1002CA068(v30, type metadata accessor for AccountService.State);
    _os_log_impl((void *)&_mh_execute_header, v14, (os_log_type_t)v15, "accountStateStream event: %s", (uint8_t *)v21, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1002CA068(v0[299], type metadata accessor for AccountService.State);
  }

  uint64_t v31 = v0[296];
  sub_1002C9244(v0[300], v31, type metadata accessor for AccountService.State);
  uint64_t v32 = sub_100044014(&qword_1003EFE18);
  uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48);
  int v34 = v33(v31, 3, v32);
  if ((v34 - 1) < 2) {
    goto LABEL_18;
  }
  if (!v34)
  {
    (*(void (**)(void, void))(v0[289] + 8))(v0[296], v0[288]);
LABEL_18:
    sub_1002C9244(v0[300], v0[295], type metadata accessor for AccountService.State);
    unint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v35, v36))
    {
      os_log_type_t v61 = v36;
      uint64_t v37 = 0x6E776F6E6B6E752ELL;
      uint64_t v38 = v0[295];
      uint64_t v39 = v0[294];
      uint64_t v40 = v0[293];
      uint64_t v41 = swift_slowAlloc();
      v0[263] = swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 136315138;
      sub_1002C9244(v38, v39, type metadata accessor for AccountService.State);
      sub_1002C9244(v39, v40, type metadata accessor for AccountService.State);
      int v42 = v33(v40, 3, v32);
      unint64_t v43 = 0xE800000000000000;
      switch(v42)
      {
        case 1:
          break;
        case 2:
          uint64_t v37 = 0x6C696176616E752ELL;
          unint64_t v43 = 0xEC000000656C6261;
          break;
        case 3:
          uint64_t v37 = 0x756F6363416F6E2ELL;
          unint64_t v43 = 0xEA0000000000746ELL;
          break;
        default:
          uint64_t v44 = v0[290];
          uint64_t v45 = v0[289];
          uint64_t v46 = v0[288];
          (*(void (**)(uint64_t, void, uint64_t))(v45 + 32))(v44, v0[293], v46);
          v0[255] = 0;
          v0[256] = 0xE000000000000000;
          _StringGuts.grow(_:)(23);
          uint64_t v47 = v0[256];
          v0[257] = v0[255];
          v0[258] = v47;
          v48._object = (void *)0x8000000100375C60;
          v48._uint64_t countAndFlagsBits = 0xD000000000000014;
          String.append(_:)(v48);
          _print_unlocked<A, B>(_:_:)();
          v49._uint64_t countAndFlagsBits = 41;
          v49._object = (void *)0xE100000000000000;
          String.append(_:)(v49);
          uint64_t v37 = v0[257];
          unint64_t v43 = v0[258];
          (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v44, v46);
          break;
      }
      uint64_t v54 = v0[300];
      uint64_t v55 = v0[295];
      sub_1002CA068(v0[294], type metadata accessor for AccountService.State);
      *(void *)(v41 + 4) = sub_100037004(v37, v43, v0 + 263);
      swift_bridgeObjectRelease();
      sub_1002CA068(v55, type metadata accessor for AccountService.State);
      _os_log_impl((void *)&_mh_execute_header, v35, v61, "Ignoring %s", (uint8_t *)v41, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v52 = v54;
    }
    else
    {
      uint64_t v50 = v0[300];
      uint64_t v51 = v0[295];

      sub_1002CA068(v51, type metadata accessor for AccountService.State);
      uint64_t v52 = v50;
    }
    sub_1002CA068(v52, type metadata accessor for AccountService.State);
    v0[311] = v0[313];
    uint64_t v56 = v0[310];
    uint64_t v57 = v0[275];
    uint64_t v58 = (void *)swift_task_alloc();
    v0[312] = v58;
    void *v58 = v0;
    v58[1] = sub_1002C0A54;
    uint64_t v59 = v0[302];
    uint64_t v60 = v0[301];
    return AsyncStream.Iterator.next(isolation:)(v60, v57, v56, v59);
  }
  swift_asyncLet_begin();
  swift_asyncLet_begin();
  swift_asyncLet_begin();
  uint64_t v53 = v0[287];
  return _swift_asyncLet_get(v0 + 2, v53, sub_1002C16AC, v0 + 276);
}

uint64_t sub_1002C16AC(uint64_t a1, uint64_t a2)
{
  return _swift_asyncLet_get(v2 + 1296, a2, sub_1002C16C8, v2 + 2000);
}

uint64_t sub_1002C16C8(uint64_t a1, uint64_t a2)
{
  return _swift_asyncLet_get(v2 + 656, a2, sub_1002C16E4, v2 + 2256);
}

uint64_t sub_1002C16E4(uint64_t a1, uint64_t a2)
{
  return _swift_asyncLet_finish(v2 + 656, a2, sub_1002C1700, v2 + 1936);
}

uint64_t sub_1002C1700()
{
  return _swift_task_switch(sub_1002C171C, *(void *)(v0 + 2200), 0);
}

uint64_t sub_1002C171C(uint64_t a1, uint64_t a2)
{
  return _swift_asyncLet_finish(v2 + 1296, a2, sub_1002C1738, v2 + 2112);
}

uint64_t sub_1002C1738()
{
  return _swift_task_switch(sub_1002C1754, *(void *)(v0 + 2200), 0);
}

uint64_t sub_1002C1754()
{
  return _swift_asyncLet_finish(v0 + 16, *(void *)(v0 + 2296), sub_1002C1774, v0 + 2160);
}

uint64_t sub_1002C1774()
{
  return _swift_task_switch(sub_1002C1790, *(void *)(v0 + 2200), 0);
}

uint64_t sub_1002C1790()
{
  sub_1002CA068(v0[300], type metadata accessor for AccountService.State);
  v0[311] = v0[313];
  uint64_t v1 = v0[310];
  uint64_t v2 = v0[275];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[312] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1002C0A54;
  uint64_t v4 = v0[302];
  uint64_t v5 = v0[301];
  return AsyncStream.Iterator.next(isolation:)(v5, v2, v1, v4);
}

uint64_t sub_1002C186C()
{
  return _swift_task_switch(sub_1002C1888, v0, 0);
}

uint64_t sub_1002C1888()
{
  uint64_t v9 = v0;
  if (qword_1003EC430 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100044058(v1, (uint64_t)qword_10040C330);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    *(void *)(v0 + 16) = sub_100037004(0xD000000000000018, 0x8000000100379590, &v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%{public}s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  if (qword_1003EC448 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100044014(&qword_1003EFE58);
  sub_100044058(v5, (uint64_t)qword_1003F3CD8);
  *(unsigned char *)(v0 + 40) = 0;
  swift_beginAccess();
  ManagedDefault.wrappedValue.setter();
  swift_endAccess();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1002C1AB8()
{
  swift_bridgeObjectRelease();
  swift_release();
  sub_10000A520(v0 + OBJC_IVAR____TtC13findmylocated14NITokenService_accountStateStream, &qword_1003F0120);
  sub_10000A520(v0 + OBJC_IVAR____TtC13findmylocated14NITokenService_cloudKitAccountStateStream, &qword_1003F3F70);
  sub_10000A520(v0 + OBJC_IVAR____TtC13findmylocated14NITokenService_dataManagerStateStream, &qword_1003F3430);
  sub_10000A520(v0 + OBJC_IVAR____TtC13findmylocated14NITokenService_locationServicesToggleStream, &qword_1003F3F68);
  sub_10000A520(v0 + OBJC_IVAR____TtC13findmylocated14NITokenService_appDeletionStream, &qword_1003F3F58);
  swift_release();
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_1002C1B80()
{
  return type metadata accessor for NITokenService();
}

uint64_t type metadata accessor for NITokenService()
{
  uint64_t result = qword_1003F3D58;
  if (!qword_1003F3D58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1002C1BD4()
{
  sub_1002C1DCC(319, (unint64_t *)&qword_1003EF918, (uint64_t *)&unk_1003EF920);
  if (v0 <= 0x3F)
  {
    sub_1002C1DCC(319, (unint64_t *)&qword_1003F3D78, &qword_1003F3D80);
    if (v1 <= 0x3F)
    {
      sub_1002C1DCC(319, (unint64_t *)&qword_1003F2E90, (uint64_t *)&unk_1003F2E98);
      if (v2 <= 0x3F)
      {
        sub_1002C1DCC(319, &qword_1003F3D88, &qword_1003F3D90);
        if (v3 <= 0x3F)
        {
          sub_1002C1DCC(319, &qword_1003F3D98, (uint64_t *)&unk_1003F3DA0);
          if (v4 <= 0x3F) {
            swift_updateClassMetadata2();
          }
        }
      }
    }
  }
}

void sub_1002C1DCC(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    sub_10004AE58(a3);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1002C1E1C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  __chkstk_darwin(v2 - 8);
  swift_defaultActor_initialize();
  strcpy((char *)(v0 + 112), "NITokenService");
  *(unsigned char *)(v0 + 127) = -18;
  type metadata accessor for WorkItemQueue();
  UUID.init()();
  *(void *)(v0 + 128) = WorkItemQueue.__allocating_init(identifier:)();
  uint64_t v3 = v0 + OBJC_IVAR____TtC13findmylocated14NITokenService_accountStateStream;
  uint64_t v4 = sub_100044014((uint64_t *)&unk_1003EF920);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = v1 + OBJC_IVAR____TtC13findmylocated14NITokenService_cloudKitAccountStateStream;
  uint64_t v6 = sub_100044014(&qword_1003F3D80);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = v1 + OBJC_IVAR____TtC13findmylocated14NITokenService_dataManagerStateStream;
  uint64_t v8 = sub_100044014((uint64_t *)&unk_1003F2E98);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = v1 + OBJC_IVAR____TtC13findmylocated14NITokenService_locationServicesToggleStream;
  uint64_t v10 = sub_100044014(&qword_1003F3D90);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t v11 = v1 + OBJC_IVAR____TtC13findmylocated14NITokenService_appDeletionStream;
  uint64_t v12 = sub_100044014((uint64_t *)&unk_1003F3DA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(void *)(v1 + OBJC_IVAR____TtC13findmylocated14NITokenService_tokenRequestActivity) = 0;
  return v1;
}

uint64_t sub_1002C207C()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10004A274;
  return _swift_task_switch(sub_1002C1888, v0, 0);
}

uint64_t sub_1002C2120(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  uint64_t v5 = type metadata accessor for NITokenService();
  *uint64_t v4 = v2;
  v4[1] = sub_10004A274;
  return ActorServiceProtocol.startup()(v5, a2);
}

uint64_t sub_1002C21CC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100018CD0;
  return sub_1002B3BC4();
}

uint64_t sub_1002C2258()
{
  return ActorServiceProtocol.description.getter();
}

uint64_t sub_1002C22C4()
{
  return sub_1002CA564(&qword_1003F3F18, (void (*)(uint64_t))type metadata accessor for NITokenService);
}

uint64_t sub_1002C230C()
{
  return sub_1002CA564(qword_1003F3F20, (void (*)(uint64_t))type metadata accessor for NITokenService);
}

uint64_t sub_1002C2354(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1000801A4;
  return sub_100312680(a1);
}

uint64_t sub_1002C23F0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10012BBD4;
  return sub_1003130D8();
}

uint64_t sub_1002C2480(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a2;
  return _swift_task_switch(sub_1002C249C, a2, 0);
}

uint64_t sub_1002C249C()
{
  sub_10031A2D8(86400.0);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002C250C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10012BBD4;
  return sub_100312680(a1);
}

uint64_t sub_1002C25A8(uint64_t a1)
{
  v2[6] = a1;
  v2[7] = v1;
  v2[8] = *v1;
  sub_100044014(&qword_1003F29E0);
  v2[9] = swift_task_alloc();
  sub_100044014(&qword_1003EFCD0);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  return _swift_task_switch(sub_1002C26A4, v1, 0);
}

uint64_t sub_1002C26A4()
{
  uint64_t v21 = v0;
  if (qword_1003EC430 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[11];
  uint64_t v3 = type metadata accessor for Logger();
  v0[12] = sub_100044058(v3, (uint64_t)qword_10040C330);
  sub_100013210(v1, v2, &qword_1003EFCD0);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = v0[11];
  if (v6)
  {
    uint64_t v8 = v0[10];
    uint64_t v9 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136446466;
    v0[4] = sub_100037004(0xD000000000000019, 0x8000000100379620, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v9 + 12) = 2080;
    sub_100013210(v7, v8, &qword_1003EFCD0);
    uint64_t v10 = type metadata accessor for Device();
    uint64_t v11 = *(void *)(v10 - 8);
    int v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10);
    uint64_t v13 = v0[10];
    if (v12 == 1)
    {
      sub_10000A520(v0[10], &qword_1003EFCD0);
      uint64_t v14 = 0;
      unint64_t v15 = 0xE000000000000000;
    }
    else
    {
      uint64_t v14 = Device.description.getter();
      unint64_t v15 = v16;
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v10);
    }
    uint64_t v17 = v0[11];
    v0[5] = sub_100037004(v14, v15, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000A520(v17, &qword_1003EFCD0);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%{public}s meDevice: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10000A520(v0[11], &qword_1003EFCD0);
  }

  uint64_t v18 = (void *)swift_task_alloc();
  v0[13] = v18;
  *uint64_t v18 = v0;
  v18[1] = sub_1002C29E0;
  return sub_1002DCD20();
}

uint64_t sub_1002C29E0(char a1)
{
  uint64_t v4 = (void *)*v2;
  v4[14] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[7];
    return _swift_task_switch(sub_1002C3A64, v5, 0);
  }
  else if (a1)
  {
    BOOL v6 = (void *)swift_task_alloc();
    v4[15] = v6;
    *BOOL v6 = v4;
    v6[1] = sub_1002C2BB0;
    return daemon.getter();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v4[1];
    return v7();
  }
}

uint64_t sub_1002C2BB0(uint64_t a1)
{
  uint64_t v2 = (void *)*v1;
  uint64_t v9 = (void *)*v1;
  v2[16] = a1;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  v2[17] = v3;
  uint64_t v4 = type metadata accessor for Daemon();
  v2[18] = v4;
  uint64_t v5 = type metadata accessor for DataManager(0);
  uint64_t v6 = sub_1002CA564(&qword_1003ECCA8, (void (*)(uint64_t))&type metadata accessor for Daemon);
  v2[19] = v6;
  uint64_t v7 = sub_1002CA564(&qword_1003ECCC0, (void (*)(uint64_t))type metadata accessor for DataManager);
  *uint64_t v3 = v9;
  v3[1] = sub_1002C2D90;
  return ActorServiceDaemon.getService<A>()(v4, v5, v6, v7);
}

uint64_t sub_1002C2D90(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[20] = a1;
  v3[21] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = v3[7];
    uint64_t v5 = sub_1002C3CB0;
  }
  else
  {
    uint64_t v6 = v3[7];
    swift_release();
    uint64_t v5 = sub_1002C2EB8;
    uint64_t v4 = v6;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_1002C2EB8()
{
  char v1 = sub_1002C890C();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  if (v1)
  {
    if (v4)
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Eligible to generate token and is finding capable. Checking if we need to generate tokens.", v5, 2u);
      swift_slowDealloc();
    }

    uint64_t v6 = (void *)swift_task_alloc();
    v0[30] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1002C3654;
    uint64_t v7 = v0[9];
    return sub_100312680(v7);
  }
  else
  {
    if (v4)
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Eligible to generate token, but not finding capable. Revoking all tokens.", v9, 2u);
      swift_slowDealloc();
    }

    uint64_t v10 = (void *)swift_task_alloc();
    v0[22] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_1002C3090;
    return daemon.getter();
  }
}

uint64_t sub_1002C3090(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  *(void *)(v3 + 184) = a1;
  swift_task_dealloc();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 192) = v5;
  uint64_t v6 = type metadata accessor for CloudStorageService();
  uint64_t v7 = sub_1002CA564(&qword_1003EF450, (void (*)(uint64_t))type metadata accessor for CloudStorageService);
  *uint64_t v5 = v4;
  v5[1] = sub_1002C3244;
  uint64_t v8 = *(void *)(v2 + 152);
  uint64_t v9 = *(void *)(v2 + 144);
  return ActorServiceDaemon.getService<A>()(v9, v6, v8, v7);
}

uint64_t sub_1002C3244(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[25] = a1;
  v3[26] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = v3[7];
    uint64_t v5 = sub_1002C3F04;
  }
  else
  {
    uint64_t v6 = v3[7];
    swift_release();
    uint64_t v5 = sub_1002C336C;
    uint64_t v4 = v6;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_1002C336C()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[8];
  sub_1002CA564(qword_1003F3F20, (void (*)(uint64_t))type metadata accessor for NITokenService);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[27] = v5;
  v5[2] = v2;
  v5[3] = v1;
  v5[4] = v3;
  v5[5] = v4;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[28] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1002C34A4;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)();
}

uint64_t sub_1002C34A4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 232) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 56);
    uint64_t v4 = sub_1002C4164;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 56);
    swift_task_dealloc();
    uint64_t v4 = sub_1002C35CC;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1002C35CC()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002C3654()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 72);
  uint64_t v2 = *(void *)(*(void *)v0 + 56);
  swift_task_dealloc();
  sub_10000A520(v1, &qword_1003F29E0);
  return _swift_task_switch(sub_1002C3788, v2, 0);
}

uint64_t sub_1002C3788()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v4 = sub_1002CA564(qword_1003F3F20, (void (*)(uint64_t))type metadata accessor for NITokenService);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[31] = v5;
  v5[2] = v1;
  v5[3] = v2;
  v5[4] = v3;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[32] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1002C38BC;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v6, (char *)&type metadata for () + 8, (char *)&type metadata for () + 8, v2, v4, &unk_1003F40B0, v5, (char *)&type metadata for () + 8);
}

uint64_t sub_1002C38BC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1002C39E8, v1, 0);
}

uint64_t sub_1002C39E8()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002C3A64()
{
  uint64_t v9 = v0;
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136446466;
    v0[2] = sub_100037004(0xD000000000000019, 0x8000000100379620, &v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v3 + 12) = 2114;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%{public}s error %{public}@", (uint8_t *)v3, 0x16u);
    sub_100044014(&qword_1003ECCC8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1002C3CB0()
{
  uint64_t v9 = v0;
  swift_release();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136446466;
    v0[2] = sub_100037004(0xD000000000000019, 0x8000000100379620, &v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v3 + 12) = 2114;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%{public}s error %{public}@", (uint8_t *)v3, 0x16u);
    sub_100044014(&qword_1003ECCC8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1002C3F04()
{
  uint64_t v9 = v0;
  swift_release();
  swift_release();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136446466;
    v0[2] = sub_100037004(0xD000000000000019, 0x8000000100379620, &v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v3 + 12) = 2114;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%{public}s error %{public}@", (uint8_t *)v3, 0x16u);
    sub_100044014(&qword_1003ECCC8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1002C4164()
{
  uint64_t v9 = v0;
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136446466;
    v0[2] = sub_100037004(0xD000000000000019, 0x8000000100379620, &v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v3 + 12) = 2114;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%{public}s error %{public}@", (uint8_t *)v3, 0x16u);
    sub_100044014(&qword_1003ECCC8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1002C43D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[15] = a5;
  v6[16] = a6;
  v6[13] = a3;
  v6[14] = a4;
  v6[12] = a2;
  sub_100044014((uint64_t *)&unk_1003F3C10);
  v6[17] = swift_task_alloc();
  v6[18] = swift_task_alloc();
  uint64_t v8 = *(void *)(sub_100044014(&qword_1003EF468) - 8);
  v6[19] = v8;
  v6[20] = *(void *)(v8 + 64);
  v6[21] = swift_task_alloc();
  v6[22] = swift_task_alloc();
  sub_100044014(&qword_1003EEEB8);
  v6[23] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for FriendSharedSecretsRecord();
  v6[24] = v9;
  v6[25] = *(void *)(v9 - 8);
  v6[26] = swift_task_alloc();
  sub_100044014(&qword_1003ECFB8);
  v6[27] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Handle();
  v6[28] = v10;
  v6[29] = *(void *)(v10 - 8);
  v6[30] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for UUID();
  v6[31] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v6[32] = v12;
  v6[33] = *(void *)(v12 + 64);
  v6[34] = swift_task_alloc();
  v6[35] = swift_task_alloc();
  uint64_t v13 = type metadata accessor for Friend();
  v6[36] = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  v6[37] = v14;
  v6[38] = *(void *)(v14 + 64);
  v6[39] = swift_task_alloc();
  v6[40] = swift_task_alloc();
  v6[41] = swift_task_alloc();
  v6[42] = swift_task_alloc();
  v6[43] = swift_task_alloc();
  return _swift_task_switch(sub_1002C4718, a3, 0);
}

uint64_t sub_1002C4718()
{
  sub_100044014(&qword_1003ECF40);
  uint64_t v1 = type metadata accessor for HandleType();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = swift_allocObject();
  *(void *)(v0 + 352) = v4;
  *(_OWORD *)(v4 + 16) = xmmword_100367D70;
  (*(void (**)(unint64_t, void, uint64_t))(v2 + 104))(v4 + v3, enum case for HandleType.follower(_:), v1);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 360) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1002C4874;
  return sub_100021584(v4, 1);
}

uint64_t sub_1002C4874(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 120);
  *(void *)(*(void *)v1 + 368) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1002C49A8, v2, 0);
}

uint64_t sub_1002C49A8()
{
  uint64_t v53 = v0;
  uint64_t v1 = *(void *)(*(void *)(v0 + 368) + 16);
  *(void *)(v0 + 376) = v1;
  if (v1)
  {
    uint64_t v2 = 0;
    uint64_t v3 = *(void *)(v0 + 296);
    *(_DWORD *)(v0 + 488) = *(_DWORD *)(v3 + 80);
    *(void *)(v0 + 384) = *(void *)(v3 + 72);
    *(void *)(v0 + 392) = *(void *)(v3 + 16);
    while (1)
    {
      uint64_t v4 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 392);
      uint64_t v5 = *(void *)(v0 + 344);
      uint64_t v6 = *(void *)(v0 + 288);
      unint64_t v7 = *(void *)(v0 + 368)
         + ((*(unsigned __int8 *)(v0 + 488) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 488))
         + *(void *)(v0 + 384) * v2;
      unint64_t v8 = (*(void *)(v0 + 296) + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      *(void *)(v0 + 400) = v2;
      *(void *)(v0 + 408) = v8;
      v4(v5, v7, v6);
      if (qword_1003EC430 != -1) {
        swift_once();
      }
      uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 392);
      uint64_t v10 = *(void *)(v0 + 336);
      uint64_t v11 = *(void *)(v0 + 344);
      uint64_t v12 = *(void *)(v0 + 288);
      uint64_t v13 = type metadata accessor for Logger();
      *(void *)(v0 + 416) = sub_100044058(v13, (uint64_t)qword_10040C330);
      v9(v10, v11, v12);
      uint64_t v14 = Logger.logObject.getter();
      os_log_type_t v15 = static os_log_type_t.default.getter();
      BOOL v16 = os_log_type_enabled(v14, v15);
      uint64_t v17 = *(void *)(v0 + 336);
      uint64_t v18 = *(void *)(v0 + 288);
      uint64_t v19 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 296) + 8);
      if (v16)
      {
        uint64_t v20 = swift_slowAlloc();
        uint64_t v52 = swift_slowAlloc();
        *(_DWORD *)uint64_t v20 = 141558275;
        *(void *)(v20 + 4) = 1752392040;
        *(_WORD *)(v20 + 12) = 2081;
        sub_1002CA564(&qword_1003EFEB8, (void (*)(uint64_t))&type metadata accessor for Friend);
        uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v20 + 14) = sub_100037004(v21, v22, &v52);
        swift_bridgeObjectRelease();
        unint64_t v23 = *v19;
        (*v19)(v17, v18);
        _os_log_impl((void *)&_mh_execute_header, v14, v15, "Revoking token from %{private,mask.hash}s", (uint8_t *)v20, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        unint64_t v23 = *v19;
        (*v19)(*(void *)(v0 + 336), *(void *)(v0 + 288));
      }

      uint64_t v24 = v23;
      *(void *)(v0 + 424) = v23;
      uint64_t v25 = *(void *)(v0 + 248);
      uint64_t v26 = *(void *)(v0 + 256);
      uint64_t v28 = *(void *)(v0 + 232);
      uint64_t v27 = *(void *)(v0 + 240);
      uint64_t v30 = *(void *)(v0 + 216);
      uint64_t v29 = *(void *)(v0 + 224);
      Friend.handle.getter();
      Handle.peerID.getter();
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
      int v31 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v30, 1, v25);
      uint64_t v32 = *(void *)(v0 + 216);
      if (v31 != 1) {
        break;
      }
      uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 392);
      uint64_t v34 = *(void *)(v0 + 344);
      uint64_t v35 = *(void *)(v0 + 328);
      uint64_t v36 = *(void *)(v0 + 288);
      sub_10000A520(*(void *)(v0 + 216), &qword_1003ECFB8);
      v33(v35, v34, v36);
      uint64_t v37 = Logger.logObject.getter();
      os_log_type_t v38 = static os_log_type_t.error.getter();
      BOOL v39 = os_log_type_enabled(v37, v38);
      uint64_t v40 = *(void *)(v0 + 344);
      uint64_t v41 = *(void *)(v0 + 328);
      uint64_t v42 = *(void *)(v0 + 288);
      if (v39)
      {
        uint64_t v43 = swift_slowAlloc();
        uint64_t v52 = swift_slowAlloc();
        *(_DWORD *)uint64_t v43 = 136446723;
        *(void *)(v43 + 4) = sub_100037004(0xD000000000000019, 0x8000000100379620, &v52);
        *(_WORD *)(v43 + 12) = 2160;
        *(void *)(v43 + 14) = 1752392040;
        *(_WORD *)(v43 + 22) = 2081;
        sub_1002CA564(&qword_1003EFEB8, (void (*)(uint64_t))&type metadata accessor for Friend);
        uint64_t v44 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v43 + 24) = sub_100037004(v44, v45, &v52);
        swift_bridgeObjectRelease();
        v24(v41, v42);
        _os_log_impl((void *)&_mh_execute_header, v37, v38, "%{public}s No peerID for follower %{private,mask.hash}s", (uint8_t *)v43, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        v24(v41, v42);
      }
      v24(v40, v42);
      uint64_t v2 = *(void *)(v0 + 400) + 1;
      if (v2 == *(void *)(v0 + 376)) {
        goto LABEL_16;
      }
    }
    uint64_t v46 = *(void *)(v0 + 280);
    uint64_t v47 = *(void *)(v0 + 248);
    uint64_t v48 = *(void *)(v0 + 256);
    Swift::String v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 32);
    *(void *)(v0 + 432) = v49;
    *(void *)(v0 + 440) = (v48 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v49(v46, v32, v47);
    return _swift_task_switch(sub_1002C5024, 0, 0);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v50 = *(uint64_t (**)(void))(v0 + 8);
    return v50();
  }
}

uint64_t sub_1002C5024()
{
  uint64_t v1 = (void *)swift_task_alloc();
  v0[56] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1002C50C4;
  uint64_t v2 = v0[35];
  uint64_t v3 = v0[23];
  return sub_1000F6B40(v3, v2);
}

uint64_t sub_1002C50C4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 456) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1002C5B30;
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = *(void *)(v2 + 120);
    uint64_t v3 = sub_1002C51E0;
  }
  return _swift_task_switch(v3, v4, 0);
}

uint64_t sub_1002C51E0()
{
  uint64_t v73 = v0;
  uint64_t v1 = *(void *)(v0 + 184);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 200) + 48))(v1, 1, *(void *)(v0 + 192)) == 1)
  {
    uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 392);
    uint64_t v3 = *(void *)(v0 + 344);
    uint64_t v4 = *(void *)(v0 + 320);
    uint64_t v5 = *(void *)(v0 + 288);
    sub_10000A520(v1, &qword_1003EEEB8);
    v2(v4, v3, v5);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    BOOL v8 = os_log_type_enabled(v6, v7);
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v0 + 424);
    uint64_t v10 = *(void *)(v0 + 344);
    uint64_t v11 = *(void *)(v0 + 320);
    uint64_t v12 = *(void *)(v0 + 288);
    if (v8)
    {
      uint64_t v71 = *(void (**)(uint64_t, uint64_t))(v0 + 424);
      uint64_t v13 = swift_slowAlloc();
      uint64_t v72 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136446723;
      *(void *)(v0 + 72) = sub_100037004(0xD000000000000019, 0x8000000100379620, &v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v13 + 12) = 2160;
      *(void *)(v0 + 80) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v13 + 22) = 2081;
      sub_1002CA564(&qword_1003EFEB8, (void (*)(uint64_t))&type metadata accessor for Friend);
      uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 88) = sub_100037004(v14, v15, &v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v71(v11, v12);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s Missing friendSharedSecretsRecord for %{private,mask.hash}s.", (uint8_t *)v13, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v71(v10, v12);
    }
    else
    {

      v9(v11, v12);
      v9(v10, v12);
    }
    (*(void (**)(void, void))(*(void *)(v0 + 256) + 8))(*(void *)(v0 + 280), *(void *)(v0 + 248));
    uint64_t v23 = *(void *)(v0 + 400) + 1;
    if (v23 == *(void *)(v0 + 376))
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
      return v24();
    }
    while (1)
    {
      uint64_t v29 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 392);
      uint64_t v30 = *(void *)(v0 + 344);
      uint64_t v31 = *(void *)(v0 + 288);
      unint64_t v32 = *(void *)(v0 + 368)
          + ((*(unsigned __int8 *)(v0 + 488) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 488))
          + *(void *)(v0 + 384) * v23;
      unint64_t v33 = (*(void *)(v0 + 296) + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      *(void *)(v0 + 400) = v23;
      *(void *)(v0 + 408) = v33;
      v29(v30, v32, v31);
      if (qword_1003EC430 != -1) {
        swift_once();
      }
      uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 392);
      uint64_t v35 = *(void *)(v0 + 336);
      uint64_t v36 = *(void *)(v0 + 344);
      uint64_t v37 = *(void *)(v0 + 288);
      uint64_t v38 = type metadata accessor for Logger();
      *(void *)(v0 + 416) = sub_100044058(v38, (uint64_t)qword_10040C330);
      v34(v35, v36, v37);
      BOOL v39 = Logger.logObject.getter();
      os_log_type_t v40 = static os_log_type_t.default.getter();
      BOOL v41 = os_log_type_enabled(v39, v40);
      uint64_t v42 = *(void *)(v0 + 336);
      uint64_t v43 = *(void *)(v0 + 288);
      uint64_t v44 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 296) + 8);
      if (v41)
      {
        uint64_t v45 = swift_slowAlloc();
        uint64_t v72 = swift_slowAlloc();
        *(_DWORD *)uint64_t v45 = 141558275;
        *(void *)(v45 + 4) = 1752392040;
        *(_WORD *)(v45 + 12) = 2081;
        sub_1002CA564(&qword_1003EFEB8, (void (*)(uint64_t))&type metadata accessor for Friend);
        uint64_t v46 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v45 + 14) = sub_100037004(v46, v47, &v72);
        swift_bridgeObjectRelease();
        uint64_t v48 = *v44;
        (*v44)(v42, v43);
        _os_log_impl((void *)&_mh_execute_header, v39, v40, "Revoking token from %{private,mask.hash}s", (uint8_t *)v45, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        uint64_t v48 = *v44;
        (*v44)(*(void *)(v0 + 336), *(void *)(v0 + 288));
      }

      Swift::String v49 = v48;
      *(void *)(v0 + 424) = v48;
      uint64_t v50 = *(void *)(v0 + 248);
      uint64_t v51 = *(void *)(v0 + 256);
      uint64_t v53 = *(void *)(v0 + 232);
      uint64_t v52 = *(void *)(v0 + 240);
      uint64_t v55 = *(void *)(v0 + 216);
      uint64_t v54 = *(void *)(v0 + 224);
      Friend.handle.getter();
      Handle.peerID.getter();
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v52, v54);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v55, 1, v50) != 1) {
        break;
      }
      uint64_t v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 392);
      uint64_t v57 = *(void *)(v0 + 344);
      uint64_t v58 = *(void *)(v0 + 328);
      uint64_t v59 = *(void *)(v0 + 288);
      sub_10000A520(*(void *)(v0 + 216), &qword_1003ECFB8);
      v56(v58, v57, v59);
      uint64_t v60 = Logger.logObject.getter();
      os_log_type_t v61 = static os_log_type_t.error.getter();
      BOOL v62 = os_log_type_enabled(v60, v61);
      uint64_t v63 = *(void *)(v0 + 344);
      uint64_t v64 = *(void *)(v0 + 328);
      uint64_t v65 = *(void *)(v0 + 288);
      if (v62)
      {
        uint64_t v26 = swift_slowAlloc();
        uint64_t v72 = swift_slowAlloc();
        *(_DWORD *)uint64_t v26 = 136446723;
        *(void *)(v26 + 4) = sub_100037004(0xD000000000000019, 0x8000000100379620, &v72);
        *(_WORD *)(v26 + 12) = 2160;
        *(void *)(v26 + 14) = 1752392040;
        *(_WORD *)(v26 + 22) = 2081;
        sub_1002CA564(&qword_1003EFEB8, (void (*)(uint64_t))&type metadata accessor for Friend);
        uint64_t v27 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v26 + 24) = sub_100037004(v27, v28, &v72);
        swift_bridgeObjectRelease();
        v49(v64, v65);
        _os_log_impl((void *)&_mh_execute_header, v60, v61, "%{public}s No peerID for follower %{private,mask.hash}s", (uint8_t *)v26, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        v49(v64, v65);
      }
      v49(v63, v65);
      uint64_t v23 = *(void *)(v0 + 400) + 1;
      if (v23 == *(void *)(v0 + 376)) {
        goto LABEL_7;
      }
    }
    uint64_t v66 = *(void *)(v0 + 280);
    uint64_t v67 = *(void *)(v0 + 248);
    uint64_t v68 = *(void *)(v0 + 256);
    uint64_t v69 = *(void *)(v0 + 216);
    uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 32);
    *(void *)(v0 + 432) = v70;
    *(void *)(v0 + 440) = (v68 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v70(v66, v69, v67);
    uint64_t v21 = sub_1002C5024;
    uint64_t v22 = 0;
  }
  else
  {
    uint64_t v16 = *(void *)(v0 + 280);
    uint64_t v17 = *(void *)(v0 + 208);
    uint64_t v18 = *(void *)(v0 + 128);
    uint64_t v19 = *(void *)(v0 + 112);
    sub_1002C9F3C(v1, v17, (uint64_t (*)(void))type metadata accessor for FriendSharedSecretsRecord);
    uint64_t v20 = (void *)swift_task_alloc();
    *(void *)(v0 + 464) = v20;
    v20[2] = v17;
    v20[3] = v16;
    void v20[4] = v18;
    uint64_t v21 = sub_1002C5D04;
    uint64_t v22 = v19;
  }
  return _swift_task_switch(v21, v22, 0);
}

uint64_t sub_1002C5B30()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1002C5B9C, v1, 0);
}

uint64_t sub_1002C5B9C()
{
  (*(void (**)(void, void))(v0 + 424))(*(void *)(v0 + 344), *(void *)(v0 + 288));
  (*(void (**)(void, void))(*(void *)(v0 + 256) + 8))(*(void *)(v0 + 280), *(void *)(v0 + 248));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002C5D04()
{
  uint64_t v5 = (uint64_t (*)(uint64_t, void *, uint64_t))((char *)&async function pointer to dispatch thunk of CloudKitStorage.changeSet(block:)
                                                        + async function pointer to dispatch thunk of CloudKitStorage.changeSet(block:));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[59] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1002C5DCC;
  uint64_t v2 = v0[58];
  uint64_t v3 = v0[22];
  return v5(v3, &unk_1003F40D0, v2);
}

uint64_t sub_1002C5DCC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 480) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 112);
    uint64_t v4 = sub_1002C6928;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 120);
    swift_task_dealloc();
    uint64_t v4 = sub_1002C5EF4;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1002C5EF4()
{
  uint64_t v96 = v0;
  uint64_t v93 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 432);
  unint64_t v82 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 392);
  uint64_t v1 = *(unsigned __int8 *)(v0 + 488);
  uint64_t v2 = *(void *)(v0 + 312);
  uint64_t v83 = *(void *)(v0 + 304);
  uint64_t v3 = *(void *)(v0 + 288);
  uint64_t v90 = *(void *)(v0 + 296);
  uint64_t v79 = v3;
  uint64_t v4 = *(void *)(v0 + 272);
  uint64_t v5 = *(void *)(v0 + 256);
  uint64_t v6 = *(void *)(v0 + 248);
  uint64_t v8 = *(void *)(v0 + 168);
  uint64_t v7 = *(void *)(v0 + 176);
  uint64_t v80 = *(void *)(v0 + 160);
  uint64_t v81 = *(void *)(v0 + 344);
  uint64_t v9 = *(void *)(v0 + 144);
  uint64_t v76 = *(void *)(v0 + 280);
  uint64_t v77 = *(void *)(v0 + 152);
  uint64_t v86 = v9;
  uint64_t v91 = *(void *)(v0 + 136);
  uint64_t v78 = *(void *)(v0 + 264) + v1;
  uint64_t v88 = *(void *)(v0 + 120);
  uint64_t v89 = *(void *)(v0 + 128);
  uint64_t v84 = *(void *)(v0 + 112);
  uint64_t v85 = type metadata accessor for TaskPriority();
  uint64_t v87 = *(void *)(v85 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v87 + 56))(v9, 1, 1, v85);
  sub_100013210(v7, v8, &qword_1003EF468);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v76, v6);
  v82(v2, v81, v3);
  unint64_t v10 = (*(unsigned __int8 *)(v77 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
  unint64_t v11 = (v80 + *(unsigned __int8 *)(v5 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v12 = (v78 + v11) & ~v1;
  unint64_t v13 = (v83 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = (char *)swift_allocObject();
  *((void *)v14 + 2) = 0;
  *((void *)v14 + 3) = 0;
  *((void *)v14 + 4) = v84;
  sub_100013B50(v8, (uint64_t)&v14[v10], &qword_1003EF468);
  v93(&v14[v11], v4, v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v90 + 32))(&v14[v12], v2, v79);
  *(void *)&v14[v13] = v88;
  *(void *)&v14[(v13 + 15) & 0xFFFFFFFFFFFFFFF8] = v89;
  sub_100013210(v86, v91, (uint64_t *)&unk_1003F3C10);
  LODWORD(v13) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v87 + 48))(v91, 1, v85);
  swift_retain();
  swift_retain();
  uint64_t v15 = *(void *)(v0 + 136);
  if (v13 == 1)
  {
    sub_10000A520(*(void *)(v0 + 136), (uint64_t *)&unk_1003F3C10);
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v15, v85);
  }
  if (*((void *)v14 + 2))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v18 = v17;
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v16 = 0;
    uint64_t v18 = 0;
  }
  uint64_t v19 = **(void **)(v0 + 96);
  uint64_t v20 = v18 | v16;
  if (v18 | v16)
  {
    uint64_t v20 = v0 + 16;
    *(void *)(v0 + 16) = 0;
    *(void *)(v0 + 24) = 0;
    *(void *)(v0 + 32) = v16;
    *(void *)(v0 + 40) = v18;
  }
  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v0 + 424);
  uint64_t v22 = *(void *)(v0 + 344);
  uint64_t v23 = *(void *)(v0 + 288);
  uint64_t v94 = *(void *)(v0 + 280);
  uint64_t v24 = *(void *)(v0 + 256);
  uint64_t v92 = *(void *)(v0 + 248);
  uint64_t v25 = *(void *)(v0 + 208);
  uint64_t v26 = *(void *)(v0 + 176);
  uint64_t v27 = *(void *)(v0 + 144);
  *(void *)(v0 + 48) = 1;
  *(void *)(v0 + 56) = v20;
  *(void *)(v0 + 64) = v19;
  swift_task_create();
  swift_release();
  sub_10000A520(v27, (uint64_t *)&unk_1003F3C10);
  sub_10000A520(v26, &qword_1003EF468);
  v21(v22, v23);
  sub_1002CA068(v25, (uint64_t (*)(void))type metadata accessor for FriendSharedSecretsRecord);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v94, v92);
  uint64_t v28 = *(void *)(v0 + 400) + 1;
  if (v28 == *(void *)(v0 + 376))
  {
LABEL_10:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
    return v29();
  }
  else
  {
    while (1)
    {
      uint64_t v34 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 392);
      uint64_t v35 = *(void *)(v0 + 344);
      uint64_t v36 = *(void *)(v0 + 288);
      unint64_t v37 = *(void *)(v0 + 368)
          + ((*(unsigned __int8 *)(v0 + 488) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 488))
          + *(void *)(v0 + 384) * v28;
      unint64_t v38 = (*(void *)(v0 + 296) + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      *(void *)(v0 + 400) = v28;
      *(void *)(v0 + 408) = v38;
      v34(v35, v37, v36);
      if (qword_1003EC430 != -1) {
        swift_once();
      }
      BOOL v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 392);
      uint64_t v40 = *(void *)(v0 + 336);
      uint64_t v41 = *(void *)(v0 + 344);
      uint64_t v42 = *(void *)(v0 + 288);
      uint64_t v43 = type metadata accessor for Logger();
      *(void *)(v0 + 416) = sub_100044058(v43, (uint64_t)qword_10040C330);
      v39(v40, v41, v42);
      uint64_t v44 = Logger.logObject.getter();
      os_log_type_t v45 = static os_log_type_t.default.getter();
      BOOL v46 = os_log_type_enabled(v44, v45);
      uint64_t v47 = *(void *)(v0 + 336);
      uint64_t v48 = *(void *)(v0 + 288);
      Swift::String v49 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 296) + 8);
      if (v46)
      {
        uint64_t v50 = swift_slowAlloc();
        v95[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v50 = 141558275;
        *(void *)(v50 + 4) = 1752392040;
        *(_WORD *)(v50 + 12) = 2081;
        sub_1002CA564(&qword_1003EFEB8, (void (*)(uint64_t))&type metadata accessor for Friend);
        uint64_t v51 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v50 + 14) = sub_100037004(v51, v52, v95);
        swift_bridgeObjectRelease();
        uint64_t v53 = *v49;
        (*v49)(v47, v48);
        _os_log_impl((void *)&_mh_execute_header, v44, v45, "Revoking token from %{private,mask.hash}s", (uint8_t *)v50, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        uint64_t v53 = *v49;
        (*v49)(*(void *)(v0 + 336), *(void *)(v0 + 288));
      }

      uint64_t v54 = v53;
      *(void *)(v0 + 424) = v53;
      uint64_t v55 = *(void *)(v0 + 248);
      uint64_t v56 = *(void *)(v0 + 256);
      uint64_t v58 = *(void *)(v0 + 232);
      uint64_t v57 = *(void *)(v0 + 240);
      uint64_t v60 = *(void *)(v0 + 216);
      uint64_t v59 = *(void *)(v0 + 224);
      Friend.handle.getter();
      Handle.peerID.getter();
      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v57, v59);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v60, 1, v55) != 1) {
        break;
      }
      os_log_type_t v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 392);
      uint64_t v62 = *(void *)(v0 + 344);
      uint64_t v63 = *(void *)(v0 + 328);
      uint64_t v64 = *(void *)(v0 + 288);
      sub_10000A520(*(void *)(v0 + 216), &qword_1003ECFB8);
      v61(v63, v62, v64);
      uint64_t v65 = Logger.logObject.getter();
      os_log_type_t v66 = static os_log_type_t.error.getter();
      BOOL v67 = os_log_type_enabled(v65, v66);
      uint64_t v68 = *(void *)(v0 + 344);
      uint64_t v69 = *(void *)(v0 + 328);
      uint64_t v70 = *(void *)(v0 + 288);
      if (v67)
      {
        uint64_t v31 = swift_slowAlloc();
        v95[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v31 = 136446723;
        *(void *)(v31 + 4) = sub_100037004(0xD000000000000019, 0x8000000100379620, v95);
        *(_WORD *)(v31 + 12) = 2160;
        *(void *)(v31 + 14) = 1752392040;
        *(_WORD *)(v31 + 22) = 2081;
        sub_1002CA564(&qword_1003EFEB8, (void (*)(uint64_t))&type metadata accessor for Friend);
        uint64_t v32 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v31 + 24) = sub_100037004(v32, v33, v95);
        swift_bridgeObjectRelease();
        v54(v69, v70);
        _os_log_impl((void *)&_mh_execute_header, v65, v66, "%{public}s No peerID for follower %{private,mask.hash}s", (uint8_t *)v31, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        v54(v69, v70);
      }
      v54(v68, v70);
      uint64_t v28 = *(void *)(v0 + 400) + 1;
      if (v28 == *(void *)(v0 + 376)) {
        goto LABEL_10;
      }
    }
    uint64_t v71 = *(void *)(v0 + 280);
    uint64_t v72 = *(void *)(v0 + 248);
    uint64_t v73 = *(void *)(v0 + 256);
    uint64_t v74 = *(void *)(v0 + 216);
    unint64_t v75 = *(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 32);
    *(void *)(v0 + 432) = v75;
    *(void *)(v0 + 440) = (v73 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v75(v71, v74, v72);
    return _swift_task_switch(sub_1002C5024, 0, 0);
  }
}

uint64_t sub_1002C6928()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return _swift_task_switch(sub_1002C69A0, v1, 0);
}

uint64_t sub_1002C69A0()
{
  uint64_t v1 = *(void *)(v0 + 208);
  (*(void (**)(void, void))(v0 + 424))(*(void *)(v0 + 344), *(void *)(v0 + 288));
  sub_1002CA068(v1, (uint64_t (*)(void))type metadata accessor for FriendSharedSecretsRecord);
  (*(void (**)(void, void))(*(void *)(v0 + 256) + 8))(*(void *)(v0 + 280), *(void *)(v0 + 248));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1002C6B28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return _swift_task_switch(sub_1002C6B4C, 0, 0);
}

uint64_t sub_1002C6B4C()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 32);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v2;
  uint64_t v3 = type metadata accessor for FriendSharedSecretsRecord();
  uint64_t v4 = sub_1002CA564(&qword_1003EF710, (void (*)(uint64_t))type metadata accessor for FriendSharedSecretsRecord);
  *uint64_t v2 = v0;
  v2[1] = sub_1002C6C64;
  uint64_t v5 = *(void *)(v0 + 24);
  return CloudKitChangeSet.Adaptor.update<A>(record:updateBlock:)(v5, sub_1002CA54C, v1, v3, v4);
}

uint64_t sub_1002C6C64()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1002C6DA0, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1002C6DA0()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002C6E04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1003EC430 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_100044058(v8, (uint64_t)qword_10040C330);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v21 = a1;
    unint64_t v12 = (uint8_t *)v11;
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)unint64_t v12 = 136446210;
    sub_1002CA564(&qword_1003ECF68, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v22 = sub_100037004(v13, v14, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Removing incomingSharedSecret for %{public}s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    a1 = v21;
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

  uint64_t v15 = type metadata accessor for FriendSharedSecretsRecord();
  uint64_t v16 = a1 + *(int *)(v15 + 32);
  sub_1000440E8(*(void *)v16, *(void *)(v16 + 8));
  *(_OWORD *)uint64_t v16 = xmmword_10036CD90;
  uint64_t v17 = a1 + *(int *)(v15 + 36);
  sub_10000A520(v17, (uint64_t *)&unk_1003EE800);
  uint64_t v18 = type metadata accessor for Date();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
}

uint64_t sub_1002C7120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[5] = a4;
  uint64_t v9 = type metadata accessor for Handle();
  v8[10] = v9;
  v8[11] = *(void *)(v9 - 8);
  v8[12] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Friend();
  v8[13] = v10;
  v8[14] = *(void *)(v10 - 8);
  v8[15] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for UUID();
  v8[16] = v11;
  v8[17] = *(void *)(v11 - 8);
  v8[18] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for CloudKitCoordinator.Database();
  v8[19] = v12;
  v8[20] = *(void *)(v12 - 8);
  v8[21] = swift_task_alloc();
  return _swift_task_switch(sub_1002C7300, 0, 0);
}

uint64_t sub_1002C7300()
{
  uint64_t v1 = v0[5];
  (*(void (**)(void, void, void))(v0[20] + 104))(v0[21], enum case for CloudKitCoordinator.Database.private(_:), v0[19]);
  return _swift_task_switch(sub_1002C7388, v1, 0);
}

uint64_t sub_1002C7388()
{
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of CloudKitStorage.apply(changeSet:database:)
                                                + async function pointer to dispatch thunk of CloudKitStorage.apply(changeSet:database:));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[22] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1002C743C;
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[6];
  return v5(v3, v2);
}

uint64_t sub_1002C743C()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[5];
    uint64_t v4 = sub_1002C7570;
  }
  else
  {
    (*(void (**)(void, void))(v2[20] + 8))(v2[21], v2[19]);
    uint64_t v4 = sub_1002C7678;
    uint64_t v3 = 0;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1002C7570()
{
  (*(void (**)(void, void))(v0[20] + 8))(v0[21], v0[19]);
  return _swift_task_switch(sub_1002C75E8, 0, 0);
}

uint64_t sub_1002C75E8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002C7678()
{
  unint64_t v33 = v0;
  if (qword_1003EC430 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[17];
  uint64_t v1 = v0[18];
  uint64_t v4 = v0[15];
  uint64_t v3 = v0[16];
  uint64_t v5 = v0[13];
  uint64_t v6 = v0[14];
  uint64_t v8 = v0[7];
  uint64_t v7 = v0[8];
  uint64_t v9 = type metadata accessor for Logger();
  sub_100044058(v9, (uint64_t)qword_10040C330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v8, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v7, v5);
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v14 = v0[17];
  uint64_t v13 = v0[18];
  uint64_t v15 = v0[15];
  uint64_t v16 = v0[16];
  uint64_t v18 = v0[13];
  uint64_t v17 = v0[14];
  if (v12)
  {
    uint64_t v19 = v0[12];
    uint64_t v30 = v0[11];
    uint64_t v31 = v0[10];
    uint64_t v29 = v0[15];
    uint64_t v20 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 136446723;
    sub_1002CA564(&qword_1003ECF68, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[2] = sub_100037004(v21, v22, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v16);
    *(_WORD *)(v20 + 12) = 2160;
    v0[3] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 22) = 2081;
    Friend.handle.getter();
    uint64_t v23 = Handle.identifier.getter();
    unint64_t v25 = v24;
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v19, v31);
    v0[4] = sub_100037004(v23, v25, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v29, v18);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Successfully removed incomingSharedSecret for %{public}s %{private,mask.hash}s\")", (uint8_t *)v20, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v14 + 8))(v0[18], v0[16]);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v18);
  }
  uint64_t v26 = (void *)swift_task_alloc();
  v0[24] = v26;
  *uint64_t v26 = v0;
  v26[1] = sub_1002C7A30;
  uint64_t v27 = v0[8];
  return sub_1002F352C(v27);
}

uint64_t sub_1002C7A30()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1002C7BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[10] = a3;
  v4[11] = a4;
  v4[9] = a2;
  sub_100044014((uint64_t *)&unk_1003F3C10);
  v4[12] = swift_task_alloc();
  v4[13] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Friend();
  v4[14] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v4[15] = v7;
  v4[16] = *(void *)(v7 + 64);
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  return _swift_task_switch(sub_1002C7CD0, a3, 0);
}

uint64_t sub_1002C7CD0()
{
  sub_100044014(&qword_1003ECF40);
  uint64_t v1 = type metadata accessor for HandleType();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = swift_allocObject();
  *(void *)(v0 + 160) = v4;
  *(_OWORD *)(v4 + 16) = xmmword_100367D70;
  (*(void (**)(unint64_t, void, uint64_t))(v2 + 104))(v4 + v3, enum case for HandleType.follower(_:), v1);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1002C7E2C;
  return sub_100021584(v4, 1);
}

uint64_t sub_1002C7E2C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 88);
  *(void *)(*(void *)v1 + 176) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1002C7F60, v2, 0);
}

uint64_t sub_1002C7F60()
{
  uint64_t v51 = v0;
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 120);
    uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    v3 += 16;
    uint64_t v4 = v5;
    uint64_t v6 = *(unsigned __int8 *)(v3 + 64);
    uint64_t v7 = v1 + ((v6 + 32) & ~v6);
    uint64_t v48 = (void (**)(uint64_t, uint64_t))(v3 - 8);
    uint64_t v43 = (v6 + 40) & ~v6;
    uint64_t v41 = *(void *)(v3 + 56);
    uint64_t v42 = (void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    Swift::String v49 = v5;
    do
    {
      uint64_t v46 = v7;
      uint64_t v47 = v2;
      ((void (*)(void))v4)(*(void *)(v0 + 152));
      if (qword_1003EC430 != -1) {
        swift_once();
      }
      uint64_t v11 = *(void *)(v0 + 144);
      uint64_t v12 = *(void *)(v0 + 152);
      uint64_t v13 = *(void *)(v0 + 112);
      uint64_t v14 = type metadata accessor for Logger();
      sub_100044058(v14, (uint64_t)qword_10040C330);
      v4(v11, v12, v13);
      uint64_t v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.default.getter();
      BOOL v17 = os_log_type_enabled(v15, v16);
      uint64_t v18 = *(void *)(v0 + 144);
      uint64_t v19 = *(void *)(v0 + 112);
      if (v17)
      {
        uint64_t v20 = swift_slowAlloc();
        uint64_t v50 = swift_slowAlloc();
        *(_DWORD *)uint64_t v20 = 141558275;
        *(void *)(v20 + 4) = 1752392040;
        *(_WORD *)(v20 + 12) = 2081;
        sub_1002CA564(&qword_1003EFEB8, (void (*)(uint64_t))&type metadata accessor for Friend);
        uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v20 + 14) = sub_100037004(v21, v22, &v50);
        swift_bridgeObjectRelease();
        os_log_type_t v45 = *v48;
        (*v48)(v18, v19);
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "Generate token for %{private,mask.hash}s", (uint8_t *)v20, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        os_log_type_t v45 = *v48;
        (*v48)(*(void *)(v0 + 144), *(void *)(v0 + 112));
      }

      uint64_t v23 = *(void *)(v0 + 152);
      uint64_t v24 = *(void *)(v0 + 136);
      uint64_t v26 = *(void *)(v0 + 104);
      uint64_t v25 = *(void *)(v0 + 112);
      uint64_t v27 = *(void *)(v0 + 88);
      uint64_t v44 = *(void *)(v0 + 96);
      uint64_t v28 = type metadata accessor for TaskPriority();
      uint64_t v29 = *(void *)(v28 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56))(v26, 1, 1, v28);
      v49(v24, v23, v25);
      uint64_t v30 = (void *)swift_allocObject();
      void v30[2] = 0;
      uint64_t v31 = v30 + 2;
      uint64_t v30[3] = 0;
      v30[4] = v27;
      (*v42)((char *)v30 + v43, v24, v25);
      sub_100013210(v26, v44, (uint64_t *)&unk_1003F3C10);
      LODWORD(v23) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v44, 1, v28);
      swift_retain();
      uint64_t v32 = *(void *)(v0 + 96);
      if (v23 == 1)
      {
        sub_10000A520(*(void *)(v0 + 96), (uint64_t *)&unk_1003F3C10);
        if (!*v31) {
          goto LABEL_13;
        }
      }
      else
      {
        TaskPriority.rawValue.getter();
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32, v28);
        if (!*v31)
        {
LABEL_13:
          uint64_t v33 = 0;
          uint64_t v35 = 0;
          goto LABEL_14;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v33 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v35 = v34;
      swift_unknownObjectRelease();
LABEL_14:
      uint64_t v36 = **(void **)(v0 + 72);
      uint64_t v37 = swift_allocObject();
      *(void *)(v37 + 16) = &unk_1003F40C0;
      *(void *)(v37 + 24) = v30;
      uint64_t v38 = v35 | v33;
      if (v35 | v33)
      {
        uint64_t v38 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v33;
        *(void *)(v0 + 40) = v35;
      }
      uint64_t v8 = *(void *)(v0 + 152);
      uint64_t v10 = *(void *)(v0 + 104);
      uint64_t v9 = *(void *)(v0 + 112);
      *(void *)(v0 + 48) = 1;
      *(void *)(v0 + 56) = v38;
      *(void *)(v0 + 64) = v36;
      swift_task_create();
      swift_release();
      sub_10000A520(v10, (uint64_t *)&unk_1003F3C10);
      v45(v8, v9);
      uint64_t v7 = v46 + v41;
      uint64_t v2 = v47 - 1;
      uint64_t v4 = v49;
    }
    while (v47 != 1);
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v39 = *(uint64_t (**)(void))(v0 + 8);
  return v39();
}

uint64_t sub_1002C8504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return _swift_task_switch(sub_1002C8524, a4, 0);
}

uint64_t sub_1002C8524()
{
  sub_1002DCA64(*(void *)(v0 + 24));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_1002C8584(unint64_t a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 0uLL:
    case 3uLL:
    case 0xAuLL:
      return result;
    case 1uLL:
      unint64_t result = 0xD000000000000014;
      break;
    case 2uLL:
      unint64_t result = 0x64696C61766E692ELL;
      break;
    case 4uLL:
      unint64_t result = 0xD000000000000013;
      break;
    case 5uLL:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 6uLL:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 7uLL:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 8uLL:
      unint64_t result = 0xD000000000000024;
      break;
    case 9uLL:
      unint64_t result = 0xD000000000000019;
      break;
    case 0xBuLL:
      unint64_t result = 0xD000000000000015;
      break;
    case 0xCuLL:
      unint64_t result = 0xD000000000000014;
      break;
    case 0xDuLL:
      unint64_t result = 0xD000000000000013;
      break;
    case 0xEuLL:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 0xFuLL:
      unint64_t result = 0xD000000000000010;
      break;
    case 0x10uLL:
      unint64_t result = 0xD000000000000011;
      break;
    case 0x11uLL:
      unint64_t result = 0xD000000000000019;
      break;
    case 0x12uLL:
      unint64_t result = 0xD000000000000016;
      break;
    case 0x13uLL:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 0x14uLL:
      unint64_t result = 0x67696C45746F6E2ELL;
      break;
    case 0x15uLL:
      unint64_t result = 0xD000000000000020;
      break;
    case 0x16uLL:
      unint64_t result = 0xD000000000000016;
      break;
    case 0x17uLL:
      unint64_t result = 0xD000000000000017;
      break;
    case 0x18uLL:
      unint64_t result = 0x6E776F6E6B6E752ELL;
      break;
    default:
      strcpy((char *)v6, ".underlying(");
      BYTE5(v6[1]) = 0;
      HIWORD(v6[1]) = -5120;
      sub_1002CA834(a1);
      swift_errorRetain();
      sub_100044014(&qword_1003F4B30);
      v4._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v4);
      swift_bridgeObjectRelease();
      v5._uint64_t countAndFlagsBits = 41;
      v5._object = (void *)0xE100000000000000;
      String.append(_:)(v5);
      sub_1002CA844(a1);
      unint64_t result = v6[0];
      break;
  }
  return result;
}

unint64_t sub_1002C8884()
{
  return sub_1002C8584(*v0);
}

uint64_t sub_1002C888C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100052FAC(v0, qword_10040C360);
  sub_100044058(v0, (uint64_t)qword_10040C360);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_1002C890C()
{
  unsigned __int8 v0 = [[[self deviceCapabilities] supportsExtendedDistanceMeasurement];
  swift_unknownObjectRelease();
  if (v0) {
    return 1;
  }
  if (static SystemInfo.isInternalBuild.getter())
  {
    id v2 = [self standardUserDefaults];
    NSString v3 = String._bridgeToObjectiveC()();
    unsigned int v4 = [v2 BOOLForKey:v3];
  }
  else
  {
    unsigned int v4 = 0;
  }
  uint64_t v5 = static SystemInfo.arrowChipID.getter();
  if (v6) {
    uint64_t v7 = -1;
  }
  else {
    uint64_t v7 = v5;
  }
  if (qword_1003EC430 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_100044058(v8, (uint64_t)qword_10040C330);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 67109632;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 8) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 18) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "isFindingCapable supportsExtendedDistanceMeasurement: %{BOOL}d. arrowChipID: %ld. AllowPeopleFindingOnR1Devices: %{BOOL}d", (uint8_t *)v11, 0x18u);
    swift_slowDealloc();
  }

  if (v7 == 8198) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t sub_1002C8B38()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002C8B70(uint64_t a1)
{
  return sub_10035DE94(a1);
}

uint64_t sub_1002C8B78(uint64_t a1)
{
  return sub_100359884(a1);
}

uint64_t sub_1002C8B80()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10004A274;
  return sub_1002B8D24();
}

uint64_t sub_1002C8C1C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10004A274;
  return sub_1002BA54C();
}

uint64_t sub_1002C8CB8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10004A274;
  return sub_1002BDDFC();
}

uint64_t sub_1002C8D54()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10004A274;
  return sub_1002BF050();
}

uint64_t sub_1002C8DF0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10004A274;
  return sub_1002C0290();
}

uint64_t sub_1002C8E8C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10004A274;
  return sub_1002C0320();
}

uint64_t sub_1002C8F28(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10004A274;
  return sub_100325270(a1);
}

uint64_t sub_1002C8FD4(uint64_t a1, uint64_t a2)
{
  char v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *char v6 = v3;
  v6[1] = sub_10004A274;
  return sub_100325A54(a1, a2, v2);
}

uint64_t sub_1002C907C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10004A274;
  return sub_1002C2354(a1);
}

uint64_t sub_1002C9118()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10004A274;
  return sub_100018CD0();
}

uint64_t sub_1002C91A8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10004A274;
  return sub_1002C23F0();
}

uint64_t sub_1002C9244(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002C92B0()
{
  uint64_t v2 = *(void *)(type metadata accessor for Handle() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = *(void *)(v0 + v4);
  uint64_t v8 = *(void *)(v0 + v5);
  uint64_t v9 = *(void *)(v0 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));
  os_log_type_t v10 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v10;
  *os_log_type_t v10 = v1;
  v10[1] = sub_10004A274;
  return sub_1002E74CC(v6, v7, v8, v9);
}

uint64_t sub_1002C93D4()
{
  return sub_1002C9A04((uint64_t (*)(void))&type metadata accessor for Handle);
}

uint64_t sub_1002C93EC(uint64_t a1, char a2)
{
  char v5 = a2 & 1;
  uint64_t v6 = *(void *)(type metadata accessor for Handle() - 8);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  void *v8 = v3;
  v8[1] = sub_10004A274;
  return sub_1002EA530(a1, v5, v7);
}

uint64_t sub_1002C9504()
{
  uint64_t v1 = type metadata accessor for Handle();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1002C95B8()
{
  uint64_t v2 = *(void *)(type metadata accessor for Handle() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = *(void *)(v0 + v4);
  uint64_t v8 = *(void *)(v0 + v5);
  uint64_t v9 = *(void *)(v0 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v10;
  *uint64_t v10 = v1;
  v10[1] = sub_100018CD0;
  return sub_1002E74CC(v6, v7, v8, v9);
}

uint64_t sub_1002C96DC()
{
  return sub_1002C9A04((uint64_t (*)(void))&type metadata accessor for Handle);
}

uint64_t sub_1002C96F4(uint64_t a1, char a2)
{
  char v5 = a2 & 1;
  uint64_t v6 = *(void *)(type metadata accessor for Handle() - 8);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  void *v8 = v3;
  v8[1] = sub_100018CD0;
  return sub_1002EA530(a1, v5, v7);
}

uint64_t sub_1002C9808()
{
  uint64_t v1 = type metadata accessor for Friend();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1002C98E0()
{
  uint64_t v2 = *(void *)(type metadata accessor for Friend() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = v0 + v3;
  uint64_t v6 = *(void *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_10004A274;
  return sub_1002DD7B8(v4, v5, v6);
}

uint64_t sub_1002C99EC()
{
  return sub_1002C9A04((uint64_t (*)(void))&type metadata accessor for Friend);
}

uint64_t sub_1002C9A04(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v4 | 7;
  unint64_t v7 = ((*(void *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return _swift_deallocObject(v1, v7, v6);
}

uint64_t sub_1002C9AA8(uint64_t a1, char a2)
{
  char v5 = a2 & 1;
  uint64_t v6 = *(void *)(type metadata accessor for Friend() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v2 + v7;
  uint64_t v9 = *(void *)(v2 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  *uint64_t v10 = v3;
  v10[1] = sub_10004A274;
  return sub_1002E6924(a1, v5, v8, v9);
}

uint64_t sub_1002C9BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v9 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  *uint64_t v10 = v3;
  v10[1] = sub_10004A274;
  return sub_1002C43D0(a1, a2, v6, v7, v9, v8);
}

uint64_t sub_1002C9C84(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  void *v8 = v3;
  v8[1] = sub_10004A274;
  return sub_1002C7BA4(a1, a2, v6, v7);
}

uint64_t sub_1002C9D48()
{
  uint64_t v1 = type metadata accessor for Friend();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1002C9E1C()
{
  uint64_t v2 = *(void *)(type metadata accessor for Friend() - 8);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[2] = v3;
  v5[3] = v4;
  v5[1] = sub_10004A274;
  return _swift_task_switch(sub_1002C8524, v3, 0);
}

uint64_t sub_1002C9F04()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002C9F3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002C9FA4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_10004A274;
  *(void *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(void *)(v5 + 16) = a1;
  return _swift_task_switch(sub_1002C6B4C, 0, 0);
}

uint64_t sub_1002CA068(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1002CA0C8()
{
  uint64_t v1 = *(void *)(sub_100044014(&qword_1003EF468) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v15 = *(void *)(v1 + 64);
  uint64_t v17 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v17 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v14 = *(void *)(v4 + 64);
  uint64_t v16 = type metadata accessor for Friend();
  uint64_t v6 = *(void *)(v16 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v13 = *(void *)(v6 + 64);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v8 = type metadata accessor for CloudKitChangeSet();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v0 + v3, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0 + v3, v8);
  }
  uint64_t v10 = (v3 + v15 + v5) & ~v5;
  uint64_t v11 = (v10 + v14 + v7) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v10, v17);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v11, v16);
  swift_release();

  return _swift_deallocObject(v0, ((((v13 + v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | v5 | v7 | 7);
}

uint64_t sub_1002CA338(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_100044014(&qword_1003EF468) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(type metadata accessor for Friend() - 8);
  unint64_t v11 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = v1[2];
  uint64_t v13 = v1[3];
  uint64_t v14 = v1[4];
  uint64_t v15 = (uint64_t)v1 + v11;
  uint64_t v16 = *(void *)((char *)v1 + ((*(void *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v17;
  *uint64_t v17 = v2;
  v17[1] = sub_10004A274;
  return sub_1002C7120(a1, v12, v13, v14, (uint64_t)v1 + v5, (uint64_t)v1 + v8, v15, v16);
}

uint64_t sub_1002CA54C(uint64_t a1)
{
  return sub_1002C6E04(a1, *(void *)(v1 + 16));
}

uint64_t sub_1002CA554(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1002CA564(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002CA5AC()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10004A274;
  v2[2] = v0;
  return _swift_task_switch(sub_1002C249C, v0, 0);
}